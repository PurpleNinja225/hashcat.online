//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 4 .b8 c_append_helper[4096] = {255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 8 .b8 te0[1024] = {165, 99, 99, 198, 132, 124, 124, 248, 153, 119, 119, 238, 141, 123, 123, 246, 13, 242, 242, 255, 189, 107, 107, 214, 177, 111, 111, 222, 84, 197, 197, 145, 80, 48, 48, 96, 3, 1, 1, 2, 169, 103, 103, 206, 125, 43, 43, 86, 25, 254, 254, 231, 98, 215, 215, 181, 230, 171, 171, 77, 154, 118, 118, 236, 69, 202, 202, 143, 157, 130, 130, 31, 64, 201, 201, 137, 135, 125, 125, 250, 21, 250, 250, 239, 235, 89, 89, 178, 201, 71, 71, 142, 11, 240, 240, 251, 236, 173, 173, 65, 103, 212, 212, 179, 253, 162, 162, 95, 234, 175, 175, 69, 191, 156, 156, 35, 247, 164, 164, 83, 150, 114, 114, 228, 91, 192, 192, 155, 194, 183, 183, 117, 28, 253, 253, 225, 174, 147, 147, 61, 106, 38, 38, 76, 90, 54, 54, 108, 65, 63, 63, 126, 2, 247, 247, 245, 79, 204, 204, 131, 92, 52, 52, 104, 244, 165, 165, 81, 52, 229, 229, 209, 8, 241, 241, 249, 147, 113, 113, 226, 115, 216, 216, 171, 83, 49, 49, 98, 63, 21, 21, 42, 12, 4, 4, 8, 82, 199, 199, 149, 101, 35, 35, 70, 94, 195, 195, 157, 40, 24, 24, 48, 161, 150, 150, 55, 15, 5, 5, 10, 181, 154, 154, 47, 9, 7, 7, 14, 54, 18, 18, 36, 155, 128, 128, 27, 61, 226, 226, 223, 38, 235, 235, 205, 105, 39, 39, 78, 205, 178, 178, 127, 159, 117, 117, 234, 27, 9, 9, 18, 158, 131, 131, 29, 116, 44, 44, 88, 46, 26, 26, 52, 45, 27, 27, 54, 178, 110, 110, 220, 238, 90, 90, 180, 251, 160, 160, 91, 246, 82, 82, 164, 77, 59, 59, 118, 97, 214, 214, 183, 206, 179, 179, 125, 123, 41, 41, 82, 62, 227, 227, 221, 113, 47, 47, 94, 151, 132, 132, 19, 245, 83, 83, 166, 104, 209, 209, 185, 0, 0, 0, 0, 44, 237, 237, 193, 96, 32, 32, 64, 31, 252, 252, 227, 200, 177, 177, 121, 237, 91, 91, 182, 190, 106, 106, 212, 70, 203, 203, 141, 217, 190, 190, 103, 75, 57, 57, 114, 222, 74, 74, 148, 212, 76, 76, 152, 232, 88, 88, 176, 74, 207, 207, 133, 107, 208, 208, 187, 42, 239, 239, 197, 229, 170, 170, 79, 22, 251, 251, 237, 197, 67, 67, 134, 215, 77, 77, 154, 85, 51, 51, 102, 148, 133, 133, 17, 207, 69, 69, 138, 16, 249, 249, 233, 6, 2, 2, 4, 129, 127, 127, 254, 240, 80, 80, 160, 68, 60, 60, 120, 186, 159, 159, 37, 227, 168, 168, 75, 243, 81, 81, 162, 254, 163, 163, 93, 192, 64, 64, 128, 138, 143, 143, 5, 173, 146, 146, 63, 188, 157, 157, 33, 72, 56, 56, 112, 4, 245, 245, 241, 223, 188, 188, 99, 193, 182, 182, 119, 117, 218, 218, 175, 99, 33, 33, 66, 48, 16, 16, 32, 26, 255, 255, 229, 14, 243, 243, 253, 109, 210, 210, 191, 76, 205, 205, 129, 20, 12, 12, 24, 53, 19, 19, 38, 47, 236, 236, 195, 225, 95, 95, 190, 162, 151, 151, 53, 204, 68, 68, 136, 57, 23, 23, 46, 87, 196, 196, 147, 242, 167, 167, 85, 130, 126, 126, 252, 71, 61, 61, 122, 172, 100, 100, 200, 231, 93, 93, 186, 43, 25, 25, 50, 149, 115, 115, 230, 160, 96, 96, 192, 152, 129, 129, 25, 209, 79, 79, 158, 127, 220, 220, 163, 102, 34, 34, 68, 126, 42, 42, 84, 171, 144, 144, 59, 131, 136, 136, 11, 202, 70, 70, 140, 41, 238, 238, 199, 211, 184, 184, 107, 60, 20, 20, 40, 121, 222, 222, 167, 226, 94, 94, 188, 29, 11, 11, 22, 118, 219, 219, 173, 59, 224, 224, 219, 86, 50, 50, 100, 78, 58, 58, 116, 30, 10, 10, 20, 219, 73, 73, 146, 10, 6, 6, 12, 108, 36, 36, 72, 228, 92, 92, 184, 93, 194, 194, 159, 110, 211, 211, 189, 239, 172, 172, 67, 166, 98, 98, 196, 168, 145, 145, 57, 164, 149, 149, 49, 55, 228, 228, 211, 139, 121, 121, 242, 50, 231, 231, 213, 67, 200, 200, 139, 89, 55, 55, 110, 183, 109, 109, 218, 140, 141, 141, 1, 100, 213, 213, 177, 210, 78, 78, 156, 224, 169, 169, 73, 180, 108, 108, 216, 250, 86, 86, 172, 7, 244, 244, 243, 37, 234, 234, 207, 175, 101, 101, 202, 142, 122, 122, 244, 233, 174, 174, 71, 24, 8, 8, 16, 213, 186, 186, 111, 136, 120, 120, 240, 111, 37, 37, 74, 114, 46, 46, 92, 36, 28, 28, 56, 241, 166, 166, 87, 199, 180, 180, 115, 81, 198, 198, 151, 35, 232, 232, 203, 124, 221, 221, 161, 156, 116, 116, 232, 33, 31, 31, 62, 221, 75, 75, 150, 220, 189, 189, 97, 134, 139, 139, 13, 133, 138, 138, 15, 144, 112, 112, 224, 66, 62, 62, 124, 196, 181, 181, 113, 170, 102, 102, 204, 216, 72, 72, 144, 5, 3, 3, 6, 1, 246, 246, 247, 18, 14, 14, 28, 163, 97, 97, 194, 95, 53, 53, 106, 249, 87, 87, 174, 208, 185, 185, 105, 145, 134, 134, 23, 88, 193, 193, 153, 39, 29, 29, 58, 185, 158, 158, 39, 56, 225, 225, 217, 19, 248, 248, 235, 179, 152, 152, 43, 51, 17, 17, 34, 187, 105, 105, 210, 112, 217, 217, 169, 137, 142, 142, 7, 167, 148, 148, 51, 182, 155, 155, 45, 34, 30, 30, 60, 146, 135, 135, 21, 32, 233, 233, 201, 73, 206, 206, 135, 255, 85, 85, 170, 120, 40, 40, 80, 122, 223, 223, 165, 143, 140, 140, 3, 248, 161, 161, 89, 128, 137, 137, 9, 23, 13, 13, 26, 218, 191, 191, 101, 49, 230, 230, 215, 198, 66, 66, 132, 184, 104, 104, 208, 195, 65, 65, 130, 176, 153, 153, 41, 119, 45, 45, 90, 17, 15, 15, 30, 203, 176, 176, 123, 252, 84, 84, 168, 214, 187, 187, 109, 58, 22, 22, 44};
.const .align 8 .b8 te1[1024] = {99, 99, 198, 165, 124, 124, 248, 132, 119, 119, 238, 153, 123, 123, 246, 141, 242, 242, 255, 13, 107, 107, 214, 189, 111, 111, 222, 177, 197, 197, 145, 84, 48, 48, 96, 80, 1, 1, 2, 3, 103, 103, 206, 169, 43, 43, 86, 125, 254, 254, 231, 25, 215, 215, 181, 98, 171, 171, 77, 230, 118, 118, 236, 154, 202, 202, 143, 69, 130, 130, 31, 157, 201, 201, 137, 64, 125, 125, 250, 135, 250, 250, 239, 21, 89, 89, 178, 235, 71, 71, 142, 201, 240, 240, 251, 11, 173, 173, 65, 236, 212, 212, 179, 103, 162, 162, 95, 253, 175, 175, 69, 234, 156, 156, 35, 191, 164, 164, 83, 247, 114, 114, 228, 150, 192, 192, 155, 91, 183, 183, 117, 194, 253, 253, 225, 28, 147, 147, 61, 174, 38, 38, 76, 106, 54, 54, 108, 90, 63, 63, 126, 65, 247, 247, 245, 2, 204, 204, 131, 79, 52, 52, 104, 92, 165, 165, 81, 244, 229, 229, 209, 52, 241, 241, 249, 8, 113, 113, 226, 147, 216, 216, 171, 115, 49, 49, 98, 83, 21, 21, 42, 63, 4, 4, 8, 12, 199, 199, 149, 82, 35, 35, 70, 101, 195, 195, 157, 94, 24, 24, 48, 40, 150, 150, 55, 161, 5, 5, 10, 15, 154, 154, 47, 181, 7, 7, 14, 9, 18, 18, 36, 54, 128, 128, 27, 155, 226, 226, 223, 61, 235, 235, 205, 38, 39, 39, 78, 105, 178, 178, 127, 205, 117, 117, 234, 159, 9, 9, 18, 27, 131, 131, 29, 158, 44, 44, 88, 116, 26, 26, 52, 46, 27, 27, 54, 45, 110, 110, 220, 178, 90, 90, 180, 238, 160, 160, 91, 251, 82, 82, 164, 246, 59, 59, 118, 77, 214, 214, 183, 97, 179, 179, 125, 206, 41, 41, 82, 123, 227, 227, 221, 62, 47, 47, 94, 113, 132, 132, 19, 151, 83, 83, 166, 245, 209, 209, 185, 104, 0, 0, 0, 0, 237, 237, 193, 44, 32, 32, 64, 96, 252, 252, 227, 31, 177, 177, 121, 200, 91, 91, 182, 237, 106, 106, 212, 190, 203, 203, 141, 70, 190, 190, 103, 217, 57, 57, 114, 75, 74, 74, 148, 222, 76, 76, 152, 212, 88, 88, 176, 232, 207, 207, 133, 74, 208, 208, 187, 107, 239, 239, 197, 42, 170, 170, 79, 229, 251, 251, 237, 22, 67, 67, 134, 197, 77, 77, 154, 215, 51, 51, 102, 85, 133, 133, 17, 148, 69, 69, 138, 207, 249, 249, 233, 16, 2, 2, 4, 6, 127, 127, 254, 129, 80, 80, 160, 240, 60, 60, 120, 68, 159, 159, 37, 186, 168, 168, 75, 227, 81, 81, 162, 243, 163, 163, 93, 254, 64, 64, 128, 192, 143, 143, 5, 138, 146, 146, 63, 173, 157, 157, 33, 188, 56, 56, 112, 72, 245, 245, 241, 4, 188, 188, 99, 223, 182, 182, 119, 193, 218, 218, 175, 117, 33, 33, 66, 99, 16, 16, 32, 48, 255, 255, 229, 26, 243, 243, 253, 14, 210, 210, 191, 109, 205, 205, 129, 76, 12, 12, 24, 20, 19, 19, 38, 53, 236, 236, 195, 47, 95, 95, 190, 225, 151, 151, 53, 162, 68, 68, 136, 204, 23, 23, 46, 57, 196, 196, 147, 87, 167, 167, 85, 242, 126, 126, 252, 130, 61, 61, 122, 71, 100, 100, 200, 172, 93, 93, 186, 231, 25, 25, 50, 43, 115, 115, 230, 149, 96, 96, 192, 160, 129, 129, 25, 152, 79, 79, 158, 209, 220, 220, 163, 127, 34, 34, 68, 102, 42, 42, 84, 126, 144, 144, 59, 171, 136, 136, 11, 131, 70, 70, 140, 202, 238, 238, 199, 41, 184, 184, 107, 211, 20, 20, 40, 60, 222, 222, 167, 121, 94, 94, 188, 226, 11, 11, 22, 29, 219, 219, 173, 118, 224, 224, 219, 59, 50, 50, 100, 86, 58, 58, 116, 78, 10, 10, 20, 30, 73, 73, 146, 219, 6, 6, 12, 10, 36, 36, 72, 108, 92, 92, 184, 228, 194, 194, 159, 93, 211, 211, 189, 110, 172, 172, 67, 239, 98, 98, 196, 166, 145, 145, 57, 168, 149, 149, 49, 164, 228, 228, 211, 55, 121, 121, 242, 139, 231, 231, 213, 50, 200, 200, 139, 67, 55, 55, 110, 89, 109, 109, 218, 183, 141, 141, 1, 140, 213, 213, 177, 100, 78, 78, 156, 210, 169, 169, 73, 224, 108, 108, 216, 180, 86, 86, 172, 250, 244, 244, 243, 7, 234, 234, 207, 37, 101, 101, 202, 175, 122, 122, 244, 142, 174, 174, 71, 233, 8, 8, 16, 24, 186, 186, 111, 213, 120, 120, 240, 136, 37, 37, 74, 111, 46, 46, 92, 114, 28, 28, 56, 36, 166, 166, 87, 241, 180, 180, 115, 199, 198, 198, 151, 81, 232, 232, 203, 35, 221, 221, 161, 124, 116, 116, 232, 156, 31, 31, 62, 33, 75, 75, 150, 221, 189, 189, 97, 220, 139, 139, 13, 134, 138, 138, 15, 133, 112, 112, 224, 144, 62, 62, 124, 66, 181, 181, 113, 196, 102, 102, 204, 170, 72, 72, 144, 216, 3, 3, 6, 5, 246, 246, 247, 1, 14, 14, 28, 18, 97, 97, 194, 163, 53, 53, 106, 95, 87, 87, 174, 249, 185, 185, 105, 208, 134, 134, 23, 145, 193, 193, 153, 88, 29, 29, 58, 39, 158, 158, 39, 185, 225, 225, 217, 56, 248, 248, 235, 19, 152, 152, 43, 179, 17, 17, 34, 51, 105, 105, 210, 187, 217, 217, 169, 112, 142, 142, 7, 137, 148, 148, 51, 167, 155, 155, 45, 182, 30, 30, 60, 34, 135, 135, 21, 146, 233, 233, 201, 32, 206, 206, 135, 73, 85, 85, 170, 255, 40, 40, 80, 120, 223, 223, 165, 122, 140, 140, 3, 143, 161, 161, 89, 248, 137, 137, 9, 128, 13, 13, 26, 23, 191, 191, 101, 218, 230, 230, 215, 49, 66, 66, 132, 198, 104, 104, 208, 184, 65, 65, 130, 195, 153, 153, 41, 176, 45, 45, 90, 119, 15, 15, 30, 17, 176, 176, 123, 203, 84, 84, 168, 252, 187, 187, 109, 214, 22, 22, 44, 58};
.const .align 8 .b8 te2[1024] = {99, 198, 165, 99, 124, 248, 132, 124, 119, 238, 153, 119, 123, 246, 141, 123, 242, 255, 13, 242, 107, 214, 189, 107, 111, 222, 177, 111, 197, 145, 84, 197, 48, 96, 80, 48, 1, 2, 3, 1, 103, 206, 169, 103, 43, 86, 125, 43, 254, 231, 25, 254, 215, 181, 98, 215, 171, 77, 230, 171, 118, 236, 154, 118, 202, 143, 69, 202, 130, 31, 157, 130, 201, 137, 64, 201, 125, 250, 135, 125, 250, 239, 21, 250, 89, 178, 235, 89, 71, 142, 201, 71, 240, 251, 11, 240, 173, 65, 236, 173, 212, 179, 103, 212, 162, 95, 253, 162, 175, 69, 234, 175, 156, 35, 191, 156, 164, 83, 247, 164, 114, 228, 150, 114, 192, 155, 91, 192, 183, 117, 194, 183, 253, 225, 28, 253, 147, 61, 174, 147, 38, 76, 106, 38, 54, 108, 90, 54, 63, 126, 65, 63, 247, 245, 2, 247, 204, 131, 79, 204, 52, 104, 92, 52, 165, 81, 244, 165, 229, 209, 52, 229, 241, 249, 8, 241, 113, 226, 147, 113, 216, 171, 115, 216, 49, 98, 83, 49, 21, 42, 63, 21, 4, 8, 12, 4, 199, 149, 82, 199, 35, 70, 101, 35, 195, 157, 94, 195, 24, 48, 40, 24, 150, 55, 161, 150, 5, 10, 15, 5, 154, 47, 181, 154, 7, 14, 9, 7, 18, 36, 54, 18, 128, 27, 155, 128, 226, 223, 61, 226, 235, 205, 38, 235, 39, 78, 105, 39, 178, 127, 205, 178, 117, 234, 159, 117, 9, 18, 27, 9, 131, 29, 158, 131, 44, 88, 116, 44, 26, 52, 46, 26, 27, 54, 45, 27, 110, 220, 178, 110, 90, 180, 238, 90, 160, 91, 251, 160, 82, 164, 246, 82, 59, 118, 77, 59, 214, 183, 97, 214, 179, 125, 206, 179, 41, 82, 123, 41, 227, 221, 62, 227, 47, 94, 113, 47, 132, 19, 151, 132, 83, 166, 245, 83, 209, 185, 104, 209, 0, 0, 0, 0, 237, 193, 44, 237, 32, 64, 96, 32, 252, 227, 31, 252, 177, 121, 200, 177, 91, 182, 237, 91, 106, 212, 190, 106, 203, 141, 70, 203, 190, 103, 217, 190, 57, 114, 75, 57, 74, 148, 222, 74, 76, 152, 212, 76, 88, 176, 232, 88, 207, 133, 74, 207, 208, 187, 107, 208, 239, 197, 42, 239, 170, 79, 229, 170, 251, 237, 22, 251, 67, 134, 197, 67, 77, 154, 215, 77, 51, 102, 85, 51, 133, 17, 148, 133, 69, 138, 207, 69, 249, 233, 16, 249, 2, 4, 6, 2, 127, 254, 129, 127, 80, 160, 240, 80, 60, 120, 68, 60, 159, 37, 186, 159, 168, 75, 227, 168, 81, 162, 243, 81, 163, 93, 254, 163, 64, 128, 192, 64, 143, 5, 138, 143, 146, 63, 173, 146, 157, 33, 188, 157, 56, 112, 72, 56, 245, 241, 4, 245, 188, 99, 223, 188, 182, 119, 193, 182, 218, 175, 117, 218, 33, 66, 99, 33, 16, 32, 48, 16, 255, 229, 26, 255, 243, 253, 14, 243, 210, 191, 109, 210, 205, 129, 76, 205, 12, 24, 20, 12, 19, 38, 53, 19, 236, 195, 47, 236, 95, 190, 225, 95, 151, 53, 162, 151, 68, 136, 204, 68, 23, 46, 57, 23, 196, 147, 87, 196, 167, 85, 242, 167, 126, 252, 130, 126, 61, 122, 71, 61, 100, 200, 172, 100, 93, 186, 231, 93, 25, 50, 43, 25, 115, 230, 149, 115, 96, 192, 160, 96, 129, 25, 152, 129, 79, 158, 209, 79, 220, 163, 127, 220, 34, 68, 102, 34, 42, 84, 126, 42, 144, 59, 171, 144, 136, 11, 131, 136, 70, 140, 202, 70, 238, 199, 41, 238, 184, 107, 211, 184, 20, 40, 60, 20, 222, 167, 121, 222, 94, 188, 226, 94, 11, 22, 29, 11, 219, 173, 118, 219, 224, 219, 59, 224, 50, 100, 86, 50, 58, 116, 78, 58, 10, 20, 30, 10, 73, 146, 219, 73, 6, 12, 10, 6, 36, 72, 108, 36, 92, 184, 228, 92, 194, 159, 93, 194, 211, 189, 110, 211, 172, 67, 239, 172, 98, 196, 166, 98, 145, 57, 168, 145, 149, 49, 164, 149, 228, 211, 55, 228, 121, 242, 139, 121, 231, 213, 50, 231, 200, 139, 67, 200, 55, 110, 89, 55, 109, 218, 183, 109, 141, 1, 140, 141, 213, 177, 100, 213, 78, 156, 210, 78, 169, 73, 224, 169, 108, 216, 180, 108, 86, 172, 250, 86, 244, 243, 7, 244, 234, 207, 37, 234, 101, 202, 175, 101, 122, 244, 142, 122, 174, 71, 233, 174, 8, 16, 24, 8, 186, 111, 213, 186, 120, 240, 136, 120, 37, 74, 111, 37, 46, 92, 114, 46, 28, 56, 36, 28, 166, 87, 241, 166, 180, 115, 199, 180, 198, 151, 81, 198, 232, 203, 35, 232, 221, 161, 124, 221, 116, 232, 156, 116, 31, 62, 33, 31, 75, 150, 221, 75, 189, 97, 220, 189, 139, 13, 134, 139, 138, 15, 133, 138, 112, 224, 144, 112, 62, 124, 66, 62, 181, 113, 196, 181, 102, 204, 170, 102, 72, 144, 216, 72, 3, 6, 5, 3, 246, 247, 1, 246, 14, 28, 18, 14, 97, 194, 163, 97, 53, 106, 95, 53, 87, 174, 249, 87, 185, 105, 208, 185, 134, 23, 145, 134, 193, 153, 88, 193, 29, 58, 39, 29, 158, 39, 185, 158, 225, 217, 56, 225, 248, 235, 19, 248, 152, 43, 179, 152, 17, 34, 51, 17, 105, 210, 187, 105, 217, 169, 112, 217, 142, 7, 137, 142, 148, 51, 167, 148, 155, 45, 182, 155, 30, 60, 34, 30, 135, 21, 146, 135, 233, 201, 32, 233, 206, 135, 73, 206, 85, 170, 255, 85, 40, 80, 120, 40, 223, 165, 122, 223, 140, 3, 143, 140, 161, 89, 248, 161, 137, 9, 128, 137, 13, 26, 23, 13, 191, 101, 218, 191, 230, 215, 49, 230, 66, 132, 198, 66, 104, 208, 184, 104, 65, 130, 195, 65, 153, 41, 176, 153, 45, 90, 119, 45, 15, 30, 17, 15, 176, 123, 203, 176, 84, 168, 252, 84, 187, 109, 214, 187, 22, 44, 58, 22};
.const .align 8 .b8 te3[1024] = {198, 165, 99, 99, 248, 132, 124, 124, 238, 153, 119, 119, 246, 141, 123, 123, 255, 13, 242, 242, 214, 189, 107, 107, 222, 177, 111, 111, 145, 84, 197, 197, 96, 80, 48, 48, 2, 3, 1, 1, 206, 169, 103, 103, 86, 125, 43, 43, 231, 25, 254, 254, 181, 98, 215, 215, 77, 230, 171, 171, 236, 154, 118, 118, 143, 69, 202, 202, 31, 157, 130, 130, 137, 64, 201, 201, 250, 135, 125, 125, 239, 21, 250, 250, 178, 235, 89, 89, 142, 201, 71, 71, 251, 11, 240, 240, 65, 236, 173, 173, 179, 103, 212, 212, 95, 253, 162, 162, 69, 234, 175, 175, 35, 191, 156, 156, 83, 247, 164, 164, 228, 150, 114, 114, 155, 91, 192, 192, 117, 194, 183, 183, 225, 28, 253, 253, 61, 174, 147, 147, 76, 106, 38, 38, 108, 90, 54, 54, 126, 65, 63, 63, 245, 2, 247, 247, 131, 79, 204, 204, 104, 92, 52, 52, 81, 244, 165, 165, 209, 52, 229, 229, 249, 8, 241, 241, 226, 147, 113, 113, 171, 115, 216, 216, 98, 83, 49, 49, 42, 63, 21, 21, 8, 12, 4, 4, 149, 82, 199, 199, 70, 101, 35, 35, 157, 94, 195, 195, 48, 40, 24, 24, 55, 161, 150, 150, 10, 15, 5, 5, 47, 181, 154, 154, 14, 9, 7, 7, 36, 54, 18, 18, 27, 155, 128, 128, 223, 61, 226, 226, 205, 38, 235, 235, 78, 105, 39, 39, 127, 205, 178, 178, 234, 159, 117, 117, 18, 27, 9, 9, 29, 158, 131, 131, 88, 116, 44, 44, 52, 46, 26, 26, 54, 45, 27, 27, 220, 178, 110, 110, 180, 238, 90, 90, 91, 251, 160, 160, 164, 246, 82, 82, 118, 77, 59, 59, 183, 97, 214, 214, 125, 206, 179, 179, 82, 123, 41, 41, 221, 62, 227, 227, 94, 113, 47, 47, 19, 151, 132, 132, 166, 245, 83, 83, 185, 104, 209, 209, 0, 0, 0, 0, 193, 44, 237, 237, 64, 96, 32, 32, 227, 31, 252, 252, 121, 200, 177, 177, 182, 237, 91, 91, 212, 190, 106, 106, 141, 70, 203, 203, 103, 217, 190, 190, 114, 75, 57, 57, 148, 222, 74, 74, 152, 212, 76, 76, 176, 232, 88, 88, 133, 74, 207, 207, 187, 107, 208, 208, 197, 42, 239, 239, 79, 229, 170, 170, 237, 22, 251, 251, 134, 197, 67, 67, 154, 215, 77, 77, 102, 85, 51, 51, 17, 148, 133, 133, 138, 207, 69, 69, 233, 16, 249, 249, 4, 6, 2, 2, 254, 129, 127, 127, 160, 240, 80, 80, 120, 68, 60, 60, 37, 186, 159, 159, 75, 227, 168, 168, 162, 243, 81, 81, 93, 254, 163, 163, 128, 192, 64, 64, 5, 138, 143, 143, 63, 173, 146, 146, 33, 188, 157, 157, 112, 72, 56, 56, 241, 4, 245, 245, 99, 223, 188, 188, 119, 193, 182, 182, 175, 117, 218, 218, 66, 99, 33, 33, 32, 48, 16, 16, 229, 26, 255, 255, 253, 14, 243, 243, 191, 109, 210, 210, 129, 76, 205, 205, 24, 20, 12, 12, 38, 53, 19, 19, 195, 47, 236, 236, 190, 225, 95, 95, 53, 162, 151, 151, 136, 204, 68, 68, 46, 57, 23, 23, 147, 87, 196, 196, 85, 242, 167, 167, 252, 130, 126, 126, 122, 71, 61, 61, 200, 172, 100, 100, 186, 231, 93, 93, 50, 43, 25, 25, 230, 149, 115, 115, 192, 160, 96, 96, 25, 152, 129, 129, 158, 209, 79, 79, 163, 127, 220, 220, 68, 102, 34, 34, 84, 126, 42, 42, 59, 171, 144, 144, 11, 131, 136, 136, 140, 202, 70, 70, 199, 41, 238, 238, 107, 211, 184, 184, 40, 60, 20, 20, 167, 121, 222, 222, 188, 226, 94, 94, 22, 29, 11, 11, 173, 118, 219, 219, 219, 59, 224, 224, 100, 86, 50, 50, 116, 78, 58, 58, 20, 30, 10, 10, 146, 219, 73, 73, 12, 10, 6, 6, 72, 108, 36, 36, 184, 228, 92, 92, 159, 93, 194, 194, 189, 110, 211, 211, 67, 239, 172, 172, 196, 166, 98, 98, 57, 168, 145, 145, 49, 164, 149, 149, 211, 55, 228, 228, 242, 139, 121, 121, 213, 50, 231, 231, 139, 67, 200, 200, 110, 89, 55, 55, 218, 183, 109, 109, 1, 140, 141, 141, 177, 100, 213, 213, 156, 210, 78, 78, 73, 224, 169, 169, 216, 180, 108, 108, 172, 250, 86, 86, 243, 7, 244, 244, 207, 37, 234, 234, 202, 175, 101, 101, 244, 142, 122, 122, 71, 233, 174, 174, 16, 24, 8, 8, 111, 213, 186, 186, 240, 136, 120, 120, 74, 111, 37, 37, 92, 114, 46, 46, 56, 36, 28, 28, 87, 241, 166, 166, 115, 199, 180, 180, 151, 81, 198, 198, 203, 35, 232, 232, 161, 124, 221, 221, 232, 156, 116, 116, 62, 33, 31, 31, 150, 221, 75, 75, 97, 220, 189, 189, 13, 134, 139, 139, 15, 133, 138, 138, 224, 144, 112, 112, 124, 66, 62, 62, 113, 196, 181, 181, 204, 170, 102, 102, 144, 216, 72, 72, 6, 5, 3, 3, 247, 1, 246, 246, 28, 18, 14, 14, 194, 163, 97, 97, 106, 95, 53, 53, 174, 249, 87, 87, 105, 208, 185, 185, 23, 145, 134, 134, 153, 88, 193, 193, 58, 39, 29, 29, 39, 185, 158, 158, 217, 56, 225, 225, 235, 19, 248, 248, 43, 179, 152, 152, 34, 51, 17, 17, 210, 187, 105, 105, 169, 112, 217, 217, 7, 137, 142, 142, 51, 167, 148, 148, 45, 182, 155, 155, 60, 34, 30, 30, 21, 146, 135, 135, 201, 32, 233, 233, 135, 73, 206, 206, 170, 255, 85, 85, 80, 120, 40, 40, 165, 122, 223, 223, 3, 143, 140, 140, 89, 248, 161, 161, 9, 128, 137, 137, 26, 23, 13, 13, 101, 218, 191, 191, 215, 49, 230, 230, 132, 198, 66, 66, 208, 184, 104, 104, 130, 195, 65, 65, 41, 176, 153, 153, 90, 119, 45, 45, 30, 17, 15, 15, 123, 203, 176, 176, 168, 252, 84, 84, 109, 214, 187, 187, 44, 58, 22, 22};
.const .align 8 .b8 te4[1024] = {99, 99, 99, 99, 124, 124, 124, 124, 119, 119, 119, 119, 123, 123, 123, 123, 242, 242, 242, 242, 107, 107, 107, 107, 111, 111, 111, 111, 197, 197, 197, 197, 48, 48, 48, 48, 1, 1, 1, 1, 103, 103, 103, 103, 43, 43, 43, 43, 254, 254, 254, 254, 215, 215, 215, 215, 171, 171, 171, 171, 118, 118, 118, 118, 202, 202, 202, 202, 130, 130, 130, 130, 201, 201, 201, 201, 125, 125, 125, 125, 250, 250, 250, 250, 89, 89, 89, 89, 71, 71, 71, 71, 240, 240, 240, 240, 173, 173, 173, 173, 212, 212, 212, 212, 162, 162, 162, 162, 175, 175, 175, 175, 156, 156, 156, 156, 164, 164, 164, 164, 114, 114, 114, 114, 192, 192, 192, 192, 183, 183, 183, 183, 253, 253, 253, 253, 147, 147, 147, 147, 38, 38, 38, 38, 54, 54, 54, 54, 63, 63, 63, 63, 247, 247, 247, 247, 204, 204, 204, 204, 52, 52, 52, 52, 165, 165, 165, 165, 229, 229, 229, 229, 241, 241, 241, 241, 113, 113, 113, 113, 216, 216, 216, 216, 49, 49, 49, 49, 21, 21, 21, 21, 4, 4, 4, 4, 199, 199, 199, 199, 35, 35, 35, 35, 195, 195, 195, 195, 24, 24, 24, 24, 150, 150, 150, 150, 5, 5, 5, 5, 154, 154, 154, 154, 7, 7, 7, 7, 18, 18, 18, 18, 128, 128, 128, 128, 226, 226, 226, 226, 235, 235, 235, 235, 39, 39, 39, 39, 178, 178, 178, 178, 117, 117, 117, 117, 9, 9, 9, 9, 131, 131, 131, 131, 44, 44, 44, 44, 26, 26, 26, 26, 27, 27, 27, 27, 110, 110, 110, 110, 90, 90, 90, 90, 160, 160, 160, 160, 82, 82, 82, 82, 59, 59, 59, 59, 214, 214, 214, 214, 179, 179, 179, 179, 41, 41, 41, 41, 227, 227, 227, 227, 47, 47, 47, 47, 132, 132, 132, 132, 83, 83, 83, 83, 209, 209, 209, 209, 0, 0, 0, 0, 237, 237, 237, 237, 32, 32, 32, 32, 252, 252, 252, 252, 177, 177, 177, 177, 91, 91, 91, 91, 106, 106, 106, 106, 203, 203, 203, 203, 190, 190, 190, 190, 57, 57, 57, 57, 74, 74, 74, 74, 76, 76, 76, 76, 88, 88, 88, 88, 207, 207, 207, 207, 208, 208, 208, 208, 239, 239, 239, 239, 170, 170, 170, 170, 251, 251, 251, 251, 67, 67, 67, 67, 77, 77, 77, 77, 51, 51, 51, 51, 133, 133, 133, 133, 69, 69, 69, 69, 249, 249, 249, 249, 2, 2, 2, 2, 127, 127, 127, 127, 80, 80, 80, 80, 60, 60, 60, 60, 159, 159, 159, 159, 168, 168, 168, 168, 81, 81, 81, 81, 163, 163, 163, 163, 64, 64, 64, 64, 143, 143, 143, 143, 146, 146, 146, 146, 157, 157, 157, 157, 56, 56, 56, 56, 245, 245, 245, 245, 188, 188, 188, 188, 182, 182, 182, 182, 218, 218, 218, 218, 33, 33, 33, 33, 16, 16, 16, 16, 255, 255, 255, 255, 243, 243, 243, 243, 210, 210, 210, 210, 205, 205, 205, 205, 12, 12, 12, 12, 19, 19, 19, 19, 236, 236, 236, 236, 95, 95, 95, 95, 151, 151, 151, 151, 68, 68, 68, 68, 23, 23, 23, 23, 196, 196, 196, 196, 167, 167, 167, 167, 126, 126, 126, 126, 61, 61, 61, 61, 100, 100, 100, 100, 93, 93, 93, 93, 25, 25, 25, 25, 115, 115, 115, 115, 96, 96, 96, 96, 129, 129, 129, 129, 79, 79, 79, 79, 220, 220, 220, 220, 34, 34, 34, 34, 42, 42, 42, 42, 144, 144, 144, 144, 136, 136, 136, 136, 70, 70, 70, 70, 238, 238, 238, 238, 184, 184, 184, 184, 20, 20, 20, 20, 222, 222, 222, 222, 94, 94, 94, 94, 11, 11, 11, 11, 219, 219, 219, 219, 224, 224, 224, 224, 50, 50, 50, 50, 58, 58, 58, 58, 10, 10, 10, 10, 73, 73, 73, 73, 6, 6, 6, 6, 36, 36, 36, 36, 92, 92, 92, 92, 194, 194, 194, 194, 211, 211, 211, 211, 172, 172, 172, 172, 98, 98, 98, 98, 145, 145, 145, 145, 149, 149, 149, 149, 228, 228, 228, 228, 121, 121, 121, 121, 231, 231, 231, 231, 200, 200, 200, 200, 55, 55, 55, 55, 109, 109, 109, 109, 141, 141, 141, 141, 213, 213, 213, 213, 78, 78, 78, 78, 169, 169, 169, 169, 108, 108, 108, 108, 86, 86, 86, 86, 244, 244, 244, 244, 234, 234, 234, 234, 101, 101, 101, 101, 122, 122, 122, 122, 174, 174, 174, 174, 8, 8, 8, 8, 186, 186, 186, 186, 120, 120, 120, 120, 37, 37, 37, 37, 46, 46, 46, 46, 28, 28, 28, 28, 166, 166, 166, 166, 180, 180, 180, 180, 198, 198, 198, 198, 232, 232, 232, 232, 221, 221, 221, 221, 116, 116, 116, 116, 31, 31, 31, 31, 75, 75, 75, 75, 189, 189, 189, 189, 139, 139, 139, 139, 138, 138, 138, 138, 112, 112, 112, 112, 62, 62, 62, 62, 181, 181, 181, 181, 102, 102, 102, 102, 72, 72, 72, 72, 3, 3, 3, 3, 246, 246, 246, 246, 14, 14, 14, 14, 97, 97, 97, 97, 53, 53, 53, 53, 87, 87, 87, 87, 185, 185, 185, 185, 134, 134, 134, 134, 193, 193, 193, 193, 29, 29, 29, 29, 158, 158, 158, 158, 225, 225, 225, 225, 248, 248, 248, 248, 152, 152, 152, 152, 17, 17, 17, 17, 105, 105, 105, 105, 217, 217, 217, 217, 142, 142, 142, 142, 148, 148, 148, 148, 155, 155, 155, 155, 30, 30, 30, 30, 135, 135, 135, 135, 233, 233, 233, 233, 206, 206, 206, 206, 85, 85, 85, 85, 40, 40, 40, 40, 223, 223, 223, 223, 140, 140, 140, 140, 161, 161, 161, 161, 137, 137, 137, 137, 13, 13, 13, 13, 191, 191, 191, 191, 230, 230, 230, 230, 66, 66, 66, 66, 104, 104, 104, 104, 65, 65, 65, 65, 153, 153, 153, 153, 45, 45, 45, 45, 15, 15, 15, 15, 176, 176, 176, 176, 84, 84, 84, 84, 187, 187, 187, 187, 22, 22, 22, 22};
.const .align 8 .b8 td0[1024] = {80, 167, 244, 81, 83, 101, 65, 126, 195, 164, 23, 26, 150, 94, 39, 58, 203, 107, 171, 59, 241, 69, 157, 31, 171, 88, 250, 172, 147, 3, 227, 75, 85, 250, 48, 32, 246, 109, 118, 173, 145, 118, 204, 136, 37, 76, 2, 245, 252, 215, 229, 79, 215, 203, 42, 197, 128, 68, 53, 38, 143, 163, 98, 181, 73, 90, 177, 222, 103, 27, 186, 37, 152, 14, 234, 69, 225, 192, 254, 93, 2, 117, 47, 195, 18, 240, 76, 129, 163, 151, 70, 141, 198, 249, 211, 107, 231, 95, 143, 3, 149, 156, 146, 21, 235, 122, 109, 191, 218, 89, 82, 149, 45, 131, 190, 212, 211, 33, 116, 88, 41, 105, 224, 73, 68, 200, 201, 142, 106, 137, 194, 117, 120, 121, 142, 244, 107, 62, 88, 153, 221, 113, 185, 39, 182, 79, 225, 190, 23, 173, 136, 240, 102, 172, 32, 201, 180, 58, 206, 125, 24, 74, 223, 99, 130, 49, 26, 229, 96, 51, 81, 151, 69, 127, 83, 98, 224, 119, 100, 177, 132, 174, 107, 187, 28, 160, 129, 254, 148, 43, 8, 249, 88, 104, 72, 112, 25, 253, 69, 143, 135, 108, 222, 148, 183, 248, 123, 82, 35, 211, 115, 171, 226, 2, 75, 114, 87, 143, 31, 227, 42, 171, 85, 102, 7, 40, 235, 178, 3, 194, 181, 47, 154, 123, 197, 134, 165, 8, 55, 211, 242, 135, 40, 48, 178, 165, 191, 35, 186, 106, 3, 2, 92, 130, 22, 237, 43, 28, 207, 138, 146, 180, 121, 167, 240, 242, 7, 243, 161, 226, 105, 78, 205, 244, 218, 101, 213, 190, 5, 6, 31, 98, 52, 209, 138, 254, 166, 196, 157, 83, 46, 52, 160, 85, 243, 162, 50, 225, 138, 5, 117, 235, 246, 164, 57, 236, 131, 11, 170, 239, 96, 64, 6, 159, 113, 94, 81, 16, 110, 189, 249, 138, 33, 62, 61, 6, 221, 150, 174, 5, 62, 221, 70, 189, 230, 77, 181, 141, 84, 145, 5, 93, 196, 113, 111, 212, 6, 4, 255, 21, 80, 96, 36, 251, 152, 25, 151, 233, 189, 214, 204, 67, 64, 137, 119, 158, 217, 103, 189, 66, 232, 176, 136, 139, 137, 7, 56, 91, 25, 231, 219, 238, 200, 121, 71, 10, 124, 161, 233, 15, 66, 124, 201, 30, 132, 248, 0, 0, 0, 0, 131, 134, 128, 9, 72, 237, 43, 50, 172, 112, 17, 30, 78, 114, 90, 108, 251, 255, 14, 253, 86, 56, 133, 15, 30, 213, 174, 61, 39, 57, 45, 54, 100, 217, 15, 10, 33, 166, 92, 104, 209, 84, 91, 155, 58, 46, 54, 36, 177, 103, 10, 12, 15, 231, 87, 147, 210, 150, 238, 180, 158, 145, 155, 27, 79, 197, 192, 128, 162, 32, 220, 97, 105, 75, 119, 90, 22, 26, 18, 28, 10, 186, 147, 226, 229, 42, 160, 192, 67, 224, 34, 60, 29, 23, 27, 18, 11, 13, 9, 14, 173, 199, 139, 242, 185, 168, 182, 45, 200, 169, 30, 20, 133, 25, 241, 87, 76, 7, 117, 175, 187, 221, 153, 238, 253, 96, 127, 163, 159, 38, 1, 247, 188, 245, 114, 92, 197, 59, 102, 68, 52, 126, 251, 91, 118, 41, 67, 139, 220, 198, 35, 203, 104, 252, 237, 182, 99, 241, 228, 184, 202, 220, 49, 215, 16, 133, 99, 66, 64, 34, 151, 19, 32, 17, 198, 132, 125, 36, 74, 133, 248, 61, 187, 210, 17, 50, 249, 174, 109, 161, 41, 199, 75, 47, 158, 29, 243, 48, 178, 220, 236, 82, 134, 13, 208, 227, 193, 119, 108, 22, 179, 43, 153, 185, 112, 169, 250, 72, 148, 17, 34, 100, 233, 71, 196, 140, 252, 168, 26, 63, 240, 160, 216, 44, 125, 86, 239, 144, 51, 34, 199, 78, 73, 135, 193, 209, 56, 217, 254, 162, 202, 140, 54, 11, 212, 152, 207, 129, 245, 166, 40, 222, 122, 165, 38, 142, 183, 218, 164, 191, 173, 63, 228, 157, 58, 44, 13, 146, 120, 80, 155, 204, 95, 106, 98, 70, 126, 84, 194, 19, 141, 246, 232, 184, 216, 144, 94, 247, 57, 46, 245, 175, 195, 130, 190, 128, 93, 159, 124, 147, 208, 105, 169, 45, 213, 111, 179, 18, 37, 207, 59, 153, 172, 200, 167, 125, 24, 16, 110, 99, 156, 232, 123, 187, 59, 219, 9, 120, 38, 205, 244, 24, 89, 110, 1, 183, 154, 236, 168, 154, 79, 131, 101, 110, 149, 230, 126, 230, 255, 170, 8, 207, 188, 33, 230, 232, 21, 239, 217, 155, 231, 186, 206, 54, 111, 74, 212, 9, 159, 234, 214, 124, 176, 41, 175, 178, 164, 49, 49, 35, 63, 42, 48, 148, 165, 198, 192, 102, 162, 53, 55, 188, 78, 116, 166, 202, 130, 252, 176, 208, 144, 224, 21, 216, 167, 51, 74, 152, 4, 241, 247, 218, 236, 65, 14, 80, 205, 127, 47, 246, 145, 23, 141, 214, 77, 118, 77, 176, 239, 67, 84, 77, 170, 204, 223, 4, 150, 228, 227, 181, 209, 158, 27, 136, 106, 76, 184, 31, 44, 193, 127, 81, 101, 70, 4, 234, 94, 157, 93, 53, 140, 1, 115, 116, 135, 250, 46, 65, 11, 251, 90, 29, 103, 179, 82, 210, 219, 146, 51, 86, 16, 233, 19, 71, 214, 109, 140, 97, 215, 154, 122, 12, 161, 55, 142, 20, 248, 89, 137, 60, 19, 235, 238, 39, 169, 206, 53, 201, 97, 183, 237, 229, 28, 225, 60, 177, 71, 122, 89, 223, 210, 156, 63, 115, 242, 85, 121, 206, 20, 24, 191, 55, 199, 115, 234, 205, 247, 83, 91, 170, 253, 95, 20, 111, 61, 223, 134, 219, 68, 120, 129, 243, 175, 202, 62, 196, 104, 185, 44, 52, 36, 56, 95, 64, 163, 194, 114, 195, 29, 22, 12, 37, 226, 188, 139, 73, 60, 40, 65, 149, 13, 255, 113, 1, 168, 57, 222, 179, 12, 8, 156, 228, 180, 216, 144, 193, 86, 100, 97, 132, 203, 123, 112, 182, 50, 213, 116, 92, 108, 72, 66, 87, 184, 208};
.const .align 8 .b8 td1[1024] = {167, 244, 81, 80, 101, 65, 126, 83, 164, 23, 26, 195, 94, 39, 58, 150, 107, 171, 59, 203, 69, 157, 31, 241, 88, 250, 172, 171, 3, 227, 75, 147, 250, 48, 32, 85, 109, 118, 173, 246, 118, 204, 136, 145, 76, 2, 245, 37, 215, 229, 79, 252, 203, 42, 197, 215, 68, 53, 38, 128, 163, 98, 181, 143, 90, 177, 222, 73, 27, 186, 37, 103, 14, 234, 69, 152, 192, 254, 93, 225, 117, 47, 195, 2, 240, 76, 129, 18, 151, 70, 141, 163, 249, 211, 107, 198, 95, 143, 3, 231, 156, 146, 21, 149, 122, 109, 191, 235, 89, 82, 149, 218, 131, 190, 212, 45, 33, 116, 88, 211, 105, 224, 73, 41, 200, 201, 142, 68, 137, 194, 117, 106, 121, 142, 244, 120, 62, 88, 153, 107, 113, 185, 39, 221, 79, 225, 190, 182, 173, 136, 240, 23, 172, 32, 201, 102, 58, 206, 125, 180, 74, 223, 99, 24, 49, 26, 229, 130, 51, 81, 151, 96, 127, 83, 98, 69, 119, 100, 177, 224, 174, 107, 187, 132, 160, 129, 254, 28, 43, 8, 249, 148, 104, 72, 112, 88, 253, 69, 143, 25, 108, 222, 148, 135, 248, 123, 82, 183, 211, 115, 171, 35, 2, 75, 114, 226, 143, 31, 227, 87, 171, 85, 102, 42, 40, 235, 178, 7, 194, 181, 47, 3, 123, 197, 134, 154, 8, 55, 211, 165, 135, 40, 48, 242, 165, 191, 35, 178, 106, 3, 2, 186, 130, 22, 237, 92, 28, 207, 138, 43, 180, 121, 167, 146, 242, 7, 243, 240, 226, 105, 78, 161, 244, 218, 101, 205, 190, 5, 6, 213, 98, 52, 209, 31, 254, 166, 196, 138, 83, 46, 52, 157, 85, 243, 162, 160, 225, 138, 5, 50, 235, 246, 164, 117, 236, 131, 11, 57, 239, 96, 64, 170, 159, 113, 94, 6, 16, 110, 189, 81, 138, 33, 62, 249, 6, 221, 150, 61, 5, 62, 221, 174, 189, 230, 77, 70, 141, 84, 145, 181, 93, 196, 113, 5, 212, 6, 4, 111, 21, 80, 96, 255, 251, 152, 25, 36, 233, 189, 214, 151, 67, 64, 137, 204, 158, 217, 103, 119, 66, 232, 176, 189, 139, 137, 7, 136, 91, 25, 231, 56, 238, 200, 121, 219, 10, 124, 161, 71, 15, 66, 124, 233, 30, 132, 248, 201, 0, 0, 0, 0, 134, 128, 9, 131, 237, 43, 50, 72, 112, 17, 30, 172, 114, 90, 108, 78, 255, 14, 253, 251, 56, 133, 15, 86, 213, 174, 61, 30, 57, 45, 54, 39, 217, 15, 10, 100, 166, 92, 104, 33, 84, 91, 155, 209, 46, 54, 36, 58, 103, 10, 12, 177, 231, 87, 147, 15, 150, 238, 180, 210, 145, 155, 27, 158, 197, 192, 128, 79, 32, 220, 97, 162, 75, 119, 90, 105, 26, 18, 28, 22, 186, 147, 226, 10, 42, 160, 192, 229, 224, 34, 60, 67, 23, 27, 18, 29, 13, 9, 14, 11, 199, 139, 242, 173, 168, 182, 45, 185, 169, 30, 20, 200, 25, 241, 87, 133, 7, 117, 175, 76, 221, 153, 238, 187, 96, 127, 163, 253, 38, 1, 247, 159, 245, 114, 92, 188, 59, 102, 68, 197, 126, 251, 91, 52, 41, 67, 139, 118, 198, 35, 203, 220, 252, 237, 182, 104, 241, 228, 184, 99, 220, 49, 215, 202, 133, 99, 66, 16, 34, 151, 19, 64, 17, 198, 132, 32, 36, 74, 133, 125, 61, 187, 210, 248, 50, 249, 174, 17, 161, 41, 199, 109, 47, 158, 29, 75, 48, 178, 220, 243, 82, 134, 13, 236, 227, 193, 119, 208, 22, 179, 43, 108, 185, 112, 169, 153, 72, 148, 17, 250, 100, 233, 71, 34, 140, 252, 168, 196, 63, 240, 160, 26, 44, 125, 86, 216, 144, 51, 34, 239, 78, 73, 135, 199, 209, 56, 217, 193, 162, 202, 140, 254, 11, 212, 152, 54, 129, 245, 166, 207, 222, 122, 165, 40, 142, 183, 218, 38, 191, 173, 63, 164, 157, 58, 44, 228, 146, 120, 80, 13, 204, 95, 106, 155, 70, 126, 84, 98, 19, 141, 246, 194, 184, 216, 144, 232, 247, 57, 46, 94, 175, 195, 130, 245, 128, 93, 159, 190, 147, 208, 105, 124, 45, 213, 111, 169, 18, 37, 207, 179, 153, 172, 200, 59, 125, 24, 16, 167, 99, 156, 232, 110, 187, 59, 219, 123, 120, 38, 205, 9, 24, 89, 110, 244, 183, 154, 236, 1, 154, 79, 131, 168, 110, 149, 230, 101, 230, 255, 170, 126, 207, 188, 33, 8, 232, 21, 239, 230, 155, 231, 186, 217, 54, 111, 74, 206, 9, 159, 234, 212, 124, 176, 41, 214, 178, 164, 49, 175, 35, 63, 42, 49, 148, 165, 198, 48, 102, 162, 53, 192, 188, 78, 116, 55, 202, 130, 252, 166, 208, 144, 224, 176, 216, 167, 51, 21, 152, 4, 241, 74, 218, 236, 65, 247, 80, 205, 127, 14, 246, 145, 23, 47, 214, 77, 118, 141, 176, 239, 67, 77, 77, 170, 204, 84, 4, 150, 228, 223, 181, 209, 158, 227, 136, 106, 76, 27, 31, 44, 193, 184, 81, 101, 70, 127, 234, 94, 157, 4, 53, 140, 1, 93, 116, 135, 250, 115, 65, 11, 251, 46, 29, 103, 179, 90, 210, 219, 146, 82, 86, 16, 233, 51, 71, 214, 109, 19, 97, 215, 154, 140, 12, 161, 55, 122, 20, 248, 89, 142, 60, 19, 235, 137, 39, 169, 206, 238, 201, 97, 183, 53, 229, 28, 225, 237, 177, 71, 122, 60, 223, 210, 156, 89, 115, 242, 85, 63, 206, 20, 24, 121, 55, 199, 115, 191, 205, 247, 83, 234, 170, 253, 95, 91, 111, 61, 223, 20, 219, 68, 120, 134, 243, 175, 202, 129, 196, 104, 185, 62, 52, 36, 56, 44, 64, 163, 194, 95, 195, 29, 22, 114, 37, 226, 188, 12, 73, 60, 40, 139, 149, 13, 255, 65, 1, 168, 57, 113, 179, 12, 8, 222, 228, 180, 216, 156, 193, 86, 100, 144, 132, 203, 123, 97, 182, 50, 213, 112, 92, 108, 72, 116, 87, 184, 208, 66};
.const .align 8 .b8 td2[1024] = {244, 81, 80, 167, 65, 126, 83, 101, 23, 26, 195, 164, 39, 58, 150, 94, 171, 59, 203, 107, 157, 31, 241, 69, 250, 172, 171, 88, 227, 75, 147, 3, 48, 32, 85, 250, 118, 173, 246, 109, 204, 136, 145, 118, 2, 245, 37, 76, 229, 79, 252, 215, 42, 197, 215, 203, 53, 38, 128, 68, 98, 181, 143, 163, 177, 222, 73, 90, 186, 37, 103, 27, 234, 69, 152, 14, 254, 93, 225, 192, 47, 195, 2, 117, 76, 129, 18, 240, 70, 141, 163, 151, 211, 107, 198, 249, 143, 3, 231, 95, 146, 21, 149, 156, 109, 191, 235, 122, 82, 149, 218, 89, 190, 212, 45, 131, 116, 88, 211, 33, 224, 73, 41, 105, 201, 142, 68, 200, 194, 117, 106, 137, 142, 244, 120, 121, 88, 153, 107, 62, 185, 39, 221, 113, 225, 190, 182, 79, 136, 240, 23, 173, 32, 201, 102, 172, 206, 125, 180, 58, 223, 99, 24, 74, 26, 229, 130, 49, 81, 151, 96, 51, 83, 98, 69, 127, 100, 177, 224, 119, 107, 187, 132, 174, 129, 254, 28, 160, 8, 249, 148, 43, 72, 112, 88, 104, 69, 143, 25, 253, 222, 148, 135, 108, 123, 82, 183, 248, 115, 171, 35, 211, 75, 114, 226, 2, 31, 227, 87, 143, 85, 102, 42, 171, 235, 178, 7, 40, 181, 47, 3, 194, 197, 134, 154, 123, 55, 211, 165, 8, 40, 48, 242, 135, 191, 35, 178, 165, 3, 2, 186, 106, 22, 237, 92, 130, 207, 138, 43, 28, 121, 167, 146, 180, 7, 243, 240, 242, 105, 78, 161, 226, 218, 101, 205, 244, 5, 6, 213, 190, 52, 209, 31, 98, 166, 196, 138, 254, 46, 52, 157, 83, 243, 162, 160, 85, 138, 5, 50, 225, 246, 164, 117, 235, 131, 11, 57, 236, 96, 64, 170, 239, 113, 94, 6, 159, 110, 189, 81, 16, 33, 62, 249, 138, 221, 150, 61, 6, 62, 221, 174, 5, 230, 77, 70, 189, 84, 145, 181, 141, 196, 113, 5, 93, 6, 4, 111, 212, 80, 96, 255, 21, 152, 25, 36, 251, 189, 214, 151, 233, 64, 137, 204, 67, 217, 103, 119, 158, 232, 176, 189, 66, 137, 7, 136, 139, 25, 231, 56, 91, 200, 121, 219, 238, 124, 161, 71, 10, 66, 124, 233, 15, 132, 248, 201, 30, 0, 0, 0, 0, 128, 9, 131, 134, 43, 50, 72, 237, 17, 30, 172, 112, 90, 108, 78, 114, 14, 253, 251, 255, 133, 15, 86, 56, 174, 61, 30, 213, 45, 54, 39, 57, 15, 10, 100, 217, 92, 104, 33, 166, 91, 155, 209, 84, 54, 36, 58, 46, 10, 12, 177, 103, 87, 147, 15, 231, 238, 180, 210, 150, 155, 27, 158, 145, 192, 128, 79, 197, 220, 97, 162, 32, 119, 90, 105, 75, 18, 28, 22, 26, 147, 226, 10, 186, 160, 192, 229, 42, 34, 60, 67, 224, 27, 18, 29, 23, 9, 14, 11, 13, 139, 242, 173, 199, 182, 45, 185, 168, 30, 20, 200, 169, 241, 87, 133, 25, 117, 175, 76, 7, 153, 238, 187, 221, 127, 163, 253, 96, 1, 247, 159, 38, 114, 92, 188, 245, 102, 68, 197, 59, 251, 91, 52, 126, 67, 139, 118, 41, 35, 203, 220, 198, 237, 182, 104, 252, 228, 184, 99, 241, 49, 215, 202, 220, 99, 66, 16, 133, 151, 19, 64, 34, 198, 132, 32, 17, 74, 133, 125, 36, 187, 210, 248, 61, 249, 174, 17, 50, 41, 199, 109, 161, 158, 29, 75, 47, 178, 220, 243, 48, 134, 13, 236, 82, 193, 119, 208, 227, 179, 43, 108, 22, 112, 169, 153, 185, 148, 17, 250, 72, 233, 71, 34, 100, 252, 168, 196, 140, 240, 160, 26, 63, 125, 86, 216, 44, 51, 34, 239, 144, 73, 135, 199, 78, 56, 217, 193, 209, 202, 140, 254, 162, 212, 152, 54, 11, 245, 166, 207, 129, 122, 165, 40, 222, 183, 218, 38, 142, 173, 63, 164, 191, 58, 44, 228, 157, 120, 80, 13, 146, 95, 106, 155, 204, 126, 84, 98, 70, 141, 246, 194, 19, 216, 144, 232, 184, 57, 46, 94, 247, 195, 130, 245, 175, 93, 159, 190, 128, 208, 105, 124, 147, 213, 111, 169, 45, 37, 207, 179, 18, 172, 200, 59, 153, 24, 16, 167, 125, 156, 232, 110, 99, 59, 219, 123, 187, 38, 205, 9, 120, 89, 110, 244, 24, 154, 236, 1, 183, 79, 131, 168, 154, 149, 230, 101, 110, 255, 170, 126, 230, 188, 33, 8, 207, 21, 239, 230, 232, 231, 186, 217, 155, 111, 74, 206, 54, 159, 234, 212, 9, 176, 41, 214, 124, 164, 49, 175, 178, 63, 42, 49, 35, 165, 198, 48, 148, 162, 53, 192, 102, 78, 116, 55, 188, 130, 252, 166, 202, 144, 224, 176, 208, 167, 51, 21, 216, 4, 241, 74, 152, 236, 65, 247, 218, 205, 127, 14, 80, 145, 23, 47, 246, 77, 118, 141, 214, 239, 67, 77, 176, 170, 204, 84, 77, 150, 228, 223, 4, 209, 158, 227, 181, 106, 76, 27, 136, 44, 193, 184, 31, 101, 70, 127, 81, 94, 157, 4, 234, 140, 1, 93, 53, 135, 250, 115, 116, 11, 251, 46, 65, 103, 179, 90, 29, 219, 146, 82, 210, 16, 233, 51, 86, 214, 109, 19, 71, 215, 154, 140, 97, 161, 55, 122, 12, 248, 89, 142, 20, 19, 235, 137, 60, 169, 206, 238, 39, 97, 183, 53, 201, 28, 225, 237, 229, 71, 122, 60, 177, 210, 156, 89, 223, 242, 85, 63, 115, 20, 24, 121, 206, 199, 115, 191, 55, 247, 83, 234, 205, 253, 95, 91, 170, 61, 223, 20, 111, 68, 120, 134, 219, 175, 202, 129, 243, 104, 185, 62, 196, 36, 56, 44, 52, 163, 194, 95, 64, 29, 22, 114, 195, 226, 188, 12, 37, 60, 40, 139, 73, 13, 255, 65, 149, 168, 57, 113, 1, 12, 8, 222, 179, 180, 216, 156, 228, 86, 100, 144, 193, 203, 123, 97, 132, 50, 213, 112, 182, 108, 72, 116, 92, 184, 208, 66, 87};
.const .align 8 .b8 td3[1024] = {81, 80, 167, 244, 126, 83, 101, 65, 26, 195, 164, 23, 58, 150, 94, 39, 59, 203, 107, 171, 31, 241, 69, 157, 172, 171, 88, 250, 75, 147, 3, 227, 32, 85, 250, 48, 173, 246, 109, 118, 136, 145, 118, 204, 245, 37, 76, 2, 79, 252, 215, 229, 197, 215, 203, 42, 38, 128, 68, 53, 181, 143, 163, 98, 222, 73, 90, 177, 37, 103, 27, 186, 69, 152, 14, 234, 93, 225, 192, 254, 195, 2, 117, 47, 129, 18, 240, 76, 141, 163, 151, 70, 107, 198, 249, 211, 3, 231, 95, 143, 21, 149, 156, 146, 191, 235, 122, 109, 149, 218, 89, 82, 212, 45, 131, 190, 88, 211, 33, 116, 73, 41, 105, 224, 142, 68, 200, 201, 117, 106, 137, 194, 244, 120, 121, 142, 153, 107, 62, 88, 39, 221, 113, 185, 190, 182, 79, 225, 240, 23, 173, 136, 201, 102, 172, 32, 125, 180, 58, 206, 99, 24, 74, 223, 229, 130, 49, 26, 151, 96, 51, 81, 98, 69, 127, 83, 177, 224, 119, 100, 187, 132, 174, 107, 254, 28, 160, 129, 249, 148, 43, 8, 112, 88, 104, 72, 143, 25, 253, 69, 148, 135, 108, 222, 82, 183, 248, 123, 171, 35, 211, 115, 114, 226, 2, 75, 227, 87, 143, 31, 102, 42, 171, 85, 178, 7, 40, 235, 47, 3, 194, 181, 134, 154, 123, 197, 211, 165, 8, 55, 48, 242, 135, 40, 35, 178, 165, 191, 2, 186, 106, 3, 237, 92, 130, 22, 138, 43, 28, 207, 167, 146, 180, 121, 243, 240, 242, 7, 78, 161, 226, 105, 101, 205, 244, 218, 6, 213, 190, 5, 209, 31, 98, 52, 196, 138, 254, 166, 52, 157, 83, 46, 162, 160, 85, 243, 5, 50, 225, 138, 164, 117, 235, 246, 11, 57, 236, 131, 64, 170, 239, 96, 94, 6, 159, 113, 189, 81, 16, 110, 62, 249, 138, 33, 150, 61, 6, 221, 221, 174, 5, 62, 77, 70, 189, 230, 145, 181, 141, 84, 113, 5, 93, 196, 4, 111, 212, 6, 96, 255, 21, 80, 25, 36, 251, 152, 214, 151, 233, 189, 137, 204, 67, 64, 103, 119, 158, 217, 176, 189, 66, 232, 7, 136, 139, 137, 231, 56, 91, 25, 121, 219, 238, 200, 161, 71, 10, 124, 124, 233, 15, 66, 248, 201, 30, 132, 0, 0, 0, 0, 9, 131, 134, 128, 50, 72, 237, 43, 30, 172, 112, 17, 108, 78, 114, 90, 253, 251, 255, 14, 15, 86, 56, 133, 61, 30, 213, 174, 54, 39, 57, 45, 10, 100, 217, 15, 104, 33, 166, 92, 155, 209, 84, 91, 36, 58, 46, 54, 12, 177, 103, 10, 147, 15, 231, 87, 180, 210, 150, 238, 27, 158, 145, 155, 128, 79, 197, 192, 97, 162, 32, 220, 90, 105, 75, 119, 28, 22, 26, 18, 226, 10, 186, 147, 192, 229, 42, 160, 60, 67, 224, 34, 18, 29, 23, 27, 14, 11, 13, 9, 242, 173, 199, 139, 45, 185, 168, 182, 20, 200, 169, 30, 87, 133, 25, 241, 175, 76, 7, 117, 238, 187, 221, 153, 163, 253, 96, 127, 247, 159, 38, 1, 92, 188, 245, 114, 68, 197, 59, 102, 91, 52, 126, 251, 139, 118, 41, 67, 203, 220, 198, 35, 182, 104, 252, 237, 184, 99, 241, 228, 215, 202, 220, 49, 66, 16, 133, 99, 19, 64, 34, 151, 132, 32, 17, 198, 133, 125, 36, 74, 210, 248, 61, 187, 174, 17, 50, 249, 199, 109, 161, 41, 29, 75, 47, 158, 220, 243, 48, 178, 13, 236, 82, 134, 119, 208, 227, 193, 43, 108, 22, 179, 169, 153, 185, 112, 17, 250, 72, 148, 71, 34, 100, 233, 168, 196, 140, 252, 160, 26, 63, 240, 86, 216, 44, 125, 34, 239, 144, 51, 135, 199, 78, 73, 217, 193, 209, 56, 140, 254, 162, 202, 152, 54, 11, 212, 166, 207, 129, 245, 165, 40, 222, 122, 218, 38, 142, 183, 63, 164, 191, 173, 44, 228, 157, 58, 80, 13, 146, 120, 106, 155, 204, 95, 84, 98, 70, 126, 246, 194, 19, 141, 144, 232, 184, 216, 46, 94, 247, 57, 130, 245, 175, 195, 159, 190, 128, 93, 105, 124, 147, 208, 111, 169, 45, 213, 207, 179, 18, 37, 200, 59, 153, 172, 16, 167, 125, 24, 232, 110, 99, 156, 219, 123, 187, 59, 205, 9, 120, 38, 110, 244, 24, 89, 236, 1, 183, 154, 131, 168, 154, 79, 230, 101, 110, 149, 170, 126, 230, 255, 33, 8, 207, 188, 239, 230, 232, 21, 186, 217, 155, 231, 74, 206, 54, 111, 234, 212, 9, 159, 41, 214, 124, 176, 49, 175, 178, 164, 42, 49, 35, 63, 198, 48, 148, 165, 53, 192, 102, 162, 116, 55, 188, 78, 252, 166, 202, 130, 224, 176, 208, 144, 51, 21, 216, 167, 241, 74, 152, 4, 65, 247, 218, 236, 127, 14, 80, 205, 23, 47, 246, 145, 118, 141, 214, 77, 67, 77, 176, 239, 204, 84, 77, 170, 228, 223, 4, 150, 158, 227, 181, 209, 76, 27, 136, 106, 193, 184, 31, 44, 70, 127, 81, 101, 157, 4, 234, 94, 1, 93, 53, 140, 250, 115, 116, 135, 251, 46, 65, 11, 179, 90, 29, 103, 146, 82, 210, 219, 233, 51, 86, 16, 109, 19, 71, 214, 154, 140, 97, 215, 55, 122, 12, 161, 89, 142, 20, 248, 235, 137, 60, 19, 206, 238, 39, 169, 183, 53, 201, 97, 225, 237, 229, 28, 122, 60, 177, 71, 156, 89, 223, 210, 85, 63, 115, 242, 24, 121, 206, 20, 115, 191, 55, 199, 83, 234, 205, 247, 95, 91, 170, 253, 223, 20, 111, 61, 120, 134, 219, 68, 202, 129, 243, 175, 185, 62, 196, 104, 56, 44, 52, 36, 194, 95, 64, 163, 22, 114, 195, 29, 188, 12, 37, 226, 40, 139, 73, 60, 255, 65, 149, 13, 57, 113, 1, 168, 8, 222, 179, 12, 216, 156, 228, 180, 100, 144, 193, 86, 123, 97, 132, 203, 213, 112, 182, 50, 72, 116, 92, 108, 208, 66, 87, 184};
.const .align 8 .b8 td4[1024] = {82, 82, 82, 82, 9, 9, 9, 9, 106, 106, 106, 106, 213, 213, 213, 213, 48, 48, 48, 48, 54, 54, 54, 54, 165, 165, 165, 165, 56, 56, 56, 56, 191, 191, 191, 191, 64, 64, 64, 64, 163, 163, 163, 163, 158, 158, 158, 158, 129, 129, 129, 129, 243, 243, 243, 243, 215, 215, 215, 215, 251, 251, 251, 251, 124, 124, 124, 124, 227, 227, 227, 227, 57, 57, 57, 57, 130, 130, 130, 130, 155, 155, 155, 155, 47, 47, 47, 47, 255, 255, 255, 255, 135, 135, 135, 135, 52, 52, 52, 52, 142, 142, 142, 142, 67, 67, 67, 67, 68, 68, 68, 68, 196, 196, 196, 196, 222, 222, 222, 222, 233, 233, 233, 233, 203, 203, 203, 203, 84, 84, 84, 84, 123, 123, 123, 123, 148, 148, 148, 148, 50, 50, 50, 50, 166, 166, 166, 166, 194, 194, 194, 194, 35, 35, 35, 35, 61, 61, 61, 61, 238, 238, 238, 238, 76, 76, 76, 76, 149, 149, 149, 149, 11, 11, 11, 11, 66, 66, 66, 66, 250, 250, 250, 250, 195, 195, 195, 195, 78, 78, 78, 78, 8, 8, 8, 8, 46, 46, 46, 46, 161, 161, 161, 161, 102, 102, 102, 102, 40, 40, 40, 40, 217, 217, 217, 217, 36, 36, 36, 36, 178, 178, 178, 178, 118, 118, 118, 118, 91, 91, 91, 91, 162, 162, 162, 162, 73, 73, 73, 73, 109, 109, 109, 109, 139, 139, 139, 139, 209, 209, 209, 209, 37, 37, 37, 37, 114, 114, 114, 114, 248, 248, 248, 248, 246, 246, 246, 246, 100, 100, 100, 100, 134, 134, 134, 134, 104, 104, 104, 104, 152, 152, 152, 152, 22, 22, 22, 22, 212, 212, 212, 212, 164, 164, 164, 164, 92, 92, 92, 92, 204, 204, 204, 204, 93, 93, 93, 93, 101, 101, 101, 101, 182, 182, 182, 182, 146, 146, 146, 146, 108, 108, 108, 108, 112, 112, 112, 112, 72, 72, 72, 72, 80, 80, 80, 80, 253, 253, 253, 253, 237, 237, 237, 237, 185, 185, 185, 185, 218, 218, 218, 218, 94, 94, 94, 94, 21, 21, 21, 21, 70, 70, 70, 70, 87, 87, 87, 87, 167, 167, 167, 167, 141, 141, 141, 141, 157, 157, 157, 157, 132, 132, 132, 132, 144, 144, 144, 144, 216, 216, 216, 216, 171, 171, 171, 171, 0, 0, 0, 0, 140, 140, 140, 140, 188, 188, 188, 188, 211, 211, 211, 211, 10, 10, 10, 10, 247, 247, 247, 247, 228, 228, 228, 228, 88, 88, 88, 88, 5, 5, 5, 5, 184, 184, 184, 184, 179, 179, 179, 179, 69, 69, 69, 69, 6, 6, 6, 6, 208, 208, 208, 208, 44, 44, 44, 44, 30, 30, 30, 30, 143, 143, 143, 143, 202, 202, 202, 202, 63, 63, 63, 63, 15, 15, 15, 15, 2, 2, 2, 2, 193, 193, 193, 193, 175, 175, 175, 175, 189, 189, 189, 189, 3, 3, 3, 3, 1, 1, 1, 1, 19, 19, 19, 19, 138, 138, 138, 138, 107, 107, 107, 107, 58, 58, 58, 58, 145, 145, 145, 145, 17, 17, 17, 17, 65, 65, 65, 65, 79, 79, 79, 79, 103, 103, 103, 103, 220, 220, 220, 220, 234, 234, 234, 234, 151, 151, 151, 151, 242, 242, 242, 242, 207, 207, 207, 207, 206, 206, 206, 206, 240, 240, 240, 240, 180, 180, 180, 180, 230, 230, 230, 230, 115, 115, 115, 115, 150, 150, 150, 150, 172, 172, 172, 172, 116, 116, 116, 116, 34, 34, 34, 34, 231, 231, 231, 231, 173, 173, 173, 173, 53, 53, 53, 53, 133, 133, 133, 133, 226, 226, 226, 226, 249, 249, 249, 249, 55, 55, 55, 55, 232, 232, 232, 232, 28, 28, 28, 28, 117, 117, 117, 117, 223, 223, 223, 223, 110, 110, 110, 110, 71, 71, 71, 71, 241, 241, 241, 241, 26, 26, 26, 26, 113, 113, 113, 113, 29, 29, 29, 29, 41, 41, 41, 41, 197, 197, 197, 197, 137, 137, 137, 137, 111, 111, 111, 111, 183, 183, 183, 183, 98, 98, 98, 98, 14, 14, 14, 14, 170, 170, 170, 170, 24, 24, 24, 24, 190, 190, 190, 190, 27, 27, 27, 27, 252, 252, 252, 252, 86, 86, 86, 86, 62, 62, 62, 62, 75, 75, 75, 75, 198, 198, 198, 198, 210, 210, 210, 210, 121, 121, 121, 121, 32, 32, 32, 32, 154, 154, 154, 154, 219, 219, 219, 219, 192, 192, 192, 192, 254, 254, 254, 254, 120, 120, 120, 120, 205, 205, 205, 205, 90, 90, 90, 90, 244, 244, 244, 244, 31, 31, 31, 31, 221, 221, 221, 221, 168, 168, 168, 168, 51, 51, 51, 51, 136, 136, 136, 136, 7, 7, 7, 7, 199, 199, 199, 199, 49, 49, 49, 49, 177, 177, 177, 177, 18, 18, 18, 18, 16, 16, 16, 16, 89, 89, 89, 89, 39, 39, 39, 39, 128, 128, 128, 128, 236, 236, 236, 236, 95, 95, 95, 95, 96, 96, 96, 96, 81, 81, 81, 81, 127, 127, 127, 127, 169, 169, 169, 169, 25, 25, 25, 25, 181, 181, 181, 181, 74, 74, 74, 74, 13, 13, 13, 13, 45, 45, 45, 45, 229, 229, 229, 229, 122, 122, 122, 122, 159, 159, 159, 159, 147, 147, 147, 147, 201, 201, 201, 201, 156, 156, 156, 156, 239, 239, 239, 239, 160, 160, 160, 160, 224, 224, 224, 224, 59, 59, 59, 59, 77, 77, 77, 77, 174, 174, 174, 174, 42, 42, 42, 42, 245, 245, 245, 245, 176, 176, 176, 176, 200, 200, 200, 200, 235, 235, 235, 235, 187, 187, 187, 187, 60, 60, 60, 60, 131, 131, 131, 131, 83, 83, 83, 83, 153, 153, 153, 153, 97, 97, 97, 97, 23, 23, 23, 23, 43, 43, 43, 43, 4, 4, 4, 4, 126, 126, 126, 126, 186, 186, 186, 186, 119, 119, 119, 119, 214, 214, 214, 214, 38, 38, 38, 38, 225, 225, 225, 225, 105, 105, 105, 105, 20, 20, 20, 20, 99, 99, 99, 99, 85, 85, 85, 85, 33, 33, 33, 33, 12, 12, 12, 12, 125, 125, 125, 125};
.const .align 8 .b8 rcon[40] = {0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 128, 0, 0, 0, 27, 0, 0, 0, 54};
// m11300_comp$s_td0 has been demoted
// m11300_comp$s_td1 has been demoted
// m11300_comp$s_td2 has been demoted
// m11300_comp$s_td3 has been demoted
// m11300_comp$s_td4 has been demoted
// m11300_comp$s_te0 has been demoted
// m11300_comp$s_te1 has been demoted
// m11300_comp$s_te2 has been demoted
// m11300_comp$s_te3 has been demoted

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u64 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u64 	%rd2, [gpu_memset_param_2];
	mov.b32	%r3, %envreg3;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mad.lo.s32 	%r6, %r4, %r5, %r3;
	mov.u32 	%r7, %tid.x;
	add.s32 	%r1, %r6, %r7;
	cvt.s64.s32	%rd3, %r1;
	setp.ge.u64	%p1, %rd3, %rd2;
	@%p1 bra 	BB0_2;

	mul.wide.s32 	%rd4, %r1, 16;
	add.s64 	%rd5, %rd1, %rd4;
	st.global.v4.u32 	[%rd5], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

.func sha512_update_128(
	.param .b64 sha512_update_128_param_0,
	.param .b64 sha512_update_128_param_1,
	.param .b64 sha512_update_128_param_2,
	.param .b64 sha512_update_128_param_3,
	.param .b64 sha512_update_128_param_4,
	.param .b64 sha512_update_128_param_5,
	.param .b64 sha512_update_128_param_6,
	.param .b64 sha512_update_128_param_7,
	.param .b64 sha512_update_128_param_8,
	.param .b32 sha512_update_128_param_9
)
{
	.reg .pred 	%p<96>;
	.reg .b32 	%r<9706>;
	.reg .b64 	%rd<2943>;


	ld.param.u64 	%rd10, [sha512_update_128_param_0];
	ld.param.u64 	%rd11, [sha512_update_128_param_1];
	ld.param.u64 	%rd12, [sha512_update_128_param_2];
	ld.param.u64 	%rd13, [sha512_update_128_param_3];
	ld.param.u64 	%rd14, [sha512_update_128_param_4];
	ld.param.u64 	%rd15, [sha512_update_128_param_5];
	ld.param.u64 	%rd16, [sha512_update_128_param_6];
	ld.param.u64 	%rd17, [sha512_update_128_param_7];
	ld.param.u64 	%rd18, [sha512_update_128_param_8];
	ld.param.u32 	%r569, [sha512_update_128_param_9];
	cvta.to.local.u64 	%rd1, %rd11;
	cvta.to.local.u64 	%rd2, %rd12;
	cvta.to.local.u64 	%rd3, %rd13;
	cvta.to.local.u64 	%rd4, %rd14;
	cvta.to.local.u64 	%rd5, %rd15;
	cvta.to.local.u64 	%rd6, %rd16;
	cvta.to.local.u64 	%rd7, %rd17;
	cvta.to.local.u64 	%rd8, %rd18;
	add.s64 	%rd9, %rd10, 192;
	ld.u32 	%r570, [%rd10+192];
	and.b32  	%r571, %r570, 127;
	add.s32 	%r572, %r570, %r569;
	st.u32 	[%rd10+192], %r572;
	add.s32 	%r573, %r571, %r569;
	setp.lt.s32	%p1, %r573, 128;
	bfe.u32 	%r1, %r570, 2, 5;
	and.b32  	%r574, %r570, 3;
	shl.b32 	%r575, %r574, 2;
	mov.u32 	%r576, 1985229328;
	shr.u32 	%r577, %r576, %r575;
	and.b32  	%r2, %r577, 65535;
	@%p1 bra 	BB1_90;
	bra.uni 	BB1_1;

BB1_90:
	setp.gt.s32	%p49, %r1, 15;
	@%p49 bra 	BB1_122;

	setp.gt.s32	%p73, %r1, 7;
	@%p73 bra 	BB1_107;

	setp.gt.s32	%p85, %r1, 3;
	@%p85 bra 	BB1_100;

	setp.gt.s32	%p91, %r1, 1;
	@%p91 bra 	BB1_97;

	setp.eq.s32	%p94, %r1, 0;
	@%p94 bra 	BB1_168;
	bra.uni 	BB1_95;

BB1_168:
	ld.local.u32 	%r9450, [%rd8+12];
	ld.local.u32 	%r9451, [%rd8+8];
	// inline asm
	prmt.b32 %r9449, %r9450, %r9451, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r9449;
	ld.local.u32 	%r9454, [%rd8+8];
	ld.local.u32 	%r9455, [%rd8+4];
	// inline asm
	prmt.b32 %r9453, %r9454, %r9455, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r9453;
	ld.local.u32 	%r9458, [%rd8+4];
	ld.local.u32 	%r9459, [%rd8];
	// inline asm
	prmt.b32 %r9457, %r9458, %r9459, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r9457;
	ld.local.u32 	%r9462, [%rd8];
	ld.local.u32 	%r9463, [%rd7+12];
	// inline asm
	prmt.b32 %r9461, %r9462, %r9463, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r9461;
	ld.local.u32 	%r9466, [%rd7+12];
	ld.local.u32 	%r9467, [%rd7+8];
	// inline asm
	prmt.b32 %r9465, %r9466, %r9467, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r9465;
	ld.local.u32 	%r9470, [%rd7+8];
	ld.local.u32 	%r9471, [%rd7+4];
	// inline asm
	prmt.b32 %r9469, %r9470, %r9471, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r9469;
	ld.local.u32 	%r9474, [%rd7+4];
	ld.local.u32 	%r9475, [%rd7];
	// inline asm
	prmt.b32 %r9473, %r9474, %r9475, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r9473;
	ld.local.u32 	%r9478, [%rd7];
	ld.local.u32 	%r9479, [%rd6+12];
	// inline asm
	prmt.b32 %r9477, %r9478, %r9479, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9477;
	ld.local.u32 	%r9482, [%rd6+12];
	ld.local.u32 	%r9483, [%rd6+8];
	// inline asm
	prmt.b32 %r9481, %r9482, %r9483, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9481;
	ld.local.u32 	%r9486, [%rd6+8];
	ld.local.u32 	%r9487, [%rd6+4];
	// inline asm
	prmt.b32 %r9485, %r9486, %r9487, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9485;
	ld.local.u32 	%r9490, [%rd6+4];
	ld.local.u32 	%r9491, [%rd6];
	// inline asm
	prmt.b32 %r9489, %r9490, %r9491, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9489;
	ld.local.u32 	%r9494, [%rd6];
	ld.local.u32 	%r9495, [%rd5+12];
	// inline asm
	prmt.b32 %r9493, %r9494, %r9495, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9493;
	ld.local.u32 	%r9498, [%rd5+12];
	ld.local.u32 	%r9499, [%rd5+8];
	// inline asm
	prmt.b32 %r9497, %r9498, %r9499, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9497;
	ld.local.u32 	%r9502, [%rd5+8];
	ld.local.u32 	%r9503, [%rd5+4];
	// inline asm
	prmt.b32 %r9501, %r9502, %r9503, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9501;
	ld.local.u32 	%r9506, [%rd5+4];
	ld.local.u32 	%r9507, [%rd5];
	// inline asm
	prmt.b32 %r9505, %r9506, %r9507, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9505;
	ld.local.u32 	%r9510, [%rd5];
	ld.local.u32 	%r9511, [%rd4+12];
	// inline asm
	prmt.b32 %r9509, %r9510, %r9511, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9509;
	ld.local.u32 	%r9514, [%rd4+12];
	ld.local.u32 	%r9515, [%rd4+8];
	// inline asm
	prmt.b32 %r9513, %r9514, %r9515, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9513;
	ld.local.u32 	%r9518, [%rd4+8];
	ld.local.u32 	%r9519, [%rd4+4];
	// inline asm
	prmt.b32 %r9517, %r9518, %r9519, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9517;
	ld.local.u32 	%r9522, [%rd4+4];
	ld.local.u32 	%r9523, [%rd4];
	// inline asm
	prmt.b32 %r9521, %r9522, %r9523, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9521;
	ld.local.u32 	%r9526, [%rd4];
	ld.local.u32 	%r9527, [%rd3+12];
	// inline asm
	prmt.b32 %r9525, %r9526, %r9527, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9525;
	ld.local.u32 	%r9530, [%rd3+12];
	ld.local.u32 	%r9531, [%rd3+8];
	// inline asm
	prmt.b32 %r9529, %r9530, %r9531, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9529;
	ld.local.u32 	%r9534, [%rd3+8];
	ld.local.u32 	%r9535, [%rd3+4];
	// inline asm
	prmt.b32 %r9533, %r9534, %r9535, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9533;
	ld.local.u32 	%r9538, [%rd3+4];
	ld.local.u32 	%r9539, [%rd3];
	// inline asm
	prmt.b32 %r9537, %r9538, %r9539, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9537;
	ld.local.u32 	%r9542, [%rd3];
	ld.local.u32 	%r9543, [%rd2+12];
	// inline asm
	prmt.b32 %r9541, %r9542, %r9543, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9541;
	ld.local.u32 	%r9546, [%rd2+12];
	ld.local.u32 	%r9547, [%rd2+8];
	// inline asm
	prmt.b32 %r9545, %r9546, %r9547, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9545;
	ld.local.u32 	%r9550, [%rd2+8];
	ld.local.u32 	%r9551, [%rd2+4];
	// inline asm
	prmt.b32 %r9549, %r9550, %r9551, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9549;
	ld.local.u32 	%r9554, [%rd2+4];
	ld.local.u32 	%r9555, [%rd2];
	// inline asm
	prmt.b32 %r9553, %r9554, %r9555, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9553;
	ld.local.u32 	%r9558, [%rd2];
	ld.local.u32 	%r9559, [%rd1+12];
	// inline asm
	prmt.b32 %r9557, %r9558, %r9559, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9557;
	ld.local.u32 	%r9562, [%rd1+12];
	ld.local.u32 	%r9563, [%rd1+8];
	// inline asm
	prmt.b32 %r9561, %r9562, %r9563, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9561;
	ld.local.u32 	%r9566, [%rd1+8];
	ld.local.u32 	%r9567, [%rd1+4];
	// inline asm
	prmt.b32 %r9565, %r9566, %r9567, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r9565;
	ld.local.u32 	%r9570, [%rd1+4];
	ld.local.u32 	%r9571, [%rd1];
	// inline asm
	prmt.b32 %r9569, %r9570, %r9571, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r9569;
	ld.local.u32 	%r9574, [%rd1];
	mov.u32 	%r9575, 0;
	// inline asm
	prmt.b32 %r9705, %r9574, %r9575, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r9705;
	bra.uni 	BB1_170;

BB1_1:
	setp.gt.s32	%p2, %r1, 15;
	@%p2 bra 	BB1_34;

	setp.gt.s32	%p26, %r1, 7;
	@%p26 bra 	BB1_19;

	setp.gt.s32	%p38, %r1, 3;
	@%p38 bra 	BB1_12;

	setp.gt.s32	%p44, %r1, 1;
	@%p44 bra 	BB1_8;

	setp.eq.s32	%p47, %r1, 0;
	@%p47 bra 	BB1_86;
	bra.uni 	BB1_6;

BB1_86:
	ld.local.u32 	%r5168, [%rd8+12];
	mov.u32 	%r9673, 0;
	// inline asm
	prmt.b32 %r9676, %r9673, %r5168, %r2;
	// inline asm
	ld.local.u32 	%r5171, [%rd8+12];
	ld.local.u32 	%r5172, [%rd8+8];
	// inline asm
	prmt.b32 %r5170, %r5171, %r5172, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r5170;
	ld.local.u32 	%r5175, [%rd8+8];
	ld.local.u32 	%r5176, [%rd8+4];
	// inline asm
	prmt.b32 %r5174, %r5175, %r5176, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r5174;
	ld.local.u32 	%r5179, [%rd8+4];
	ld.local.u32 	%r5180, [%rd8];
	// inline asm
	prmt.b32 %r5178, %r5179, %r5180, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r5178;
	ld.local.u32 	%r5183, [%rd8];
	ld.local.u32 	%r5184, [%rd7+12];
	// inline asm
	prmt.b32 %r5182, %r5183, %r5184, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r5182;
	ld.local.u32 	%r5187, [%rd7+12];
	ld.local.u32 	%r5188, [%rd7+8];
	// inline asm
	prmt.b32 %r5186, %r5187, %r5188, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r5186;
	ld.local.u32 	%r5191, [%rd7+8];
	ld.local.u32 	%r5192, [%rd7+4];
	// inline asm
	prmt.b32 %r5190, %r5191, %r5192, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r5190;
	ld.local.u32 	%r5195, [%rd7+4];
	ld.local.u32 	%r5196, [%rd7];
	// inline asm
	prmt.b32 %r5194, %r5195, %r5196, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r5194;
	ld.local.u32 	%r5199, [%rd7];
	ld.local.u32 	%r5200, [%rd6+12];
	// inline asm
	prmt.b32 %r5198, %r5199, %r5200, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r5198;
	ld.local.u32 	%r5203, [%rd6+12];
	ld.local.u32 	%r5204, [%rd6+8];
	// inline asm
	prmt.b32 %r5202, %r5203, %r5204, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r5202;
	ld.local.u32 	%r5207, [%rd6+8];
	ld.local.u32 	%r5208, [%rd6+4];
	// inline asm
	prmt.b32 %r5206, %r5207, %r5208, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r5206;
	ld.local.u32 	%r5211, [%rd6+4];
	ld.local.u32 	%r5212, [%rd6];
	// inline asm
	prmt.b32 %r5210, %r5211, %r5212, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r5210;
	ld.local.u32 	%r5215, [%rd6];
	ld.local.u32 	%r5216, [%rd5+12];
	// inline asm
	prmt.b32 %r5214, %r5215, %r5216, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r5214;
	ld.local.u32 	%r5219, [%rd5+12];
	ld.local.u32 	%r5220, [%rd5+8];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r5218;
	ld.local.u32 	%r5223, [%rd5+8];
	ld.local.u32 	%r5224, [%rd5+4];
	// inline asm
	prmt.b32 %r5222, %r5223, %r5224, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r5222;
	ld.local.u32 	%r5227, [%rd5+4];
	ld.local.u32 	%r5228, [%rd5];
	// inline asm
	prmt.b32 %r5226, %r5227, %r5228, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r5226;
	ld.local.u32 	%r5231, [%rd5];
	ld.local.u32 	%r5232, [%rd4+12];
	// inline asm
	prmt.b32 %r5230, %r5231, %r5232, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r5230;
	ld.local.u32 	%r5235, [%rd4+12];
	ld.local.u32 	%r5236, [%rd4+8];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r5234;
	ld.local.u32 	%r5239, [%rd4+8];
	ld.local.u32 	%r5240, [%rd4+4];
	// inline asm
	prmt.b32 %r5238, %r5239, %r5240, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r5238;
	ld.local.u32 	%r5243, [%rd4+4];
	ld.local.u32 	%r5244, [%rd4];
	// inline asm
	prmt.b32 %r5242, %r5243, %r5244, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r5242;
	ld.local.u32 	%r5247, [%rd4];
	ld.local.u32 	%r5248, [%rd3+12];
	// inline asm
	prmt.b32 %r5246, %r5247, %r5248, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r5246;
	ld.local.u32 	%r5251, [%rd3+12];
	ld.local.u32 	%r5252, [%rd3+8];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r5250;
	ld.local.u32 	%r5255, [%rd3+8];
	ld.local.u32 	%r5256, [%rd3+4];
	// inline asm
	prmt.b32 %r5254, %r5255, %r5256, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r5254;
	ld.local.u32 	%r5259, [%rd3+4];
	ld.local.u32 	%r5260, [%rd3];
	// inline asm
	prmt.b32 %r5258, %r5259, %r5260, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r5258;
	ld.local.u32 	%r5263, [%rd3];
	ld.local.u32 	%r5264, [%rd2+12];
	// inline asm
	prmt.b32 %r5262, %r5263, %r5264, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r5262;
	ld.local.u32 	%r5267, [%rd2+12];
	ld.local.u32 	%r5268, [%rd2+8];
	// inline asm
	prmt.b32 %r5266, %r5267, %r5268, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r5266;
	ld.local.u32 	%r5271, [%rd2+8];
	ld.local.u32 	%r5272, [%rd2+4];
	// inline asm
	prmt.b32 %r5270, %r5271, %r5272, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r5270;
	ld.local.u32 	%r5275, [%rd2+4];
	ld.local.u32 	%r5276, [%rd2];
	// inline asm
	prmt.b32 %r5274, %r5275, %r5276, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r5274;
	ld.local.u32 	%r5279, [%rd2];
	ld.local.u32 	%r5280, [%rd1+12];
	// inline asm
	prmt.b32 %r5278, %r5279, %r5280, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r5278;
	ld.local.u32 	%r5283, [%rd1+12];
	ld.local.u32 	%r5284, [%rd1+8];
	// inline asm
	prmt.b32 %r5282, %r5283, %r5284, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r5282;
	ld.local.u32 	%r5287, [%rd1+8];
	ld.local.u32 	%r5288, [%rd1+4];
	// inline asm
	prmt.b32 %r5286, %r5287, %r5288, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r5286;
	ld.local.u32 	%r5291, [%rd1+4];
	ld.local.u32 	%r5292, [%rd1];
	// inline asm
	prmt.b32 %r5290, %r5291, %r5292, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r5290;
	ld.local.u32 	%r5295, [%rd1];
	// inline asm
	prmt.b32 %r9672, %r5295, %r9673, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r9672;
	mov.u32 	%r9674, %r9673;
	mov.u32 	%r9675, %r9673;
	bra.uni 	BB1_88;

BB1_122:
	setp.gt.s32	%p50, %r1, 23;
	@%p50 bra 	BB1_138;

	setp.gt.s32	%p62, %r1, 19;
	@%p62 bra 	BB1_131;

	setp.gt.s32	%p68, %r1, 17;
	@%p68 bra 	BB1_128;

	setp.eq.s32	%p71, %r1, 16;
	@%p71 bra 	BB1_160;
	bra.uni 	BB1_126;

BB1_160:
	ld.local.u32 	%r7930, [%rd4+12];
	ld.local.u32 	%r7931, [%rd4+8];
	// inline asm
	prmt.b32 %r7929, %r7930, %r7931, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7929;
	ld.local.u32 	%r7934, [%rd4+8];
	ld.local.u32 	%r7935, [%rd4+4];
	// inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7933;
	ld.local.u32 	%r7938, [%rd4+4];
	ld.local.u32 	%r7939, [%rd4];
	// inline asm
	prmt.b32 %r7937, %r7938, %r7939, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7937;
	ld.local.u32 	%r7942, [%rd4];
	ld.local.u32 	%r7943, [%rd3+12];
	// inline asm
	prmt.b32 %r7941, %r7942, %r7943, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7941;
	ld.local.u32 	%r7946, [%rd3+12];
	ld.local.u32 	%r7947, [%rd3+8];
	// inline asm
	prmt.b32 %r7945, %r7946, %r7947, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7945;
	ld.local.u32 	%r7950, [%rd3+8];
	ld.local.u32 	%r7951, [%rd3+4];
	// inline asm
	prmt.b32 %r7949, %r7950, %r7951, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7949;
	ld.local.u32 	%r7954, [%rd3+4];
	ld.local.u32 	%r7955, [%rd3];
	// inline asm
	prmt.b32 %r7953, %r7954, %r7955, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7953;
	ld.local.u32 	%r7958, [%rd3];
	ld.local.u32 	%r7959, [%rd2+12];
	// inline asm
	prmt.b32 %r7957, %r7958, %r7959, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7957;
	ld.local.u32 	%r7962, [%rd2+12];
	ld.local.u32 	%r7963, [%rd2+8];
	// inline asm
	prmt.b32 %r7961, %r7962, %r7963, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7961;
	ld.local.u32 	%r7966, [%rd2+8];
	ld.local.u32 	%r7967, [%rd2+4];
	// inline asm
	prmt.b32 %r7965, %r7966, %r7967, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7965;
	ld.local.u32 	%r7970, [%rd2+4];
	ld.local.u32 	%r7971, [%rd2];
	// inline asm
	prmt.b32 %r7969, %r7970, %r7971, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7969;
	ld.local.u32 	%r7974, [%rd2];
	ld.local.u32 	%r7975, [%rd1+12];
	// inline asm
	prmt.b32 %r7973, %r7974, %r7975, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7973;
	ld.local.u32 	%r7978, [%rd1+12];
	ld.local.u32 	%r7979, [%rd1+8];
	// inline asm
	prmt.b32 %r7977, %r7978, %r7979, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7977;
	ld.local.u32 	%r7982, [%rd1+8];
	ld.local.u32 	%r7983, [%rd1+4];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7981;
	ld.local.u32 	%r7986, [%rd1+4];
	ld.local.u32 	%r7987, [%rd1];
	// inline asm
	prmt.b32 %r7985, %r7986, %r7987, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7985;
	ld.local.u32 	%r7990, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7989, %r7990, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7989;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2928, 0;
	st.local.u32 	[%rd1+4], %rd2928;
	st.local.u32 	[%rd1], %rd2928;
	bra.uni 	BB1_170;

BB1_34:
	setp.gt.s32	%p3, %r1, 23;
	@%p3 bra 	BB1_50;

	setp.gt.s32	%p15, %r1, 19;
	@%p15 bra 	BB1_43;

	setp.gt.s32	%p21, %r1, 17;
	@%p21 bra 	BB1_40;

	setp.eq.s32	%p24, %r1, 16;
	@%p24 bra 	BB1_72;
	bra.uni 	BB1_38;

BB1_72:
	ld.local.u32 	%r2680, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9692, %r9672, %r2680, %r2;
	// inline asm
	ld.local.u32 	%r2683, [%rd8+12];
	ld.local.u32 	%r2684, [%rd8+8];
	// inline asm
	prmt.b32 %r9685, %r2683, %r2684, %r2;
	// inline asm
	ld.local.u32 	%r2687, [%rd8+8];
	ld.local.u32 	%r2688, [%rd8+4];
	// inline asm
	prmt.b32 %r9686, %r2687, %r2688, %r2;
	// inline asm
	ld.local.u32 	%r2691, [%rd8+4];
	ld.local.u32 	%r2692, [%rd8];
	// inline asm
	prmt.b32 %r9687, %r2691, %r2692, %r2;
	// inline asm
	ld.local.u32 	%r2695, [%rd8];
	ld.local.u32 	%r2696, [%rd7+12];
	// inline asm
	prmt.b32 %r9688, %r2695, %r2696, %r2;
	// inline asm
	ld.local.u32 	%r2699, [%rd7+12];
	ld.local.u32 	%r2700, [%rd7+8];
	// inline asm
	prmt.b32 %r9681, %r2699, %r2700, %r2;
	// inline asm
	ld.local.u32 	%r2703, [%rd7+8];
	ld.local.u32 	%r2704, [%rd7+4];
	// inline asm
	prmt.b32 %r9682, %r2703, %r2704, %r2;
	// inline asm
	ld.local.u32 	%r2707, [%rd7+4];
	ld.local.u32 	%r2708, [%rd7];
	// inline asm
	prmt.b32 %r9683, %r2707, %r2708, %r2;
	// inline asm
	ld.local.u32 	%r2711, [%rd7];
	ld.local.u32 	%r2712, [%rd6+12];
	// inline asm
	prmt.b32 %r9684, %r2711, %r2712, %r2;
	// inline asm
	ld.local.u32 	%r2715, [%rd6+12];
	ld.local.u32 	%r2716, [%rd6+8];
	// inline asm
	prmt.b32 %r9677, %r2715, %r2716, %r2;
	// inline asm
	ld.local.u32 	%r2719, [%rd6+8];
	ld.local.u32 	%r2720, [%rd6+4];
	// inline asm
	prmt.b32 %r9678, %r2719, %r2720, %r2;
	// inline asm
	ld.local.u32 	%r2723, [%rd6+4];
	ld.local.u32 	%r2724, [%rd6];
	// inline asm
	prmt.b32 %r9679, %r2723, %r2724, %r2;
	// inline asm
	ld.local.u32 	%r2727, [%rd6];
	ld.local.u32 	%r2728, [%rd5+12];
	// inline asm
	prmt.b32 %r9680, %r2727, %r2728, %r2;
	// inline asm
	ld.local.u32 	%r2731, [%rd5+12];
	ld.local.u32 	%r2732, [%rd5+8];
	// inline asm
	prmt.b32 %r9673, %r2731, %r2732, %r2;
	// inline asm
	ld.local.u32 	%r2735, [%rd5+8];
	ld.local.u32 	%r2736, [%rd5+4];
	// inline asm
	prmt.b32 %r9674, %r2735, %r2736, %r2;
	// inline asm
	ld.local.u32 	%r2739, [%rd5+4];
	ld.local.u32 	%r2740, [%rd5];
	// inline asm
	prmt.b32 %r9675, %r2739, %r2740, %r2;
	// inline asm
	ld.local.u32 	%r2743, [%rd5];
	ld.local.u32 	%r2744, [%rd4+12];
	// inline asm
	prmt.b32 %r9676, %r2743, %r2744, %r2;
	// inline asm
	ld.local.u32 	%r2747, [%rd4+12];
	ld.local.u32 	%r2748, [%rd4+8];
	// inline asm
	prmt.b32 %r2746, %r2747, %r2748, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2746;
	ld.local.u32 	%r2751, [%rd4+8];
	ld.local.u32 	%r2752, [%rd4+4];
	// inline asm
	prmt.b32 %r2750, %r2751, %r2752, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2750;
	ld.local.u32 	%r2755, [%rd4+4];
	ld.local.u32 	%r2756, [%rd4];
	// inline asm
	prmt.b32 %r2754, %r2755, %r2756, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2754;
	ld.local.u32 	%r2759, [%rd4];
	ld.local.u32 	%r2760, [%rd3+12];
	// inline asm
	prmt.b32 %r2758, %r2759, %r2760, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2758;
	ld.local.u32 	%r2763, [%rd3+12];
	ld.local.u32 	%r2764, [%rd3+8];
	// inline asm
	prmt.b32 %r2762, %r2763, %r2764, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2762;
	ld.local.u32 	%r2767, [%rd3+8];
	ld.local.u32 	%r2768, [%rd3+4];
	// inline asm
	prmt.b32 %r2766, %r2767, %r2768, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2766;
	ld.local.u32 	%r2771, [%rd3+4];
	ld.local.u32 	%r2772, [%rd3];
	// inline asm
	prmt.b32 %r2770, %r2771, %r2772, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2770;
	ld.local.u32 	%r2775, [%rd3];
	ld.local.u32 	%r2776, [%rd2+12];
	// inline asm
	prmt.b32 %r2774, %r2775, %r2776, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2774;
	ld.local.u32 	%r2779, [%rd2+12];
	ld.local.u32 	%r2780, [%rd2+8];
	// inline asm
	prmt.b32 %r2778, %r2779, %r2780, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2778;
	ld.local.u32 	%r2783, [%rd2+8];
	ld.local.u32 	%r2784, [%rd2+4];
	// inline asm
	prmt.b32 %r2782, %r2783, %r2784, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2782;
	ld.local.u32 	%r2787, [%rd2+4];
	ld.local.u32 	%r2788, [%rd2];
	// inline asm
	prmt.b32 %r2786, %r2787, %r2788, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2786;
	ld.local.u32 	%r2791, [%rd2];
	ld.local.u32 	%r2792, [%rd1+12];
	// inline asm
	prmt.b32 %r2790, %r2791, %r2792, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2790;
	ld.local.u32 	%r2795, [%rd1+12];
	ld.local.u32 	%r2796, [%rd1+8];
	// inline asm
	prmt.b32 %r2794, %r2795, %r2796, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2794;
	ld.local.u32 	%r2799, [%rd1+8];
	ld.local.u32 	%r2800, [%rd1+4];
	// inline asm
	prmt.b32 %r2798, %r2799, %r2800, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2798;
	ld.local.u32 	%r2803, [%rd1+4];
	ld.local.u32 	%r2804, [%rd1];
	// inline asm
	prmt.b32 %r2802, %r2803, %r2804, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2802;
	ld.local.u32 	%r2807, [%rd1];
	// inline asm
	prmt.b32 %r2806, %r2807, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2806;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd34, 0;
	st.local.u32 	[%rd1+4], %rd34;
	st.local.u32 	[%rd1], %rd34;
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	mov.u32 	%r9691, %r9672;
	bra.uni 	BB1_82;

BB1_107:
	setp.gt.s32	%p74, %r1, 11;
	@%p74 bra 	BB1_115;

	setp.gt.s32	%p80, %r1, 9;
	@%p80 bra 	BB1_112;

	setp.eq.s32	%p83, %r1, 8;
	@%p83 bra 	BB1_164;
	bra.uni 	BB1_110;

BB1_164:
	ld.local.u32 	%r8562, [%rd6+12];
	ld.local.u32 	%r8563, [%rd6+8];
	// inline asm
	prmt.b32 %r8561, %r8562, %r8563, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8561;
	ld.local.u32 	%r8566, [%rd6+8];
	ld.local.u32 	%r8567, [%rd6+4];
	// inline asm
	prmt.b32 %r8565, %r8566, %r8567, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8565;
	ld.local.u32 	%r8570, [%rd6+4];
	ld.local.u32 	%r8571, [%rd6];
	// inline asm
	prmt.b32 %r8569, %r8570, %r8571, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8569;
	ld.local.u32 	%r8574, [%rd6];
	ld.local.u32 	%r8575, [%rd5+12];
	// inline asm
	prmt.b32 %r8573, %r8574, %r8575, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8573;
	ld.local.u32 	%r8578, [%rd5+12];
	ld.local.u32 	%r8579, [%rd5+8];
	// inline asm
	prmt.b32 %r8577, %r8578, %r8579, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8577;
	ld.local.u32 	%r8582, [%rd5+8];
	ld.local.u32 	%r8583, [%rd5+4];
	// inline asm
	prmt.b32 %r8581, %r8582, %r8583, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8581;
	ld.local.u32 	%r8586, [%rd5+4];
	ld.local.u32 	%r8587, [%rd5];
	// inline asm
	prmt.b32 %r8585, %r8586, %r8587, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8585;
	ld.local.u32 	%r8590, [%rd5];
	ld.local.u32 	%r8591, [%rd4+12];
	// inline asm
	prmt.b32 %r8589, %r8590, %r8591, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8589;
	ld.local.u32 	%r8594, [%rd4+12];
	ld.local.u32 	%r8595, [%rd4+8];
	// inline asm
	prmt.b32 %r8593, %r8594, %r8595, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8593;
	ld.local.u32 	%r8598, [%rd4+8];
	ld.local.u32 	%r8599, [%rd4+4];
	// inline asm
	prmt.b32 %r8597, %r8598, %r8599, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8597;
	ld.local.u32 	%r8602, [%rd4+4];
	ld.local.u32 	%r8603, [%rd4];
	// inline asm
	prmt.b32 %r8601, %r8602, %r8603, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8601;
	ld.local.u32 	%r8606, [%rd4];
	ld.local.u32 	%r8607, [%rd3+12];
	// inline asm
	prmt.b32 %r8605, %r8606, %r8607, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8605;
	ld.local.u32 	%r8610, [%rd3+12];
	ld.local.u32 	%r8611, [%rd3+8];
	// inline asm
	prmt.b32 %r8609, %r8610, %r8611, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8609;
	ld.local.u32 	%r8614, [%rd3+8];
	ld.local.u32 	%r8615, [%rd3+4];
	// inline asm
	prmt.b32 %r8613, %r8614, %r8615, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8613;
	ld.local.u32 	%r8618, [%rd3+4];
	ld.local.u32 	%r8619, [%rd3];
	// inline asm
	prmt.b32 %r8617, %r8618, %r8619, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8617;
	ld.local.u32 	%r8622, [%rd3];
	ld.local.u32 	%r8623, [%rd2+12];
	// inline asm
	prmt.b32 %r8621, %r8622, %r8623, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8621;
	ld.local.u32 	%r8626, [%rd2+12];
	ld.local.u32 	%r8627, [%rd2+8];
	// inline asm
	prmt.b32 %r8625, %r8626, %r8627, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8625;
	ld.local.u32 	%r8630, [%rd2+8];
	ld.local.u32 	%r8631, [%rd2+4];
	// inline asm
	prmt.b32 %r8629, %r8630, %r8631, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8629;
	ld.local.u32 	%r8634, [%rd2+4];
	ld.local.u32 	%r8635, [%rd2];
	// inline asm
	prmt.b32 %r8633, %r8634, %r8635, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8633;
	ld.local.u32 	%r8638, [%rd2];
	ld.local.u32 	%r8639, [%rd1+12];
	// inline asm
	prmt.b32 %r8637, %r8638, %r8639, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8637;
	ld.local.u32 	%r8642, [%rd1+12];
	ld.local.u32 	%r8643, [%rd1+8];
	// inline asm
	prmt.b32 %r8641, %r8642, %r8643, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8641;
	ld.local.u32 	%r8646, [%rd1+8];
	ld.local.u32 	%r8647, [%rd1+4];
	// inline asm
	prmt.b32 %r8645, %r8646, %r8647, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8645;
	ld.local.u32 	%r8650, [%rd1+4];
	ld.local.u32 	%r8651, [%rd1];
	// inline asm
	prmt.b32 %r8649, %r8650, %r8651, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8649;
	ld.local.u32 	%r8654, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8653, %r8654, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8653;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2936, 0;
	st.local.u32 	[%rd1+4], %rd2936;
	st.local.u32 	[%rd1], %rd2936;
	bra.uni 	BB1_170;

BB1_19:
	setp.gt.s32	%p27, %r1, 11;
	@%p27 bra 	BB1_27;

	setp.gt.s32	%p33, %r1, 9;
	@%p33 bra 	BB1_24;

	setp.eq.s32	%p36, %r1, 8;
	@%p36 bra 	BB1_76;
	bra.uni 	BB1_22;

BB1_76:
	ld.local.u32 	%r3892, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9684, %r9672, %r3892, %r2;
	// inline asm
	ld.local.u32 	%r3895, [%rd8+12];
	ld.local.u32 	%r3896, [%rd8+8];
	// inline asm
	prmt.b32 %r9677, %r3895, %r3896, %r2;
	// inline asm
	ld.local.u32 	%r3899, [%rd8+8];
	ld.local.u32 	%r3900, [%rd8+4];
	// inline asm
	prmt.b32 %r9678, %r3899, %r3900, %r2;
	// inline asm
	ld.local.u32 	%r3903, [%rd8+4];
	ld.local.u32 	%r3904, [%rd8];
	// inline asm
	prmt.b32 %r9679, %r3903, %r3904, %r2;
	// inline asm
	ld.local.u32 	%r3907, [%rd8];
	ld.local.u32 	%r3908, [%rd7+12];
	// inline asm
	prmt.b32 %r9680, %r3907, %r3908, %r2;
	// inline asm
	ld.local.u32 	%r3911, [%rd7+12];
	ld.local.u32 	%r3912, [%rd7+8];
	// inline asm
	prmt.b32 %r9673, %r3911, %r3912, %r2;
	// inline asm
	ld.local.u32 	%r3915, [%rd7+8];
	ld.local.u32 	%r3916, [%rd7+4];
	// inline asm
	prmt.b32 %r9674, %r3915, %r3916, %r2;
	// inline asm
	ld.local.u32 	%r3919, [%rd7+4];
	ld.local.u32 	%r3920, [%rd7];
	// inline asm
	prmt.b32 %r9675, %r3919, %r3920, %r2;
	// inline asm
	ld.local.u32 	%r3923, [%rd7];
	ld.local.u32 	%r3924, [%rd6+12];
	// inline asm
	prmt.b32 %r9676, %r3923, %r3924, %r2;
	// inline asm
	ld.local.u32 	%r3927, [%rd6+12];
	ld.local.u32 	%r3928, [%rd6+8];
	// inline asm
	prmt.b32 %r3926, %r3927, %r3928, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3926;
	ld.local.u32 	%r3931, [%rd6+8];
	ld.local.u32 	%r3932, [%rd6+4];
	// inline asm
	prmt.b32 %r3930, %r3931, %r3932, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3930;
	ld.local.u32 	%r3935, [%rd6+4];
	ld.local.u32 	%r3936, [%rd6];
	// inline asm
	prmt.b32 %r3934, %r3935, %r3936, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3934;
	ld.local.u32 	%r3939, [%rd6];
	ld.local.u32 	%r3940, [%rd5+12];
	// inline asm
	prmt.b32 %r3938, %r3939, %r3940, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3938;
	ld.local.u32 	%r3943, [%rd5+12];
	ld.local.u32 	%r3944, [%rd5+8];
	// inline asm
	prmt.b32 %r3942, %r3943, %r3944, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3942;
	ld.local.u32 	%r3947, [%rd5+8];
	ld.local.u32 	%r3948, [%rd5+4];
	// inline asm
	prmt.b32 %r3946, %r3947, %r3948, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3946;
	ld.local.u32 	%r3951, [%rd5+4];
	ld.local.u32 	%r3952, [%rd5];
	// inline asm
	prmt.b32 %r3950, %r3951, %r3952, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3950;
	ld.local.u32 	%r3955, [%rd5];
	ld.local.u32 	%r3956, [%rd4+12];
	// inline asm
	prmt.b32 %r3954, %r3955, %r3956, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3954;
	ld.local.u32 	%r3959, [%rd4+12];
	ld.local.u32 	%r3960, [%rd4+8];
	// inline asm
	prmt.b32 %r3958, %r3959, %r3960, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3958;
	ld.local.u32 	%r3963, [%rd4+8];
	ld.local.u32 	%r3964, [%rd4+4];
	// inline asm
	prmt.b32 %r3962, %r3963, %r3964, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3962;
	ld.local.u32 	%r3967, [%rd4+4];
	ld.local.u32 	%r3968, [%rd4];
	// inline asm
	prmt.b32 %r3966, %r3967, %r3968, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3966;
	ld.local.u32 	%r3971, [%rd4];
	ld.local.u32 	%r3972, [%rd3+12];
	// inline asm
	prmt.b32 %r3970, %r3971, %r3972, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3970;
	ld.local.u32 	%r3975, [%rd3+12];
	ld.local.u32 	%r3976, [%rd3+8];
	// inline asm
	prmt.b32 %r3974, %r3975, %r3976, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3974;
	ld.local.u32 	%r3979, [%rd3+8];
	ld.local.u32 	%r3980, [%rd3+4];
	// inline asm
	prmt.b32 %r3978, %r3979, %r3980, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3978;
	ld.local.u32 	%r3983, [%rd3+4];
	ld.local.u32 	%r3984, [%rd3];
	// inline asm
	prmt.b32 %r3982, %r3983, %r3984, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3982;
	ld.local.u32 	%r3987, [%rd3];
	ld.local.u32 	%r3988, [%rd2+12];
	// inline asm
	prmt.b32 %r3986, %r3987, %r3988, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3986;
	ld.local.u32 	%r3991, [%rd2+12];
	ld.local.u32 	%r3992, [%rd2+8];
	// inline asm
	prmt.b32 %r3990, %r3991, %r3992, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3990;
	ld.local.u32 	%r3995, [%rd2+8];
	ld.local.u32 	%r3996, [%rd2+4];
	// inline asm
	prmt.b32 %r3994, %r3995, %r3996, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3994;
	ld.local.u32 	%r3999, [%rd2+4];
	ld.local.u32 	%r4000, [%rd2];
	// inline asm
	prmt.b32 %r3998, %r3999, %r4000, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3998;
	ld.local.u32 	%r4003, [%rd2];
	ld.local.u32 	%r4004, [%rd1+12];
	// inline asm
	prmt.b32 %r4002, %r4003, %r4004, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4002;
	ld.local.u32 	%r4007, [%rd1+12];
	ld.local.u32 	%r4008, [%rd1+8];
	// inline asm
	prmt.b32 %r4006, %r4007, %r4008, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4006;
	ld.local.u32 	%r4011, [%rd1+8];
	ld.local.u32 	%r4012, [%rd1+4];
	// inline asm
	prmt.b32 %r4010, %r4011, %r4012, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4010;
	ld.local.u32 	%r4015, [%rd1+4];
	ld.local.u32 	%r4016, [%rd1];
	// inline asm
	prmt.b32 %r4014, %r4015, %r4016, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4014;
	ld.local.u32 	%r4019, [%rd1];
	// inline asm
	prmt.b32 %r4018, %r4019, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4018;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd42, 0;
	st.local.u32 	[%rd1+4], %rd42;
	st.local.u32 	[%rd1], %rd42;
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	mov.u32 	%r9683, %r9672;
	bra.uni 	BB1_80;

BB1_138:
	setp.gt.s32	%p51, %r1, 27;
	@%p51 bra 	BB1_146;

	setp.gt.s32	%p57, %r1, 25;
	@%p57 bra 	BB1_143;

	setp.eq.s32	%p60, %r1, 24;
	@%p60 bra 	BB1_156;
	bra.uni 	BB1_141;

BB1_156:
	ld.local.u32 	%r7554, [%rd2+12];
	ld.local.u32 	%r7555, [%rd2+8];
	// inline asm
	prmt.b32 %r7553, %r7554, %r7555, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7553;
	ld.local.u32 	%r7558, [%rd2+8];
	ld.local.u32 	%r7559, [%rd2+4];
	// inline asm
	prmt.b32 %r7557, %r7558, %r7559, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7557;
	ld.local.u32 	%r7562, [%rd2+4];
	ld.local.u32 	%r7563, [%rd2];
	// inline asm
	prmt.b32 %r7561, %r7562, %r7563, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7561;
	ld.local.u32 	%r7566, [%rd2];
	ld.local.u32 	%r7567, [%rd1+12];
	// inline asm
	prmt.b32 %r7565, %r7566, %r7567, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7565;
	ld.local.u32 	%r7570, [%rd1+12];
	ld.local.u32 	%r7571, [%rd1+8];
	// inline asm
	prmt.b32 %r7569, %r7570, %r7571, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7569;
	ld.local.u32 	%r7574, [%rd1+8];
	ld.local.u32 	%r7575, [%rd1+4];
	// inline asm
	prmt.b32 %r7573, %r7574, %r7575, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7573;
	ld.local.u32 	%r7578, [%rd1+4];
	ld.local.u32 	%r7579, [%rd1];
	// inline asm
	prmt.b32 %r7577, %r7578, %r7579, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7577;
	ld.local.u32 	%r7582, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7581, %r7582, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7581;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2920, 0;
	st.local.u32 	[%rd1+4], %rd2920;
	st.local.u32 	[%rd1], %rd2920;
	bra.uni 	BB1_170;

BB1_50:
	setp.gt.s32	%p4, %r1, 27;
	@%p4 bra 	BB1_58;

	setp.gt.s32	%p10, %r1, 25;
	@%p10 bra 	BB1_55;

	setp.eq.s32	%p13, %r1, 24;
	@%p13 bra 	BB1_68;
	bra.uni 	BB1_53;

BB1_68:
	ld.local.u32 	%r1532, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9700, %r9672, %r1532, %r2;
	// inline asm
	ld.local.u32 	%r1535, [%rd8+12];
	ld.local.u32 	%r1536, [%rd8+8];
	// inline asm
	prmt.b32 %r9693, %r1535, %r1536, %r2;
	// inline asm
	ld.local.u32 	%r1539, [%rd8+8];
	ld.local.u32 	%r1540, [%rd8+4];
	// inline asm
	prmt.b32 %r9694, %r1539, %r1540, %r2;
	// inline asm
	ld.local.u32 	%r1543, [%rd8+4];
	ld.local.u32 	%r1544, [%rd8];
	// inline asm
	prmt.b32 %r9695, %r1543, %r1544, %r2;
	// inline asm
	ld.local.u32 	%r1547, [%rd8];
	ld.local.u32 	%r1548, [%rd7+12];
	// inline asm
	prmt.b32 %r9696, %r1547, %r1548, %r2;
	// inline asm
	ld.local.u32 	%r1551, [%rd7+12];
	ld.local.u32 	%r1552, [%rd7+8];
	// inline asm
	prmt.b32 %r9689, %r1551, %r1552, %r2;
	// inline asm
	ld.local.u32 	%r1555, [%rd7+8];
	ld.local.u32 	%r1556, [%rd7+4];
	// inline asm
	prmt.b32 %r9690, %r1555, %r1556, %r2;
	// inline asm
	ld.local.u32 	%r1559, [%rd7+4];
	ld.local.u32 	%r1560, [%rd7];
	// inline asm
	prmt.b32 %r9691, %r1559, %r1560, %r2;
	// inline asm
	ld.local.u32 	%r1563, [%rd7];
	ld.local.u32 	%r1564, [%rd6+12];
	// inline asm
	prmt.b32 %r9692, %r1563, %r1564, %r2;
	// inline asm
	ld.local.u32 	%r1567, [%rd6+12];
	ld.local.u32 	%r1568, [%rd6+8];
	// inline asm
	prmt.b32 %r9685, %r1567, %r1568, %r2;
	// inline asm
	ld.local.u32 	%r1571, [%rd6+8];
	ld.local.u32 	%r1572, [%rd6+4];
	// inline asm
	prmt.b32 %r9686, %r1571, %r1572, %r2;
	// inline asm
	ld.local.u32 	%r1575, [%rd6+4];
	ld.local.u32 	%r1576, [%rd6];
	// inline asm
	prmt.b32 %r9687, %r1575, %r1576, %r2;
	// inline asm
	ld.local.u32 	%r1579, [%rd6];
	ld.local.u32 	%r1580, [%rd5+12];
	// inline asm
	prmt.b32 %r9688, %r1579, %r1580, %r2;
	// inline asm
	ld.local.u32 	%r1583, [%rd5+12];
	ld.local.u32 	%r1584, [%rd5+8];
	// inline asm
	prmt.b32 %r9681, %r1583, %r1584, %r2;
	// inline asm
	ld.local.u32 	%r1587, [%rd5+8];
	ld.local.u32 	%r1588, [%rd5+4];
	// inline asm
	prmt.b32 %r9682, %r1587, %r1588, %r2;
	// inline asm
	ld.local.u32 	%r1591, [%rd5+4];
	ld.local.u32 	%r1592, [%rd5];
	// inline asm
	prmt.b32 %r9683, %r1591, %r1592, %r2;
	// inline asm
	ld.local.u32 	%r1595, [%rd5];
	ld.local.u32 	%r1596, [%rd4+12];
	// inline asm
	prmt.b32 %r9684, %r1595, %r1596, %r2;
	// inline asm
	ld.local.u32 	%r1599, [%rd4+12];
	ld.local.u32 	%r1600, [%rd4+8];
	// inline asm
	prmt.b32 %r9677, %r1599, %r1600, %r2;
	// inline asm
	ld.local.u32 	%r1603, [%rd4+8];
	ld.local.u32 	%r1604, [%rd4+4];
	// inline asm
	prmt.b32 %r9678, %r1603, %r1604, %r2;
	// inline asm
	ld.local.u32 	%r1607, [%rd4+4];
	ld.local.u32 	%r1608, [%rd4];
	// inline asm
	prmt.b32 %r9679, %r1607, %r1608, %r2;
	// inline asm
	ld.local.u32 	%r1611, [%rd4];
	ld.local.u32 	%r1612, [%rd3+12];
	// inline asm
	prmt.b32 %r9680, %r1611, %r1612, %r2;
	// inline asm
	ld.local.u32 	%r1615, [%rd3+12];
	ld.local.u32 	%r1616, [%rd3+8];
	// inline asm
	prmt.b32 %r9673, %r1615, %r1616, %r2;
	// inline asm
	ld.local.u32 	%r1619, [%rd3+8];
	ld.local.u32 	%r1620, [%rd3+4];
	// inline asm
	prmt.b32 %r9674, %r1619, %r1620, %r2;
	// inline asm
	ld.local.u32 	%r1623, [%rd3+4];
	ld.local.u32 	%r1624, [%rd3];
	// inline asm
	prmt.b32 %r9675, %r1623, %r1624, %r2;
	// inline asm
	ld.local.u32 	%r1627, [%rd3];
	ld.local.u32 	%r1628, [%rd2+12];
	// inline asm
	prmt.b32 %r9676, %r1627, %r1628, %r2;
	// inline asm
	ld.local.u32 	%r1631, [%rd2+12];
	ld.local.u32 	%r1632, [%rd2+8];
	// inline asm
	prmt.b32 %r1630, %r1631, %r1632, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1630;
	ld.local.u32 	%r1635, [%rd2+8];
	ld.local.u32 	%r1636, [%rd2+4];
	// inline asm
	prmt.b32 %r1634, %r1635, %r1636, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1634;
	ld.local.u32 	%r1639, [%rd2+4];
	ld.local.u32 	%r1640, [%rd2];
	// inline asm
	prmt.b32 %r1638, %r1639, %r1640, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1638;
	ld.local.u32 	%r1643, [%rd2];
	ld.local.u32 	%r1644, [%rd1+12];
	// inline asm
	prmt.b32 %r1642, %r1643, %r1644, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1642;
	ld.local.u32 	%r1647, [%rd1+12];
	ld.local.u32 	%r1648, [%rd1+8];
	// inline asm
	prmt.b32 %r1646, %r1647, %r1648, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1646;
	ld.local.u32 	%r1651, [%rd1+8];
	ld.local.u32 	%r1652, [%rd1+4];
	// inline asm
	prmt.b32 %r1650, %r1651, %r1652, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1650;
	ld.local.u32 	%r1655, [%rd1+4];
	ld.local.u32 	%r1656, [%rd1];
	// inline asm
	prmt.b32 %r1654, %r1655, %r1656, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1654;
	ld.local.u32 	%r1659, [%rd1];
	// inline asm
	prmt.b32 %r1658, %r1659, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1658;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd26, 0;
	st.local.u32 	[%rd1+4], %rd26;
	st.local.u32 	[%rd1], %rd26;
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	mov.u32 	%r9699, %r9672;
	bra.uni 	BB1_84;

BB1_100:
	setp.gt.s32	%p86, %r1, 5;
	@%p86 bra 	BB1_104;

	setp.eq.s32	%p89, %r1, 4;
	@%p89 bra 	BB1_166;
	bra.uni 	BB1_102;

BB1_166:
	ld.local.u32 	%r8974, [%rd7+12];
	ld.local.u32 	%r8975, [%rd7+8];
	// inline asm
	prmt.b32 %r8973, %r8974, %r8975, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8973;
	ld.local.u32 	%r8978, [%rd7+8];
	ld.local.u32 	%r8979, [%rd7+4];
	// inline asm
	prmt.b32 %r8977, %r8978, %r8979, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8977;
	ld.local.u32 	%r8982, [%rd7+4];
	ld.local.u32 	%r8983, [%rd7];
	// inline asm
	prmt.b32 %r8981, %r8982, %r8983, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8981;
	ld.local.u32 	%r8986, [%rd7];
	ld.local.u32 	%r8987, [%rd6+12];
	// inline asm
	prmt.b32 %r8985, %r8986, %r8987, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8985;
	ld.local.u32 	%r8990, [%rd6+12];
	ld.local.u32 	%r8991, [%rd6+8];
	// inline asm
	prmt.b32 %r8989, %r8990, %r8991, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8989;
	ld.local.u32 	%r8994, [%rd6+8];
	ld.local.u32 	%r8995, [%rd6+4];
	// inline asm
	prmt.b32 %r8993, %r8994, %r8995, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8993;
	ld.local.u32 	%r8998, [%rd6+4];
	ld.local.u32 	%r8999, [%rd6];
	// inline asm
	prmt.b32 %r8997, %r8998, %r8999, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8997;
	ld.local.u32 	%r9002, [%rd6];
	ld.local.u32 	%r9003, [%rd5+12];
	// inline asm
	prmt.b32 %r9001, %r9002, %r9003, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9001;
	ld.local.u32 	%r9006, [%rd5+12];
	ld.local.u32 	%r9007, [%rd5+8];
	// inline asm
	prmt.b32 %r9005, %r9006, %r9007, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9005;
	ld.local.u32 	%r9010, [%rd5+8];
	ld.local.u32 	%r9011, [%rd5+4];
	// inline asm
	prmt.b32 %r9009, %r9010, %r9011, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9009;
	ld.local.u32 	%r9014, [%rd5+4];
	ld.local.u32 	%r9015, [%rd5];
	// inline asm
	prmt.b32 %r9013, %r9014, %r9015, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9013;
	ld.local.u32 	%r9018, [%rd5];
	ld.local.u32 	%r9019, [%rd4+12];
	// inline asm
	prmt.b32 %r9017, %r9018, %r9019, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9017;
	ld.local.u32 	%r9022, [%rd4+12];
	ld.local.u32 	%r9023, [%rd4+8];
	// inline asm
	prmt.b32 %r9021, %r9022, %r9023, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9021;
	ld.local.u32 	%r9026, [%rd4+8];
	ld.local.u32 	%r9027, [%rd4+4];
	// inline asm
	prmt.b32 %r9025, %r9026, %r9027, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9025;
	ld.local.u32 	%r9030, [%rd4+4];
	ld.local.u32 	%r9031, [%rd4];
	// inline asm
	prmt.b32 %r9029, %r9030, %r9031, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9029;
	ld.local.u32 	%r9034, [%rd4];
	ld.local.u32 	%r9035, [%rd3+12];
	// inline asm
	prmt.b32 %r9033, %r9034, %r9035, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9033;
	ld.local.u32 	%r9038, [%rd3+12];
	ld.local.u32 	%r9039, [%rd3+8];
	// inline asm
	prmt.b32 %r9037, %r9038, %r9039, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9037;
	ld.local.u32 	%r9042, [%rd3+8];
	ld.local.u32 	%r9043, [%rd3+4];
	// inline asm
	prmt.b32 %r9041, %r9042, %r9043, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9041;
	ld.local.u32 	%r9046, [%rd3+4];
	ld.local.u32 	%r9047, [%rd3];
	// inline asm
	prmt.b32 %r9045, %r9046, %r9047, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9045;
	ld.local.u32 	%r9050, [%rd3];
	ld.local.u32 	%r9051, [%rd2+12];
	// inline asm
	prmt.b32 %r9049, %r9050, %r9051, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9049;
	ld.local.u32 	%r9054, [%rd2+12];
	ld.local.u32 	%r9055, [%rd2+8];
	// inline asm
	prmt.b32 %r9053, %r9054, %r9055, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9053;
	ld.local.u32 	%r9058, [%rd2+8];
	ld.local.u32 	%r9059, [%rd2+4];
	// inline asm
	prmt.b32 %r9057, %r9058, %r9059, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9057;
	ld.local.u32 	%r9062, [%rd2+4];
	ld.local.u32 	%r9063, [%rd2];
	// inline asm
	prmt.b32 %r9061, %r9062, %r9063, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9061;
	ld.local.u32 	%r9066, [%rd2];
	ld.local.u32 	%r9067, [%rd1+12];
	// inline asm
	prmt.b32 %r9065, %r9066, %r9067, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9065;
	ld.local.u32 	%r9070, [%rd1+12];
	ld.local.u32 	%r9071, [%rd1+8];
	// inline asm
	prmt.b32 %r9069, %r9070, %r9071, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9069;
	ld.local.u32 	%r9074, [%rd1+8];
	ld.local.u32 	%r9075, [%rd1+4];
	// inline asm
	prmt.b32 %r9073, %r9074, %r9075, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9073;
	ld.local.u32 	%r9078, [%rd1+4];
	ld.local.u32 	%r9079, [%rd1];
	// inline asm
	prmt.b32 %r9077, %r9078, %r9079, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9077;
	ld.local.u32 	%r9082, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9081, %r9082, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9081;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2940, 0;
	st.local.u32 	[%rd1+4], %rd2940;
	st.local.u32 	[%rd1], %rd2940;
	bra.uni 	BB1_170;

BB1_12:
	setp.gt.s32	%p39, %r1, 5;
	@%p39 bra 	BB1_16;

	setp.eq.s32	%p42, %r1, 4;
	@%p42 bra 	BB1_78;
	bra.uni 	BB1_14;

BB1_78:
	ld.local.u32 	%r4522, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9680, %r9672, %r4522, %r2;
	// inline asm
	ld.local.u32 	%r4525, [%rd8+12];
	ld.local.u32 	%r4526, [%rd8+8];
	// inline asm
	prmt.b32 %r9673, %r4525, %r4526, %r2;
	// inline asm
	ld.local.u32 	%r4529, [%rd8+8];
	ld.local.u32 	%r4530, [%rd8+4];
	// inline asm
	prmt.b32 %r9674, %r4529, %r4530, %r2;
	// inline asm
	ld.local.u32 	%r4533, [%rd8+4];
	ld.local.u32 	%r4534, [%rd8];
	// inline asm
	prmt.b32 %r9675, %r4533, %r4534, %r2;
	// inline asm
	ld.local.u32 	%r4537, [%rd8];
	ld.local.u32 	%r4538, [%rd7+12];
	// inline asm
	prmt.b32 %r9676, %r4537, %r4538, %r2;
	// inline asm
	ld.local.u32 	%r4541, [%rd7+12];
	ld.local.u32 	%r4542, [%rd7+8];
	// inline asm
	prmt.b32 %r4540, %r4541, %r4542, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4540;
	ld.local.u32 	%r4545, [%rd7+8];
	ld.local.u32 	%r4546, [%rd7+4];
	// inline asm
	prmt.b32 %r4544, %r4545, %r4546, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4544;
	ld.local.u32 	%r4549, [%rd7+4];
	ld.local.u32 	%r4550, [%rd7];
	// inline asm
	prmt.b32 %r4548, %r4549, %r4550, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4548;
	ld.local.u32 	%r4553, [%rd7];
	ld.local.u32 	%r4554, [%rd6+12];
	// inline asm
	prmt.b32 %r4552, %r4553, %r4554, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4552;
	ld.local.u32 	%r4557, [%rd6+12];
	ld.local.u32 	%r4558, [%rd6+8];
	// inline asm
	prmt.b32 %r4556, %r4557, %r4558, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4556;
	ld.local.u32 	%r4561, [%rd6+8];
	ld.local.u32 	%r4562, [%rd6+4];
	// inline asm
	prmt.b32 %r4560, %r4561, %r4562, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4560;
	ld.local.u32 	%r4565, [%rd6+4];
	ld.local.u32 	%r4566, [%rd6];
	// inline asm
	prmt.b32 %r4564, %r4565, %r4566, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4564;
	ld.local.u32 	%r4569, [%rd6];
	ld.local.u32 	%r4570, [%rd5+12];
	// inline asm
	prmt.b32 %r4568, %r4569, %r4570, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4568;
	ld.local.u32 	%r4573, [%rd5+12];
	ld.local.u32 	%r4574, [%rd5+8];
	// inline asm
	prmt.b32 %r4572, %r4573, %r4574, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4572;
	ld.local.u32 	%r4577, [%rd5+8];
	ld.local.u32 	%r4578, [%rd5+4];
	// inline asm
	prmt.b32 %r4576, %r4577, %r4578, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4576;
	ld.local.u32 	%r4581, [%rd5+4];
	ld.local.u32 	%r4582, [%rd5];
	// inline asm
	prmt.b32 %r4580, %r4581, %r4582, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4580;
	ld.local.u32 	%r4585, [%rd5];
	ld.local.u32 	%r4586, [%rd4+12];
	// inline asm
	prmt.b32 %r4584, %r4585, %r4586, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4584;
	ld.local.u32 	%r4589, [%rd4+12];
	ld.local.u32 	%r4590, [%rd4+8];
	// inline asm
	prmt.b32 %r4588, %r4589, %r4590, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4588;
	ld.local.u32 	%r4593, [%rd4+8];
	ld.local.u32 	%r4594, [%rd4+4];
	// inline asm
	prmt.b32 %r4592, %r4593, %r4594, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4592;
	ld.local.u32 	%r4597, [%rd4+4];
	ld.local.u32 	%r4598, [%rd4];
	// inline asm
	prmt.b32 %r4596, %r4597, %r4598, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4596;
	ld.local.u32 	%r4601, [%rd4];
	ld.local.u32 	%r4602, [%rd3+12];
	// inline asm
	prmt.b32 %r4600, %r4601, %r4602, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4600;
	ld.local.u32 	%r4605, [%rd3+12];
	ld.local.u32 	%r4606, [%rd3+8];
	// inline asm
	prmt.b32 %r4604, %r4605, %r4606, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4604;
	ld.local.u32 	%r4609, [%rd3+8];
	ld.local.u32 	%r4610, [%rd3+4];
	// inline asm
	prmt.b32 %r4608, %r4609, %r4610, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4608;
	ld.local.u32 	%r4613, [%rd3+4];
	ld.local.u32 	%r4614, [%rd3];
	// inline asm
	prmt.b32 %r4612, %r4613, %r4614, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4612;
	ld.local.u32 	%r4617, [%rd3];
	ld.local.u32 	%r4618, [%rd2+12];
	// inline asm
	prmt.b32 %r4616, %r4617, %r4618, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4616;
	ld.local.u32 	%r4621, [%rd2+12];
	ld.local.u32 	%r4622, [%rd2+8];
	// inline asm
	prmt.b32 %r4620, %r4621, %r4622, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4620;
	ld.local.u32 	%r4625, [%rd2+8];
	ld.local.u32 	%r4626, [%rd2+4];
	// inline asm
	prmt.b32 %r4624, %r4625, %r4626, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4624;
	ld.local.u32 	%r4629, [%rd2+4];
	ld.local.u32 	%r4630, [%rd2];
	// inline asm
	prmt.b32 %r4628, %r4629, %r4630, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4628;
	ld.local.u32 	%r4633, [%rd2];
	ld.local.u32 	%r4634, [%rd1+12];
	// inline asm
	prmt.b32 %r4632, %r4633, %r4634, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4632;
	ld.local.u32 	%r4637, [%rd1+12];
	ld.local.u32 	%r4638, [%rd1+8];
	// inline asm
	prmt.b32 %r4636, %r4637, %r4638, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4636;
	ld.local.u32 	%r4641, [%rd1+8];
	ld.local.u32 	%r4642, [%rd1+4];
	// inline asm
	prmt.b32 %r4640, %r4641, %r4642, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4640;
	ld.local.u32 	%r4645, [%rd1+4];
	ld.local.u32 	%r4646, [%rd1];
	// inline asm
	prmt.b32 %r4644, %r4645, %r4646, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4644;
	ld.local.u32 	%r4649, [%rd1];
	// inline asm
	prmt.b32 %r4648, %r4649, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4648;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd46, 0;
	st.local.u32 	[%rd1+4], %rd46;
	st.local.u32 	[%rd1], %rd46;
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	mov.u32 	%r9679, %r9672;
	bra.uni 	BB1_79;

BB1_131:
	setp.gt.s32	%p63, %r1, 21;
	@%p63 bra 	BB1_135;

	setp.eq.s32	%p66, %r1, 20;
	@%p66 bra 	BB1_158;
	bra.uni 	BB1_133;

BB1_158:
	ld.local.u32 	%r7710, [%rd3+12];
	ld.local.u32 	%r7711, [%rd3+8];
	// inline asm
	prmt.b32 %r7709, %r7710, %r7711, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7709;
	ld.local.u32 	%r7714, [%rd3+8];
	ld.local.u32 	%r7715, [%rd3+4];
	// inline asm
	prmt.b32 %r7713, %r7714, %r7715, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7713;
	ld.local.u32 	%r7718, [%rd3+4];
	ld.local.u32 	%r7719, [%rd3];
	// inline asm
	prmt.b32 %r7717, %r7718, %r7719, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7717;
	ld.local.u32 	%r7722, [%rd3];
	ld.local.u32 	%r7723, [%rd2+12];
	// inline asm
	prmt.b32 %r7721, %r7722, %r7723, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7721;
	ld.local.u32 	%r7726, [%rd2+12];
	ld.local.u32 	%r7727, [%rd2+8];
	// inline asm
	prmt.b32 %r7725, %r7726, %r7727, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7725;
	ld.local.u32 	%r7730, [%rd2+8];
	ld.local.u32 	%r7731, [%rd2+4];
	// inline asm
	prmt.b32 %r7729, %r7730, %r7731, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7729;
	ld.local.u32 	%r7734, [%rd2+4];
	ld.local.u32 	%r7735, [%rd2];
	// inline asm
	prmt.b32 %r7733, %r7734, %r7735, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7733;
	ld.local.u32 	%r7738, [%rd2];
	ld.local.u32 	%r7739, [%rd1+12];
	// inline asm
	prmt.b32 %r7737, %r7738, %r7739, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7737;
	ld.local.u32 	%r7742, [%rd1+12];
	ld.local.u32 	%r7743, [%rd1+8];
	// inline asm
	prmt.b32 %r7741, %r7742, %r7743, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7741;
	ld.local.u32 	%r7746, [%rd1+8];
	ld.local.u32 	%r7747, [%rd1+4];
	// inline asm
	prmt.b32 %r7745, %r7746, %r7747, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7745;
	ld.local.u32 	%r7750, [%rd1+4];
	ld.local.u32 	%r7751, [%rd1];
	// inline asm
	prmt.b32 %r7749, %r7750, %r7751, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7749;
	ld.local.u32 	%r7754, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7753, %r7754, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7753;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2924, 0;
	st.local.u32 	[%rd1+4], %rd2924;
	st.local.u32 	[%rd1], %rd2924;
	bra.uni 	BB1_170;

BB1_43:
	setp.gt.s32	%p16, %r1, 21;
	@%p16 bra 	BB1_47;

	setp.eq.s32	%p19, %r1, 20;
	@%p19 bra 	BB1_70;
	bra.uni 	BB1_45;

BB1_70:
	ld.local.u32 	%r2098, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9696, %r9672, %r2098, %r2;
	// inline asm
	ld.local.u32 	%r2101, [%rd8+12];
	ld.local.u32 	%r2102, [%rd8+8];
	// inline asm
	prmt.b32 %r9689, %r2101, %r2102, %r2;
	// inline asm
	ld.local.u32 	%r2105, [%rd8+8];
	ld.local.u32 	%r2106, [%rd8+4];
	// inline asm
	prmt.b32 %r9690, %r2105, %r2106, %r2;
	// inline asm
	ld.local.u32 	%r2109, [%rd8+4];
	ld.local.u32 	%r2110, [%rd8];
	// inline asm
	prmt.b32 %r9691, %r2109, %r2110, %r2;
	// inline asm
	ld.local.u32 	%r2113, [%rd8];
	ld.local.u32 	%r2114, [%rd7+12];
	// inline asm
	prmt.b32 %r9692, %r2113, %r2114, %r2;
	// inline asm
	ld.local.u32 	%r2117, [%rd7+12];
	ld.local.u32 	%r2118, [%rd7+8];
	// inline asm
	prmt.b32 %r9685, %r2117, %r2118, %r2;
	// inline asm
	ld.local.u32 	%r2121, [%rd7+8];
	ld.local.u32 	%r2122, [%rd7+4];
	// inline asm
	prmt.b32 %r9686, %r2121, %r2122, %r2;
	// inline asm
	ld.local.u32 	%r2125, [%rd7+4];
	ld.local.u32 	%r2126, [%rd7];
	// inline asm
	prmt.b32 %r9687, %r2125, %r2126, %r2;
	// inline asm
	ld.local.u32 	%r2129, [%rd7];
	ld.local.u32 	%r2130, [%rd6+12];
	// inline asm
	prmt.b32 %r9688, %r2129, %r2130, %r2;
	// inline asm
	ld.local.u32 	%r2133, [%rd6+12];
	ld.local.u32 	%r2134, [%rd6+8];
	// inline asm
	prmt.b32 %r9681, %r2133, %r2134, %r2;
	// inline asm
	ld.local.u32 	%r2137, [%rd6+8];
	ld.local.u32 	%r2138, [%rd6+4];
	// inline asm
	prmt.b32 %r9682, %r2137, %r2138, %r2;
	// inline asm
	ld.local.u32 	%r2141, [%rd6+4];
	ld.local.u32 	%r2142, [%rd6];
	// inline asm
	prmt.b32 %r9683, %r2141, %r2142, %r2;
	// inline asm
	ld.local.u32 	%r2145, [%rd6];
	ld.local.u32 	%r2146, [%rd5+12];
	// inline asm
	prmt.b32 %r9684, %r2145, %r2146, %r2;
	// inline asm
	ld.local.u32 	%r2149, [%rd5+12];
	ld.local.u32 	%r2150, [%rd5+8];
	// inline asm
	prmt.b32 %r9677, %r2149, %r2150, %r2;
	// inline asm
	ld.local.u32 	%r2153, [%rd5+8];
	ld.local.u32 	%r2154, [%rd5+4];
	// inline asm
	prmt.b32 %r9678, %r2153, %r2154, %r2;
	// inline asm
	ld.local.u32 	%r2157, [%rd5+4];
	ld.local.u32 	%r2158, [%rd5];
	// inline asm
	prmt.b32 %r9679, %r2157, %r2158, %r2;
	// inline asm
	ld.local.u32 	%r2161, [%rd5];
	ld.local.u32 	%r2162, [%rd4+12];
	// inline asm
	prmt.b32 %r9680, %r2161, %r2162, %r2;
	// inline asm
	ld.local.u32 	%r2165, [%rd4+12];
	ld.local.u32 	%r2166, [%rd4+8];
	// inline asm
	prmt.b32 %r9673, %r2165, %r2166, %r2;
	// inline asm
	ld.local.u32 	%r2169, [%rd4+8];
	ld.local.u32 	%r2170, [%rd4+4];
	// inline asm
	prmt.b32 %r9674, %r2169, %r2170, %r2;
	// inline asm
	ld.local.u32 	%r2173, [%rd4+4];
	ld.local.u32 	%r2174, [%rd4];
	// inline asm
	prmt.b32 %r9675, %r2173, %r2174, %r2;
	// inline asm
	ld.local.u32 	%r2177, [%rd4];
	ld.local.u32 	%r2178, [%rd3+12];
	// inline asm
	prmt.b32 %r9676, %r2177, %r2178, %r2;
	// inline asm
	ld.local.u32 	%r2181, [%rd3+12];
	ld.local.u32 	%r2182, [%rd3+8];
	// inline asm
	prmt.b32 %r2180, %r2181, %r2182, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2180;
	ld.local.u32 	%r2185, [%rd3+8];
	ld.local.u32 	%r2186, [%rd3+4];
	// inline asm
	prmt.b32 %r2184, %r2185, %r2186, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2184;
	ld.local.u32 	%r2189, [%rd3+4];
	ld.local.u32 	%r2190, [%rd3];
	// inline asm
	prmt.b32 %r2188, %r2189, %r2190, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2188;
	ld.local.u32 	%r2193, [%rd3];
	ld.local.u32 	%r2194, [%rd2+12];
	// inline asm
	prmt.b32 %r2192, %r2193, %r2194, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2192;
	ld.local.u32 	%r2197, [%rd2+12];
	ld.local.u32 	%r2198, [%rd2+8];
	// inline asm
	prmt.b32 %r2196, %r2197, %r2198, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2196;
	ld.local.u32 	%r2201, [%rd2+8];
	ld.local.u32 	%r2202, [%rd2+4];
	// inline asm
	prmt.b32 %r2200, %r2201, %r2202, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2200;
	ld.local.u32 	%r2205, [%rd2+4];
	ld.local.u32 	%r2206, [%rd2];
	// inline asm
	prmt.b32 %r2204, %r2205, %r2206, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2204;
	ld.local.u32 	%r2209, [%rd2];
	ld.local.u32 	%r2210, [%rd1+12];
	// inline asm
	prmt.b32 %r2208, %r2209, %r2210, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2208;
	ld.local.u32 	%r2213, [%rd1+12];
	ld.local.u32 	%r2214, [%rd1+8];
	// inline asm
	prmt.b32 %r2212, %r2213, %r2214, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2212;
	ld.local.u32 	%r2217, [%rd1+8];
	ld.local.u32 	%r2218, [%rd1+4];
	// inline asm
	prmt.b32 %r2216, %r2217, %r2218, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2216;
	ld.local.u32 	%r2221, [%rd1+4];
	ld.local.u32 	%r2222, [%rd1];
	// inline asm
	prmt.b32 %r2220, %r2221, %r2222, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2220;
	ld.local.u32 	%r2225, [%rd1];
	// inline asm
	prmt.b32 %r2224, %r2225, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2224;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd30, 0;
	st.local.u32 	[%rd1+4], %rd30;
	st.local.u32 	[%rd1], %rd30;
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	mov.u32 	%r9695, %r9672;
	bra.uni 	BB1_83;

BB1_115:
	setp.gt.s32	%p75, %r1, 13;
	@%p75 bra 	BB1_119;

	setp.eq.s32	%p78, %r1, 12;
	@%p78 bra 	BB1_162;
	bra.uni 	BB1_117;

BB1_162:
	ld.local.u32 	%r8214, [%rd5+12];
	ld.local.u32 	%r8215, [%rd5+8];
	// inline asm
	prmt.b32 %r8213, %r8214, %r8215, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8213;
	ld.local.u32 	%r8218, [%rd5+8];
	ld.local.u32 	%r8219, [%rd5+4];
	// inline asm
	prmt.b32 %r8217, %r8218, %r8219, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8217;
	ld.local.u32 	%r8222, [%rd5+4];
	ld.local.u32 	%r8223, [%rd5];
	// inline asm
	prmt.b32 %r8221, %r8222, %r8223, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8221;
	ld.local.u32 	%r8226, [%rd5];
	ld.local.u32 	%r8227, [%rd4+12];
	// inline asm
	prmt.b32 %r8225, %r8226, %r8227, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8225;
	ld.local.u32 	%r8230, [%rd4+12];
	ld.local.u32 	%r8231, [%rd4+8];
	// inline asm
	prmt.b32 %r8229, %r8230, %r8231, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8229;
	ld.local.u32 	%r8234, [%rd4+8];
	ld.local.u32 	%r8235, [%rd4+4];
	// inline asm
	prmt.b32 %r8233, %r8234, %r8235, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8233;
	ld.local.u32 	%r8238, [%rd4+4];
	ld.local.u32 	%r8239, [%rd4];
	// inline asm
	prmt.b32 %r8237, %r8238, %r8239, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8237;
	ld.local.u32 	%r8242, [%rd4];
	ld.local.u32 	%r8243, [%rd3+12];
	// inline asm
	prmt.b32 %r8241, %r8242, %r8243, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8241;
	ld.local.u32 	%r8246, [%rd3+12];
	ld.local.u32 	%r8247, [%rd3+8];
	// inline asm
	prmt.b32 %r8245, %r8246, %r8247, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8245;
	ld.local.u32 	%r8250, [%rd3+8];
	ld.local.u32 	%r8251, [%rd3+4];
	// inline asm
	prmt.b32 %r8249, %r8250, %r8251, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8249;
	ld.local.u32 	%r8254, [%rd3+4];
	ld.local.u32 	%r8255, [%rd3];
	// inline asm
	prmt.b32 %r8253, %r8254, %r8255, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8253;
	ld.local.u32 	%r8258, [%rd3];
	ld.local.u32 	%r8259, [%rd2+12];
	// inline asm
	prmt.b32 %r8257, %r8258, %r8259, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8257;
	ld.local.u32 	%r8262, [%rd2+12];
	ld.local.u32 	%r8263, [%rd2+8];
	// inline asm
	prmt.b32 %r8261, %r8262, %r8263, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8261;
	ld.local.u32 	%r8266, [%rd2+8];
	ld.local.u32 	%r8267, [%rd2+4];
	// inline asm
	prmt.b32 %r8265, %r8266, %r8267, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8265;
	ld.local.u32 	%r8270, [%rd2+4];
	ld.local.u32 	%r8271, [%rd2];
	// inline asm
	prmt.b32 %r8269, %r8270, %r8271, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8269;
	ld.local.u32 	%r8274, [%rd2];
	ld.local.u32 	%r8275, [%rd1+12];
	// inline asm
	prmt.b32 %r8273, %r8274, %r8275, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8273;
	ld.local.u32 	%r8278, [%rd1+12];
	ld.local.u32 	%r8279, [%rd1+8];
	// inline asm
	prmt.b32 %r8277, %r8278, %r8279, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8277;
	ld.local.u32 	%r8282, [%rd1+8];
	ld.local.u32 	%r8283, [%rd1+4];
	// inline asm
	prmt.b32 %r8281, %r8282, %r8283, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8281;
	ld.local.u32 	%r8286, [%rd1+4];
	ld.local.u32 	%r8287, [%rd1];
	// inline asm
	prmt.b32 %r8285, %r8286, %r8287, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8285;
	ld.local.u32 	%r8290, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8289, %r8290, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8289;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2932, 0;
	st.local.u32 	[%rd1+4], %rd2932;
	st.local.u32 	[%rd1], %rd2932;
	bra.uni 	BB1_170;

BB1_27:
	setp.gt.s32	%p28, %r1, 13;
	@%p28 bra 	BB1_31;

	setp.eq.s32	%p31, %r1, 12;
	@%p31 bra 	BB1_74;
	bra.uni 	BB1_29;

BB1_74:
	ld.local.u32 	%r3278, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9688, %r9672, %r3278, %r2;
	// inline asm
	ld.local.u32 	%r3281, [%rd8+12];
	ld.local.u32 	%r3282, [%rd8+8];
	// inline asm
	prmt.b32 %r9681, %r3281, %r3282, %r2;
	// inline asm
	ld.local.u32 	%r3285, [%rd8+8];
	ld.local.u32 	%r3286, [%rd8+4];
	// inline asm
	prmt.b32 %r9682, %r3285, %r3286, %r2;
	// inline asm
	ld.local.u32 	%r3289, [%rd8+4];
	ld.local.u32 	%r3290, [%rd8];
	// inline asm
	prmt.b32 %r9683, %r3289, %r3290, %r2;
	// inline asm
	ld.local.u32 	%r3293, [%rd8];
	ld.local.u32 	%r3294, [%rd7+12];
	// inline asm
	prmt.b32 %r9684, %r3293, %r3294, %r2;
	// inline asm
	ld.local.u32 	%r3297, [%rd7+12];
	ld.local.u32 	%r3298, [%rd7+8];
	// inline asm
	prmt.b32 %r9677, %r3297, %r3298, %r2;
	// inline asm
	ld.local.u32 	%r3301, [%rd7+8];
	ld.local.u32 	%r3302, [%rd7+4];
	// inline asm
	prmt.b32 %r9678, %r3301, %r3302, %r2;
	// inline asm
	ld.local.u32 	%r3305, [%rd7+4];
	ld.local.u32 	%r3306, [%rd7];
	// inline asm
	prmt.b32 %r9679, %r3305, %r3306, %r2;
	// inline asm
	ld.local.u32 	%r3309, [%rd7];
	ld.local.u32 	%r3310, [%rd6+12];
	// inline asm
	prmt.b32 %r9680, %r3309, %r3310, %r2;
	// inline asm
	ld.local.u32 	%r3313, [%rd6+12];
	ld.local.u32 	%r3314, [%rd6+8];
	// inline asm
	prmt.b32 %r9673, %r3313, %r3314, %r2;
	// inline asm
	ld.local.u32 	%r3317, [%rd6+8];
	ld.local.u32 	%r3318, [%rd6+4];
	// inline asm
	prmt.b32 %r9674, %r3317, %r3318, %r2;
	// inline asm
	ld.local.u32 	%r3321, [%rd6+4];
	ld.local.u32 	%r3322, [%rd6];
	// inline asm
	prmt.b32 %r9675, %r3321, %r3322, %r2;
	// inline asm
	ld.local.u32 	%r3325, [%rd6];
	ld.local.u32 	%r3326, [%rd5+12];
	// inline asm
	prmt.b32 %r9676, %r3325, %r3326, %r2;
	// inline asm
	ld.local.u32 	%r3329, [%rd5+12];
	ld.local.u32 	%r3330, [%rd5+8];
	// inline asm
	prmt.b32 %r3328, %r3329, %r3330, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3328;
	ld.local.u32 	%r3333, [%rd5+8];
	ld.local.u32 	%r3334, [%rd5+4];
	// inline asm
	prmt.b32 %r3332, %r3333, %r3334, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3332;
	ld.local.u32 	%r3337, [%rd5+4];
	ld.local.u32 	%r3338, [%rd5];
	// inline asm
	prmt.b32 %r3336, %r3337, %r3338, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3336;
	ld.local.u32 	%r3341, [%rd5];
	ld.local.u32 	%r3342, [%rd4+12];
	// inline asm
	prmt.b32 %r3340, %r3341, %r3342, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3340;
	ld.local.u32 	%r3345, [%rd4+12];
	ld.local.u32 	%r3346, [%rd4+8];
	// inline asm
	prmt.b32 %r3344, %r3345, %r3346, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3344;
	ld.local.u32 	%r3349, [%rd4+8];
	ld.local.u32 	%r3350, [%rd4+4];
	// inline asm
	prmt.b32 %r3348, %r3349, %r3350, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3348;
	ld.local.u32 	%r3353, [%rd4+4];
	ld.local.u32 	%r3354, [%rd4];
	// inline asm
	prmt.b32 %r3352, %r3353, %r3354, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3352;
	ld.local.u32 	%r3357, [%rd4];
	ld.local.u32 	%r3358, [%rd3+12];
	// inline asm
	prmt.b32 %r3356, %r3357, %r3358, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3356;
	ld.local.u32 	%r3361, [%rd3+12];
	ld.local.u32 	%r3362, [%rd3+8];
	// inline asm
	prmt.b32 %r3360, %r3361, %r3362, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3360;
	ld.local.u32 	%r3365, [%rd3+8];
	ld.local.u32 	%r3366, [%rd3+4];
	// inline asm
	prmt.b32 %r3364, %r3365, %r3366, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3364;
	ld.local.u32 	%r3369, [%rd3+4];
	ld.local.u32 	%r3370, [%rd3];
	// inline asm
	prmt.b32 %r3368, %r3369, %r3370, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3368;
	ld.local.u32 	%r3373, [%rd3];
	ld.local.u32 	%r3374, [%rd2+12];
	// inline asm
	prmt.b32 %r3372, %r3373, %r3374, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3372;
	ld.local.u32 	%r3377, [%rd2+12];
	ld.local.u32 	%r3378, [%rd2+8];
	// inline asm
	prmt.b32 %r3376, %r3377, %r3378, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3376;
	ld.local.u32 	%r3381, [%rd2+8];
	ld.local.u32 	%r3382, [%rd2+4];
	// inline asm
	prmt.b32 %r3380, %r3381, %r3382, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3380;
	ld.local.u32 	%r3385, [%rd2+4];
	ld.local.u32 	%r3386, [%rd2];
	// inline asm
	prmt.b32 %r3384, %r3385, %r3386, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3384;
	ld.local.u32 	%r3389, [%rd2];
	ld.local.u32 	%r3390, [%rd1+12];
	// inline asm
	prmt.b32 %r3388, %r3389, %r3390, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3388;
	ld.local.u32 	%r3393, [%rd1+12];
	ld.local.u32 	%r3394, [%rd1+8];
	// inline asm
	prmt.b32 %r3392, %r3393, %r3394, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3392;
	ld.local.u32 	%r3397, [%rd1+8];
	ld.local.u32 	%r3398, [%rd1+4];
	// inline asm
	prmt.b32 %r3396, %r3397, %r3398, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3396;
	ld.local.u32 	%r3401, [%rd1+4];
	ld.local.u32 	%r3402, [%rd1];
	// inline asm
	prmt.b32 %r3400, %r3401, %r3402, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3400;
	ld.local.u32 	%r3405, [%rd1];
	// inline asm
	prmt.b32 %r3404, %r3405, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3404;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd38, 0;
	st.local.u32 	[%rd1+4], %rd38;
	st.local.u32 	[%rd1], %rd38;
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	mov.u32 	%r9687, %r9672;
	bra.uni 	BB1_81;

BB1_146:
	setp.gt.s32	%p52, %r1, 29;
	@%p52 bra 	BB1_150;

	setp.eq.s32	%p55, %r1, 28;
	@%p55 bra 	BB1_154;
	bra.uni 	BB1_148;

BB1_154:
	ld.local.u32 	%r7462, [%rd1+12];
	ld.local.u32 	%r7463, [%rd1+8];
	// inline asm
	prmt.b32 %r7461, %r7462, %r7463, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7461;
	ld.local.u32 	%r7466, [%rd1+8];
	ld.local.u32 	%r7467, [%rd1+4];
	// inline asm
	prmt.b32 %r7465, %r7466, %r7467, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7465;
	ld.local.u32 	%r7470, [%rd1+4];
	ld.local.u32 	%r7471, [%rd1];
	// inline asm
	prmt.b32 %r7469, %r7470, %r7471, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7469;
	ld.local.u32 	%r7474, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7473, %r7474, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7473;
	st.local.u32 	[%rd7+12], %r9705;
	st.local.u32 	[%rd7+8], %r9705;
	st.local.u32 	[%rd7+4], %r9705;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2916, 0;
	st.local.u32 	[%rd1+4], %rd2916;
	st.local.u32 	[%rd1], %rd2916;
	bra.uni 	BB1_170;

BB1_58:
	setp.gt.s32	%p5, %r1, 29;
	@%p5 bra 	BB1_62;

	setp.eq.s32	%p8, %r1, 28;
	@%p8 bra 	BB1_66;
	bra.uni 	BB1_60;

BB1_66:
	ld.local.u32 	%r982, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9704, %r9672, %r982, %r2;
	// inline asm
	ld.local.u32 	%r985, [%rd8+12];
	ld.local.u32 	%r986, [%rd8+8];
	// inline asm
	prmt.b32 %r9697, %r985, %r986, %r2;
	// inline asm
	ld.local.u32 	%r989, [%rd8+8];
	ld.local.u32 	%r990, [%rd8+4];
	// inline asm
	prmt.b32 %r9698, %r989, %r990, %r2;
	// inline asm
	ld.local.u32 	%r993, [%rd8+4];
	ld.local.u32 	%r994, [%rd8];
	// inline asm
	prmt.b32 %r9699, %r993, %r994, %r2;
	// inline asm
	ld.local.u32 	%r997, [%rd8];
	ld.local.u32 	%r998, [%rd7+12];
	// inline asm
	prmt.b32 %r9700, %r997, %r998, %r2;
	// inline asm
	ld.local.u32 	%r1001, [%rd7+12];
	ld.local.u32 	%r1002, [%rd7+8];
	// inline asm
	prmt.b32 %r9693, %r1001, %r1002, %r2;
	// inline asm
	ld.local.u32 	%r1005, [%rd7+8];
	ld.local.u32 	%r1006, [%rd7+4];
	// inline asm
	prmt.b32 %r9694, %r1005, %r1006, %r2;
	// inline asm
	ld.local.u32 	%r1009, [%rd7+4];
	ld.local.u32 	%r1010, [%rd7];
	// inline asm
	prmt.b32 %r9695, %r1009, %r1010, %r2;
	// inline asm
	ld.local.u32 	%r1013, [%rd7];
	ld.local.u32 	%r1014, [%rd6+12];
	// inline asm
	prmt.b32 %r9696, %r1013, %r1014, %r2;
	// inline asm
	ld.local.u32 	%r1017, [%rd6+12];
	ld.local.u32 	%r1018, [%rd6+8];
	// inline asm
	prmt.b32 %r9689, %r1017, %r1018, %r2;
	// inline asm
	ld.local.u32 	%r1021, [%rd6+8];
	ld.local.u32 	%r1022, [%rd6+4];
	// inline asm
	prmt.b32 %r9690, %r1021, %r1022, %r2;
	// inline asm
	ld.local.u32 	%r1025, [%rd6+4];
	ld.local.u32 	%r1026, [%rd6];
	// inline asm
	prmt.b32 %r9691, %r1025, %r1026, %r2;
	// inline asm
	ld.local.u32 	%r1029, [%rd6];
	ld.local.u32 	%r1030, [%rd5+12];
	// inline asm
	prmt.b32 %r9692, %r1029, %r1030, %r2;
	// inline asm
	ld.local.u32 	%r1033, [%rd5+12];
	ld.local.u32 	%r1034, [%rd5+8];
	// inline asm
	prmt.b32 %r9685, %r1033, %r1034, %r2;
	// inline asm
	ld.local.u32 	%r1037, [%rd5+8];
	ld.local.u32 	%r1038, [%rd5+4];
	// inline asm
	prmt.b32 %r9686, %r1037, %r1038, %r2;
	// inline asm
	ld.local.u32 	%r1041, [%rd5+4];
	ld.local.u32 	%r1042, [%rd5];
	// inline asm
	prmt.b32 %r9687, %r1041, %r1042, %r2;
	// inline asm
	ld.local.u32 	%r1045, [%rd5];
	ld.local.u32 	%r1046, [%rd4+12];
	// inline asm
	prmt.b32 %r9688, %r1045, %r1046, %r2;
	// inline asm
	ld.local.u32 	%r1049, [%rd4+12];
	ld.local.u32 	%r1050, [%rd4+8];
	// inline asm
	prmt.b32 %r9681, %r1049, %r1050, %r2;
	// inline asm
	ld.local.u32 	%r1053, [%rd4+8];
	ld.local.u32 	%r1054, [%rd4+4];
	// inline asm
	prmt.b32 %r9682, %r1053, %r1054, %r2;
	// inline asm
	ld.local.u32 	%r1057, [%rd4+4];
	ld.local.u32 	%r1058, [%rd4];
	// inline asm
	prmt.b32 %r9683, %r1057, %r1058, %r2;
	// inline asm
	ld.local.u32 	%r1061, [%rd4];
	ld.local.u32 	%r1062, [%rd3+12];
	// inline asm
	prmt.b32 %r9684, %r1061, %r1062, %r2;
	// inline asm
	ld.local.u32 	%r1065, [%rd3+12];
	ld.local.u32 	%r1066, [%rd3+8];
	// inline asm
	prmt.b32 %r9677, %r1065, %r1066, %r2;
	// inline asm
	ld.local.u32 	%r1069, [%rd3+8];
	ld.local.u32 	%r1070, [%rd3+4];
	// inline asm
	prmt.b32 %r9678, %r1069, %r1070, %r2;
	// inline asm
	ld.local.u32 	%r1073, [%rd3+4];
	ld.local.u32 	%r1074, [%rd3];
	// inline asm
	prmt.b32 %r9679, %r1073, %r1074, %r2;
	// inline asm
	ld.local.u32 	%r1077, [%rd3];
	ld.local.u32 	%r1078, [%rd2+12];
	// inline asm
	prmt.b32 %r9680, %r1077, %r1078, %r2;
	// inline asm
	ld.local.u32 	%r1081, [%rd2+12];
	ld.local.u32 	%r1082, [%rd2+8];
	// inline asm
	prmt.b32 %r9673, %r1081, %r1082, %r2;
	// inline asm
	ld.local.u32 	%r1085, [%rd2+8];
	ld.local.u32 	%r1086, [%rd2+4];
	// inline asm
	prmt.b32 %r9674, %r1085, %r1086, %r2;
	// inline asm
	ld.local.u32 	%r1089, [%rd2+4];
	ld.local.u32 	%r1090, [%rd2];
	// inline asm
	prmt.b32 %r9675, %r1089, %r1090, %r2;
	// inline asm
	ld.local.u32 	%r1093, [%rd2];
	ld.local.u32 	%r1094, [%rd1+12];
	// inline asm
	prmt.b32 %r9676, %r1093, %r1094, %r2;
	// inline asm
	ld.local.u32 	%r1097, [%rd1+12];
	ld.local.u32 	%r1098, [%rd1+8];
	// inline asm
	prmt.b32 %r1096, %r1097, %r1098, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1096;
	ld.local.u32 	%r1101, [%rd1+8];
	ld.local.u32 	%r1102, [%rd1+4];
	// inline asm
	prmt.b32 %r1100, %r1101, %r1102, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1100;
	ld.local.u32 	%r1105, [%rd1+4];
	ld.local.u32 	%r1106, [%rd1];
	// inline asm
	prmt.b32 %r1104, %r1105, %r1106, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1104;
	ld.local.u32 	%r1109, [%rd1];
	// inline asm
	prmt.b32 %r1108, %r1109, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1108;
	st.local.u32 	[%rd7+12], %r9672;
	st.local.u32 	[%rd7+8], %r9672;
	st.local.u32 	[%rd7+4], %r9672;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd22, 0;
	st.local.u32 	[%rd1+4], %rd22;
	st.local.u32 	[%rd1], %rd22;
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	mov.u32 	%r9703, %r9672;
	bra.uni 	BB1_89;

BB1_97:
	setp.eq.s32	%p92, %r1, 2;
	@%p92 bra 	BB1_167;
	bra.uni 	BB1_98;

BB1_167:
	ld.local.u32 	%r9204, [%rd8+4];
	ld.local.u32 	%r9205, [%rd8];
	// inline asm
	prmt.b32 %r9203, %r9204, %r9205, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r9203;
	ld.local.u32 	%r9208, [%rd8];
	ld.local.u32 	%r9209, [%rd7+12];
	// inline asm
	prmt.b32 %r9207, %r9208, %r9209, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r9207;
	ld.local.u32 	%r9212, [%rd7+12];
	ld.local.u32 	%r9213, [%rd7+8];
	// inline asm
	prmt.b32 %r9211, %r9212, %r9213, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r9211;
	ld.local.u32 	%r9216, [%rd7+8];
	ld.local.u32 	%r9217, [%rd7+4];
	// inline asm
	prmt.b32 %r9215, %r9216, %r9217, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r9215;
	ld.local.u32 	%r9220, [%rd7+4];
	ld.local.u32 	%r9221, [%rd7];
	// inline asm
	prmt.b32 %r9219, %r9220, %r9221, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r9219;
	ld.local.u32 	%r9224, [%rd7];
	ld.local.u32 	%r9225, [%rd6+12];
	// inline asm
	prmt.b32 %r9223, %r9224, %r9225, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r9223;
	ld.local.u32 	%r9228, [%rd6+12];
	ld.local.u32 	%r9229, [%rd6+8];
	// inline asm
	prmt.b32 %r9227, %r9228, %r9229, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r9227;
	ld.local.u32 	%r9232, [%rd6+8];
	ld.local.u32 	%r9233, [%rd6+4];
	// inline asm
	prmt.b32 %r9231, %r9232, %r9233, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9231;
	ld.local.u32 	%r9236, [%rd6+4];
	ld.local.u32 	%r9237, [%rd6];
	// inline asm
	prmt.b32 %r9235, %r9236, %r9237, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9235;
	ld.local.u32 	%r9240, [%rd6];
	ld.local.u32 	%r9241, [%rd5+12];
	// inline asm
	prmt.b32 %r9239, %r9240, %r9241, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9239;
	ld.local.u32 	%r9244, [%rd5+12];
	ld.local.u32 	%r9245, [%rd5+8];
	// inline asm
	prmt.b32 %r9243, %r9244, %r9245, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9243;
	ld.local.u32 	%r9248, [%rd5+8];
	ld.local.u32 	%r9249, [%rd5+4];
	// inline asm
	prmt.b32 %r9247, %r9248, %r9249, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9247;
	ld.local.u32 	%r9252, [%rd5+4];
	ld.local.u32 	%r9253, [%rd5];
	// inline asm
	prmt.b32 %r9251, %r9252, %r9253, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9251;
	ld.local.u32 	%r9256, [%rd5];
	ld.local.u32 	%r9257, [%rd4+12];
	// inline asm
	prmt.b32 %r9255, %r9256, %r9257, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9255;
	ld.local.u32 	%r9260, [%rd4+12];
	ld.local.u32 	%r9261, [%rd4+8];
	// inline asm
	prmt.b32 %r9259, %r9260, %r9261, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9259;
	ld.local.u32 	%r9264, [%rd4+8];
	ld.local.u32 	%r9265, [%rd4+4];
	// inline asm
	prmt.b32 %r9263, %r9264, %r9265, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9263;
	ld.local.u32 	%r9268, [%rd4+4];
	ld.local.u32 	%r9269, [%rd4];
	// inline asm
	prmt.b32 %r9267, %r9268, %r9269, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9267;
	ld.local.u32 	%r9272, [%rd4];
	ld.local.u32 	%r9273, [%rd3+12];
	// inline asm
	prmt.b32 %r9271, %r9272, %r9273, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9271;
	ld.local.u32 	%r9276, [%rd3+12];
	ld.local.u32 	%r9277, [%rd3+8];
	// inline asm
	prmt.b32 %r9275, %r9276, %r9277, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9275;
	ld.local.u32 	%r9280, [%rd3+8];
	ld.local.u32 	%r9281, [%rd3+4];
	// inline asm
	prmt.b32 %r9279, %r9280, %r9281, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9279;
	ld.local.u32 	%r9284, [%rd3+4];
	ld.local.u32 	%r9285, [%rd3];
	// inline asm
	prmt.b32 %r9283, %r9284, %r9285, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9283;
	ld.local.u32 	%r9288, [%rd3];
	ld.local.u32 	%r9289, [%rd2+12];
	// inline asm
	prmt.b32 %r9287, %r9288, %r9289, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9287;
	ld.local.u32 	%r9292, [%rd2+12];
	ld.local.u32 	%r9293, [%rd2+8];
	// inline asm
	prmt.b32 %r9291, %r9292, %r9293, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9291;
	ld.local.u32 	%r9296, [%rd2+8];
	ld.local.u32 	%r9297, [%rd2+4];
	// inline asm
	prmt.b32 %r9295, %r9296, %r9297, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9295;
	ld.local.u32 	%r9300, [%rd2+4];
	ld.local.u32 	%r9301, [%rd2];
	// inline asm
	prmt.b32 %r9299, %r9300, %r9301, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9299;
	ld.local.u32 	%r9304, [%rd2];
	ld.local.u32 	%r9305, [%rd1+12];
	// inline asm
	prmt.b32 %r9303, %r9304, %r9305, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9303;
	ld.local.u32 	%r9308, [%rd1+12];
	ld.local.u32 	%r9309, [%rd1+8];
	// inline asm
	prmt.b32 %r9307, %r9308, %r9309, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9307;
	ld.local.u32 	%r9312, [%rd1+8];
	ld.local.u32 	%r9313, [%rd1+4];
	// inline asm
	prmt.b32 %r9311, %r9312, %r9313, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9311;
	ld.local.u32 	%r9316, [%rd1+4];
	ld.local.u32 	%r9317, [%rd1];
	// inline asm
	prmt.b32 %r9315, %r9316, %r9317, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9315;
	ld.local.u32 	%r9320, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9319, %r9320, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r9319;
	mov.u64 	%rd2942, 0;
	st.local.u32 	[%rd1+4], %rd2942;
	st.local.u32 	[%rd1], %rd2942;
	bra.uni 	BB1_170;

BB1_8:
	setp.eq.s32	%p45, %r1, 2;
	@%p45 bra 	BB1_85;
	bra.uni 	BB1_9;

BB1_85:
	ld.local.u32 	%r4843, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9674, %r9672, %r4843, %r2;
	// inline asm
	ld.local.u32 	%r4846, [%rd8+12];
	ld.local.u32 	%r4847, [%rd8+8];
	// inline asm
	prmt.b32 %r9675, %r4846, %r4847, %r2;
	// inline asm
	ld.local.u32 	%r4850, [%rd8+8];
	ld.local.u32 	%r4851, [%rd8+4];
	// inline asm
	prmt.b32 %r9676, %r4850, %r4851, %r2;
	// inline asm
	ld.local.u32 	%r4854, [%rd8+4];
	ld.local.u32 	%r4855, [%rd8];
	// inline asm
	prmt.b32 %r4853, %r4854, %r4855, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4853;
	ld.local.u32 	%r4858, [%rd8];
	ld.local.u32 	%r4859, [%rd7+12];
	// inline asm
	prmt.b32 %r4857, %r4858, %r4859, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4857;
	ld.local.u32 	%r4862, [%rd7+12];
	ld.local.u32 	%r4863, [%rd7+8];
	// inline asm
	prmt.b32 %r4861, %r4862, %r4863, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4861;
	ld.local.u32 	%r4866, [%rd7+8];
	ld.local.u32 	%r4867, [%rd7+4];
	// inline asm
	prmt.b32 %r4865, %r4866, %r4867, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4865;
	ld.local.u32 	%r4870, [%rd7+4];
	ld.local.u32 	%r4871, [%rd7];
	// inline asm
	prmt.b32 %r4869, %r4870, %r4871, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4869;
	ld.local.u32 	%r4874, [%rd7];
	ld.local.u32 	%r4875, [%rd6+12];
	// inline asm
	prmt.b32 %r4873, %r4874, %r4875, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4873;
	ld.local.u32 	%r4878, [%rd6+12];
	ld.local.u32 	%r4879, [%rd6+8];
	// inline asm
	prmt.b32 %r4877, %r4878, %r4879, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4877;
	ld.local.u32 	%r4882, [%rd6+8];
	ld.local.u32 	%r4883, [%rd6+4];
	// inline asm
	prmt.b32 %r4881, %r4882, %r4883, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4881;
	ld.local.u32 	%r4886, [%rd6+4];
	ld.local.u32 	%r4887, [%rd6];
	// inline asm
	prmt.b32 %r4885, %r4886, %r4887, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4885;
	ld.local.u32 	%r4890, [%rd6];
	ld.local.u32 	%r4891, [%rd5+12];
	// inline asm
	prmt.b32 %r4889, %r4890, %r4891, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4889;
	ld.local.u32 	%r4894, [%rd5+12];
	ld.local.u32 	%r4895, [%rd5+8];
	// inline asm
	prmt.b32 %r4893, %r4894, %r4895, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4893;
	ld.local.u32 	%r4898, [%rd5+8];
	ld.local.u32 	%r4899, [%rd5+4];
	// inline asm
	prmt.b32 %r4897, %r4898, %r4899, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4897;
	ld.local.u32 	%r4902, [%rd5+4];
	ld.local.u32 	%r4903, [%rd5];
	// inline asm
	prmt.b32 %r4901, %r4902, %r4903, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4901;
	ld.local.u32 	%r4906, [%rd5];
	ld.local.u32 	%r4907, [%rd4+12];
	// inline asm
	prmt.b32 %r4905, %r4906, %r4907, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4905;
	ld.local.u32 	%r4910, [%rd4+12];
	ld.local.u32 	%r4911, [%rd4+8];
	// inline asm
	prmt.b32 %r4909, %r4910, %r4911, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4909;
	ld.local.u32 	%r4914, [%rd4+8];
	ld.local.u32 	%r4915, [%rd4+4];
	// inline asm
	prmt.b32 %r4913, %r4914, %r4915, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4913;
	ld.local.u32 	%r4918, [%rd4+4];
	ld.local.u32 	%r4919, [%rd4];
	// inline asm
	prmt.b32 %r4917, %r4918, %r4919, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4917;
	ld.local.u32 	%r4922, [%rd4];
	ld.local.u32 	%r4923, [%rd3+12];
	// inline asm
	prmt.b32 %r4921, %r4922, %r4923, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4921;
	ld.local.u32 	%r4926, [%rd3+12];
	ld.local.u32 	%r4927, [%rd3+8];
	// inline asm
	prmt.b32 %r4925, %r4926, %r4927, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4925;
	ld.local.u32 	%r4930, [%rd3+8];
	ld.local.u32 	%r4931, [%rd3+4];
	// inline asm
	prmt.b32 %r4929, %r4930, %r4931, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4929;
	ld.local.u32 	%r4934, [%rd3+4];
	ld.local.u32 	%r4935, [%rd3];
	// inline asm
	prmt.b32 %r4933, %r4934, %r4935, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4933;
	ld.local.u32 	%r4938, [%rd3];
	ld.local.u32 	%r4939, [%rd2+12];
	// inline asm
	prmt.b32 %r4937, %r4938, %r4939, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4937;
	ld.local.u32 	%r4942, [%rd2+12];
	ld.local.u32 	%r4943, [%rd2+8];
	// inline asm
	prmt.b32 %r4941, %r4942, %r4943, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4941;
	ld.local.u32 	%r4946, [%rd2+8];
	ld.local.u32 	%r4947, [%rd2+4];
	// inline asm
	prmt.b32 %r4945, %r4946, %r4947, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4945;
	ld.local.u32 	%r4950, [%rd2+4];
	ld.local.u32 	%r4951, [%rd2];
	// inline asm
	prmt.b32 %r4949, %r4950, %r4951, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4949;
	ld.local.u32 	%r4954, [%rd2];
	ld.local.u32 	%r4955, [%rd1+12];
	// inline asm
	prmt.b32 %r4953, %r4954, %r4955, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4953;
	ld.local.u32 	%r4958, [%rd1+12];
	ld.local.u32 	%r4959, [%rd1+8];
	// inline asm
	prmt.b32 %r4957, %r4958, %r4959, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4957;
	ld.local.u32 	%r4962, [%rd1+8];
	ld.local.u32 	%r4963, [%rd1+4];
	// inline asm
	prmt.b32 %r4961, %r4962, %r4963, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4961;
	ld.local.u32 	%r4966, [%rd1+4];
	ld.local.u32 	%r4967, [%rd1];
	// inline asm
	prmt.b32 %r4965, %r4966, %r4967, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4965;
	ld.local.u32 	%r4970, [%rd1];
	// inline asm
	prmt.b32 %r4969, %r4970, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r4969;
	mov.u64 	%rd48, 0;
	st.local.u32 	[%rd1+4], %rd48;
	st.local.u32 	[%rd1], %rd48;
	mov.u32 	%r9673, %r9672;
	bra.uni 	BB1_11;

BB1_128:
	setp.eq.s32	%p69, %r1, 18;
	@%p69 bra 	BB1_159;
	bra.uni 	BB1_129;

BB1_159:
	ld.local.u32 	%r7812, [%rd4+4];
	ld.local.u32 	%r7813, [%rd4];
	// inline asm
	prmt.b32 %r7811, %r7812, %r7813, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7811;
	ld.local.u32 	%r7816, [%rd4];
	ld.local.u32 	%r7817, [%rd3+12];
	// inline asm
	prmt.b32 %r7815, %r7816, %r7817, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7815;
	ld.local.u32 	%r7820, [%rd3+12];
	ld.local.u32 	%r7821, [%rd3+8];
	// inline asm
	prmt.b32 %r7819, %r7820, %r7821, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7819;
	ld.local.u32 	%r7824, [%rd3+8];
	ld.local.u32 	%r7825, [%rd3+4];
	// inline asm
	prmt.b32 %r7823, %r7824, %r7825, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7823;
	ld.local.u32 	%r7828, [%rd3+4];
	ld.local.u32 	%r7829, [%rd3];
	// inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7827;
	ld.local.u32 	%r7832, [%rd3];
	ld.local.u32 	%r7833, [%rd2+12];
	// inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7831;
	ld.local.u32 	%r7836, [%rd2+12];
	ld.local.u32 	%r7837, [%rd2+8];
	// inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7835;
	ld.local.u32 	%r7840, [%rd2+8];
	ld.local.u32 	%r7841, [%rd2+4];
	// inline asm
	prmt.b32 %r7839, %r7840, %r7841, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7839;
	ld.local.u32 	%r7844, [%rd2+4];
	ld.local.u32 	%r7845, [%rd2];
	// inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7843;
	ld.local.u32 	%r7848, [%rd2];
	ld.local.u32 	%r7849, [%rd1+12];
	// inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7847;
	ld.local.u32 	%r7852, [%rd1+12];
	ld.local.u32 	%r7853, [%rd1+8];
	// inline asm
	prmt.b32 %r7851, %r7852, %r7853, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7851;
	ld.local.u32 	%r7856, [%rd1+8];
	ld.local.u32 	%r7857, [%rd1+4];
	// inline asm
	prmt.b32 %r7855, %r7856, %r7857, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7855;
	ld.local.u32 	%r7860, [%rd1+4];
	ld.local.u32 	%r7861, [%rd1];
	// inline asm
	prmt.b32 %r7859, %r7860, %r7861, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7859;
	ld.local.u32 	%r7864, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7863, %r7864, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7863;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2926, 0;
	st.local.u32 	[%rd1+4], %rd2926;
	st.local.u32 	[%rd1], %rd2926;
	bra.uni 	BB1_170;

BB1_40:
	setp.eq.s32	%p22, %r1, 18;
	@%p22 bra 	BB1_71;
	bra.uni 	BB1_41;

BB1_71:
	ld.local.u32 	%r2387, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9690, %r9672, %r2387, %r2;
	// inline asm
	ld.local.u32 	%r2390, [%rd8+12];
	ld.local.u32 	%r2391, [%rd8+8];
	// inline asm
	prmt.b32 %r9691, %r2390, %r2391, %r2;
	// inline asm
	ld.local.u32 	%r2394, [%rd8+8];
	ld.local.u32 	%r2395, [%rd8+4];
	// inline asm
	prmt.b32 %r9692, %r2394, %r2395, %r2;
	// inline asm
	ld.local.u32 	%r2398, [%rd8+4];
	ld.local.u32 	%r2399, [%rd8];
	// inline asm
	prmt.b32 %r9685, %r2398, %r2399, %r2;
	// inline asm
	ld.local.u32 	%r2402, [%rd8];
	ld.local.u32 	%r2403, [%rd7+12];
	// inline asm
	prmt.b32 %r9686, %r2402, %r2403, %r2;
	// inline asm
	ld.local.u32 	%r2406, [%rd7+12];
	ld.local.u32 	%r2407, [%rd7+8];
	// inline asm
	prmt.b32 %r9687, %r2406, %r2407, %r2;
	// inline asm
	ld.local.u32 	%r2410, [%rd7+8];
	ld.local.u32 	%r2411, [%rd7+4];
	// inline asm
	prmt.b32 %r9688, %r2410, %r2411, %r2;
	// inline asm
	ld.local.u32 	%r2414, [%rd7+4];
	ld.local.u32 	%r2415, [%rd7];
	// inline asm
	prmt.b32 %r9681, %r2414, %r2415, %r2;
	// inline asm
	ld.local.u32 	%r2418, [%rd7];
	ld.local.u32 	%r2419, [%rd6+12];
	// inline asm
	prmt.b32 %r9682, %r2418, %r2419, %r2;
	// inline asm
	ld.local.u32 	%r2422, [%rd6+12];
	ld.local.u32 	%r2423, [%rd6+8];
	// inline asm
	prmt.b32 %r9683, %r2422, %r2423, %r2;
	// inline asm
	ld.local.u32 	%r2426, [%rd6+8];
	ld.local.u32 	%r2427, [%rd6+4];
	// inline asm
	prmt.b32 %r9684, %r2426, %r2427, %r2;
	// inline asm
	ld.local.u32 	%r2430, [%rd6+4];
	ld.local.u32 	%r2431, [%rd6];
	// inline asm
	prmt.b32 %r9677, %r2430, %r2431, %r2;
	// inline asm
	ld.local.u32 	%r2434, [%rd6];
	ld.local.u32 	%r2435, [%rd5+12];
	// inline asm
	prmt.b32 %r9678, %r2434, %r2435, %r2;
	// inline asm
	ld.local.u32 	%r2438, [%rd5+12];
	ld.local.u32 	%r2439, [%rd5+8];
	// inline asm
	prmt.b32 %r9679, %r2438, %r2439, %r2;
	// inline asm
	ld.local.u32 	%r2442, [%rd5+8];
	ld.local.u32 	%r2443, [%rd5+4];
	// inline asm
	prmt.b32 %r9680, %r2442, %r2443, %r2;
	// inline asm
	ld.local.u32 	%r2446, [%rd5+4];
	ld.local.u32 	%r2447, [%rd5];
	// inline asm
	prmt.b32 %r9673, %r2446, %r2447, %r2;
	// inline asm
	ld.local.u32 	%r2450, [%rd5];
	ld.local.u32 	%r2451, [%rd4+12];
	// inline asm
	prmt.b32 %r9674, %r2450, %r2451, %r2;
	// inline asm
	ld.local.u32 	%r2454, [%rd4+12];
	ld.local.u32 	%r2455, [%rd4+8];
	// inline asm
	prmt.b32 %r9675, %r2454, %r2455, %r2;
	// inline asm
	ld.local.u32 	%r2458, [%rd4+8];
	ld.local.u32 	%r2459, [%rd4+4];
	// inline asm
	prmt.b32 %r9676, %r2458, %r2459, %r2;
	// inline asm
	ld.local.u32 	%r2462, [%rd4+4];
	ld.local.u32 	%r2463, [%rd4];
	// inline asm
	prmt.b32 %r2461, %r2462, %r2463, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2461;
	ld.local.u32 	%r2466, [%rd4];
	ld.local.u32 	%r2467, [%rd3+12];
	// inline asm
	prmt.b32 %r2465, %r2466, %r2467, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2465;
	ld.local.u32 	%r2470, [%rd3+12];
	ld.local.u32 	%r2471, [%rd3+8];
	// inline asm
	prmt.b32 %r2469, %r2470, %r2471, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2469;
	ld.local.u32 	%r2474, [%rd3+8];
	ld.local.u32 	%r2475, [%rd3+4];
	// inline asm
	prmt.b32 %r2473, %r2474, %r2475, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2473;
	ld.local.u32 	%r2478, [%rd3+4];
	ld.local.u32 	%r2479, [%rd3];
	// inline asm
	prmt.b32 %r2477, %r2478, %r2479, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2477;
	ld.local.u32 	%r2482, [%rd3];
	ld.local.u32 	%r2483, [%rd2+12];
	// inline asm
	prmt.b32 %r2481, %r2482, %r2483, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2481;
	ld.local.u32 	%r2486, [%rd2+12];
	ld.local.u32 	%r2487, [%rd2+8];
	// inline asm
	prmt.b32 %r2485, %r2486, %r2487, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2485;
	ld.local.u32 	%r2490, [%rd2+8];
	ld.local.u32 	%r2491, [%rd2+4];
	// inline asm
	prmt.b32 %r2489, %r2490, %r2491, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2489;
	ld.local.u32 	%r2494, [%rd2+4];
	ld.local.u32 	%r2495, [%rd2];
	// inline asm
	prmt.b32 %r2493, %r2494, %r2495, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2493;
	ld.local.u32 	%r2498, [%rd2];
	ld.local.u32 	%r2499, [%rd1+12];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2497;
	ld.local.u32 	%r2502, [%rd1+12];
	ld.local.u32 	%r2503, [%rd1+8];
	// inline asm
	prmt.b32 %r2501, %r2502, %r2503, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2501;
	ld.local.u32 	%r2506, [%rd1+8];
	ld.local.u32 	%r2507, [%rd1+4];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2505;
	ld.local.u32 	%r2510, [%rd1+4];
	ld.local.u32 	%r2511, [%rd1];
	// inline asm
	prmt.b32 %r2509, %r2510, %r2511, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2509;
	ld.local.u32 	%r2514, [%rd1];
	// inline asm
	prmt.b32 %r2513, %r2514, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2513;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd32, 0;
	st.local.u32 	[%rd1+4], %rd32;
	st.local.u32 	[%rd1], %rd32;
	mov.u32 	%r9689, %r9672;
	bra.uni 	BB1_82;

BB1_112:
	setp.eq.s32	%p81, %r1, 10;
	@%p81 bra 	BB1_163;
	bra.uni 	BB1_113;

BB1_163:
	ld.local.u32 	%r8380, [%rd6+4];
	ld.local.u32 	%r8381, [%rd6];
	// inline asm
	prmt.b32 %r8379, %r8380, %r8381, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8379;
	ld.local.u32 	%r8384, [%rd6];
	ld.local.u32 	%r8385, [%rd5+12];
	// inline asm
	prmt.b32 %r8383, %r8384, %r8385, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8383;
	ld.local.u32 	%r8388, [%rd5+12];
	ld.local.u32 	%r8389, [%rd5+8];
	// inline asm
	prmt.b32 %r8387, %r8388, %r8389, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8387;
	ld.local.u32 	%r8392, [%rd5+8];
	ld.local.u32 	%r8393, [%rd5+4];
	// inline asm
	prmt.b32 %r8391, %r8392, %r8393, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8391;
	ld.local.u32 	%r8396, [%rd5+4];
	ld.local.u32 	%r8397, [%rd5];
	// inline asm
	prmt.b32 %r8395, %r8396, %r8397, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8395;
	ld.local.u32 	%r8400, [%rd5];
	ld.local.u32 	%r8401, [%rd4+12];
	// inline asm
	prmt.b32 %r8399, %r8400, %r8401, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8399;
	ld.local.u32 	%r8404, [%rd4+12];
	ld.local.u32 	%r8405, [%rd4+8];
	// inline asm
	prmt.b32 %r8403, %r8404, %r8405, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8403;
	ld.local.u32 	%r8408, [%rd4+8];
	ld.local.u32 	%r8409, [%rd4+4];
	// inline asm
	prmt.b32 %r8407, %r8408, %r8409, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8407;
	ld.local.u32 	%r8412, [%rd4+4];
	ld.local.u32 	%r8413, [%rd4];
	// inline asm
	prmt.b32 %r8411, %r8412, %r8413, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8411;
	ld.local.u32 	%r8416, [%rd4];
	ld.local.u32 	%r8417, [%rd3+12];
	// inline asm
	prmt.b32 %r8415, %r8416, %r8417, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8415;
	ld.local.u32 	%r8420, [%rd3+12];
	ld.local.u32 	%r8421, [%rd3+8];
	// inline asm
	prmt.b32 %r8419, %r8420, %r8421, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8419;
	ld.local.u32 	%r8424, [%rd3+8];
	ld.local.u32 	%r8425, [%rd3+4];
	// inline asm
	prmt.b32 %r8423, %r8424, %r8425, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8423;
	ld.local.u32 	%r8428, [%rd3+4];
	ld.local.u32 	%r8429, [%rd3];
	// inline asm
	prmt.b32 %r8427, %r8428, %r8429, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8427;
	ld.local.u32 	%r8432, [%rd3];
	ld.local.u32 	%r8433, [%rd2+12];
	// inline asm
	prmt.b32 %r8431, %r8432, %r8433, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8431;
	ld.local.u32 	%r8436, [%rd2+12];
	ld.local.u32 	%r8437, [%rd2+8];
	// inline asm
	prmt.b32 %r8435, %r8436, %r8437, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8435;
	ld.local.u32 	%r8440, [%rd2+8];
	ld.local.u32 	%r8441, [%rd2+4];
	// inline asm
	prmt.b32 %r8439, %r8440, %r8441, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8439;
	ld.local.u32 	%r8444, [%rd2+4];
	ld.local.u32 	%r8445, [%rd2];
	// inline asm
	prmt.b32 %r8443, %r8444, %r8445, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8443;
	ld.local.u32 	%r8448, [%rd2];
	ld.local.u32 	%r8449, [%rd1+12];
	// inline asm
	prmt.b32 %r8447, %r8448, %r8449, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8447;
	ld.local.u32 	%r8452, [%rd1+12];
	ld.local.u32 	%r8453, [%rd1+8];
	// inline asm
	prmt.b32 %r8451, %r8452, %r8453, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8451;
	ld.local.u32 	%r8456, [%rd1+8];
	ld.local.u32 	%r8457, [%rd1+4];
	// inline asm
	prmt.b32 %r8455, %r8456, %r8457, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8455;
	ld.local.u32 	%r8460, [%rd1+4];
	ld.local.u32 	%r8461, [%rd1];
	// inline asm
	prmt.b32 %r8459, %r8460, %r8461, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8459;
	ld.local.u32 	%r8464, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8463, %r8464, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8463;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2934, 0;
	st.local.u32 	[%rd1+4], %rd2934;
	st.local.u32 	[%rd1], %rd2934;
	bra.uni 	BB1_170;

BB1_24:
	setp.eq.s32	%p34, %r1, 10;
	@%p34 bra 	BB1_75;
	bra.uni 	BB1_25;

BB1_75:
	ld.local.u32 	%r3583, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9682, %r9672, %r3583, %r2;
	// inline asm
	ld.local.u32 	%r3586, [%rd8+12];
	ld.local.u32 	%r3587, [%rd8+8];
	// inline asm
	prmt.b32 %r9683, %r3586, %r3587, %r2;
	// inline asm
	ld.local.u32 	%r3590, [%rd8+8];
	ld.local.u32 	%r3591, [%rd8+4];
	// inline asm
	prmt.b32 %r9684, %r3590, %r3591, %r2;
	// inline asm
	ld.local.u32 	%r3594, [%rd8+4];
	ld.local.u32 	%r3595, [%rd8];
	// inline asm
	prmt.b32 %r9677, %r3594, %r3595, %r2;
	// inline asm
	ld.local.u32 	%r3598, [%rd8];
	ld.local.u32 	%r3599, [%rd7+12];
	// inline asm
	prmt.b32 %r9678, %r3598, %r3599, %r2;
	// inline asm
	ld.local.u32 	%r3602, [%rd7+12];
	ld.local.u32 	%r3603, [%rd7+8];
	// inline asm
	prmt.b32 %r9679, %r3602, %r3603, %r2;
	// inline asm
	ld.local.u32 	%r3606, [%rd7+8];
	ld.local.u32 	%r3607, [%rd7+4];
	// inline asm
	prmt.b32 %r9680, %r3606, %r3607, %r2;
	// inline asm
	ld.local.u32 	%r3610, [%rd7+4];
	ld.local.u32 	%r3611, [%rd7];
	// inline asm
	prmt.b32 %r9673, %r3610, %r3611, %r2;
	// inline asm
	ld.local.u32 	%r3614, [%rd7];
	ld.local.u32 	%r3615, [%rd6+12];
	// inline asm
	prmt.b32 %r9674, %r3614, %r3615, %r2;
	// inline asm
	ld.local.u32 	%r3618, [%rd6+12];
	ld.local.u32 	%r3619, [%rd6+8];
	// inline asm
	prmt.b32 %r9675, %r3618, %r3619, %r2;
	// inline asm
	ld.local.u32 	%r3622, [%rd6+8];
	ld.local.u32 	%r3623, [%rd6+4];
	// inline asm
	prmt.b32 %r9676, %r3622, %r3623, %r2;
	// inline asm
	ld.local.u32 	%r3626, [%rd6+4];
	ld.local.u32 	%r3627, [%rd6];
	// inline asm
	prmt.b32 %r3625, %r3626, %r3627, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3625;
	ld.local.u32 	%r3630, [%rd6];
	ld.local.u32 	%r3631, [%rd5+12];
	// inline asm
	prmt.b32 %r3629, %r3630, %r3631, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3629;
	ld.local.u32 	%r3634, [%rd5+12];
	ld.local.u32 	%r3635, [%rd5+8];
	// inline asm
	prmt.b32 %r3633, %r3634, %r3635, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3633;
	ld.local.u32 	%r3638, [%rd5+8];
	ld.local.u32 	%r3639, [%rd5+4];
	// inline asm
	prmt.b32 %r3637, %r3638, %r3639, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3637;
	ld.local.u32 	%r3642, [%rd5+4];
	ld.local.u32 	%r3643, [%rd5];
	// inline asm
	prmt.b32 %r3641, %r3642, %r3643, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3641;
	ld.local.u32 	%r3646, [%rd5];
	ld.local.u32 	%r3647, [%rd4+12];
	// inline asm
	prmt.b32 %r3645, %r3646, %r3647, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3645;
	ld.local.u32 	%r3650, [%rd4+12];
	ld.local.u32 	%r3651, [%rd4+8];
	// inline asm
	prmt.b32 %r3649, %r3650, %r3651, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3649;
	ld.local.u32 	%r3654, [%rd4+8];
	ld.local.u32 	%r3655, [%rd4+4];
	// inline asm
	prmt.b32 %r3653, %r3654, %r3655, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3653;
	ld.local.u32 	%r3658, [%rd4+4];
	ld.local.u32 	%r3659, [%rd4];
	// inline asm
	prmt.b32 %r3657, %r3658, %r3659, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3657;
	ld.local.u32 	%r3662, [%rd4];
	ld.local.u32 	%r3663, [%rd3+12];
	// inline asm
	prmt.b32 %r3661, %r3662, %r3663, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3661;
	ld.local.u32 	%r3666, [%rd3+12];
	ld.local.u32 	%r3667, [%rd3+8];
	// inline asm
	prmt.b32 %r3665, %r3666, %r3667, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3665;
	ld.local.u32 	%r3670, [%rd3+8];
	ld.local.u32 	%r3671, [%rd3+4];
	// inline asm
	prmt.b32 %r3669, %r3670, %r3671, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3669;
	ld.local.u32 	%r3674, [%rd3+4];
	ld.local.u32 	%r3675, [%rd3];
	// inline asm
	prmt.b32 %r3673, %r3674, %r3675, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3673;
	ld.local.u32 	%r3678, [%rd3];
	ld.local.u32 	%r3679, [%rd2+12];
	// inline asm
	prmt.b32 %r3677, %r3678, %r3679, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3677;
	ld.local.u32 	%r3682, [%rd2+12];
	ld.local.u32 	%r3683, [%rd2+8];
	// inline asm
	prmt.b32 %r3681, %r3682, %r3683, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3681;
	ld.local.u32 	%r3686, [%rd2+8];
	ld.local.u32 	%r3687, [%rd2+4];
	// inline asm
	prmt.b32 %r3685, %r3686, %r3687, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3685;
	ld.local.u32 	%r3690, [%rd2+4];
	ld.local.u32 	%r3691, [%rd2];
	// inline asm
	prmt.b32 %r3689, %r3690, %r3691, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3689;
	ld.local.u32 	%r3694, [%rd2];
	ld.local.u32 	%r3695, [%rd1+12];
	// inline asm
	prmt.b32 %r3693, %r3694, %r3695, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3693;
	ld.local.u32 	%r3698, [%rd1+12];
	ld.local.u32 	%r3699, [%rd1+8];
	// inline asm
	prmt.b32 %r3697, %r3698, %r3699, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3697;
	ld.local.u32 	%r3702, [%rd1+8];
	ld.local.u32 	%r3703, [%rd1+4];
	// inline asm
	prmt.b32 %r3701, %r3702, %r3703, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3701;
	ld.local.u32 	%r3706, [%rd1+4];
	ld.local.u32 	%r3707, [%rd1];
	// inline asm
	prmt.b32 %r3705, %r3706, %r3707, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3705;
	ld.local.u32 	%r3710, [%rd1];
	// inline asm
	prmt.b32 %r3709, %r3710, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3709;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd40, 0;
	st.local.u32 	[%rd1+4], %rd40;
	st.local.u32 	[%rd1], %rd40;
	mov.u32 	%r9681, %r9672;
	bra.uni 	BB1_80;

BB1_143:
	setp.eq.s32	%p58, %r1, 26;
	@%p58 bra 	BB1_155;
	bra.uni 	BB1_144;

BB1_155:
	ld.local.u32 	%r7500, [%rd2+4];
	ld.local.u32 	%r7501, [%rd2];
	// inline asm
	prmt.b32 %r7499, %r7500, %r7501, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7499;
	ld.local.u32 	%r7504, [%rd2];
	ld.local.u32 	%r7505, [%rd1+12];
	// inline asm
	prmt.b32 %r7503, %r7504, %r7505, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7503;
	ld.local.u32 	%r7508, [%rd1+12];
	ld.local.u32 	%r7509, [%rd1+8];
	// inline asm
	prmt.b32 %r7507, %r7508, %r7509, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7507;
	ld.local.u32 	%r7512, [%rd1+8];
	ld.local.u32 	%r7513, [%rd1+4];
	// inline asm
	prmt.b32 %r7511, %r7512, %r7513, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7511;
	ld.local.u32 	%r7516, [%rd1+4];
	ld.local.u32 	%r7517, [%rd1];
	// inline asm
	prmt.b32 %r7515, %r7516, %r7517, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7515;
	ld.local.u32 	%r7520, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7519, %r7520, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7519;
	st.local.u32 	[%rd7+4], %r9705;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2918, 0;
	st.local.u32 	[%rd1+4], %rd2918;
	st.local.u32 	[%rd1], %rd2918;
	bra.uni 	BB1_170;

BB1_55:
	setp.eq.s32	%p11, %r1, 26;
	@%p11 bra 	BB1_67;
	bra.uni 	BB1_56;

BB1_67:
	ld.local.u32 	%r1255, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9698, %r9672, %r1255, %r2;
	// inline asm
	ld.local.u32 	%r1258, [%rd8+12];
	ld.local.u32 	%r1259, [%rd8+8];
	// inline asm
	prmt.b32 %r9699, %r1258, %r1259, %r2;
	// inline asm
	ld.local.u32 	%r1262, [%rd8+8];
	ld.local.u32 	%r1263, [%rd8+4];
	// inline asm
	prmt.b32 %r9700, %r1262, %r1263, %r2;
	// inline asm
	ld.local.u32 	%r1266, [%rd8+4];
	ld.local.u32 	%r1267, [%rd8];
	// inline asm
	prmt.b32 %r9693, %r1266, %r1267, %r2;
	// inline asm
	ld.local.u32 	%r1270, [%rd8];
	ld.local.u32 	%r1271, [%rd7+12];
	// inline asm
	prmt.b32 %r9694, %r1270, %r1271, %r2;
	// inline asm
	ld.local.u32 	%r1274, [%rd7+12];
	ld.local.u32 	%r1275, [%rd7+8];
	// inline asm
	prmt.b32 %r9695, %r1274, %r1275, %r2;
	// inline asm
	ld.local.u32 	%r1278, [%rd7+8];
	ld.local.u32 	%r1279, [%rd7+4];
	// inline asm
	prmt.b32 %r9696, %r1278, %r1279, %r2;
	// inline asm
	ld.local.u32 	%r1282, [%rd7+4];
	ld.local.u32 	%r1283, [%rd7];
	// inline asm
	prmt.b32 %r9689, %r1282, %r1283, %r2;
	// inline asm
	ld.local.u32 	%r1286, [%rd7];
	ld.local.u32 	%r1287, [%rd6+12];
	// inline asm
	prmt.b32 %r9690, %r1286, %r1287, %r2;
	// inline asm
	ld.local.u32 	%r1290, [%rd6+12];
	ld.local.u32 	%r1291, [%rd6+8];
	// inline asm
	prmt.b32 %r9691, %r1290, %r1291, %r2;
	// inline asm
	ld.local.u32 	%r1294, [%rd6+8];
	ld.local.u32 	%r1295, [%rd6+4];
	// inline asm
	prmt.b32 %r9692, %r1294, %r1295, %r2;
	// inline asm
	ld.local.u32 	%r1298, [%rd6+4];
	ld.local.u32 	%r1299, [%rd6];
	// inline asm
	prmt.b32 %r9685, %r1298, %r1299, %r2;
	// inline asm
	ld.local.u32 	%r1302, [%rd6];
	ld.local.u32 	%r1303, [%rd5+12];
	// inline asm
	prmt.b32 %r9686, %r1302, %r1303, %r2;
	// inline asm
	ld.local.u32 	%r1306, [%rd5+12];
	ld.local.u32 	%r1307, [%rd5+8];
	// inline asm
	prmt.b32 %r9687, %r1306, %r1307, %r2;
	// inline asm
	ld.local.u32 	%r1310, [%rd5+8];
	ld.local.u32 	%r1311, [%rd5+4];
	// inline asm
	prmt.b32 %r9688, %r1310, %r1311, %r2;
	// inline asm
	ld.local.u32 	%r1314, [%rd5+4];
	ld.local.u32 	%r1315, [%rd5];
	// inline asm
	prmt.b32 %r9681, %r1314, %r1315, %r2;
	// inline asm
	ld.local.u32 	%r1318, [%rd5];
	ld.local.u32 	%r1319, [%rd4+12];
	// inline asm
	prmt.b32 %r9682, %r1318, %r1319, %r2;
	// inline asm
	ld.local.u32 	%r1322, [%rd4+12];
	ld.local.u32 	%r1323, [%rd4+8];
	// inline asm
	prmt.b32 %r9683, %r1322, %r1323, %r2;
	// inline asm
	ld.local.u32 	%r1326, [%rd4+8];
	ld.local.u32 	%r1327, [%rd4+4];
	// inline asm
	prmt.b32 %r9684, %r1326, %r1327, %r2;
	// inline asm
	ld.local.u32 	%r1330, [%rd4+4];
	ld.local.u32 	%r1331, [%rd4];
	// inline asm
	prmt.b32 %r9677, %r1330, %r1331, %r2;
	// inline asm
	ld.local.u32 	%r1334, [%rd4];
	ld.local.u32 	%r1335, [%rd3+12];
	// inline asm
	prmt.b32 %r9678, %r1334, %r1335, %r2;
	// inline asm
	ld.local.u32 	%r1338, [%rd3+12];
	ld.local.u32 	%r1339, [%rd3+8];
	// inline asm
	prmt.b32 %r9679, %r1338, %r1339, %r2;
	// inline asm
	ld.local.u32 	%r1342, [%rd3+8];
	ld.local.u32 	%r1343, [%rd3+4];
	// inline asm
	prmt.b32 %r9680, %r1342, %r1343, %r2;
	// inline asm
	ld.local.u32 	%r1346, [%rd3+4];
	ld.local.u32 	%r1347, [%rd3];
	// inline asm
	prmt.b32 %r9673, %r1346, %r1347, %r2;
	// inline asm
	ld.local.u32 	%r1350, [%rd3];
	ld.local.u32 	%r1351, [%rd2+12];
	// inline asm
	prmt.b32 %r9674, %r1350, %r1351, %r2;
	// inline asm
	ld.local.u32 	%r1354, [%rd2+12];
	ld.local.u32 	%r1355, [%rd2+8];
	// inline asm
	prmt.b32 %r9675, %r1354, %r1355, %r2;
	// inline asm
	ld.local.u32 	%r1358, [%rd2+8];
	ld.local.u32 	%r1359, [%rd2+4];
	// inline asm
	prmt.b32 %r9676, %r1358, %r1359, %r2;
	// inline asm
	ld.local.u32 	%r1362, [%rd2+4];
	ld.local.u32 	%r1363, [%rd2];
	// inline asm
	prmt.b32 %r1361, %r1362, %r1363, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1361;
	ld.local.u32 	%r1366, [%rd2];
	ld.local.u32 	%r1367, [%rd1+12];
	// inline asm
	prmt.b32 %r1365, %r1366, %r1367, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1365;
	ld.local.u32 	%r1370, [%rd1+12];
	ld.local.u32 	%r1371, [%rd1+8];
	// inline asm
	prmt.b32 %r1369, %r1370, %r1371, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1369;
	ld.local.u32 	%r1374, [%rd1+8];
	ld.local.u32 	%r1375, [%rd1+4];
	// inline asm
	prmt.b32 %r1373, %r1374, %r1375, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1373;
	ld.local.u32 	%r1378, [%rd1+4];
	ld.local.u32 	%r1379, [%rd1];
	// inline asm
	prmt.b32 %r1377, %r1378, %r1379, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1377;
	ld.local.u32 	%r1382, [%rd1];
	// inline asm
	prmt.b32 %r1381, %r1382, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1381;
	st.local.u32 	[%rd7+4], %r9672;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd24, 0;
	st.local.u32 	[%rd1+4], %rd24;
	st.local.u32 	[%rd1], %rd24;
	mov.u32 	%r9697, %r9672;
	bra.uni 	BB1_84;

BB1_104:
	setp.eq.s32	%p87, %r1, 6;
	@%p87 bra 	BB1_165;
	bra.uni 	BB1_105;

BB1_165:
	ld.local.u32 	%r8760, [%rd7+4];
	ld.local.u32 	%r8761, [%rd7];
	// inline asm
	prmt.b32 %r8759, %r8760, %r8761, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8759;
	ld.local.u32 	%r8764, [%rd7];
	ld.local.u32 	%r8765, [%rd6+12];
	// inline asm
	prmt.b32 %r8763, %r8764, %r8765, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8763;
	ld.local.u32 	%r8768, [%rd6+12];
	ld.local.u32 	%r8769, [%rd6+8];
	// inline asm
	prmt.b32 %r8767, %r8768, %r8769, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8767;
	ld.local.u32 	%r8772, [%rd6+8];
	ld.local.u32 	%r8773, [%rd6+4];
	// inline asm
	prmt.b32 %r8771, %r8772, %r8773, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8771;
	ld.local.u32 	%r8776, [%rd6+4];
	ld.local.u32 	%r8777, [%rd6];
	// inline asm
	prmt.b32 %r8775, %r8776, %r8777, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8775;
	ld.local.u32 	%r8780, [%rd6];
	ld.local.u32 	%r8781, [%rd5+12];
	// inline asm
	prmt.b32 %r8779, %r8780, %r8781, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8779;
	ld.local.u32 	%r8784, [%rd5+12];
	ld.local.u32 	%r8785, [%rd5+8];
	// inline asm
	prmt.b32 %r8783, %r8784, %r8785, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8783;
	ld.local.u32 	%r8788, [%rd5+8];
	ld.local.u32 	%r8789, [%rd5+4];
	// inline asm
	prmt.b32 %r8787, %r8788, %r8789, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8787;
	ld.local.u32 	%r8792, [%rd5+4];
	ld.local.u32 	%r8793, [%rd5];
	// inline asm
	prmt.b32 %r8791, %r8792, %r8793, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8791;
	ld.local.u32 	%r8796, [%rd5];
	ld.local.u32 	%r8797, [%rd4+12];
	// inline asm
	prmt.b32 %r8795, %r8796, %r8797, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8795;
	ld.local.u32 	%r8800, [%rd4+12];
	ld.local.u32 	%r8801, [%rd4+8];
	// inline asm
	prmt.b32 %r8799, %r8800, %r8801, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8799;
	ld.local.u32 	%r8804, [%rd4+8];
	ld.local.u32 	%r8805, [%rd4+4];
	// inline asm
	prmt.b32 %r8803, %r8804, %r8805, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8803;
	ld.local.u32 	%r8808, [%rd4+4];
	ld.local.u32 	%r8809, [%rd4];
	// inline asm
	prmt.b32 %r8807, %r8808, %r8809, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8807;
	ld.local.u32 	%r8812, [%rd4];
	ld.local.u32 	%r8813, [%rd3+12];
	// inline asm
	prmt.b32 %r8811, %r8812, %r8813, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8811;
	ld.local.u32 	%r8816, [%rd3+12];
	ld.local.u32 	%r8817, [%rd3+8];
	// inline asm
	prmt.b32 %r8815, %r8816, %r8817, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8815;
	ld.local.u32 	%r8820, [%rd3+8];
	ld.local.u32 	%r8821, [%rd3+4];
	// inline asm
	prmt.b32 %r8819, %r8820, %r8821, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8819;
	ld.local.u32 	%r8824, [%rd3+4];
	ld.local.u32 	%r8825, [%rd3];
	// inline asm
	prmt.b32 %r8823, %r8824, %r8825, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8823;
	ld.local.u32 	%r8828, [%rd3];
	ld.local.u32 	%r8829, [%rd2+12];
	// inline asm
	prmt.b32 %r8827, %r8828, %r8829, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8827;
	ld.local.u32 	%r8832, [%rd2+12];
	ld.local.u32 	%r8833, [%rd2+8];
	// inline asm
	prmt.b32 %r8831, %r8832, %r8833, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8831;
	ld.local.u32 	%r8836, [%rd2+8];
	ld.local.u32 	%r8837, [%rd2+4];
	// inline asm
	prmt.b32 %r8835, %r8836, %r8837, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8835;
	ld.local.u32 	%r8840, [%rd2+4];
	ld.local.u32 	%r8841, [%rd2];
	// inline asm
	prmt.b32 %r8839, %r8840, %r8841, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8839;
	ld.local.u32 	%r8844, [%rd2];
	ld.local.u32 	%r8845, [%rd1+12];
	// inline asm
	prmt.b32 %r8843, %r8844, %r8845, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8843;
	ld.local.u32 	%r8848, [%rd1+12];
	ld.local.u32 	%r8849, [%rd1+8];
	// inline asm
	prmt.b32 %r8847, %r8848, %r8849, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8847;
	ld.local.u32 	%r8852, [%rd1+8];
	ld.local.u32 	%r8853, [%rd1+4];
	// inline asm
	prmt.b32 %r8851, %r8852, %r8853, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8851;
	ld.local.u32 	%r8856, [%rd1+4];
	ld.local.u32 	%r8857, [%rd1];
	// inline asm
	prmt.b32 %r8855, %r8856, %r8857, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8855;
	ld.local.u32 	%r8860, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8859, %r8860, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8859;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2938, 0;
	st.local.u32 	[%rd1+4], %rd2938;
	st.local.u32 	[%rd1], %rd2938;
	bra.uni 	BB1_170;

BB1_16:
	setp.eq.s32	%p40, %r1, 6;
	@%p40 bra 	BB1_77;
	bra.uni 	BB1_17;

BB1_77:
	ld.local.u32 	%r4205, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9678, %r9672, %r4205, %r2;
	// inline asm
	ld.local.u32 	%r4208, [%rd8+12];
	ld.local.u32 	%r4209, [%rd8+8];
	// inline asm
	prmt.b32 %r9679, %r4208, %r4209, %r2;
	// inline asm
	ld.local.u32 	%r4212, [%rd8+8];
	ld.local.u32 	%r4213, [%rd8+4];
	// inline asm
	prmt.b32 %r9680, %r4212, %r4213, %r2;
	// inline asm
	ld.local.u32 	%r4216, [%rd8+4];
	ld.local.u32 	%r4217, [%rd8];
	// inline asm
	prmt.b32 %r9673, %r4216, %r4217, %r2;
	// inline asm
	ld.local.u32 	%r4220, [%rd8];
	ld.local.u32 	%r4221, [%rd7+12];
	// inline asm
	prmt.b32 %r9674, %r4220, %r4221, %r2;
	// inline asm
	ld.local.u32 	%r4224, [%rd7+12];
	ld.local.u32 	%r4225, [%rd7+8];
	// inline asm
	prmt.b32 %r9675, %r4224, %r4225, %r2;
	// inline asm
	ld.local.u32 	%r4228, [%rd7+8];
	ld.local.u32 	%r4229, [%rd7+4];
	// inline asm
	prmt.b32 %r9676, %r4228, %r4229, %r2;
	// inline asm
	ld.local.u32 	%r4232, [%rd7+4];
	ld.local.u32 	%r4233, [%rd7];
	// inline asm
	prmt.b32 %r4231, %r4232, %r4233, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4231;
	ld.local.u32 	%r4236, [%rd7];
	ld.local.u32 	%r4237, [%rd6+12];
	// inline asm
	prmt.b32 %r4235, %r4236, %r4237, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4235;
	ld.local.u32 	%r4240, [%rd6+12];
	ld.local.u32 	%r4241, [%rd6+8];
	// inline asm
	prmt.b32 %r4239, %r4240, %r4241, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4239;
	ld.local.u32 	%r4244, [%rd6+8];
	ld.local.u32 	%r4245, [%rd6+4];
	// inline asm
	prmt.b32 %r4243, %r4244, %r4245, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4243;
	ld.local.u32 	%r4248, [%rd6+4];
	ld.local.u32 	%r4249, [%rd6];
	// inline asm
	prmt.b32 %r4247, %r4248, %r4249, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4247;
	ld.local.u32 	%r4252, [%rd6];
	ld.local.u32 	%r4253, [%rd5+12];
	// inline asm
	prmt.b32 %r4251, %r4252, %r4253, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4251;
	ld.local.u32 	%r4256, [%rd5+12];
	ld.local.u32 	%r4257, [%rd5+8];
	// inline asm
	prmt.b32 %r4255, %r4256, %r4257, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4255;
	ld.local.u32 	%r4260, [%rd5+8];
	ld.local.u32 	%r4261, [%rd5+4];
	// inline asm
	prmt.b32 %r4259, %r4260, %r4261, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4259;
	ld.local.u32 	%r4264, [%rd5+4];
	ld.local.u32 	%r4265, [%rd5];
	// inline asm
	prmt.b32 %r4263, %r4264, %r4265, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4263;
	ld.local.u32 	%r4268, [%rd5];
	ld.local.u32 	%r4269, [%rd4+12];
	// inline asm
	prmt.b32 %r4267, %r4268, %r4269, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4267;
	ld.local.u32 	%r4272, [%rd4+12];
	ld.local.u32 	%r4273, [%rd4+8];
	// inline asm
	prmt.b32 %r4271, %r4272, %r4273, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4271;
	ld.local.u32 	%r4276, [%rd4+8];
	ld.local.u32 	%r4277, [%rd4+4];
	// inline asm
	prmt.b32 %r4275, %r4276, %r4277, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4275;
	ld.local.u32 	%r4280, [%rd4+4];
	ld.local.u32 	%r4281, [%rd4];
	// inline asm
	prmt.b32 %r4279, %r4280, %r4281, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4279;
	ld.local.u32 	%r4284, [%rd4];
	ld.local.u32 	%r4285, [%rd3+12];
	// inline asm
	prmt.b32 %r4283, %r4284, %r4285, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4283;
	ld.local.u32 	%r4288, [%rd3+12];
	ld.local.u32 	%r4289, [%rd3+8];
	// inline asm
	prmt.b32 %r4287, %r4288, %r4289, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4287;
	ld.local.u32 	%r4292, [%rd3+8];
	ld.local.u32 	%r4293, [%rd3+4];
	// inline asm
	prmt.b32 %r4291, %r4292, %r4293, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4291;
	ld.local.u32 	%r4296, [%rd3+4];
	ld.local.u32 	%r4297, [%rd3];
	// inline asm
	prmt.b32 %r4295, %r4296, %r4297, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4295;
	ld.local.u32 	%r4300, [%rd3];
	ld.local.u32 	%r4301, [%rd2+12];
	// inline asm
	prmt.b32 %r4299, %r4300, %r4301, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4299;
	ld.local.u32 	%r4304, [%rd2+12];
	ld.local.u32 	%r4305, [%rd2+8];
	// inline asm
	prmt.b32 %r4303, %r4304, %r4305, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4303;
	ld.local.u32 	%r4308, [%rd2+8];
	ld.local.u32 	%r4309, [%rd2+4];
	// inline asm
	prmt.b32 %r4307, %r4308, %r4309, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4307;
	ld.local.u32 	%r4312, [%rd2+4];
	ld.local.u32 	%r4313, [%rd2];
	// inline asm
	prmt.b32 %r4311, %r4312, %r4313, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4311;
	ld.local.u32 	%r4316, [%rd2];
	ld.local.u32 	%r4317, [%rd1+12];
	// inline asm
	prmt.b32 %r4315, %r4316, %r4317, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4315;
	ld.local.u32 	%r4320, [%rd1+12];
	ld.local.u32 	%r4321, [%rd1+8];
	// inline asm
	prmt.b32 %r4319, %r4320, %r4321, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4319;
	ld.local.u32 	%r4324, [%rd1+8];
	ld.local.u32 	%r4325, [%rd1+4];
	// inline asm
	prmt.b32 %r4323, %r4324, %r4325, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4323;
	ld.local.u32 	%r4328, [%rd1+4];
	ld.local.u32 	%r4329, [%rd1];
	// inline asm
	prmt.b32 %r4327, %r4328, %r4329, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4327;
	ld.local.u32 	%r4332, [%rd1];
	// inline asm
	prmt.b32 %r4331, %r4332, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4331;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd44, 0;
	st.local.u32 	[%rd1+4], %rd44;
	st.local.u32 	[%rd1], %rd44;
	mov.u32 	%r9677, %r9672;
	bra.uni 	BB1_79;

BB1_135:
	setp.eq.s32	%p64, %r1, 22;
	@%p64 bra 	BB1_157;
	bra.uni 	BB1_136;

BB1_157:
	ld.local.u32 	%r7624, [%rd3+4];
	ld.local.u32 	%r7625, [%rd3];
	// inline asm
	prmt.b32 %r7623, %r7624, %r7625, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7623;
	ld.local.u32 	%r7628, [%rd3];
	ld.local.u32 	%r7629, [%rd2+12];
	// inline asm
	prmt.b32 %r7627, %r7628, %r7629, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7627;
	ld.local.u32 	%r7632, [%rd2+12];
	ld.local.u32 	%r7633, [%rd2+8];
	// inline asm
	prmt.b32 %r7631, %r7632, %r7633, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7631;
	ld.local.u32 	%r7636, [%rd2+8];
	ld.local.u32 	%r7637, [%rd2+4];
	// inline asm
	prmt.b32 %r7635, %r7636, %r7637, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7635;
	ld.local.u32 	%r7640, [%rd2+4];
	ld.local.u32 	%r7641, [%rd2];
	// inline asm
	prmt.b32 %r7639, %r7640, %r7641, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7639;
	ld.local.u32 	%r7644, [%rd2];
	ld.local.u32 	%r7645, [%rd1+12];
	// inline asm
	prmt.b32 %r7643, %r7644, %r7645, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7643;
	ld.local.u32 	%r7648, [%rd1+12];
	ld.local.u32 	%r7649, [%rd1+8];
	// inline asm
	prmt.b32 %r7647, %r7648, %r7649, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7647;
	ld.local.u32 	%r7652, [%rd1+8];
	ld.local.u32 	%r7653, [%rd1+4];
	// inline asm
	prmt.b32 %r7651, %r7652, %r7653, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7651;
	ld.local.u32 	%r7656, [%rd1+4];
	ld.local.u32 	%r7657, [%rd1];
	// inline asm
	prmt.b32 %r7655, %r7656, %r7657, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7655;
	ld.local.u32 	%r7660, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7659, %r7660, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7659;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2922, 0;
	st.local.u32 	[%rd1+4], %rd2922;
	st.local.u32 	[%rd1], %rd2922;
	bra.uni 	BB1_170;

BB1_47:
	setp.eq.s32	%p17, %r1, 22;
	@%p17 bra 	BB1_69;
	bra.uni 	BB1_48;

BB1_69:
	ld.local.u32 	%r1813, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9694, %r9672, %r1813, %r2;
	// inline asm
	ld.local.u32 	%r1816, [%rd8+12];
	ld.local.u32 	%r1817, [%rd8+8];
	// inline asm
	prmt.b32 %r9695, %r1816, %r1817, %r2;
	// inline asm
	ld.local.u32 	%r1820, [%rd8+8];
	ld.local.u32 	%r1821, [%rd8+4];
	// inline asm
	prmt.b32 %r9696, %r1820, %r1821, %r2;
	// inline asm
	ld.local.u32 	%r1824, [%rd8+4];
	ld.local.u32 	%r1825, [%rd8];
	// inline asm
	prmt.b32 %r9689, %r1824, %r1825, %r2;
	// inline asm
	ld.local.u32 	%r1828, [%rd8];
	ld.local.u32 	%r1829, [%rd7+12];
	// inline asm
	prmt.b32 %r9690, %r1828, %r1829, %r2;
	// inline asm
	ld.local.u32 	%r1832, [%rd7+12];
	ld.local.u32 	%r1833, [%rd7+8];
	// inline asm
	prmt.b32 %r9691, %r1832, %r1833, %r2;
	// inline asm
	ld.local.u32 	%r1836, [%rd7+8];
	ld.local.u32 	%r1837, [%rd7+4];
	// inline asm
	prmt.b32 %r9692, %r1836, %r1837, %r2;
	// inline asm
	ld.local.u32 	%r1840, [%rd7+4];
	ld.local.u32 	%r1841, [%rd7];
	// inline asm
	prmt.b32 %r9685, %r1840, %r1841, %r2;
	// inline asm
	ld.local.u32 	%r1844, [%rd7];
	ld.local.u32 	%r1845, [%rd6+12];
	// inline asm
	prmt.b32 %r9686, %r1844, %r1845, %r2;
	// inline asm
	ld.local.u32 	%r1848, [%rd6+12];
	ld.local.u32 	%r1849, [%rd6+8];
	// inline asm
	prmt.b32 %r9687, %r1848, %r1849, %r2;
	// inline asm
	ld.local.u32 	%r1852, [%rd6+8];
	ld.local.u32 	%r1853, [%rd6+4];
	// inline asm
	prmt.b32 %r9688, %r1852, %r1853, %r2;
	// inline asm
	ld.local.u32 	%r1856, [%rd6+4];
	ld.local.u32 	%r1857, [%rd6];
	// inline asm
	prmt.b32 %r9681, %r1856, %r1857, %r2;
	// inline asm
	ld.local.u32 	%r1860, [%rd6];
	ld.local.u32 	%r1861, [%rd5+12];
	// inline asm
	prmt.b32 %r9682, %r1860, %r1861, %r2;
	// inline asm
	ld.local.u32 	%r1864, [%rd5+12];
	ld.local.u32 	%r1865, [%rd5+8];
	// inline asm
	prmt.b32 %r9683, %r1864, %r1865, %r2;
	// inline asm
	ld.local.u32 	%r1868, [%rd5+8];
	ld.local.u32 	%r1869, [%rd5+4];
	// inline asm
	prmt.b32 %r9684, %r1868, %r1869, %r2;
	// inline asm
	ld.local.u32 	%r1872, [%rd5+4];
	ld.local.u32 	%r1873, [%rd5];
	// inline asm
	prmt.b32 %r9677, %r1872, %r1873, %r2;
	// inline asm
	ld.local.u32 	%r1876, [%rd5];
	ld.local.u32 	%r1877, [%rd4+12];
	// inline asm
	prmt.b32 %r9678, %r1876, %r1877, %r2;
	// inline asm
	ld.local.u32 	%r1880, [%rd4+12];
	ld.local.u32 	%r1881, [%rd4+8];
	// inline asm
	prmt.b32 %r9679, %r1880, %r1881, %r2;
	// inline asm
	ld.local.u32 	%r1884, [%rd4+8];
	ld.local.u32 	%r1885, [%rd4+4];
	// inline asm
	prmt.b32 %r9680, %r1884, %r1885, %r2;
	// inline asm
	ld.local.u32 	%r1888, [%rd4+4];
	ld.local.u32 	%r1889, [%rd4];
	// inline asm
	prmt.b32 %r9673, %r1888, %r1889, %r2;
	// inline asm
	ld.local.u32 	%r1892, [%rd4];
	ld.local.u32 	%r1893, [%rd3+12];
	// inline asm
	prmt.b32 %r9674, %r1892, %r1893, %r2;
	// inline asm
	ld.local.u32 	%r1896, [%rd3+12];
	ld.local.u32 	%r1897, [%rd3+8];
	// inline asm
	prmt.b32 %r9675, %r1896, %r1897, %r2;
	// inline asm
	ld.local.u32 	%r1900, [%rd3+8];
	ld.local.u32 	%r1901, [%rd3+4];
	// inline asm
	prmt.b32 %r9676, %r1900, %r1901, %r2;
	// inline asm
	ld.local.u32 	%r1904, [%rd3+4];
	ld.local.u32 	%r1905, [%rd3];
	// inline asm
	prmt.b32 %r1903, %r1904, %r1905, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1903;
	ld.local.u32 	%r1908, [%rd3];
	ld.local.u32 	%r1909, [%rd2+12];
	// inline asm
	prmt.b32 %r1907, %r1908, %r1909, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1907;
	ld.local.u32 	%r1912, [%rd2+12];
	ld.local.u32 	%r1913, [%rd2+8];
	// inline asm
	prmt.b32 %r1911, %r1912, %r1913, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1911;
	ld.local.u32 	%r1916, [%rd2+8];
	ld.local.u32 	%r1917, [%rd2+4];
	// inline asm
	prmt.b32 %r1915, %r1916, %r1917, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1915;
	ld.local.u32 	%r1920, [%rd2+4];
	ld.local.u32 	%r1921, [%rd2];
	// inline asm
	prmt.b32 %r1919, %r1920, %r1921, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1919;
	ld.local.u32 	%r1924, [%rd2];
	ld.local.u32 	%r1925, [%rd1+12];
	// inline asm
	prmt.b32 %r1923, %r1924, %r1925, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1923;
	ld.local.u32 	%r1928, [%rd1+12];
	ld.local.u32 	%r1929, [%rd1+8];
	// inline asm
	prmt.b32 %r1927, %r1928, %r1929, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1927;
	ld.local.u32 	%r1932, [%rd1+8];
	ld.local.u32 	%r1933, [%rd1+4];
	// inline asm
	prmt.b32 %r1931, %r1932, %r1933, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1931;
	ld.local.u32 	%r1936, [%rd1+4];
	ld.local.u32 	%r1937, [%rd1];
	// inline asm
	prmt.b32 %r1935, %r1936, %r1937, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1935;
	ld.local.u32 	%r1940, [%rd1];
	// inline asm
	prmt.b32 %r1939, %r1940, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r1939;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd28, 0;
	st.local.u32 	[%rd1+4], %rd28;
	st.local.u32 	[%rd1], %rd28;
	mov.u32 	%r9693, %r9672;
	bra.uni 	BB1_83;

BB1_119:
	setp.eq.s32	%p76, %r1, 14;
	@%p76 bra 	BB1_161;
	bra.uni 	BB1_120;

BB1_161:
	ld.local.u32 	%r8064, [%rd5+4];
	ld.local.u32 	%r8065, [%rd5];
	// inline asm
	prmt.b32 %r8063, %r8064, %r8065, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8063;
	ld.local.u32 	%r8068, [%rd5];
	ld.local.u32 	%r8069, [%rd4+12];
	// inline asm
	prmt.b32 %r8067, %r8068, %r8069, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8067;
	ld.local.u32 	%r8072, [%rd4+12];
	ld.local.u32 	%r8073, [%rd4+8];
	// inline asm
	prmt.b32 %r8071, %r8072, %r8073, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8071;
	ld.local.u32 	%r8076, [%rd4+8];
	ld.local.u32 	%r8077, [%rd4+4];
	// inline asm
	prmt.b32 %r8075, %r8076, %r8077, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8075;
	ld.local.u32 	%r8080, [%rd4+4];
	ld.local.u32 	%r8081, [%rd4];
	// inline asm
	prmt.b32 %r8079, %r8080, %r8081, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8079;
	ld.local.u32 	%r8084, [%rd4];
	ld.local.u32 	%r8085, [%rd3+12];
	// inline asm
	prmt.b32 %r8083, %r8084, %r8085, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8083;
	ld.local.u32 	%r8088, [%rd3+12];
	ld.local.u32 	%r8089, [%rd3+8];
	// inline asm
	prmt.b32 %r8087, %r8088, %r8089, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8087;
	ld.local.u32 	%r8092, [%rd3+8];
	ld.local.u32 	%r8093, [%rd3+4];
	// inline asm
	prmt.b32 %r8091, %r8092, %r8093, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8091;
	ld.local.u32 	%r8096, [%rd3+4];
	ld.local.u32 	%r8097, [%rd3];
	// inline asm
	prmt.b32 %r8095, %r8096, %r8097, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8095;
	ld.local.u32 	%r8100, [%rd3];
	ld.local.u32 	%r8101, [%rd2+12];
	// inline asm
	prmt.b32 %r8099, %r8100, %r8101, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8099;
	ld.local.u32 	%r8104, [%rd2+12];
	ld.local.u32 	%r8105, [%rd2+8];
	// inline asm
	prmt.b32 %r8103, %r8104, %r8105, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8103;
	ld.local.u32 	%r8108, [%rd2+8];
	ld.local.u32 	%r8109, [%rd2+4];
	// inline asm
	prmt.b32 %r8107, %r8108, %r8109, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8107;
	ld.local.u32 	%r8112, [%rd2+4];
	ld.local.u32 	%r8113, [%rd2];
	// inline asm
	prmt.b32 %r8111, %r8112, %r8113, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8111;
	ld.local.u32 	%r8116, [%rd2];
	ld.local.u32 	%r8117, [%rd1+12];
	// inline asm
	prmt.b32 %r8115, %r8116, %r8117, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8115;
	ld.local.u32 	%r8120, [%rd1+12];
	ld.local.u32 	%r8121, [%rd1+8];
	// inline asm
	prmt.b32 %r8119, %r8120, %r8121, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8119;
	ld.local.u32 	%r8124, [%rd1+8];
	ld.local.u32 	%r8125, [%rd1+4];
	// inline asm
	prmt.b32 %r8123, %r8124, %r8125, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8123;
	ld.local.u32 	%r8128, [%rd1+4];
	ld.local.u32 	%r8129, [%rd1];
	// inline asm
	prmt.b32 %r8127, %r8128, %r8129, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8127;
	ld.local.u32 	%r8132, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8131, %r8132, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8131;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2930, 0;
	st.local.u32 	[%rd1+4], %rd2930;
	st.local.u32 	[%rd1], %rd2930;
	bra.uni 	BB1_170;

BB1_31:
	setp.eq.s32	%p29, %r1, 14;
	@%p29 bra 	BB1_73;
	bra.uni 	BB1_32;

BB1_73:
	ld.local.u32 	%r2977, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9686, %r9672, %r2977, %r2;
	// inline asm
	ld.local.u32 	%r2980, [%rd8+12];
	ld.local.u32 	%r2981, [%rd8+8];
	// inline asm
	prmt.b32 %r9687, %r2980, %r2981, %r2;
	// inline asm
	ld.local.u32 	%r2984, [%rd8+8];
	ld.local.u32 	%r2985, [%rd8+4];
	// inline asm
	prmt.b32 %r9688, %r2984, %r2985, %r2;
	// inline asm
	ld.local.u32 	%r2988, [%rd8+4];
	ld.local.u32 	%r2989, [%rd8];
	// inline asm
	prmt.b32 %r9681, %r2988, %r2989, %r2;
	// inline asm
	ld.local.u32 	%r2992, [%rd8];
	ld.local.u32 	%r2993, [%rd7+12];
	// inline asm
	prmt.b32 %r9682, %r2992, %r2993, %r2;
	// inline asm
	ld.local.u32 	%r2996, [%rd7+12];
	ld.local.u32 	%r2997, [%rd7+8];
	// inline asm
	prmt.b32 %r9683, %r2996, %r2997, %r2;
	// inline asm
	ld.local.u32 	%r3000, [%rd7+8];
	ld.local.u32 	%r3001, [%rd7+4];
	// inline asm
	prmt.b32 %r9684, %r3000, %r3001, %r2;
	// inline asm
	ld.local.u32 	%r3004, [%rd7+4];
	ld.local.u32 	%r3005, [%rd7];
	// inline asm
	prmt.b32 %r9677, %r3004, %r3005, %r2;
	// inline asm
	ld.local.u32 	%r3008, [%rd7];
	ld.local.u32 	%r3009, [%rd6+12];
	// inline asm
	prmt.b32 %r9678, %r3008, %r3009, %r2;
	// inline asm
	ld.local.u32 	%r3012, [%rd6+12];
	ld.local.u32 	%r3013, [%rd6+8];
	// inline asm
	prmt.b32 %r9679, %r3012, %r3013, %r2;
	// inline asm
	ld.local.u32 	%r3016, [%rd6+8];
	ld.local.u32 	%r3017, [%rd6+4];
	// inline asm
	prmt.b32 %r9680, %r3016, %r3017, %r2;
	// inline asm
	ld.local.u32 	%r3020, [%rd6+4];
	ld.local.u32 	%r3021, [%rd6];
	// inline asm
	prmt.b32 %r9673, %r3020, %r3021, %r2;
	// inline asm
	ld.local.u32 	%r3024, [%rd6];
	ld.local.u32 	%r3025, [%rd5+12];
	// inline asm
	prmt.b32 %r9674, %r3024, %r3025, %r2;
	// inline asm
	ld.local.u32 	%r3028, [%rd5+12];
	ld.local.u32 	%r3029, [%rd5+8];
	// inline asm
	prmt.b32 %r9675, %r3028, %r3029, %r2;
	// inline asm
	ld.local.u32 	%r3032, [%rd5+8];
	ld.local.u32 	%r3033, [%rd5+4];
	// inline asm
	prmt.b32 %r9676, %r3032, %r3033, %r2;
	// inline asm
	ld.local.u32 	%r3036, [%rd5+4];
	ld.local.u32 	%r3037, [%rd5];
	// inline asm
	prmt.b32 %r3035, %r3036, %r3037, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3035;
	ld.local.u32 	%r3040, [%rd5];
	ld.local.u32 	%r3041, [%rd4+12];
	// inline asm
	prmt.b32 %r3039, %r3040, %r3041, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3039;
	ld.local.u32 	%r3044, [%rd4+12];
	ld.local.u32 	%r3045, [%rd4+8];
	// inline asm
	prmt.b32 %r3043, %r3044, %r3045, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3043;
	ld.local.u32 	%r3048, [%rd4+8];
	ld.local.u32 	%r3049, [%rd4+4];
	// inline asm
	prmt.b32 %r3047, %r3048, %r3049, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3047;
	ld.local.u32 	%r3052, [%rd4+4];
	ld.local.u32 	%r3053, [%rd4];
	// inline asm
	prmt.b32 %r3051, %r3052, %r3053, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3051;
	ld.local.u32 	%r3056, [%rd4];
	ld.local.u32 	%r3057, [%rd3+12];
	// inline asm
	prmt.b32 %r3055, %r3056, %r3057, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3055;
	ld.local.u32 	%r3060, [%rd3+12];
	ld.local.u32 	%r3061, [%rd3+8];
	// inline asm
	prmt.b32 %r3059, %r3060, %r3061, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3059;
	ld.local.u32 	%r3064, [%rd3+8];
	ld.local.u32 	%r3065, [%rd3+4];
	// inline asm
	prmt.b32 %r3063, %r3064, %r3065, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3063;
	ld.local.u32 	%r3068, [%rd3+4];
	ld.local.u32 	%r3069, [%rd3];
	// inline asm
	prmt.b32 %r3067, %r3068, %r3069, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3067;
	ld.local.u32 	%r3072, [%rd3];
	ld.local.u32 	%r3073, [%rd2+12];
	// inline asm
	prmt.b32 %r3071, %r3072, %r3073, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3071;
	ld.local.u32 	%r3076, [%rd2+12];
	ld.local.u32 	%r3077, [%rd2+8];
	// inline asm
	prmt.b32 %r3075, %r3076, %r3077, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3075;
	ld.local.u32 	%r3080, [%rd2+8];
	ld.local.u32 	%r3081, [%rd2+4];
	// inline asm
	prmt.b32 %r3079, %r3080, %r3081, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3079;
	ld.local.u32 	%r3084, [%rd2+4];
	ld.local.u32 	%r3085, [%rd2];
	// inline asm
	prmt.b32 %r3083, %r3084, %r3085, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3083;
	ld.local.u32 	%r3088, [%rd2];
	ld.local.u32 	%r3089, [%rd1+12];
	// inline asm
	prmt.b32 %r3087, %r3088, %r3089, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3087;
	ld.local.u32 	%r3092, [%rd1+12];
	ld.local.u32 	%r3093, [%rd1+8];
	// inline asm
	prmt.b32 %r3091, %r3092, %r3093, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3091;
	ld.local.u32 	%r3096, [%rd1+8];
	ld.local.u32 	%r3097, [%rd1+4];
	// inline asm
	prmt.b32 %r3095, %r3096, %r3097, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3095;
	ld.local.u32 	%r3100, [%rd1+4];
	ld.local.u32 	%r3101, [%rd1];
	// inline asm
	prmt.b32 %r3099, %r3100, %r3101, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3099;
	ld.local.u32 	%r3104, [%rd1];
	// inline asm
	prmt.b32 %r3103, %r3104, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3103;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd36, 0;
	st.local.u32 	[%rd1+4], %rd36;
	st.local.u32 	[%rd1], %rd36;
	mov.u32 	%r9685, %r9672;
	bra.uni 	BB1_81;

BB1_150:
	setp.eq.s32	%p53, %r1, 30;
	@%p53 bra 	BB1_153;
	bra.uni 	BB1_151;

BB1_153:
	ld.local.u32 	%r7440, [%rd1+4];
	ld.local.u32 	%r7441, [%rd1];
	// inline asm
	prmt.b32 %r7439, %r7440, %r7441, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7439;
	ld.local.u32 	%r7444, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7443, %r7444, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7443;
	st.local.u32 	[%rd8+4], %r9705;
	st.local.u32 	[%rd8], %r9705;
	st.local.u32 	[%rd7+12], %r9705;
	st.local.u32 	[%rd7+8], %r9705;
	st.local.u32 	[%rd7+4], %r9705;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2914, 0;
	st.local.u32 	[%rd1+4], %rd2914;
	st.local.u32 	[%rd1], %rd2914;
	bra.uni 	BB1_170;

BB1_62:
	setp.eq.s32	%p6, %r1, 30;
	@%p6 bra 	BB1_65;
	bra.uni 	BB1_63;

BB1_65:
	ld.local.u32 	%r713, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9702, %r9672, %r713, %r2;
	// inline asm
	ld.local.u32 	%r716, [%rd8+12];
	ld.local.u32 	%r717, [%rd8+8];
	// inline asm
	prmt.b32 %r9703, %r716, %r717, %r2;
	// inline asm
	ld.local.u32 	%r720, [%rd8+8];
	ld.local.u32 	%r721, [%rd8+4];
	// inline asm
	prmt.b32 %r9704, %r720, %r721, %r2;
	// inline asm
	ld.local.u32 	%r724, [%rd8+4];
	ld.local.u32 	%r725, [%rd8];
	// inline asm
	prmt.b32 %r9697, %r724, %r725, %r2;
	// inline asm
	ld.local.u32 	%r728, [%rd8];
	ld.local.u32 	%r729, [%rd7+12];
	// inline asm
	prmt.b32 %r9698, %r728, %r729, %r2;
	// inline asm
	ld.local.u32 	%r732, [%rd7+12];
	ld.local.u32 	%r733, [%rd7+8];
	// inline asm
	prmt.b32 %r9699, %r732, %r733, %r2;
	// inline asm
	ld.local.u32 	%r736, [%rd7+8];
	ld.local.u32 	%r737, [%rd7+4];
	// inline asm
	prmt.b32 %r9700, %r736, %r737, %r2;
	// inline asm
	ld.local.u32 	%r740, [%rd7+4];
	ld.local.u32 	%r741, [%rd7];
	// inline asm
	prmt.b32 %r9693, %r740, %r741, %r2;
	// inline asm
	ld.local.u32 	%r744, [%rd7];
	ld.local.u32 	%r745, [%rd6+12];
	// inline asm
	prmt.b32 %r9694, %r744, %r745, %r2;
	// inline asm
	ld.local.u32 	%r748, [%rd6+12];
	ld.local.u32 	%r749, [%rd6+8];
	// inline asm
	prmt.b32 %r9695, %r748, %r749, %r2;
	// inline asm
	ld.local.u32 	%r752, [%rd6+8];
	ld.local.u32 	%r753, [%rd6+4];
	// inline asm
	prmt.b32 %r9696, %r752, %r753, %r2;
	// inline asm
	ld.local.u32 	%r756, [%rd6+4];
	ld.local.u32 	%r757, [%rd6];
	// inline asm
	prmt.b32 %r9689, %r756, %r757, %r2;
	// inline asm
	ld.local.u32 	%r760, [%rd6];
	ld.local.u32 	%r761, [%rd5+12];
	// inline asm
	prmt.b32 %r9690, %r760, %r761, %r2;
	// inline asm
	ld.local.u32 	%r764, [%rd5+12];
	ld.local.u32 	%r765, [%rd5+8];
	// inline asm
	prmt.b32 %r9691, %r764, %r765, %r2;
	// inline asm
	ld.local.u32 	%r768, [%rd5+8];
	ld.local.u32 	%r769, [%rd5+4];
	// inline asm
	prmt.b32 %r9692, %r768, %r769, %r2;
	// inline asm
	ld.local.u32 	%r772, [%rd5+4];
	ld.local.u32 	%r773, [%rd5];
	// inline asm
	prmt.b32 %r9685, %r772, %r773, %r2;
	// inline asm
	ld.local.u32 	%r776, [%rd5];
	ld.local.u32 	%r777, [%rd4+12];
	// inline asm
	prmt.b32 %r9686, %r776, %r777, %r2;
	// inline asm
	ld.local.u32 	%r780, [%rd4+12];
	ld.local.u32 	%r781, [%rd4+8];
	// inline asm
	prmt.b32 %r9687, %r780, %r781, %r2;
	// inline asm
	ld.local.u32 	%r784, [%rd4+8];
	ld.local.u32 	%r785, [%rd4+4];
	// inline asm
	prmt.b32 %r9688, %r784, %r785, %r2;
	// inline asm
	ld.local.u32 	%r788, [%rd4+4];
	ld.local.u32 	%r789, [%rd4];
	// inline asm
	prmt.b32 %r9681, %r788, %r789, %r2;
	// inline asm
	ld.local.u32 	%r792, [%rd4];
	ld.local.u32 	%r793, [%rd3+12];
	// inline asm
	prmt.b32 %r9682, %r792, %r793, %r2;
	// inline asm
	ld.local.u32 	%r796, [%rd3+12];
	ld.local.u32 	%r797, [%rd3+8];
	// inline asm
	prmt.b32 %r9683, %r796, %r797, %r2;
	// inline asm
	ld.local.u32 	%r800, [%rd3+8];
	ld.local.u32 	%r801, [%rd3+4];
	// inline asm
	prmt.b32 %r9684, %r800, %r801, %r2;
	// inline asm
	ld.local.u32 	%r804, [%rd3+4];
	ld.local.u32 	%r805, [%rd3];
	// inline asm
	prmt.b32 %r9677, %r804, %r805, %r2;
	// inline asm
	ld.local.u32 	%r808, [%rd3];
	ld.local.u32 	%r809, [%rd2+12];
	// inline asm
	prmt.b32 %r9678, %r808, %r809, %r2;
	// inline asm
	ld.local.u32 	%r812, [%rd2+12];
	ld.local.u32 	%r813, [%rd2+8];
	// inline asm
	prmt.b32 %r9679, %r812, %r813, %r2;
	// inline asm
	ld.local.u32 	%r816, [%rd2+8];
	ld.local.u32 	%r817, [%rd2+4];
	// inline asm
	prmt.b32 %r9680, %r816, %r817, %r2;
	// inline asm
	ld.local.u32 	%r820, [%rd2+4];
	ld.local.u32 	%r821, [%rd2];
	// inline asm
	prmt.b32 %r9673, %r820, %r821, %r2;
	// inline asm
	ld.local.u32 	%r824, [%rd2];
	ld.local.u32 	%r825, [%rd1+12];
	// inline asm
	prmt.b32 %r9674, %r824, %r825, %r2;
	// inline asm
	ld.local.u32 	%r828, [%rd1+12];
	ld.local.u32 	%r829, [%rd1+8];
	// inline asm
	prmt.b32 %r9675, %r828, %r829, %r2;
	// inline asm
	ld.local.u32 	%r832, [%rd1+8];
	ld.local.u32 	%r833, [%rd1+4];
	// inline asm
	prmt.b32 %r9676, %r832, %r833, %r2;
	// inline asm
	ld.local.u32 	%r836, [%rd1+4];
	ld.local.u32 	%r837, [%rd1];
	// inline asm
	prmt.b32 %r835, %r836, %r837, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r835;
	ld.local.u32 	%r840, [%rd1];
	// inline asm
	prmt.b32 %r839, %r840, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r839;
	st.local.u32 	[%rd8+4], %r9672;
	st.local.u32 	[%rd8], %r9672;
	st.local.u32 	[%rd7+12], %r9672;
	st.local.u32 	[%rd7+8], %r9672;
	st.local.u32 	[%rd7+4], %r9672;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd20, 0;
	st.local.u32 	[%rd1+4], %rd20;
	st.local.u32 	[%rd1], %rd20;
	mov.u32 	%r9701, %r9672;
	bra.uni 	BB1_89;

BB1_95:
	setp.eq.s32	%p95, %r1, 1;
	@%p95 bra 	BB1_96;
	bra.uni 	BB1_169;

BB1_96:
	ld.local.u32 	%r9325, [%rd8+8];
	ld.local.u32 	%r9326, [%rd8+4];
	// inline asm
	prmt.b32 %r9324, %r9325, %r9326, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r9324;
	ld.local.u32 	%r9329, [%rd8+4];
	ld.local.u32 	%r9330, [%rd8];
	// inline asm
	prmt.b32 %r9328, %r9329, %r9330, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r9328;
	ld.local.u32 	%r9333, [%rd8];
	ld.local.u32 	%r9334, [%rd7+12];
	// inline asm
	prmt.b32 %r9332, %r9333, %r9334, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r9332;
	ld.local.u32 	%r9337, [%rd7+12];
	ld.local.u32 	%r9338, [%rd7+8];
	// inline asm
	prmt.b32 %r9336, %r9337, %r9338, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r9336;
	ld.local.u32 	%r9341, [%rd7+8];
	ld.local.u32 	%r9342, [%rd7+4];
	// inline asm
	prmt.b32 %r9340, %r9341, %r9342, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r9340;
	ld.local.u32 	%r9345, [%rd7+4];
	ld.local.u32 	%r9346, [%rd7];
	// inline asm
	prmt.b32 %r9344, %r9345, %r9346, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r9344;
	ld.local.u32 	%r9349, [%rd7];
	ld.local.u32 	%r9350, [%rd6+12];
	// inline asm
	prmt.b32 %r9348, %r9349, %r9350, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r9348;
	ld.local.u32 	%r9353, [%rd6+12];
	ld.local.u32 	%r9354, [%rd6+8];
	// inline asm
	prmt.b32 %r9352, %r9353, %r9354, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9352;
	ld.local.u32 	%r9357, [%rd6+8];
	ld.local.u32 	%r9358, [%rd6+4];
	// inline asm
	prmt.b32 %r9356, %r9357, %r9358, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9356;
	ld.local.u32 	%r9361, [%rd6+4];
	ld.local.u32 	%r9362, [%rd6];
	// inline asm
	prmt.b32 %r9360, %r9361, %r9362, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9360;
	ld.local.u32 	%r9365, [%rd6];
	ld.local.u32 	%r9366, [%rd5+12];
	// inline asm
	prmt.b32 %r9364, %r9365, %r9366, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9364;
	ld.local.u32 	%r9369, [%rd5+12];
	ld.local.u32 	%r9370, [%rd5+8];
	// inline asm
	prmt.b32 %r9368, %r9369, %r9370, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9368;
	ld.local.u32 	%r9373, [%rd5+8];
	ld.local.u32 	%r9374, [%rd5+4];
	// inline asm
	prmt.b32 %r9372, %r9373, %r9374, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9372;
	ld.local.u32 	%r9377, [%rd5+4];
	ld.local.u32 	%r9378, [%rd5];
	// inline asm
	prmt.b32 %r9376, %r9377, %r9378, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9376;
	ld.local.u32 	%r9381, [%rd5];
	ld.local.u32 	%r9382, [%rd4+12];
	// inline asm
	prmt.b32 %r9380, %r9381, %r9382, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9380;
	ld.local.u32 	%r9385, [%rd4+12];
	ld.local.u32 	%r9386, [%rd4+8];
	// inline asm
	prmt.b32 %r9384, %r9385, %r9386, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9384;
	ld.local.u32 	%r9389, [%rd4+8];
	ld.local.u32 	%r9390, [%rd4+4];
	// inline asm
	prmt.b32 %r9388, %r9389, %r9390, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9388;
	ld.local.u32 	%r9393, [%rd4+4];
	ld.local.u32 	%r9394, [%rd4];
	// inline asm
	prmt.b32 %r9392, %r9393, %r9394, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9392;
	ld.local.u32 	%r9397, [%rd4];
	ld.local.u32 	%r9398, [%rd3+12];
	// inline asm
	prmt.b32 %r9396, %r9397, %r9398, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9396;
	ld.local.u32 	%r9401, [%rd3+12];
	ld.local.u32 	%r9402, [%rd3+8];
	// inline asm
	prmt.b32 %r9400, %r9401, %r9402, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9400;
	ld.local.u32 	%r9405, [%rd3+8];
	ld.local.u32 	%r9406, [%rd3+4];
	// inline asm
	prmt.b32 %r9404, %r9405, %r9406, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9404;
	ld.local.u32 	%r9409, [%rd3+4];
	ld.local.u32 	%r9410, [%rd3];
	// inline asm
	prmt.b32 %r9408, %r9409, %r9410, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9408;
	ld.local.u32 	%r9413, [%rd3];
	ld.local.u32 	%r9414, [%rd2+12];
	// inline asm
	prmt.b32 %r9412, %r9413, %r9414, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9412;
	ld.local.u32 	%r9417, [%rd2+12];
	ld.local.u32 	%r9418, [%rd2+8];
	// inline asm
	prmt.b32 %r9416, %r9417, %r9418, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9416;
	ld.local.u32 	%r9421, [%rd2+8];
	ld.local.u32 	%r9422, [%rd2+4];
	// inline asm
	prmt.b32 %r9420, %r9421, %r9422, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9420;
	ld.local.u32 	%r9425, [%rd2+4];
	ld.local.u32 	%r9426, [%rd2];
	// inline asm
	prmt.b32 %r9424, %r9425, %r9426, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9424;
	ld.local.u32 	%r9429, [%rd2];
	ld.local.u32 	%r9430, [%rd1+12];
	// inline asm
	prmt.b32 %r9428, %r9429, %r9430, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9428;
	ld.local.u32 	%r9433, [%rd1+12];
	ld.local.u32 	%r9434, [%rd1+8];
	// inline asm
	prmt.b32 %r9432, %r9433, %r9434, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9432;
	ld.local.u32 	%r9437, [%rd1+8];
	ld.local.u32 	%r9438, [%rd1+4];
	// inline asm
	prmt.b32 %r9436, %r9437, %r9438, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9436;
	ld.local.u32 	%r9441, [%rd1+4];
	ld.local.u32 	%r9442, [%rd1];
	// inline asm
	prmt.b32 %r9440, %r9441, %r9442, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r9440;
	ld.local.u32 	%r9445, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9444, %r9445, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r9444;
	st.local.u32 	[%rd1], %r9705;
	bra.uni 	BB1_170;

BB1_6:
	setp.eq.s32	%p48, %r1, 1;
	@%p48 bra 	BB1_7;
	bra.uni 	BB1_87;

BB1_7:
	ld.local.u32 	%r5005, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9675, %r9672, %r5005, %r2;
	// inline asm
	ld.local.u32 	%r5008, [%rd8+12];
	ld.local.u32 	%r5009, [%rd8+8];
	// inline asm
	prmt.b32 %r9676, %r5008, %r5009, %r2;
	// inline asm
	ld.local.u32 	%r5012, [%rd8+8];
	ld.local.u32 	%r5013, [%rd8+4];
	// inline asm
	prmt.b32 %r5011, %r5012, %r5013, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r5011;
	ld.local.u32 	%r5016, [%rd8+4];
	ld.local.u32 	%r5017, [%rd8];
	// inline asm
	prmt.b32 %r5015, %r5016, %r5017, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r5015;
	ld.local.u32 	%r5020, [%rd8];
	ld.local.u32 	%r5021, [%rd7+12];
	// inline asm
	prmt.b32 %r5019, %r5020, %r5021, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r5019;
	ld.local.u32 	%r5024, [%rd7+12];
	ld.local.u32 	%r5025, [%rd7+8];
	// inline asm
	prmt.b32 %r5023, %r5024, %r5025, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r5023;
	ld.local.u32 	%r5028, [%rd7+8];
	ld.local.u32 	%r5029, [%rd7+4];
	// inline asm
	prmt.b32 %r5027, %r5028, %r5029, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r5027;
	ld.local.u32 	%r5032, [%rd7+4];
	ld.local.u32 	%r5033, [%rd7];
	// inline asm
	prmt.b32 %r5031, %r5032, %r5033, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r5031;
	ld.local.u32 	%r5036, [%rd7];
	ld.local.u32 	%r5037, [%rd6+12];
	// inline asm
	prmt.b32 %r5035, %r5036, %r5037, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r5035;
	ld.local.u32 	%r5040, [%rd6+12];
	ld.local.u32 	%r5041, [%rd6+8];
	// inline asm
	prmt.b32 %r5039, %r5040, %r5041, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r5039;
	ld.local.u32 	%r5044, [%rd6+8];
	ld.local.u32 	%r5045, [%rd6+4];
	// inline asm
	prmt.b32 %r5043, %r5044, %r5045, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r5043;
	ld.local.u32 	%r5048, [%rd6+4];
	ld.local.u32 	%r5049, [%rd6];
	// inline asm
	prmt.b32 %r5047, %r5048, %r5049, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r5047;
	ld.local.u32 	%r5052, [%rd6];
	ld.local.u32 	%r5053, [%rd5+12];
	// inline asm
	prmt.b32 %r5051, %r5052, %r5053, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r5051;
	ld.local.u32 	%r5056, [%rd5+12];
	ld.local.u32 	%r5057, [%rd5+8];
	// inline asm
	prmt.b32 %r5055, %r5056, %r5057, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r5055;
	ld.local.u32 	%r5060, [%rd5+8];
	ld.local.u32 	%r5061, [%rd5+4];
	// inline asm
	prmt.b32 %r5059, %r5060, %r5061, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r5059;
	ld.local.u32 	%r5064, [%rd5+4];
	ld.local.u32 	%r5065, [%rd5];
	// inline asm
	prmt.b32 %r5063, %r5064, %r5065, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r5063;
	ld.local.u32 	%r5068, [%rd5];
	ld.local.u32 	%r5069, [%rd4+12];
	// inline asm
	prmt.b32 %r5067, %r5068, %r5069, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r5067;
	ld.local.u32 	%r5072, [%rd4+12];
	ld.local.u32 	%r5073, [%rd4+8];
	// inline asm
	prmt.b32 %r5071, %r5072, %r5073, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r5071;
	ld.local.u32 	%r5076, [%rd4+8];
	ld.local.u32 	%r5077, [%rd4+4];
	// inline asm
	prmt.b32 %r5075, %r5076, %r5077, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r5075;
	ld.local.u32 	%r5080, [%rd4+4];
	ld.local.u32 	%r5081, [%rd4];
	// inline asm
	prmt.b32 %r5079, %r5080, %r5081, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r5079;
	ld.local.u32 	%r5084, [%rd4];
	ld.local.u32 	%r5085, [%rd3+12];
	// inline asm
	prmt.b32 %r5083, %r5084, %r5085, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r5083;
	ld.local.u32 	%r5088, [%rd3+12];
	ld.local.u32 	%r5089, [%rd3+8];
	// inline asm
	prmt.b32 %r5087, %r5088, %r5089, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r5087;
	ld.local.u32 	%r5092, [%rd3+8];
	ld.local.u32 	%r5093, [%rd3+4];
	// inline asm
	prmt.b32 %r5091, %r5092, %r5093, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r5091;
	ld.local.u32 	%r5096, [%rd3+4];
	ld.local.u32 	%r5097, [%rd3];
	// inline asm
	prmt.b32 %r5095, %r5096, %r5097, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r5095;
	ld.local.u32 	%r5100, [%rd3];
	ld.local.u32 	%r5101, [%rd2+12];
	// inline asm
	prmt.b32 %r5099, %r5100, %r5101, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r5099;
	ld.local.u32 	%r5104, [%rd2+12];
	ld.local.u32 	%r5105, [%rd2+8];
	// inline asm
	prmt.b32 %r5103, %r5104, %r5105, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r5103;
	ld.local.u32 	%r5108, [%rd2+8];
	ld.local.u32 	%r5109, [%rd2+4];
	// inline asm
	prmt.b32 %r5107, %r5108, %r5109, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r5107;
	ld.local.u32 	%r5112, [%rd2+4];
	ld.local.u32 	%r5113, [%rd2];
	// inline asm
	prmt.b32 %r5111, %r5112, %r5113, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r5111;
	ld.local.u32 	%r5116, [%rd2];
	ld.local.u32 	%r5117, [%rd1+12];
	// inline asm
	prmt.b32 %r5115, %r5116, %r5117, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r5115;
	ld.local.u32 	%r5120, [%rd1+12];
	ld.local.u32 	%r5121, [%rd1+8];
	// inline asm
	prmt.b32 %r5119, %r5120, %r5121, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r5119;
	ld.local.u32 	%r5124, [%rd1+8];
	ld.local.u32 	%r5125, [%rd1+4];
	// inline asm
	prmt.b32 %r5123, %r5124, %r5125, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r5123;
	ld.local.u32 	%r5128, [%rd1+4];
	ld.local.u32 	%r5129, [%rd1];
	// inline asm
	prmt.b32 %r5127, %r5128, %r5129, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r5127;
	ld.local.u32 	%r5132, [%rd1];
	// inline asm
	prmt.b32 %r5131, %r5132, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r5131;
	st.local.u32 	[%rd1], %r9672;
	mov.u32 	%r9673, %r9672;
	mov.u32 	%r9674, %r9672;
	bra.uni 	BB1_11;

BB1_126:
	setp.eq.s32	%p72, %r1, 17;
	@%p72 bra 	BB1_127;
	bra.uni 	BB1_169;

BB1_127:
	ld.local.u32 	%r7869, [%rd4+8];
	ld.local.u32 	%r7870, [%rd4+4];
	// inline asm
	prmt.b32 %r7868, %r7869, %r7870, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7868;
	ld.local.u32 	%r7873, [%rd4+4];
	ld.local.u32 	%r7874, [%rd4];
	// inline asm
	prmt.b32 %r7872, %r7873, %r7874, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7872;
	ld.local.u32 	%r7877, [%rd4];
	ld.local.u32 	%r7878, [%rd3+12];
	// inline asm
	prmt.b32 %r7876, %r7877, %r7878, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7876;
	ld.local.u32 	%r7881, [%rd3+12];
	ld.local.u32 	%r7882, [%rd3+8];
	// inline asm
	prmt.b32 %r7880, %r7881, %r7882, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7880;
	ld.local.u32 	%r7885, [%rd3+8];
	ld.local.u32 	%r7886, [%rd3+4];
	// inline asm
	prmt.b32 %r7884, %r7885, %r7886, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7884;
	ld.local.u32 	%r7889, [%rd3+4];
	ld.local.u32 	%r7890, [%rd3];
	// inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7888;
	ld.local.u32 	%r7893, [%rd3];
	ld.local.u32 	%r7894, [%rd2+12];
	// inline asm
	prmt.b32 %r7892, %r7893, %r7894, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7892;
	ld.local.u32 	%r7897, [%rd2+12];
	ld.local.u32 	%r7898, [%rd2+8];
	// inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7896;
	ld.local.u32 	%r7901, [%rd2+8];
	ld.local.u32 	%r7902, [%rd2+4];
	// inline asm
	prmt.b32 %r7900, %r7901, %r7902, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7900;
	ld.local.u32 	%r7905, [%rd2+4];
	ld.local.u32 	%r7906, [%rd2];
	// inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7904;
	ld.local.u32 	%r7909, [%rd2];
	ld.local.u32 	%r7910, [%rd1+12];
	// inline asm
	prmt.b32 %r7908, %r7909, %r7910, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7908;
	ld.local.u32 	%r7913, [%rd1+12];
	ld.local.u32 	%r7914, [%rd1+8];
	// inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7912;
	ld.local.u32 	%r7917, [%rd1+8];
	ld.local.u32 	%r7918, [%rd1+4];
	// inline asm
	prmt.b32 %r7916, %r7917, %r7918, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7916;
	ld.local.u32 	%r7921, [%rd1+4];
	ld.local.u32 	%r7922, [%rd1];
	// inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7920;
	ld.local.u32 	%r7925, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7924, %r7925, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7924;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2927, 0;
	st.local.u32 	[%rd1+4], %rd2927;
	st.local.u32 	[%rd1], %rd2927;
	bra.uni 	BB1_170;

BB1_38:
	setp.eq.s32	%p25, %r1, 17;
	@%p25 bra 	BB1_39;
	bra.uni 	BB1_87;

BB1_39:
	ld.local.u32 	%r2533, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9691, %r9672, %r2533, %r2;
	// inline asm
	ld.local.u32 	%r2536, [%rd8+12];
	ld.local.u32 	%r2537, [%rd8+8];
	// inline asm
	prmt.b32 %r9692, %r2536, %r2537, %r2;
	// inline asm
	ld.local.u32 	%r2540, [%rd8+8];
	ld.local.u32 	%r2541, [%rd8+4];
	// inline asm
	prmt.b32 %r9685, %r2540, %r2541, %r2;
	// inline asm
	ld.local.u32 	%r2544, [%rd8+4];
	ld.local.u32 	%r2545, [%rd8];
	// inline asm
	prmt.b32 %r9686, %r2544, %r2545, %r2;
	// inline asm
	ld.local.u32 	%r2548, [%rd8];
	ld.local.u32 	%r2549, [%rd7+12];
	// inline asm
	prmt.b32 %r9687, %r2548, %r2549, %r2;
	// inline asm
	ld.local.u32 	%r2552, [%rd7+12];
	ld.local.u32 	%r2553, [%rd7+8];
	// inline asm
	prmt.b32 %r9688, %r2552, %r2553, %r2;
	// inline asm
	ld.local.u32 	%r2556, [%rd7+8];
	ld.local.u32 	%r2557, [%rd7+4];
	// inline asm
	prmt.b32 %r9681, %r2556, %r2557, %r2;
	// inline asm
	ld.local.u32 	%r2560, [%rd7+4];
	ld.local.u32 	%r2561, [%rd7];
	// inline asm
	prmt.b32 %r9682, %r2560, %r2561, %r2;
	// inline asm
	ld.local.u32 	%r2564, [%rd7];
	ld.local.u32 	%r2565, [%rd6+12];
	// inline asm
	prmt.b32 %r9683, %r2564, %r2565, %r2;
	// inline asm
	ld.local.u32 	%r2568, [%rd6+12];
	ld.local.u32 	%r2569, [%rd6+8];
	// inline asm
	prmt.b32 %r9684, %r2568, %r2569, %r2;
	// inline asm
	ld.local.u32 	%r2572, [%rd6+8];
	ld.local.u32 	%r2573, [%rd6+4];
	// inline asm
	prmt.b32 %r9677, %r2572, %r2573, %r2;
	// inline asm
	ld.local.u32 	%r2576, [%rd6+4];
	ld.local.u32 	%r2577, [%rd6];
	// inline asm
	prmt.b32 %r9678, %r2576, %r2577, %r2;
	// inline asm
	ld.local.u32 	%r2580, [%rd6];
	ld.local.u32 	%r2581, [%rd5+12];
	// inline asm
	prmt.b32 %r9679, %r2580, %r2581, %r2;
	// inline asm
	ld.local.u32 	%r2584, [%rd5+12];
	ld.local.u32 	%r2585, [%rd5+8];
	// inline asm
	prmt.b32 %r9680, %r2584, %r2585, %r2;
	// inline asm
	ld.local.u32 	%r2588, [%rd5+8];
	ld.local.u32 	%r2589, [%rd5+4];
	// inline asm
	prmt.b32 %r9673, %r2588, %r2589, %r2;
	// inline asm
	ld.local.u32 	%r2592, [%rd5+4];
	ld.local.u32 	%r2593, [%rd5];
	// inline asm
	prmt.b32 %r9674, %r2592, %r2593, %r2;
	// inline asm
	ld.local.u32 	%r2596, [%rd5];
	ld.local.u32 	%r2597, [%rd4+12];
	// inline asm
	prmt.b32 %r9675, %r2596, %r2597, %r2;
	// inline asm
	ld.local.u32 	%r2600, [%rd4+12];
	ld.local.u32 	%r2601, [%rd4+8];
	// inline asm
	prmt.b32 %r9676, %r2600, %r2601, %r2;
	// inline asm
	ld.local.u32 	%r2604, [%rd4+8];
	ld.local.u32 	%r2605, [%rd4+4];
	// inline asm
	prmt.b32 %r2603, %r2604, %r2605, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2603;
	ld.local.u32 	%r2608, [%rd4+4];
	ld.local.u32 	%r2609, [%rd4];
	// inline asm
	prmt.b32 %r2607, %r2608, %r2609, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2607;
	ld.local.u32 	%r2612, [%rd4];
	ld.local.u32 	%r2613, [%rd3+12];
	// inline asm
	prmt.b32 %r2611, %r2612, %r2613, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2611;
	ld.local.u32 	%r2616, [%rd3+12];
	ld.local.u32 	%r2617, [%rd3+8];
	// inline asm
	prmt.b32 %r2615, %r2616, %r2617, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2615;
	ld.local.u32 	%r2620, [%rd3+8];
	ld.local.u32 	%r2621, [%rd3+4];
	// inline asm
	prmt.b32 %r2619, %r2620, %r2621, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2619;
	ld.local.u32 	%r2624, [%rd3+4];
	ld.local.u32 	%r2625, [%rd3];
	// inline asm
	prmt.b32 %r2623, %r2624, %r2625, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2623;
	ld.local.u32 	%r2628, [%rd3];
	ld.local.u32 	%r2629, [%rd2+12];
	// inline asm
	prmt.b32 %r2627, %r2628, %r2629, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2627;
	ld.local.u32 	%r2632, [%rd2+12];
	ld.local.u32 	%r2633, [%rd2+8];
	// inline asm
	prmt.b32 %r2631, %r2632, %r2633, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2631;
	ld.local.u32 	%r2636, [%rd2+8];
	ld.local.u32 	%r2637, [%rd2+4];
	// inline asm
	prmt.b32 %r2635, %r2636, %r2637, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2635;
	ld.local.u32 	%r2640, [%rd2+4];
	ld.local.u32 	%r2641, [%rd2];
	// inline asm
	prmt.b32 %r2639, %r2640, %r2641, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2639;
	ld.local.u32 	%r2644, [%rd2];
	ld.local.u32 	%r2645, [%rd1+12];
	// inline asm
	prmt.b32 %r2643, %r2644, %r2645, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2643;
	ld.local.u32 	%r2648, [%rd1+12];
	ld.local.u32 	%r2649, [%rd1+8];
	// inline asm
	prmt.b32 %r2647, %r2648, %r2649, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2647;
	ld.local.u32 	%r2652, [%rd1+8];
	ld.local.u32 	%r2653, [%rd1+4];
	// inline asm
	prmt.b32 %r2651, %r2652, %r2653, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2651;
	ld.local.u32 	%r2656, [%rd1+4];
	ld.local.u32 	%r2657, [%rd1];
	// inline asm
	prmt.b32 %r2655, %r2656, %r2657, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2655;
	ld.local.u32 	%r2660, [%rd1];
	// inline asm
	prmt.b32 %r2659, %r2660, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2659;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd33, 0;
	st.local.u32 	[%rd1+4], %rd33;
	st.local.u32 	[%rd1], %rd33;
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	bra.uni 	BB1_82;

BB1_110:
	setp.eq.s32	%p84, %r1, 9;
	@%p84 bra 	BB1_111;
	bra.uni 	BB1_169;

BB1_111:
	ld.local.u32 	%r8469, [%rd6+8];
	ld.local.u32 	%r8470, [%rd6+4];
	// inline asm
	prmt.b32 %r8468, %r8469, %r8470, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8468;
	ld.local.u32 	%r8473, [%rd6+4];
	ld.local.u32 	%r8474, [%rd6];
	// inline asm
	prmt.b32 %r8472, %r8473, %r8474, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8472;
	ld.local.u32 	%r8477, [%rd6];
	ld.local.u32 	%r8478, [%rd5+12];
	// inline asm
	prmt.b32 %r8476, %r8477, %r8478, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8476;
	ld.local.u32 	%r8481, [%rd5+12];
	ld.local.u32 	%r8482, [%rd5+8];
	// inline asm
	prmt.b32 %r8480, %r8481, %r8482, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8480;
	ld.local.u32 	%r8485, [%rd5+8];
	ld.local.u32 	%r8486, [%rd5+4];
	// inline asm
	prmt.b32 %r8484, %r8485, %r8486, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8484;
	ld.local.u32 	%r8489, [%rd5+4];
	ld.local.u32 	%r8490, [%rd5];
	// inline asm
	prmt.b32 %r8488, %r8489, %r8490, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8488;
	ld.local.u32 	%r8493, [%rd5];
	ld.local.u32 	%r8494, [%rd4+12];
	// inline asm
	prmt.b32 %r8492, %r8493, %r8494, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8492;
	ld.local.u32 	%r8497, [%rd4+12];
	ld.local.u32 	%r8498, [%rd4+8];
	// inline asm
	prmt.b32 %r8496, %r8497, %r8498, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8496;
	ld.local.u32 	%r8501, [%rd4+8];
	ld.local.u32 	%r8502, [%rd4+4];
	// inline asm
	prmt.b32 %r8500, %r8501, %r8502, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8500;
	ld.local.u32 	%r8505, [%rd4+4];
	ld.local.u32 	%r8506, [%rd4];
	// inline asm
	prmt.b32 %r8504, %r8505, %r8506, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8504;
	ld.local.u32 	%r8509, [%rd4];
	ld.local.u32 	%r8510, [%rd3+12];
	// inline asm
	prmt.b32 %r8508, %r8509, %r8510, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8508;
	ld.local.u32 	%r8513, [%rd3+12];
	ld.local.u32 	%r8514, [%rd3+8];
	// inline asm
	prmt.b32 %r8512, %r8513, %r8514, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8512;
	ld.local.u32 	%r8517, [%rd3+8];
	ld.local.u32 	%r8518, [%rd3+4];
	// inline asm
	prmt.b32 %r8516, %r8517, %r8518, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8516;
	ld.local.u32 	%r8521, [%rd3+4];
	ld.local.u32 	%r8522, [%rd3];
	// inline asm
	prmt.b32 %r8520, %r8521, %r8522, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8520;
	ld.local.u32 	%r8525, [%rd3];
	ld.local.u32 	%r8526, [%rd2+12];
	// inline asm
	prmt.b32 %r8524, %r8525, %r8526, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8524;
	ld.local.u32 	%r8529, [%rd2+12];
	ld.local.u32 	%r8530, [%rd2+8];
	// inline asm
	prmt.b32 %r8528, %r8529, %r8530, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8528;
	ld.local.u32 	%r8533, [%rd2+8];
	ld.local.u32 	%r8534, [%rd2+4];
	// inline asm
	prmt.b32 %r8532, %r8533, %r8534, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8532;
	ld.local.u32 	%r8537, [%rd2+4];
	ld.local.u32 	%r8538, [%rd2];
	// inline asm
	prmt.b32 %r8536, %r8537, %r8538, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8536;
	ld.local.u32 	%r8541, [%rd2];
	ld.local.u32 	%r8542, [%rd1+12];
	// inline asm
	prmt.b32 %r8540, %r8541, %r8542, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8540;
	ld.local.u32 	%r8545, [%rd1+12];
	ld.local.u32 	%r8546, [%rd1+8];
	// inline asm
	prmt.b32 %r8544, %r8545, %r8546, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8544;
	ld.local.u32 	%r8549, [%rd1+8];
	ld.local.u32 	%r8550, [%rd1+4];
	// inline asm
	prmt.b32 %r8548, %r8549, %r8550, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8548;
	ld.local.u32 	%r8553, [%rd1+4];
	ld.local.u32 	%r8554, [%rd1];
	// inline asm
	prmt.b32 %r8552, %r8553, %r8554, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8552;
	ld.local.u32 	%r8557, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8556, %r8557, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8556;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2935, 0;
	st.local.u32 	[%rd1+4], %rd2935;
	st.local.u32 	[%rd1], %rd2935;
	bra.uni 	BB1_170;

BB1_22:
	setp.eq.s32	%p37, %r1, 9;
	@%p37 bra 	BB1_23;
	bra.uni 	BB1_87;

BB1_23:
	ld.local.u32 	%r3737, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9683, %r9672, %r3737, %r2;
	// inline asm
	ld.local.u32 	%r3740, [%rd8+12];
	ld.local.u32 	%r3741, [%rd8+8];
	// inline asm
	prmt.b32 %r9684, %r3740, %r3741, %r2;
	// inline asm
	ld.local.u32 	%r3744, [%rd8+8];
	ld.local.u32 	%r3745, [%rd8+4];
	// inline asm
	prmt.b32 %r9677, %r3744, %r3745, %r2;
	// inline asm
	ld.local.u32 	%r3748, [%rd8+4];
	ld.local.u32 	%r3749, [%rd8];
	// inline asm
	prmt.b32 %r9678, %r3748, %r3749, %r2;
	// inline asm
	ld.local.u32 	%r3752, [%rd8];
	ld.local.u32 	%r3753, [%rd7+12];
	// inline asm
	prmt.b32 %r9679, %r3752, %r3753, %r2;
	// inline asm
	ld.local.u32 	%r3756, [%rd7+12];
	ld.local.u32 	%r3757, [%rd7+8];
	// inline asm
	prmt.b32 %r9680, %r3756, %r3757, %r2;
	// inline asm
	ld.local.u32 	%r3760, [%rd7+8];
	ld.local.u32 	%r3761, [%rd7+4];
	// inline asm
	prmt.b32 %r9673, %r3760, %r3761, %r2;
	// inline asm
	ld.local.u32 	%r3764, [%rd7+4];
	ld.local.u32 	%r3765, [%rd7];
	// inline asm
	prmt.b32 %r9674, %r3764, %r3765, %r2;
	// inline asm
	ld.local.u32 	%r3768, [%rd7];
	ld.local.u32 	%r3769, [%rd6+12];
	// inline asm
	prmt.b32 %r9675, %r3768, %r3769, %r2;
	// inline asm
	ld.local.u32 	%r3772, [%rd6+12];
	ld.local.u32 	%r3773, [%rd6+8];
	// inline asm
	prmt.b32 %r9676, %r3772, %r3773, %r2;
	// inline asm
	ld.local.u32 	%r3776, [%rd6+8];
	ld.local.u32 	%r3777, [%rd6+4];
	// inline asm
	prmt.b32 %r3775, %r3776, %r3777, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3775;
	ld.local.u32 	%r3780, [%rd6+4];
	ld.local.u32 	%r3781, [%rd6];
	// inline asm
	prmt.b32 %r3779, %r3780, %r3781, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3779;
	ld.local.u32 	%r3784, [%rd6];
	ld.local.u32 	%r3785, [%rd5+12];
	// inline asm
	prmt.b32 %r3783, %r3784, %r3785, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3783;
	ld.local.u32 	%r3788, [%rd5+12];
	ld.local.u32 	%r3789, [%rd5+8];
	// inline asm
	prmt.b32 %r3787, %r3788, %r3789, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3787;
	ld.local.u32 	%r3792, [%rd5+8];
	ld.local.u32 	%r3793, [%rd5+4];
	// inline asm
	prmt.b32 %r3791, %r3792, %r3793, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3791;
	ld.local.u32 	%r3796, [%rd5+4];
	ld.local.u32 	%r3797, [%rd5];
	// inline asm
	prmt.b32 %r3795, %r3796, %r3797, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3795;
	ld.local.u32 	%r3800, [%rd5];
	ld.local.u32 	%r3801, [%rd4+12];
	// inline asm
	prmt.b32 %r3799, %r3800, %r3801, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3799;
	ld.local.u32 	%r3804, [%rd4+12];
	ld.local.u32 	%r3805, [%rd4+8];
	// inline asm
	prmt.b32 %r3803, %r3804, %r3805, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3803;
	ld.local.u32 	%r3808, [%rd4+8];
	ld.local.u32 	%r3809, [%rd4+4];
	// inline asm
	prmt.b32 %r3807, %r3808, %r3809, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3807;
	ld.local.u32 	%r3812, [%rd4+4];
	ld.local.u32 	%r3813, [%rd4];
	// inline asm
	prmt.b32 %r3811, %r3812, %r3813, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3811;
	ld.local.u32 	%r3816, [%rd4];
	ld.local.u32 	%r3817, [%rd3+12];
	// inline asm
	prmt.b32 %r3815, %r3816, %r3817, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3815;
	ld.local.u32 	%r3820, [%rd3+12];
	ld.local.u32 	%r3821, [%rd3+8];
	// inline asm
	prmt.b32 %r3819, %r3820, %r3821, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3819;
	ld.local.u32 	%r3824, [%rd3+8];
	ld.local.u32 	%r3825, [%rd3+4];
	// inline asm
	prmt.b32 %r3823, %r3824, %r3825, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3823;
	ld.local.u32 	%r3828, [%rd3+4];
	ld.local.u32 	%r3829, [%rd3];
	// inline asm
	prmt.b32 %r3827, %r3828, %r3829, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3827;
	ld.local.u32 	%r3832, [%rd3];
	ld.local.u32 	%r3833, [%rd2+12];
	// inline asm
	prmt.b32 %r3831, %r3832, %r3833, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3831;
	ld.local.u32 	%r3836, [%rd2+12];
	ld.local.u32 	%r3837, [%rd2+8];
	// inline asm
	prmt.b32 %r3835, %r3836, %r3837, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3835;
	ld.local.u32 	%r3840, [%rd2+8];
	ld.local.u32 	%r3841, [%rd2+4];
	// inline asm
	prmt.b32 %r3839, %r3840, %r3841, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3839;
	ld.local.u32 	%r3844, [%rd2+4];
	ld.local.u32 	%r3845, [%rd2];
	// inline asm
	prmt.b32 %r3843, %r3844, %r3845, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3843;
	ld.local.u32 	%r3848, [%rd2];
	ld.local.u32 	%r3849, [%rd1+12];
	// inline asm
	prmt.b32 %r3847, %r3848, %r3849, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3847;
	ld.local.u32 	%r3852, [%rd1+12];
	ld.local.u32 	%r3853, [%rd1+8];
	// inline asm
	prmt.b32 %r3851, %r3852, %r3853, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3851;
	ld.local.u32 	%r3856, [%rd1+8];
	ld.local.u32 	%r3857, [%rd1+4];
	// inline asm
	prmt.b32 %r3855, %r3856, %r3857, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3855;
	ld.local.u32 	%r3860, [%rd1+4];
	ld.local.u32 	%r3861, [%rd1];
	// inline asm
	prmt.b32 %r3859, %r3860, %r3861, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3859;
	ld.local.u32 	%r3864, [%rd1];
	// inline asm
	prmt.b32 %r3863, %r3864, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r3863;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd41, 0;
	st.local.u32 	[%rd1+4], %rd41;
	st.local.u32 	[%rd1], %rd41;
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	bra.uni 	BB1_80;

BB1_141:
	setp.eq.s32	%p61, %r1, 25;
	@%p61 bra 	BB1_142;
	bra.uni 	BB1_169;

BB1_142:
	ld.local.u32 	%r7525, [%rd2+8];
	ld.local.u32 	%r7526, [%rd2+4];
	// inline asm
	prmt.b32 %r7524, %r7525, %r7526, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7524;
	ld.local.u32 	%r7529, [%rd2+4];
	ld.local.u32 	%r7530, [%rd2];
	// inline asm
	prmt.b32 %r7528, %r7529, %r7530, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7528;
	ld.local.u32 	%r7533, [%rd2];
	ld.local.u32 	%r7534, [%rd1+12];
	// inline asm
	prmt.b32 %r7532, %r7533, %r7534, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7532;
	ld.local.u32 	%r7537, [%rd1+12];
	ld.local.u32 	%r7538, [%rd1+8];
	// inline asm
	prmt.b32 %r7536, %r7537, %r7538, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7536;
	ld.local.u32 	%r7541, [%rd1+8];
	ld.local.u32 	%r7542, [%rd1+4];
	// inline asm
	prmt.b32 %r7540, %r7541, %r7542, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7540;
	ld.local.u32 	%r7545, [%rd1+4];
	ld.local.u32 	%r7546, [%rd1];
	// inline asm
	prmt.b32 %r7544, %r7545, %r7546, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7544;
	ld.local.u32 	%r7549, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7548, %r7549, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7548;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2919, 0;
	st.local.u32 	[%rd1+4], %rd2919;
	st.local.u32 	[%rd1], %rd2919;
	bra.uni 	BB1_170;

BB1_53:
	setp.eq.s32	%p14, %r1, 25;
	@%p14 bra 	BB1_54;
	bra.uni 	BB1_87;

BB1_54:
	ld.local.u32 	%r1393, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9699, %r9672, %r1393, %r2;
	// inline asm
	ld.local.u32 	%r1396, [%rd8+12];
	ld.local.u32 	%r1397, [%rd8+8];
	// inline asm
	prmt.b32 %r9700, %r1396, %r1397, %r2;
	// inline asm
	ld.local.u32 	%r1400, [%rd8+8];
	ld.local.u32 	%r1401, [%rd8+4];
	// inline asm
	prmt.b32 %r9693, %r1400, %r1401, %r2;
	// inline asm
	ld.local.u32 	%r1404, [%rd8+4];
	ld.local.u32 	%r1405, [%rd8];
	// inline asm
	prmt.b32 %r9694, %r1404, %r1405, %r2;
	// inline asm
	ld.local.u32 	%r1408, [%rd8];
	ld.local.u32 	%r1409, [%rd7+12];
	// inline asm
	prmt.b32 %r9695, %r1408, %r1409, %r2;
	// inline asm
	ld.local.u32 	%r1412, [%rd7+12];
	ld.local.u32 	%r1413, [%rd7+8];
	// inline asm
	prmt.b32 %r9696, %r1412, %r1413, %r2;
	// inline asm
	ld.local.u32 	%r1416, [%rd7+8];
	ld.local.u32 	%r1417, [%rd7+4];
	// inline asm
	prmt.b32 %r9689, %r1416, %r1417, %r2;
	// inline asm
	ld.local.u32 	%r1420, [%rd7+4];
	ld.local.u32 	%r1421, [%rd7];
	// inline asm
	prmt.b32 %r9690, %r1420, %r1421, %r2;
	// inline asm
	ld.local.u32 	%r1424, [%rd7];
	ld.local.u32 	%r1425, [%rd6+12];
	// inline asm
	prmt.b32 %r9691, %r1424, %r1425, %r2;
	// inline asm
	ld.local.u32 	%r1428, [%rd6+12];
	ld.local.u32 	%r1429, [%rd6+8];
	// inline asm
	prmt.b32 %r9692, %r1428, %r1429, %r2;
	// inline asm
	ld.local.u32 	%r1432, [%rd6+8];
	ld.local.u32 	%r1433, [%rd6+4];
	// inline asm
	prmt.b32 %r9685, %r1432, %r1433, %r2;
	// inline asm
	ld.local.u32 	%r1436, [%rd6+4];
	ld.local.u32 	%r1437, [%rd6];
	// inline asm
	prmt.b32 %r9686, %r1436, %r1437, %r2;
	// inline asm
	ld.local.u32 	%r1440, [%rd6];
	ld.local.u32 	%r1441, [%rd5+12];
	// inline asm
	prmt.b32 %r9687, %r1440, %r1441, %r2;
	// inline asm
	ld.local.u32 	%r1444, [%rd5+12];
	ld.local.u32 	%r1445, [%rd5+8];
	// inline asm
	prmt.b32 %r9688, %r1444, %r1445, %r2;
	// inline asm
	ld.local.u32 	%r1448, [%rd5+8];
	ld.local.u32 	%r1449, [%rd5+4];
	// inline asm
	prmt.b32 %r9681, %r1448, %r1449, %r2;
	// inline asm
	ld.local.u32 	%r1452, [%rd5+4];
	ld.local.u32 	%r1453, [%rd5];
	// inline asm
	prmt.b32 %r9682, %r1452, %r1453, %r2;
	// inline asm
	ld.local.u32 	%r1456, [%rd5];
	ld.local.u32 	%r1457, [%rd4+12];
	// inline asm
	prmt.b32 %r9683, %r1456, %r1457, %r2;
	// inline asm
	ld.local.u32 	%r1460, [%rd4+12];
	ld.local.u32 	%r1461, [%rd4+8];
	// inline asm
	prmt.b32 %r9684, %r1460, %r1461, %r2;
	// inline asm
	ld.local.u32 	%r1464, [%rd4+8];
	ld.local.u32 	%r1465, [%rd4+4];
	// inline asm
	prmt.b32 %r9677, %r1464, %r1465, %r2;
	// inline asm
	ld.local.u32 	%r1468, [%rd4+4];
	ld.local.u32 	%r1469, [%rd4];
	// inline asm
	prmt.b32 %r9678, %r1468, %r1469, %r2;
	// inline asm
	ld.local.u32 	%r1472, [%rd4];
	ld.local.u32 	%r1473, [%rd3+12];
	// inline asm
	prmt.b32 %r9679, %r1472, %r1473, %r2;
	// inline asm
	ld.local.u32 	%r1476, [%rd3+12];
	ld.local.u32 	%r1477, [%rd3+8];
	// inline asm
	prmt.b32 %r9680, %r1476, %r1477, %r2;
	// inline asm
	ld.local.u32 	%r1480, [%rd3+8];
	ld.local.u32 	%r1481, [%rd3+4];
	// inline asm
	prmt.b32 %r9673, %r1480, %r1481, %r2;
	// inline asm
	ld.local.u32 	%r1484, [%rd3+4];
	ld.local.u32 	%r1485, [%rd3];
	// inline asm
	prmt.b32 %r9674, %r1484, %r1485, %r2;
	// inline asm
	ld.local.u32 	%r1488, [%rd3];
	ld.local.u32 	%r1489, [%rd2+12];
	// inline asm
	prmt.b32 %r9675, %r1488, %r1489, %r2;
	// inline asm
	ld.local.u32 	%r1492, [%rd2+12];
	ld.local.u32 	%r1493, [%rd2+8];
	// inline asm
	prmt.b32 %r9676, %r1492, %r1493, %r2;
	// inline asm
	ld.local.u32 	%r1496, [%rd2+8];
	ld.local.u32 	%r1497, [%rd2+4];
	// inline asm
	prmt.b32 %r1495, %r1496, %r1497, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1495;
	ld.local.u32 	%r1500, [%rd2+4];
	ld.local.u32 	%r1501, [%rd2];
	// inline asm
	prmt.b32 %r1499, %r1500, %r1501, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1499;
	ld.local.u32 	%r1504, [%rd2];
	ld.local.u32 	%r1505, [%rd1+12];
	// inline asm
	prmt.b32 %r1503, %r1504, %r1505, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1503;
	ld.local.u32 	%r1508, [%rd1+12];
	ld.local.u32 	%r1509, [%rd1+8];
	// inline asm
	prmt.b32 %r1507, %r1508, %r1509, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1507;
	ld.local.u32 	%r1512, [%rd1+8];
	ld.local.u32 	%r1513, [%rd1+4];
	// inline asm
	prmt.b32 %r1511, %r1512, %r1513, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1511;
	ld.local.u32 	%r1516, [%rd1+4];
	ld.local.u32 	%r1517, [%rd1];
	// inline asm
	prmt.b32 %r1515, %r1516, %r1517, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1515;
	ld.local.u32 	%r1520, [%rd1];
	// inline asm
	prmt.b32 %r1519, %r1520, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1519;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd25, 0;
	st.local.u32 	[%rd1+4], %rd25;
	st.local.u32 	[%rd1], %rd25;
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	bra.uni 	BB1_84;

BB1_102:
	setp.eq.s32	%p90, %r1, 5;
	@%p90 bra 	BB1_103;
	bra.uni 	BB1_169;

BB1_103:
	ld.local.u32 	%r8865, [%rd7+8];
	ld.local.u32 	%r8866, [%rd7+4];
	// inline asm
	prmt.b32 %r8864, %r8865, %r8866, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8864;
	ld.local.u32 	%r8869, [%rd7+4];
	ld.local.u32 	%r8870, [%rd7];
	// inline asm
	prmt.b32 %r8868, %r8869, %r8870, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8868;
	ld.local.u32 	%r8873, [%rd7];
	ld.local.u32 	%r8874, [%rd6+12];
	// inline asm
	prmt.b32 %r8872, %r8873, %r8874, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8872;
	ld.local.u32 	%r8877, [%rd6+12];
	ld.local.u32 	%r8878, [%rd6+8];
	// inline asm
	prmt.b32 %r8876, %r8877, %r8878, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8876;
	ld.local.u32 	%r8881, [%rd6+8];
	ld.local.u32 	%r8882, [%rd6+4];
	// inline asm
	prmt.b32 %r8880, %r8881, %r8882, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8880;
	ld.local.u32 	%r8885, [%rd6+4];
	ld.local.u32 	%r8886, [%rd6];
	// inline asm
	prmt.b32 %r8884, %r8885, %r8886, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8884;
	ld.local.u32 	%r8889, [%rd6];
	ld.local.u32 	%r8890, [%rd5+12];
	// inline asm
	prmt.b32 %r8888, %r8889, %r8890, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8888;
	ld.local.u32 	%r8893, [%rd5+12];
	ld.local.u32 	%r8894, [%rd5+8];
	// inline asm
	prmt.b32 %r8892, %r8893, %r8894, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8892;
	ld.local.u32 	%r8897, [%rd5+8];
	ld.local.u32 	%r8898, [%rd5+4];
	// inline asm
	prmt.b32 %r8896, %r8897, %r8898, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8896;
	ld.local.u32 	%r8901, [%rd5+4];
	ld.local.u32 	%r8902, [%rd5];
	// inline asm
	prmt.b32 %r8900, %r8901, %r8902, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8900;
	ld.local.u32 	%r8905, [%rd5];
	ld.local.u32 	%r8906, [%rd4+12];
	// inline asm
	prmt.b32 %r8904, %r8905, %r8906, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8904;
	ld.local.u32 	%r8909, [%rd4+12];
	ld.local.u32 	%r8910, [%rd4+8];
	// inline asm
	prmt.b32 %r8908, %r8909, %r8910, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8908;
	ld.local.u32 	%r8913, [%rd4+8];
	ld.local.u32 	%r8914, [%rd4+4];
	// inline asm
	prmt.b32 %r8912, %r8913, %r8914, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8912;
	ld.local.u32 	%r8917, [%rd4+4];
	ld.local.u32 	%r8918, [%rd4];
	// inline asm
	prmt.b32 %r8916, %r8917, %r8918, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8916;
	ld.local.u32 	%r8921, [%rd4];
	ld.local.u32 	%r8922, [%rd3+12];
	// inline asm
	prmt.b32 %r8920, %r8921, %r8922, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8920;
	ld.local.u32 	%r8925, [%rd3+12];
	ld.local.u32 	%r8926, [%rd3+8];
	// inline asm
	prmt.b32 %r8924, %r8925, %r8926, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8924;
	ld.local.u32 	%r8929, [%rd3+8];
	ld.local.u32 	%r8930, [%rd3+4];
	// inline asm
	prmt.b32 %r8928, %r8929, %r8930, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8928;
	ld.local.u32 	%r8933, [%rd3+4];
	ld.local.u32 	%r8934, [%rd3];
	// inline asm
	prmt.b32 %r8932, %r8933, %r8934, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8932;
	ld.local.u32 	%r8937, [%rd3];
	ld.local.u32 	%r8938, [%rd2+12];
	// inline asm
	prmt.b32 %r8936, %r8937, %r8938, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8936;
	ld.local.u32 	%r8941, [%rd2+12];
	ld.local.u32 	%r8942, [%rd2+8];
	// inline asm
	prmt.b32 %r8940, %r8941, %r8942, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8940;
	ld.local.u32 	%r8945, [%rd2+8];
	ld.local.u32 	%r8946, [%rd2+4];
	// inline asm
	prmt.b32 %r8944, %r8945, %r8946, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8944;
	ld.local.u32 	%r8949, [%rd2+4];
	ld.local.u32 	%r8950, [%rd2];
	// inline asm
	prmt.b32 %r8948, %r8949, %r8950, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8948;
	ld.local.u32 	%r8953, [%rd2];
	ld.local.u32 	%r8954, [%rd1+12];
	// inline asm
	prmt.b32 %r8952, %r8953, %r8954, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8952;
	ld.local.u32 	%r8957, [%rd1+12];
	ld.local.u32 	%r8958, [%rd1+8];
	// inline asm
	prmt.b32 %r8956, %r8957, %r8958, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8956;
	ld.local.u32 	%r8961, [%rd1+8];
	ld.local.u32 	%r8962, [%rd1+4];
	// inline asm
	prmt.b32 %r8960, %r8961, %r8962, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8960;
	ld.local.u32 	%r8965, [%rd1+4];
	ld.local.u32 	%r8966, [%rd1];
	// inline asm
	prmt.b32 %r8964, %r8965, %r8966, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8964;
	ld.local.u32 	%r8969, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8968, %r8969, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8968;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2939, 0;
	st.local.u32 	[%rd1+4], %rd2939;
	st.local.u32 	[%rd1], %rd2939;
	bra.uni 	BB1_170;

BB1_14:
	setp.eq.s32	%p43, %r1, 5;
	@%p43 bra 	BB1_15;
	bra.uni 	BB1_87;

BB1_15:
	ld.local.u32 	%r4363, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9679, %r9672, %r4363, %r2;
	// inline asm
	ld.local.u32 	%r4366, [%rd8+12];
	ld.local.u32 	%r4367, [%rd8+8];
	// inline asm
	prmt.b32 %r9680, %r4366, %r4367, %r2;
	// inline asm
	ld.local.u32 	%r4370, [%rd8+8];
	ld.local.u32 	%r4371, [%rd8+4];
	// inline asm
	prmt.b32 %r9673, %r4370, %r4371, %r2;
	// inline asm
	ld.local.u32 	%r4374, [%rd8+4];
	ld.local.u32 	%r4375, [%rd8];
	// inline asm
	prmt.b32 %r9674, %r4374, %r4375, %r2;
	// inline asm
	ld.local.u32 	%r4378, [%rd8];
	ld.local.u32 	%r4379, [%rd7+12];
	// inline asm
	prmt.b32 %r9675, %r4378, %r4379, %r2;
	// inline asm
	ld.local.u32 	%r4382, [%rd7+12];
	ld.local.u32 	%r4383, [%rd7+8];
	// inline asm
	prmt.b32 %r9676, %r4382, %r4383, %r2;
	// inline asm
	ld.local.u32 	%r4386, [%rd7+8];
	ld.local.u32 	%r4387, [%rd7+4];
	// inline asm
	prmt.b32 %r4385, %r4386, %r4387, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4385;
	ld.local.u32 	%r4390, [%rd7+4];
	ld.local.u32 	%r4391, [%rd7];
	// inline asm
	prmt.b32 %r4389, %r4390, %r4391, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4389;
	ld.local.u32 	%r4394, [%rd7];
	ld.local.u32 	%r4395, [%rd6+12];
	// inline asm
	prmt.b32 %r4393, %r4394, %r4395, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4393;
	ld.local.u32 	%r4398, [%rd6+12];
	ld.local.u32 	%r4399, [%rd6+8];
	// inline asm
	prmt.b32 %r4397, %r4398, %r4399, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4397;
	ld.local.u32 	%r4402, [%rd6+8];
	ld.local.u32 	%r4403, [%rd6+4];
	// inline asm
	prmt.b32 %r4401, %r4402, %r4403, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4401;
	ld.local.u32 	%r4406, [%rd6+4];
	ld.local.u32 	%r4407, [%rd6];
	// inline asm
	prmt.b32 %r4405, %r4406, %r4407, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4405;
	ld.local.u32 	%r4410, [%rd6];
	ld.local.u32 	%r4411, [%rd5+12];
	// inline asm
	prmt.b32 %r4409, %r4410, %r4411, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4409;
	ld.local.u32 	%r4414, [%rd5+12];
	ld.local.u32 	%r4415, [%rd5+8];
	// inline asm
	prmt.b32 %r4413, %r4414, %r4415, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4413;
	ld.local.u32 	%r4418, [%rd5+8];
	ld.local.u32 	%r4419, [%rd5+4];
	// inline asm
	prmt.b32 %r4417, %r4418, %r4419, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4417;
	ld.local.u32 	%r4422, [%rd5+4];
	ld.local.u32 	%r4423, [%rd5];
	// inline asm
	prmt.b32 %r4421, %r4422, %r4423, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4421;
	ld.local.u32 	%r4426, [%rd5];
	ld.local.u32 	%r4427, [%rd4+12];
	// inline asm
	prmt.b32 %r4425, %r4426, %r4427, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4425;
	ld.local.u32 	%r4430, [%rd4+12];
	ld.local.u32 	%r4431, [%rd4+8];
	// inline asm
	prmt.b32 %r4429, %r4430, %r4431, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4429;
	ld.local.u32 	%r4434, [%rd4+8];
	ld.local.u32 	%r4435, [%rd4+4];
	// inline asm
	prmt.b32 %r4433, %r4434, %r4435, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4433;
	ld.local.u32 	%r4438, [%rd4+4];
	ld.local.u32 	%r4439, [%rd4];
	// inline asm
	prmt.b32 %r4437, %r4438, %r4439, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4437;
	ld.local.u32 	%r4442, [%rd4];
	ld.local.u32 	%r4443, [%rd3+12];
	// inline asm
	prmt.b32 %r4441, %r4442, %r4443, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4441;
	ld.local.u32 	%r4446, [%rd3+12];
	ld.local.u32 	%r4447, [%rd3+8];
	// inline asm
	prmt.b32 %r4445, %r4446, %r4447, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4445;
	ld.local.u32 	%r4450, [%rd3+8];
	ld.local.u32 	%r4451, [%rd3+4];
	// inline asm
	prmt.b32 %r4449, %r4450, %r4451, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4449;
	ld.local.u32 	%r4454, [%rd3+4];
	ld.local.u32 	%r4455, [%rd3];
	// inline asm
	prmt.b32 %r4453, %r4454, %r4455, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4453;
	ld.local.u32 	%r4458, [%rd3];
	ld.local.u32 	%r4459, [%rd2+12];
	// inline asm
	prmt.b32 %r4457, %r4458, %r4459, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4457;
	ld.local.u32 	%r4462, [%rd2+12];
	ld.local.u32 	%r4463, [%rd2+8];
	// inline asm
	prmt.b32 %r4461, %r4462, %r4463, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4461;
	ld.local.u32 	%r4466, [%rd2+8];
	ld.local.u32 	%r4467, [%rd2+4];
	// inline asm
	prmt.b32 %r4465, %r4466, %r4467, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4465;
	ld.local.u32 	%r4470, [%rd2+4];
	ld.local.u32 	%r4471, [%rd2];
	// inline asm
	prmt.b32 %r4469, %r4470, %r4471, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4469;
	ld.local.u32 	%r4474, [%rd2];
	ld.local.u32 	%r4475, [%rd1+12];
	// inline asm
	prmt.b32 %r4473, %r4474, %r4475, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4473;
	ld.local.u32 	%r4478, [%rd1+12];
	ld.local.u32 	%r4479, [%rd1+8];
	// inline asm
	prmt.b32 %r4477, %r4478, %r4479, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4477;
	ld.local.u32 	%r4482, [%rd1+8];
	ld.local.u32 	%r4483, [%rd1+4];
	// inline asm
	prmt.b32 %r4481, %r4482, %r4483, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4481;
	ld.local.u32 	%r4486, [%rd1+4];
	ld.local.u32 	%r4487, [%rd1];
	// inline asm
	prmt.b32 %r4485, %r4486, %r4487, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4485;
	ld.local.u32 	%r4490, [%rd1];
	// inline asm
	prmt.b32 %r4489, %r4490, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4489;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd45, 0;
	st.local.u32 	[%rd1+4], %rd45;
	st.local.u32 	[%rd1], %rd45;
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	bra.uni 	BB1_79;

BB1_133:
	setp.eq.s32	%p67, %r1, 21;
	@%p67 bra 	BB1_134;
	bra.uni 	BB1_169;

BB1_134:
	ld.local.u32 	%r7665, [%rd3+8];
	ld.local.u32 	%r7666, [%rd3+4];
	// inline asm
	prmt.b32 %r7664, %r7665, %r7666, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7664;
	ld.local.u32 	%r7669, [%rd3+4];
	ld.local.u32 	%r7670, [%rd3];
	// inline asm
	prmt.b32 %r7668, %r7669, %r7670, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7668;
	ld.local.u32 	%r7673, [%rd3];
	ld.local.u32 	%r7674, [%rd2+12];
	// inline asm
	prmt.b32 %r7672, %r7673, %r7674, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7672;
	ld.local.u32 	%r7677, [%rd2+12];
	ld.local.u32 	%r7678, [%rd2+8];
	// inline asm
	prmt.b32 %r7676, %r7677, %r7678, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7676;
	ld.local.u32 	%r7681, [%rd2+8];
	ld.local.u32 	%r7682, [%rd2+4];
	// inline asm
	prmt.b32 %r7680, %r7681, %r7682, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7680;
	ld.local.u32 	%r7685, [%rd2+4];
	ld.local.u32 	%r7686, [%rd2];
	// inline asm
	prmt.b32 %r7684, %r7685, %r7686, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7684;
	ld.local.u32 	%r7689, [%rd2];
	ld.local.u32 	%r7690, [%rd1+12];
	// inline asm
	prmt.b32 %r7688, %r7689, %r7690, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7688;
	ld.local.u32 	%r7693, [%rd1+12];
	ld.local.u32 	%r7694, [%rd1+8];
	// inline asm
	prmt.b32 %r7692, %r7693, %r7694, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7692;
	ld.local.u32 	%r7697, [%rd1+8];
	ld.local.u32 	%r7698, [%rd1+4];
	// inline asm
	prmt.b32 %r7696, %r7697, %r7698, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7696;
	ld.local.u32 	%r7701, [%rd1+4];
	ld.local.u32 	%r7702, [%rd1];
	// inline asm
	prmt.b32 %r7700, %r7701, %r7702, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7700;
	ld.local.u32 	%r7705, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7704, %r7705, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7704;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2923, 0;
	st.local.u32 	[%rd1+4], %rd2923;
	st.local.u32 	[%rd1], %rd2923;
	bra.uni 	BB1_170;

BB1_45:
	setp.eq.s32	%p20, %r1, 21;
	@%p20 bra 	BB1_46;
	bra.uni 	BB1_87;

BB1_46:
	ld.local.u32 	%r1955, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9695, %r9672, %r1955, %r2;
	// inline asm
	ld.local.u32 	%r1958, [%rd8+12];
	ld.local.u32 	%r1959, [%rd8+8];
	// inline asm
	prmt.b32 %r9696, %r1958, %r1959, %r2;
	// inline asm
	ld.local.u32 	%r1962, [%rd8+8];
	ld.local.u32 	%r1963, [%rd8+4];
	// inline asm
	prmt.b32 %r9689, %r1962, %r1963, %r2;
	// inline asm
	ld.local.u32 	%r1966, [%rd8+4];
	ld.local.u32 	%r1967, [%rd8];
	// inline asm
	prmt.b32 %r9690, %r1966, %r1967, %r2;
	// inline asm
	ld.local.u32 	%r1970, [%rd8];
	ld.local.u32 	%r1971, [%rd7+12];
	// inline asm
	prmt.b32 %r9691, %r1970, %r1971, %r2;
	// inline asm
	ld.local.u32 	%r1974, [%rd7+12];
	ld.local.u32 	%r1975, [%rd7+8];
	// inline asm
	prmt.b32 %r9692, %r1974, %r1975, %r2;
	// inline asm
	ld.local.u32 	%r1978, [%rd7+8];
	ld.local.u32 	%r1979, [%rd7+4];
	// inline asm
	prmt.b32 %r9685, %r1978, %r1979, %r2;
	// inline asm
	ld.local.u32 	%r1982, [%rd7+4];
	ld.local.u32 	%r1983, [%rd7];
	// inline asm
	prmt.b32 %r9686, %r1982, %r1983, %r2;
	// inline asm
	ld.local.u32 	%r1986, [%rd7];
	ld.local.u32 	%r1987, [%rd6+12];
	// inline asm
	prmt.b32 %r9687, %r1986, %r1987, %r2;
	// inline asm
	ld.local.u32 	%r1990, [%rd6+12];
	ld.local.u32 	%r1991, [%rd6+8];
	// inline asm
	prmt.b32 %r9688, %r1990, %r1991, %r2;
	// inline asm
	ld.local.u32 	%r1994, [%rd6+8];
	ld.local.u32 	%r1995, [%rd6+4];
	// inline asm
	prmt.b32 %r9681, %r1994, %r1995, %r2;
	// inline asm
	ld.local.u32 	%r1998, [%rd6+4];
	ld.local.u32 	%r1999, [%rd6];
	// inline asm
	prmt.b32 %r9682, %r1998, %r1999, %r2;
	// inline asm
	ld.local.u32 	%r2002, [%rd6];
	ld.local.u32 	%r2003, [%rd5+12];
	// inline asm
	prmt.b32 %r9683, %r2002, %r2003, %r2;
	// inline asm
	ld.local.u32 	%r2006, [%rd5+12];
	ld.local.u32 	%r2007, [%rd5+8];
	// inline asm
	prmt.b32 %r9684, %r2006, %r2007, %r2;
	// inline asm
	ld.local.u32 	%r2010, [%rd5+8];
	ld.local.u32 	%r2011, [%rd5+4];
	// inline asm
	prmt.b32 %r9677, %r2010, %r2011, %r2;
	// inline asm
	ld.local.u32 	%r2014, [%rd5+4];
	ld.local.u32 	%r2015, [%rd5];
	// inline asm
	prmt.b32 %r9678, %r2014, %r2015, %r2;
	// inline asm
	ld.local.u32 	%r2018, [%rd5];
	ld.local.u32 	%r2019, [%rd4+12];
	// inline asm
	prmt.b32 %r9679, %r2018, %r2019, %r2;
	// inline asm
	ld.local.u32 	%r2022, [%rd4+12];
	ld.local.u32 	%r2023, [%rd4+8];
	// inline asm
	prmt.b32 %r9680, %r2022, %r2023, %r2;
	// inline asm
	ld.local.u32 	%r2026, [%rd4+8];
	ld.local.u32 	%r2027, [%rd4+4];
	// inline asm
	prmt.b32 %r9673, %r2026, %r2027, %r2;
	// inline asm
	ld.local.u32 	%r2030, [%rd4+4];
	ld.local.u32 	%r2031, [%rd4];
	// inline asm
	prmt.b32 %r9674, %r2030, %r2031, %r2;
	// inline asm
	ld.local.u32 	%r2034, [%rd4];
	ld.local.u32 	%r2035, [%rd3+12];
	// inline asm
	prmt.b32 %r9675, %r2034, %r2035, %r2;
	// inline asm
	ld.local.u32 	%r2038, [%rd3+12];
	ld.local.u32 	%r2039, [%rd3+8];
	// inline asm
	prmt.b32 %r9676, %r2038, %r2039, %r2;
	// inline asm
	ld.local.u32 	%r2042, [%rd3+8];
	ld.local.u32 	%r2043, [%rd3+4];
	// inline asm
	prmt.b32 %r2041, %r2042, %r2043, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2041;
	ld.local.u32 	%r2046, [%rd3+4];
	ld.local.u32 	%r2047, [%rd3];
	// inline asm
	prmt.b32 %r2045, %r2046, %r2047, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2045;
	ld.local.u32 	%r2050, [%rd3];
	ld.local.u32 	%r2051, [%rd2+12];
	// inline asm
	prmt.b32 %r2049, %r2050, %r2051, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2049;
	ld.local.u32 	%r2054, [%rd2+12];
	ld.local.u32 	%r2055, [%rd2+8];
	// inline asm
	prmt.b32 %r2053, %r2054, %r2055, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2053;
	ld.local.u32 	%r2058, [%rd2+8];
	ld.local.u32 	%r2059, [%rd2+4];
	// inline asm
	prmt.b32 %r2057, %r2058, %r2059, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2057;
	ld.local.u32 	%r2062, [%rd2+4];
	ld.local.u32 	%r2063, [%rd2];
	// inline asm
	prmt.b32 %r2061, %r2062, %r2063, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2061;
	ld.local.u32 	%r2066, [%rd2];
	ld.local.u32 	%r2067, [%rd1+12];
	// inline asm
	prmt.b32 %r2065, %r2066, %r2067, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2065;
	ld.local.u32 	%r2070, [%rd1+12];
	ld.local.u32 	%r2071, [%rd1+8];
	// inline asm
	prmt.b32 %r2069, %r2070, %r2071, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2069;
	ld.local.u32 	%r2074, [%rd1+8];
	ld.local.u32 	%r2075, [%rd1+4];
	// inline asm
	prmt.b32 %r2073, %r2074, %r2075, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2073;
	ld.local.u32 	%r2078, [%rd1+4];
	ld.local.u32 	%r2079, [%rd1];
	// inline asm
	prmt.b32 %r2077, %r2078, %r2079, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2077;
	ld.local.u32 	%r2082, [%rd1];
	// inline asm
	prmt.b32 %r2081, %r2082, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2081;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd29, 0;
	st.local.u32 	[%rd1+4], %rd29;
	st.local.u32 	[%rd1], %rd29;
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	bra.uni 	BB1_83;

BB1_117:
	setp.eq.s32	%p79, %r1, 13;
	@%p79 bra 	BB1_118;
	bra.uni 	BB1_169;

BB1_118:
	ld.local.u32 	%r8137, [%rd5+8];
	ld.local.u32 	%r8138, [%rd5+4];
	// inline asm
	prmt.b32 %r8136, %r8137, %r8138, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8136;
	ld.local.u32 	%r8141, [%rd5+4];
	ld.local.u32 	%r8142, [%rd5];
	// inline asm
	prmt.b32 %r8140, %r8141, %r8142, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8140;
	ld.local.u32 	%r8145, [%rd5];
	ld.local.u32 	%r8146, [%rd4+12];
	// inline asm
	prmt.b32 %r8144, %r8145, %r8146, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8144;
	ld.local.u32 	%r8149, [%rd4+12];
	ld.local.u32 	%r8150, [%rd4+8];
	// inline asm
	prmt.b32 %r8148, %r8149, %r8150, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8148;
	ld.local.u32 	%r8153, [%rd4+8];
	ld.local.u32 	%r8154, [%rd4+4];
	// inline asm
	prmt.b32 %r8152, %r8153, %r8154, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8152;
	ld.local.u32 	%r8157, [%rd4+4];
	ld.local.u32 	%r8158, [%rd4];
	// inline asm
	prmt.b32 %r8156, %r8157, %r8158, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8156;
	ld.local.u32 	%r8161, [%rd4];
	ld.local.u32 	%r8162, [%rd3+12];
	// inline asm
	prmt.b32 %r8160, %r8161, %r8162, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8160;
	ld.local.u32 	%r8165, [%rd3+12];
	ld.local.u32 	%r8166, [%rd3+8];
	// inline asm
	prmt.b32 %r8164, %r8165, %r8166, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8164;
	ld.local.u32 	%r8169, [%rd3+8];
	ld.local.u32 	%r8170, [%rd3+4];
	// inline asm
	prmt.b32 %r8168, %r8169, %r8170, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8168;
	ld.local.u32 	%r8173, [%rd3+4];
	ld.local.u32 	%r8174, [%rd3];
	// inline asm
	prmt.b32 %r8172, %r8173, %r8174, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8172;
	ld.local.u32 	%r8177, [%rd3];
	ld.local.u32 	%r8178, [%rd2+12];
	// inline asm
	prmt.b32 %r8176, %r8177, %r8178, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8176;
	ld.local.u32 	%r8181, [%rd2+12];
	ld.local.u32 	%r8182, [%rd2+8];
	// inline asm
	prmt.b32 %r8180, %r8181, %r8182, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8180;
	ld.local.u32 	%r8185, [%rd2+8];
	ld.local.u32 	%r8186, [%rd2+4];
	// inline asm
	prmt.b32 %r8184, %r8185, %r8186, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8184;
	ld.local.u32 	%r8189, [%rd2+4];
	ld.local.u32 	%r8190, [%rd2];
	// inline asm
	prmt.b32 %r8188, %r8189, %r8190, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8188;
	ld.local.u32 	%r8193, [%rd2];
	ld.local.u32 	%r8194, [%rd1+12];
	// inline asm
	prmt.b32 %r8192, %r8193, %r8194, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8192;
	ld.local.u32 	%r8197, [%rd1+12];
	ld.local.u32 	%r8198, [%rd1+8];
	// inline asm
	prmt.b32 %r8196, %r8197, %r8198, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8196;
	ld.local.u32 	%r8201, [%rd1+8];
	ld.local.u32 	%r8202, [%rd1+4];
	// inline asm
	prmt.b32 %r8200, %r8201, %r8202, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8200;
	ld.local.u32 	%r8205, [%rd1+4];
	ld.local.u32 	%r8206, [%rd1];
	// inline asm
	prmt.b32 %r8204, %r8205, %r8206, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8204;
	ld.local.u32 	%r8209, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8208, %r8209, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8208;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2931, 0;
	st.local.u32 	[%rd1+4], %rd2931;
	st.local.u32 	[%rd1], %rd2931;
	bra.uni 	BB1_170;

BB1_29:
	setp.eq.s32	%p32, %r1, 13;
	@%p32 bra 	BB1_30;
	bra.uni 	BB1_87;

BB1_30:
	ld.local.u32 	%r3127, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9687, %r9672, %r3127, %r2;
	// inline asm
	ld.local.u32 	%r3130, [%rd8+12];
	ld.local.u32 	%r3131, [%rd8+8];
	// inline asm
	prmt.b32 %r9688, %r3130, %r3131, %r2;
	// inline asm
	ld.local.u32 	%r3134, [%rd8+8];
	ld.local.u32 	%r3135, [%rd8+4];
	// inline asm
	prmt.b32 %r9681, %r3134, %r3135, %r2;
	// inline asm
	ld.local.u32 	%r3138, [%rd8+4];
	ld.local.u32 	%r3139, [%rd8];
	// inline asm
	prmt.b32 %r9682, %r3138, %r3139, %r2;
	// inline asm
	ld.local.u32 	%r3142, [%rd8];
	ld.local.u32 	%r3143, [%rd7+12];
	// inline asm
	prmt.b32 %r9683, %r3142, %r3143, %r2;
	// inline asm
	ld.local.u32 	%r3146, [%rd7+12];
	ld.local.u32 	%r3147, [%rd7+8];
	// inline asm
	prmt.b32 %r9684, %r3146, %r3147, %r2;
	// inline asm
	ld.local.u32 	%r3150, [%rd7+8];
	ld.local.u32 	%r3151, [%rd7+4];
	// inline asm
	prmt.b32 %r9677, %r3150, %r3151, %r2;
	// inline asm
	ld.local.u32 	%r3154, [%rd7+4];
	ld.local.u32 	%r3155, [%rd7];
	// inline asm
	prmt.b32 %r9678, %r3154, %r3155, %r2;
	// inline asm
	ld.local.u32 	%r3158, [%rd7];
	ld.local.u32 	%r3159, [%rd6+12];
	// inline asm
	prmt.b32 %r9679, %r3158, %r3159, %r2;
	// inline asm
	ld.local.u32 	%r3162, [%rd6+12];
	ld.local.u32 	%r3163, [%rd6+8];
	// inline asm
	prmt.b32 %r9680, %r3162, %r3163, %r2;
	// inline asm
	ld.local.u32 	%r3166, [%rd6+8];
	ld.local.u32 	%r3167, [%rd6+4];
	// inline asm
	prmt.b32 %r9673, %r3166, %r3167, %r2;
	// inline asm
	ld.local.u32 	%r3170, [%rd6+4];
	ld.local.u32 	%r3171, [%rd6];
	// inline asm
	prmt.b32 %r9674, %r3170, %r3171, %r2;
	// inline asm
	ld.local.u32 	%r3174, [%rd6];
	ld.local.u32 	%r3175, [%rd5+12];
	// inline asm
	prmt.b32 %r9675, %r3174, %r3175, %r2;
	// inline asm
	ld.local.u32 	%r3178, [%rd5+12];
	ld.local.u32 	%r3179, [%rd5+8];
	// inline asm
	prmt.b32 %r9676, %r3178, %r3179, %r2;
	// inline asm
	ld.local.u32 	%r3182, [%rd5+8];
	ld.local.u32 	%r3183, [%rd5+4];
	// inline asm
	prmt.b32 %r3181, %r3182, %r3183, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3181;
	ld.local.u32 	%r3186, [%rd5+4];
	ld.local.u32 	%r3187, [%rd5];
	// inline asm
	prmt.b32 %r3185, %r3186, %r3187, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3185;
	ld.local.u32 	%r3190, [%rd5];
	ld.local.u32 	%r3191, [%rd4+12];
	// inline asm
	prmt.b32 %r3189, %r3190, %r3191, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3189;
	ld.local.u32 	%r3194, [%rd4+12];
	ld.local.u32 	%r3195, [%rd4+8];
	// inline asm
	prmt.b32 %r3193, %r3194, %r3195, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3193;
	ld.local.u32 	%r3198, [%rd4+8];
	ld.local.u32 	%r3199, [%rd4+4];
	// inline asm
	prmt.b32 %r3197, %r3198, %r3199, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3197;
	ld.local.u32 	%r3202, [%rd4+4];
	ld.local.u32 	%r3203, [%rd4];
	// inline asm
	prmt.b32 %r3201, %r3202, %r3203, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3201;
	ld.local.u32 	%r3206, [%rd4];
	ld.local.u32 	%r3207, [%rd3+12];
	// inline asm
	prmt.b32 %r3205, %r3206, %r3207, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3205;
	ld.local.u32 	%r3210, [%rd3+12];
	ld.local.u32 	%r3211, [%rd3+8];
	// inline asm
	prmt.b32 %r3209, %r3210, %r3211, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3209;
	ld.local.u32 	%r3214, [%rd3+8];
	ld.local.u32 	%r3215, [%rd3+4];
	// inline asm
	prmt.b32 %r3213, %r3214, %r3215, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3213;
	ld.local.u32 	%r3218, [%rd3+4];
	ld.local.u32 	%r3219, [%rd3];
	// inline asm
	prmt.b32 %r3217, %r3218, %r3219, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3217;
	ld.local.u32 	%r3222, [%rd3];
	ld.local.u32 	%r3223, [%rd2+12];
	// inline asm
	prmt.b32 %r3221, %r3222, %r3223, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3221;
	ld.local.u32 	%r3226, [%rd2+12];
	ld.local.u32 	%r3227, [%rd2+8];
	// inline asm
	prmt.b32 %r3225, %r3226, %r3227, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3225;
	ld.local.u32 	%r3230, [%rd2+8];
	ld.local.u32 	%r3231, [%rd2+4];
	// inline asm
	prmt.b32 %r3229, %r3230, %r3231, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3229;
	ld.local.u32 	%r3234, [%rd2+4];
	ld.local.u32 	%r3235, [%rd2];
	// inline asm
	prmt.b32 %r3233, %r3234, %r3235, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3233;
	ld.local.u32 	%r3238, [%rd2];
	ld.local.u32 	%r3239, [%rd1+12];
	// inline asm
	prmt.b32 %r3237, %r3238, %r3239, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3237;
	ld.local.u32 	%r3242, [%rd1+12];
	ld.local.u32 	%r3243, [%rd1+8];
	// inline asm
	prmt.b32 %r3241, %r3242, %r3243, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3241;
	ld.local.u32 	%r3246, [%rd1+8];
	ld.local.u32 	%r3247, [%rd1+4];
	// inline asm
	prmt.b32 %r3245, %r3246, %r3247, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3245;
	ld.local.u32 	%r3250, [%rd1+4];
	ld.local.u32 	%r3251, [%rd1];
	// inline asm
	prmt.b32 %r3249, %r3250, %r3251, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3249;
	ld.local.u32 	%r3254, [%rd1];
	// inline asm
	prmt.b32 %r3253, %r3254, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3253;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd37, 0;
	st.local.u32 	[%rd1+4], %rd37;
	st.local.u32 	[%rd1], %rd37;
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	bra.uni 	BB1_81;

BB1_148:
	setp.eq.s32	%p56, %r1, 29;
	@%p56 bra 	BB1_149;
	bra.uni 	BB1_169;

BB1_149:
	ld.local.u32 	%r7449, [%rd1+8];
	ld.local.u32 	%r7450, [%rd1+4];
	// inline asm
	prmt.b32 %r7448, %r7449, %r7450, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7448;
	ld.local.u32 	%r7453, [%rd1+4];
	ld.local.u32 	%r7454, [%rd1];
	// inline asm
	prmt.b32 %r7452, %r7453, %r7454, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7452;
	ld.local.u32 	%r7457, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7456, %r7457, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7456;
	st.local.u32 	[%rd8], %r9705;
	st.local.u32 	[%rd7+12], %r9705;
	st.local.u32 	[%rd7+8], %r9705;
	st.local.u32 	[%rd7+4], %r9705;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2915, 0;
	st.local.u32 	[%rd1+4], %rd2915;
	st.local.u32 	[%rd1], %rd2915;
	bra.uni 	BB1_170;

BB1_60:
	setp.eq.s32	%p9, %r1, 29;
	@%p9 bra 	BB1_61;
	bra.uni 	BB1_87;

BB1_61:
	ld.local.u32 	%r847, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9703, %r9672, %r847, %r2;
	// inline asm
	ld.local.u32 	%r850, [%rd8+12];
	ld.local.u32 	%r851, [%rd8+8];
	// inline asm
	prmt.b32 %r9704, %r850, %r851, %r2;
	// inline asm
	ld.local.u32 	%r854, [%rd8+8];
	ld.local.u32 	%r855, [%rd8+4];
	// inline asm
	prmt.b32 %r9697, %r854, %r855, %r2;
	// inline asm
	ld.local.u32 	%r858, [%rd8+4];
	ld.local.u32 	%r859, [%rd8];
	// inline asm
	prmt.b32 %r9698, %r858, %r859, %r2;
	// inline asm
	ld.local.u32 	%r862, [%rd8];
	ld.local.u32 	%r863, [%rd7+12];
	// inline asm
	prmt.b32 %r9699, %r862, %r863, %r2;
	// inline asm
	ld.local.u32 	%r866, [%rd7+12];
	ld.local.u32 	%r867, [%rd7+8];
	// inline asm
	prmt.b32 %r9700, %r866, %r867, %r2;
	// inline asm
	ld.local.u32 	%r870, [%rd7+8];
	ld.local.u32 	%r871, [%rd7+4];
	// inline asm
	prmt.b32 %r9693, %r870, %r871, %r2;
	// inline asm
	ld.local.u32 	%r874, [%rd7+4];
	ld.local.u32 	%r875, [%rd7];
	// inline asm
	prmt.b32 %r9694, %r874, %r875, %r2;
	// inline asm
	ld.local.u32 	%r878, [%rd7];
	ld.local.u32 	%r879, [%rd6+12];
	// inline asm
	prmt.b32 %r9695, %r878, %r879, %r2;
	// inline asm
	ld.local.u32 	%r882, [%rd6+12];
	ld.local.u32 	%r883, [%rd6+8];
	// inline asm
	prmt.b32 %r9696, %r882, %r883, %r2;
	// inline asm
	ld.local.u32 	%r886, [%rd6+8];
	ld.local.u32 	%r887, [%rd6+4];
	// inline asm
	prmt.b32 %r9689, %r886, %r887, %r2;
	// inline asm
	ld.local.u32 	%r890, [%rd6+4];
	ld.local.u32 	%r891, [%rd6];
	// inline asm
	prmt.b32 %r9690, %r890, %r891, %r2;
	// inline asm
	ld.local.u32 	%r894, [%rd6];
	ld.local.u32 	%r895, [%rd5+12];
	// inline asm
	prmt.b32 %r9691, %r894, %r895, %r2;
	// inline asm
	ld.local.u32 	%r898, [%rd5+12];
	ld.local.u32 	%r899, [%rd5+8];
	// inline asm
	prmt.b32 %r9692, %r898, %r899, %r2;
	// inline asm
	ld.local.u32 	%r902, [%rd5+8];
	ld.local.u32 	%r903, [%rd5+4];
	// inline asm
	prmt.b32 %r9685, %r902, %r903, %r2;
	// inline asm
	ld.local.u32 	%r906, [%rd5+4];
	ld.local.u32 	%r907, [%rd5];
	// inline asm
	prmt.b32 %r9686, %r906, %r907, %r2;
	// inline asm
	ld.local.u32 	%r910, [%rd5];
	ld.local.u32 	%r911, [%rd4+12];
	// inline asm
	prmt.b32 %r9687, %r910, %r911, %r2;
	// inline asm
	ld.local.u32 	%r914, [%rd4+12];
	ld.local.u32 	%r915, [%rd4+8];
	// inline asm
	prmt.b32 %r9688, %r914, %r915, %r2;
	// inline asm
	ld.local.u32 	%r918, [%rd4+8];
	ld.local.u32 	%r919, [%rd4+4];
	// inline asm
	prmt.b32 %r9681, %r918, %r919, %r2;
	// inline asm
	ld.local.u32 	%r922, [%rd4+4];
	ld.local.u32 	%r923, [%rd4];
	// inline asm
	prmt.b32 %r9682, %r922, %r923, %r2;
	// inline asm
	ld.local.u32 	%r926, [%rd4];
	ld.local.u32 	%r927, [%rd3+12];
	// inline asm
	prmt.b32 %r9683, %r926, %r927, %r2;
	// inline asm
	ld.local.u32 	%r930, [%rd3+12];
	ld.local.u32 	%r931, [%rd3+8];
	// inline asm
	prmt.b32 %r9684, %r930, %r931, %r2;
	// inline asm
	ld.local.u32 	%r934, [%rd3+8];
	ld.local.u32 	%r935, [%rd3+4];
	// inline asm
	prmt.b32 %r9677, %r934, %r935, %r2;
	// inline asm
	ld.local.u32 	%r938, [%rd3+4];
	ld.local.u32 	%r939, [%rd3];
	// inline asm
	prmt.b32 %r9678, %r938, %r939, %r2;
	// inline asm
	ld.local.u32 	%r942, [%rd3];
	ld.local.u32 	%r943, [%rd2+12];
	// inline asm
	prmt.b32 %r9679, %r942, %r943, %r2;
	// inline asm
	ld.local.u32 	%r946, [%rd2+12];
	ld.local.u32 	%r947, [%rd2+8];
	// inline asm
	prmt.b32 %r9680, %r946, %r947, %r2;
	// inline asm
	ld.local.u32 	%r950, [%rd2+8];
	ld.local.u32 	%r951, [%rd2+4];
	// inline asm
	prmt.b32 %r9673, %r950, %r951, %r2;
	// inline asm
	ld.local.u32 	%r954, [%rd2+4];
	ld.local.u32 	%r955, [%rd2];
	// inline asm
	prmt.b32 %r9674, %r954, %r955, %r2;
	// inline asm
	ld.local.u32 	%r958, [%rd2];
	ld.local.u32 	%r959, [%rd1+12];
	// inline asm
	prmt.b32 %r9675, %r958, %r959, %r2;
	// inline asm
	ld.local.u32 	%r962, [%rd1+12];
	ld.local.u32 	%r963, [%rd1+8];
	// inline asm
	prmt.b32 %r9676, %r962, %r963, %r2;
	// inline asm
	ld.local.u32 	%r966, [%rd1+8];
	ld.local.u32 	%r967, [%rd1+4];
	// inline asm
	prmt.b32 %r965, %r966, %r967, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r965;
	ld.local.u32 	%r970, [%rd1+4];
	ld.local.u32 	%r971, [%rd1];
	// inline asm
	prmt.b32 %r969, %r970, %r971, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r969;
	ld.local.u32 	%r974, [%rd1];
	// inline asm
	prmt.b32 %r973, %r974, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r973;
	st.local.u32 	[%rd8], %r9672;
	st.local.u32 	[%rd7+12], %r9672;
	st.local.u32 	[%rd7+8], %r9672;
	st.local.u32 	[%rd7+4], %r9672;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd21, 0;
	st.local.u32 	[%rd1+4], %rd21;
	st.local.u32 	[%rd1], %rd21;
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	bra.uni 	BB1_89;

BB1_98:
	setp.eq.s32	%p93, %r1, 3;
	@%p93 bra 	BB1_99;
	bra.uni 	BB1_169;

BB1_99:
	ld.local.u32 	%r9087, [%rd8];
	ld.local.u32 	%r9088, [%rd7+12];
	// inline asm
	prmt.b32 %r9086, %r9087, %r9088, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r9086;
	ld.local.u32 	%r9091, [%rd7+12];
	ld.local.u32 	%r9092, [%rd7+8];
	// inline asm
	prmt.b32 %r9090, %r9091, %r9092, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r9090;
	ld.local.u32 	%r9095, [%rd7+8];
	ld.local.u32 	%r9096, [%rd7+4];
	// inline asm
	prmt.b32 %r9094, %r9095, %r9096, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r9094;
	ld.local.u32 	%r9099, [%rd7+4];
	ld.local.u32 	%r9100, [%rd7];
	// inline asm
	prmt.b32 %r9098, %r9099, %r9100, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r9098;
	ld.local.u32 	%r9103, [%rd7];
	ld.local.u32 	%r9104, [%rd6+12];
	// inline asm
	prmt.b32 %r9102, %r9103, %r9104, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r9102;
	ld.local.u32 	%r9107, [%rd6+12];
	ld.local.u32 	%r9108, [%rd6+8];
	// inline asm
	prmt.b32 %r9106, %r9107, %r9108, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r9106;
	ld.local.u32 	%r9111, [%rd6+8];
	ld.local.u32 	%r9112, [%rd6+4];
	// inline asm
	prmt.b32 %r9110, %r9111, %r9112, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r9110;
	ld.local.u32 	%r9115, [%rd6+4];
	ld.local.u32 	%r9116, [%rd6];
	// inline asm
	prmt.b32 %r9114, %r9115, %r9116, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r9114;
	ld.local.u32 	%r9119, [%rd6];
	ld.local.u32 	%r9120, [%rd5+12];
	// inline asm
	prmt.b32 %r9118, %r9119, %r9120, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r9118;
	ld.local.u32 	%r9123, [%rd5+12];
	ld.local.u32 	%r9124, [%rd5+8];
	// inline asm
	prmt.b32 %r9122, %r9123, %r9124, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r9122;
	ld.local.u32 	%r9127, [%rd5+8];
	ld.local.u32 	%r9128, [%rd5+4];
	// inline asm
	prmt.b32 %r9126, %r9127, %r9128, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r9126;
	ld.local.u32 	%r9131, [%rd5+4];
	ld.local.u32 	%r9132, [%rd5];
	// inline asm
	prmt.b32 %r9130, %r9131, %r9132, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r9130;
	ld.local.u32 	%r9135, [%rd5];
	ld.local.u32 	%r9136, [%rd4+12];
	// inline asm
	prmt.b32 %r9134, %r9135, %r9136, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r9134;
	ld.local.u32 	%r9139, [%rd4+12];
	ld.local.u32 	%r9140, [%rd4+8];
	// inline asm
	prmt.b32 %r9138, %r9139, %r9140, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r9138;
	ld.local.u32 	%r9143, [%rd4+8];
	ld.local.u32 	%r9144, [%rd4+4];
	// inline asm
	prmt.b32 %r9142, %r9143, %r9144, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r9142;
	ld.local.u32 	%r9147, [%rd4+4];
	ld.local.u32 	%r9148, [%rd4];
	// inline asm
	prmt.b32 %r9146, %r9147, %r9148, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r9146;
	ld.local.u32 	%r9151, [%rd4];
	ld.local.u32 	%r9152, [%rd3+12];
	// inline asm
	prmt.b32 %r9150, %r9151, %r9152, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r9150;
	ld.local.u32 	%r9155, [%rd3+12];
	ld.local.u32 	%r9156, [%rd3+8];
	// inline asm
	prmt.b32 %r9154, %r9155, %r9156, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r9154;
	ld.local.u32 	%r9159, [%rd3+8];
	ld.local.u32 	%r9160, [%rd3+4];
	// inline asm
	prmt.b32 %r9158, %r9159, %r9160, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r9158;
	ld.local.u32 	%r9163, [%rd3+4];
	ld.local.u32 	%r9164, [%rd3];
	// inline asm
	prmt.b32 %r9162, %r9163, %r9164, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r9162;
	ld.local.u32 	%r9167, [%rd3];
	ld.local.u32 	%r9168, [%rd2+12];
	// inline asm
	prmt.b32 %r9166, %r9167, %r9168, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r9166;
	ld.local.u32 	%r9171, [%rd2+12];
	ld.local.u32 	%r9172, [%rd2+8];
	// inline asm
	prmt.b32 %r9170, %r9171, %r9172, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r9170;
	ld.local.u32 	%r9175, [%rd2+8];
	ld.local.u32 	%r9176, [%rd2+4];
	// inline asm
	prmt.b32 %r9174, %r9175, %r9176, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r9174;
	ld.local.u32 	%r9179, [%rd2+4];
	ld.local.u32 	%r9180, [%rd2];
	// inline asm
	prmt.b32 %r9178, %r9179, %r9180, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r9178;
	ld.local.u32 	%r9183, [%rd2];
	ld.local.u32 	%r9184, [%rd1+12];
	// inline asm
	prmt.b32 %r9182, %r9183, %r9184, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r9182;
	ld.local.u32 	%r9187, [%rd1+12];
	ld.local.u32 	%r9188, [%rd1+8];
	// inline asm
	prmt.b32 %r9186, %r9187, %r9188, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r9186;
	ld.local.u32 	%r9191, [%rd1+8];
	ld.local.u32 	%r9192, [%rd1+4];
	// inline asm
	prmt.b32 %r9190, %r9191, %r9192, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r9190;
	ld.local.u32 	%r9195, [%rd1+4];
	ld.local.u32 	%r9196, [%rd1];
	// inline asm
	prmt.b32 %r9194, %r9195, %r9196, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r9194;
	ld.local.u32 	%r9199, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9198, %r9199, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r9198;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2941, 0;
	st.local.u32 	[%rd1+4], %rd2941;
	st.local.u32 	[%rd1], %rd2941;
	bra.uni 	BB1_170;

BB1_9:
	setp.eq.s32	%p46, %r1, 3;
	@%p46 bra 	BB1_10;
	bra.uni 	BB1_87;

BB1_10:
	ld.local.u32 	%r4682, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9673, %r9672, %r4682, %r2;
	// inline asm
	ld.local.u32 	%r4685, [%rd8+12];
	ld.local.u32 	%r4686, [%rd8+8];
	// inline asm
	prmt.b32 %r9674, %r4685, %r4686, %r2;
	// inline asm
	ld.local.u32 	%r4689, [%rd8+8];
	ld.local.u32 	%r4690, [%rd8+4];
	// inline asm
	prmt.b32 %r9675, %r4689, %r4690, %r2;
	// inline asm
	ld.local.u32 	%r4693, [%rd8+4];
	ld.local.u32 	%r4694, [%rd8];
	// inline asm
	prmt.b32 %r9676, %r4693, %r4694, %r2;
	// inline asm
	ld.local.u32 	%r4697, [%rd8];
	ld.local.u32 	%r4698, [%rd7+12];
	// inline asm
	prmt.b32 %r4696, %r4697, %r4698, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4696;
	ld.local.u32 	%r4701, [%rd7+12];
	ld.local.u32 	%r4702, [%rd7+8];
	// inline asm
	prmt.b32 %r4700, %r4701, %r4702, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4700;
	ld.local.u32 	%r4705, [%rd7+8];
	ld.local.u32 	%r4706, [%rd7+4];
	// inline asm
	prmt.b32 %r4704, %r4705, %r4706, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4704;
	ld.local.u32 	%r4709, [%rd7+4];
	ld.local.u32 	%r4710, [%rd7];
	// inline asm
	prmt.b32 %r4708, %r4709, %r4710, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4708;
	ld.local.u32 	%r4713, [%rd7];
	ld.local.u32 	%r4714, [%rd6+12];
	// inline asm
	prmt.b32 %r4712, %r4713, %r4714, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4712;
	ld.local.u32 	%r4717, [%rd6+12];
	ld.local.u32 	%r4718, [%rd6+8];
	// inline asm
	prmt.b32 %r4716, %r4717, %r4718, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4716;
	ld.local.u32 	%r4721, [%rd6+8];
	ld.local.u32 	%r4722, [%rd6+4];
	// inline asm
	prmt.b32 %r4720, %r4721, %r4722, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4720;
	ld.local.u32 	%r4725, [%rd6+4];
	ld.local.u32 	%r4726, [%rd6];
	// inline asm
	prmt.b32 %r4724, %r4725, %r4726, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4724;
	ld.local.u32 	%r4729, [%rd6];
	ld.local.u32 	%r4730, [%rd5+12];
	// inline asm
	prmt.b32 %r4728, %r4729, %r4730, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4728;
	ld.local.u32 	%r4733, [%rd5+12];
	ld.local.u32 	%r4734, [%rd5+8];
	// inline asm
	prmt.b32 %r4732, %r4733, %r4734, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4732;
	ld.local.u32 	%r4737, [%rd5+8];
	ld.local.u32 	%r4738, [%rd5+4];
	// inline asm
	prmt.b32 %r4736, %r4737, %r4738, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4736;
	ld.local.u32 	%r4741, [%rd5+4];
	ld.local.u32 	%r4742, [%rd5];
	// inline asm
	prmt.b32 %r4740, %r4741, %r4742, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4740;
	ld.local.u32 	%r4745, [%rd5];
	ld.local.u32 	%r4746, [%rd4+12];
	// inline asm
	prmt.b32 %r4744, %r4745, %r4746, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4744;
	ld.local.u32 	%r4749, [%rd4+12];
	ld.local.u32 	%r4750, [%rd4+8];
	// inline asm
	prmt.b32 %r4748, %r4749, %r4750, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4748;
	ld.local.u32 	%r4753, [%rd4+8];
	ld.local.u32 	%r4754, [%rd4+4];
	// inline asm
	prmt.b32 %r4752, %r4753, %r4754, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4752;
	ld.local.u32 	%r4757, [%rd4+4];
	ld.local.u32 	%r4758, [%rd4];
	// inline asm
	prmt.b32 %r4756, %r4757, %r4758, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4756;
	ld.local.u32 	%r4761, [%rd4];
	ld.local.u32 	%r4762, [%rd3+12];
	// inline asm
	prmt.b32 %r4760, %r4761, %r4762, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4760;
	ld.local.u32 	%r4765, [%rd3+12];
	ld.local.u32 	%r4766, [%rd3+8];
	// inline asm
	prmt.b32 %r4764, %r4765, %r4766, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4764;
	ld.local.u32 	%r4769, [%rd3+8];
	ld.local.u32 	%r4770, [%rd3+4];
	// inline asm
	prmt.b32 %r4768, %r4769, %r4770, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4768;
	ld.local.u32 	%r4773, [%rd3+4];
	ld.local.u32 	%r4774, [%rd3];
	// inline asm
	prmt.b32 %r4772, %r4773, %r4774, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4772;
	ld.local.u32 	%r4777, [%rd3];
	ld.local.u32 	%r4778, [%rd2+12];
	// inline asm
	prmt.b32 %r4776, %r4777, %r4778, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4776;
	ld.local.u32 	%r4781, [%rd2+12];
	ld.local.u32 	%r4782, [%rd2+8];
	// inline asm
	prmt.b32 %r4780, %r4781, %r4782, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4780;
	ld.local.u32 	%r4785, [%rd2+8];
	ld.local.u32 	%r4786, [%rd2+4];
	// inline asm
	prmt.b32 %r4784, %r4785, %r4786, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4784;
	ld.local.u32 	%r4789, [%rd2+4];
	ld.local.u32 	%r4790, [%rd2];
	// inline asm
	prmt.b32 %r4788, %r4789, %r4790, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4788;
	ld.local.u32 	%r4793, [%rd2];
	ld.local.u32 	%r4794, [%rd1+12];
	// inline asm
	prmt.b32 %r4792, %r4793, %r4794, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4792;
	ld.local.u32 	%r4797, [%rd1+12];
	ld.local.u32 	%r4798, [%rd1+8];
	// inline asm
	prmt.b32 %r4796, %r4797, %r4798, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4796;
	ld.local.u32 	%r4801, [%rd1+8];
	ld.local.u32 	%r4802, [%rd1+4];
	// inline asm
	prmt.b32 %r4800, %r4801, %r4802, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4800;
	ld.local.u32 	%r4805, [%rd1+4];
	ld.local.u32 	%r4806, [%rd1];
	// inline asm
	prmt.b32 %r4804, %r4805, %r4806, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4804;
	ld.local.u32 	%r4809, [%rd1];
	// inline asm
	prmt.b32 %r4808, %r4809, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4808;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd47, 0;
	st.local.u32 	[%rd1+4], %rd47;
	st.local.u32 	[%rd1], %rd47;

BB1_11:
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	mov.u32 	%r9679, %r9672;
	mov.u32 	%r9680, %r9672;
	bra.uni 	BB1_79;

BB1_129:
	setp.eq.s32	%p70, %r1, 19;
	@%p70 bra 	BB1_130;
	bra.uni 	BB1_169;

BB1_130:
	ld.local.u32 	%r7759, [%rd4];
	ld.local.u32 	%r7760, [%rd3+12];
	// inline asm
	prmt.b32 %r7758, %r7759, %r7760, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7758;
	ld.local.u32 	%r7763, [%rd3+12];
	ld.local.u32 	%r7764, [%rd3+8];
	// inline asm
	prmt.b32 %r7762, %r7763, %r7764, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7762;
	ld.local.u32 	%r7767, [%rd3+8];
	ld.local.u32 	%r7768, [%rd3+4];
	// inline asm
	prmt.b32 %r7766, %r7767, %r7768, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7766;
	ld.local.u32 	%r7771, [%rd3+4];
	ld.local.u32 	%r7772, [%rd3];
	// inline asm
	prmt.b32 %r7770, %r7771, %r7772, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7770;
	ld.local.u32 	%r7775, [%rd3];
	ld.local.u32 	%r7776, [%rd2+12];
	// inline asm
	prmt.b32 %r7774, %r7775, %r7776, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7774;
	ld.local.u32 	%r7779, [%rd2+12];
	ld.local.u32 	%r7780, [%rd2+8];
	// inline asm
	prmt.b32 %r7778, %r7779, %r7780, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7778;
	ld.local.u32 	%r7783, [%rd2+8];
	ld.local.u32 	%r7784, [%rd2+4];
	// inline asm
	prmt.b32 %r7782, %r7783, %r7784, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7782;
	ld.local.u32 	%r7787, [%rd2+4];
	ld.local.u32 	%r7788, [%rd2];
	// inline asm
	prmt.b32 %r7786, %r7787, %r7788, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7786;
	ld.local.u32 	%r7791, [%rd2];
	ld.local.u32 	%r7792, [%rd1+12];
	// inline asm
	prmt.b32 %r7790, %r7791, %r7792, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7790;
	ld.local.u32 	%r7795, [%rd1+12];
	ld.local.u32 	%r7796, [%rd1+8];
	// inline asm
	prmt.b32 %r7794, %r7795, %r7796, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7794;
	ld.local.u32 	%r7799, [%rd1+8];
	ld.local.u32 	%r7800, [%rd1+4];
	// inline asm
	prmt.b32 %r7798, %r7799, %r7800, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7798;
	ld.local.u32 	%r7803, [%rd1+4];
	ld.local.u32 	%r7804, [%rd1];
	// inline asm
	prmt.b32 %r7802, %r7803, %r7804, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7802;
	ld.local.u32 	%r7807, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7806, %r7807, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7806;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2925, 0;
	st.local.u32 	[%rd1+4], %rd2925;
	st.local.u32 	[%rd1], %rd2925;
	bra.uni 	BB1_170;

BB1_41:
	setp.eq.s32	%p23, %r1, 19;
	@%p23 bra 	BB1_42;
	bra.uni 	BB1_87;

BB1_42:
	ld.local.u32 	%r2242, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9689, %r9672, %r2242, %r2;
	// inline asm
	ld.local.u32 	%r2245, [%rd8+12];
	ld.local.u32 	%r2246, [%rd8+8];
	// inline asm
	prmt.b32 %r9690, %r2245, %r2246, %r2;
	// inline asm
	ld.local.u32 	%r2249, [%rd8+8];
	ld.local.u32 	%r2250, [%rd8+4];
	// inline asm
	prmt.b32 %r9691, %r2249, %r2250, %r2;
	// inline asm
	ld.local.u32 	%r2253, [%rd8+4];
	ld.local.u32 	%r2254, [%rd8];
	// inline asm
	prmt.b32 %r9692, %r2253, %r2254, %r2;
	// inline asm
	ld.local.u32 	%r2257, [%rd8];
	ld.local.u32 	%r2258, [%rd7+12];
	// inline asm
	prmt.b32 %r9685, %r2257, %r2258, %r2;
	// inline asm
	ld.local.u32 	%r2261, [%rd7+12];
	ld.local.u32 	%r2262, [%rd7+8];
	// inline asm
	prmt.b32 %r9686, %r2261, %r2262, %r2;
	// inline asm
	ld.local.u32 	%r2265, [%rd7+8];
	ld.local.u32 	%r2266, [%rd7+4];
	// inline asm
	prmt.b32 %r9687, %r2265, %r2266, %r2;
	// inline asm
	ld.local.u32 	%r2269, [%rd7+4];
	ld.local.u32 	%r2270, [%rd7];
	// inline asm
	prmt.b32 %r9688, %r2269, %r2270, %r2;
	// inline asm
	ld.local.u32 	%r2273, [%rd7];
	ld.local.u32 	%r2274, [%rd6+12];
	// inline asm
	prmt.b32 %r9681, %r2273, %r2274, %r2;
	// inline asm
	ld.local.u32 	%r2277, [%rd6+12];
	ld.local.u32 	%r2278, [%rd6+8];
	// inline asm
	prmt.b32 %r9682, %r2277, %r2278, %r2;
	// inline asm
	ld.local.u32 	%r2281, [%rd6+8];
	ld.local.u32 	%r2282, [%rd6+4];
	// inline asm
	prmt.b32 %r9683, %r2281, %r2282, %r2;
	// inline asm
	ld.local.u32 	%r2285, [%rd6+4];
	ld.local.u32 	%r2286, [%rd6];
	// inline asm
	prmt.b32 %r9684, %r2285, %r2286, %r2;
	// inline asm
	ld.local.u32 	%r2289, [%rd6];
	ld.local.u32 	%r2290, [%rd5+12];
	// inline asm
	prmt.b32 %r9677, %r2289, %r2290, %r2;
	// inline asm
	ld.local.u32 	%r2293, [%rd5+12];
	ld.local.u32 	%r2294, [%rd5+8];
	// inline asm
	prmt.b32 %r9678, %r2293, %r2294, %r2;
	// inline asm
	ld.local.u32 	%r2297, [%rd5+8];
	ld.local.u32 	%r2298, [%rd5+4];
	// inline asm
	prmt.b32 %r9679, %r2297, %r2298, %r2;
	// inline asm
	ld.local.u32 	%r2301, [%rd5+4];
	ld.local.u32 	%r2302, [%rd5];
	// inline asm
	prmt.b32 %r9680, %r2301, %r2302, %r2;
	// inline asm
	ld.local.u32 	%r2305, [%rd5];
	ld.local.u32 	%r2306, [%rd4+12];
	// inline asm
	prmt.b32 %r9673, %r2305, %r2306, %r2;
	// inline asm
	ld.local.u32 	%r2309, [%rd4+12];
	ld.local.u32 	%r2310, [%rd4+8];
	// inline asm
	prmt.b32 %r9674, %r2309, %r2310, %r2;
	// inline asm
	ld.local.u32 	%r2313, [%rd4+8];
	ld.local.u32 	%r2314, [%rd4+4];
	// inline asm
	prmt.b32 %r9675, %r2313, %r2314, %r2;
	// inline asm
	ld.local.u32 	%r2317, [%rd4+4];
	ld.local.u32 	%r2318, [%rd4];
	// inline asm
	prmt.b32 %r9676, %r2317, %r2318, %r2;
	// inline asm
	ld.local.u32 	%r2321, [%rd4];
	ld.local.u32 	%r2322, [%rd3+12];
	// inline asm
	prmt.b32 %r2320, %r2321, %r2322, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2320;
	ld.local.u32 	%r2325, [%rd3+12];
	ld.local.u32 	%r2326, [%rd3+8];
	// inline asm
	prmt.b32 %r2324, %r2325, %r2326, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2324;
	ld.local.u32 	%r2329, [%rd3+8];
	ld.local.u32 	%r2330, [%rd3+4];
	// inline asm
	prmt.b32 %r2328, %r2329, %r2330, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2328;
	ld.local.u32 	%r2333, [%rd3+4];
	ld.local.u32 	%r2334, [%rd3];
	// inline asm
	prmt.b32 %r2332, %r2333, %r2334, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2332;
	ld.local.u32 	%r2337, [%rd3];
	ld.local.u32 	%r2338, [%rd2+12];
	// inline asm
	prmt.b32 %r2336, %r2337, %r2338, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2336;
	ld.local.u32 	%r2341, [%rd2+12];
	ld.local.u32 	%r2342, [%rd2+8];
	// inline asm
	prmt.b32 %r2340, %r2341, %r2342, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2340;
	ld.local.u32 	%r2345, [%rd2+8];
	ld.local.u32 	%r2346, [%rd2+4];
	// inline asm
	prmt.b32 %r2344, %r2345, %r2346, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2344;
	ld.local.u32 	%r2349, [%rd2+4];
	ld.local.u32 	%r2350, [%rd2];
	// inline asm
	prmt.b32 %r2348, %r2349, %r2350, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2348;
	ld.local.u32 	%r2353, [%rd2];
	ld.local.u32 	%r2354, [%rd1+12];
	// inline asm
	prmt.b32 %r2352, %r2353, %r2354, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2352;
	ld.local.u32 	%r2357, [%rd1+12];
	ld.local.u32 	%r2358, [%rd1+8];
	// inline asm
	prmt.b32 %r2356, %r2357, %r2358, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2356;
	ld.local.u32 	%r2361, [%rd1+8];
	ld.local.u32 	%r2362, [%rd1+4];
	// inline asm
	prmt.b32 %r2360, %r2361, %r2362, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2360;
	ld.local.u32 	%r2365, [%rd1+4];
	ld.local.u32 	%r2366, [%rd1];
	// inline asm
	prmt.b32 %r2364, %r2365, %r2366, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2364;
	ld.local.u32 	%r2369, [%rd1];
	// inline asm
	prmt.b32 %r2368, %r2369, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2368;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd31, 0;
	st.local.u32 	[%rd1+4], %rd31;
	st.local.u32 	[%rd1], %rd31;
	bra.uni 	BB1_82;

BB1_113:
	setp.eq.s32	%p82, %r1, 11;
	@%p82 bra 	BB1_114;
	bra.uni 	BB1_169;

BB1_114:
	ld.local.u32 	%r8295, [%rd6];
	ld.local.u32 	%r8296, [%rd5+12];
	// inline asm
	prmt.b32 %r8294, %r8295, %r8296, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8294;
	ld.local.u32 	%r8299, [%rd5+12];
	ld.local.u32 	%r8300, [%rd5+8];
	// inline asm
	prmt.b32 %r8298, %r8299, %r8300, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8298;
	ld.local.u32 	%r8303, [%rd5+8];
	ld.local.u32 	%r8304, [%rd5+4];
	// inline asm
	prmt.b32 %r8302, %r8303, %r8304, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8302;
	ld.local.u32 	%r8307, [%rd5+4];
	ld.local.u32 	%r8308, [%rd5];
	// inline asm
	prmt.b32 %r8306, %r8307, %r8308, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8306;
	ld.local.u32 	%r8311, [%rd5];
	ld.local.u32 	%r8312, [%rd4+12];
	// inline asm
	prmt.b32 %r8310, %r8311, %r8312, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8310;
	ld.local.u32 	%r8315, [%rd4+12];
	ld.local.u32 	%r8316, [%rd4+8];
	// inline asm
	prmt.b32 %r8314, %r8315, %r8316, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8314;
	ld.local.u32 	%r8319, [%rd4+8];
	ld.local.u32 	%r8320, [%rd4+4];
	// inline asm
	prmt.b32 %r8318, %r8319, %r8320, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8318;
	ld.local.u32 	%r8323, [%rd4+4];
	ld.local.u32 	%r8324, [%rd4];
	// inline asm
	prmt.b32 %r8322, %r8323, %r8324, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8322;
	ld.local.u32 	%r8327, [%rd4];
	ld.local.u32 	%r8328, [%rd3+12];
	// inline asm
	prmt.b32 %r8326, %r8327, %r8328, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8326;
	ld.local.u32 	%r8331, [%rd3+12];
	ld.local.u32 	%r8332, [%rd3+8];
	// inline asm
	prmt.b32 %r8330, %r8331, %r8332, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8330;
	ld.local.u32 	%r8335, [%rd3+8];
	ld.local.u32 	%r8336, [%rd3+4];
	// inline asm
	prmt.b32 %r8334, %r8335, %r8336, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8334;
	ld.local.u32 	%r8339, [%rd3+4];
	ld.local.u32 	%r8340, [%rd3];
	// inline asm
	prmt.b32 %r8338, %r8339, %r8340, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8338;
	ld.local.u32 	%r8343, [%rd3];
	ld.local.u32 	%r8344, [%rd2+12];
	// inline asm
	prmt.b32 %r8342, %r8343, %r8344, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8342;
	ld.local.u32 	%r8347, [%rd2+12];
	ld.local.u32 	%r8348, [%rd2+8];
	// inline asm
	prmt.b32 %r8346, %r8347, %r8348, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8346;
	ld.local.u32 	%r8351, [%rd2+8];
	ld.local.u32 	%r8352, [%rd2+4];
	// inline asm
	prmt.b32 %r8350, %r8351, %r8352, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8350;
	ld.local.u32 	%r8355, [%rd2+4];
	ld.local.u32 	%r8356, [%rd2];
	// inline asm
	prmt.b32 %r8354, %r8355, %r8356, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8354;
	ld.local.u32 	%r8359, [%rd2];
	ld.local.u32 	%r8360, [%rd1+12];
	// inline asm
	prmt.b32 %r8358, %r8359, %r8360, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8358;
	ld.local.u32 	%r8363, [%rd1+12];
	ld.local.u32 	%r8364, [%rd1+8];
	// inline asm
	prmt.b32 %r8362, %r8363, %r8364, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8362;
	ld.local.u32 	%r8367, [%rd1+8];
	ld.local.u32 	%r8368, [%rd1+4];
	// inline asm
	prmt.b32 %r8366, %r8367, %r8368, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8366;
	ld.local.u32 	%r8371, [%rd1+4];
	ld.local.u32 	%r8372, [%rd1];
	// inline asm
	prmt.b32 %r8370, %r8371, %r8372, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8370;
	ld.local.u32 	%r8375, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8374, %r8375, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8374;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2933, 0;
	st.local.u32 	[%rd1+4], %rd2933;
	st.local.u32 	[%rd1], %rd2933;
	bra.uni 	BB1_170;

BB1_25:
	setp.eq.s32	%p35, %r1, 11;
	@%p35 bra 	BB1_26;
	bra.uni 	BB1_87;

BB1_26:
	ld.local.u32 	%r3430, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9681, %r9672, %r3430, %r2;
	// inline asm
	ld.local.u32 	%r3433, [%rd8+12];
	ld.local.u32 	%r3434, [%rd8+8];
	// inline asm
	prmt.b32 %r9682, %r3433, %r3434, %r2;
	// inline asm
	ld.local.u32 	%r3437, [%rd8+8];
	ld.local.u32 	%r3438, [%rd8+4];
	// inline asm
	prmt.b32 %r9683, %r3437, %r3438, %r2;
	// inline asm
	ld.local.u32 	%r3441, [%rd8+4];
	ld.local.u32 	%r3442, [%rd8];
	// inline asm
	prmt.b32 %r9684, %r3441, %r3442, %r2;
	// inline asm
	ld.local.u32 	%r3445, [%rd8];
	ld.local.u32 	%r3446, [%rd7+12];
	// inline asm
	prmt.b32 %r9677, %r3445, %r3446, %r2;
	// inline asm
	ld.local.u32 	%r3449, [%rd7+12];
	ld.local.u32 	%r3450, [%rd7+8];
	// inline asm
	prmt.b32 %r9678, %r3449, %r3450, %r2;
	// inline asm
	ld.local.u32 	%r3453, [%rd7+8];
	ld.local.u32 	%r3454, [%rd7+4];
	// inline asm
	prmt.b32 %r9679, %r3453, %r3454, %r2;
	// inline asm
	ld.local.u32 	%r3457, [%rd7+4];
	ld.local.u32 	%r3458, [%rd7];
	// inline asm
	prmt.b32 %r9680, %r3457, %r3458, %r2;
	// inline asm
	ld.local.u32 	%r3461, [%rd7];
	ld.local.u32 	%r3462, [%rd6+12];
	// inline asm
	prmt.b32 %r9673, %r3461, %r3462, %r2;
	// inline asm
	ld.local.u32 	%r3465, [%rd6+12];
	ld.local.u32 	%r3466, [%rd6+8];
	// inline asm
	prmt.b32 %r9674, %r3465, %r3466, %r2;
	// inline asm
	ld.local.u32 	%r3469, [%rd6+8];
	ld.local.u32 	%r3470, [%rd6+4];
	// inline asm
	prmt.b32 %r9675, %r3469, %r3470, %r2;
	// inline asm
	ld.local.u32 	%r3473, [%rd6+4];
	ld.local.u32 	%r3474, [%rd6];
	// inline asm
	prmt.b32 %r9676, %r3473, %r3474, %r2;
	// inline asm
	ld.local.u32 	%r3477, [%rd6];
	ld.local.u32 	%r3478, [%rd5+12];
	// inline asm
	prmt.b32 %r3476, %r3477, %r3478, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3476;
	ld.local.u32 	%r3481, [%rd5+12];
	ld.local.u32 	%r3482, [%rd5+8];
	// inline asm
	prmt.b32 %r3480, %r3481, %r3482, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3480;
	ld.local.u32 	%r3485, [%rd5+8];
	ld.local.u32 	%r3486, [%rd5+4];
	// inline asm
	prmt.b32 %r3484, %r3485, %r3486, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3484;
	ld.local.u32 	%r3489, [%rd5+4];
	ld.local.u32 	%r3490, [%rd5];
	// inline asm
	prmt.b32 %r3488, %r3489, %r3490, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3488;
	ld.local.u32 	%r3493, [%rd5];
	ld.local.u32 	%r3494, [%rd4+12];
	// inline asm
	prmt.b32 %r3492, %r3493, %r3494, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3492;
	ld.local.u32 	%r3497, [%rd4+12];
	ld.local.u32 	%r3498, [%rd4+8];
	// inline asm
	prmt.b32 %r3496, %r3497, %r3498, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3496;
	ld.local.u32 	%r3501, [%rd4+8];
	ld.local.u32 	%r3502, [%rd4+4];
	// inline asm
	prmt.b32 %r3500, %r3501, %r3502, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3500;
	ld.local.u32 	%r3505, [%rd4+4];
	ld.local.u32 	%r3506, [%rd4];
	// inline asm
	prmt.b32 %r3504, %r3505, %r3506, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3504;
	ld.local.u32 	%r3509, [%rd4];
	ld.local.u32 	%r3510, [%rd3+12];
	// inline asm
	prmt.b32 %r3508, %r3509, %r3510, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3508;
	ld.local.u32 	%r3513, [%rd3+12];
	ld.local.u32 	%r3514, [%rd3+8];
	// inline asm
	prmt.b32 %r3512, %r3513, %r3514, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3512;
	ld.local.u32 	%r3517, [%rd3+8];
	ld.local.u32 	%r3518, [%rd3+4];
	// inline asm
	prmt.b32 %r3516, %r3517, %r3518, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3516;
	ld.local.u32 	%r3521, [%rd3+4];
	ld.local.u32 	%r3522, [%rd3];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3520;
	ld.local.u32 	%r3525, [%rd3];
	ld.local.u32 	%r3526, [%rd2+12];
	// inline asm
	prmt.b32 %r3524, %r3525, %r3526, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3524;
	ld.local.u32 	%r3529, [%rd2+12];
	ld.local.u32 	%r3530, [%rd2+8];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3528;
	ld.local.u32 	%r3533, [%rd2+8];
	ld.local.u32 	%r3534, [%rd2+4];
	// inline asm
	prmt.b32 %r3532, %r3533, %r3534, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3532;
	ld.local.u32 	%r3537, [%rd2+4];
	ld.local.u32 	%r3538, [%rd2];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3536;
	ld.local.u32 	%r3541, [%rd2];
	ld.local.u32 	%r3542, [%rd1+12];
	// inline asm
	prmt.b32 %r3540, %r3541, %r3542, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3540;
	ld.local.u32 	%r3545, [%rd1+12];
	ld.local.u32 	%r3546, [%rd1+8];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3544;
	ld.local.u32 	%r3549, [%rd1+8];
	ld.local.u32 	%r3550, [%rd1+4];
	// inline asm
	prmt.b32 %r3548, %r3549, %r3550, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3548;
	ld.local.u32 	%r3553, [%rd1+4];
	ld.local.u32 	%r3554, [%rd1];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3552;
	ld.local.u32 	%r3557, [%rd1];
	// inline asm
	prmt.b32 %r3556, %r3557, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3556;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd39, 0;
	st.local.u32 	[%rd1+4], %rd39;
	st.local.u32 	[%rd1], %rd39;
	bra.uni 	BB1_80;

BB1_144:
	setp.eq.s32	%p59, %r1, 27;
	@%p59 bra 	BB1_145;
	bra.uni 	BB1_169;

BB1_145:
	ld.local.u32 	%r7479, [%rd2];
	ld.local.u32 	%r7480, [%rd1+12];
	// inline asm
	prmt.b32 %r7478, %r7479, %r7480, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7478;
	ld.local.u32 	%r7483, [%rd1+12];
	ld.local.u32 	%r7484, [%rd1+8];
	// inline asm
	prmt.b32 %r7482, %r7483, %r7484, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7482;
	ld.local.u32 	%r7487, [%rd1+8];
	ld.local.u32 	%r7488, [%rd1+4];
	// inline asm
	prmt.b32 %r7486, %r7487, %r7488, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7486;
	ld.local.u32 	%r7491, [%rd1+4];
	ld.local.u32 	%r7492, [%rd1];
	// inline asm
	prmt.b32 %r7490, %r7491, %r7492, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7490;
	ld.local.u32 	%r7495, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7494, %r7495, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7494;
	st.local.u32 	[%rd7+8], %r9705;
	st.local.u32 	[%rd7+4], %r9705;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2917, 0;
	st.local.u32 	[%rd1+4], %rd2917;
	st.local.u32 	[%rd1], %rd2917;
	bra.uni 	BB1_170;

BB1_56:
	setp.eq.s32	%p12, %r1, 27;
	@%p12 bra 	BB1_57;
	bra.uni 	BB1_87;

BB1_57:
	ld.local.u32 	%r1118, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9697, %r9672, %r1118, %r2;
	// inline asm
	ld.local.u32 	%r1121, [%rd8+12];
	ld.local.u32 	%r1122, [%rd8+8];
	// inline asm
	prmt.b32 %r9698, %r1121, %r1122, %r2;
	// inline asm
	ld.local.u32 	%r1125, [%rd8+8];
	ld.local.u32 	%r1126, [%rd8+4];
	// inline asm
	prmt.b32 %r9699, %r1125, %r1126, %r2;
	// inline asm
	ld.local.u32 	%r1129, [%rd8+4];
	ld.local.u32 	%r1130, [%rd8];
	// inline asm
	prmt.b32 %r9700, %r1129, %r1130, %r2;
	// inline asm
	ld.local.u32 	%r1133, [%rd8];
	ld.local.u32 	%r1134, [%rd7+12];
	// inline asm
	prmt.b32 %r9693, %r1133, %r1134, %r2;
	// inline asm
	ld.local.u32 	%r1137, [%rd7+12];
	ld.local.u32 	%r1138, [%rd7+8];
	// inline asm
	prmt.b32 %r9694, %r1137, %r1138, %r2;
	// inline asm
	ld.local.u32 	%r1141, [%rd7+8];
	ld.local.u32 	%r1142, [%rd7+4];
	// inline asm
	prmt.b32 %r9695, %r1141, %r1142, %r2;
	// inline asm
	ld.local.u32 	%r1145, [%rd7+4];
	ld.local.u32 	%r1146, [%rd7];
	// inline asm
	prmt.b32 %r9696, %r1145, %r1146, %r2;
	// inline asm
	ld.local.u32 	%r1149, [%rd7];
	ld.local.u32 	%r1150, [%rd6+12];
	// inline asm
	prmt.b32 %r9689, %r1149, %r1150, %r2;
	// inline asm
	ld.local.u32 	%r1153, [%rd6+12];
	ld.local.u32 	%r1154, [%rd6+8];
	// inline asm
	prmt.b32 %r9690, %r1153, %r1154, %r2;
	// inline asm
	ld.local.u32 	%r1157, [%rd6+8];
	ld.local.u32 	%r1158, [%rd6+4];
	// inline asm
	prmt.b32 %r9691, %r1157, %r1158, %r2;
	// inline asm
	ld.local.u32 	%r1161, [%rd6+4];
	ld.local.u32 	%r1162, [%rd6];
	// inline asm
	prmt.b32 %r9692, %r1161, %r1162, %r2;
	// inline asm
	ld.local.u32 	%r1165, [%rd6];
	ld.local.u32 	%r1166, [%rd5+12];
	// inline asm
	prmt.b32 %r9685, %r1165, %r1166, %r2;
	// inline asm
	ld.local.u32 	%r1169, [%rd5+12];
	ld.local.u32 	%r1170, [%rd5+8];
	// inline asm
	prmt.b32 %r9686, %r1169, %r1170, %r2;
	// inline asm
	ld.local.u32 	%r1173, [%rd5+8];
	ld.local.u32 	%r1174, [%rd5+4];
	// inline asm
	prmt.b32 %r9687, %r1173, %r1174, %r2;
	// inline asm
	ld.local.u32 	%r1177, [%rd5+4];
	ld.local.u32 	%r1178, [%rd5];
	// inline asm
	prmt.b32 %r9688, %r1177, %r1178, %r2;
	// inline asm
	ld.local.u32 	%r1181, [%rd5];
	ld.local.u32 	%r1182, [%rd4+12];
	// inline asm
	prmt.b32 %r9681, %r1181, %r1182, %r2;
	// inline asm
	ld.local.u32 	%r1185, [%rd4+12];
	ld.local.u32 	%r1186, [%rd4+8];
	// inline asm
	prmt.b32 %r9682, %r1185, %r1186, %r2;
	// inline asm
	ld.local.u32 	%r1189, [%rd4+8];
	ld.local.u32 	%r1190, [%rd4+4];
	// inline asm
	prmt.b32 %r9683, %r1189, %r1190, %r2;
	// inline asm
	ld.local.u32 	%r1193, [%rd4+4];
	ld.local.u32 	%r1194, [%rd4];
	// inline asm
	prmt.b32 %r9684, %r1193, %r1194, %r2;
	// inline asm
	ld.local.u32 	%r1197, [%rd4];
	ld.local.u32 	%r1198, [%rd3+12];
	// inline asm
	prmt.b32 %r9677, %r1197, %r1198, %r2;
	// inline asm
	ld.local.u32 	%r1201, [%rd3+12];
	ld.local.u32 	%r1202, [%rd3+8];
	// inline asm
	prmt.b32 %r9678, %r1201, %r1202, %r2;
	// inline asm
	ld.local.u32 	%r1205, [%rd3+8];
	ld.local.u32 	%r1206, [%rd3+4];
	// inline asm
	prmt.b32 %r9679, %r1205, %r1206, %r2;
	// inline asm
	ld.local.u32 	%r1209, [%rd3+4];
	ld.local.u32 	%r1210, [%rd3];
	// inline asm
	prmt.b32 %r9680, %r1209, %r1210, %r2;
	// inline asm
	ld.local.u32 	%r1213, [%rd3];
	ld.local.u32 	%r1214, [%rd2+12];
	// inline asm
	prmt.b32 %r9673, %r1213, %r1214, %r2;
	// inline asm
	ld.local.u32 	%r1217, [%rd2+12];
	ld.local.u32 	%r1218, [%rd2+8];
	// inline asm
	prmt.b32 %r9674, %r1217, %r1218, %r2;
	// inline asm
	ld.local.u32 	%r1221, [%rd2+8];
	ld.local.u32 	%r1222, [%rd2+4];
	// inline asm
	prmt.b32 %r9675, %r1221, %r1222, %r2;
	// inline asm
	ld.local.u32 	%r1225, [%rd2+4];
	ld.local.u32 	%r1226, [%rd2];
	// inline asm
	prmt.b32 %r9676, %r1225, %r1226, %r2;
	// inline asm
	ld.local.u32 	%r1229, [%rd2];
	ld.local.u32 	%r1230, [%rd1+12];
	// inline asm
	prmt.b32 %r1228, %r1229, %r1230, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1228;
	ld.local.u32 	%r1233, [%rd1+12];
	ld.local.u32 	%r1234, [%rd1+8];
	// inline asm
	prmt.b32 %r1232, %r1233, %r1234, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1232;
	ld.local.u32 	%r1237, [%rd1+8];
	ld.local.u32 	%r1238, [%rd1+4];
	// inline asm
	prmt.b32 %r1236, %r1237, %r1238, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1236;
	ld.local.u32 	%r1241, [%rd1+4];
	ld.local.u32 	%r1242, [%rd1];
	// inline asm
	prmt.b32 %r1240, %r1241, %r1242, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1240;
	ld.local.u32 	%r1245, [%rd1];
	// inline asm
	prmt.b32 %r1244, %r1245, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1244;
	st.local.u32 	[%rd7+8], %r9672;
	st.local.u32 	[%rd7+4], %r9672;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd23, 0;
	st.local.u32 	[%rd1+4], %rd23;
	st.local.u32 	[%rd1], %rd23;
	bra.uni 	BB1_84;

BB1_105:
	setp.eq.s32	%p88, %r1, 7;
	@%p88 bra 	BB1_106;
	bra.uni 	BB1_169;

BB1_106:
	ld.local.u32 	%r8659, [%rd7];
	ld.local.u32 	%r8660, [%rd6+12];
	// inline asm
	prmt.b32 %r8658, %r8659, %r8660, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8658;
	ld.local.u32 	%r8663, [%rd6+12];
	ld.local.u32 	%r8664, [%rd6+8];
	// inline asm
	prmt.b32 %r8662, %r8663, %r8664, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8662;
	ld.local.u32 	%r8667, [%rd6+8];
	ld.local.u32 	%r8668, [%rd6+4];
	// inline asm
	prmt.b32 %r8666, %r8667, %r8668, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8666;
	ld.local.u32 	%r8671, [%rd6+4];
	ld.local.u32 	%r8672, [%rd6];
	// inline asm
	prmt.b32 %r8670, %r8671, %r8672, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8670;
	ld.local.u32 	%r8675, [%rd6];
	ld.local.u32 	%r8676, [%rd5+12];
	// inline asm
	prmt.b32 %r8674, %r8675, %r8676, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8674;
	ld.local.u32 	%r8679, [%rd5+12];
	ld.local.u32 	%r8680, [%rd5+8];
	// inline asm
	prmt.b32 %r8678, %r8679, %r8680, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8678;
	ld.local.u32 	%r8683, [%rd5+8];
	ld.local.u32 	%r8684, [%rd5+4];
	// inline asm
	prmt.b32 %r8682, %r8683, %r8684, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8682;
	ld.local.u32 	%r8687, [%rd5+4];
	ld.local.u32 	%r8688, [%rd5];
	// inline asm
	prmt.b32 %r8686, %r8687, %r8688, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8686;
	ld.local.u32 	%r8691, [%rd5];
	ld.local.u32 	%r8692, [%rd4+12];
	// inline asm
	prmt.b32 %r8690, %r8691, %r8692, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8690;
	ld.local.u32 	%r8695, [%rd4+12];
	ld.local.u32 	%r8696, [%rd4+8];
	// inline asm
	prmt.b32 %r8694, %r8695, %r8696, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8694;
	ld.local.u32 	%r8699, [%rd4+8];
	ld.local.u32 	%r8700, [%rd4+4];
	// inline asm
	prmt.b32 %r8698, %r8699, %r8700, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8698;
	ld.local.u32 	%r8703, [%rd4+4];
	ld.local.u32 	%r8704, [%rd4];
	// inline asm
	prmt.b32 %r8702, %r8703, %r8704, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8702;
	ld.local.u32 	%r8707, [%rd4];
	ld.local.u32 	%r8708, [%rd3+12];
	// inline asm
	prmt.b32 %r8706, %r8707, %r8708, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8706;
	ld.local.u32 	%r8711, [%rd3+12];
	ld.local.u32 	%r8712, [%rd3+8];
	// inline asm
	prmt.b32 %r8710, %r8711, %r8712, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8710;
	ld.local.u32 	%r8715, [%rd3+8];
	ld.local.u32 	%r8716, [%rd3+4];
	// inline asm
	prmt.b32 %r8714, %r8715, %r8716, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8714;
	ld.local.u32 	%r8719, [%rd3+4];
	ld.local.u32 	%r8720, [%rd3];
	// inline asm
	prmt.b32 %r8718, %r8719, %r8720, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8718;
	ld.local.u32 	%r8723, [%rd3];
	ld.local.u32 	%r8724, [%rd2+12];
	// inline asm
	prmt.b32 %r8722, %r8723, %r8724, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8722;
	ld.local.u32 	%r8727, [%rd2+12];
	ld.local.u32 	%r8728, [%rd2+8];
	// inline asm
	prmt.b32 %r8726, %r8727, %r8728, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8726;
	ld.local.u32 	%r8731, [%rd2+8];
	ld.local.u32 	%r8732, [%rd2+4];
	// inline asm
	prmt.b32 %r8730, %r8731, %r8732, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8730;
	ld.local.u32 	%r8735, [%rd2+4];
	ld.local.u32 	%r8736, [%rd2];
	// inline asm
	prmt.b32 %r8734, %r8735, %r8736, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8734;
	ld.local.u32 	%r8739, [%rd2];
	ld.local.u32 	%r8740, [%rd1+12];
	// inline asm
	prmt.b32 %r8738, %r8739, %r8740, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8738;
	ld.local.u32 	%r8743, [%rd1+12];
	ld.local.u32 	%r8744, [%rd1+8];
	// inline asm
	prmt.b32 %r8742, %r8743, %r8744, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8742;
	ld.local.u32 	%r8747, [%rd1+8];
	ld.local.u32 	%r8748, [%rd1+4];
	// inline asm
	prmt.b32 %r8746, %r8747, %r8748, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8746;
	ld.local.u32 	%r8751, [%rd1+4];
	ld.local.u32 	%r8752, [%rd1];
	// inline asm
	prmt.b32 %r8750, %r8751, %r8752, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8750;
	ld.local.u32 	%r8755, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8754, %r8755, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8754;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2937, 0;
	st.local.u32 	[%rd1+4], %rd2937;
	st.local.u32 	[%rd1], %rd2937;
	bra.uni 	BB1_170;

BB1_17:
	setp.eq.s32	%p41, %r1, 7;
	@%p41 bra 	BB1_18;
	bra.uni 	BB1_87;

BB1_18:
	ld.local.u32 	%r4048, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9677, %r9672, %r4048, %r2;
	// inline asm
	ld.local.u32 	%r4051, [%rd8+12];
	ld.local.u32 	%r4052, [%rd8+8];
	// inline asm
	prmt.b32 %r9678, %r4051, %r4052, %r2;
	// inline asm
	ld.local.u32 	%r4055, [%rd8+8];
	ld.local.u32 	%r4056, [%rd8+4];
	// inline asm
	prmt.b32 %r9679, %r4055, %r4056, %r2;
	// inline asm
	ld.local.u32 	%r4059, [%rd8+4];
	ld.local.u32 	%r4060, [%rd8];
	// inline asm
	prmt.b32 %r9680, %r4059, %r4060, %r2;
	// inline asm
	ld.local.u32 	%r4063, [%rd8];
	ld.local.u32 	%r4064, [%rd7+12];
	// inline asm
	prmt.b32 %r9673, %r4063, %r4064, %r2;
	// inline asm
	ld.local.u32 	%r4067, [%rd7+12];
	ld.local.u32 	%r4068, [%rd7+8];
	// inline asm
	prmt.b32 %r9674, %r4067, %r4068, %r2;
	// inline asm
	ld.local.u32 	%r4071, [%rd7+8];
	ld.local.u32 	%r4072, [%rd7+4];
	// inline asm
	prmt.b32 %r9675, %r4071, %r4072, %r2;
	// inline asm
	ld.local.u32 	%r4075, [%rd7+4];
	ld.local.u32 	%r4076, [%rd7];
	// inline asm
	prmt.b32 %r9676, %r4075, %r4076, %r2;
	// inline asm
	ld.local.u32 	%r4079, [%rd7];
	ld.local.u32 	%r4080, [%rd6+12];
	// inline asm
	prmt.b32 %r4078, %r4079, %r4080, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4078;
	ld.local.u32 	%r4083, [%rd6+12];
	ld.local.u32 	%r4084, [%rd6+8];
	// inline asm
	prmt.b32 %r4082, %r4083, %r4084, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4082;
	ld.local.u32 	%r4087, [%rd6+8];
	ld.local.u32 	%r4088, [%rd6+4];
	// inline asm
	prmt.b32 %r4086, %r4087, %r4088, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4086;
	ld.local.u32 	%r4091, [%rd6+4];
	ld.local.u32 	%r4092, [%rd6];
	// inline asm
	prmt.b32 %r4090, %r4091, %r4092, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4090;
	ld.local.u32 	%r4095, [%rd6];
	ld.local.u32 	%r4096, [%rd5+12];
	// inline asm
	prmt.b32 %r4094, %r4095, %r4096, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4094;
	ld.local.u32 	%r4099, [%rd5+12];
	ld.local.u32 	%r4100, [%rd5+8];
	// inline asm
	prmt.b32 %r4098, %r4099, %r4100, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4098;
	ld.local.u32 	%r4103, [%rd5+8];
	ld.local.u32 	%r4104, [%rd5+4];
	// inline asm
	prmt.b32 %r4102, %r4103, %r4104, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4102;
	ld.local.u32 	%r4107, [%rd5+4];
	ld.local.u32 	%r4108, [%rd5];
	// inline asm
	prmt.b32 %r4106, %r4107, %r4108, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4106;
	ld.local.u32 	%r4111, [%rd5];
	ld.local.u32 	%r4112, [%rd4+12];
	// inline asm
	prmt.b32 %r4110, %r4111, %r4112, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4110;
	ld.local.u32 	%r4115, [%rd4+12];
	ld.local.u32 	%r4116, [%rd4+8];
	// inline asm
	prmt.b32 %r4114, %r4115, %r4116, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4114;
	ld.local.u32 	%r4119, [%rd4+8];
	ld.local.u32 	%r4120, [%rd4+4];
	// inline asm
	prmt.b32 %r4118, %r4119, %r4120, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4118;
	ld.local.u32 	%r4123, [%rd4+4];
	ld.local.u32 	%r4124, [%rd4];
	// inline asm
	prmt.b32 %r4122, %r4123, %r4124, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4122;
	ld.local.u32 	%r4127, [%rd4];
	ld.local.u32 	%r4128, [%rd3+12];
	// inline asm
	prmt.b32 %r4126, %r4127, %r4128, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4126;
	ld.local.u32 	%r4131, [%rd3+12];
	ld.local.u32 	%r4132, [%rd3+8];
	// inline asm
	prmt.b32 %r4130, %r4131, %r4132, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4130;
	ld.local.u32 	%r4135, [%rd3+8];
	ld.local.u32 	%r4136, [%rd3+4];
	// inline asm
	prmt.b32 %r4134, %r4135, %r4136, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4134;
	ld.local.u32 	%r4139, [%rd3+4];
	ld.local.u32 	%r4140, [%rd3];
	// inline asm
	prmt.b32 %r4138, %r4139, %r4140, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4138;
	ld.local.u32 	%r4143, [%rd3];
	ld.local.u32 	%r4144, [%rd2+12];
	// inline asm
	prmt.b32 %r4142, %r4143, %r4144, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4142;
	ld.local.u32 	%r4147, [%rd2+12];
	ld.local.u32 	%r4148, [%rd2+8];
	// inline asm
	prmt.b32 %r4146, %r4147, %r4148, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4146;
	ld.local.u32 	%r4151, [%rd2+8];
	ld.local.u32 	%r4152, [%rd2+4];
	// inline asm
	prmt.b32 %r4150, %r4151, %r4152, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4150;
	ld.local.u32 	%r4155, [%rd2+4];
	ld.local.u32 	%r4156, [%rd2];
	// inline asm
	prmt.b32 %r4154, %r4155, %r4156, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4154;
	ld.local.u32 	%r4159, [%rd2];
	ld.local.u32 	%r4160, [%rd1+12];
	// inline asm
	prmt.b32 %r4158, %r4159, %r4160, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4158;
	ld.local.u32 	%r4163, [%rd1+12];
	ld.local.u32 	%r4164, [%rd1+8];
	// inline asm
	prmt.b32 %r4162, %r4163, %r4164, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4162;
	ld.local.u32 	%r4167, [%rd1+8];
	ld.local.u32 	%r4168, [%rd1+4];
	// inline asm
	prmt.b32 %r4166, %r4167, %r4168, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4166;
	ld.local.u32 	%r4171, [%rd1+4];
	ld.local.u32 	%r4172, [%rd1];
	// inline asm
	prmt.b32 %r4170, %r4171, %r4172, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4170;
	ld.local.u32 	%r4175, [%rd1];
	// inline asm
	prmt.b32 %r4174, %r4175, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4174;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd43, 0;
	st.local.u32 	[%rd1+4], %rd43;
	st.local.u32 	[%rd1], %rd43;

BB1_79:
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	mov.u32 	%r9683, %r9672;
	mov.u32 	%r9684, %r9672;

BB1_80:
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	mov.u32 	%r9687, %r9672;
	mov.u32 	%r9688, %r9672;

BB1_81:
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	mov.u32 	%r9691, %r9672;
	mov.u32 	%r9692, %r9672;

BB1_82:
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	mov.u32 	%r9695, %r9672;
	mov.u32 	%r9696, %r9672;

BB1_83:
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	mov.u32 	%r9699, %r9672;
	mov.u32 	%r9700, %r9672;

BB1_84:
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	mov.u32 	%r9703, %r9672;
	mov.u32 	%r9704, %r9672;
	bra.uni 	BB1_89;

BB1_136:
	setp.eq.s32	%p65, %r1, 23;
	@%p65 bra 	BB1_137;
	bra.uni 	BB1_169;

BB1_137:
	ld.local.u32 	%r7587, [%rd3];
	ld.local.u32 	%r7588, [%rd2+12];
	// inline asm
	prmt.b32 %r7586, %r7587, %r7588, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7586;
	ld.local.u32 	%r7591, [%rd2+12];
	ld.local.u32 	%r7592, [%rd2+8];
	// inline asm
	prmt.b32 %r7590, %r7591, %r7592, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7590;
	ld.local.u32 	%r7595, [%rd2+8];
	ld.local.u32 	%r7596, [%rd2+4];
	// inline asm
	prmt.b32 %r7594, %r7595, %r7596, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7594;
	ld.local.u32 	%r7599, [%rd2+4];
	ld.local.u32 	%r7600, [%rd2];
	// inline asm
	prmt.b32 %r7598, %r7599, %r7600, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7598;
	ld.local.u32 	%r7603, [%rd2];
	ld.local.u32 	%r7604, [%rd1+12];
	// inline asm
	prmt.b32 %r7602, %r7603, %r7604, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7602;
	ld.local.u32 	%r7607, [%rd1+12];
	ld.local.u32 	%r7608, [%rd1+8];
	// inline asm
	prmt.b32 %r7606, %r7607, %r7608, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7606;
	ld.local.u32 	%r7611, [%rd1+8];
	ld.local.u32 	%r7612, [%rd1+4];
	// inline asm
	prmt.b32 %r7610, %r7611, %r7612, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7610;
	ld.local.u32 	%r7615, [%rd1+4];
	ld.local.u32 	%r7616, [%rd1];
	// inline asm
	prmt.b32 %r7614, %r7615, %r7616, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7614;
	ld.local.u32 	%r7619, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7618, %r7619, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7618;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2921, 0;
	st.local.u32 	[%rd1+4], %rd2921;
	st.local.u32 	[%rd1], %rd2921;
	bra.uni 	BB1_170;

BB1_48:
	setp.eq.s32	%p18, %r1, 23;
	@%p18 bra 	BB1_49;
	bra.uni 	BB1_87;

BB1_49:
	ld.local.u32 	%r1672, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9693, %r9672, %r1672, %r2;
	// inline asm
	ld.local.u32 	%r1675, [%rd8+12];
	ld.local.u32 	%r1676, [%rd8+8];
	// inline asm
	prmt.b32 %r9694, %r1675, %r1676, %r2;
	// inline asm
	ld.local.u32 	%r1679, [%rd8+8];
	ld.local.u32 	%r1680, [%rd8+4];
	// inline asm
	prmt.b32 %r9695, %r1679, %r1680, %r2;
	// inline asm
	ld.local.u32 	%r1683, [%rd8+4];
	ld.local.u32 	%r1684, [%rd8];
	// inline asm
	prmt.b32 %r9696, %r1683, %r1684, %r2;
	// inline asm
	ld.local.u32 	%r1687, [%rd8];
	ld.local.u32 	%r1688, [%rd7+12];
	// inline asm
	prmt.b32 %r9689, %r1687, %r1688, %r2;
	// inline asm
	ld.local.u32 	%r1691, [%rd7+12];
	ld.local.u32 	%r1692, [%rd7+8];
	// inline asm
	prmt.b32 %r9690, %r1691, %r1692, %r2;
	// inline asm
	ld.local.u32 	%r1695, [%rd7+8];
	ld.local.u32 	%r1696, [%rd7+4];
	// inline asm
	prmt.b32 %r9691, %r1695, %r1696, %r2;
	// inline asm
	ld.local.u32 	%r1699, [%rd7+4];
	ld.local.u32 	%r1700, [%rd7];
	// inline asm
	prmt.b32 %r9692, %r1699, %r1700, %r2;
	// inline asm
	ld.local.u32 	%r1703, [%rd7];
	ld.local.u32 	%r1704, [%rd6+12];
	// inline asm
	prmt.b32 %r9685, %r1703, %r1704, %r2;
	// inline asm
	ld.local.u32 	%r1707, [%rd6+12];
	ld.local.u32 	%r1708, [%rd6+8];
	// inline asm
	prmt.b32 %r9686, %r1707, %r1708, %r2;
	// inline asm
	ld.local.u32 	%r1711, [%rd6+8];
	ld.local.u32 	%r1712, [%rd6+4];
	// inline asm
	prmt.b32 %r9687, %r1711, %r1712, %r2;
	// inline asm
	ld.local.u32 	%r1715, [%rd6+4];
	ld.local.u32 	%r1716, [%rd6];
	// inline asm
	prmt.b32 %r9688, %r1715, %r1716, %r2;
	// inline asm
	ld.local.u32 	%r1719, [%rd6];
	ld.local.u32 	%r1720, [%rd5+12];
	// inline asm
	prmt.b32 %r9681, %r1719, %r1720, %r2;
	// inline asm
	ld.local.u32 	%r1723, [%rd5+12];
	ld.local.u32 	%r1724, [%rd5+8];
	// inline asm
	prmt.b32 %r9682, %r1723, %r1724, %r2;
	// inline asm
	ld.local.u32 	%r1727, [%rd5+8];
	ld.local.u32 	%r1728, [%rd5+4];
	// inline asm
	prmt.b32 %r9683, %r1727, %r1728, %r2;
	// inline asm
	ld.local.u32 	%r1731, [%rd5+4];
	ld.local.u32 	%r1732, [%rd5];
	// inline asm
	prmt.b32 %r9684, %r1731, %r1732, %r2;
	// inline asm
	ld.local.u32 	%r1735, [%rd5];
	ld.local.u32 	%r1736, [%rd4+12];
	// inline asm
	prmt.b32 %r9677, %r1735, %r1736, %r2;
	// inline asm
	ld.local.u32 	%r1739, [%rd4+12];
	ld.local.u32 	%r1740, [%rd4+8];
	// inline asm
	prmt.b32 %r9678, %r1739, %r1740, %r2;
	// inline asm
	ld.local.u32 	%r1743, [%rd4+8];
	ld.local.u32 	%r1744, [%rd4+4];
	// inline asm
	prmt.b32 %r9679, %r1743, %r1744, %r2;
	// inline asm
	ld.local.u32 	%r1747, [%rd4+4];
	ld.local.u32 	%r1748, [%rd4];
	// inline asm
	prmt.b32 %r9680, %r1747, %r1748, %r2;
	// inline asm
	ld.local.u32 	%r1751, [%rd4];
	ld.local.u32 	%r1752, [%rd3+12];
	// inline asm
	prmt.b32 %r9673, %r1751, %r1752, %r2;
	// inline asm
	ld.local.u32 	%r1755, [%rd3+12];
	ld.local.u32 	%r1756, [%rd3+8];
	// inline asm
	prmt.b32 %r9674, %r1755, %r1756, %r2;
	// inline asm
	ld.local.u32 	%r1759, [%rd3+8];
	ld.local.u32 	%r1760, [%rd3+4];
	// inline asm
	prmt.b32 %r9675, %r1759, %r1760, %r2;
	// inline asm
	ld.local.u32 	%r1763, [%rd3+4];
	ld.local.u32 	%r1764, [%rd3];
	// inline asm
	prmt.b32 %r9676, %r1763, %r1764, %r2;
	// inline asm
	ld.local.u32 	%r1767, [%rd3];
	ld.local.u32 	%r1768, [%rd2+12];
	// inline asm
	prmt.b32 %r1766, %r1767, %r1768, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1766;
	ld.local.u32 	%r1771, [%rd2+12];
	ld.local.u32 	%r1772, [%rd2+8];
	// inline asm
	prmt.b32 %r1770, %r1771, %r1772, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1770;
	ld.local.u32 	%r1775, [%rd2+8];
	ld.local.u32 	%r1776, [%rd2+4];
	// inline asm
	prmt.b32 %r1774, %r1775, %r1776, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1774;
	ld.local.u32 	%r1779, [%rd2+4];
	ld.local.u32 	%r1780, [%rd2];
	// inline asm
	prmt.b32 %r1778, %r1779, %r1780, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1778;
	ld.local.u32 	%r1783, [%rd2];
	ld.local.u32 	%r1784, [%rd1+12];
	// inline asm
	prmt.b32 %r1782, %r1783, %r1784, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1782;
	ld.local.u32 	%r1787, [%rd1+12];
	ld.local.u32 	%r1788, [%rd1+8];
	// inline asm
	prmt.b32 %r1786, %r1787, %r1788, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1786;
	ld.local.u32 	%r1791, [%rd1+8];
	ld.local.u32 	%r1792, [%rd1+4];
	// inline asm
	prmt.b32 %r1790, %r1791, %r1792, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1790;
	ld.local.u32 	%r1795, [%rd1+4];
	ld.local.u32 	%r1796, [%rd1];
	// inline asm
	prmt.b32 %r1794, %r1795, %r1796, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1794;
	ld.local.u32 	%r1799, [%rd1];
	// inline asm
	prmt.b32 %r1798, %r1799, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1798;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd27, 0;
	st.local.u32 	[%rd1+4], %rd27;
	st.local.u32 	[%rd1], %rd27;
	bra.uni 	BB1_83;

BB1_120:
	setp.eq.s32	%p77, %r1, 15;
	@%p77 bra 	BB1_121;
	bra.uni 	BB1_169;

BB1_121:
	ld.local.u32 	%r7995, [%rd5];
	ld.local.u32 	%r7996, [%rd4+12];
	// inline asm
	prmt.b32 %r7994, %r7995, %r7996, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7994;
	ld.local.u32 	%r7999, [%rd4+12];
	ld.local.u32 	%r8000, [%rd4+8];
	// inline asm
	prmt.b32 %r7998, %r7999, %r8000, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7998;
	ld.local.u32 	%r8003, [%rd4+8];
	ld.local.u32 	%r8004, [%rd4+4];
	// inline asm
	prmt.b32 %r8002, %r8003, %r8004, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8002;
	ld.local.u32 	%r8007, [%rd4+4];
	ld.local.u32 	%r8008, [%rd4];
	// inline asm
	prmt.b32 %r8006, %r8007, %r8008, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8006;
	ld.local.u32 	%r8011, [%rd4];
	ld.local.u32 	%r8012, [%rd3+12];
	// inline asm
	prmt.b32 %r8010, %r8011, %r8012, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8010;
	ld.local.u32 	%r8015, [%rd3+12];
	ld.local.u32 	%r8016, [%rd3+8];
	// inline asm
	prmt.b32 %r8014, %r8015, %r8016, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8014;
	ld.local.u32 	%r8019, [%rd3+8];
	ld.local.u32 	%r8020, [%rd3+4];
	// inline asm
	prmt.b32 %r8018, %r8019, %r8020, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8018;
	ld.local.u32 	%r8023, [%rd3+4];
	ld.local.u32 	%r8024, [%rd3];
	// inline asm
	prmt.b32 %r8022, %r8023, %r8024, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8022;
	ld.local.u32 	%r8027, [%rd3];
	ld.local.u32 	%r8028, [%rd2+12];
	// inline asm
	prmt.b32 %r8026, %r8027, %r8028, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8026;
	ld.local.u32 	%r8031, [%rd2+12];
	ld.local.u32 	%r8032, [%rd2+8];
	// inline asm
	prmt.b32 %r8030, %r8031, %r8032, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8030;
	ld.local.u32 	%r8035, [%rd2+8];
	ld.local.u32 	%r8036, [%rd2+4];
	// inline asm
	prmt.b32 %r8034, %r8035, %r8036, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8034;
	ld.local.u32 	%r8039, [%rd2+4];
	ld.local.u32 	%r8040, [%rd2];
	// inline asm
	prmt.b32 %r8038, %r8039, %r8040, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8038;
	ld.local.u32 	%r8043, [%rd2];
	ld.local.u32 	%r8044, [%rd1+12];
	// inline asm
	prmt.b32 %r8042, %r8043, %r8044, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8042;
	ld.local.u32 	%r8047, [%rd1+12];
	ld.local.u32 	%r8048, [%rd1+8];
	// inline asm
	prmt.b32 %r8046, %r8047, %r8048, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8046;
	ld.local.u32 	%r8051, [%rd1+8];
	ld.local.u32 	%r8052, [%rd1+4];
	// inline asm
	prmt.b32 %r8050, %r8051, %r8052, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8050;
	ld.local.u32 	%r8055, [%rd1+4];
	ld.local.u32 	%r8056, [%rd1];
	// inline asm
	prmt.b32 %r8054, %r8055, %r8056, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8054;
	ld.local.u32 	%r8059, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8058, %r8059, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8058;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2929, 0;
	st.local.u32 	[%rd1+4], %rd2929;
	st.local.u32 	[%rd1], %rd2929;
	bra.uni 	BB1_170;

BB1_32:
	setp.eq.s32	%p30, %r1, 15;
	@%p30 bra 	BB1_33;
	bra.uni 	BB1_87;

BB1_33:
	ld.local.u32 	%r2828, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9685, %r9672, %r2828, %r2;
	// inline asm
	ld.local.u32 	%r2831, [%rd8+12];
	ld.local.u32 	%r2832, [%rd8+8];
	// inline asm
	prmt.b32 %r9686, %r2831, %r2832, %r2;
	// inline asm
	ld.local.u32 	%r2835, [%rd8+8];
	ld.local.u32 	%r2836, [%rd8+4];
	// inline asm
	prmt.b32 %r9687, %r2835, %r2836, %r2;
	// inline asm
	ld.local.u32 	%r2839, [%rd8+4];
	ld.local.u32 	%r2840, [%rd8];
	// inline asm
	prmt.b32 %r9688, %r2839, %r2840, %r2;
	// inline asm
	ld.local.u32 	%r2843, [%rd8];
	ld.local.u32 	%r2844, [%rd7+12];
	// inline asm
	prmt.b32 %r9681, %r2843, %r2844, %r2;
	// inline asm
	ld.local.u32 	%r2847, [%rd7+12];
	ld.local.u32 	%r2848, [%rd7+8];
	// inline asm
	prmt.b32 %r9682, %r2847, %r2848, %r2;
	// inline asm
	ld.local.u32 	%r2851, [%rd7+8];
	ld.local.u32 	%r2852, [%rd7+4];
	// inline asm
	prmt.b32 %r9683, %r2851, %r2852, %r2;
	// inline asm
	ld.local.u32 	%r2855, [%rd7+4];
	ld.local.u32 	%r2856, [%rd7];
	// inline asm
	prmt.b32 %r9684, %r2855, %r2856, %r2;
	// inline asm
	ld.local.u32 	%r2859, [%rd7];
	ld.local.u32 	%r2860, [%rd6+12];
	// inline asm
	prmt.b32 %r9677, %r2859, %r2860, %r2;
	// inline asm
	ld.local.u32 	%r2863, [%rd6+12];
	ld.local.u32 	%r2864, [%rd6+8];
	// inline asm
	prmt.b32 %r9678, %r2863, %r2864, %r2;
	// inline asm
	ld.local.u32 	%r2867, [%rd6+8];
	ld.local.u32 	%r2868, [%rd6+4];
	// inline asm
	prmt.b32 %r9679, %r2867, %r2868, %r2;
	// inline asm
	ld.local.u32 	%r2871, [%rd6+4];
	ld.local.u32 	%r2872, [%rd6];
	// inline asm
	prmt.b32 %r9680, %r2871, %r2872, %r2;
	// inline asm
	ld.local.u32 	%r2875, [%rd6];
	ld.local.u32 	%r2876, [%rd5+12];
	// inline asm
	prmt.b32 %r9673, %r2875, %r2876, %r2;
	// inline asm
	ld.local.u32 	%r2879, [%rd5+12];
	ld.local.u32 	%r2880, [%rd5+8];
	// inline asm
	prmt.b32 %r9674, %r2879, %r2880, %r2;
	// inline asm
	ld.local.u32 	%r2883, [%rd5+8];
	ld.local.u32 	%r2884, [%rd5+4];
	// inline asm
	prmt.b32 %r9675, %r2883, %r2884, %r2;
	// inline asm
	ld.local.u32 	%r2887, [%rd5+4];
	ld.local.u32 	%r2888, [%rd5];
	// inline asm
	prmt.b32 %r9676, %r2887, %r2888, %r2;
	// inline asm
	ld.local.u32 	%r2891, [%rd5];
	ld.local.u32 	%r2892, [%rd4+12];
	// inline asm
	prmt.b32 %r2890, %r2891, %r2892, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2890;
	ld.local.u32 	%r2895, [%rd4+12];
	ld.local.u32 	%r2896, [%rd4+8];
	// inline asm
	prmt.b32 %r2894, %r2895, %r2896, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2894;
	ld.local.u32 	%r2899, [%rd4+8];
	ld.local.u32 	%r2900, [%rd4+4];
	// inline asm
	prmt.b32 %r2898, %r2899, %r2900, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2898;
	ld.local.u32 	%r2903, [%rd4+4];
	ld.local.u32 	%r2904, [%rd4];
	// inline asm
	prmt.b32 %r2902, %r2903, %r2904, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2902;
	ld.local.u32 	%r2907, [%rd4];
	ld.local.u32 	%r2908, [%rd3+12];
	// inline asm
	prmt.b32 %r2906, %r2907, %r2908, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2906;
	ld.local.u32 	%r2911, [%rd3+12];
	ld.local.u32 	%r2912, [%rd3+8];
	// inline asm
	prmt.b32 %r2910, %r2911, %r2912, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2910;
	ld.local.u32 	%r2915, [%rd3+8];
	ld.local.u32 	%r2916, [%rd3+4];
	// inline asm
	prmt.b32 %r2914, %r2915, %r2916, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2914;
	ld.local.u32 	%r2919, [%rd3+4];
	ld.local.u32 	%r2920, [%rd3];
	// inline asm
	prmt.b32 %r2918, %r2919, %r2920, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2918;
	ld.local.u32 	%r2923, [%rd3];
	ld.local.u32 	%r2924, [%rd2+12];
	// inline asm
	prmt.b32 %r2922, %r2923, %r2924, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2922;
	ld.local.u32 	%r2927, [%rd2+12];
	ld.local.u32 	%r2928, [%rd2+8];
	// inline asm
	prmt.b32 %r2926, %r2927, %r2928, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2926;
	ld.local.u32 	%r2931, [%rd2+8];
	ld.local.u32 	%r2932, [%rd2+4];
	// inline asm
	prmt.b32 %r2930, %r2931, %r2932, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2930;
	ld.local.u32 	%r2935, [%rd2+4];
	ld.local.u32 	%r2936, [%rd2];
	// inline asm
	prmt.b32 %r2934, %r2935, %r2936, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2934;
	ld.local.u32 	%r2939, [%rd2];
	ld.local.u32 	%r2940, [%rd1+12];
	// inline asm
	prmt.b32 %r2938, %r2939, %r2940, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2938;
	ld.local.u32 	%r2943, [%rd1+12];
	ld.local.u32 	%r2944, [%rd1+8];
	// inline asm
	prmt.b32 %r2942, %r2943, %r2944, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2942;
	ld.local.u32 	%r2947, [%rd1+8];
	ld.local.u32 	%r2948, [%rd1+4];
	// inline asm
	prmt.b32 %r2946, %r2947, %r2948, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2946;
	ld.local.u32 	%r2951, [%rd1+4];
	ld.local.u32 	%r2952, [%rd1];
	// inline asm
	prmt.b32 %r2950, %r2951, %r2952, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2950;
	ld.local.u32 	%r2955, [%rd1];
	// inline asm
	prmt.b32 %r2954, %r2955, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r2954;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd35, 0;
	st.local.u32 	[%rd1+4], %rd35;
	st.local.u32 	[%rd1], %rd35;
	bra.uni 	BB1_81;

BB1_151:
	setp.ne.s32	%p54, %r1, 31;
	@%p54 bra 	BB1_169;

	ld.local.u32 	%r7435, [%rd1];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7434, %r7435, %r9705, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7434;
	st.local.u32 	[%rd8+8], %r9705;
	st.local.u32 	[%rd8+4], %r9705;
	st.local.u32 	[%rd8], %r9705;
	st.local.u32 	[%rd7+12], %r9705;
	st.local.u32 	[%rd7+8], %r9705;
	st.local.u32 	[%rd7+4], %r9705;
	st.local.u32 	[%rd7], %r9705;
	st.local.u32 	[%rd6+12], %r9705;
	st.local.u32 	[%rd6+8], %r9705;
	st.local.u32 	[%rd6+4], %r9705;
	st.local.u32 	[%rd6], %r9705;
	st.local.u32 	[%rd5+12], %r9705;
	st.local.u32 	[%rd5+8], %r9705;
	st.local.u32 	[%rd5+4], %r9705;
	st.local.u32 	[%rd5], %r9705;
	st.local.u32 	[%rd4+12], %r9705;
	st.local.u32 	[%rd4+8], %r9705;
	st.local.u32 	[%rd4+4], %r9705;
	st.local.u32 	[%rd4], %r9705;
	st.local.u32 	[%rd3+12], %r9705;
	st.local.u32 	[%rd3+8], %r9705;
	st.local.u32 	[%rd3+4], %r9705;
	st.local.u32 	[%rd3], %r9705;
	st.local.u32 	[%rd2+12], %r9705;
	st.local.u32 	[%rd2+8], %r9705;
	st.local.u32 	[%rd2+4], %r9705;
	st.local.u32 	[%rd2], %r9705;
	st.local.u32 	[%rd1+12], %r9705;
	st.local.u32 	[%rd1+8], %r9705;
	mov.u64 	%rd2913, 0;
	st.local.u32 	[%rd1+4], %rd2913;
	st.local.u32 	[%rd1], %rd2913;
	bra.uni 	BB1_170;

BB1_169:
	ld.local.u32 	%r9705, [%rd1];

BB1_170:
	ld.u32 	%r9577, [%rd9+-128];
	or.b32  	%r9578, %r9577, %r9705;
	ld.u32 	%r9579, [%rd9+-124];
	ld.u32 	%r9580, [%rd9+-120];
	ld.u32 	%r9581, [%rd9+-116];
	ld.u32 	%r9582, [%rd9+-112];
	ld.u32 	%r9583, [%rd9+-108];
	ld.u32 	%r9584, [%rd9+-104];
	ld.u32 	%r9585, [%rd9+-100];
	ld.u32 	%r9586, [%rd9+-96];
	ld.u32 	%r9587, [%rd9+-92];
	ld.u32 	%r9588, [%rd9+-88];
	ld.u32 	%r9589, [%rd9+-84];
	ld.u32 	%r9590, [%rd9+-80];
	ld.u32 	%r9591, [%rd9+-76];
	ld.u32 	%r9592, [%rd9+-72];
	ld.u32 	%r9593, [%rd9+-68];
	ld.u32 	%r9594, [%rd9+-64];
	ld.u32 	%r9595, [%rd9+-60];
	ld.u32 	%r9596, [%rd9+-56];
	ld.u32 	%r9597, [%rd9+-52];
	ld.u32 	%r9598, [%rd9+-48];
	ld.u32 	%r9599, [%rd9+-44];
	ld.u32 	%r9600, [%rd9+-40];
	ld.u32 	%r9601, [%rd9+-36];
	ld.u32 	%r9602, [%rd9+-32];
	ld.u32 	%r9603, [%rd9+-28];
	ld.u32 	%r9604, [%rd9+-24];
	ld.u32 	%r9605, [%rd9+-20];
	ld.u32 	%r9606, [%rd9+-16];
	ld.u32 	%r9607, [%rd9+-12];
	ld.u32 	%r9608, [%rd9+-8];
	ld.u32 	%r9609, [%rd9+-4];
	st.u32 	[%rd9+-128], %r9578;
	ld.local.u32 	%r9610, [%rd1+4];
	or.b32  	%r9611, %r9579, %r9610;
	st.u32 	[%rd9+-124], %r9611;
	ld.local.u32 	%r9612, [%rd1+8];
	or.b32  	%r9613, %r9580, %r9612;
	st.u32 	[%rd9+-120], %r9613;
	ld.local.u32 	%r9614, [%rd1+12];
	or.b32  	%r9615, %r9581, %r9614;
	st.u32 	[%rd9+-116], %r9615;
	ld.local.u32 	%r9616, [%rd2];
	or.b32  	%r9617, %r9582, %r9616;
	st.u32 	[%rd9+-112], %r9617;
	ld.local.u32 	%r9618, [%rd2+4];
	or.b32  	%r9619, %r9583, %r9618;
	st.u32 	[%rd9+-108], %r9619;
	ld.local.u32 	%r9620, [%rd2+8];
	or.b32  	%r9621, %r9584, %r9620;
	st.u32 	[%rd9+-104], %r9621;
	ld.local.u32 	%r9622, [%rd2+12];
	or.b32  	%r9623, %r9585, %r9622;
	st.u32 	[%rd9+-100], %r9623;
	ld.local.u32 	%r9624, [%rd3];
	or.b32  	%r9625, %r9586, %r9624;
	st.u32 	[%rd9+-96], %r9625;
	ld.local.u32 	%r9626, [%rd3+4];
	or.b32  	%r9627, %r9587, %r9626;
	st.u32 	[%rd9+-92], %r9627;
	ld.local.u32 	%r9628, [%rd3+8];
	or.b32  	%r9629, %r9588, %r9628;
	st.u32 	[%rd9+-88], %r9629;
	ld.local.u32 	%r9630, [%rd3+12];
	or.b32  	%r9631, %r9589, %r9630;
	st.u32 	[%rd9+-84], %r9631;
	ld.local.u32 	%r9632, [%rd4];
	or.b32  	%r9633, %r9590, %r9632;
	st.u32 	[%rd9+-80], %r9633;
	ld.local.u32 	%r9634, [%rd4+4];
	or.b32  	%r9635, %r9591, %r9634;
	st.u32 	[%rd9+-76], %r9635;
	ld.local.u32 	%r9636, [%rd4+8];
	or.b32  	%r9637, %r9592, %r9636;
	st.u32 	[%rd9+-72], %r9637;
	ld.local.u32 	%r9638, [%rd4+12];
	or.b32  	%r9639, %r9593, %r9638;
	st.u32 	[%rd9+-68], %r9639;
	ld.local.u32 	%r9640, [%rd5];
	or.b32  	%r9641, %r9594, %r9640;
	st.u32 	[%rd9+-64], %r9641;
	ld.local.u32 	%r9642, [%rd5+4];
	or.b32  	%r9643, %r9595, %r9642;
	st.u32 	[%rd9+-60], %r9643;
	ld.local.u32 	%r9644, [%rd5+8];
	or.b32  	%r9645, %r9596, %r9644;
	st.u32 	[%rd9+-56], %r9645;
	ld.local.u32 	%r9646, [%rd5+12];
	or.b32  	%r9647, %r9597, %r9646;
	st.u32 	[%rd9+-52], %r9647;
	ld.local.u32 	%r9648, [%rd6];
	or.b32  	%r9649, %r9598, %r9648;
	st.u32 	[%rd9+-48], %r9649;
	ld.local.u32 	%r9650, [%rd6+4];
	or.b32  	%r9651, %r9599, %r9650;
	st.u32 	[%rd9+-44], %r9651;
	ld.local.u32 	%r9652, [%rd6+8];
	or.b32  	%r9653, %r9600, %r9652;
	st.u32 	[%rd9+-40], %r9653;
	ld.local.u32 	%r9654, [%rd6+12];
	or.b32  	%r9655, %r9601, %r9654;
	st.u32 	[%rd9+-36], %r9655;
	ld.local.u32 	%r9656, [%rd7];
	or.b32  	%r9657, %r9602, %r9656;
	st.u32 	[%rd9+-32], %r9657;
	ld.local.u32 	%r9658, [%rd7+4];
	or.b32  	%r9659, %r9603, %r9658;
	st.u32 	[%rd9+-28], %r9659;
	ld.local.u32 	%r9660, [%rd7+8];
	or.b32  	%r9661, %r9604, %r9660;
	st.u32 	[%rd9+-24], %r9661;
	ld.local.u32 	%r9662, [%rd7+12];
	or.b32  	%r9663, %r9605, %r9662;
	st.u32 	[%rd9+-20], %r9663;
	ld.local.u32 	%r9664, [%rd8];
	or.b32  	%r9665, %r9606, %r9664;
	st.u32 	[%rd9+-16], %r9665;
	ld.local.u32 	%r9666, [%rd8+4];
	or.b32  	%r9667, %r9607, %r9666;
	st.u32 	[%rd9+-12], %r9667;
	ld.local.u32 	%r9668, [%rd8+8];
	or.b32  	%r9669, %r9608, %r9668;
	st.u32 	[%rd9+-8], %r9669;
	ld.local.u32 	%r9670, [%rd8+12];
	or.b32  	%r9671, %r9609, %r9670;
	st.u32 	[%rd9+-4], %r9671;
	bra.uni 	BB1_171;

BB1_63:
	setp.ne.s32	%p7, %r1, 31;
	@%p7 bra 	BB1_87;

	ld.local.u32 	%r580, [%rd8+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9701, %r9672, %r580, %r2;
	// inline asm
	ld.local.u32 	%r583, [%rd8+12];
	ld.local.u32 	%r584, [%rd8+8];
	// inline asm
	prmt.b32 %r9702, %r583, %r584, %r2;
	// inline asm
	ld.local.u32 	%r587, [%rd8+8];
	ld.local.u32 	%r588, [%rd8+4];
	// inline asm
	prmt.b32 %r9703, %r587, %r588, %r2;
	// inline asm
	ld.local.u32 	%r591, [%rd8+4];
	ld.local.u32 	%r592, [%rd8];
	// inline asm
	prmt.b32 %r9704, %r591, %r592, %r2;
	// inline asm
	ld.local.u32 	%r595, [%rd8];
	ld.local.u32 	%r596, [%rd7+12];
	// inline asm
	prmt.b32 %r9697, %r595, %r596, %r2;
	// inline asm
	ld.local.u32 	%r599, [%rd7+12];
	ld.local.u32 	%r600, [%rd7+8];
	// inline asm
	prmt.b32 %r9698, %r599, %r600, %r2;
	// inline asm
	ld.local.u32 	%r603, [%rd7+8];
	ld.local.u32 	%r604, [%rd7+4];
	// inline asm
	prmt.b32 %r9699, %r603, %r604, %r2;
	// inline asm
	ld.local.u32 	%r607, [%rd7+4];
	ld.local.u32 	%r608, [%rd7];
	// inline asm
	prmt.b32 %r9700, %r607, %r608, %r2;
	// inline asm
	ld.local.u32 	%r611, [%rd7];
	ld.local.u32 	%r612, [%rd6+12];
	// inline asm
	prmt.b32 %r9693, %r611, %r612, %r2;
	// inline asm
	ld.local.u32 	%r615, [%rd6+12];
	ld.local.u32 	%r616, [%rd6+8];
	// inline asm
	prmt.b32 %r9694, %r615, %r616, %r2;
	// inline asm
	ld.local.u32 	%r619, [%rd6+8];
	ld.local.u32 	%r620, [%rd6+4];
	// inline asm
	prmt.b32 %r9695, %r619, %r620, %r2;
	// inline asm
	ld.local.u32 	%r623, [%rd6+4];
	ld.local.u32 	%r624, [%rd6];
	// inline asm
	prmt.b32 %r9696, %r623, %r624, %r2;
	// inline asm
	ld.local.u32 	%r627, [%rd6];
	ld.local.u32 	%r628, [%rd5+12];
	// inline asm
	prmt.b32 %r9689, %r627, %r628, %r2;
	// inline asm
	ld.local.u32 	%r631, [%rd5+12];
	ld.local.u32 	%r632, [%rd5+8];
	// inline asm
	prmt.b32 %r9690, %r631, %r632, %r2;
	// inline asm
	ld.local.u32 	%r635, [%rd5+8];
	ld.local.u32 	%r636, [%rd5+4];
	// inline asm
	prmt.b32 %r9691, %r635, %r636, %r2;
	// inline asm
	ld.local.u32 	%r639, [%rd5+4];
	ld.local.u32 	%r640, [%rd5];
	// inline asm
	prmt.b32 %r9692, %r639, %r640, %r2;
	// inline asm
	ld.local.u32 	%r643, [%rd5];
	ld.local.u32 	%r644, [%rd4+12];
	// inline asm
	prmt.b32 %r9685, %r643, %r644, %r2;
	// inline asm
	ld.local.u32 	%r647, [%rd4+12];
	ld.local.u32 	%r648, [%rd4+8];
	// inline asm
	prmt.b32 %r9686, %r647, %r648, %r2;
	// inline asm
	ld.local.u32 	%r651, [%rd4+8];
	ld.local.u32 	%r652, [%rd4+4];
	// inline asm
	prmt.b32 %r9687, %r651, %r652, %r2;
	// inline asm
	ld.local.u32 	%r655, [%rd4+4];
	ld.local.u32 	%r656, [%rd4];
	// inline asm
	prmt.b32 %r9688, %r655, %r656, %r2;
	// inline asm
	ld.local.u32 	%r659, [%rd4];
	ld.local.u32 	%r660, [%rd3+12];
	// inline asm
	prmt.b32 %r9681, %r659, %r660, %r2;
	// inline asm
	ld.local.u32 	%r663, [%rd3+12];
	ld.local.u32 	%r664, [%rd3+8];
	// inline asm
	prmt.b32 %r9682, %r663, %r664, %r2;
	// inline asm
	ld.local.u32 	%r667, [%rd3+8];
	ld.local.u32 	%r668, [%rd3+4];
	// inline asm
	prmt.b32 %r9683, %r667, %r668, %r2;
	// inline asm
	ld.local.u32 	%r671, [%rd3+4];
	ld.local.u32 	%r672, [%rd3];
	// inline asm
	prmt.b32 %r9684, %r671, %r672, %r2;
	// inline asm
	ld.local.u32 	%r675, [%rd3];
	ld.local.u32 	%r676, [%rd2+12];
	// inline asm
	prmt.b32 %r9677, %r675, %r676, %r2;
	// inline asm
	ld.local.u32 	%r679, [%rd2+12];
	ld.local.u32 	%r680, [%rd2+8];
	// inline asm
	prmt.b32 %r9678, %r679, %r680, %r2;
	// inline asm
	ld.local.u32 	%r683, [%rd2+8];
	ld.local.u32 	%r684, [%rd2+4];
	// inline asm
	prmt.b32 %r9679, %r683, %r684, %r2;
	// inline asm
	ld.local.u32 	%r687, [%rd2+4];
	ld.local.u32 	%r688, [%rd2];
	// inline asm
	prmt.b32 %r9680, %r687, %r688, %r2;
	// inline asm
	ld.local.u32 	%r691, [%rd2];
	ld.local.u32 	%r692, [%rd1+12];
	// inline asm
	prmt.b32 %r9673, %r691, %r692, %r2;
	// inline asm
	ld.local.u32 	%r695, [%rd1+12];
	ld.local.u32 	%r696, [%rd1+8];
	// inline asm
	prmt.b32 %r9674, %r695, %r696, %r2;
	// inline asm
	ld.local.u32 	%r699, [%rd1+8];
	ld.local.u32 	%r700, [%rd1+4];
	// inline asm
	prmt.b32 %r9675, %r699, %r700, %r2;
	// inline asm
	ld.local.u32 	%r703, [%rd1+4];
	ld.local.u32 	%r704, [%rd1];
	// inline asm
	prmt.b32 %r9676, %r703, %r704, %r2;
	// inline asm
	ld.local.u32 	%r707, [%rd1];
	// inline asm
	prmt.b32 %r706, %r707, %r9672, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r706;
	st.local.u32 	[%rd8+8], %r9672;
	st.local.u32 	[%rd8+4], %r9672;
	st.local.u32 	[%rd8], %r9672;
	st.local.u32 	[%rd7+12], %r9672;
	st.local.u32 	[%rd7+8], %r9672;
	st.local.u32 	[%rd7+4], %r9672;
	st.local.u32 	[%rd7], %r9672;
	st.local.u32 	[%rd6+12], %r9672;
	st.local.u32 	[%rd6+8], %r9672;
	st.local.u32 	[%rd6+4], %r9672;
	st.local.u32 	[%rd6], %r9672;
	st.local.u32 	[%rd5+12], %r9672;
	st.local.u32 	[%rd5+8], %r9672;
	st.local.u32 	[%rd5+4], %r9672;
	st.local.u32 	[%rd5], %r9672;
	st.local.u32 	[%rd4+12], %r9672;
	st.local.u32 	[%rd4+8], %r9672;
	st.local.u32 	[%rd4+4], %r9672;
	st.local.u32 	[%rd4], %r9672;
	st.local.u32 	[%rd3+12], %r9672;
	st.local.u32 	[%rd3+8], %r9672;
	st.local.u32 	[%rd3+4], %r9672;
	st.local.u32 	[%rd3], %r9672;
	st.local.u32 	[%rd2+12], %r9672;
	st.local.u32 	[%rd2+8], %r9672;
	st.local.u32 	[%rd2+4], %r9672;
	st.local.u32 	[%rd2], %r9672;
	st.local.u32 	[%rd1+12], %r9672;
	st.local.u32 	[%rd1+8], %r9672;
	mov.u64 	%rd19, 0;
	st.local.u32 	[%rd1+4], %rd19;
	st.local.u32 	[%rd1], %rd19;
	bra.uni 	BB1_89;

BB1_87:
	ld.local.u32 	%r9672, [%rd1];
	mov.u32 	%r9673, 0;
	mov.u32 	%r9674, %r9673;
	mov.u32 	%r9675, %r9673;
	mov.u32 	%r9676, %r9673;

BB1_88:
	mov.u32 	%r9677, %r9673;
	mov.u32 	%r9678, %r9673;
	mov.u32 	%r9679, %r9673;
	mov.u32 	%r9680, %r9673;
	mov.u32 	%r9681, %r9673;
	mov.u32 	%r9682, %r9673;
	mov.u32 	%r9683, %r9673;
	mov.u32 	%r9684, %r9673;
	mov.u32 	%r9685, %r9673;
	mov.u32 	%r9686, %r9673;
	mov.u32 	%r9687, %r9673;
	mov.u32 	%r9688, %r9673;
	mov.u32 	%r9689, %r9673;
	mov.u32 	%r9690, %r9673;
	mov.u32 	%r9691, %r9673;
	mov.u32 	%r9692, %r9673;
	mov.u32 	%r9693, %r9673;
	mov.u32 	%r9694, %r9673;
	mov.u32 	%r9695, %r9673;
	mov.u32 	%r9696, %r9673;
	mov.u32 	%r9697, %r9673;
	mov.u32 	%r9698, %r9673;
	mov.u32 	%r9699, %r9673;
	mov.u32 	%r9700, %r9673;
	mov.u32 	%r9701, %r9673;
	mov.u32 	%r9702, %r9673;
	mov.u32 	%r9703, %r9673;
	mov.u32 	%r9704, %r9673;

BB1_89:
	ld.v2.u32 	{%r5361, %r5362}, [%rd9+-128];
	ld.v2.u32 	{%r5364, %r5365}, [%rd9+-120];
	ld.v2.u32 	{%r5366, %r5367}, [%rd9+-112];
	ld.v2.u32 	{%r5368, %r5369}, [%rd9+-104];
	ld.v2.u32 	{%r5370, %r5371}, [%rd9+-96];
	ld.v2.u32 	{%r5372, %r5373}, [%rd9+-88];
	ld.v2.u32 	{%r5374, %r5375}, [%rd9+-80];
	ld.v2.u32 	{%r5376, %r5377}, [%rd9+-72];
	ld.v2.u32 	{%r5378, %r5379}, [%rd9+-64];
	ld.v2.u32 	{%r5380, %r5381}, [%rd9+-56];
	ld.v2.u32 	{%r5382, %r5383}, [%rd9+-48];
	ld.v2.u32 	{%r5384, %r5385}, [%rd9+-40];
	ld.v2.u32 	{%r5386, %r5387}, [%rd9+-32];
	ld.v2.u32 	{%r5388, %r5389}, [%rd9+-24];
	ld.v2.u32 	{%r5390, %r5391}, [%rd9+-16];
	ld.v2.u32 	{%r5392, %r5393}, [%rd9+-8];
	or.b32  	%r5394, %r5361, %r9672;
	st.u32 	[%rd9+-128], %r5394;
	ld.local.u32 	%r5396, [%rd1+4];
	or.b32  	%r5397, %r5362, %r5396;
	st.u32 	[%rd9+-124], %r5397;
	ld.local.u32 	%r5398, [%rd1+8];
	or.b32  	%r5400, %r5364, %r5398;
	st.u32 	[%rd9+-120], %r5400;
	ld.local.u32 	%r5402, [%rd1+12];
	or.b32  	%r5403, %r5365, %r5402;
	st.u32 	[%rd9+-116], %r5403;
	ld.local.u32 	%r5404, [%rd2];
	or.b32  	%r5406, %r5366, %r5404;
	st.u32 	[%rd9+-112], %r5406;
	ld.local.u32 	%r5408, [%rd2+4];
	or.b32  	%r5409, %r5367, %r5408;
	st.u32 	[%rd9+-108], %r5409;
	ld.local.u32 	%r5410, [%rd2+8];
	or.b32  	%r5412, %r5368, %r5410;
	st.u32 	[%rd9+-104], %r5412;
	ld.local.u32 	%r5414, [%rd2+12];
	or.b32  	%r5415, %r5369, %r5414;
	st.u32 	[%rd9+-100], %r5415;
	ld.local.u32 	%r5416, [%rd3];
	or.b32  	%r5418, %r5370, %r5416;
	st.u32 	[%rd9+-96], %r5418;
	ld.local.u32 	%r5420, [%rd3+4];
	or.b32  	%r5421, %r5371, %r5420;
	st.u32 	[%rd9+-92], %r5421;
	ld.local.u32 	%r5422, [%rd3+8];
	or.b32  	%r5424, %r5372, %r5422;
	st.u32 	[%rd9+-88], %r5424;
	ld.local.u32 	%r5426, [%rd3+12];
	or.b32  	%r5427, %r5373, %r5426;
	st.u32 	[%rd9+-84], %r5427;
	ld.local.u32 	%r5428, [%rd4];
	or.b32  	%r5430, %r5374, %r5428;
	st.u32 	[%rd9+-80], %r5430;
	ld.local.u32 	%r5432, [%rd4+4];
	or.b32  	%r5433, %r5375, %r5432;
	st.u32 	[%rd9+-76], %r5433;
	ld.local.u32 	%r5434, [%rd4+8];
	or.b32  	%r5436, %r5376, %r5434;
	st.u32 	[%rd9+-72], %r5436;
	ld.local.u32 	%r5438, [%rd4+12];
	or.b32  	%r5439, %r5377, %r5438;
	st.u32 	[%rd9+-68], %r5439;
	ld.local.u32 	%r5440, [%rd5];
	or.b32  	%r5442, %r5378, %r5440;
	st.u32 	[%rd9+-64], %r5442;
	ld.local.u32 	%r5444, [%rd5+4];
	or.b32  	%r5445, %r5379, %r5444;
	st.u32 	[%rd9+-60], %r5445;
	ld.local.u32 	%r5446, [%rd5+8];
	or.b32  	%r5448, %r5380, %r5446;
	st.u32 	[%rd9+-56], %r5448;
	ld.local.u32 	%r5450, [%rd5+12];
	or.b32  	%r5451, %r5381, %r5450;
	st.u32 	[%rd9+-52], %r5451;
	ld.local.u32 	%r5452, [%rd6];
	or.b32  	%r5454, %r5382, %r5452;
	st.u32 	[%rd9+-48], %r5454;
	ld.local.u32 	%r5456, [%rd6+4];
	or.b32  	%r5457, %r5383, %r5456;
	st.u32 	[%rd9+-44], %r5457;
	ld.local.u32 	%r5458, [%rd6+8];
	or.b32  	%r5460, %r5384, %r5458;
	st.u32 	[%rd9+-40], %r5460;
	ld.local.u32 	%r5462, [%rd6+12];
	or.b32  	%r5463, %r5385, %r5462;
	st.u32 	[%rd9+-36], %r5463;
	ld.local.u32 	%r5464, [%rd7];
	or.b32  	%r5466, %r5386, %r5464;
	st.u32 	[%rd9+-32], %r5466;
	ld.local.u32 	%r5468, [%rd7+4];
	or.b32  	%r5469, %r5387, %r5468;
	st.u32 	[%rd9+-28], %r5469;
	ld.local.u32 	%r5470, [%rd7+8];
	or.b32  	%r5472, %r5388, %r5470;
	st.u32 	[%rd9+-24], %r5472;
	ld.local.u32 	%r5474, [%rd7+12];
	or.b32  	%r5475, %r5389, %r5474;
	st.u32 	[%rd9+-20], %r5475;
	ld.local.u32 	%r5476, [%rd8];
	or.b32  	%r5478, %r5390, %r5476;
	st.u32 	[%rd9+-16], %r5478;
	ld.local.u32 	%r5480, [%rd8+4];
	or.b32  	%r5481, %r5391, %r5480;
	st.u32 	[%rd9+-12], %r5481;
	ld.local.u32 	%r5482, [%rd8+8];
	or.b32  	%r5484, %r5392, %r5482;
	st.u32 	[%rd9+-8], %r5484;
	ld.local.u32 	%r5486, [%rd8+12];
	mov.b64	%rd49, {%r5397, %r5394};
	mov.b64	%rd50, {%r5403, %r5400};
	mov.b64	%rd51, {%r5409, %r5406};
	mov.b64	%rd52, {%r5415, %r5412};
	mov.b64	%rd53, {%r5421, %r5418};
	mov.b64	%rd54, {%r5427, %r5424};
	mov.b64	%rd55, {%r5433, %r5430};
	mov.b64	%rd56, {%r5439, %r5436};
	mov.b64	%rd57, {%r5445, %r5442};
	mov.b64	%rd58, {%r5451, %r5448};
	mov.b64	%rd59, {%r5457, %r5454};
	mov.b64	%rd60, {%r5463, %r5460};
	mov.b64	%rd61, {%r5469, %r5466};
	mov.b64	%rd62, {%r5475, %r5472};
	mov.b64	%rd63, {%r5481, %r5478};
	or.b32  	%r5487, %r5393, %r5486;
	mov.b64	%rd64, {%r5487, %r5484};
	ld.u64 	%rd65, [%rd9+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5488,%dummy}, %rd65;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5489}, %rd65;
	}
	shf.r.wrap.b32 	%r5490, %r5489, %r5488, 14;
	shf.r.wrap.b32 	%r5491, %r5488, %r5489, 14;
	mov.b64 	%rd66, {%r5491, %r5490};
	shf.r.wrap.b32 	%r5492, %r5489, %r5488, 18;
	shf.r.wrap.b32 	%r5493, %r5488, %r5489, 18;
	mov.b64 	%rd67, {%r5493, %r5492};
	xor.b64  	%rd68, %rd67, %rd66;
	shf.l.wrap.b32 	%r5494, %r5488, %r5489, 23;
	shf.l.wrap.b32 	%r5495, %r5489, %r5488, 23;
	mov.b64 	%rd69, {%r5495, %r5494};
	xor.b64  	%rd70, %rd68, %rd69;
	ld.u64 	%rd71, [%rd9+-144];
	ld.u64 	%rd72, [%rd9+-152];
	xor.b64  	%rd73, %rd71, %rd72;
	and.b64  	%rd74, %rd73, %rd65;
	xor.b64  	%rd75, %rd74, %rd71;
	ld.u64 	%rd76, [%rd9+-136];
	add.s64 	%rd77, %rd75, %rd76;
	add.s64 	%rd78, %rd77, %rd49;
	ld.const.u64 	%rd79, [k_sha512];
	add.s64 	%rd80, %rd78, %rd79;
	add.s64 	%rd81, %rd80, %rd70;
	ld.u64 	%rd82, [%rd9+-168];
	add.s64 	%rd83, %rd81, %rd82;
	ld.u64 	%rd84, [%rd9+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5496,%dummy}, %rd84;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5497}, %rd84;
	}
	shf.r.wrap.b32 	%r5498, %r5497, %r5496, 28;
	shf.r.wrap.b32 	%r5499, %r5496, %r5497, 28;
	mov.b64 	%rd85, {%r5499, %r5498};
	shf.l.wrap.b32 	%r5500, %r5496, %r5497, 30;
	shf.l.wrap.b32 	%r5501, %r5497, %r5496, 30;
	mov.b64 	%rd86, {%r5501, %r5500};
	xor.b64  	%rd87, %rd86, %rd85;
	shf.l.wrap.b32 	%r5502, %r5496, %r5497, 25;
	shf.l.wrap.b32 	%r5503, %r5497, %r5496, 25;
	mov.b64 	%rd88, {%r5503, %r5502};
	xor.b64  	%rd89, %rd87, %rd88;
	ld.u64 	%rd90, [%rd9+-176];
	xor.b64  	%rd91, %rd90, %rd84;
	ld.u64 	%rd92, [%rd9+-184];
	xor.b64  	%rd93, %rd92, %rd84;
	and.b64  	%rd94, %rd91, %rd93;
	xor.b64  	%rd95, %rd94, %rd84;
	add.s64 	%rd96, %rd81, %rd95;
	add.s64 	%rd97, %rd96, %rd89;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5504,%dummy}, %rd83;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5505}, %rd83;
	}
	shf.r.wrap.b32 	%r5506, %r5505, %r5504, 14;
	shf.r.wrap.b32 	%r5507, %r5504, %r5505, 14;
	mov.b64 	%rd98, {%r5507, %r5506};
	shf.r.wrap.b32 	%r5508, %r5505, %r5504, 18;
	shf.r.wrap.b32 	%r5509, %r5504, %r5505, 18;
	mov.b64 	%rd99, {%r5509, %r5508};
	xor.b64  	%rd100, %rd99, %rd98;
	shf.l.wrap.b32 	%r5510, %r5504, %r5505, 23;
	shf.l.wrap.b32 	%r5511, %r5505, %r5504, 23;
	mov.b64 	%rd101, {%r5511, %r5510};
	xor.b64  	%rd102, %rd100, %rd101;
	xor.b64  	%rd103, %rd72, %rd65;
	and.b64  	%rd104, %rd83, %rd103;
	xor.b64  	%rd105, %rd104, %rd72;
	add.s64 	%rd106, %rd50, %rd71;
	ld.const.u64 	%rd107, [k_sha512+8];
	add.s64 	%rd108, %rd106, %rd107;
	add.s64 	%rd109, %rd108, %rd105;
	add.s64 	%rd110, %rd109, %rd102;
	add.s64 	%rd111, %rd110, %rd90;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5512,%dummy}, %rd97;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5513}, %rd97;
	}
	shf.r.wrap.b32 	%r5514, %r5513, %r5512, 28;
	shf.r.wrap.b32 	%r5515, %r5512, %r5513, 28;
	mov.b64 	%rd112, {%r5515, %r5514};
	shf.l.wrap.b32 	%r5516, %r5512, %r5513, 30;
	shf.l.wrap.b32 	%r5517, %r5513, %r5512, 30;
	mov.b64 	%rd113, {%r5517, %r5516};
	xor.b64  	%rd114, %rd113, %rd112;
	shf.l.wrap.b32 	%r5518, %r5512, %r5513, 25;
	shf.l.wrap.b32 	%r5519, %r5513, %r5512, 25;
	mov.b64 	%rd115, {%r5519, %r5518};
	xor.b64  	%rd116, %rd114, %rd115;
	xor.b64  	%rd117, %rd97, %rd92;
	xor.b64  	%rd118, %rd97, %rd84;
	and.b64  	%rd119, %rd118, %rd117;
	xor.b64  	%rd120, %rd119, %rd97;
	add.s64 	%rd121, %rd110, %rd120;
	add.s64 	%rd122, %rd121, %rd116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5520,%dummy}, %rd111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5521}, %rd111;
	}
	shf.r.wrap.b32 	%r5522, %r5521, %r5520, 14;
	shf.r.wrap.b32 	%r5523, %r5520, %r5521, 14;
	mov.b64 	%rd123, {%r5523, %r5522};
	shf.r.wrap.b32 	%r5524, %r5521, %r5520, 18;
	shf.r.wrap.b32 	%r5525, %r5520, %r5521, 18;
	mov.b64 	%rd124, {%r5525, %r5524};
	xor.b64  	%rd125, %rd124, %rd123;
	shf.l.wrap.b32 	%r5526, %r5520, %r5521, 23;
	shf.l.wrap.b32 	%r5527, %r5521, %r5520, 23;
	mov.b64 	%rd126, {%r5527, %r5526};
	xor.b64  	%rd127, %rd125, %rd126;
	xor.b64  	%rd128, %rd83, %rd65;
	and.b64  	%rd129, %rd111, %rd128;
	xor.b64  	%rd130, %rd129, %rd65;
	add.s64 	%rd131, %rd51, %rd72;
	ld.const.u64 	%rd132, [k_sha512+16];
	add.s64 	%rd133, %rd131, %rd132;
	add.s64 	%rd134, %rd133, %rd130;
	add.s64 	%rd135, %rd134, %rd127;
	add.s64 	%rd136, %rd135, %rd92;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5528,%dummy}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5529}, %rd122;
	}
	shf.r.wrap.b32 	%r5530, %r5529, %r5528, 28;
	shf.r.wrap.b32 	%r5531, %r5528, %r5529, 28;
	mov.b64 	%rd137, {%r5531, %r5530};
	shf.l.wrap.b32 	%r5532, %r5528, %r5529, 30;
	shf.l.wrap.b32 	%r5533, %r5529, %r5528, 30;
	mov.b64 	%rd138, {%r5533, %r5532};
	xor.b64  	%rd139, %rd138, %rd137;
	shf.l.wrap.b32 	%r5534, %r5528, %r5529, 25;
	shf.l.wrap.b32 	%r5535, %r5529, %r5528, 25;
	mov.b64 	%rd140, {%r5535, %r5534};
	xor.b64  	%rd141, %rd139, %rd140;
	xor.b64  	%rd142, %rd122, %rd84;
	xor.b64  	%rd143, %rd122, %rd97;
	and.b64  	%rd144, %rd143, %rd142;
	xor.b64  	%rd145, %rd144, %rd122;
	add.s64 	%rd146, %rd135, %rd145;
	add.s64 	%rd147, %rd146, %rd141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5536,%dummy}, %rd136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5537}, %rd136;
	}
	shf.r.wrap.b32 	%r5538, %r5537, %r5536, 14;
	shf.r.wrap.b32 	%r5539, %r5536, %r5537, 14;
	mov.b64 	%rd148, {%r5539, %r5538};
	shf.r.wrap.b32 	%r5540, %r5537, %r5536, 18;
	shf.r.wrap.b32 	%r5541, %r5536, %r5537, 18;
	mov.b64 	%rd149, {%r5541, %r5540};
	xor.b64  	%rd150, %rd149, %rd148;
	shf.l.wrap.b32 	%r5542, %r5536, %r5537, 23;
	shf.l.wrap.b32 	%r5543, %r5537, %r5536, 23;
	mov.b64 	%rd151, {%r5543, %r5542};
	xor.b64  	%rd152, %rd150, %rd151;
	xor.b64  	%rd153, %rd111, %rd83;
	and.b64  	%rd154, %rd136, %rd153;
	xor.b64  	%rd155, %rd154, %rd83;
	add.s64 	%rd156, %rd52, %rd65;
	ld.const.u64 	%rd157, [k_sha512+24];
	add.s64 	%rd158, %rd156, %rd157;
	add.s64 	%rd159, %rd158, %rd155;
	add.s64 	%rd160, %rd159, %rd152;
	add.s64 	%rd161, %rd160, %rd84;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5544,%dummy}, %rd147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5545}, %rd147;
	}
	shf.r.wrap.b32 	%r5546, %r5545, %r5544, 28;
	shf.r.wrap.b32 	%r5547, %r5544, %r5545, 28;
	mov.b64 	%rd162, {%r5547, %r5546};
	shf.l.wrap.b32 	%r5548, %r5544, %r5545, 30;
	shf.l.wrap.b32 	%r5549, %r5545, %r5544, 30;
	mov.b64 	%rd163, {%r5549, %r5548};
	xor.b64  	%rd164, %rd163, %rd162;
	shf.l.wrap.b32 	%r5550, %r5544, %r5545, 25;
	shf.l.wrap.b32 	%r5551, %r5545, %r5544, 25;
	mov.b64 	%rd165, {%r5551, %r5550};
	xor.b64  	%rd166, %rd164, %rd165;
	xor.b64  	%rd167, %rd147, %rd97;
	xor.b64  	%rd168, %rd147, %rd122;
	and.b64  	%rd169, %rd168, %rd167;
	xor.b64  	%rd170, %rd169, %rd147;
	add.s64 	%rd171, %rd160, %rd170;
	add.s64 	%rd172, %rd171, %rd166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5552,%dummy}, %rd161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5553}, %rd161;
	}
	shf.r.wrap.b32 	%r5554, %r5553, %r5552, 14;
	shf.r.wrap.b32 	%r5555, %r5552, %r5553, 14;
	mov.b64 	%rd173, {%r5555, %r5554};
	shf.r.wrap.b32 	%r5556, %r5553, %r5552, 18;
	shf.r.wrap.b32 	%r5557, %r5552, %r5553, 18;
	mov.b64 	%rd174, {%r5557, %r5556};
	xor.b64  	%rd175, %rd174, %rd173;
	shf.l.wrap.b32 	%r5558, %r5552, %r5553, 23;
	shf.l.wrap.b32 	%r5559, %r5553, %r5552, 23;
	mov.b64 	%rd176, {%r5559, %r5558};
	xor.b64  	%rd177, %rd175, %rd176;
	xor.b64  	%rd178, %rd136, %rd111;
	and.b64  	%rd179, %rd161, %rd178;
	xor.b64  	%rd180, %rd179, %rd111;
	add.s64 	%rd181, %rd83, %rd53;
	ld.const.u64 	%rd182, [k_sha512+32];
	add.s64 	%rd183, %rd181, %rd182;
	add.s64 	%rd184, %rd183, %rd180;
	add.s64 	%rd185, %rd184, %rd177;
	add.s64 	%rd186, %rd185, %rd97;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5560,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd172;
	}
	shf.r.wrap.b32 	%r5562, %r5561, %r5560, 28;
	shf.r.wrap.b32 	%r5563, %r5560, %r5561, 28;
	mov.b64 	%rd187, {%r5563, %r5562};
	shf.l.wrap.b32 	%r5564, %r5560, %r5561, 30;
	shf.l.wrap.b32 	%r5565, %r5561, %r5560, 30;
	mov.b64 	%rd188, {%r5565, %r5564};
	xor.b64  	%rd189, %rd188, %rd187;
	shf.l.wrap.b32 	%r5566, %r5560, %r5561, 25;
	shf.l.wrap.b32 	%r5567, %r5561, %r5560, 25;
	mov.b64 	%rd190, {%r5567, %r5566};
	xor.b64  	%rd191, %rd189, %rd190;
	xor.b64  	%rd192, %rd172, %rd122;
	xor.b64  	%rd193, %rd172, %rd147;
	and.b64  	%rd194, %rd193, %rd192;
	xor.b64  	%rd195, %rd194, %rd172;
	add.s64 	%rd196, %rd185, %rd195;
	add.s64 	%rd197, %rd196, %rd191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5568,%dummy}, %rd186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd186;
	}
	shf.r.wrap.b32 	%r5570, %r5569, %r5568, 14;
	shf.r.wrap.b32 	%r5571, %r5568, %r5569, 14;
	mov.b64 	%rd198, {%r5571, %r5570};
	shf.r.wrap.b32 	%r5572, %r5569, %r5568, 18;
	shf.r.wrap.b32 	%r5573, %r5568, %r5569, 18;
	mov.b64 	%rd199, {%r5573, %r5572};
	xor.b64  	%rd200, %rd199, %rd198;
	shf.l.wrap.b32 	%r5574, %r5568, %r5569, 23;
	shf.l.wrap.b32 	%r5575, %r5569, %r5568, 23;
	mov.b64 	%rd201, {%r5575, %r5574};
	xor.b64  	%rd202, %rd200, %rd201;
	xor.b64  	%rd203, %rd161, %rd136;
	and.b64  	%rd204, %rd186, %rd203;
	xor.b64  	%rd205, %rd204, %rd136;
	add.s64 	%rd206, %rd111, %rd54;
	ld.const.u64 	%rd207, [k_sha512+40];
	add.s64 	%rd208, %rd206, %rd207;
	add.s64 	%rd209, %rd208, %rd205;
	add.s64 	%rd210, %rd209, %rd202;
	add.s64 	%rd211, %rd210, %rd122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5576,%dummy}, %rd197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5577}, %rd197;
	}
	shf.r.wrap.b32 	%r5578, %r5577, %r5576, 28;
	shf.r.wrap.b32 	%r5579, %r5576, %r5577, 28;
	mov.b64 	%rd212, {%r5579, %r5578};
	shf.l.wrap.b32 	%r5580, %r5576, %r5577, 30;
	shf.l.wrap.b32 	%r5581, %r5577, %r5576, 30;
	mov.b64 	%rd213, {%r5581, %r5580};
	xor.b64  	%rd214, %rd213, %rd212;
	shf.l.wrap.b32 	%r5582, %r5576, %r5577, 25;
	shf.l.wrap.b32 	%r5583, %r5577, %r5576, 25;
	mov.b64 	%rd215, {%r5583, %r5582};
	xor.b64  	%rd216, %rd214, %rd215;
	xor.b64  	%rd217, %rd197, %rd147;
	xor.b64  	%rd218, %rd197, %rd172;
	and.b64  	%rd219, %rd218, %rd217;
	xor.b64  	%rd220, %rd219, %rd197;
	add.s64 	%rd221, %rd210, %rd220;
	add.s64 	%rd222, %rd221, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5584,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5585}, %rd211;
	}
	shf.r.wrap.b32 	%r5586, %r5585, %r5584, 14;
	shf.r.wrap.b32 	%r5587, %r5584, %r5585, 14;
	mov.b64 	%rd223, {%r5587, %r5586};
	shf.r.wrap.b32 	%r5588, %r5585, %r5584, 18;
	shf.r.wrap.b32 	%r5589, %r5584, %r5585, 18;
	mov.b64 	%rd224, {%r5589, %r5588};
	xor.b64  	%rd225, %rd224, %rd223;
	shf.l.wrap.b32 	%r5590, %r5584, %r5585, 23;
	shf.l.wrap.b32 	%r5591, %r5585, %r5584, 23;
	mov.b64 	%rd226, {%r5591, %r5590};
	xor.b64  	%rd227, %rd225, %rd226;
	xor.b64  	%rd228, %rd186, %rd161;
	and.b64  	%rd229, %rd211, %rd228;
	xor.b64  	%rd230, %rd229, %rd161;
	add.s64 	%rd231, %rd136, %rd55;
	ld.const.u64 	%rd232, [k_sha512+48];
	add.s64 	%rd233, %rd231, %rd232;
	add.s64 	%rd234, %rd233, %rd230;
	add.s64 	%rd235, %rd234, %rd227;
	add.s64 	%rd236, %rd235, %rd147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5592,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5593}, %rd222;
	}
	shf.r.wrap.b32 	%r5594, %r5593, %r5592, 28;
	shf.r.wrap.b32 	%r5595, %r5592, %r5593, 28;
	mov.b64 	%rd237, {%r5595, %r5594};
	shf.l.wrap.b32 	%r5596, %r5592, %r5593, 30;
	shf.l.wrap.b32 	%r5597, %r5593, %r5592, 30;
	mov.b64 	%rd238, {%r5597, %r5596};
	xor.b64  	%rd239, %rd238, %rd237;
	shf.l.wrap.b32 	%r5598, %r5592, %r5593, 25;
	shf.l.wrap.b32 	%r5599, %r5593, %r5592, 25;
	mov.b64 	%rd240, {%r5599, %r5598};
	xor.b64  	%rd241, %rd239, %rd240;
	xor.b64  	%rd242, %rd222, %rd172;
	xor.b64  	%rd243, %rd222, %rd197;
	and.b64  	%rd244, %rd243, %rd242;
	xor.b64  	%rd245, %rd244, %rd222;
	add.s64 	%rd246, %rd235, %rd245;
	add.s64 	%rd247, %rd246, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5600,%dummy}, %rd236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5601}, %rd236;
	}
	shf.r.wrap.b32 	%r5602, %r5601, %r5600, 14;
	shf.r.wrap.b32 	%r5603, %r5600, %r5601, 14;
	mov.b64 	%rd248, {%r5603, %r5602};
	shf.r.wrap.b32 	%r5604, %r5601, %r5600, 18;
	shf.r.wrap.b32 	%r5605, %r5600, %r5601, 18;
	mov.b64 	%rd249, {%r5605, %r5604};
	xor.b64  	%rd250, %rd249, %rd248;
	shf.l.wrap.b32 	%r5606, %r5600, %r5601, 23;
	shf.l.wrap.b32 	%r5607, %r5601, %r5600, 23;
	mov.b64 	%rd251, {%r5607, %r5606};
	xor.b64  	%rd252, %rd250, %rd251;
	xor.b64  	%rd253, %rd211, %rd186;
	and.b64  	%rd254, %rd236, %rd253;
	xor.b64  	%rd255, %rd254, %rd186;
	add.s64 	%rd256, %rd161, %rd56;
	ld.const.u64 	%rd257, [k_sha512+56];
	add.s64 	%rd258, %rd256, %rd257;
	add.s64 	%rd259, %rd258, %rd255;
	add.s64 	%rd260, %rd259, %rd252;
	add.s64 	%rd261, %rd260, %rd172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5608,%dummy}, %rd247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5609}, %rd247;
	}
	shf.r.wrap.b32 	%r5610, %r5609, %r5608, 28;
	shf.r.wrap.b32 	%r5611, %r5608, %r5609, 28;
	mov.b64 	%rd262, {%r5611, %r5610};
	shf.l.wrap.b32 	%r5612, %r5608, %r5609, 30;
	shf.l.wrap.b32 	%r5613, %r5609, %r5608, 30;
	mov.b64 	%rd263, {%r5613, %r5612};
	xor.b64  	%rd264, %rd263, %rd262;
	shf.l.wrap.b32 	%r5614, %r5608, %r5609, 25;
	shf.l.wrap.b32 	%r5615, %r5609, %r5608, 25;
	mov.b64 	%rd265, {%r5615, %r5614};
	xor.b64  	%rd266, %rd264, %rd265;
	xor.b64  	%rd267, %rd247, %rd197;
	xor.b64  	%rd268, %rd247, %rd222;
	and.b64  	%rd269, %rd268, %rd267;
	xor.b64  	%rd270, %rd269, %rd247;
	add.s64 	%rd271, %rd260, %rd270;
	add.s64 	%rd272, %rd271, %rd266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5616,%dummy}, %rd261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5617}, %rd261;
	}
	shf.r.wrap.b32 	%r5618, %r5617, %r5616, 14;
	shf.r.wrap.b32 	%r5619, %r5616, %r5617, 14;
	mov.b64 	%rd273, {%r5619, %r5618};
	shf.r.wrap.b32 	%r5620, %r5617, %r5616, 18;
	shf.r.wrap.b32 	%r5621, %r5616, %r5617, 18;
	mov.b64 	%rd274, {%r5621, %r5620};
	xor.b64  	%rd275, %rd274, %rd273;
	shf.l.wrap.b32 	%r5622, %r5616, %r5617, 23;
	shf.l.wrap.b32 	%r5623, %r5617, %r5616, 23;
	mov.b64 	%rd276, {%r5623, %r5622};
	xor.b64  	%rd277, %rd275, %rd276;
	xor.b64  	%rd278, %rd236, %rd211;
	and.b64  	%rd279, %rd261, %rd278;
	xor.b64  	%rd280, %rd279, %rd211;
	add.s64 	%rd281, %rd186, %rd57;
	ld.const.u64 	%rd282, [k_sha512+64];
	add.s64 	%rd283, %rd281, %rd282;
	add.s64 	%rd284, %rd283, %rd280;
	add.s64 	%rd285, %rd284, %rd277;
	add.s64 	%rd286, %rd285, %rd197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5624,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5625}, %rd272;
	}
	shf.r.wrap.b32 	%r5626, %r5625, %r5624, 28;
	shf.r.wrap.b32 	%r5627, %r5624, %r5625, 28;
	mov.b64 	%rd287, {%r5627, %r5626};
	shf.l.wrap.b32 	%r5628, %r5624, %r5625, 30;
	shf.l.wrap.b32 	%r5629, %r5625, %r5624, 30;
	mov.b64 	%rd288, {%r5629, %r5628};
	xor.b64  	%rd289, %rd288, %rd287;
	shf.l.wrap.b32 	%r5630, %r5624, %r5625, 25;
	shf.l.wrap.b32 	%r5631, %r5625, %r5624, 25;
	mov.b64 	%rd290, {%r5631, %r5630};
	xor.b64  	%rd291, %rd289, %rd290;
	xor.b64  	%rd292, %rd272, %rd222;
	xor.b64  	%rd293, %rd272, %rd247;
	and.b64  	%rd294, %rd293, %rd292;
	xor.b64  	%rd295, %rd294, %rd272;
	add.s64 	%rd296, %rd285, %rd295;
	add.s64 	%rd297, %rd296, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5632,%dummy}, %rd286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5633}, %rd286;
	}
	shf.r.wrap.b32 	%r5634, %r5633, %r5632, 14;
	shf.r.wrap.b32 	%r5635, %r5632, %r5633, 14;
	mov.b64 	%rd298, {%r5635, %r5634};
	shf.r.wrap.b32 	%r5636, %r5633, %r5632, 18;
	shf.r.wrap.b32 	%r5637, %r5632, %r5633, 18;
	mov.b64 	%rd299, {%r5637, %r5636};
	xor.b64  	%rd300, %rd299, %rd298;
	shf.l.wrap.b32 	%r5638, %r5632, %r5633, 23;
	shf.l.wrap.b32 	%r5639, %r5633, %r5632, 23;
	mov.b64 	%rd301, {%r5639, %r5638};
	xor.b64  	%rd302, %rd300, %rd301;
	xor.b64  	%rd303, %rd261, %rd236;
	and.b64  	%rd304, %rd286, %rd303;
	xor.b64  	%rd305, %rd304, %rd236;
	add.s64 	%rd306, %rd211, %rd58;
	ld.const.u64 	%rd307, [k_sha512+72];
	add.s64 	%rd308, %rd306, %rd307;
	add.s64 	%rd309, %rd308, %rd305;
	add.s64 	%rd310, %rd309, %rd302;
	add.s64 	%rd311, %rd310, %rd222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5640,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5641}, %rd297;
	}
	shf.r.wrap.b32 	%r5642, %r5641, %r5640, 28;
	shf.r.wrap.b32 	%r5643, %r5640, %r5641, 28;
	mov.b64 	%rd312, {%r5643, %r5642};
	shf.l.wrap.b32 	%r5644, %r5640, %r5641, 30;
	shf.l.wrap.b32 	%r5645, %r5641, %r5640, 30;
	mov.b64 	%rd313, {%r5645, %r5644};
	xor.b64  	%rd314, %rd313, %rd312;
	shf.l.wrap.b32 	%r5646, %r5640, %r5641, 25;
	shf.l.wrap.b32 	%r5647, %r5641, %r5640, 25;
	mov.b64 	%rd315, {%r5647, %r5646};
	xor.b64  	%rd316, %rd314, %rd315;
	xor.b64  	%rd317, %rd297, %rd247;
	xor.b64  	%rd318, %rd297, %rd272;
	and.b64  	%rd319, %rd318, %rd317;
	xor.b64  	%rd320, %rd319, %rd297;
	add.s64 	%rd321, %rd310, %rd320;
	add.s64 	%rd322, %rd321, %rd316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5648,%dummy}, %rd311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd311;
	}
	shf.r.wrap.b32 	%r5650, %r5649, %r5648, 14;
	shf.r.wrap.b32 	%r5651, %r5648, %r5649, 14;
	mov.b64 	%rd323, {%r5651, %r5650};
	shf.r.wrap.b32 	%r5652, %r5649, %r5648, 18;
	shf.r.wrap.b32 	%r5653, %r5648, %r5649, 18;
	mov.b64 	%rd324, {%r5653, %r5652};
	xor.b64  	%rd325, %rd324, %rd323;
	shf.l.wrap.b32 	%r5654, %r5648, %r5649, 23;
	shf.l.wrap.b32 	%r5655, %r5649, %r5648, 23;
	mov.b64 	%rd326, {%r5655, %r5654};
	xor.b64  	%rd327, %rd325, %rd326;
	xor.b64  	%rd328, %rd286, %rd261;
	and.b64  	%rd329, %rd311, %rd328;
	xor.b64  	%rd330, %rd329, %rd261;
	add.s64 	%rd331, %rd236, %rd59;
	ld.const.u64 	%rd332, [k_sha512+80];
	add.s64 	%rd333, %rd331, %rd332;
	add.s64 	%rd334, %rd333, %rd330;
	add.s64 	%rd335, %rd334, %rd327;
	add.s64 	%rd336, %rd335, %rd247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd322;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 28;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 28;
	mov.b64 	%rd337, {%r5659, %r5658};
	shf.l.wrap.b32 	%r5660, %r5656, %r5657, 30;
	shf.l.wrap.b32 	%r5661, %r5657, %r5656, 30;
	mov.b64 	%rd338, {%r5661, %r5660};
	xor.b64  	%rd339, %rd338, %rd337;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 25;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 25;
	mov.b64 	%rd340, {%r5663, %r5662};
	xor.b64  	%rd341, %rd339, %rd340;
	xor.b64  	%rd342, %rd322, %rd272;
	xor.b64  	%rd343, %rd322, %rd297;
	and.b64  	%rd344, %rd343, %rd342;
	xor.b64  	%rd345, %rd344, %rd322;
	add.s64 	%rd346, %rd335, %rd345;
	add.s64 	%rd347, %rd346, %rd341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd336;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 14;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 14;
	mov.b64 	%rd348, {%r5667, %r5666};
	shf.r.wrap.b32 	%r5668, %r5665, %r5664, 18;
	shf.r.wrap.b32 	%r5669, %r5664, %r5665, 18;
	mov.b64 	%rd349, {%r5669, %r5668};
	xor.b64  	%rd350, %rd349, %rd348;
	shf.l.wrap.b32 	%r5670, %r5664, %r5665, 23;
	shf.l.wrap.b32 	%r5671, %r5665, %r5664, 23;
	mov.b64 	%rd351, {%r5671, %r5670};
	xor.b64  	%rd352, %rd350, %rd351;
	xor.b64  	%rd353, %rd311, %rd286;
	and.b64  	%rd354, %rd336, %rd353;
	xor.b64  	%rd355, %rd354, %rd286;
	add.s64 	%rd356, %rd261, %rd60;
	ld.const.u64 	%rd357, [k_sha512+88];
	add.s64 	%rd358, %rd356, %rd357;
	add.s64 	%rd359, %rd358, %rd355;
	add.s64 	%rd360, %rd359, %rd352;
	add.s64 	%rd361, %rd360, %rd272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5672,%dummy}, %rd347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd347;
	}
	shf.r.wrap.b32 	%r5674, %r5673, %r5672, 28;
	shf.r.wrap.b32 	%r5675, %r5672, %r5673, 28;
	mov.b64 	%rd362, {%r5675, %r5674};
	shf.l.wrap.b32 	%r5676, %r5672, %r5673, 30;
	shf.l.wrap.b32 	%r5677, %r5673, %r5672, 30;
	mov.b64 	%rd363, {%r5677, %r5676};
	xor.b64  	%rd364, %rd363, %rd362;
	shf.l.wrap.b32 	%r5678, %r5672, %r5673, 25;
	shf.l.wrap.b32 	%r5679, %r5673, %r5672, 25;
	mov.b64 	%rd365, {%r5679, %r5678};
	xor.b64  	%rd366, %rd364, %rd365;
	xor.b64  	%rd367, %rd347, %rd297;
	xor.b64  	%rd368, %rd347, %rd322;
	and.b64  	%rd369, %rd368, %rd367;
	xor.b64  	%rd370, %rd369, %rd347;
	add.s64 	%rd371, %rd360, %rd370;
	add.s64 	%rd372, %rd371, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5680,%dummy}, %rd361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd361;
	}
	shf.r.wrap.b32 	%r5682, %r5681, %r5680, 14;
	shf.r.wrap.b32 	%r5683, %r5680, %r5681, 14;
	mov.b64 	%rd373, {%r5683, %r5682};
	shf.r.wrap.b32 	%r5684, %r5681, %r5680, 18;
	shf.r.wrap.b32 	%r5685, %r5680, %r5681, 18;
	mov.b64 	%rd374, {%r5685, %r5684};
	xor.b64  	%rd375, %rd374, %rd373;
	shf.l.wrap.b32 	%r5686, %r5680, %r5681, 23;
	shf.l.wrap.b32 	%r5687, %r5681, %r5680, 23;
	mov.b64 	%rd376, {%r5687, %r5686};
	xor.b64  	%rd377, %rd375, %rd376;
	xor.b64  	%rd378, %rd336, %rd311;
	and.b64  	%rd379, %rd361, %rd378;
	xor.b64  	%rd380, %rd379, %rd311;
	add.s64 	%rd381, %rd286, %rd61;
	ld.const.u64 	%rd382, [k_sha512+96];
	add.s64 	%rd383, %rd381, %rd382;
	add.s64 	%rd384, %rd383, %rd380;
	add.s64 	%rd385, %rd384, %rd377;
	add.s64 	%rd386, %rd385, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5688,%dummy}, %rd372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5689}, %rd372;
	}
	shf.r.wrap.b32 	%r5690, %r5689, %r5688, 28;
	shf.r.wrap.b32 	%r5691, %r5688, %r5689, 28;
	mov.b64 	%rd387, {%r5691, %r5690};
	shf.l.wrap.b32 	%r5692, %r5688, %r5689, 30;
	shf.l.wrap.b32 	%r5693, %r5689, %r5688, 30;
	mov.b64 	%rd388, {%r5693, %r5692};
	xor.b64  	%rd389, %rd388, %rd387;
	shf.l.wrap.b32 	%r5694, %r5688, %r5689, 25;
	shf.l.wrap.b32 	%r5695, %r5689, %r5688, 25;
	mov.b64 	%rd390, {%r5695, %r5694};
	xor.b64  	%rd391, %rd389, %rd390;
	xor.b64  	%rd392, %rd372, %rd322;
	xor.b64  	%rd393, %rd372, %rd347;
	and.b64  	%rd394, %rd393, %rd392;
	xor.b64  	%rd395, %rd394, %rd372;
	add.s64 	%rd396, %rd385, %rd395;
	add.s64 	%rd397, %rd396, %rd391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5696,%dummy}, %rd386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5697}, %rd386;
	}
	shf.r.wrap.b32 	%r5698, %r5697, %r5696, 14;
	shf.r.wrap.b32 	%r5699, %r5696, %r5697, 14;
	mov.b64 	%rd398, {%r5699, %r5698};
	shf.r.wrap.b32 	%r5700, %r5697, %r5696, 18;
	shf.r.wrap.b32 	%r5701, %r5696, %r5697, 18;
	mov.b64 	%rd399, {%r5701, %r5700};
	xor.b64  	%rd400, %rd399, %rd398;
	shf.l.wrap.b32 	%r5702, %r5696, %r5697, 23;
	shf.l.wrap.b32 	%r5703, %r5697, %r5696, 23;
	mov.b64 	%rd401, {%r5703, %r5702};
	xor.b64  	%rd402, %rd400, %rd401;
	xor.b64  	%rd403, %rd361, %rd336;
	and.b64  	%rd404, %rd386, %rd403;
	xor.b64  	%rd405, %rd404, %rd336;
	add.s64 	%rd406, %rd311, %rd62;
	ld.const.u64 	%rd407, [k_sha512+104];
	add.s64 	%rd408, %rd406, %rd407;
	add.s64 	%rd409, %rd408, %rd405;
	add.s64 	%rd410, %rd409, %rd402;
	add.s64 	%rd411, %rd410, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5704,%dummy}, %rd397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd397;
	}
	shf.r.wrap.b32 	%r5706, %r5705, %r5704, 28;
	shf.r.wrap.b32 	%r5707, %r5704, %r5705, 28;
	mov.b64 	%rd412, {%r5707, %r5706};
	shf.l.wrap.b32 	%r5708, %r5704, %r5705, 30;
	shf.l.wrap.b32 	%r5709, %r5705, %r5704, 30;
	mov.b64 	%rd413, {%r5709, %r5708};
	xor.b64  	%rd414, %rd413, %rd412;
	shf.l.wrap.b32 	%r5710, %r5704, %r5705, 25;
	shf.l.wrap.b32 	%r5711, %r5705, %r5704, 25;
	mov.b64 	%rd415, {%r5711, %r5710};
	xor.b64  	%rd416, %rd414, %rd415;
	xor.b64  	%rd417, %rd397, %rd347;
	xor.b64  	%rd418, %rd397, %rd372;
	and.b64  	%rd419, %rd418, %rd417;
	xor.b64  	%rd420, %rd419, %rd397;
	add.s64 	%rd421, %rd410, %rd420;
	add.s64 	%rd422, %rd421, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5712,%dummy}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5713}, %rd411;
	}
	shf.r.wrap.b32 	%r5714, %r5713, %r5712, 14;
	shf.r.wrap.b32 	%r5715, %r5712, %r5713, 14;
	mov.b64 	%rd423, {%r5715, %r5714};
	shf.r.wrap.b32 	%r5716, %r5713, %r5712, 18;
	shf.r.wrap.b32 	%r5717, %r5712, %r5713, 18;
	mov.b64 	%rd424, {%r5717, %r5716};
	xor.b64  	%rd425, %rd424, %rd423;
	shf.l.wrap.b32 	%r5718, %r5712, %r5713, 23;
	shf.l.wrap.b32 	%r5719, %r5713, %r5712, 23;
	mov.b64 	%rd426, {%r5719, %r5718};
	xor.b64  	%rd427, %rd425, %rd426;
	xor.b64  	%rd428, %rd386, %rd361;
	and.b64  	%rd429, %rd411, %rd428;
	xor.b64  	%rd430, %rd429, %rd361;
	add.s64 	%rd431, %rd336, %rd63;
	ld.const.u64 	%rd432, [k_sha512+112];
	add.s64 	%rd433, %rd431, %rd432;
	add.s64 	%rd434, %rd433, %rd430;
	add.s64 	%rd435, %rd434, %rd427;
	add.s64 	%rd436, %rd435, %rd347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5720,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd422;
	}
	shf.r.wrap.b32 	%r5722, %r5721, %r5720, 28;
	shf.r.wrap.b32 	%r5723, %r5720, %r5721, 28;
	mov.b64 	%rd437, {%r5723, %r5722};
	shf.l.wrap.b32 	%r5724, %r5720, %r5721, 30;
	shf.l.wrap.b32 	%r5725, %r5721, %r5720, 30;
	mov.b64 	%rd438, {%r5725, %r5724};
	xor.b64  	%rd439, %rd438, %rd437;
	shf.l.wrap.b32 	%r5726, %r5720, %r5721, 25;
	shf.l.wrap.b32 	%r5727, %r5721, %r5720, 25;
	mov.b64 	%rd440, {%r5727, %r5726};
	xor.b64  	%rd441, %rd439, %rd440;
	xor.b64  	%rd442, %rd422, %rd372;
	xor.b64  	%rd443, %rd422, %rd397;
	and.b64  	%rd444, %rd443, %rd442;
	xor.b64  	%rd445, %rd444, %rd422;
	add.s64 	%rd446, %rd435, %rd445;
	add.s64 	%rd447, %rd446, %rd441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5728,%dummy}, %rd436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5729}, %rd436;
	}
	shf.r.wrap.b32 	%r5730, %r5729, %r5728, 14;
	shf.r.wrap.b32 	%r5731, %r5728, %r5729, 14;
	mov.b64 	%rd448, {%r5731, %r5730};
	shf.r.wrap.b32 	%r5732, %r5729, %r5728, 18;
	shf.r.wrap.b32 	%r5733, %r5728, %r5729, 18;
	mov.b64 	%rd449, {%r5733, %r5732};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r5734, %r5728, %r5729, 23;
	shf.l.wrap.b32 	%r5735, %r5729, %r5728, 23;
	mov.b64 	%rd451, {%r5735, %r5734};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd411, %rd386;
	and.b64  	%rd454, %rd436, %rd453;
	xor.b64  	%rd455, %rd454, %rd386;
	add.s64 	%rd456, %rd361, %rd64;
	ld.const.u64 	%rd457, [k_sha512+120];
	add.s64 	%rd458, %rd456, %rd457;
	add.s64 	%rd459, %rd458, %rd455;
	add.s64 	%rd460, %rd459, %rd452;
	add.s64 	%rd461, %rd460, %rd372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5736,%dummy}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5737}, %rd447;
	}
	shf.r.wrap.b32 	%r5738, %r5737, %r5736, 28;
	shf.r.wrap.b32 	%r5739, %r5736, %r5737, 28;
	mov.b64 	%rd462, {%r5739, %r5738};
	shf.l.wrap.b32 	%r5740, %r5736, %r5737, 30;
	shf.l.wrap.b32 	%r5741, %r5737, %r5736, 30;
	mov.b64 	%rd463, {%r5741, %r5740};
	xor.b64  	%rd464, %rd463, %rd462;
	shf.l.wrap.b32 	%r5742, %r5736, %r5737, 25;
	shf.l.wrap.b32 	%r5743, %r5737, %r5736, 25;
	mov.b64 	%rd465, {%r5743, %r5742};
	xor.b64  	%rd466, %rd464, %rd465;
	xor.b64  	%rd467, %rd447, %rd397;
	xor.b64  	%rd468, %rd447, %rd422;
	and.b64  	%rd469, %rd468, %rd467;
	xor.b64  	%rd470, %rd469, %rd447;
	add.s64 	%rd471, %rd460, %rd470;
	add.s64 	%rd472, %rd471, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5744,%dummy}, %rd63;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5745}, %rd63;
	}
	shf.r.wrap.b32 	%r5746, %r5745, %r5744, 19;
	shf.r.wrap.b32 	%r5747, %r5744, %r5745, 19;
	mov.b64 	%rd473, {%r5747, %r5746};
	shf.l.wrap.b32 	%r5748, %r5744, %r5745, 3;
	shf.l.wrap.b32 	%r5749, %r5745, %r5744, 3;
	mov.b64 	%rd474, {%r5749, %r5748};
	shr.u64 	%rd475, %rd63, 6;
	xor.b64  	%rd476, %rd473, %rd475;
	xor.b64  	%rd477, %rd476, %rd474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd50;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5751}, %rd50;
	}
	shf.r.wrap.b32 	%r5752, %r5751, %r5750, 1;
	shf.r.wrap.b32 	%r5753, %r5750, %r5751, 1;
	mov.b64 	%rd478, {%r5753, %r5752};
	shf.r.wrap.b32 	%r5754, %r5751, %r5750, 8;
	shf.r.wrap.b32 	%r5755, %r5750, %r5751, 8;
	mov.b64 	%rd479, {%r5755, %r5754};
	shr.u64 	%rd480, %rd50, 7;
	xor.b64  	%rd481, %rd478, %rd480;
	xor.b64  	%rd482, %rd481, %rd479;
	add.s64 	%rd483, %rd58, %rd49;
	add.s64 	%rd484, %rd483, %rd477;
	add.s64 	%rd485, %rd484, %rd482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5756,%dummy}, %rd64;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd64;
	}
	shf.r.wrap.b32 	%r5758, %r5757, %r5756, 19;
	shf.r.wrap.b32 	%r5759, %r5756, %r5757, 19;
	mov.b64 	%rd486, {%r5759, %r5758};
	shf.l.wrap.b32 	%r5760, %r5756, %r5757, 3;
	shf.l.wrap.b32 	%r5761, %r5757, %r5756, 3;
	mov.b64 	%rd487, {%r5761, %r5760};
	shr.u64 	%rd488, %rd64, 6;
	xor.b64  	%rd489, %rd486, %rd488;
	xor.b64  	%rd490, %rd489, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd51;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5763}, %rd51;
	}
	shf.r.wrap.b32 	%r5764, %r5763, %r5762, 1;
	shf.r.wrap.b32 	%r5765, %r5762, %r5763, 1;
	mov.b64 	%rd491, {%r5765, %r5764};
	shf.r.wrap.b32 	%r5766, %r5763, %r5762, 8;
	shf.r.wrap.b32 	%r5767, %r5762, %r5763, 8;
	mov.b64 	%rd492, {%r5767, %r5766};
	shr.u64 	%rd493, %rd51, 7;
	xor.b64  	%rd494, %rd491, %rd493;
	xor.b64  	%rd495, %rd494, %rd492;
	add.s64 	%rd496, %rd59, %rd50;
	add.s64 	%rd497, %rd496, %rd490;
	add.s64 	%rd498, %rd497, %rd495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd485;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 19;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 19;
	mov.b64 	%rd499, {%r5771, %r5770};
	shf.l.wrap.b32 	%r5772, %r5768, %r5769, 3;
	shf.l.wrap.b32 	%r5773, %r5769, %r5768, 3;
	mov.b64 	%rd500, {%r5773, %r5772};
	shr.u64 	%rd501, %rd485, 6;
	xor.b64  	%rd502, %rd499, %rd501;
	xor.b64  	%rd503, %rd502, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd52;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5775}, %rd52;
	}
	shf.r.wrap.b32 	%r5776, %r5775, %r5774, 1;
	shf.r.wrap.b32 	%r5777, %r5774, %r5775, 1;
	mov.b64 	%rd504, {%r5777, %r5776};
	shf.r.wrap.b32 	%r5778, %r5775, %r5774, 8;
	shf.r.wrap.b32 	%r5779, %r5774, %r5775, 8;
	mov.b64 	%rd505, {%r5779, %r5778};
	shr.u64 	%rd506, %rd52, 7;
	xor.b64  	%rd507, %rd504, %rd506;
	xor.b64  	%rd508, %rd507, %rd505;
	add.s64 	%rd509, %rd60, %rd51;
	add.s64 	%rd510, %rd509, %rd503;
	add.s64 	%rd511, %rd510, %rd508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5780,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5781}, %rd498;
	}
	shf.r.wrap.b32 	%r5782, %r5781, %r5780, 19;
	shf.r.wrap.b32 	%r5783, %r5780, %r5781, 19;
	mov.b64 	%rd512, {%r5783, %r5782};
	shf.l.wrap.b32 	%r5784, %r5780, %r5781, 3;
	shf.l.wrap.b32 	%r5785, %r5781, %r5780, 3;
	mov.b64 	%rd513, {%r5785, %r5784};
	shr.u64 	%rd514, %rd498, 6;
	xor.b64  	%rd515, %rd512, %rd514;
	xor.b64  	%rd516, %rd515, %rd513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd53;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd53;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 1;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 1;
	mov.b64 	%rd517, {%r5789, %r5788};
	shf.r.wrap.b32 	%r5790, %r5787, %r5786, 8;
	shf.r.wrap.b32 	%r5791, %r5786, %r5787, 8;
	mov.b64 	%rd518, {%r5791, %r5790};
	shr.u64 	%rd519, %rd53, 7;
	xor.b64  	%rd520, %rd517, %rd519;
	xor.b64  	%rd521, %rd520, %rd518;
	add.s64 	%rd522, %rd61, %rd52;
	add.s64 	%rd523, %rd522, %rd516;
	add.s64 	%rd524, %rd523, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5792,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd511;
	}
	shf.r.wrap.b32 	%r5794, %r5793, %r5792, 19;
	shf.r.wrap.b32 	%r5795, %r5792, %r5793, 19;
	mov.b64 	%rd525, {%r5795, %r5794};
	shf.l.wrap.b32 	%r5796, %r5792, %r5793, 3;
	shf.l.wrap.b32 	%r5797, %r5793, %r5792, 3;
	mov.b64 	%rd526, {%r5797, %r5796};
	shr.u64 	%rd527, %rd511, 6;
	xor.b64  	%rd528, %rd525, %rd527;
	xor.b64  	%rd529, %rd528, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5798,%dummy}, %rd54;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5799}, %rd54;
	}
	shf.r.wrap.b32 	%r5800, %r5799, %r5798, 1;
	shf.r.wrap.b32 	%r5801, %r5798, %r5799, 1;
	mov.b64 	%rd530, {%r5801, %r5800};
	shf.r.wrap.b32 	%r5802, %r5799, %r5798, 8;
	shf.r.wrap.b32 	%r5803, %r5798, %r5799, 8;
	mov.b64 	%rd531, {%r5803, %r5802};
	shr.u64 	%rd532, %rd54, 7;
	xor.b64  	%rd533, %rd530, %rd532;
	xor.b64  	%rd534, %rd533, %rd531;
	add.s64 	%rd535, %rd62, %rd53;
	add.s64 	%rd536, %rd535, %rd529;
	add.s64 	%rd537, %rd536, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd524;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 19;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 19;
	mov.b64 	%rd538, {%r5807, %r5806};
	shf.l.wrap.b32 	%r5808, %r5804, %r5805, 3;
	shf.l.wrap.b32 	%r5809, %r5805, %r5804, 3;
	mov.b64 	%rd539, {%r5809, %r5808};
	shr.u64 	%rd540, %rd524, 6;
	xor.b64  	%rd541, %rd538, %rd540;
	xor.b64  	%rd542, %rd541, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5810,%dummy}, %rd55;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5811}, %rd55;
	}
	shf.r.wrap.b32 	%r5812, %r5811, %r5810, 1;
	shf.r.wrap.b32 	%r5813, %r5810, %r5811, 1;
	mov.b64 	%rd543, {%r5813, %r5812};
	shf.r.wrap.b32 	%r5814, %r5811, %r5810, 8;
	shf.r.wrap.b32 	%r5815, %r5810, %r5811, 8;
	mov.b64 	%rd544, {%r5815, %r5814};
	shr.u64 	%rd545, %rd55, 7;
	xor.b64  	%rd546, %rd543, %rd545;
	xor.b64  	%rd547, %rd546, %rd544;
	add.s64 	%rd548, %rd63, %rd54;
	add.s64 	%rd549, %rd548, %rd542;
	add.s64 	%rd550, %rd549, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd537;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 19;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 19;
	mov.b64 	%rd551, {%r5819, %r5818};
	shf.l.wrap.b32 	%r5820, %r5816, %r5817, 3;
	shf.l.wrap.b32 	%r5821, %r5817, %r5816, 3;
	mov.b64 	%rd552, {%r5821, %r5820};
	shr.u64 	%rd553, %rd537, 6;
	xor.b64  	%rd554, %rd551, %rd553;
	xor.b64  	%rd555, %rd554, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5822,%dummy}, %rd56;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5823}, %rd56;
	}
	shf.r.wrap.b32 	%r5824, %r5823, %r5822, 1;
	shf.r.wrap.b32 	%r5825, %r5822, %r5823, 1;
	mov.b64 	%rd556, {%r5825, %r5824};
	shf.r.wrap.b32 	%r5826, %r5823, %r5822, 8;
	shf.r.wrap.b32 	%r5827, %r5822, %r5823, 8;
	mov.b64 	%rd557, {%r5827, %r5826};
	shr.u64 	%rd558, %rd56, 7;
	xor.b64  	%rd559, %rd556, %rd558;
	xor.b64  	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd64, %rd55;
	add.s64 	%rd562, %rd561, %rd555;
	add.s64 	%rd563, %rd562, %rd560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd550;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 19;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 19;
	mov.b64 	%rd564, {%r5831, %r5830};
	shf.l.wrap.b32 	%r5832, %r5828, %r5829, 3;
	shf.l.wrap.b32 	%r5833, %r5829, %r5828, 3;
	mov.b64 	%rd565, {%r5833, %r5832};
	shr.u64 	%rd566, %rd550, 6;
	xor.b64  	%rd567, %rd564, %rd566;
	xor.b64  	%rd568, %rd567, %rd565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd57;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5835}, %rd57;
	}
	shf.r.wrap.b32 	%r5836, %r5835, %r5834, 1;
	shf.r.wrap.b32 	%r5837, %r5834, %r5835, 1;
	mov.b64 	%rd569, {%r5837, %r5836};
	shf.r.wrap.b32 	%r5838, %r5835, %r5834, 8;
	shf.r.wrap.b32 	%r5839, %r5834, %r5835, 8;
	mov.b64 	%rd570, {%r5839, %r5838};
	shr.u64 	%rd571, %rd57, 7;
	xor.b64  	%rd572, %rd569, %rd571;
	xor.b64  	%rd573, %rd572, %rd570;
	add.s64 	%rd574, %rd485, %rd56;
	add.s64 	%rd575, %rd574, %rd568;
	add.s64 	%rd576, %rd575, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5840,%dummy}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5841}, %rd563;
	}
	shf.r.wrap.b32 	%r5842, %r5841, %r5840, 19;
	shf.r.wrap.b32 	%r5843, %r5840, %r5841, 19;
	mov.b64 	%rd577, {%r5843, %r5842};
	shf.l.wrap.b32 	%r5844, %r5840, %r5841, 3;
	shf.l.wrap.b32 	%r5845, %r5841, %r5840, 3;
	mov.b64 	%rd578, {%r5845, %r5844};
	shr.u64 	%rd579, %rd563, 6;
	xor.b64  	%rd580, %rd577, %rd579;
	xor.b64  	%rd581, %rd580, %rd578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd58;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd58;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 1;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 1;
	mov.b64 	%rd582, {%r5849, %r5848};
	shf.r.wrap.b32 	%r5850, %r5847, %r5846, 8;
	shf.r.wrap.b32 	%r5851, %r5846, %r5847, 8;
	mov.b64 	%rd583, {%r5851, %r5850};
	shr.u64 	%rd584, %rd58, 7;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd498, %rd57;
	add.s64 	%rd588, %rd587, %rd581;
	add.s64 	%rd589, %rd588, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5852,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5853}, %rd576;
	}
	shf.r.wrap.b32 	%r5854, %r5853, %r5852, 19;
	shf.r.wrap.b32 	%r5855, %r5852, %r5853, 19;
	mov.b64 	%rd590, {%r5855, %r5854};
	shf.l.wrap.b32 	%r5856, %r5852, %r5853, 3;
	shf.l.wrap.b32 	%r5857, %r5853, %r5852, 3;
	mov.b64 	%rd591, {%r5857, %r5856};
	shr.u64 	%rd592, %rd576, 6;
	xor.b64  	%rd593, %rd590, %rd592;
	xor.b64  	%rd594, %rd593, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5858,%dummy}, %rd59;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5859}, %rd59;
	}
	shf.r.wrap.b32 	%r5860, %r5859, %r5858, 1;
	shf.r.wrap.b32 	%r5861, %r5858, %r5859, 1;
	mov.b64 	%rd595, {%r5861, %r5860};
	shf.r.wrap.b32 	%r5862, %r5859, %r5858, 8;
	shf.r.wrap.b32 	%r5863, %r5858, %r5859, 8;
	mov.b64 	%rd596, {%r5863, %r5862};
	shr.u64 	%rd597, %rd59, 7;
	xor.b64  	%rd598, %rd595, %rd597;
	xor.b64  	%rd599, %rd598, %rd596;
	add.s64 	%rd600, %rd511, %rd58;
	add.s64 	%rd601, %rd600, %rd594;
	add.s64 	%rd602, %rd601, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd589;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 19;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 19;
	mov.b64 	%rd603, {%r5867, %r5866};
	shf.l.wrap.b32 	%r5868, %r5864, %r5865, 3;
	shf.l.wrap.b32 	%r5869, %r5865, %r5864, 3;
	mov.b64 	%rd604, {%r5869, %r5868};
	shr.u64 	%rd605, %rd589, 6;
	xor.b64  	%rd606, %rd603, %rd605;
	xor.b64  	%rd607, %rd606, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5870,%dummy}, %rd60;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5871}, %rd60;
	}
	shf.r.wrap.b32 	%r5872, %r5871, %r5870, 1;
	shf.r.wrap.b32 	%r5873, %r5870, %r5871, 1;
	mov.b64 	%rd608, {%r5873, %r5872};
	shf.r.wrap.b32 	%r5874, %r5871, %r5870, 8;
	shf.r.wrap.b32 	%r5875, %r5870, %r5871, 8;
	mov.b64 	%rd609, {%r5875, %r5874};
	shr.u64 	%rd610, %rd60, 7;
	xor.b64  	%rd611, %rd608, %rd610;
	xor.b64  	%rd612, %rd611, %rd609;
	add.s64 	%rd613, %rd524, %rd59;
	add.s64 	%rd614, %rd613, %rd607;
	add.s64 	%rd615, %rd614, %rd612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5876,%dummy}, %rd602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5877}, %rd602;
	}
	shf.r.wrap.b32 	%r5878, %r5877, %r5876, 19;
	shf.r.wrap.b32 	%r5879, %r5876, %r5877, 19;
	mov.b64 	%rd616, {%r5879, %r5878};
	shf.l.wrap.b32 	%r5880, %r5876, %r5877, 3;
	shf.l.wrap.b32 	%r5881, %r5877, %r5876, 3;
	mov.b64 	%rd617, {%r5881, %r5880};
	shr.u64 	%rd618, %rd602, 6;
	xor.b64  	%rd619, %rd616, %rd618;
	xor.b64  	%rd620, %rd619, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd61;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5883}, %rd61;
	}
	shf.r.wrap.b32 	%r5884, %r5883, %r5882, 1;
	shf.r.wrap.b32 	%r5885, %r5882, %r5883, 1;
	mov.b64 	%rd621, {%r5885, %r5884};
	shf.r.wrap.b32 	%r5886, %r5883, %r5882, 8;
	shf.r.wrap.b32 	%r5887, %r5882, %r5883, 8;
	mov.b64 	%rd622, {%r5887, %r5886};
	shr.u64 	%rd623, %rd61, 7;
	xor.b64  	%rd624, %rd621, %rd623;
	xor.b64  	%rd625, %rd624, %rd622;
	add.s64 	%rd626, %rd537, %rd60;
	add.s64 	%rd627, %rd626, %rd620;
	add.s64 	%rd628, %rd627, %rd625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5888,%dummy}, %rd615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5889}, %rd615;
	}
	shf.r.wrap.b32 	%r5890, %r5889, %r5888, 19;
	shf.r.wrap.b32 	%r5891, %r5888, %r5889, 19;
	mov.b64 	%rd629, {%r5891, %r5890};
	shf.l.wrap.b32 	%r5892, %r5888, %r5889, 3;
	shf.l.wrap.b32 	%r5893, %r5889, %r5888, 3;
	mov.b64 	%rd630, {%r5893, %r5892};
	shr.u64 	%rd631, %rd615, 6;
	xor.b64  	%rd632, %rd629, %rd631;
	xor.b64  	%rd633, %rd632, %rd630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5894,%dummy}, %rd62;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5895}, %rd62;
	}
	shf.r.wrap.b32 	%r5896, %r5895, %r5894, 1;
	shf.r.wrap.b32 	%r5897, %r5894, %r5895, 1;
	mov.b64 	%rd634, {%r5897, %r5896};
	shf.r.wrap.b32 	%r5898, %r5895, %r5894, 8;
	shf.r.wrap.b32 	%r5899, %r5894, %r5895, 8;
	mov.b64 	%rd635, {%r5899, %r5898};
	shr.u64 	%rd636, %rd62, 7;
	xor.b64  	%rd637, %rd634, %rd636;
	xor.b64  	%rd638, %rd637, %rd635;
	add.s64 	%rd639, %rd550, %rd61;
	add.s64 	%rd640, %rd639, %rd633;
	add.s64 	%rd641, %rd640, %rd638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5900,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5901}, %rd628;
	}
	shf.r.wrap.b32 	%r5902, %r5901, %r5900, 19;
	shf.r.wrap.b32 	%r5903, %r5900, %r5901, 19;
	mov.b64 	%rd642, {%r5903, %r5902};
	shf.l.wrap.b32 	%r5904, %r5900, %r5901, 3;
	shf.l.wrap.b32 	%r5905, %r5901, %r5900, 3;
	mov.b64 	%rd643, {%r5905, %r5904};
	shr.u64 	%rd644, %rd628, 6;
	xor.b64  	%rd645, %rd642, %rd644;
	xor.b64  	%rd646, %rd645, %rd643;
	shf.r.wrap.b32 	%r5906, %r5745, %r5744, 1;
	shf.r.wrap.b32 	%r5907, %r5744, %r5745, 1;
	mov.b64 	%rd647, {%r5907, %r5906};
	shf.r.wrap.b32 	%r5908, %r5745, %r5744, 8;
	shf.r.wrap.b32 	%r5909, %r5744, %r5745, 8;
	mov.b64 	%rd648, {%r5909, %r5908};
	shr.u64 	%rd649, %rd63, 7;
	xor.b64  	%rd650, %rd647, %rd649;
	xor.b64  	%rd651, %rd650, %rd648;
	add.s64 	%rd652, %rd563, %rd62;
	add.s64 	%rd653, %rd652, %rd646;
	add.s64 	%rd654, %rd653, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5910,%dummy}, %rd641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5911}, %rd641;
	}
	shf.r.wrap.b32 	%r5912, %r5911, %r5910, 19;
	shf.r.wrap.b32 	%r5913, %r5910, %r5911, 19;
	mov.b64 	%rd655, {%r5913, %r5912};
	shf.l.wrap.b32 	%r5914, %r5910, %r5911, 3;
	shf.l.wrap.b32 	%r5915, %r5911, %r5910, 3;
	mov.b64 	%rd656, {%r5915, %r5914};
	shr.u64 	%rd657, %rd641, 6;
	xor.b64  	%rd658, %rd655, %rd657;
	xor.b64  	%rd659, %rd658, %rd656;
	shf.r.wrap.b32 	%r5916, %r5757, %r5756, 1;
	shf.r.wrap.b32 	%r5917, %r5756, %r5757, 1;
	mov.b64 	%rd660, {%r5917, %r5916};
	shf.r.wrap.b32 	%r5918, %r5757, %r5756, 8;
	shf.r.wrap.b32 	%r5919, %r5756, %r5757, 8;
	mov.b64 	%rd661, {%r5919, %r5918};
	shr.u64 	%rd662, %rd64, 7;
	xor.b64  	%rd663, %rd660, %rd662;
	xor.b64  	%rd664, %rd663, %rd661;
	add.s64 	%rd665, %rd576, %rd63;
	add.s64 	%rd666, %rd665, %rd659;
	add.s64 	%rd667, %rd666, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5920,%dummy}, %rd654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5921}, %rd654;
	}
	shf.r.wrap.b32 	%r5922, %r5921, %r5920, 19;
	shf.r.wrap.b32 	%r5923, %r5920, %r5921, 19;
	mov.b64 	%rd668, {%r5923, %r5922};
	shf.l.wrap.b32 	%r5924, %r5920, %r5921, 3;
	shf.l.wrap.b32 	%r5925, %r5921, %r5920, 3;
	mov.b64 	%rd669, {%r5925, %r5924};
	shr.u64 	%rd670, %rd654, 6;
	xor.b64  	%rd671, %rd668, %rd670;
	xor.b64  	%rd672, %rd671, %rd669;
	shf.r.wrap.b32 	%r5926, %r5769, %r5768, 1;
	shf.r.wrap.b32 	%r5927, %r5768, %r5769, 1;
	mov.b64 	%rd673, {%r5927, %r5926};
	shf.r.wrap.b32 	%r5928, %r5769, %r5768, 8;
	shf.r.wrap.b32 	%r5929, %r5768, %r5769, 8;
	mov.b64 	%rd674, {%r5929, %r5928};
	shr.u64 	%rd675, %rd485, 7;
	xor.b64  	%rd676, %rd673, %rd675;
	xor.b64  	%rd677, %rd676, %rd674;
	add.s64 	%rd678, %rd589, %rd64;
	add.s64 	%rd679, %rd678, %rd672;
	add.s64 	%rd680, %rd679, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5930,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5931}, %rd461;
	}
	shf.r.wrap.b32 	%r5932, %r5931, %r5930, 14;
	shf.r.wrap.b32 	%r5933, %r5930, %r5931, 14;
	mov.b64 	%rd681, {%r5933, %r5932};
	shf.r.wrap.b32 	%r5934, %r5931, %r5930, 18;
	shf.r.wrap.b32 	%r5935, %r5930, %r5931, 18;
	mov.b64 	%rd682, {%r5935, %r5934};
	xor.b64  	%rd683, %rd682, %rd681;
	shf.l.wrap.b32 	%r5936, %r5930, %r5931, 23;
	shf.l.wrap.b32 	%r5937, %r5931, %r5930, 23;
	mov.b64 	%rd684, {%r5937, %r5936};
	xor.b64  	%rd685, %rd683, %rd684;
	xor.b64  	%rd686, %rd436, %rd411;
	and.b64  	%rd687, %rd686, %rd461;
	xor.b64  	%rd688, %rd687, %rd411;
	add.s64 	%rd689, %rd688, %rd386;
	add.s64 	%rd690, %rd689, %rd485;
	ld.const.u64 	%rd691, [k_sha512+128];
	add.s64 	%rd692, %rd690, %rd691;
	add.s64 	%rd693, %rd692, %rd685;
	add.s64 	%rd694, %rd693, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5938,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5939}, %rd472;
	}
	shf.r.wrap.b32 	%r5940, %r5939, %r5938, 28;
	shf.r.wrap.b32 	%r5941, %r5938, %r5939, 28;
	mov.b64 	%rd695, {%r5941, %r5940};
	shf.l.wrap.b32 	%r5942, %r5938, %r5939, 30;
	shf.l.wrap.b32 	%r5943, %r5939, %r5938, 30;
	mov.b64 	%rd696, {%r5943, %r5942};
	xor.b64  	%rd697, %rd696, %rd695;
	shf.l.wrap.b32 	%r5944, %r5938, %r5939, 25;
	shf.l.wrap.b32 	%r5945, %r5939, %r5938, 25;
	mov.b64 	%rd698, {%r5945, %r5944};
	xor.b64  	%rd699, %rd697, %rd698;
	xor.b64  	%rd700, %rd472, %rd422;
	xor.b64  	%rd701, %rd472, %rd447;
	and.b64  	%rd702, %rd701, %rd700;
	xor.b64  	%rd703, %rd702, %rd472;
	add.s64 	%rd704, %rd693, %rd703;
	add.s64 	%rd705, %rd704, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5946,%dummy}, %rd694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5947}, %rd694;
	}
	shf.r.wrap.b32 	%r5948, %r5947, %r5946, 14;
	shf.r.wrap.b32 	%r5949, %r5946, %r5947, 14;
	mov.b64 	%rd706, {%r5949, %r5948};
	shf.r.wrap.b32 	%r5950, %r5947, %r5946, 18;
	shf.r.wrap.b32 	%r5951, %r5946, %r5947, 18;
	mov.b64 	%rd707, {%r5951, %r5950};
	xor.b64  	%rd708, %rd707, %rd706;
	shf.l.wrap.b32 	%r5952, %r5946, %r5947, 23;
	shf.l.wrap.b32 	%r5953, %r5947, %r5946, 23;
	mov.b64 	%rd709, {%r5953, %r5952};
	xor.b64  	%rd710, %rd708, %rd709;
	xor.b64  	%rd711, %rd461, %rd436;
	and.b64  	%rd712, %rd694, %rd711;
	xor.b64  	%rd713, %rd712, %rd436;
	add.s64 	%rd714, %rd498, %rd411;
	ld.const.u64 	%rd715, [k_sha512+136];
	add.s64 	%rd716, %rd714, %rd715;
	add.s64 	%rd717, %rd716, %rd713;
	add.s64 	%rd718, %rd717, %rd710;
	add.s64 	%rd719, %rd718, %rd422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5954,%dummy}, %rd705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5955}, %rd705;
	}
	shf.r.wrap.b32 	%r5956, %r5955, %r5954, 28;
	shf.r.wrap.b32 	%r5957, %r5954, %r5955, 28;
	mov.b64 	%rd720, {%r5957, %r5956};
	shf.l.wrap.b32 	%r5958, %r5954, %r5955, 30;
	shf.l.wrap.b32 	%r5959, %r5955, %r5954, 30;
	mov.b64 	%rd721, {%r5959, %r5958};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.l.wrap.b32 	%r5960, %r5954, %r5955, 25;
	shf.l.wrap.b32 	%r5961, %r5955, %r5954, 25;
	mov.b64 	%rd723, {%r5961, %r5960};
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd705, %rd447;
	xor.b64  	%rd726, %rd705, %rd472;
	and.b64  	%rd727, %rd726, %rd725;
	xor.b64  	%rd728, %rd727, %rd705;
	add.s64 	%rd729, %rd718, %rd728;
	add.s64 	%rd730, %rd729, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5962,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5963}, %rd719;
	}
	shf.r.wrap.b32 	%r5964, %r5963, %r5962, 14;
	shf.r.wrap.b32 	%r5965, %r5962, %r5963, 14;
	mov.b64 	%rd731, {%r5965, %r5964};
	shf.r.wrap.b32 	%r5966, %r5963, %r5962, 18;
	shf.r.wrap.b32 	%r5967, %r5962, %r5963, 18;
	mov.b64 	%rd732, {%r5967, %r5966};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.l.wrap.b32 	%r5968, %r5962, %r5963, 23;
	shf.l.wrap.b32 	%r5969, %r5963, %r5962, 23;
	mov.b64 	%rd734, {%r5969, %r5968};
	xor.b64  	%rd735, %rd733, %rd734;
	xor.b64  	%rd736, %rd694, %rd461;
	and.b64  	%rd737, %rd719, %rd736;
	xor.b64  	%rd738, %rd737, %rd461;
	add.s64 	%rd739, %rd511, %rd436;
	ld.const.u64 	%rd740, [k_sha512+144];
	add.s64 	%rd741, %rd739, %rd740;
	add.s64 	%rd742, %rd741, %rd738;
	add.s64 	%rd743, %rd742, %rd735;
	add.s64 	%rd744, %rd743, %rd447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5970,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5971}, %rd730;
	}
	shf.r.wrap.b32 	%r5972, %r5971, %r5970, 28;
	shf.r.wrap.b32 	%r5973, %r5970, %r5971, 28;
	mov.b64 	%rd745, {%r5973, %r5972};
	shf.l.wrap.b32 	%r5974, %r5970, %r5971, 30;
	shf.l.wrap.b32 	%r5975, %r5971, %r5970, 30;
	mov.b64 	%rd746, {%r5975, %r5974};
	xor.b64  	%rd747, %rd746, %rd745;
	shf.l.wrap.b32 	%r5976, %r5970, %r5971, 25;
	shf.l.wrap.b32 	%r5977, %r5971, %r5970, 25;
	mov.b64 	%rd748, {%r5977, %r5976};
	xor.b64  	%rd749, %rd747, %rd748;
	xor.b64  	%rd750, %rd730, %rd472;
	xor.b64  	%rd751, %rd730, %rd705;
	and.b64  	%rd752, %rd751, %rd750;
	xor.b64  	%rd753, %rd752, %rd730;
	add.s64 	%rd754, %rd743, %rd753;
	add.s64 	%rd755, %rd754, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5978,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5979}, %rd744;
	}
	shf.r.wrap.b32 	%r5980, %r5979, %r5978, 14;
	shf.r.wrap.b32 	%r5981, %r5978, %r5979, 14;
	mov.b64 	%rd756, {%r5981, %r5980};
	shf.r.wrap.b32 	%r5982, %r5979, %r5978, 18;
	shf.r.wrap.b32 	%r5983, %r5978, %r5979, 18;
	mov.b64 	%rd757, {%r5983, %r5982};
	xor.b64  	%rd758, %rd757, %rd756;
	shf.l.wrap.b32 	%r5984, %r5978, %r5979, 23;
	shf.l.wrap.b32 	%r5985, %r5979, %r5978, 23;
	mov.b64 	%rd759, {%r5985, %r5984};
	xor.b64  	%rd760, %rd758, %rd759;
	xor.b64  	%rd761, %rd719, %rd694;
	and.b64  	%rd762, %rd744, %rd761;
	xor.b64  	%rd763, %rd762, %rd694;
	add.s64 	%rd764, %rd524, %rd461;
	ld.const.u64 	%rd765, [k_sha512+152];
	add.s64 	%rd766, %rd764, %rd765;
	add.s64 	%rd767, %rd766, %rd763;
	add.s64 	%rd768, %rd767, %rd760;
	add.s64 	%rd769, %rd768, %rd472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd755;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 28;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 28;
	mov.b64 	%rd770, {%r5989, %r5988};
	shf.l.wrap.b32 	%r5990, %r5986, %r5987, 30;
	shf.l.wrap.b32 	%r5991, %r5987, %r5986, 30;
	mov.b64 	%rd771, {%r5991, %r5990};
	xor.b64  	%rd772, %rd771, %rd770;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 25;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 25;
	mov.b64 	%rd773, {%r5993, %r5992};
	xor.b64  	%rd774, %rd772, %rd773;
	xor.b64  	%rd775, %rd755, %rd705;
	xor.b64  	%rd776, %rd755, %rd730;
	and.b64  	%rd777, %rd776, %rd775;
	xor.b64  	%rd778, %rd777, %rd755;
	add.s64 	%rd779, %rd768, %rd778;
	add.s64 	%rd780, %rd779, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd769;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 14;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 14;
	mov.b64 	%rd781, {%r5997, %r5996};
	shf.r.wrap.b32 	%r5998, %r5995, %r5994, 18;
	shf.r.wrap.b32 	%r5999, %r5994, %r5995, 18;
	mov.b64 	%rd782, {%r5999, %r5998};
	xor.b64  	%rd783, %rd782, %rd781;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 23;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 23;
	mov.b64 	%rd784, {%r6001, %r6000};
	xor.b64  	%rd785, %rd783, %rd784;
	xor.b64  	%rd786, %rd744, %rd719;
	and.b64  	%rd787, %rd769, %rd786;
	xor.b64  	%rd788, %rd787, %rd719;
	add.s64 	%rd789, %rd694, %rd537;
	ld.const.u64 	%rd790, [k_sha512+160];
	add.s64 	%rd791, %rd789, %rd790;
	add.s64 	%rd792, %rd791, %rd788;
	add.s64 	%rd793, %rd792, %rd785;
	add.s64 	%rd794, %rd793, %rd705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd780;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 28;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 28;
	mov.b64 	%rd795, {%r6005, %r6004};
	shf.l.wrap.b32 	%r6006, %r6002, %r6003, 30;
	shf.l.wrap.b32 	%r6007, %r6003, %r6002, 30;
	mov.b64 	%rd796, {%r6007, %r6006};
	xor.b64  	%rd797, %rd796, %rd795;
	shf.l.wrap.b32 	%r6008, %r6002, %r6003, 25;
	shf.l.wrap.b32 	%r6009, %r6003, %r6002, 25;
	mov.b64 	%rd798, {%r6009, %r6008};
	xor.b64  	%rd799, %rd797, %rd798;
	xor.b64  	%rd800, %rd780, %rd730;
	xor.b64  	%rd801, %rd780, %rd755;
	and.b64  	%rd802, %rd801, %rd800;
	xor.b64  	%rd803, %rd802, %rd780;
	add.s64 	%rd804, %rd793, %rd803;
	add.s64 	%rd805, %rd804, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6010,%dummy}, %rd794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6011}, %rd794;
	}
	shf.r.wrap.b32 	%r6012, %r6011, %r6010, 14;
	shf.r.wrap.b32 	%r6013, %r6010, %r6011, 14;
	mov.b64 	%rd806, {%r6013, %r6012};
	shf.r.wrap.b32 	%r6014, %r6011, %r6010, 18;
	shf.r.wrap.b32 	%r6015, %r6010, %r6011, 18;
	mov.b64 	%rd807, {%r6015, %r6014};
	xor.b64  	%rd808, %rd807, %rd806;
	shf.l.wrap.b32 	%r6016, %r6010, %r6011, 23;
	shf.l.wrap.b32 	%r6017, %r6011, %r6010, 23;
	mov.b64 	%rd809, {%r6017, %r6016};
	xor.b64  	%rd810, %rd808, %rd809;
	xor.b64  	%rd811, %rd769, %rd744;
	and.b64  	%rd812, %rd794, %rd811;
	xor.b64  	%rd813, %rd812, %rd744;
	add.s64 	%rd814, %rd719, %rd550;
	ld.const.u64 	%rd815, [k_sha512+168];
	add.s64 	%rd816, %rd814, %rd815;
	add.s64 	%rd817, %rd816, %rd813;
	add.s64 	%rd818, %rd817, %rd810;
	add.s64 	%rd819, %rd818, %rd730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6018,%dummy}, %rd805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6019}, %rd805;
	}
	shf.r.wrap.b32 	%r6020, %r6019, %r6018, 28;
	shf.r.wrap.b32 	%r6021, %r6018, %r6019, 28;
	mov.b64 	%rd820, {%r6021, %r6020};
	shf.l.wrap.b32 	%r6022, %r6018, %r6019, 30;
	shf.l.wrap.b32 	%r6023, %r6019, %r6018, 30;
	mov.b64 	%rd821, {%r6023, %r6022};
	xor.b64  	%rd822, %rd821, %rd820;
	shf.l.wrap.b32 	%r6024, %r6018, %r6019, 25;
	shf.l.wrap.b32 	%r6025, %r6019, %r6018, 25;
	mov.b64 	%rd823, {%r6025, %r6024};
	xor.b64  	%rd824, %rd822, %rd823;
	xor.b64  	%rd825, %rd805, %rd755;
	xor.b64  	%rd826, %rd805, %rd780;
	and.b64  	%rd827, %rd826, %rd825;
	xor.b64  	%rd828, %rd827, %rd805;
	add.s64 	%rd829, %rd818, %rd828;
	add.s64 	%rd830, %rd829, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6027}, %rd819;
	}
	shf.r.wrap.b32 	%r6028, %r6027, %r6026, 14;
	shf.r.wrap.b32 	%r6029, %r6026, %r6027, 14;
	mov.b64 	%rd831, {%r6029, %r6028};
	shf.r.wrap.b32 	%r6030, %r6027, %r6026, 18;
	shf.r.wrap.b32 	%r6031, %r6026, %r6027, 18;
	mov.b64 	%rd832, {%r6031, %r6030};
	xor.b64  	%rd833, %rd832, %rd831;
	shf.l.wrap.b32 	%r6032, %r6026, %r6027, 23;
	shf.l.wrap.b32 	%r6033, %r6027, %r6026, 23;
	mov.b64 	%rd834, {%r6033, %r6032};
	xor.b64  	%rd835, %rd833, %rd834;
	xor.b64  	%rd836, %rd794, %rd769;
	and.b64  	%rd837, %rd819, %rd836;
	xor.b64  	%rd838, %rd837, %rd769;
	add.s64 	%rd839, %rd744, %rd563;
	ld.const.u64 	%rd840, [k_sha512+176];
	add.s64 	%rd841, %rd839, %rd840;
	add.s64 	%rd842, %rd841, %rd838;
	add.s64 	%rd843, %rd842, %rd835;
	add.s64 	%rd844, %rd843, %rd755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6034,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6035}, %rd830;
	}
	shf.r.wrap.b32 	%r6036, %r6035, %r6034, 28;
	shf.r.wrap.b32 	%r6037, %r6034, %r6035, 28;
	mov.b64 	%rd845, {%r6037, %r6036};
	shf.l.wrap.b32 	%r6038, %r6034, %r6035, 30;
	shf.l.wrap.b32 	%r6039, %r6035, %r6034, 30;
	mov.b64 	%rd846, {%r6039, %r6038};
	xor.b64  	%rd847, %rd846, %rd845;
	shf.l.wrap.b32 	%r6040, %r6034, %r6035, 25;
	shf.l.wrap.b32 	%r6041, %r6035, %r6034, 25;
	mov.b64 	%rd848, {%r6041, %r6040};
	xor.b64  	%rd849, %rd847, %rd848;
	xor.b64  	%rd850, %rd830, %rd780;
	xor.b64  	%rd851, %rd830, %rd805;
	and.b64  	%rd852, %rd851, %rd850;
	xor.b64  	%rd853, %rd852, %rd830;
	add.s64 	%rd854, %rd843, %rd853;
	add.s64 	%rd855, %rd854, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6042,%dummy}, %rd844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6043}, %rd844;
	}
	shf.r.wrap.b32 	%r6044, %r6043, %r6042, 14;
	shf.r.wrap.b32 	%r6045, %r6042, %r6043, 14;
	mov.b64 	%rd856, {%r6045, %r6044};
	shf.r.wrap.b32 	%r6046, %r6043, %r6042, 18;
	shf.r.wrap.b32 	%r6047, %r6042, %r6043, 18;
	mov.b64 	%rd857, {%r6047, %r6046};
	xor.b64  	%rd858, %rd857, %rd856;
	shf.l.wrap.b32 	%r6048, %r6042, %r6043, 23;
	shf.l.wrap.b32 	%r6049, %r6043, %r6042, 23;
	mov.b64 	%rd859, {%r6049, %r6048};
	xor.b64  	%rd860, %rd858, %rd859;
	xor.b64  	%rd861, %rd819, %rd794;
	and.b64  	%rd862, %rd844, %rd861;
	xor.b64  	%rd863, %rd862, %rd794;
	add.s64 	%rd864, %rd769, %rd576;
	ld.const.u64 	%rd865, [k_sha512+184];
	add.s64 	%rd866, %rd864, %rd865;
	add.s64 	%rd867, %rd866, %rd863;
	add.s64 	%rd868, %rd867, %rd860;
	add.s64 	%rd869, %rd868, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6050,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6051}, %rd855;
	}
	shf.r.wrap.b32 	%r6052, %r6051, %r6050, 28;
	shf.r.wrap.b32 	%r6053, %r6050, %r6051, 28;
	mov.b64 	%rd870, {%r6053, %r6052};
	shf.l.wrap.b32 	%r6054, %r6050, %r6051, 30;
	shf.l.wrap.b32 	%r6055, %r6051, %r6050, 30;
	mov.b64 	%rd871, {%r6055, %r6054};
	xor.b64  	%rd872, %rd871, %rd870;
	shf.l.wrap.b32 	%r6056, %r6050, %r6051, 25;
	shf.l.wrap.b32 	%r6057, %r6051, %r6050, 25;
	mov.b64 	%rd873, {%r6057, %r6056};
	xor.b64  	%rd874, %rd872, %rd873;
	xor.b64  	%rd875, %rd855, %rd805;
	xor.b64  	%rd876, %rd855, %rd830;
	and.b64  	%rd877, %rd876, %rd875;
	xor.b64  	%rd878, %rd877, %rd855;
	add.s64 	%rd879, %rd868, %rd878;
	add.s64 	%rd880, %rd879, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6058,%dummy}, %rd869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6059}, %rd869;
	}
	shf.r.wrap.b32 	%r6060, %r6059, %r6058, 14;
	shf.r.wrap.b32 	%r6061, %r6058, %r6059, 14;
	mov.b64 	%rd881, {%r6061, %r6060};
	shf.r.wrap.b32 	%r6062, %r6059, %r6058, 18;
	shf.r.wrap.b32 	%r6063, %r6058, %r6059, 18;
	mov.b64 	%rd882, {%r6063, %r6062};
	xor.b64  	%rd883, %rd882, %rd881;
	shf.l.wrap.b32 	%r6064, %r6058, %r6059, 23;
	shf.l.wrap.b32 	%r6065, %r6059, %r6058, 23;
	mov.b64 	%rd884, {%r6065, %r6064};
	xor.b64  	%rd885, %rd883, %rd884;
	xor.b64  	%rd886, %rd844, %rd819;
	and.b64  	%rd887, %rd869, %rd886;
	xor.b64  	%rd888, %rd887, %rd819;
	add.s64 	%rd889, %rd794, %rd589;
	ld.const.u64 	%rd890, [k_sha512+192];
	add.s64 	%rd891, %rd889, %rd890;
	add.s64 	%rd892, %rd891, %rd888;
	add.s64 	%rd893, %rd892, %rd885;
	add.s64 	%rd894, %rd893, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6066,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6067}, %rd880;
	}
	shf.r.wrap.b32 	%r6068, %r6067, %r6066, 28;
	shf.r.wrap.b32 	%r6069, %r6066, %r6067, 28;
	mov.b64 	%rd895, {%r6069, %r6068};
	shf.l.wrap.b32 	%r6070, %r6066, %r6067, 30;
	shf.l.wrap.b32 	%r6071, %r6067, %r6066, 30;
	mov.b64 	%rd896, {%r6071, %r6070};
	xor.b64  	%rd897, %rd896, %rd895;
	shf.l.wrap.b32 	%r6072, %r6066, %r6067, 25;
	shf.l.wrap.b32 	%r6073, %r6067, %r6066, 25;
	mov.b64 	%rd898, {%r6073, %r6072};
	xor.b64  	%rd899, %rd897, %rd898;
	xor.b64  	%rd900, %rd880, %rd830;
	xor.b64  	%rd901, %rd880, %rd855;
	and.b64  	%rd902, %rd901, %rd900;
	xor.b64  	%rd903, %rd902, %rd880;
	add.s64 	%rd904, %rd893, %rd903;
	add.s64 	%rd905, %rd904, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6074,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6075}, %rd894;
	}
	shf.r.wrap.b32 	%r6076, %r6075, %r6074, 14;
	shf.r.wrap.b32 	%r6077, %r6074, %r6075, 14;
	mov.b64 	%rd906, {%r6077, %r6076};
	shf.r.wrap.b32 	%r6078, %r6075, %r6074, 18;
	shf.r.wrap.b32 	%r6079, %r6074, %r6075, 18;
	mov.b64 	%rd907, {%r6079, %r6078};
	xor.b64  	%rd908, %rd907, %rd906;
	shf.l.wrap.b32 	%r6080, %r6074, %r6075, 23;
	shf.l.wrap.b32 	%r6081, %r6075, %r6074, 23;
	mov.b64 	%rd909, {%r6081, %r6080};
	xor.b64  	%rd910, %rd908, %rd909;
	xor.b64  	%rd911, %rd869, %rd844;
	and.b64  	%rd912, %rd894, %rd911;
	xor.b64  	%rd913, %rd912, %rd844;
	add.s64 	%rd914, %rd819, %rd602;
	ld.const.u64 	%rd915, [k_sha512+200];
	add.s64 	%rd916, %rd914, %rd915;
	add.s64 	%rd917, %rd916, %rd913;
	add.s64 	%rd918, %rd917, %rd910;
	add.s64 	%rd919, %rd918, %rd830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6082,%dummy}, %rd905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6083}, %rd905;
	}
	shf.r.wrap.b32 	%r6084, %r6083, %r6082, 28;
	shf.r.wrap.b32 	%r6085, %r6082, %r6083, 28;
	mov.b64 	%rd920, {%r6085, %r6084};
	shf.l.wrap.b32 	%r6086, %r6082, %r6083, 30;
	shf.l.wrap.b32 	%r6087, %r6083, %r6082, 30;
	mov.b64 	%rd921, {%r6087, %r6086};
	xor.b64  	%rd922, %rd921, %rd920;
	shf.l.wrap.b32 	%r6088, %r6082, %r6083, 25;
	shf.l.wrap.b32 	%r6089, %r6083, %r6082, 25;
	mov.b64 	%rd923, {%r6089, %r6088};
	xor.b64  	%rd924, %rd922, %rd923;
	xor.b64  	%rd925, %rd905, %rd855;
	xor.b64  	%rd926, %rd905, %rd880;
	and.b64  	%rd927, %rd926, %rd925;
	xor.b64  	%rd928, %rd927, %rd905;
	add.s64 	%rd929, %rd918, %rd928;
	add.s64 	%rd930, %rd929, %rd924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6090,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6091}, %rd919;
	}
	shf.r.wrap.b32 	%r6092, %r6091, %r6090, 14;
	shf.r.wrap.b32 	%r6093, %r6090, %r6091, 14;
	mov.b64 	%rd931, {%r6093, %r6092};
	shf.r.wrap.b32 	%r6094, %r6091, %r6090, 18;
	shf.r.wrap.b32 	%r6095, %r6090, %r6091, 18;
	mov.b64 	%rd932, {%r6095, %r6094};
	xor.b64  	%rd933, %rd932, %rd931;
	shf.l.wrap.b32 	%r6096, %r6090, %r6091, 23;
	shf.l.wrap.b32 	%r6097, %r6091, %r6090, 23;
	mov.b64 	%rd934, {%r6097, %r6096};
	xor.b64  	%rd935, %rd933, %rd934;
	xor.b64  	%rd936, %rd894, %rd869;
	and.b64  	%rd937, %rd919, %rd936;
	xor.b64  	%rd938, %rd937, %rd869;
	add.s64 	%rd939, %rd844, %rd615;
	ld.const.u64 	%rd940, [k_sha512+208];
	add.s64 	%rd941, %rd939, %rd940;
	add.s64 	%rd942, %rd941, %rd938;
	add.s64 	%rd943, %rd942, %rd935;
	add.s64 	%rd944, %rd943, %rd855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6098,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6099}, %rd930;
	}
	shf.r.wrap.b32 	%r6100, %r6099, %r6098, 28;
	shf.r.wrap.b32 	%r6101, %r6098, %r6099, 28;
	mov.b64 	%rd945, {%r6101, %r6100};
	shf.l.wrap.b32 	%r6102, %r6098, %r6099, 30;
	shf.l.wrap.b32 	%r6103, %r6099, %r6098, 30;
	mov.b64 	%rd946, {%r6103, %r6102};
	xor.b64  	%rd947, %rd946, %rd945;
	shf.l.wrap.b32 	%r6104, %r6098, %r6099, 25;
	shf.l.wrap.b32 	%r6105, %r6099, %r6098, 25;
	mov.b64 	%rd948, {%r6105, %r6104};
	xor.b64  	%rd949, %rd947, %rd948;
	xor.b64  	%rd950, %rd930, %rd880;
	xor.b64  	%rd951, %rd930, %rd905;
	and.b64  	%rd952, %rd951, %rd950;
	xor.b64  	%rd953, %rd952, %rd930;
	add.s64 	%rd954, %rd943, %rd953;
	add.s64 	%rd955, %rd954, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6107}, %rd944;
	}
	shf.r.wrap.b32 	%r6108, %r6107, %r6106, 14;
	shf.r.wrap.b32 	%r6109, %r6106, %r6107, 14;
	mov.b64 	%rd956, {%r6109, %r6108};
	shf.r.wrap.b32 	%r6110, %r6107, %r6106, 18;
	shf.r.wrap.b32 	%r6111, %r6106, %r6107, 18;
	mov.b64 	%rd957, {%r6111, %r6110};
	xor.b64  	%rd958, %rd957, %rd956;
	shf.l.wrap.b32 	%r6112, %r6106, %r6107, 23;
	shf.l.wrap.b32 	%r6113, %r6107, %r6106, 23;
	mov.b64 	%rd959, {%r6113, %r6112};
	xor.b64  	%rd960, %rd958, %rd959;
	xor.b64  	%rd961, %rd919, %rd894;
	and.b64  	%rd962, %rd944, %rd961;
	xor.b64  	%rd963, %rd962, %rd894;
	add.s64 	%rd964, %rd869, %rd628;
	ld.const.u64 	%rd965, [k_sha512+216];
	add.s64 	%rd966, %rd964, %rd965;
	add.s64 	%rd967, %rd966, %rd963;
	add.s64 	%rd968, %rd967, %rd960;
	add.s64 	%rd969, %rd968, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6114,%dummy}, %rd955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6115}, %rd955;
	}
	shf.r.wrap.b32 	%r6116, %r6115, %r6114, 28;
	shf.r.wrap.b32 	%r6117, %r6114, %r6115, 28;
	mov.b64 	%rd970, {%r6117, %r6116};
	shf.l.wrap.b32 	%r6118, %r6114, %r6115, 30;
	shf.l.wrap.b32 	%r6119, %r6115, %r6114, 30;
	mov.b64 	%rd971, {%r6119, %r6118};
	xor.b64  	%rd972, %rd971, %rd970;
	shf.l.wrap.b32 	%r6120, %r6114, %r6115, 25;
	shf.l.wrap.b32 	%r6121, %r6115, %r6114, 25;
	mov.b64 	%rd973, {%r6121, %r6120};
	xor.b64  	%rd974, %rd972, %rd973;
	xor.b64  	%rd975, %rd955, %rd905;
	xor.b64  	%rd976, %rd955, %rd930;
	and.b64  	%rd977, %rd976, %rd975;
	xor.b64  	%rd978, %rd977, %rd955;
	add.s64 	%rd979, %rd968, %rd978;
	add.s64 	%rd980, %rd979, %rd974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6122,%dummy}, %rd969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6123}, %rd969;
	}
	shf.r.wrap.b32 	%r6124, %r6123, %r6122, 14;
	shf.r.wrap.b32 	%r6125, %r6122, %r6123, 14;
	mov.b64 	%rd981, {%r6125, %r6124};
	shf.r.wrap.b32 	%r6126, %r6123, %r6122, 18;
	shf.r.wrap.b32 	%r6127, %r6122, %r6123, 18;
	mov.b64 	%rd982, {%r6127, %r6126};
	xor.b64  	%rd983, %rd982, %rd981;
	shf.l.wrap.b32 	%r6128, %r6122, %r6123, 23;
	shf.l.wrap.b32 	%r6129, %r6123, %r6122, 23;
	mov.b64 	%rd984, {%r6129, %r6128};
	xor.b64  	%rd985, %rd983, %rd984;
	xor.b64  	%rd986, %rd944, %rd919;
	and.b64  	%rd987, %rd969, %rd986;
	xor.b64  	%rd988, %rd987, %rd919;
	add.s64 	%rd989, %rd894, %rd641;
	ld.const.u64 	%rd990, [k_sha512+224];
	add.s64 	%rd991, %rd989, %rd990;
	add.s64 	%rd992, %rd991, %rd988;
	add.s64 	%rd993, %rd992, %rd985;
	add.s64 	%rd994, %rd993, %rd905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6130,%dummy}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6131}, %rd980;
	}
	shf.r.wrap.b32 	%r6132, %r6131, %r6130, 28;
	shf.r.wrap.b32 	%r6133, %r6130, %r6131, 28;
	mov.b64 	%rd995, {%r6133, %r6132};
	shf.l.wrap.b32 	%r6134, %r6130, %r6131, 30;
	shf.l.wrap.b32 	%r6135, %r6131, %r6130, 30;
	mov.b64 	%rd996, {%r6135, %r6134};
	xor.b64  	%rd997, %rd996, %rd995;
	shf.l.wrap.b32 	%r6136, %r6130, %r6131, 25;
	shf.l.wrap.b32 	%r6137, %r6131, %r6130, 25;
	mov.b64 	%rd998, {%r6137, %r6136};
	xor.b64  	%rd999, %rd997, %rd998;
	xor.b64  	%rd1000, %rd980, %rd930;
	xor.b64  	%rd1001, %rd980, %rd955;
	and.b64  	%rd1002, %rd1001, %rd1000;
	xor.b64  	%rd1003, %rd1002, %rd980;
	add.s64 	%rd1004, %rd993, %rd1003;
	add.s64 	%rd1005, %rd1004, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6138,%dummy}, %rd994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6139}, %rd994;
	}
	shf.r.wrap.b32 	%r6140, %r6139, %r6138, 14;
	shf.r.wrap.b32 	%r6141, %r6138, %r6139, 14;
	mov.b64 	%rd1006, {%r6141, %r6140};
	shf.r.wrap.b32 	%r6142, %r6139, %r6138, 18;
	shf.r.wrap.b32 	%r6143, %r6138, %r6139, 18;
	mov.b64 	%rd1007, {%r6143, %r6142};
	xor.b64  	%rd1008, %rd1007, %rd1006;
	shf.l.wrap.b32 	%r6144, %r6138, %r6139, 23;
	shf.l.wrap.b32 	%r6145, %r6139, %r6138, 23;
	mov.b64 	%rd1009, {%r6145, %r6144};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	xor.b64  	%rd1011, %rd969, %rd944;
	and.b64  	%rd1012, %rd994, %rd1011;
	xor.b64  	%rd1013, %rd1012, %rd944;
	add.s64 	%rd1014, %rd919, %rd654;
	ld.const.u64 	%rd1015, [k_sha512+232];
	add.s64 	%rd1016, %rd1014, %rd1015;
	add.s64 	%rd1017, %rd1016, %rd1013;
	add.s64 	%rd1018, %rd1017, %rd1010;
	add.s64 	%rd1019, %rd1018, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6146,%dummy}, %rd1005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6147}, %rd1005;
	}
	shf.r.wrap.b32 	%r6148, %r6147, %r6146, 28;
	shf.r.wrap.b32 	%r6149, %r6146, %r6147, 28;
	mov.b64 	%rd1020, {%r6149, %r6148};
	shf.l.wrap.b32 	%r6150, %r6146, %r6147, 30;
	shf.l.wrap.b32 	%r6151, %r6147, %r6146, 30;
	mov.b64 	%rd1021, {%r6151, %r6150};
	xor.b64  	%rd1022, %rd1021, %rd1020;
	shf.l.wrap.b32 	%r6152, %r6146, %r6147, 25;
	shf.l.wrap.b32 	%r6153, %r6147, %r6146, 25;
	mov.b64 	%rd1023, {%r6153, %r6152};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	xor.b64  	%rd1025, %rd1005, %rd955;
	xor.b64  	%rd1026, %rd1005, %rd980;
	and.b64  	%rd1027, %rd1026, %rd1025;
	xor.b64  	%rd1028, %rd1027, %rd1005;
	add.s64 	%rd1029, %rd1018, %rd1028;
	add.s64 	%rd1030, %rd1029, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6155}, %rd1019;
	}
	shf.r.wrap.b32 	%r6156, %r6155, %r6154, 14;
	shf.r.wrap.b32 	%r6157, %r6154, %r6155, 14;
	mov.b64 	%rd1031, {%r6157, %r6156};
	shf.r.wrap.b32 	%r6158, %r6155, %r6154, 18;
	shf.r.wrap.b32 	%r6159, %r6154, %r6155, 18;
	mov.b64 	%rd1032, {%r6159, %r6158};
	xor.b64  	%rd1033, %rd1032, %rd1031;
	shf.l.wrap.b32 	%r6160, %r6154, %r6155, 23;
	shf.l.wrap.b32 	%r6161, %r6155, %r6154, 23;
	mov.b64 	%rd1034, {%r6161, %r6160};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	xor.b64  	%rd1036, %rd994, %rd969;
	and.b64  	%rd1037, %rd1019, %rd1036;
	xor.b64  	%rd1038, %rd1037, %rd969;
	add.s64 	%rd1039, %rd944, %rd667;
	ld.const.u64 	%rd1040, [k_sha512+240];
	add.s64 	%rd1041, %rd1039, %rd1040;
	add.s64 	%rd1042, %rd1041, %rd1038;
	add.s64 	%rd1043, %rd1042, %rd1035;
	add.s64 	%rd1044, %rd1043, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6162,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6163}, %rd1030;
	}
	shf.r.wrap.b32 	%r6164, %r6163, %r6162, 28;
	shf.r.wrap.b32 	%r6165, %r6162, %r6163, 28;
	mov.b64 	%rd1045, {%r6165, %r6164};
	shf.l.wrap.b32 	%r6166, %r6162, %r6163, 30;
	shf.l.wrap.b32 	%r6167, %r6163, %r6162, 30;
	mov.b64 	%rd1046, {%r6167, %r6166};
	xor.b64  	%rd1047, %rd1046, %rd1045;
	shf.l.wrap.b32 	%r6168, %r6162, %r6163, 25;
	shf.l.wrap.b32 	%r6169, %r6163, %r6162, 25;
	mov.b64 	%rd1048, {%r6169, %r6168};
	xor.b64  	%rd1049, %rd1047, %rd1048;
	xor.b64  	%rd1050, %rd1030, %rd980;
	xor.b64  	%rd1051, %rd1030, %rd1005;
	and.b64  	%rd1052, %rd1051, %rd1050;
	xor.b64  	%rd1053, %rd1052, %rd1030;
	add.s64 	%rd1054, %rd1043, %rd1053;
	add.s64 	%rd1055, %rd1054, %rd1049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6170,%dummy}, %rd1044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6171}, %rd1044;
	}
	shf.r.wrap.b32 	%r6172, %r6171, %r6170, 14;
	shf.r.wrap.b32 	%r6173, %r6170, %r6171, 14;
	mov.b64 	%rd1056, {%r6173, %r6172};
	shf.r.wrap.b32 	%r6174, %r6171, %r6170, 18;
	shf.r.wrap.b32 	%r6175, %r6170, %r6171, 18;
	mov.b64 	%rd1057, {%r6175, %r6174};
	xor.b64  	%rd1058, %rd1057, %rd1056;
	shf.l.wrap.b32 	%r6176, %r6170, %r6171, 23;
	shf.l.wrap.b32 	%r6177, %r6171, %r6170, 23;
	mov.b64 	%rd1059, {%r6177, %r6176};
	xor.b64  	%rd1060, %rd1058, %rd1059;
	xor.b64  	%rd1061, %rd1019, %rd994;
	and.b64  	%rd1062, %rd1044, %rd1061;
	xor.b64  	%rd1063, %rd1062, %rd994;
	add.s64 	%rd1064, %rd969, %rd680;
	ld.const.u64 	%rd1065, [k_sha512+248];
	add.s64 	%rd1066, %rd1064, %rd1065;
	add.s64 	%rd1067, %rd1066, %rd1063;
	add.s64 	%rd1068, %rd1067, %rd1060;
	add.s64 	%rd1069, %rd1068, %rd980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6178,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6179}, %rd1055;
	}
	shf.r.wrap.b32 	%r6180, %r6179, %r6178, 28;
	shf.r.wrap.b32 	%r6181, %r6178, %r6179, 28;
	mov.b64 	%rd1070, {%r6181, %r6180};
	shf.l.wrap.b32 	%r6182, %r6178, %r6179, 30;
	shf.l.wrap.b32 	%r6183, %r6179, %r6178, 30;
	mov.b64 	%rd1071, {%r6183, %r6182};
	xor.b64  	%rd1072, %rd1071, %rd1070;
	shf.l.wrap.b32 	%r6184, %r6178, %r6179, 25;
	shf.l.wrap.b32 	%r6185, %r6179, %r6178, 25;
	mov.b64 	%rd1073, {%r6185, %r6184};
	xor.b64  	%rd1074, %rd1072, %rd1073;
	xor.b64  	%rd1075, %rd1055, %rd1005;
	xor.b64  	%rd1076, %rd1055, %rd1030;
	and.b64  	%rd1077, %rd1076, %rd1075;
	xor.b64  	%rd1078, %rd1077, %rd1055;
	add.s64 	%rd1079, %rd1068, %rd1078;
	add.s64 	%rd1080, %rd1079, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6186,%dummy}, %rd667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6187}, %rd667;
	}
	shf.r.wrap.b32 	%r6188, %r6187, %r6186, 19;
	shf.r.wrap.b32 	%r6189, %r6186, %r6187, 19;
	mov.b64 	%rd1081, {%r6189, %r6188};
	shf.l.wrap.b32 	%r6190, %r6186, %r6187, 3;
	shf.l.wrap.b32 	%r6191, %r6187, %r6186, 3;
	mov.b64 	%rd1082, {%r6191, %r6190};
	shr.u64 	%rd1083, %rd667, 6;
	xor.b64  	%rd1084, %rd1081, %rd1083;
	xor.b64  	%rd1085, %rd1084, %rd1082;
	shf.r.wrap.b32 	%r6192, %r5781, %r5780, 1;
	shf.r.wrap.b32 	%r6193, %r5780, %r5781, 1;
	mov.b64 	%rd1086, {%r6193, %r6192};
	shf.r.wrap.b32 	%r6194, %r5781, %r5780, 8;
	shf.r.wrap.b32 	%r6195, %r5780, %r5781, 8;
	mov.b64 	%rd1087, {%r6195, %r6194};
	shr.u64 	%rd1088, %rd498, 7;
	xor.b64  	%rd1089, %rd1086, %rd1088;
	xor.b64  	%rd1090, %rd1089, %rd1087;
	add.s64 	%rd1091, %rd602, %rd485;
	add.s64 	%rd1092, %rd1091, %rd1085;
	add.s64 	%rd1093, %rd1092, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6196,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd680;
	}
	shf.r.wrap.b32 	%r6198, %r6197, %r6196, 19;
	shf.r.wrap.b32 	%r6199, %r6196, %r6197, 19;
	mov.b64 	%rd1094, {%r6199, %r6198};
	shf.l.wrap.b32 	%r6200, %r6196, %r6197, 3;
	shf.l.wrap.b32 	%r6201, %r6197, %r6196, 3;
	mov.b64 	%rd1095, {%r6201, %r6200};
	shr.u64 	%rd1096, %rd680, 6;
	xor.b64  	%rd1097, %rd1094, %rd1096;
	xor.b64  	%rd1098, %rd1097, %rd1095;
	shf.r.wrap.b32 	%r6202, %r5793, %r5792, 1;
	shf.r.wrap.b32 	%r6203, %r5792, %r5793, 1;
	mov.b64 	%rd1099, {%r6203, %r6202};
	shf.r.wrap.b32 	%r6204, %r5793, %r5792, 8;
	shf.r.wrap.b32 	%r6205, %r5792, %r5793, 8;
	mov.b64 	%rd1100, {%r6205, %r6204};
	shr.u64 	%rd1101, %rd511, 7;
	xor.b64  	%rd1102, %rd1099, %rd1101;
	xor.b64  	%rd1103, %rd1102, %rd1100;
	add.s64 	%rd1104, %rd615, %rd498;
	add.s64 	%rd1105, %rd1104, %rd1098;
	add.s64 	%rd1106, %rd1105, %rd1103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6206,%dummy}, %rd1093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6207}, %rd1093;
	}
	shf.r.wrap.b32 	%r6208, %r6207, %r6206, 19;
	shf.r.wrap.b32 	%r6209, %r6206, %r6207, 19;
	mov.b64 	%rd1107, {%r6209, %r6208};
	shf.l.wrap.b32 	%r6210, %r6206, %r6207, 3;
	shf.l.wrap.b32 	%r6211, %r6207, %r6206, 3;
	mov.b64 	%rd1108, {%r6211, %r6210};
	shr.u64 	%rd1109, %rd1093, 6;
	xor.b64  	%rd1110, %rd1107, %rd1109;
	xor.b64  	%rd1111, %rd1110, %rd1108;
	shf.r.wrap.b32 	%r6212, %r5805, %r5804, 1;
	shf.r.wrap.b32 	%r6213, %r5804, %r5805, 1;
	mov.b64 	%rd1112, {%r6213, %r6212};
	shf.r.wrap.b32 	%r6214, %r5805, %r5804, 8;
	shf.r.wrap.b32 	%r6215, %r5804, %r5805, 8;
	mov.b64 	%rd1113, {%r6215, %r6214};
	shr.u64 	%rd1114, %rd524, 7;
	xor.b64  	%rd1115, %rd1112, %rd1114;
	xor.b64  	%rd1116, %rd1115, %rd1113;
	add.s64 	%rd1117, %rd628, %rd511;
	add.s64 	%rd1118, %rd1117, %rd1111;
	add.s64 	%rd1119, %rd1118, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6216,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6217}, %rd1106;
	}
	shf.r.wrap.b32 	%r6218, %r6217, %r6216, 19;
	shf.r.wrap.b32 	%r6219, %r6216, %r6217, 19;
	mov.b64 	%rd1120, {%r6219, %r6218};
	shf.l.wrap.b32 	%r6220, %r6216, %r6217, 3;
	shf.l.wrap.b32 	%r6221, %r6217, %r6216, 3;
	mov.b64 	%rd1121, {%r6221, %r6220};
	shr.u64 	%rd1122, %rd1106, 6;
	xor.b64  	%rd1123, %rd1120, %rd1122;
	xor.b64  	%rd1124, %rd1123, %rd1121;
	shf.r.wrap.b32 	%r6222, %r5817, %r5816, 1;
	shf.r.wrap.b32 	%r6223, %r5816, %r5817, 1;
	mov.b64 	%rd1125, {%r6223, %r6222};
	shf.r.wrap.b32 	%r6224, %r5817, %r5816, 8;
	shf.r.wrap.b32 	%r6225, %r5816, %r5817, 8;
	mov.b64 	%rd1126, {%r6225, %r6224};
	shr.u64 	%rd1127, %rd537, 7;
	xor.b64  	%rd1128, %rd1125, %rd1127;
	xor.b64  	%rd1129, %rd1128, %rd1126;
	add.s64 	%rd1130, %rd641, %rd524;
	add.s64 	%rd1131, %rd1130, %rd1124;
	add.s64 	%rd1132, %rd1131, %rd1129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6226,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6227}, %rd1119;
	}
	shf.r.wrap.b32 	%r6228, %r6227, %r6226, 19;
	shf.r.wrap.b32 	%r6229, %r6226, %r6227, 19;
	mov.b64 	%rd1133, {%r6229, %r6228};
	shf.l.wrap.b32 	%r6230, %r6226, %r6227, 3;
	shf.l.wrap.b32 	%r6231, %r6227, %r6226, 3;
	mov.b64 	%rd1134, {%r6231, %r6230};
	shr.u64 	%rd1135, %rd1119, 6;
	xor.b64  	%rd1136, %rd1133, %rd1135;
	xor.b64  	%rd1137, %rd1136, %rd1134;
	shf.r.wrap.b32 	%r6232, %r5829, %r5828, 1;
	shf.r.wrap.b32 	%r6233, %r5828, %r5829, 1;
	mov.b64 	%rd1138, {%r6233, %r6232};
	shf.r.wrap.b32 	%r6234, %r5829, %r5828, 8;
	shf.r.wrap.b32 	%r6235, %r5828, %r5829, 8;
	mov.b64 	%rd1139, {%r6235, %r6234};
	shr.u64 	%rd1140, %rd550, 7;
	xor.b64  	%rd1141, %rd1138, %rd1140;
	xor.b64  	%rd1142, %rd1141, %rd1139;
	add.s64 	%rd1143, %rd654, %rd537;
	add.s64 	%rd1144, %rd1143, %rd1137;
	add.s64 	%rd1145, %rd1144, %rd1142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6236,%dummy}, %rd1132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6237}, %rd1132;
	}
	shf.r.wrap.b32 	%r6238, %r6237, %r6236, 19;
	shf.r.wrap.b32 	%r6239, %r6236, %r6237, 19;
	mov.b64 	%rd1146, {%r6239, %r6238};
	shf.l.wrap.b32 	%r6240, %r6236, %r6237, 3;
	shf.l.wrap.b32 	%r6241, %r6237, %r6236, 3;
	mov.b64 	%rd1147, {%r6241, %r6240};
	shr.u64 	%rd1148, %rd1132, 6;
	xor.b64  	%rd1149, %rd1146, %rd1148;
	xor.b64  	%rd1150, %rd1149, %rd1147;
	shf.r.wrap.b32 	%r6242, %r5841, %r5840, 1;
	shf.r.wrap.b32 	%r6243, %r5840, %r5841, 1;
	mov.b64 	%rd1151, {%r6243, %r6242};
	shf.r.wrap.b32 	%r6244, %r5841, %r5840, 8;
	shf.r.wrap.b32 	%r6245, %r5840, %r5841, 8;
	mov.b64 	%rd1152, {%r6245, %r6244};
	shr.u64 	%rd1153, %rd563, 7;
	xor.b64  	%rd1154, %rd1151, %rd1153;
	xor.b64  	%rd1155, %rd1154, %rd1152;
	add.s64 	%rd1156, %rd667, %rd550;
	add.s64 	%rd1157, %rd1156, %rd1150;
	add.s64 	%rd1158, %rd1157, %rd1155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6246,%dummy}, %rd1145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6247}, %rd1145;
	}
	shf.r.wrap.b32 	%r6248, %r6247, %r6246, 19;
	shf.r.wrap.b32 	%r6249, %r6246, %r6247, 19;
	mov.b64 	%rd1159, {%r6249, %r6248};
	shf.l.wrap.b32 	%r6250, %r6246, %r6247, 3;
	shf.l.wrap.b32 	%r6251, %r6247, %r6246, 3;
	mov.b64 	%rd1160, {%r6251, %r6250};
	shr.u64 	%rd1161, %rd1145, 6;
	xor.b64  	%rd1162, %rd1159, %rd1161;
	xor.b64  	%rd1163, %rd1162, %rd1160;
	shf.r.wrap.b32 	%r6252, %r5853, %r5852, 1;
	shf.r.wrap.b32 	%r6253, %r5852, %r5853, 1;
	mov.b64 	%rd1164, {%r6253, %r6252};
	shf.r.wrap.b32 	%r6254, %r5853, %r5852, 8;
	shf.r.wrap.b32 	%r6255, %r5852, %r5853, 8;
	mov.b64 	%rd1165, {%r6255, %r6254};
	shr.u64 	%rd1166, %rd576, 7;
	xor.b64  	%rd1167, %rd1164, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1165;
	add.s64 	%rd1169, %rd680, %rd563;
	add.s64 	%rd1170, %rd1169, %rd1163;
	add.s64 	%rd1171, %rd1170, %rd1168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6256,%dummy}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6257}, %rd1158;
	}
	shf.r.wrap.b32 	%r6258, %r6257, %r6256, 19;
	shf.r.wrap.b32 	%r6259, %r6256, %r6257, 19;
	mov.b64 	%rd1172, {%r6259, %r6258};
	shf.l.wrap.b32 	%r6260, %r6256, %r6257, 3;
	shf.l.wrap.b32 	%r6261, %r6257, %r6256, 3;
	mov.b64 	%rd1173, {%r6261, %r6260};
	shr.u64 	%rd1174, %rd1158, 6;
	xor.b64  	%rd1175, %rd1172, %rd1174;
	xor.b64  	%rd1176, %rd1175, %rd1173;
	shf.r.wrap.b32 	%r6262, %r5865, %r5864, 1;
	shf.r.wrap.b32 	%r6263, %r5864, %r5865, 1;
	mov.b64 	%rd1177, {%r6263, %r6262};
	shf.r.wrap.b32 	%r6264, %r5865, %r5864, 8;
	shf.r.wrap.b32 	%r6265, %r5864, %r5865, 8;
	mov.b64 	%rd1178, {%r6265, %r6264};
	shr.u64 	%rd1179, %rd589, 7;
	xor.b64  	%rd1180, %rd1177, %rd1179;
	xor.b64  	%rd1181, %rd1180, %rd1178;
	add.s64 	%rd1182, %rd1093, %rd576;
	add.s64 	%rd1183, %rd1182, %rd1176;
	add.s64 	%rd1184, %rd1183, %rd1181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6266,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6267}, %rd1171;
	}
	shf.r.wrap.b32 	%r6268, %r6267, %r6266, 19;
	shf.r.wrap.b32 	%r6269, %r6266, %r6267, 19;
	mov.b64 	%rd1185, {%r6269, %r6268};
	shf.l.wrap.b32 	%r6270, %r6266, %r6267, 3;
	shf.l.wrap.b32 	%r6271, %r6267, %r6266, 3;
	mov.b64 	%rd1186, {%r6271, %r6270};
	shr.u64 	%rd1187, %rd1171, 6;
	xor.b64  	%rd1188, %rd1185, %rd1187;
	xor.b64  	%rd1189, %rd1188, %rd1186;
	shf.r.wrap.b32 	%r6272, %r5877, %r5876, 1;
	shf.r.wrap.b32 	%r6273, %r5876, %r5877, 1;
	mov.b64 	%rd1190, {%r6273, %r6272};
	shf.r.wrap.b32 	%r6274, %r5877, %r5876, 8;
	shf.r.wrap.b32 	%r6275, %r5876, %r5877, 8;
	mov.b64 	%rd1191, {%r6275, %r6274};
	shr.u64 	%rd1192, %rd602, 7;
	xor.b64  	%rd1193, %rd1190, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd1191;
	add.s64 	%rd1195, %rd1106, %rd589;
	add.s64 	%rd1196, %rd1195, %rd1189;
	add.s64 	%rd1197, %rd1196, %rd1194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6276,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6277}, %rd1184;
	}
	shf.r.wrap.b32 	%r6278, %r6277, %r6276, 19;
	shf.r.wrap.b32 	%r6279, %r6276, %r6277, 19;
	mov.b64 	%rd1198, {%r6279, %r6278};
	shf.l.wrap.b32 	%r6280, %r6276, %r6277, 3;
	shf.l.wrap.b32 	%r6281, %r6277, %r6276, 3;
	mov.b64 	%rd1199, {%r6281, %r6280};
	shr.u64 	%rd1200, %rd1184, 6;
	xor.b64  	%rd1201, %rd1198, %rd1200;
	xor.b64  	%rd1202, %rd1201, %rd1199;
	shf.r.wrap.b32 	%r6282, %r5889, %r5888, 1;
	shf.r.wrap.b32 	%r6283, %r5888, %r5889, 1;
	mov.b64 	%rd1203, {%r6283, %r6282};
	shf.r.wrap.b32 	%r6284, %r5889, %r5888, 8;
	shf.r.wrap.b32 	%r6285, %r5888, %r5889, 8;
	mov.b64 	%rd1204, {%r6285, %r6284};
	shr.u64 	%rd1205, %rd615, 7;
	xor.b64  	%rd1206, %rd1203, %rd1205;
	xor.b64  	%rd1207, %rd1206, %rd1204;
	add.s64 	%rd1208, %rd1119, %rd602;
	add.s64 	%rd1209, %rd1208, %rd1202;
	add.s64 	%rd1210, %rd1209, %rd1207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6286,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6287}, %rd1197;
	}
	shf.r.wrap.b32 	%r6288, %r6287, %r6286, 19;
	shf.r.wrap.b32 	%r6289, %r6286, %r6287, 19;
	mov.b64 	%rd1211, {%r6289, %r6288};
	shf.l.wrap.b32 	%r6290, %r6286, %r6287, 3;
	shf.l.wrap.b32 	%r6291, %r6287, %r6286, 3;
	mov.b64 	%rd1212, {%r6291, %r6290};
	shr.u64 	%rd1213, %rd1197, 6;
	xor.b64  	%rd1214, %rd1211, %rd1213;
	xor.b64  	%rd1215, %rd1214, %rd1212;
	shf.r.wrap.b32 	%r6292, %r5901, %r5900, 1;
	shf.r.wrap.b32 	%r6293, %r5900, %r5901, 1;
	mov.b64 	%rd1216, {%r6293, %r6292};
	shf.r.wrap.b32 	%r6294, %r5901, %r5900, 8;
	shf.r.wrap.b32 	%r6295, %r5900, %r5901, 8;
	mov.b64 	%rd1217, {%r6295, %r6294};
	shr.u64 	%rd1218, %rd628, 7;
	xor.b64  	%rd1219, %rd1216, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1217;
	add.s64 	%rd1221, %rd1132, %rd615;
	add.s64 	%rd1222, %rd1221, %rd1215;
	add.s64 	%rd1223, %rd1222, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6296,%dummy}, %rd1210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd1210;
	}
	shf.r.wrap.b32 	%r6298, %r6297, %r6296, 19;
	shf.r.wrap.b32 	%r6299, %r6296, %r6297, 19;
	mov.b64 	%rd1224, {%r6299, %r6298};
	shf.l.wrap.b32 	%r6300, %r6296, %r6297, 3;
	shf.l.wrap.b32 	%r6301, %r6297, %r6296, 3;
	mov.b64 	%rd1225, {%r6301, %r6300};
	shr.u64 	%rd1226, %rd1210, 6;
	xor.b64  	%rd1227, %rd1224, %rd1226;
	xor.b64  	%rd1228, %rd1227, %rd1225;
	shf.r.wrap.b32 	%r6302, %r5911, %r5910, 1;
	shf.r.wrap.b32 	%r6303, %r5910, %r5911, 1;
	mov.b64 	%rd1229, {%r6303, %r6302};
	shf.r.wrap.b32 	%r6304, %r5911, %r5910, 8;
	shf.r.wrap.b32 	%r6305, %r5910, %r5911, 8;
	mov.b64 	%rd1230, {%r6305, %r6304};
	shr.u64 	%rd1231, %rd641, 7;
	xor.b64  	%rd1232, %rd1229, %rd1231;
	xor.b64  	%rd1233, %rd1232, %rd1230;
	add.s64 	%rd1234, %rd1145, %rd628;
	add.s64 	%rd1235, %rd1234, %rd1228;
	add.s64 	%rd1236, %rd1235, %rd1233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6306,%dummy}, %rd1223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6307}, %rd1223;
	}
	shf.r.wrap.b32 	%r6308, %r6307, %r6306, 19;
	shf.r.wrap.b32 	%r6309, %r6306, %r6307, 19;
	mov.b64 	%rd1237, {%r6309, %r6308};
	shf.l.wrap.b32 	%r6310, %r6306, %r6307, 3;
	shf.l.wrap.b32 	%r6311, %r6307, %r6306, 3;
	mov.b64 	%rd1238, {%r6311, %r6310};
	shr.u64 	%rd1239, %rd1223, 6;
	xor.b64  	%rd1240, %rd1237, %rd1239;
	xor.b64  	%rd1241, %rd1240, %rd1238;
	shf.r.wrap.b32 	%r6312, %r5921, %r5920, 1;
	shf.r.wrap.b32 	%r6313, %r5920, %r5921, 1;
	mov.b64 	%rd1242, {%r6313, %r6312};
	shf.r.wrap.b32 	%r6314, %r5921, %r5920, 8;
	shf.r.wrap.b32 	%r6315, %r5920, %r5921, 8;
	mov.b64 	%rd1243, {%r6315, %r6314};
	shr.u64 	%rd1244, %rd654, 7;
	xor.b64  	%rd1245, %rd1242, %rd1244;
	xor.b64  	%rd1246, %rd1245, %rd1243;
	add.s64 	%rd1247, %rd1158, %rd641;
	add.s64 	%rd1248, %rd1247, %rd1241;
	add.s64 	%rd1249, %rd1248, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6316,%dummy}, %rd1236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6317}, %rd1236;
	}
	shf.r.wrap.b32 	%r6318, %r6317, %r6316, 19;
	shf.r.wrap.b32 	%r6319, %r6316, %r6317, 19;
	mov.b64 	%rd1250, {%r6319, %r6318};
	shf.l.wrap.b32 	%r6320, %r6316, %r6317, 3;
	shf.l.wrap.b32 	%r6321, %r6317, %r6316, 3;
	mov.b64 	%rd1251, {%r6321, %r6320};
	shr.u64 	%rd1252, %rd1236, 6;
	xor.b64  	%rd1253, %rd1250, %rd1252;
	xor.b64  	%rd1254, %rd1253, %rd1251;
	shf.r.wrap.b32 	%r6322, %r6187, %r6186, 1;
	shf.r.wrap.b32 	%r6323, %r6186, %r6187, 1;
	mov.b64 	%rd1255, {%r6323, %r6322};
	shf.r.wrap.b32 	%r6324, %r6187, %r6186, 8;
	shf.r.wrap.b32 	%r6325, %r6186, %r6187, 8;
	mov.b64 	%rd1256, {%r6325, %r6324};
	shr.u64 	%rd1257, %rd667, 7;
	xor.b64  	%rd1258, %rd1255, %rd1257;
	xor.b64  	%rd1259, %rd1258, %rd1256;
	add.s64 	%rd1260, %rd1171, %rd654;
	add.s64 	%rd1261, %rd1260, %rd1254;
	add.s64 	%rd1262, %rd1261, %rd1259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6326,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6327}, %rd1249;
	}
	shf.r.wrap.b32 	%r6328, %r6327, %r6326, 19;
	shf.r.wrap.b32 	%r6329, %r6326, %r6327, 19;
	mov.b64 	%rd1263, {%r6329, %r6328};
	shf.l.wrap.b32 	%r6330, %r6326, %r6327, 3;
	shf.l.wrap.b32 	%r6331, %r6327, %r6326, 3;
	mov.b64 	%rd1264, {%r6331, %r6330};
	shr.u64 	%rd1265, %rd1249, 6;
	xor.b64  	%rd1266, %rd1263, %rd1265;
	xor.b64  	%rd1267, %rd1266, %rd1264;
	shf.r.wrap.b32 	%r6332, %r6197, %r6196, 1;
	shf.r.wrap.b32 	%r6333, %r6196, %r6197, 1;
	mov.b64 	%rd1268, {%r6333, %r6332};
	shf.r.wrap.b32 	%r6334, %r6197, %r6196, 8;
	shf.r.wrap.b32 	%r6335, %r6196, %r6197, 8;
	mov.b64 	%rd1269, {%r6335, %r6334};
	shr.u64 	%rd1270, %rd680, 7;
	xor.b64  	%rd1271, %rd1268, %rd1270;
	xor.b64  	%rd1272, %rd1271, %rd1269;
	add.s64 	%rd1273, %rd1184, %rd667;
	add.s64 	%rd1274, %rd1273, %rd1267;
	add.s64 	%rd1275, %rd1274, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6336,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6337}, %rd1262;
	}
	shf.r.wrap.b32 	%r6338, %r6337, %r6336, 19;
	shf.r.wrap.b32 	%r6339, %r6336, %r6337, 19;
	mov.b64 	%rd1276, {%r6339, %r6338};
	shf.l.wrap.b32 	%r6340, %r6336, %r6337, 3;
	shf.l.wrap.b32 	%r6341, %r6337, %r6336, 3;
	mov.b64 	%rd1277, {%r6341, %r6340};
	shr.u64 	%rd1278, %rd1262, 6;
	xor.b64  	%rd1279, %rd1276, %rd1278;
	xor.b64  	%rd1280, %rd1279, %rd1277;
	shf.r.wrap.b32 	%r6342, %r6207, %r6206, 1;
	shf.r.wrap.b32 	%r6343, %r6206, %r6207, 1;
	mov.b64 	%rd1281, {%r6343, %r6342};
	shf.r.wrap.b32 	%r6344, %r6207, %r6206, 8;
	shf.r.wrap.b32 	%r6345, %r6206, %r6207, 8;
	mov.b64 	%rd1282, {%r6345, %r6344};
	shr.u64 	%rd1283, %rd1093, 7;
	xor.b64  	%rd1284, %rd1281, %rd1283;
	xor.b64  	%rd1285, %rd1284, %rd1282;
	add.s64 	%rd1286, %rd1197, %rd680;
	add.s64 	%rd1287, %rd1286, %rd1280;
	add.s64 	%rd1288, %rd1287, %rd1285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6346,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6347}, %rd1069;
	}
	shf.r.wrap.b32 	%r6348, %r6347, %r6346, 14;
	shf.r.wrap.b32 	%r6349, %r6346, %r6347, 14;
	mov.b64 	%rd1289, {%r6349, %r6348};
	shf.r.wrap.b32 	%r6350, %r6347, %r6346, 18;
	shf.r.wrap.b32 	%r6351, %r6346, %r6347, 18;
	mov.b64 	%rd1290, {%r6351, %r6350};
	xor.b64  	%rd1291, %rd1290, %rd1289;
	shf.l.wrap.b32 	%r6352, %r6346, %r6347, 23;
	shf.l.wrap.b32 	%r6353, %r6347, %r6346, 23;
	mov.b64 	%rd1292, {%r6353, %r6352};
	xor.b64  	%rd1293, %rd1291, %rd1292;
	xor.b64  	%rd1294, %rd1044, %rd1019;
	and.b64  	%rd1295, %rd1294, %rd1069;
	xor.b64  	%rd1296, %rd1295, %rd1019;
	add.s64 	%rd1297, %rd1296, %rd994;
	add.s64 	%rd1298, %rd1297, %rd1093;
	ld.const.u64 	%rd1299, [k_sha512+256];
	add.s64 	%rd1300, %rd1298, %rd1299;
	add.s64 	%rd1301, %rd1300, %rd1293;
	add.s64 	%rd1302, %rd1301, %rd1005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6354,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6355}, %rd1080;
	}
	shf.r.wrap.b32 	%r6356, %r6355, %r6354, 28;
	shf.r.wrap.b32 	%r6357, %r6354, %r6355, 28;
	mov.b64 	%rd1303, {%r6357, %r6356};
	shf.l.wrap.b32 	%r6358, %r6354, %r6355, 30;
	shf.l.wrap.b32 	%r6359, %r6355, %r6354, 30;
	mov.b64 	%rd1304, {%r6359, %r6358};
	xor.b64  	%rd1305, %rd1304, %rd1303;
	shf.l.wrap.b32 	%r6360, %r6354, %r6355, 25;
	shf.l.wrap.b32 	%r6361, %r6355, %r6354, 25;
	mov.b64 	%rd1306, {%r6361, %r6360};
	xor.b64  	%rd1307, %rd1305, %rd1306;
	xor.b64  	%rd1308, %rd1080, %rd1030;
	xor.b64  	%rd1309, %rd1080, %rd1055;
	and.b64  	%rd1310, %rd1309, %rd1308;
	xor.b64  	%rd1311, %rd1310, %rd1080;
	add.s64 	%rd1312, %rd1301, %rd1311;
	add.s64 	%rd1313, %rd1312, %rd1307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6362,%dummy}, %rd1302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6363}, %rd1302;
	}
	shf.r.wrap.b32 	%r6364, %r6363, %r6362, 14;
	shf.r.wrap.b32 	%r6365, %r6362, %r6363, 14;
	mov.b64 	%rd1314, {%r6365, %r6364};
	shf.r.wrap.b32 	%r6366, %r6363, %r6362, 18;
	shf.r.wrap.b32 	%r6367, %r6362, %r6363, 18;
	mov.b64 	%rd1315, {%r6367, %r6366};
	xor.b64  	%rd1316, %rd1315, %rd1314;
	shf.l.wrap.b32 	%r6368, %r6362, %r6363, 23;
	shf.l.wrap.b32 	%r6369, %r6363, %r6362, 23;
	mov.b64 	%rd1317, {%r6369, %r6368};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	xor.b64  	%rd1319, %rd1069, %rd1044;
	and.b64  	%rd1320, %rd1302, %rd1319;
	xor.b64  	%rd1321, %rd1320, %rd1044;
	add.s64 	%rd1322, %rd1106, %rd1019;
	ld.const.u64 	%rd1323, [k_sha512+264];
	add.s64 	%rd1324, %rd1322, %rd1323;
	add.s64 	%rd1325, %rd1324, %rd1321;
	add.s64 	%rd1326, %rd1325, %rd1318;
	add.s64 	%rd1327, %rd1326, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6370,%dummy}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6371}, %rd1313;
	}
	shf.r.wrap.b32 	%r6372, %r6371, %r6370, 28;
	shf.r.wrap.b32 	%r6373, %r6370, %r6371, 28;
	mov.b64 	%rd1328, {%r6373, %r6372};
	shf.l.wrap.b32 	%r6374, %r6370, %r6371, 30;
	shf.l.wrap.b32 	%r6375, %r6371, %r6370, 30;
	mov.b64 	%rd1329, {%r6375, %r6374};
	xor.b64  	%rd1330, %rd1329, %rd1328;
	shf.l.wrap.b32 	%r6376, %r6370, %r6371, 25;
	shf.l.wrap.b32 	%r6377, %r6371, %r6370, 25;
	mov.b64 	%rd1331, {%r6377, %r6376};
	xor.b64  	%rd1332, %rd1330, %rd1331;
	xor.b64  	%rd1333, %rd1313, %rd1055;
	xor.b64  	%rd1334, %rd1313, %rd1080;
	and.b64  	%rd1335, %rd1334, %rd1333;
	xor.b64  	%rd1336, %rd1335, %rd1313;
	add.s64 	%rd1337, %rd1326, %rd1336;
	add.s64 	%rd1338, %rd1337, %rd1332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd1327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6379}, %rd1327;
	}
	shf.r.wrap.b32 	%r6380, %r6379, %r6378, 14;
	shf.r.wrap.b32 	%r6381, %r6378, %r6379, 14;
	mov.b64 	%rd1339, {%r6381, %r6380};
	shf.r.wrap.b32 	%r6382, %r6379, %r6378, 18;
	shf.r.wrap.b32 	%r6383, %r6378, %r6379, 18;
	mov.b64 	%rd1340, {%r6383, %r6382};
	xor.b64  	%rd1341, %rd1340, %rd1339;
	shf.l.wrap.b32 	%r6384, %r6378, %r6379, 23;
	shf.l.wrap.b32 	%r6385, %r6379, %r6378, 23;
	mov.b64 	%rd1342, {%r6385, %r6384};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	xor.b64  	%rd1344, %rd1302, %rd1069;
	and.b64  	%rd1345, %rd1327, %rd1344;
	xor.b64  	%rd1346, %rd1345, %rd1069;
	add.s64 	%rd1347, %rd1119, %rd1044;
	ld.const.u64 	%rd1348, [k_sha512+272];
	add.s64 	%rd1349, %rd1347, %rd1348;
	add.s64 	%rd1350, %rd1349, %rd1346;
	add.s64 	%rd1351, %rd1350, %rd1343;
	add.s64 	%rd1352, %rd1351, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6386,%dummy}, %rd1338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6387}, %rd1338;
	}
	shf.r.wrap.b32 	%r6388, %r6387, %r6386, 28;
	shf.r.wrap.b32 	%r6389, %r6386, %r6387, 28;
	mov.b64 	%rd1353, {%r6389, %r6388};
	shf.l.wrap.b32 	%r6390, %r6386, %r6387, 30;
	shf.l.wrap.b32 	%r6391, %r6387, %r6386, 30;
	mov.b64 	%rd1354, {%r6391, %r6390};
	xor.b64  	%rd1355, %rd1354, %rd1353;
	shf.l.wrap.b32 	%r6392, %r6386, %r6387, 25;
	shf.l.wrap.b32 	%r6393, %r6387, %r6386, 25;
	mov.b64 	%rd1356, {%r6393, %r6392};
	xor.b64  	%rd1357, %rd1355, %rd1356;
	xor.b64  	%rd1358, %rd1338, %rd1080;
	xor.b64  	%rd1359, %rd1338, %rd1313;
	and.b64  	%rd1360, %rd1359, %rd1358;
	xor.b64  	%rd1361, %rd1360, %rd1338;
	add.s64 	%rd1362, %rd1351, %rd1361;
	add.s64 	%rd1363, %rd1362, %rd1357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6394,%dummy}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6395}, %rd1352;
	}
	shf.r.wrap.b32 	%r6396, %r6395, %r6394, 14;
	shf.r.wrap.b32 	%r6397, %r6394, %r6395, 14;
	mov.b64 	%rd1364, {%r6397, %r6396};
	shf.r.wrap.b32 	%r6398, %r6395, %r6394, 18;
	shf.r.wrap.b32 	%r6399, %r6394, %r6395, 18;
	mov.b64 	%rd1365, {%r6399, %r6398};
	xor.b64  	%rd1366, %rd1365, %rd1364;
	shf.l.wrap.b32 	%r6400, %r6394, %r6395, 23;
	shf.l.wrap.b32 	%r6401, %r6395, %r6394, 23;
	mov.b64 	%rd1367, {%r6401, %r6400};
	xor.b64  	%rd1368, %rd1366, %rd1367;
	xor.b64  	%rd1369, %rd1327, %rd1302;
	and.b64  	%rd1370, %rd1352, %rd1369;
	xor.b64  	%rd1371, %rd1370, %rd1302;
	add.s64 	%rd1372, %rd1132, %rd1069;
	ld.const.u64 	%rd1373, [k_sha512+280];
	add.s64 	%rd1374, %rd1372, %rd1373;
	add.s64 	%rd1375, %rd1374, %rd1371;
	add.s64 	%rd1376, %rd1375, %rd1368;
	add.s64 	%rd1377, %rd1376, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6402,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6403}, %rd1363;
	}
	shf.r.wrap.b32 	%r6404, %r6403, %r6402, 28;
	shf.r.wrap.b32 	%r6405, %r6402, %r6403, 28;
	mov.b64 	%rd1378, {%r6405, %r6404};
	shf.l.wrap.b32 	%r6406, %r6402, %r6403, 30;
	shf.l.wrap.b32 	%r6407, %r6403, %r6402, 30;
	mov.b64 	%rd1379, {%r6407, %r6406};
	xor.b64  	%rd1380, %rd1379, %rd1378;
	shf.l.wrap.b32 	%r6408, %r6402, %r6403, 25;
	shf.l.wrap.b32 	%r6409, %r6403, %r6402, 25;
	mov.b64 	%rd1381, {%r6409, %r6408};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	xor.b64  	%rd1383, %rd1363, %rd1313;
	xor.b64  	%rd1384, %rd1363, %rd1338;
	and.b64  	%rd1385, %rd1384, %rd1383;
	xor.b64  	%rd1386, %rd1385, %rd1363;
	add.s64 	%rd1387, %rd1376, %rd1386;
	add.s64 	%rd1388, %rd1387, %rd1382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6410,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6411}, %rd1377;
	}
	shf.r.wrap.b32 	%r6412, %r6411, %r6410, 14;
	shf.r.wrap.b32 	%r6413, %r6410, %r6411, 14;
	mov.b64 	%rd1389, {%r6413, %r6412};
	shf.r.wrap.b32 	%r6414, %r6411, %r6410, 18;
	shf.r.wrap.b32 	%r6415, %r6410, %r6411, 18;
	mov.b64 	%rd1390, {%r6415, %r6414};
	xor.b64  	%rd1391, %rd1390, %rd1389;
	shf.l.wrap.b32 	%r6416, %r6410, %r6411, 23;
	shf.l.wrap.b32 	%r6417, %r6411, %r6410, 23;
	mov.b64 	%rd1392, {%r6417, %r6416};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	xor.b64  	%rd1394, %rd1352, %rd1327;
	and.b64  	%rd1395, %rd1377, %rd1394;
	xor.b64  	%rd1396, %rd1395, %rd1327;
	add.s64 	%rd1397, %rd1302, %rd1145;
	ld.const.u64 	%rd1398, [k_sha512+288];
	add.s64 	%rd1399, %rd1397, %rd1398;
	add.s64 	%rd1400, %rd1399, %rd1396;
	add.s64 	%rd1401, %rd1400, %rd1393;
	add.s64 	%rd1402, %rd1401, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6418,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6419}, %rd1388;
	}
	shf.r.wrap.b32 	%r6420, %r6419, %r6418, 28;
	shf.r.wrap.b32 	%r6421, %r6418, %r6419, 28;
	mov.b64 	%rd1403, {%r6421, %r6420};
	shf.l.wrap.b32 	%r6422, %r6418, %r6419, 30;
	shf.l.wrap.b32 	%r6423, %r6419, %r6418, 30;
	mov.b64 	%rd1404, {%r6423, %r6422};
	xor.b64  	%rd1405, %rd1404, %rd1403;
	shf.l.wrap.b32 	%r6424, %r6418, %r6419, 25;
	shf.l.wrap.b32 	%r6425, %r6419, %r6418, 25;
	mov.b64 	%rd1406, {%r6425, %r6424};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	xor.b64  	%rd1408, %rd1388, %rd1338;
	xor.b64  	%rd1409, %rd1388, %rd1363;
	and.b64  	%rd1410, %rd1409, %rd1408;
	xor.b64  	%rd1411, %rd1410, %rd1388;
	add.s64 	%rd1412, %rd1401, %rd1411;
	add.s64 	%rd1413, %rd1412, %rd1407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6426,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6427}, %rd1402;
	}
	shf.r.wrap.b32 	%r6428, %r6427, %r6426, 14;
	shf.r.wrap.b32 	%r6429, %r6426, %r6427, 14;
	mov.b64 	%rd1414, {%r6429, %r6428};
	shf.r.wrap.b32 	%r6430, %r6427, %r6426, 18;
	shf.r.wrap.b32 	%r6431, %r6426, %r6427, 18;
	mov.b64 	%rd1415, {%r6431, %r6430};
	xor.b64  	%rd1416, %rd1415, %rd1414;
	shf.l.wrap.b32 	%r6432, %r6426, %r6427, 23;
	shf.l.wrap.b32 	%r6433, %r6427, %r6426, 23;
	mov.b64 	%rd1417, {%r6433, %r6432};
	xor.b64  	%rd1418, %rd1416, %rd1417;
	xor.b64  	%rd1419, %rd1377, %rd1352;
	and.b64  	%rd1420, %rd1402, %rd1419;
	xor.b64  	%rd1421, %rd1420, %rd1352;
	add.s64 	%rd1422, %rd1327, %rd1158;
	ld.const.u64 	%rd1423, [k_sha512+296];
	add.s64 	%rd1424, %rd1422, %rd1423;
	add.s64 	%rd1425, %rd1424, %rd1421;
	add.s64 	%rd1426, %rd1425, %rd1418;
	add.s64 	%rd1427, %rd1426, %rd1338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6434,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6435}, %rd1413;
	}
	shf.r.wrap.b32 	%r6436, %r6435, %r6434, 28;
	shf.r.wrap.b32 	%r6437, %r6434, %r6435, 28;
	mov.b64 	%rd1428, {%r6437, %r6436};
	shf.l.wrap.b32 	%r6438, %r6434, %r6435, 30;
	shf.l.wrap.b32 	%r6439, %r6435, %r6434, 30;
	mov.b64 	%rd1429, {%r6439, %r6438};
	xor.b64  	%rd1430, %rd1429, %rd1428;
	shf.l.wrap.b32 	%r6440, %r6434, %r6435, 25;
	shf.l.wrap.b32 	%r6441, %r6435, %r6434, 25;
	mov.b64 	%rd1431, {%r6441, %r6440};
	xor.b64  	%rd1432, %rd1430, %rd1431;
	xor.b64  	%rd1433, %rd1413, %rd1363;
	xor.b64  	%rd1434, %rd1413, %rd1388;
	and.b64  	%rd1435, %rd1434, %rd1433;
	xor.b64  	%rd1436, %rd1435, %rd1413;
	add.s64 	%rd1437, %rd1426, %rd1436;
	add.s64 	%rd1438, %rd1437, %rd1432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6442,%dummy}, %rd1427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6443}, %rd1427;
	}
	shf.r.wrap.b32 	%r6444, %r6443, %r6442, 14;
	shf.r.wrap.b32 	%r6445, %r6442, %r6443, 14;
	mov.b64 	%rd1439, {%r6445, %r6444};
	shf.r.wrap.b32 	%r6446, %r6443, %r6442, 18;
	shf.r.wrap.b32 	%r6447, %r6442, %r6443, 18;
	mov.b64 	%rd1440, {%r6447, %r6446};
	xor.b64  	%rd1441, %rd1440, %rd1439;
	shf.l.wrap.b32 	%r6448, %r6442, %r6443, 23;
	shf.l.wrap.b32 	%r6449, %r6443, %r6442, 23;
	mov.b64 	%rd1442, {%r6449, %r6448};
	xor.b64  	%rd1443, %rd1441, %rd1442;
	xor.b64  	%rd1444, %rd1402, %rd1377;
	and.b64  	%rd1445, %rd1427, %rd1444;
	xor.b64  	%rd1446, %rd1445, %rd1377;
	add.s64 	%rd1447, %rd1352, %rd1171;
	ld.const.u64 	%rd1448, [k_sha512+304];
	add.s64 	%rd1449, %rd1447, %rd1448;
	add.s64 	%rd1450, %rd1449, %rd1446;
	add.s64 	%rd1451, %rd1450, %rd1443;
	add.s64 	%rd1452, %rd1451, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6450,%dummy}, %rd1438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6451}, %rd1438;
	}
	shf.r.wrap.b32 	%r6452, %r6451, %r6450, 28;
	shf.r.wrap.b32 	%r6453, %r6450, %r6451, 28;
	mov.b64 	%rd1453, {%r6453, %r6452};
	shf.l.wrap.b32 	%r6454, %r6450, %r6451, 30;
	shf.l.wrap.b32 	%r6455, %r6451, %r6450, 30;
	mov.b64 	%rd1454, {%r6455, %r6454};
	xor.b64  	%rd1455, %rd1454, %rd1453;
	shf.l.wrap.b32 	%r6456, %r6450, %r6451, 25;
	shf.l.wrap.b32 	%r6457, %r6451, %r6450, 25;
	mov.b64 	%rd1456, {%r6457, %r6456};
	xor.b64  	%rd1457, %rd1455, %rd1456;
	xor.b64  	%rd1458, %rd1438, %rd1388;
	xor.b64  	%rd1459, %rd1438, %rd1413;
	and.b64  	%rd1460, %rd1459, %rd1458;
	xor.b64  	%rd1461, %rd1460, %rd1438;
	add.s64 	%rd1462, %rd1451, %rd1461;
	add.s64 	%rd1463, %rd1462, %rd1457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6458,%dummy}, %rd1452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6459}, %rd1452;
	}
	shf.r.wrap.b32 	%r6460, %r6459, %r6458, 14;
	shf.r.wrap.b32 	%r6461, %r6458, %r6459, 14;
	mov.b64 	%rd1464, {%r6461, %r6460};
	shf.r.wrap.b32 	%r6462, %r6459, %r6458, 18;
	shf.r.wrap.b32 	%r6463, %r6458, %r6459, 18;
	mov.b64 	%rd1465, {%r6463, %r6462};
	xor.b64  	%rd1466, %rd1465, %rd1464;
	shf.l.wrap.b32 	%r6464, %r6458, %r6459, 23;
	shf.l.wrap.b32 	%r6465, %r6459, %r6458, 23;
	mov.b64 	%rd1467, {%r6465, %r6464};
	xor.b64  	%rd1468, %rd1466, %rd1467;
	xor.b64  	%rd1469, %rd1427, %rd1402;
	and.b64  	%rd1470, %rd1452, %rd1469;
	xor.b64  	%rd1471, %rd1470, %rd1402;
	add.s64 	%rd1472, %rd1377, %rd1184;
	ld.const.u64 	%rd1473, [k_sha512+312];
	add.s64 	%rd1474, %rd1472, %rd1473;
	add.s64 	%rd1475, %rd1474, %rd1471;
	add.s64 	%rd1476, %rd1475, %rd1468;
	add.s64 	%rd1477, %rd1476, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6466,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6467}, %rd1463;
	}
	shf.r.wrap.b32 	%r6468, %r6467, %r6466, 28;
	shf.r.wrap.b32 	%r6469, %r6466, %r6467, 28;
	mov.b64 	%rd1478, {%r6469, %r6468};
	shf.l.wrap.b32 	%r6470, %r6466, %r6467, 30;
	shf.l.wrap.b32 	%r6471, %r6467, %r6466, 30;
	mov.b64 	%rd1479, {%r6471, %r6470};
	xor.b64  	%rd1480, %rd1479, %rd1478;
	shf.l.wrap.b32 	%r6472, %r6466, %r6467, 25;
	shf.l.wrap.b32 	%r6473, %r6467, %r6466, 25;
	mov.b64 	%rd1481, {%r6473, %r6472};
	xor.b64  	%rd1482, %rd1480, %rd1481;
	xor.b64  	%rd1483, %rd1463, %rd1413;
	xor.b64  	%rd1484, %rd1463, %rd1438;
	and.b64  	%rd1485, %rd1484, %rd1483;
	xor.b64  	%rd1486, %rd1485, %rd1463;
	add.s64 	%rd1487, %rd1476, %rd1486;
	add.s64 	%rd1488, %rd1487, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6474,%dummy}, %rd1477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6475}, %rd1477;
	}
	shf.r.wrap.b32 	%r6476, %r6475, %r6474, 14;
	shf.r.wrap.b32 	%r6477, %r6474, %r6475, 14;
	mov.b64 	%rd1489, {%r6477, %r6476};
	shf.r.wrap.b32 	%r6478, %r6475, %r6474, 18;
	shf.r.wrap.b32 	%r6479, %r6474, %r6475, 18;
	mov.b64 	%rd1490, {%r6479, %r6478};
	xor.b64  	%rd1491, %rd1490, %rd1489;
	shf.l.wrap.b32 	%r6480, %r6474, %r6475, 23;
	shf.l.wrap.b32 	%r6481, %r6475, %r6474, 23;
	mov.b64 	%rd1492, {%r6481, %r6480};
	xor.b64  	%rd1493, %rd1491, %rd1492;
	xor.b64  	%rd1494, %rd1452, %rd1427;
	and.b64  	%rd1495, %rd1477, %rd1494;
	xor.b64  	%rd1496, %rd1495, %rd1427;
	add.s64 	%rd1497, %rd1402, %rd1197;
	ld.const.u64 	%rd1498, [k_sha512+320];
	add.s64 	%rd1499, %rd1497, %rd1498;
	add.s64 	%rd1500, %rd1499, %rd1496;
	add.s64 	%rd1501, %rd1500, %rd1493;
	add.s64 	%rd1502, %rd1501, %rd1413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6482,%dummy}, %rd1488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6483}, %rd1488;
	}
	shf.r.wrap.b32 	%r6484, %r6483, %r6482, 28;
	shf.r.wrap.b32 	%r6485, %r6482, %r6483, 28;
	mov.b64 	%rd1503, {%r6485, %r6484};
	shf.l.wrap.b32 	%r6486, %r6482, %r6483, 30;
	shf.l.wrap.b32 	%r6487, %r6483, %r6482, 30;
	mov.b64 	%rd1504, {%r6487, %r6486};
	xor.b64  	%rd1505, %rd1504, %rd1503;
	shf.l.wrap.b32 	%r6488, %r6482, %r6483, 25;
	shf.l.wrap.b32 	%r6489, %r6483, %r6482, 25;
	mov.b64 	%rd1506, {%r6489, %r6488};
	xor.b64  	%rd1507, %rd1505, %rd1506;
	xor.b64  	%rd1508, %rd1488, %rd1438;
	xor.b64  	%rd1509, %rd1488, %rd1463;
	and.b64  	%rd1510, %rd1509, %rd1508;
	xor.b64  	%rd1511, %rd1510, %rd1488;
	add.s64 	%rd1512, %rd1501, %rd1511;
	add.s64 	%rd1513, %rd1512, %rd1507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6490,%dummy}, %rd1502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6491}, %rd1502;
	}
	shf.r.wrap.b32 	%r6492, %r6491, %r6490, 14;
	shf.r.wrap.b32 	%r6493, %r6490, %r6491, 14;
	mov.b64 	%rd1514, {%r6493, %r6492};
	shf.r.wrap.b32 	%r6494, %r6491, %r6490, 18;
	shf.r.wrap.b32 	%r6495, %r6490, %r6491, 18;
	mov.b64 	%rd1515, {%r6495, %r6494};
	xor.b64  	%rd1516, %rd1515, %rd1514;
	shf.l.wrap.b32 	%r6496, %r6490, %r6491, 23;
	shf.l.wrap.b32 	%r6497, %r6491, %r6490, 23;
	mov.b64 	%rd1517, {%r6497, %r6496};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	xor.b64  	%rd1519, %rd1477, %rd1452;
	and.b64  	%rd1520, %rd1502, %rd1519;
	xor.b64  	%rd1521, %rd1520, %rd1452;
	add.s64 	%rd1522, %rd1427, %rd1210;
	ld.const.u64 	%rd1523, [k_sha512+328];
	add.s64 	%rd1524, %rd1522, %rd1523;
	add.s64 	%rd1525, %rd1524, %rd1521;
	add.s64 	%rd1526, %rd1525, %rd1518;
	add.s64 	%rd1527, %rd1526, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6498,%dummy}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6499}, %rd1513;
	}
	shf.r.wrap.b32 	%r6500, %r6499, %r6498, 28;
	shf.r.wrap.b32 	%r6501, %r6498, %r6499, 28;
	mov.b64 	%rd1528, {%r6501, %r6500};
	shf.l.wrap.b32 	%r6502, %r6498, %r6499, 30;
	shf.l.wrap.b32 	%r6503, %r6499, %r6498, 30;
	mov.b64 	%rd1529, {%r6503, %r6502};
	xor.b64  	%rd1530, %rd1529, %rd1528;
	shf.l.wrap.b32 	%r6504, %r6498, %r6499, 25;
	shf.l.wrap.b32 	%r6505, %r6499, %r6498, 25;
	mov.b64 	%rd1531, {%r6505, %r6504};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	xor.b64  	%rd1533, %rd1513, %rd1463;
	xor.b64  	%rd1534, %rd1513, %rd1488;
	and.b64  	%rd1535, %rd1534, %rd1533;
	xor.b64  	%rd1536, %rd1535, %rd1513;
	add.s64 	%rd1537, %rd1526, %rd1536;
	add.s64 	%rd1538, %rd1537, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6506,%dummy}, %rd1527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6507}, %rd1527;
	}
	shf.r.wrap.b32 	%r6508, %r6507, %r6506, 14;
	shf.r.wrap.b32 	%r6509, %r6506, %r6507, 14;
	mov.b64 	%rd1539, {%r6509, %r6508};
	shf.r.wrap.b32 	%r6510, %r6507, %r6506, 18;
	shf.r.wrap.b32 	%r6511, %r6506, %r6507, 18;
	mov.b64 	%rd1540, {%r6511, %r6510};
	xor.b64  	%rd1541, %rd1540, %rd1539;
	shf.l.wrap.b32 	%r6512, %r6506, %r6507, 23;
	shf.l.wrap.b32 	%r6513, %r6507, %r6506, 23;
	mov.b64 	%rd1542, {%r6513, %r6512};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	xor.b64  	%rd1544, %rd1502, %rd1477;
	and.b64  	%rd1545, %rd1527, %rd1544;
	xor.b64  	%rd1546, %rd1545, %rd1477;
	add.s64 	%rd1547, %rd1452, %rd1223;
	ld.const.u64 	%rd1548, [k_sha512+336];
	add.s64 	%rd1549, %rd1547, %rd1548;
	add.s64 	%rd1550, %rd1549, %rd1546;
	add.s64 	%rd1551, %rd1550, %rd1543;
	add.s64 	%rd1552, %rd1551, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6514,%dummy}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6515}, %rd1538;
	}
	shf.r.wrap.b32 	%r6516, %r6515, %r6514, 28;
	shf.r.wrap.b32 	%r6517, %r6514, %r6515, 28;
	mov.b64 	%rd1553, {%r6517, %r6516};
	shf.l.wrap.b32 	%r6518, %r6514, %r6515, 30;
	shf.l.wrap.b32 	%r6519, %r6515, %r6514, 30;
	mov.b64 	%rd1554, {%r6519, %r6518};
	xor.b64  	%rd1555, %rd1554, %rd1553;
	shf.l.wrap.b32 	%r6520, %r6514, %r6515, 25;
	shf.l.wrap.b32 	%r6521, %r6515, %r6514, 25;
	mov.b64 	%rd1556, {%r6521, %r6520};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	xor.b64  	%rd1558, %rd1538, %rd1488;
	xor.b64  	%rd1559, %rd1538, %rd1513;
	and.b64  	%rd1560, %rd1559, %rd1558;
	xor.b64  	%rd1561, %rd1560, %rd1538;
	add.s64 	%rd1562, %rd1551, %rd1561;
	add.s64 	%rd1563, %rd1562, %rd1557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6522,%dummy}, %rd1552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6523}, %rd1552;
	}
	shf.r.wrap.b32 	%r6524, %r6523, %r6522, 14;
	shf.r.wrap.b32 	%r6525, %r6522, %r6523, 14;
	mov.b64 	%rd1564, {%r6525, %r6524};
	shf.r.wrap.b32 	%r6526, %r6523, %r6522, 18;
	shf.r.wrap.b32 	%r6527, %r6522, %r6523, 18;
	mov.b64 	%rd1565, {%r6527, %r6526};
	xor.b64  	%rd1566, %rd1565, %rd1564;
	shf.l.wrap.b32 	%r6528, %r6522, %r6523, 23;
	shf.l.wrap.b32 	%r6529, %r6523, %r6522, 23;
	mov.b64 	%rd1567, {%r6529, %r6528};
	xor.b64  	%rd1568, %rd1566, %rd1567;
	xor.b64  	%rd1569, %rd1527, %rd1502;
	and.b64  	%rd1570, %rd1552, %rd1569;
	xor.b64  	%rd1571, %rd1570, %rd1502;
	add.s64 	%rd1572, %rd1477, %rd1236;
	ld.const.u64 	%rd1573, [k_sha512+344];
	add.s64 	%rd1574, %rd1572, %rd1573;
	add.s64 	%rd1575, %rd1574, %rd1571;
	add.s64 	%rd1576, %rd1575, %rd1568;
	add.s64 	%rd1577, %rd1576, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6530,%dummy}, %rd1563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6531}, %rd1563;
	}
	shf.r.wrap.b32 	%r6532, %r6531, %r6530, 28;
	shf.r.wrap.b32 	%r6533, %r6530, %r6531, 28;
	mov.b64 	%rd1578, {%r6533, %r6532};
	shf.l.wrap.b32 	%r6534, %r6530, %r6531, 30;
	shf.l.wrap.b32 	%r6535, %r6531, %r6530, 30;
	mov.b64 	%rd1579, {%r6535, %r6534};
	xor.b64  	%rd1580, %rd1579, %rd1578;
	shf.l.wrap.b32 	%r6536, %r6530, %r6531, 25;
	shf.l.wrap.b32 	%r6537, %r6531, %r6530, 25;
	mov.b64 	%rd1581, {%r6537, %r6536};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	xor.b64  	%rd1583, %rd1563, %rd1513;
	xor.b64  	%rd1584, %rd1563, %rd1538;
	and.b64  	%rd1585, %rd1584, %rd1583;
	xor.b64  	%rd1586, %rd1585, %rd1563;
	add.s64 	%rd1587, %rd1576, %rd1586;
	add.s64 	%rd1588, %rd1587, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6538,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6539}, %rd1577;
	}
	shf.r.wrap.b32 	%r6540, %r6539, %r6538, 14;
	shf.r.wrap.b32 	%r6541, %r6538, %r6539, 14;
	mov.b64 	%rd1589, {%r6541, %r6540};
	shf.r.wrap.b32 	%r6542, %r6539, %r6538, 18;
	shf.r.wrap.b32 	%r6543, %r6538, %r6539, 18;
	mov.b64 	%rd1590, {%r6543, %r6542};
	xor.b64  	%rd1591, %rd1590, %rd1589;
	shf.l.wrap.b32 	%r6544, %r6538, %r6539, 23;
	shf.l.wrap.b32 	%r6545, %r6539, %r6538, 23;
	mov.b64 	%rd1592, {%r6545, %r6544};
	xor.b64  	%rd1593, %rd1591, %rd1592;
	xor.b64  	%rd1594, %rd1552, %rd1527;
	and.b64  	%rd1595, %rd1577, %rd1594;
	xor.b64  	%rd1596, %rd1595, %rd1527;
	add.s64 	%rd1597, %rd1502, %rd1249;
	ld.const.u64 	%rd1598, [k_sha512+352];
	add.s64 	%rd1599, %rd1597, %rd1598;
	add.s64 	%rd1600, %rd1599, %rd1596;
	add.s64 	%rd1601, %rd1600, %rd1593;
	add.s64 	%rd1602, %rd1601, %rd1513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6546,%dummy}, %rd1588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6547}, %rd1588;
	}
	shf.r.wrap.b32 	%r6548, %r6547, %r6546, 28;
	shf.r.wrap.b32 	%r6549, %r6546, %r6547, 28;
	mov.b64 	%rd1603, {%r6549, %r6548};
	shf.l.wrap.b32 	%r6550, %r6546, %r6547, 30;
	shf.l.wrap.b32 	%r6551, %r6547, %r6546, 30;
	mov.b64 	%rd1604, {%r6551, %r6550};
	xor.b64  	%rd1605, %rd1604, %rd1603;
	shf.l.wrap.b32 	%r6552, %r6546, %r6547, 25;
	shf.l.wrap.b32 	%r6553, %r6547, %r6546, 25;
	mov.b64 	%rd1606, {%r6553, %r6552};
	xor.b64  	%rd1607, %rd1605, %rd1606;
	xor.b64  	%rd1608, %rd1588, %rd1538;
	xor.b64  	%rd1609, %rd1588, %rd1563;
	and.b64  	%rd1610, %rd1609, %rd1608;
	xor.b64  	%rd1611, %rd1610, %rd1588;
	add.s64 	%rd1612, %rd1601, %rd1611;
	add.s64 	%rd1613, %rd1612, %rd1607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6554,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6555}, %rd1602;
	}
	shf.r.wrap.b32 	%r6556, %r6555, %r6554, 14;
	shf.r.wrap.b32 	%r6557, %r6554, %r6555, 14;
	mov.b64 	%rd1614, {%r6557, %r6556};
	shf.r.wrap.b32 	%r6558, %r6555, %r6554, 18;
	shf.r.wrap.b32 	%r6559, %r6554, %r6555, 18;
	mov.b64 	%rd1615, {%r6559, %r6558};
	xor.b64  	%rd1616, %rd1615, %rd1614;
	shf.l.wrap.b32 	%r6560, %r6554, %r6555, 23;
	shf.l.wrap.b32 	%r6561, %r6555, %r6554, 23;
	mov.b64 	%rd1617, {%r6561, %r6560};
	xor.b64  	%rd1618, %rd1616, %rd1617;
	xor.b64  	%rd1619, %rd1577, %rd1552;
	and.b64  	%rd1620, %rd1602, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1552;
	add.s64 	%rd1622, %rd1527, %rd1262;
	ld.const.u64 	%rd1623, [k_sha512+360];
	add.s64 	%rd1624, %rd1622, %rd1623;
	add.s64 	%rd1625, %rd1624, %rd1621;
	add.s64 	%rd1626, %rd1625, %rd1618;
	add.s64 	%rd1627, %rd1626, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6562,%dummy}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6563}, %rd1613;
	}
	shf.r.wrap.b32 	%r6564, %r6563, %r6562, 28;
	shf.r.wrap.b32 	%r6565, %r6562, %r6563, 28;
	mov.b64 	%rd1628, {%r6565, %r6564};
	shf.l.wrap.b32 	%r6566, %r6562, %r6563, 30;
	shf.l.wrap.b32 	%r6567, %r6563, %r6562, 30;
	mov.b64 	%rd1629, {%r6567, %r6566};
	xor.b64  	%rd1630, %rd1629, %rd1628;
	shf.l.wrap.b32 	%r6568, %r6562, %r6563, 25;
	shf.l.wrap.b32 	%r6569, %r6563, %r6562, 25;
	mov.b64 	%rd1631, {%r6569, %r6568};
	xor.b64  	%rd1632, %rd1630, %rd1631;
	xor.b64  	%rd1633, %rd1613, %rd1563;
	xor.b64  	%rd1634, %rd1613, %rd1588;
	and.b64  	%rd1635, %rd1634, %rd1633;
	xor.b64  	%rd1636, %rd1635, %rd1613;
	add.s64 	%rd1637, %rd1626, %rd1636;
	add.s64 	%rd1638, %rd1637, %rd1632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6570,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6571}, %rd1627;
	}
	shf.r.wrap.b32 	%r6572, %r6571, %r6570, 14;
	shf.r.wrap.b32 	%r6573, %r6570, %r6571, 14;
	mov.b64 	%rd1639, {%r6573, %r6572};
	shf.r.wrap.b32 	%r6574, %r6571, %r6570, 18;
	shf.r.wrap.b32 	%r6575, %r6570, %r6571, 18;
	mov.b64 	%rd1640, {%r6575, %r6574};
	xor.b64  	%rd1641, %rd1640, %rd1639;
	shf.l.wrap.b32 	%r6576, %r6570, %r6571, 23;
	shf.l.wrap.b32 	%r6577, %r6571, %r6570, 23;
	mov.b64 	%rd1642, {%r6577, %r6576};
	xor.b64  	%rd1643, %rd1641, %rd1642;
	xor.b64  	%rd1644, %rd1602, %rd1577;
	and.b64  	%rd1645, %rd1627, %rd1644;
	xor.b64  	%rd1646, %rd1645, %rd1577;
	add.s64 	%rd1647, %rd1552, %rd1275;
	ld.const.u64 	%rd1648, [k_sha512+368];
	add.s64 	%rd1649, %rd1647, %rd1648;
	add.s64 	%rd1650, %rd1649, %rd1646;
	add.s64 	%rd1651, %rd1650, %rd1643;
	add.s64 	%rd1652, %rd1651, %rd1563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6578,%dummy}, %rd1638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6579}, %rd1638;
	}
	shf.r.wrap.b32 	%r6580, %r6579, %r6578, 28;
	shf.r.wrap.b32 	%r6581, %r6578, %r6579, 28;
	mov.b64 	%rd1653, {%r6581, %r6580};
	shf.l.wrap.b32 	%r6582, %r6578, %r6579, 30;
	shf.l.wrap.b32 	%r6583, %r6579, %r6578, 30;
	mov.b64 	%rd1654, {%r6583, %r6582};
	xor.b64  	%rd1655, %rd1654, %rd1653;
	shf.l.wrap.b32 	%r6584, %r6578, %r6579, 25;
	shf.l.wrap.b32 	%r6585, %r6579, %r6578, 25;
	mov.b64 	%rd1656, {%r6585, %r6584};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	xor.b64  	%rd1658, %rd1638, %rd1588;
	xor.b64  	%rd1659, %rd1638, %rd1613;
	and.b64  	%rd1660, %rd1659, %rd1658;
	xor.b64  	%rd1661, %rd1660, %rd1638;
	add.s64 	%rd1662, %rd1651, %rd1661;
	add.s64 	%rd1663, %rd1662, %rd1657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6586,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6587}, %rd1652;
	}
	shf.r.wrap.b32 	%r6588, %r6587, %r6586, 14;
	shf.r.wrap.b32 	%r6589, %r6586, %r6587, 14;
	mov.b64 	%rd1664, {%r6589, %r6588};
	shf.r.wrap.b32 	%r6590, %r6587, %r6586, 18;
	shf.r.wrap.b32 	%r6591, %r6586, %r6587, 18;
	mov.b64 	%rd1665, {%r6591, %r6590};
	xor.b64  	%rd1666, %rd1665, %rd1664;
	shf.l.wrap.b32 	%r6592, %r6586, %r6587, 23;
	shf.l.wrap.b32 	%r6593, %r6587, %r6586, 23;
	mov.b64 	%rd1667, {%r6593, %r6592};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	xor.b64  	%rd1669, %rd1627, %rd1602;
	and.b64  	%rd1670, %rd1652, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1602;
	add.s64 	%rd1672, %rd1577, %rd1288;
	ld.const.u64 	%rd1673, [k_sha512+376];
	add.s64 	%rd1674, %rd1672, %rd1673;
	add.s64 	%rd1675, %rd1674, %rd1671;
	add.s64 	%rd1676, %rd1675, %rd1668;
	add.s64 	%rd1677, %rd1676, %rd1588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6594,%dummy}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6595}, %rd1663;
	}
	shf.r.wrap.b32 	%r6596, %r6595, %r6594, 28;
	shf.r.wrap.b32 	%r6597, %r6594, %r6595, 28;
	mov.b64 	%rd1678, {%r6597, %r6596};
	shf.l.wrap.b32 	%r6598, %r6594, %r6595, 30;
	shf.l.wrap.b32 	%r6599, %r6595, %r6594, 30;
	mov.b64 	%rd1679, {%r6599, %r6598};
	xor.b64  	%rd1680, %rd1679, %rd1678;
	shf.l.wrap.b32 	%r6600, %r6594, %r6595, 25;
	shf.l.wrap.b32 	%r6601, %r6595, %r6594, 25;
	mov.b64 	%rd1681, {%r6601, %r6600};
	xor.b64  	%rd1682, %rd1680, %rd1681;
	xor.b64  	%rd1683, %rd1663, %rd1613;
	xor.b64  	%rd1684, %rd1663, %rd1638;
	and.b64  	%rd1685, %rd1684, %rd1683;
	xor.b64  	%rd1686, %rd1685, %rd1663;
	add.s64 	%rd1687, %rd1676, %rd1686;
	add.s64 	%rd1688, %rd1687, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6602,%dummy}, %rd1275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6603}, %rd1275;
	}
	shf.r.wrap.b32 	%r6604, %r6603, %r6602, 19;
	shf.r.wrap.b32 	%r6605, %r6602, %r6603, 19;
	mov.b64 	%rd1689, {%r6605, %r6604};
	shf.l.wrap.b32 	%r6606, %r6602, %r6603, 3;
	shf.l.wrap.b32 	%r6607, %r6603, %r6602, 3;
	mov.b64 	%rd1690, {%r6607, %r6606};
	shr.u64 	%rd1691, %rd1275, 6;
	xor.b64  	%rd1692, %rd1689, %rd1691;
	xor.b64  	%rd1693, %rd1692, %rd1690;
	shf.r.wrap.b32 	%r6608, %r6217, %r6216, 1;
	shf.r.wrap.b32 	%r6609, %r6216, %r6217, 1;
	mov.b64 	%rd1694, {%r6609, %r6608};
	shf.r.wrap.b32 	%r6610, %r6217, %r6216, 8;
	shf.r.wrap.b32 	%r6611, %r6216, %r6217, 8;
	mov.b64 	%rd1695, {%r6611, %r6610};
	shr.u64 	%rd1696, %rd1106, 7;
	xor.b64  	%rd1697, %rd1694, %rd1696;
	xor.b64  	%rd1698, %rd1697, %rd1695;
	add.s64 	%rd1699, %rd1210, %rd1093;
	add.s64 	%rd1700, %rd1699, %rd1693;
	add.s64 	%rd1701, %rd1700, %rd1698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6612,%dummy}, %rd1288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6613}, %rd1288;
	}
	shf.r.wrap.b32 	%r6614, %r6613, %r6612, 19;
	shf.r.wrap.b32 	%r6615, %r6612, %r6613, 19;
	mov.b64 	%rd1702, {%r6615, %r6614};
	shf.l.wrap.b32 	%r6616, %r6612, %r6613, 3;
	shf.l.wrap.b32 	%r6617, %r6613, %r6612, 3;
	mov.b64 	%rd1703, {%r6617, %r6616};
	shr.u64 	%rd1704, %rd1288, 6;
	xor.b64  	%rd1705, %rd1702, %rd1704;
	xor.b64  	%rd1706, %rd1705, %rd1703;
	shf.r.wrap.b32 	%r6618, %r6227, %r6226, 1;
	shf.r.wrap.b32 	%r6619, %r6226, %r6227, 1;
	mov.b64 	%rd1707, {%r6619, %r6618};
	shf.r.wrap.b32 	%r6620, %r6227, %r6226, 8;
	shf.r.wrap.b32 	%r6621, %r6226, %r6227, 8;
	mov.b64 	%rd1708, {%r6621, %r6620};
	shr.u64 	%rd1709, %rd1119, 7;
	xor.b64  	%rd1710, %rd1707, %rd1709;
	xor.b64  	%rd1711, %rd1710, %rd1708;
	add.s64 	%rd1712, %rd1223, %rd1106;
	add.s64 	%rd1713, %rd1712, %rd1706;
	add.s64 	%rd1714, %rd1713, %rd1711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6622,%dummy}, %rd1701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6623}, %rd1701;
	}
	shf.r.wrap.b32 	%r6624, %r6623, %r6622, 19;
	shf.r.wrap.b32 	%r6625, %r6622, %r6623, 19;
	mov.b64 	%rd1715, {%r6625, %r6624};
	shf.l.wrap.b32 	%r6626, %r6622, %r6623, 3;
	shf.l.wrap.b32 	%r6627, %r6623, %r6622, 3;
	mov.b64 	%rd1716, {%r6627, %r6626};
	shr.u64 	%rd1717, %rd1701, 6;
	xor.b64  	%rd1718, %rd1715, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1716;
	shf.r.wrap.b32 	%r6628, %r6237, %r6236, 1;
	shf.r.wrap.b32 	%r6629, %r6236, %r6237, 1;
	mov.b64 	%rd1720, {%r6629, %r6628};
	shf.r.wrap.b32 	%r6630, %r6237, %r6236, 8;
	shf.r.wrap.b32 	%r6631, %r6236, %r6237, 8;
	mov.b64 	%rd1721, {%r6631, %r6630};
	shr.u64 	%rd1722, %rd1132, 7;
	xor.b64  	%rd1723, %rd1720, %rd1722;
	xor.b64  	%rd1724, %rd1723, %rd1721;
	add.s64 	%rd1725, %rd1236, %rd1119;
	add.s64 	%rd1726, %rd1725, %rd1719;
	add.s64 	%rd1727, %rd1726, %rd1724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6632,%dummy}, %rd1714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6633}, %rd1714;
	}
	shf.r.wrap.b32 	%r6634, %r6633, %r6632, 19;
	shf.r.wrap.b32 	%r6635, %r6632, %r6633, 19;
	mov.b64 	%rd1728, {%r6635, %r6634};
	shf.l.wrap.b32 	%r6636, %r6632, %r6633, 3;
	shf.l.wrap.b32 	%r6637, %r6633, %r6632, 3;
	mov.b64 	%rd1729, {%r6637, %r6636};
	shr.u64 	%rd1730, %rd1714, 6;
	xor.b64  	%rd1731, %rd1728, %rd1730;
	xor.b64  	%rd1732, %rd1731, %rd1729;
	shf.r.wrap.b32 	%r6638, %r6247, %r6246, 1;
	shf.r.wrap.b32 	%r6639, %r6246, %r6247, 1;
	mov.b64 	%rd1733, {%r6639, %r6638};
	shf.r.wrap.b32 	%r6640, %r6247, %r6246, 8;
	shf.r.wrap.b32 	%r6641, %r6246, %r6247, 8;
	mov.b64 	%rd1734, {%r6641, %r6640};
	shr.u64 	%rd1735, %rd1145, 7;
	xor.b64  	%rd1736, %rd1733, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1734;
	add.s64 	%rd1738, %rd1249, %rd1132;
	add.s64 	%rd1739, %rd1738, %rd1732;
	add.s64 	%rd1740, %rd1739, %rd1737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd1727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6643}, %rd1727;
	}
	shf.r.wrap.b32 	%r6644, %r6643, %r6642, 19;
	shf.r.wrap.b32 	%r6645, %r6642, %r6643, 19;
	mov.b64 	%rd1741, {%r6645, %r6644};
	shf.l.wrap.b32 	%r6646, %r6642, %r6643, 3;
	shf.l.wrap.b32 	%r6647, %r6643, %r6642, 3;
	mov.b64 	%rd1742, {%r6647, %r6646};
	shr.u64 	%rd1743, %rd1727, 6;
	xor.b64  	%rd1744, %rd1741, %rd1743;
	xor.b64  	%rd1745, %rd1744, %rd1742;
	shf.r.wrap.b32 	%r6648, %r6257, %r6256, 1;
	shf.r.wrap.b32 	%r6649, %r6256, %r6257, 1;
	mov.b64 	%rd1746, {%r6649, %r6648};
	shf.r.wrap.b32 	%r6650, %r6257, %r6256, 8;
	shf.r.wrap.b32 	%r6651, %r6256, %r6257, 8;
	mov.b64 	%rd1747, {%r6651, %r6650};
	shr.u64 	%rd1748, %rd1158, 7;
	xor.b64  	%rd1749, %rd1746, %rd1748;
	xor.b64  	%rd1750, %rd1749, %rd1747;
	add.s64 	%rd1751, %rd1262, %rd1145;
	add.s64 	%rd1752, %rd1751, %rd1745;
	add.s64 	%rd1753, %rd1752, %rd1750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6652,%dummy}, %rd1740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6653}, %rd1740;
	}
	shf.r.wrap.b32 	%r6654, %r6653, %r6652, 19;
	shf.r.wrap.b32 	%r6655, %r6652, %r6653, 19;
	mov.b64 	%rd1754, {%r6655, %r6654};
	shf.l.wrap.b32 	%r6656, %r6652, %r6653, 3;
	shf.l.wrap.b32 	%r6657, %r6653, %r6652, 3;
	mov.b64 	%rd1755, {%r6657, %r6656};
	shr.u64 	%rd1756, %rd1740, 6;
	xor.b64  	%rd1757, %rd1754, %rd1756;
	xor.b64  	%rd1758, %rd1757, %rd1755;
	shf.r.wrap.b32 	%r6658, %r6267, %r6266, 1;
	shf.r.wrap.b32 	%r6659, %r6266, %r6267, 1;
	mov.b64 	%rd1759, {%r6659, %r6658};
	shf.r.wrap.b32 	%r6660, %r6267, %r6266, 8;
	shf.r.wrap.b32 	%r6661, %r6266, %r6267, 8;
	mov.b64 	%rd1760, {%r6661, %r6660};
	shr.u64 	%rd1761, %rd1171, 7;
	xor.b64  	%rd1762, %rd1759, %rd1761;
	xor.b64  	%rd1763, %rd1762, %rd1760;
	add.s64 	%rd1764, %rd1275, %rd1158;
	add.s64 	%rd1765, %rd1764, %rd1758;
	add.s64 	%rd1766, %rd1765, %rd1763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6662,%dummy}, %rd1753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6663}, %rd1753;
	}
	shf.r.wrap.b32 	%r6664, %r6663, %r6662, 19;
	shf.r.wrap.b32 	%r6665, %r6662, %r6663, 19;
	mov.b64 	%rd1767, {%r6665, %r6664};
	shf.l.wrap.b32 	%r6666, %r6662, %r6663, 3;
	shf.l.wrap.b32 	%r6667, %r6663, %r6662, 3;
	mov.b64 	%rd1768, {%r6667, %r6666};
	shr.u64 	%rd1769, %rd1753, 6;
	xor.b64  	%rd1770, %rd1767, %rd1769;
	xor.b64  	%rd1771, %rd1770, %rd1768;
	shf.r.wrap.b32 	%r6668, %r6277, %r6276, 1;
	shf.r.wrap.b32 	%r6669, %r6276, %r6277, 1;
	mov.b64 	%rd1772, {%r6669, %r6668};
	shf.r.wrap.b32 	%r6670, %r6277, %r6276, 8;
	shf.r.wrap.b32 	%r6671, %r6276, %r6277, 8;
	mov.b64 	%rd1773, {%r6671, %r6670};
	shr.u64 	%rd1774, %rd1184, 7;
	xor.b64  	%rd1775, %rd1772, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd1773;
	add.s64 	%rd1777, %rd1288, %rd1171;
	add.s64 	%rd1778, %rd1777, %rd1771;
	add.s64 	%rd1779, %rd1778, %rd1776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6672,%dummy}, %rd1766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6673}, %rd1766;
	}
	shf.r.wrap.b32 	%r6674, %r6673, %r6672, 19;
	shf.r.wrap.b32 	%r6675, %r6672, %r6673, 19;
	mov.b64 	%rd1780, {%r6675, %r6674};
	shf.l.wrap.b32 	%r6676, %r6672, %r6673, 3;
	shf.l.wrap.b32 	%r6677, %r6673, %r6672, 3;
	mov.b64 	%rd1781, {%r6677, %r6676};
	shr.u64 	%rd1782, %rd1766, 6;
	xor.b64  	%rd1783, %rd1780, %rd1782;
	xor.b64  	%rd1784, %rd1783, %rd1781;
	shf.r.wrap.b32 	%r6678, %r6287, %r6286, 1;
	shf.r.wrap.b32 	%r6679, %r6286, %r6287, 1;
	mov.b64 	%rd1785, {%r6679, %r6678};
	shf.r.wrap.b32 	%r6680, %r6287, %r6286, 8;
	shf.r.wrap.b32 	%r6681, %r6286, %r6287, 8;
	mov.b64 	%rd1786, {%r6681, %r6680};
	shr.u64 	%rd1787, %rd1197, 7;
	xor.b64  	%rd1788, %rd1785, %rd1787;
	xor.b64  	%rd1789, %rd1788, %rd1786;
	add.s64 	%rd1790, %rd1701, %rd1184;
	add.s64 	%rd1791, %rd1790, %rd1784;
	add.s64 	%rd1792, %rd1791, %rd1789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6682,%dummy}, %rd1779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6683}, %rd1779;
	}
	shf.r.wrap.b32 	%r6684, %r6683, %r6682, 19;
	shf.r.wrap.b32 	%r6685, %r6682, %r6683, 19;
	mov.b64 	%rd1793, {%r6685, %r6684};
	shf.l.wrap.b32 	%r6686, %r6682, %r6683, 3;
	shf.l.wrap.b32 	%r6687, %r6683, %r6682, 3;
	mov.b64 	%rd1794, {%r6687, %r6686};
	shr.u64 	%rd1795, %rd1779, 6;
	xor.b64  	%rd1796, %rd1793, %rd1795;
	xor.b64  	%rd1797, %rd1796, %rd1794;
	shf.r.wrap.b32 	%r6688, %r6297, %r6296, 1;
	shf.r.wrap.b32 	%r6689, %r6296, %r6297, 1;
	mov.b64 	%rd1798, {%r6689, %r6688};
	shf.r.wrap.b32 	%r6690, %r6297, %r6296, 8;
	shf.r.wrap.b32 	%r6691, %r6296, %r6297, 8;
	mov.b64 	%rd1799, {%r6691, %r6690};
	shr.u64 	%rd1800, %rd1210, 7;
	xor.b64  	%rd1801, %rd1798, %rd1800;
	xor.b64  	%rd1802, %rd1801, %rd1799;
	add.s64 	%rd1803, %rd1714, %rd1197;
	add.s64 	%rd1804, %rd1803, %rd1797;
	add.s64 	%rd1805, %rd1804, %rd1802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6692,%dummy}, %rd1792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6693}, %rd1792;
	}
	shf.r.wrap.b32 	%r6694, %r6693, %r6692, 19;
	shf.r.wrap.b32 	%r6695, %r6692, %r6693, 19;
	mov.b64 	%rd1806, {%r6695, %r6694};
	shf.l.wrap.b32 	%r6696, %r6692, %r6693, 3;
	shf.l.wrap.b32 	%r6697, %r6693, %r6692, 3;
	mov.b64 	%rd1807, {%r6697, %r6696};
	shr.u64 	%rd1808, %rd1792, 6;
	xor.b64  	%rd1809, %rd1806, %rd1808;
	xor.b64  	%rd1810, %rd1809, %rd1807;
	shf.r.wrap.b32 	%r6698, %r6307, %r6306, 1;
	shf.r.wrap.b32 	%r6699, %r6306, %r6307, 1;
	mov.b64 	%rd1811, {%r6699, %r6698};
	shf.r.wrap.b32 	%r6700, %r6307, %r6306, 8;
	shf.r.wrap.b32 	%r6701, %r6306, %r6307, 8;
	mov.b64 	%rd1812, {%r6701, %r6700};
	shr.u64 	%rd1813, %rd1223, 7;
	xor.b64  	%rd1814, %rd1811, %rd1813;
	xor.b64  	%rd1815, %rd1814, %rd1812;
	add.s64 	%rd1816, %rd1727, %rd1210;
	add.s64 	%rd1817, %rd1816, %rd1810;
	add.s64 	%rd1818, %rd1817, %rd1815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6702,%dummy}, %rd1805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6703}, %rd1805;
	}
	shf.r.wrap.b32 	%r6704, %r6703, %r6702, 19;
	shf.r.wrap.b32 	%r6705, %r6702, %r6703, 19;
	mov.b64 	%rd1819, {%r6705, %r6704};
	shf.l.wrap.b32 	%r6706, %r6702, %r6703, 3;
	shf.l.wrap.b32 	%r6707, %r6703, %r6702, 3;
	mov.b64 	%rd1820, {%r6707, %r6706};
	shr.u64 	%rd1821, %rd1805, 6;
	xor.b64  	%rd1822, %rd1819, %rd1821;
	xor.b64  	%rd1823, %rd1822, %rd1820;
	shf.r.wrap.b32 	%r6708, %r6317, %r6316, 1;
	shf.r.wrap.b32 	%r6709, %r6316, %r6317, 1;
	mov.b64 	%rd1824, {%r6709, %r6708};
	shf.r.wrap.b32 	%r6710, %r6317, %r6316, 8;
	shf.r.wrap.b32 	%r6711, %r6316, %r6317, 8;
	mov.b64 	%rd1825, {%r6711, %r6710};
	shr.u64 	%rd1826, %rd1236, 7;
	xor.b64  	%rd1827, %rd1824, %rd1826;
	xor.b64  	%rd1828, %rd1827, %rd1825;
	add.s64 	%rd1829, %rd1740, %rd1223;
	add.s64 	%rd1830, %rd1829, %rd1823;
	add.s64 	%rd1831, %rd1830, %rd1828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6712,%dummy}, %rd1818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6713}, %rd1818;
	}
	shf.r.wrap.b32 	%r6714, %r6713, %r6712, 19;
	shf.r.wrap.b32 	%r6715, %r6712, %r6713, 19;
	mov.b64 	%rd1832, {%r6715, %r6714};
	shf.l.wrap.b32 	%r6716, %r6712, %r6713, 3;
	shf.l.wrap.b32 	%r6717, %r6713, %r6712, 3;
	mov.b64 	%rd1833, {%r6717, %r6716};
	shr.u64 	%rd1834, %rd1818, 6;
	xor.b64  	%rd1835, %rd1832, %rd1834;
	xor.b64  	%rd1836, %rd1835, %rd1833;
	shf.r.wrap.b32 	%r6718, %r6327, %r6326, 1;
	shf.r.wrap.b32 	%r6719, %r6326, %r6327, 1;
	mov.b64 	%rd1837, {%r6719, %r6718};
	shf.r.wrap.b32 	%r6720, %r6327, %r6326, 8;
	shf.r.wrap.b32 	%r6721, %r6326, %r6327, 8;
	mov.b64 	%rd1838, {%r6721, %r6720};
	shr.u64 	%rd1839, %rd1249, 7;
	xor.b64  	%rd1840, %rd1837, %rd1839;
	xor.b64  	%rd1841, %rd1840, %rd1838;
	add.s64 	%rd1842, %rd1753, %rd1236;
	add.s64 	%rd1843, %rd1842, %rd1836;
	add.s64 	%rd1844, %rd1843, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd1831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd1831;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 19;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 19;
	mov.b64 	%rd1845, {%r6725, %r6724};
	shf.l.wrap.b32 	%r6726, %r6722, %r6723, 3;
	shf.l.wrap.b32 	%r6727, %r6723, %r6722, 3;
	mov.b64 	%rd1846, {%r6727, %r6726};
	shr.u64 	%rd1847, %rd1831, 6;
	xor.b64  	%rd1848, %rd1845, %rd1847;
	xor.b64  	%rd1849, %rd1848, %rd1846;
	shf.r.wrap.b32 	%r6728, %r6337, %r6336, 1;
	shf.r.wrap.b32 	%r6729, %r6336, %r6337, 1;
	mov.b64 	%rd1850, {%r6729, %r6728};
	shf.r.wrap.b32 	%r6730, %r6337, %r6336, 8;
	shf.r.wrap.b32 	%r6731, %r6336, %r6337, 8;
	mov.b64 	%rd1851, {%r6731, %r6730};
	shr.u64 	%rd1852, %rd1262, 7;
	xor.b64  	%rd1853, %rd1850, %rd1852;
	xor.b64  	%rd1854, %rd1853, %rd1851;
	add.s64 	%rd1855, %rd1766, %rd1249;
	add.s64 	%rd1856, %rd1855, %rd1849;
	add.s64 	%rd1857, %rd1856, %rd1854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6732,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6733}, %rd1844;
	}
	shf.r.wrap.b32 	%r6734, %r6733, %r6732, 19;
	shf.r.wrap.b32 	%r6735, %r6732, %r6733, 19;
	mov.b64 	%rd1858, {%r6735, %r6734};
	shf.l.wrap.b32 	%r6736, %r6732, %r6733, 3;
	shf.l.wrap.b32 	%r6737, %r6733, %r6732, 3;
	mov.b64 	%rd1859, {%r6737, %r6736};
	shr.u64 	%rd1860, %rd1844, 6;
	xor.b64  	%rd1861, %rd1858, %rd1860;
	xor.b64  	%rd1862, %rd1861, %rd1859;
	shf.r.wrap.b32 	%r6738, %r6603, %r6602, 1;
	shf.r.wrap.b32 	%r6739, %r6602, %r6603, 1;
	mov.b64 	%rd1863, {%r6739, %r6738};
	shf.r.wrap.b32 	%r6740, %r6603, %r6602, 8;
	shf.r.wrap.b32 	%r6741, %r6602, %r6603, 8;
	mov.b64 	%rd1864, {%r6741, %r6740};
	shr.u64 	%rd1865, %rd1275, 7;
	xor.b64  	%rd1866, %rd1863, %rd1865;
	xor.b64  	%rd1867, %rd1866, %rd1864;
	add.s64 	%rd1868, %rd1779, %rd1262;
	add.s64 	%rd1869, %rd1868, %rd1862;
	add.s64 	%rd1870, %rd1869, %rd1867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6742,%dummy}, %rd1857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6743}, %rd1857;
	}
	shf.r.wrap.b32 	%r6744, %r6743, %r6742, 19;
	shf.r.wrap.b32 	%r6745, %r6742, %r6743, 19;
	mov.b64 	%rd1871, {%r6745, %r6744};
	shf.l.wrap.b32 	%r6746, %r6742, %r6743, 3;
	shf.l.wrap.b32 	%r6747, %r6743, %r6742, 3;
	mov.b64 	%rd1872, {%r6747, %r6746};
	shr.u64 	%rd1873, %rd1857, 6;
	xor.b64  	%rd1874, %rd1871, %rd1873;
	xor.b64  	%rd1875, %rd1874, %rd1872;
	shf.r.wrap.b32 	%r6748, %r6613, %r6612, 1;
	shf.r.wrap.b32 	%r6749, %r6612, %r6613, 1;
	mov.b64 	%rd1876, {%r6749, %r6748};
	shf.r.wrap.b32 	%r6750, %r6613, %r6612, 8;
	shf.r.wrap.b32 	%r6751, %r6612, %r6613, 8;
	mov.b64 	%rd1877, {%r6751, %r6750};
	shr.u64 	%rd1878, %rd1288, 7;
	xor.b64  	%rd1879, %rd1876, %rd1878;
	xor.b64  	%rd1880, %rd1879, %rd1877;
	add.s64 	%rd1881, %rd1792, %rd1275;
	add.s64 	%rd1882, %rd1881, %rd1875;
	add.s64 	%rd1883, %rd1882, %rd1880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6752,%dummy}, %rd1870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6753}, %rd1870;
	}
	shf.r.wrap.b32 	%r6754, %r6753, %r6752, 19;
	shf.r.wrap.b32 	%r6755, %r6752, %r6753, 19;
	mov.b64 	%rd1884, {%r6755, %r6754};
	shf.l.wrap.b32 	%r6756, %r6752, %r6753, 3;
	shf.l.wrap.b32 	%r6757, %r6753, %r6752, 3;
	mov.b64 	%rd1885, {%r6757, %r6756};
	shr.u64 	%rd1886, %rd1870, 6;
	xor.b64  	%rd1887, %rd1884, %rd1886;
	xor.b64  	%rd1888, %rd1887, %rd1885;
	shf.r.wrap.b32 	%r6758, %r6623, %r6622, 1;
	shf.r.wrap.b32 	%r6759, %r6622, %r6623, 1;
	mov.b64 	%rd1889, {%r6759, %r6758};
	shf.r.wrap.b32 	%r6760, %r6623, %r6622, 8;
	shf.r.wrap.b32 	%r6761, %r6622, %r6623, 8;
	mov.b64 	%rd1890, {%r6761, %r6760};
	shr.u64 	%rd1891, %rd1701, 7;
	xor.b64  	%rd1892, %rd1889, %rd1891;
	xor.b64  	%rd1893, %rd1892, %rd1890;
	add.s64 	%rd1894, %rd1805, %rd1288;
	add.s64 	%rd1895, %rd1894, %rd1888;
	add.s64 	%rd1896, %rd1895, %rd1893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd1677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6763}, %rd1677;
	}
	shf.r.wrap.b32 	%r6764, %r6763, %r6762, 14;
	shf.r.wrap.b32 	%r6765, %r6762, %r6763, 14;
	mov.b64 	%rd1897, {%r6765, %r6764};
	shf.r.wrap.b32 	%r6766, %r6763, %r6762, 18;
	shf.r.wrap.b32 	%r6767, %r6762, %r6763, 18;
	mov.b64 	%rd1898, {%r6767, %r6766};
	xor.b64  	%rd1899, %rd1898, %rd1897;
	shf.l.wrap.b32 	%r6768, %r6762, %r6763, 23;
	shf.l.wrap.b32 	%r6769, %r6763, %r6762, 23;
	mov.b64 	%rd1900, {%r6769, %r6768};
	xor.b64  	%rd1901, %rd1899, %rd1900;
	xor.b64  	%rd1902, %rd1652, %rd1627;
	and.b64  	%rd1903, %rd1902, %rd1677;
	xor.b64  	%rd1904, %rd1903, %rd1627;
	add.s64 	%rd1905, %rd1904, %rd1602;
	add.s64 	%rd1906, %rd1905, %rd1701;
	ld.const.u64 	%rd1907, [k_sha512+384];
	add.s64 	%rd1908, %rd1906, %rd1907;
	add.s64 	%rd1909, %rd1908, %rd1901;
	add.s64 	%rd1910, %rd1909, %rd1613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6770,%dummy}, %rd1688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6771}, %rd1688;
	}
	shf.r.wrap.b32 	%r6772, %r6771, %r6770, 28;
	shf.r.wrap.b32 	%r6773, %r6770, %r6771, 28;
	mov.b64 	%rd1911, {%r6773, %r6772};
	shf.l.wrap.b32 	%r6774, %r6770, %r6771, 30;
	shf.l.wrap.b32 	%r6775, %r6771, %r6770, 30;
	mov.b64 	%rd1912, {%r6775, %r6774};
	xor.b64  	%rd1913, %rd1912, %rd1911;
	shf.l.wrap.b32 	%r6776, %r6770, %r6771, 25;
	shf.l.wrap.b32 	%r6777, %r6771, %r6770, 25;
	mov.b64 	%rd1914, {%r6777, %r6776};
	xor.b64  	%rd1915, %rd1913, %rd1914;
	xor.b64  	%rd1916, %rd1688, %rd1638;
	xor.b64  	%rd1917, %rd1688, %rd1663;
	and.b64  	%rd1918, %rd1917, %rd1916;
	xor.b64  	%rd1919, %rd1918, %rd1688;
	add.s64 	%rd1920, %rd1909, %rd1919;
	add.s64 	%rd1921, %rd1920, %rd1915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd1910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6779}, %rd1910;
	}
	shf.r.wrap.b32 	%r6780, %r6779, %r6778, 14;
	shf.r.wrap.b32 	%r6781, %r6778, %r6779, 14;
	mov.b64 	%rd1922, {%r6781, %r6780};
	shf.r.wrap.b32 	%r6782, %r6779, %r6778, 18;
	shf.r.wrap.b32 	%r6783, %r6778, %r6779, 18;
	mov.b64 	%rd1923, {%r6783, %r6782};
	xor.b64  	%rd1924, %rd1923, %rd1922;
	shf.l.wrap.b32 	%r6784, %r6778, %r6779, 23;
	shf.l.wrap.b32 	%r6785, %r6779, %r6778, 23;
	mov.b64 	%rd1925, {%r6785, %r6784};
	xor.b64  	%rd1926, %rd1924, %rd1925;
	xor.b64  	%rd1927, %rd1677, %rd1652;
	and.b64  	%rd1928, %rd1910, %rd1927;
	xor.b64  	%rd1929, %rd1928, %rd1652;
	add.s64 	%rd1930, %rd1714, %rd1627;
	ld.const.u64 	%rd1931, [k_sha512+392];
	add.s64 	%rd1932, %rd1930, %rd1931;
	add.s64 	%rd1933, %rd1932, %rd1929;
	add.s64 	%rd1934, %rd1933, %rd1926;
	add.s64 	%rd1935, %rd1934, %rd1638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6786,%dummy}, %rd1921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6787}, %rd1921;
	}
	shf.r.wrap.b32 	%r6788, %r6787, %r6786, 28;
	shf.r.wrap.b32 	%r6789, %r6786, %r6787, 28;
	mov.b64 	%rd1936, {%r6789, %r6788};
	shf.l.wrap.b32 	%r6790, %r6786, %r6787, 30;
	shf.l.wrap.b32 	%r6791, %r6787, %r6786, 30;
	mov.b64 	%rd1937, {%r6791, %r6790};
	xor.b64  	%rd1938, %rd1937, %rd1936;
	shf.l.wrap.b32 	%r6792, %r6786, %r6787, 25;
	shf.l.wrap.b32 	%r6793, %r6787, %r6786, 25;
	mov.b64 	%rd1939, {%r6793, %r6792};
	xor.b64  	%rd1940, %rd1938, %rd1939;
	xor.b64  	%rd1941, %rd1921, %rd1663;
	xor.b64  	%rd1942, %rd1921, %rd1688;
	and.b64  	%rd1943, %rd1942, %rd1941;
	xor.b64  	%rd1944, %rd1943, %rd1921;
	add.s64 	%rd1945, %rd1934, %rd1944;
	add.s64 	%rd1946, %rd1945, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6794,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6795}, %rd1935;
	}
	shf.r.wrap.b32 	%r6796, %r6795, %r6794, 14;
	shf.r.wrap.b32 	%r6797, %r6794, %r6795, 14;
	mov.b64 	%rd1947, {%r6797, %r6796};
	shf.r.wrap.b32 	%r6798, %r6795, %r6794, 18;
	shf.r.wrap.b32 	%r6799, %r6794, %r6795, 18;
	mov.b64 	%rd1948, {%r6799, %r6798};
	xor.b64  	%rd1949, %rd1948, %rd1947;
	shf.l.wrap.b32 	%r6800, %r6794, %r6795, 23;
	shf.l.wrap.b32 	%r6801, %r6795, %r6794, 23;
	mov.b64 	%rd1950, {%r6801, %r6800};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	xor.b64  	%rd1952, %rd1910, %rd1677;
	and.b64  	%rd1953, %rd1935, %rd1952;
	xor.b64  	%rd1954, %rd1953, %rd1677;
	add.s64 	%rd1955, %rd1727, %rd1652;
	ld.const.u64 	%rd1956, [k_sha512+400];
	add.s64 	%rd1957, %rd1955, %rd1956;
	add.s64 	%rd1958, %rd1957, %rd1954;
	add.s64 	%rd1959, %rd1958, %rd1951;
	add.s64 	%rd1960, %rd1959, %rd1663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd1946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6803}, %rd1946;
	}
	shf.r.wrap.b32 	%r6804, %r6803, %r6802, 28;
	shf.r.wrap.b32 	%r6805, %r6802, %r6803, 28;
	mov.b64 	%rd1961, {%r6805, %r6804};
	shf.l.wrap.b32 	%r6806, %r6802, %r6803, 30;
	shf.l.wrap.b32 	%r6807, %r6803, %r6802, 30;
	mov.b64 	%rd1962, {%r6807, %r6806};
	xor.b64  	%rd1963, %rd1962, %rd1961;
	shf.l.wrap.b32 	%r6808, %r6802, %r6803, 25;
	shf.l.wrap.b32 	%r6809, %r6803, %r6802, 25;
	mov.b64 	%rd1964, {%r6809, %r6808};
	xor.b64  	%rd1965, %rd1963, %rd1964;
	xor.b64  	%rd1966, %rd1946, %rd1688;
	xor.b64  	%rd1967, %rd1946, %rd1921;
	and.b64  	%rd1968, %rd1967, %rd1966;
	xor.b64  	%rd1969, %rd1968, %rd1946;
	add.s64 	%rd1970, %rd1959, %rd1969;
	add.s64 	%rd1971, %rd1970, %rd1965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd1960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6811}, %rd1960;
	}
	shf.r.wrap.b32 	%r6812, %r6811, %r6810, 14;
	shf.r.wrap.b32 	%r6813, %r6810, %r6811, 14;
	mov.b64 	%rd1972, {%r6813, %r6812};
	shf.r.wrap.b32 	%r6814, %r6811, %r6810, 18;
	shf.r.wrap.b32 	%r6815, %r6810, %r6811, 18;
	mov.b64 	%rd1973, {%r6815, %r6814};
	xor.b64  	%rd1974, %rd1973, %rd1972;
	shf.l.wrap.b32 	%r6816, %r6810, %r6811, 23;
	shf.l.wrap.b32 	%r6817, %r6811, %r6810, 23;
	mov.b64 	%rd1975, {%r6817, %r6816};
	xor.b64  	%rd1976, %rd1974, %rd1975;
	xor.b64  	%rd1977, %rd1935, %rd1910;
	and.b64  	%rd1978, %rd1960, %rd1977;
	xor.b64  	%rd1979, %rd1978, %rd1910;
	add.s64 	%rd1980, %rd1740, %rd1677;
	ld.const.u64 	%rd1981, [k_sha512+408];
	add.s64 	%rd1982, %rd1980, %rd1981;
	add.s64 	%rd1983, %rd1982, %rd1979;
	add.s64 	%rd1984, %rd1983, %rd1976;
	add.s64 	%rd1985, %rd1984, %rd1688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd1971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6819}, %rd1971;
	}
	shf.r.wrap.b32 	%r6820, %r6819, %r6818, 28;
	shf.r.wrap.b32 	%r6821, %r6818, %r6819, 28;
	mov.b64 	%rd1986, {%r6821, %r6820};
	shf.l.wrap.b32 	%r6822, %r6818, %r6819, 30;
	shf.l.wrap.b32 	%r6823, %r6819, %r6818, 30;
	mov.b64 	%rd1987, {%r6823, %r6822};
	xor.b64  	%rd1988, %rd1987, %rd1986;
	shf.l.wrap.b32 	%r6824, %r6818, %r6819, 25;
	shf.l.wrap.b32 	%r6825, %r6819, %r6818, 25;
	mov.b64 	%rd1989, {%r6825, %r6824};
	xor.b64  	%rd1990, %rd1988, %rd1989;
	xor.b64  	%rd1991, %rd1971, %rd1921;
	xor.b64  	%rd1992, %rd1971, %rd1946;
	and.b64  	%rd1993, %rd1992, %rd1991;
	xor.b64  	%rd1994, %rd1993, %rd1971;
	add.s64 	%rd1995, %rd1984, %rd1994;
	add.s64 	%rd1996, %rd1995, %rd1990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6826,%dummy}, %rd1985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6827}, %rd1985;
	}
	shf.r.wrap.b32 	%r6828, %r6827, %r6826, 14;
	shf.r.wrap.b32 	%r6829, %r6826, %r6827, 14;
	mov.b64 	%rd1997, {%r6829, %r6828};
	shf.r.wrap.b32 	%r6830, %r6827, %r6826, 18;
	shf.r.wrap.b32 	%r6831, %r6826, %r6827, 18;
	mov.b64 	%rd1998, {%r6831, %r6830};
	xor.b64  	%rd1999, %rd1998, %rd1997;
	shf.l.wrap.b32 	%r6832, %r6826, %r6827, 23;
	shf.l.wrap.b32 	%r6833, %r6827, %r6826, 23;
	mov.b64 	%rd2000, {%r6833, %r6832};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	xor.b64  	%rd2002, %rd1960, %rd1935;
	and.b64  	%rd2003, %rd1985, %rd2002;
	xor.b64  	%rd2004, %rd2003, %rd1935;
	add.s64 	%rd2005, %rd1910, %rd1753;
	ld.const.u64 	%rd2006, [k_sha512+416];
	add.s64 	%rd2007, %rd2005, %rd2006;
	add.s64 	%rd2008, %rd2007, %rd2004;
	add.s64 	%rd2009, %rd2008, %rd2001;
	add.s64 	%rd2010, %rd2009, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd1996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd1996;
	}
	shf.r.wrap.b32 	%r6836, %r6835, %r6834, 28;
	shf.r.wrap.b32 	%r6837, %r6834, %r6835, 28;
	mov.b64 	%rd2011, {%r6837, %r6836};
	shf.l.wrap.b32 	%r6838, %r6834, %r6835, 30;
	shf.l.wrap.b32 	%r6839, %r6835, %r6834, 30;
	mov.b64 	%rd2012, {%r6839, %r6838};
	xor.b64  	%rd2013, %rd2012, %rd2011;
	shf.l.wrap.b32 	%r6840, %r6834, %r6835, 25;
	shf.l.wrap.b32 	%r6841, %r6835, %r6834, 25;
	mov.b64 	%rd2014, {%r6841, %r6840};
	xor.b64  	%rd2015, %rd2013, %rd2014;
	xor.b64  	%rd2016, %rd1996, %rd1946;
	xor.b64  	%rd2017, %rd1996, %rd1971;
	and.b64  	%rd2018, %rd2017, %rd2016;
	xor.b64  	%rd2019, %rd2018, %rd1996;
	add.s64 	%rd2020, %rd2009, %rd2019;
	add.s64 	%rd2021, %rd2020, %rd2015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd2010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6843}, %rd2010;
	}
	shf.r.wrap.b32 	%r6844, %r6843, %r6842, 14;
	shf.r.wrap.b32 	%r6845, %r6842, %r6843, 14;
	mov.b64 	%rd2022, {%r6845, %r6844};
	shf.r.wrap.b32 	%r6846, %r6843, %r6842, 18;
	shf.r.wrap.b32 	%r6847, %r6842, %r6843, 18;
	mov.b64 	%rd2023, {%r6847, %r6846};
	xor.b64  	%rd2024, %rd2023, %rd2022;
	shf.l.wrap.b32 	%r6848, %r6842, %r6843, 23;
	shf.l.wrap.b32 	%r6849, %r6843, %r6842, 23;
	mov.b64 	%rd2025, {%r6849, %r6848};
	xor.b64  	%rd2026, %rd2024, %rd2025;
	xor.b64  	%rd2027, %rd1985, %rd1960;
	and.b64  	%rd2028, %rd2010, %rd2027;
	xor.b64  	%rd2029, %rd2028, %rd1960;
	add.s64 	%rd2030, %rd1935, %rd1766;
	ld.const.u64 	%rd2031, [k_sha512+424];
	add.s64 	%rd2032, %rd2030, %rd2031;
	add.s64 	%rd2033, %rd2032, %rd2029;
	add.s64 	%rd2034, %rd2033, %rd2026;
	add.s64 	%rd2035, %rd2034, %rd1946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd2021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6851}, %rd2021;
	}
	shf.r.wrap.b32 	%r6852, %r6851, %r6850, 28;
	shf.r.wrap.b32 	%r6853, %r6850, %r6851, 28;
	mov.b64 	%rd2036, {%r6853, %r6852};
	shf.l.wrap.b32 	%r6854, %r6850, %r6851, 30;
	shf.l.wrap.b32 	%r6855, %r6851, %r6850, 30;
	mov.b64 	%rd2037, {%r6855, %r6854};
	xor.b64  	%rd2038, %rd2037, %rd2036;
	shf.l.wrap.b32 	%r6856, %r6850, %r6851, 25;
	shf.l.wrap.b32 	%r6857, %r6851, %r6850, 25;
	mov.b64 	%rd2039, {%r6857, %r6856};
	xor.b64  	%rd2040, %rd2038, %rd2039;
	xor.b64  	%rd2041, %rd2021, %rd1971;
	xor.b64  	%rd2042, %rd2021, %rd1996;
	and.b64  	%rd2043, %rd2042, %rd2041;
	xor.b64  	%rd2044, %rd2043, %rd2021;
	add.s64 	%rd2045, %rd2034, %rd2044;
	add.s64 	%rd2046, %rd2045, %rd2040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6858,%dummy}, %rd2035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6859}, %rd2035;
	}
	shf.r.wrap.b32 	%r6860, %r6859, %r6858, 14;
	shf.r.wrap.b32 	%r6861, %r6858, %r6859, 14;
	mov.b64 	%rd2047, {%r6861, %r6860};
	shf.r.wrap.b32 	%r6862, %r6859, %r6858, 18;
	shf.r.wrap.b32 	%r6863, %r6858, %r6859, 18;
	mov.b64 	%rd2048, {%r6863, %r6862};
	xor.b64  	%rd2049, %rd2048, %rd2047;
	shf.l.wrap.b32 	%r6864, %r6858, %r6859, 23;
	shf.l.wrap.b32 	%r6865, %r6859, %r6858, 23;
	mov.b64 	%rd2050, {%r6865, %r6864};
	xor.b64  	%rd2051, %rd2049, %rd2050;
	xor.b64  	%rd2052, %rd2010, %rd1985;
	and.b64  	%rd2053, %rd2035, %rd2052;
	xor.b64  	%rd2054, %rd2053, %rd1985;
	add.s64 	%rd2055, %rd1960, %rd1779;
	ld.const.u64 	%rd2056, [k_sha512+432];
	add.s64 	%rd2057, %rd2055, %rd2056;
	add.s64 	%rd2058, %rd2057, %rd2054;
	add.s64 	%rd2059, %rd2058, %rd2051;
	add.s64 	%rd2060, %rd2059, %rd1971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd2046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6867}, %rd2046;
	}
	shf.r.wrap.b32 	%r6868, %r6867, %r6866, 28;
	shf.r.wrap.b32 	%r6869, %r6866, %r6867, 28;
	mov.b64 	%rd2061, {%r6869, %r6868};
	shf.l.wrap.b32 	%r6870, %r6866, %r6867, 30;
	shf.l.wrap.b32 	%r6871, %r6867, %r6866, 30;
	mov.b64 	%rd2062, {%r6871, %r6870};
	xor.b64  	%rd2063, %rd2062, %rd2061;
	shf.l.wrap.b32 	%r6872, %r6866, %r6867, 25;
	shf.l.wrap.b32 	%r6873, %r6867, %r6866, 25;
	mov.b64 	%rd2064, {%r6873, %r6872};
	xor.b64  	%rd2065, %rd2063, %rd2064;
	xor.b64  	%rd2066, %rd2046, %rd1996;
	xor.b64  	%rd2067, %rd2046, %rd2021;
	and.b64  	%rd2068, %rd2067, %rd2066;
	xor.b64  	%rd2069, %rd2068, %rd2046;
	add.s64 	%rd2070, %rd2059, %rd2069;
	add.s64 	%rd2071, %rd2070, %rd2065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd2060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6875}, %rd2060;
	}
	shf.r.wrap.b32 	%r6876, %r6875, %r6874, 14;
	shf.r.wrap.b32 	%r6877, %r6874, %r6875, 14;
	mov.b64 	%rd2072, {%r6877, %r6876};
	shf.r.wrap.b32 	%r6878, %r6875, %r6874, 18;
	shf.r.wrap.b32 	%r6879, %r6874, %r6875, 18;
	mov.b64 	%rd2073, {%r6879, %r6878};
	xor.b64  	%rd2074, %rd2073, %rd2072;
	shf.l.wrap.b32 	%r6880, %r6874, %r6875, 23;
	shf.l.wrap.b32 	%r6881, %r6875, %r6874, 23;
	mov.b64 	%rd2075, {%r6881, %r6880};
	xor.b64  	%rd2076, %rd2074, %rd2075;
	xor.b64  	%rd2077, %rd2035, %rd2010;
	and.b64  	%rd2078, %rd2060, %rd2077;
	xor.b64  	%rd2079, %rd2078, %rd2010;
	add.s64 	%rd2080, %rd1985, %rd1792;
	ld.const.u64 	%rd2081, [k_sha512+440];
	add.s64 	%rd2082, %rd2080, %rd2081;
	add.s64 	%rd2083, %rd2082, %rd2079;
	add.s64 	%rd2084, %rd2083, %rd2076;
	add.s64 	%rd2085, %rd2084, %rd1996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd2071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6883}, %rd2071;
	}
	shf.r.wrap.b32 	%r6884, %r6883, %r6882, 28;
	shf.r.wrap.b32 	%r6885, %r6882, %r6883, 28;
	mov.b64 	%rd2086, {%r6885, %r6884};
	shf.l.wrap.b32 	%r6886, %r6882, %r6883, 30;
	shf.l.wrap.b32 	%r6887, %r6883, %r6882, 30;
	mov.b64 	%rd2087, {%r6887, %r6886};
	xor.b64  	%rd2088, %rd2087, %rd2086;
	shf.l.wrap.b32 	%r6888, %r6882, %r6883, 25;
	shf.l.wrap.b32 	%r6889, %r6883, %r6882, 25;
	mov.b64 	%rd2089, {%r6889, %r6888};
	xor.b64  	%rd2090, %rd2088, %rd2089;
	xor.b64  	%rd2091, %rd2071, %rd2021;
	xor.b64  	%rd2092, %rd2071, %rd2046;
	and.b64  	%rd2093, %rd2092, %rd2091;
	xor.b64  	%rd2094, %rd2093, %rd2071;
	add.s64 	%rd2095, %rd2084, %rd2094;
	add.s64 	%rd2096, %rd2095, %rd2090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd2085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd2085;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 14;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 14;
	mov.b64 	%rd2097, {%r6893, %r6892};
	shf.r.wrap.b32 	%r6894, %r6891, %r6890, 18;
	shf.r.wrap.b32 	%r6895, %r6890, %r6891, 18;
	mov.b64 	%rd2098, {%r6895, %r6894};
	xor.b64  	%rd2099, %rd2098, %rd2097;
	shf.l.wrap.b32 	%r6896, %r6890, %r6891, 23;
	shf.l.wrap.b32 	%r6897, %r6891, %r6890, 23;
	mov.b64 	%rd2100, {%r6897, %r6896};
	xor.b64  	%rd2101, %rd2099, %rd2100;
	xor.b64  	%rd2102, %rd2060, %rd2035;
	and.b64  	%rd2103, %rd2085, %rd2102;
	xor.b64  	%rd2104, %rd2103, %rd2035;
	add.s64 	%rd2105, %rd2010, %rd1805;
	ld.const.u64 	%rd2106, [k_sha512+448];
	add.s64 	%rd2107, %rd2105, %rd2106;
	add.s64 	%rd2108, %rd2107, %rd2104;
	add.s64 	%rd2109, %rd2108, %rd2101;
	add.s64 	%rd2110, %rd2109, %rd2021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6898,%dummy}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6899}, %rd2096;
	}
	shf.r.wrap.b32 	%r6900, %r6899, %r6898, 28;
	shf.r.wrap.b32 	%r6901, %r6898, %r6899, 28;
	mov.b64 	%rd2111, {%r6901, %r6900};
	shf.l.wrap.b32 	%r6902, %r6898, %r6899, 30;
	shf.l.wrap.b32 	%r6903, %r6899, %r6898, 30;
	mov.b64 	%rd2112, {%r6903, %r6902};
	xor.b64  	%rd2113, %rd2112, %rd2111;
	shf.l.wrap.b32 	%r6904, %r6898, %r6899, 25;
	shf.l.wrap.b32 	%r6905, %r6899, %r6898, 25;
	mov.b64 	%rd2114, {%r6905, %r6904};
	xor.b64  	%rd2115, %rd2113, %rd2114;
	xor.b64  	%rd2116, %rd2096, %rd2046;
	xor.b64  	%rd2117, %rd2096, %rd2071;
	and.b64  	%rd2118, %rd2117, %rd2116;
	xor.b64  	%rd2119, %rd2118, %rd2096;
	add.s64 	%rd2120, %rd2109, %rd2119;
	add.s64 	%rd2121, %rd2120, %rd2115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6906,%dummy}, %rd2110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6907}, %rd2110;
	}
	shf.r.wrap.b32 	%r6908, %r6907, %r6906, 14;
	shf.r.wrap.b32 	%r6909, %r6906, %r6907, 14;
	mov.b64 	%rd2122, {%r6909, %r6908};
	shf.r.wrap.b32 	%r6910, %r6907, %r6906, 18;
	shf.r.wrap.b32 	%r6911, %r6906, %r6907, 18;
	mov.b64 	%rd2123, {%r6911, %r6910};
	xor.b64  	%rd2124, %rd2123, %rd2122;
	shf.l.wrap.b32 	%r6912, %r6906, %r6907, 23;
	shf.l.wrap.b32 	%r6913, %r6907, %r6906, 23;
	mov.b64 	%rd2125, {%r6913, %r6912};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	xor.b64  	%rd2127, %rd2085, %rd2060;
	and.b64  	%rd2128, %rd2110, %rd2127;
	xor.b64  	%rd2129, %rd2128, %rd2060;
	add.s64 	%rd2130, %rd2035, %rd1818;
	ld.const.u64 	%rd2131, [k_sha512+456];
	add.s64 	%rd2132, %rd2130, %rd2131;
	add.s64 	%rd2133, %rd2132, %rd2129;
	add.s64 	%rd2134, %rd2133, %rd2126;
	add.s64 	%rd2135, %rd2134, %rd2046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6914,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6915}, %rd2121;
	}
	shf.r.wrap.b32 	%r6916, %r6915, %r6914, 28;
	shf.r.wrap.b32 	%r6917, %r6914, %r6915, 28;
	mov.b64 	%rd2136, {%r6917, %r6916};
	shf.l.wrap.b32 	%r6918, %r6914, %r6915, 30;
	shf.l.wrap.b32 	%r6919, %r6915, %r6914, 30;
	mov.b64 	%rd2137, {%r6919, %r6918};
	xor.b64  	%rd2138, %rd2137, %rd2136;
	shf.l.wrap.b32 	%r6920, %r6914, %r6915, 25;
	shf.l.wrap.b32 	%r6921, %r6915, %r6914, 25;
	mov.b64 	%rd2139, {%r6921, %r6920};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	xor.b64  	%rd2141, %rd2121, %rd2071;
	xor.b64  	%rd2142, %rd2121, %rd2096;
	and.b64  	%rd2143, %rd2142, %rd2141;
	xor.b64  	%rd2144, %rd2143, %rd2121;
	add.s64 	%rd2145, %rd2134, %rd2144;
	add.s64 	%rd2146, %rd2145, %rd2140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd2135;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 14;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 14;
	mov.b64 	%rd2147, {%r6925, %r6924};
	shf.r.wrap.b32 	%r6926, %r6923, %r6922, 18;
	shf.r.wrap.b32 	%r6927, %r6922, %r6923, 18;
	mov.b64 	%rd2148, {%r6927, %r6926};
	xor.b64  	%rd2149, %rd2148, %rd2147;
	shf.l.wrap.b32 	%r6928, %r6922, %r6923, 23;
	shf.l.wrap.b32 	%r6929, %r6923, %r6922, 23;
	mov.b64 	%rd2150, {%r6929, %r6928};
	xor.b64  	%rd2151, %rd2149, %rd2150;
	xor.b64  	%rd2152, %rd2110, %rd2085;
	and.b64  	%rd2153, %rd2135, %rd2152;
	xor.b64  	%rd2154, %rd2153, %rd2085;
	add.s64 	%rd2155, %rd2060, %rd1831;
	ld.const.u64 	%rd2156, [k_sha512+464];
	add.s64 	%rd2157, %rd2155, %rd2156;
	add.s64 	%rd2158, %rd2157, %rd2154;
	add.s64 	%rd2159, %rd2158, %rd2151;
	add.s64 	%rd2160, %rd2159, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6930,%dummy}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6931}, %rd2146;
	}
	shf.r.wrap.b32 	%r6932, %r6931, %r6930, 28;
	shf.r.wrap.b32 	%r6933, %r6930, %r6931, 28;
	mov.b64 	%rd2161, {%r6933, %r6932};
	shf.l.wrap.b32 	%r6934, %r6930, %r6931, 30;
	shf.l.wrap.b32 	%r6935, %r6931, %r6930, 30;
	mov.b64 	%rd2162, {%r6935, %r6934};
	xor.b64  	%rd2163, %rd2162, %rd2161;
	shf.l.wrap.b32 	%r6936, %r6930, %r6931, 25;
	shf.l.wrap.b32 	%r6937, %r6931, %r6930, 25;
	mov.b64 	%rd2164, {%r6937, %r6936};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	xor.b64  	%rd2166, %rd2146, %rd2096;
	xor.b64  	%rd2167, %rd2146, %rd2121;
	and.b64  	%rd2168, %rd2167, %rd2166;
	xor.b64  	%rd2169, %rd2168, %rd2146;
	add.s64 	%rd2170, %rd2159, %rd2169;
	add.s64 	%rd2171, %rd2170, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6938,%dummy}, %rd2160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6939}, %rd2160;
	}
	shf.r.wrap.b32 	%r6940, %r6939, %r6938, 14;
	shf.r.wrap.b32 	%r6941, %r6938, %r6939, 14;
	mov.b64 	%rd2172, {%r6941, %r6940};
	shf.r.wrap.b32 	%r6942, %r6939, %r6938, 18;
	shf.r.wrap.b32 	%r6943, %r6938, %r6939, 18;
	mov.b64 	%rd2173, {%r6943, %r6942};
	xor.b64  	%rd2174, %rd2173, %rd2172;
	shf.l.wrap.b32 	%r6944, %r6938, %r6939, 23;
	shf.l.wrap.b32 	%r6945, %r6939, %r6938, 23;
	mov.b64 	%rd2175, {%r6945, %r6944};
	xor.b64  	%rd2176, %rd2174, %rd2175;
	xor.b64  	%rd2177, %rd2135, %rd2110;
	and.b64  	%rd2178, %rd2160, %rd2177;
	xor.b64  	%rd2179, %rd2178, %rd2110;
	add.s64 	%rd2180, %rd2085, %rd1844;
	ld.const.u64 	%rd2181, [k_sha512+472];
	add.s64 	%rd2182, %rd2180, %rd2181;
	add.s64 	%rd2183, %rd2182, %rd2179;
	add.s64 	%rd2184, %rd2183, %rd2176;
	add.s64 	%rd2185, %rd2184, %rd2096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6946,%dummy}, %rd2171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6947}, %rd2171;
	}
	shf.r.wrap.b32 	%r6948, %r6947, %r6946, 28;
	shf.r.wrap.b32 	%r6949, %r6946, %r6947, 28;
	mov.b64 	%rd2186, {%r6949, %r6948};
	shf.l.wrap.b32 	%r6950, %r6946, %r6947, 30;
	shf.l.wrap.b32 	%r6951, %r6947, %r6946, 30;
	mov.b64 	%rd2187, {%r6951, %r6950};
	xor.b64  	%rd2188, %rd2187, %rd2186;
	shf.l.wrap.b32 	%r6952, %r6946, %r6947, 25;
	shf.l.wrap.b32 	%r6953, %r6947, %r6946, 25;
	mov.b64 	%rd2189, {%r6953, %r6952};
	xor.b64  	%rd2190, %rd2188, %rd2189;
	xor.b64  	%rd2191, %rd2171, %rd2121;
	xor.b64  	%rd2192, %rd2171, %rd2146;
	and.b64  	%rd2193, %rd2192, %rd2191;
	xor.b64  	%rd2194, %rd2193, %rd2171;
	add.s64 	%rd2195, %rd2184, %rd2194;
	add.s64 	%rd2196, %rd2195, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6954,%dummy}, %rd2185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6955}, %rd2185;
	}
	shf.r.wrap.b32 	%r6956, %r6955, %r6954, 14;
	shf.r.wrap.b32 	%r6957, %r6954, %r6955, 14;
	mov.b64 	%rd2197, {%r6957, %r6956};
	shf.r.wrap.b32 	%r6958, %r6955, %r6954, 18;
	shf.r.wrap.b32 	%r6959, %r6954, %r6955, 18;
	mov.b64 	%rd2198, {%r6959, %r6958};
	xor.b64  	%rd2199, %rd2198, %rd2197;
	shf.l.wrap.b32 	%r6960, %r6954, %r6955, 23;
	shf.l.wrap.b32 	%r6961, %r6955, %r6954, 23;
	mov.b64 	%rd2200, {%r6961, %r6960};
	xor.b64  	%rd2201, %rd2199, %rd2200;
	xor.b64  	%rd2202, %rd2160, %rd2135;
	and.b64  	%rd2203, %rd2185, %rd2202;
	xor.b64  	%rd2204, %rd2203, %rd2135;
	add.s64 	%rd2205, %rd2110, %rd1857;
	ld.const.u64 	%rd2206, [k_sha512+480];
	add.s64 	%rd2207, %rd2205, %rd2206;
	add.s64 	%rd2208, %rd2207, %rd2204;
	add.s64 	%rd2209, %rd2208, %rd2201;
	add.s64 	%rd2210, %rd2209, %rd2121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6962,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6963}, %rd2196;
	}
	shf.r.wrap.b32 	%r6964, %r6963, %r6962, 28;
	shf.r.wrap.b32 	%r6965, %r6962, %r6963, 28;
	mov.b64 	%rd2211, {%r6965, %r6964};
	shf.l.wrap.b32 	%r6966, %r6962, %r6963, 30;
	shf.l.wrap.b32 	%r6967, %r6963, %r6962, 30;
	mov.b64 	%rd2212, {%r6967, %r6966};
	xor.b64  	%rd2213, %rd2212, %rd2211;
	shf.l.wrap.b32 	%r6968, %r6962, %r6963, 25;
	shf.l.wrap.b32 	%r6969, %r6963, %r6962, 25;
	mov.b64 	%rd2214, {%r6969, %r6968};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	xor.b64  	%rd2216, %rd2196, %rd2146;
	xor.b64  	%rd2217, %rd2196, %rd2171;
	and.b64  	%rd2218, %rd2217, %rd2216;
	xor.b64  	%rd2219, %rd2218, %rd2196;
	add.s64 	%rd2220, %rd2209, %rd2219;
	add.s64 	%rd2221, %rd2220, %rd2215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd2210;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 14;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 14;
	mov.b64 	%rd2222, {%r6973, %r6972};
	shf.r.wrap.b32 	%r6974, %r6971, %r6970, 18;
	shf.r.wrap.b32 	%r6975, %r6970, %r6971, 18;
	mov.b64 	%rd2223, {%r6975, %r6974};
	xor.b64  	%rd2224, %rd2223, %rd2222;
	shf.l.wrap.b32 	%r6976, %r6970, %r6971, 23;
	shf.l.wrap.b32 	%r6977, %r6971, %r6970, 23;
	mov.b64 	%rd2225, {%r6977, %r6976};
	xor.b64  	%rd2226, %rd2224, %rd2225;
	xor.b64  	%rd2227, %rd2185, %rd2160;
	and.b64  	%rd2228, %rd2210, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2160;
	add.s64 	%rd2230, %rd2135, %rd1870;
	ld.const.u64 	%rd2231, [k_sha512+488];
	add.s64 	%rd2232, %rd2230, %rd2231;
	add.s64 	%rd2233, %rd2232, %rd2229;
	add.s64 	%rd2234, %rd2233, %rd2226;
	add.s64 	%rd2235, %rd2234, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6978,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6979}, %rd2221;
	}
	shf.r.wrap.b32 	%r6980, %r6979, %r6978, 28;
	shf.r.wrap.b32 	%r6981, %r6978, %r6979, 28;
	mov.b64 	%rd2236, {%r6981, %r6980};
	shf.l.wrap.b32 	%r6982, %r6978, %r6979, 30;
	shf.l.wrap.b32 	%r6983, %r6979, %r6978, 30;
	mov.b64 	%rd2237, {%r6983, %r6982};
	xor.b64  	%rd2238, %rd2237, %rd2236;
	shf.l.wrap.b32 	%r6984, %r6978, %r6979, 25;
	shf.l.wrap.b32 	%r6985, %r6979, %r6978, 25;
	mov.b64 	%rd2239, {%r6985, %r6984};
	xor.b64  	%rd2240, %rd2238, %rd2239;
	xor.b64  	%rd2241, %rd2221, %rd2171;
	xor.b64  	%rd2242, %rd2221, %rd2196;
	and.b64  	%rd2243, %rd2242, %rd2241;
	xor.b64  	%rd2244, %rd2243, %rd2221;
	add.s64 	%rd2245, %rd2234, %rd2244;
	add.s64 	%rd2246, %rd2245, %rd2240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6986,%dummy}, %rd2235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6987}, %rd2235;
	}
	shf.r.wrap.b32 	%r6988, %r6987, %r6986, 14;
	shf.r.wrap.b32 	%r6989, %r6986, %r6987, 14;
	mov.b64 	%rd2247, {%r6989, %r6988};
	shf.r.wrap.b32 	%r6990, %r6987, %r6986, 18;
	shf.r.wrap.b32 	%r6991, %r6986, %r6987, 18;
	mov.b64 	%rd2248, {%r6991, %r6990};
	xor.b64  	%rd2249, %rd2248, %rd2247;
	shf.l.wrap.b32 	%r6992, %r6986, %r6987, 23;
	shf.l.wrap.b32 	%r6993, %r6987, %r6986, 23;
	mov.b64 	%rd2250, {%r6993, %r6992};
	xor.b64  	%rd2251, %rd2249, %rd2250;
	xor.b64  	%rd2252, %rd2210, %rd2185;
	and.b64  	%rd2253, %rd2235, %rd2252;
	xor.b64  	%rd2254, %rd2253, %rd2185;
	add.s64 	%rd2255, %rd2160, %rd1883;
	ld.const.u64 	%rd2256, [k_sha512+496];
	add.s64 	%rd2257, %rd2255, %rd2256;
	add.s64 	%rd2258, %rd2257, %rd2254;
	add.s64 	%rd2259, %rd2258, %rd2251;
	add.s64 	%rd2260, %rd2259, %rd2171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd2246;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 28;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 28;
	mov.b64 	%rd2261, {%r6997, %r6996};
	shf.l.wrap.b32 	%r6998, %r6994, %r6995, 30;
	shf.l.wrap.b32 	%r6999, %r6995, %r6994, 30;
	mov.b64 	%rd2262, {%r6999, %r6998};
	xor.b64  	%rd2263, %rd2262, %rd2261;
	shf.l.wrap.b32 	%r7000, %r6994, %r6995, 25;
	shf.l.wrap.b32 	%r7001, %r6995, %r6994, 25;
	mov.b64 	%rd2264, {%r7001, %r7000};
	xor.b64  	%rd2265, %rd2263, %rd2264;
	xor.b64  	%rd2266, %rd2246, %rd2196;
	xor.b64  	%rd2267, %rd2246, %rd2221;
	and.b64  	%rd2268, %rd2267, %rd2266;
	xor.b64  	%rd2269, %rd2268, %rd2246;
	add.s64 	%rd2270, %rd2259, %rd2269;
	add.s64 	%rd2271, %rd2270, %rd2265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7002,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7003}, %rd2260;
	}
	shf.r.wrap.b32 	%r7004, %r7003, %r7002, 14;
	shf.r.wrap.b32 	%r7005, %r7002, %r7003, 14;
	mov.b64 	%rd2272, {%r7005, %r7004};
	shf.r.wrap.b32 	%r7006, %r7003, %r7002, 18;
	shf.r.wrap.b32 	%r7007, %r7002, %r7003, 18;
	mov.b64 	%rd2273, {%r7007, %r7006};
	xor.b64  	%rd2274, %rd2273, %rd2272;
	shf.l.wrap.b32 	%r7008, %r7002, %r7003, 23;
	shf.l.wrap.b32 	%r7009, %r7003, %r7002, 23;
	mov.b64 	%rd2275, {%r7009, %r7008};
	xor.b64  	%rd2276, %rd2274, %rd2275;
	xor.b64  	%rd2277, %rd2235, %rd2210;
	and.b64  	%rd2278, %rd2260, %rd2277;
	xor.b64  	%rd2279, %rd2278, %rd2210;
	add.s64 	%rd2280, %rd2185, %rd1896;
	ld.const.u64 	%rd2281, [k_sha512+504];
	add.s64 	%rd2282, %rd2280, %rd2281;
	add.s64 	%rd2283, %rd2282, %rd2279;
	add.s64 	%rd2284, %rd2283, %rd2276;
	add.s64 	%rd2285, %rd2284, %rd2196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7010,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7011}, %rd2271;
	}
	shf.r.wrap.b32 	%r7012, %r7011, %r7010, 28;
	shf.r.wrap.b32 	%r7013, %r7010, %r7011, 28;
	mov.b64 	%rd2286, {%r7013, %r7012};
	shf.l.wrap.b32 	%r7014, %r7010, %r7011, 30;
	shf.l.wrap.b32 	%r7015, %r7011, %r7010, 30;
	mov.b64 	%rd2287, {%r7015, %r7014};
	xor.b64  	%rd2288, %rd2287, %rd2286;
	shf.l.wrap.b32 	%r7016, %r7010, %r7011, 25;
	shf.l.wrap.b32 	%r7017, %r7011, %r7010, 25;
	mov.b64 	%rd2289, {%r7017, %r7016};
	xor.b64  	%rd2290, %rd2288, %rd2289;
	xor.b64  	%rd2291, %rd2271, %rd2221;
	xor.b64  	%rd2292, %rd2271, %rd2246;
	and.b64  	%rd2293, %rd2292, %rd2291;
	xor.b64  	%rd2294, %rd2293, %rd2271;
	add.s64 	%rd2295, %rd2284, %rd2294;
	add.s64 	%rd2296, %rd2295, %rd2290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd1883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd1883;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 19;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 19;
	mov.b64 	%rd2297, {%r7021, %r7020};
	shf.l.wrap.b32 	%r7022, %r7018, %r7019, 3;
	shf.l.wrap.b32 	%r7023, %r7019, %r7018, 3;
	mov.b64 	%rd2298, {%r7023, %r7022};
	shr.u64 	%rd2299, %rd1883, 6;
	xor.b64  	%rd2300, %rd2297, %rd2299;
	xor.b64  	%rd2301, %rd2300, %rd2298;
	shf.r.wrap.b32 	%r7024, %r6633, %r6632, 1;
	shf.r.wrap.b32 	%r7025, %r6632, %r6633, 1;
	mov.b64 	%rd2302, {%r7025, %r7024};
	shf.r.wrap.b32 	%r7026, %r6633, %r6632, 8;
	shf.r.wrap.b32 	%r7027, %r6632, %r6633, 8;
	mov.b64 	%rd2303, {%r7027, %r7026};
	shr.u64 	%rd2304, %rd1714, 7;
	xor.b64  	%rd2305, %rd2302, %rd2304;
	xor.b64  	%rd2306, %rd2305, %rd2303;
	add.s64 	%rd2307, %rd1818, %rd1701;
	add.s64 	%rd2308, %rd2307, %rd2301;
	add.s64 	%rd2309, %rd2308, %rd2306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7028,%dummy}, %rd1896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7029}, %rd1896;
	}
	shf.r.wrap.b32 	%r7030, %r7029, %r7028, 19;
	shf.r.wrap.b32 	%r7031, %r7028, %r7029, 19;
	mov.b64 	%rd2310, {%r7031, %r7030};
	shf.l.wrap.b32 	%r7032, %r7028, %r7029, 3;
	shf.l.wrap.b32 	%r7033, %r7029, %r7028, 3;
	mov.b64 	%rd2311, {%r7033, %r7032};
	shr.u64 	%rd2312, %rd1896, 6;
	xor.b64  	%rd2313, %rd2310, %rd2312;
	xor.b64  	%rd2314, %rd2313, %rd2311;
	shf.r.wrap.b32 	%r7034, %r6643, %r6642, 1;
	shf.r.wrap.b32 	%r7035, %r6642, %r6643, 1;
	mov.b64 	%rd2315, {%r7035, %r7034};
	shf.r.wrap.b32 	%r7036, %r6643, %r6642, 8;
	shf.r.wrap.b32 	%r7037, %r6642, %r6643, 8;
	mov.b64 	%rd2316, {%r7037, %r7036};
	shr.u64 	%rd2317, %rd1727, 7;
	xor.b64  	%rd2318, %rd2315, %rd2317;
	xor.b64  	%rd2319, %rd2318, %rd2316;
	add.s64 	%rd2320, %rd1831, %rd1714;
	add.s64 	%rd2321, %rd2320, %rd2314;
	add.s64 	%rd2322, %rd2321, %rd2319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7038,%dummy}, %rd2309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7039}, %rd2309;
	}
	shf.r.wrap.b32 	%r7040, %r7039, %r7038, 19;
	shf.r.wrap.b32 	%r7041, %r7038, %r7039, 19;
	mov.b64 	%rd2323, {%r7041, %r7040};
	shf.l.wrap.b32 	%r7042, %r7038, %r7039, 3;
	shf.l.wrap.b32 	%r7043, %r7039, %r7038, 3;
	mov.b64 	%rd2324, {%r7043, %r7042};
	shr.u64 	%rd2325, %rd2309, 6;
	xor.b64  	%rd2326, %rd2323, %rd2325;
	xor.b64  	%rd2327, %rd2326, %rd2324;
	shf.r.wrap.b32 	%r7044, %r6653, %r6652, 1;
	shf.r.wrap.b32 	%r7045, %r6652, %r6653, 1;
	mov.b64 	%rd2328, {%r7045, %r7044};
	shf.r.wrap.b32 	%r7046, %r6653, %r6652, 8;
	shf.r.wrap.b32 	%r7047, %r6652, %r6653, 8;
	mov.b64 	%rd2329, {%r7047, %r7046};
	shr.u64 	%rd2330, %rd1740, 7;
	xor.b64  	%rd2331, %rd2328, %rd2330;
	xor.b64  	%rd2332, %rd2331, %rd2329;
	add.s64 	%rd2333, %rd1844, %rd1727;
	add.s64 	%rd2334, %rd2333, %rd2327;
	add.s64 	%rd2335, %rd2334, %rd2332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd2322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd2322;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 19;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 19;
	mov.b64 	%rd2336, {%r7051, %r7050};
	shf.l.wrap.b32 	%r7052, %r7048, %r7049, 3;
	shf.l.wrap.b32 	%r7053, %r7049, %r7048, 3;
	mov.b64 	%rd2337, {%r7053, %r7052};
	shr.u64 	%rd2338, %rd2322, 6;
	xor.b64  	%rd2339, %rd2336, %rd2338;
	xor.b64  	%rd2340, %rd2339, %rd2337;
	shf.r.wrap.b32 	%r7054, %r6663, %r6662, 1;
	shf.r.wrap.b32 	%r7055, %r6662, %r6663, 1;
	mov.b64 	%rd2341, {%r7055, %r7054};
	shf.r.wrap.b32 	%r7056, %r6663, %r6662, 8;
	shf.r.wrap.b32 	%r7057, %r6662, %r6663, 8;
	mov.b64 	%rd2342, {%r7057, %r7056};
	shr.u64 	%rd2343, %rd1753, 7;
	xor.b64  	%rd2344, %rd2341, %rd2343;
	xor.b64  	%rd2345, %rd2344, %rd2342;
	add.s64 	%rd2346, %rd1857, %rd1740;
	add.s64 	%rd2347, %rd2346, %rd2340;
	add.s64 	%rd2348, %rd2347, %rd2345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7058,%dummy}, %rd2335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7059}, %rd2335;
	}
	shf.r.wrap.b32 	%r7060, %r7059, %r7058, 19;
	shf.r.wrap.b32 	%r7061, %r7058, %r7059, 19;
	mov.b64 	%rd2349, {%r7061, %r7060};
	shf.l.wrap.b32 	%r7062, %r7058, %r7059, 3;
	shf.l.wrap.b32 	%r7063, %r7059, %r7058, 3;
	mov.b64 	%rd2350, {%r7063, %r7062};
	shr.u64 	%rd2351, %rd2335, 6;
	xor.b64  	%rd2352, %rd2349, %rd2351;
	xor.b64  	%rd2353, %rd2352, %rd2350;
	shf.r.wrap.b32 	%r7064, %r6673, %r6672, 1;
	shf.r.wrap.b32 	%r7065, %r6672, %r6673, 1;
	mov.b64 	%rd2354, {%r7065, %r7064};
	shf.r.wrap.b32 	%r7066, %r6673, %r6672, 8;
	shf.r.wrap.b32 	%r7067, %r6672, %r6673, 8;
	mov.b64 	%rd2355, {%r7067, %r7066};
	shr.u64 	%rd2356, %rd1766, 7;
	xor.b64  	%rd2357, %rd2354, %rd2356;
	xor.b64  	%rd2358, %rd2357, %rd2355;
	add.s64 	%rd2359, %rd1870, %rd1753;
	add.s64 	%rd2360, %rd2359, %rd2353;
	add.s64 	%rd2361, %rd2360, %rd2358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7068,%dummy}, %rd2348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7069}, %rd2348;
	}
	shf.r.wrap.b32 	%r7070, %r7069, %r7068, 19;
	shf.r.wrap.b32 	%r7071, %r7068, %r7069, 19;
	mov.b64 	%rd2362, {%r7071, %r7070};
	shf.l.wrap.b32 	%r7072, %r7068, %r7069, 3;
	shf.l.wrap.b32 	%r7073, %r7069, %r7068, 3;
	mov.b64 	%rd2363, {%r7073, %r7072};
	shr.u64 	%rd2364, %rd2348, 6;
	xor.b64  	%rd2365, %rd2362, %rd2364;
	xor.b64  	%rd2366, %rd2365, %rd2363;
	shf.r.wrap.b32 	%r7074, %r6683, %r6682, 1;
	shf.r.wrap.b32 	%r7075, %r6682, %r6683, 1;
	mov.b64 	%rd2367, {%r7075, %r7074};
	shf.r.wrap.b32 	%r7076, %r6683, %r6682, 8;
	shf.r.wrap.b32 	%r7077, %r6682, %r6683, 8;
	mov.b64 	%rd2368, {%r7077, %r7076};
	shr.u64 	%rd2369, %rd1779, 7;
	xor.b64  	%rd2370, %rd2367, %rd2369;
	xor.b64  	%rd2371, %rd2370, %rd2368;
	add.s64 	%rd2372, %rd1883, %rd1766;
	add.s64 	%rd2373, %rd2372, %rd2366;
	add.s64 	%rd2374, %rd2373, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7078,%dummy}, %rd2361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7079}, %rd2361;
	}
	shf.r.wrap.b32 	%r7080, %r7079, %r7078, 19;
	shf.r.wrap.b32 	%r7081, %r7078, %r7079, 19;
	mov.b64 	%rd2375, {%r7081, %r7080};
	shf.l.wrap.b32 	%r7082, %r7078, %r7079, 3;
	shf.l.wrap.b32 	%r7083, %r7079, %r7078, 3;
	mov.b64 	%rd2376, {%r7083, %r7082};
	shr.u64 	%rd2377, %rd2361, 6;
	xor.b64  	%rd2378, %rd2375, %rd2377;
	xor.b64  	%rd2379, %rd2378, %rd2376;
	shf.r.wrap.b32 	%r7084, %r6693, %r6692, 1;
	shf.r.wrap.b32 	%r7085, %r6692, %r6693, 1;
	mov.b64 	%rd2380, {%r7085, %r7084};
	shf.r.wrap.b32 	%r7086, %r6693, %r6692, 8;
	shf.r.wrap.b32 	%r7087, %r6692, %r6693, 8;
	mov.b64 	%rd2381, {%r7087, %r7086};
	shr.u64 	%rd2382, %rd1792, 7;
	xor.b64  	%rd2383, %rd2380, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2381;
	add.s64 	%rd2385, %rd1896, %rd1779;
	add.s64 	%rd2386, %rd2385, %rd2379;
	add.s64 	%rd2387, %rd2386, %rd2384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7088,%dummy}, %rd2374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7089}, %rd2374;
	}
	shf.r.wrap.b32 	%r7090, %r7089, %r7088, 19;
	shf.r.wrap.b32 	%r7091, %r7088, %r7089, 19;
	mov.b64 	%rd2388, {%r7091, %r7090};
	shf.l.wrap.b32 	%r7092, %r7088, %r7089, 3;
	shf.l.wrap.b32 	%r7093, %r7089, %r7088, 3;
	mov.b64 	%rd2389, {%r7093, %r7092};
	shr.u64 	%rd2390, %rd2374, 6;
	xor.b64  	%rd2391, %rd2388, %rd2390;
	xor.b64  	%rd2392, %rd2391, %rd2389;
	shf.r.wrap.b32 	%r7094, %r6703, %r6702, 1;
	shf.r.wrap.b32 	%r7095, %r6702, %r6703, 1;
	mov.b64 	%rd2393, {%r7095, %r7094};
	shf.r.wrap.b32 	%r7096, %r6703, %r6702, 8;
	shf.r.wrap.b32 	%r7097, %r6702, %r6703, 8;
	mov.b64 	%rd2394, {%r7097, %r7096};
	shr.u64 	%rd2395, %rd1805, 7;
	xor.b64  	%rd2396, %rd2393, %rd2395;
	xor.b64  	%rd2397, %rd2396, %rd2394;
	add.s64 	%rd2398, %rd2309, %rd1792;
	add.s64 	%rd2399, %rd2398, %rd2392;
	add.s64 	%rd2400, %rd2399, %rd2397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7098,%dummy}, %rd2387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7099}, %rd2387;
	}
	shf.r.wrap.b32 	%r7100, %r7099, %r7098, 19;
	shf.r.wrap.b32 	%r7101, %r7098, %r7099, 19;
	mov.b64 	%rd2401, {%r7101, %r7100};
	shf.l.wrap.b32 	%r7102, %r7098, %r7099, 3;
	shf.l.wrap.b32 	%r7103, %r7099, %r7098, 3;
	mov.b64 	%rd2402, {%r7103, %r7102};
	shr.u64 	%rd2403, %rd2387, 6;
	xor.b64  	%rd2404, %rd2401, %rd2403;
	xor.b64  	%rd2405, %rd2404, %rd2402;
	shf.r.wrap.b32 	%r7104, %r6713, %r6712, 1;
	shf.r.wrap.b32 	%r7105, %r6712, %r6713, 1;
	mov.b64 	%rd2406, {%r7105, %r7104};
	shf.r.wrap.b32 	%r7106, %r6713, %r6712, 8;
	shf.r.wrap.b32 	%r7107, %r6712, %r6713, 8;
	mov.b64 	%rd2407, {%r7107, %r7106};
	shr.u64 	%rd2408, %rd1818, 7;
	xor.b64  	%rd2409, %rd2406, %rd2408;
	xor.b64  	%rd2410, %rd2409, %rd2407;
	add.s64 	%rd2411, %rd2322, %rd1805;
	add.s64 	%rd2412, %rd2411, %rd2405;
	add.s64 	%rd2413, %rd2412, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7108,%dummy}, %rd2400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7109}, %rd2400;
	}
	shf.r.wrap.b32 	%r7110, %r7109, %r7108, 19;
	shf.r.wrap.b32 	%r7111, %r7108, %r7109, 19;
	mov.b64 	%rd2414, {%r7111, %r7110};
	shf.l.wrap.b32 	%r7112, %r7108, %r7109, 3;
	shf.l.wrap.b32 	%r7113, %r7109, %r7108, 3;
	mov.b64 	%rd2415, {%r7113, %r7112};
	shr.u64 	%rd2416, %rd2400, 6;
	xor.b64  	%rd2417, %rd2414, %rd2416;
	xor.b64  	%rd2418, %rd2417, %rd2415;
	shf.r.wrap.b32 	%r7114, %r6723, %r6722, 1;
	shf.r.wrap.b32 	%r7115, %r6722, %r6723, 1;
	mov.b64 	%rd2419, {%r7115, %r7114};
	shf.r.wrap.b32 	%r7116, %r6723, %r6722, 8;
	shf.r.wrap.b32 	%r7117, %r6722, %r6723, 8;
	mov.b64 	%rd2420, {%r7117, %r7116};
	shr.u64 	%rd2421, %rd1831, 7;
	xor.b64  	%rd2422, %rd2419, %rd2421;
	xor.b64  	%rd2423, %rd2422, %rd2420;
	add.s64 	%rd2424, %rd2335, %rd1818;
	add.s64 	%rd2425, %rd2424, %rd2418;
	add.s64 	%rd2426, %rd2425, %rd2423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd2413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd2413;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 19;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 19;
	mov.b64 	%rd2427, {%r7121, %r7120};
	shf.l.wrap.b32 	%r7122, %r7118, %r7119, 3;
	shf.l.wrap.b32 	%r7123, %r7119, %r7118, 3;
	mov.b64 	%rd2428, {%r7123, %r7122};
	shr.u64 	%rd2429, %rd2413, 6;
	xor.b64  	%rd2430, %rd2427, %rd2429;
	xor.b64  	%rd2431, %rd2430, %rd2428;
	shf.r.wrap.b32 	%r7124, %r6733, %r6732, 1;
	shf.r.wrap.b32 	%r7125, %r6732, %r6733, 1;
	mov.b64 	%rd2432, {%r7125, %r7124};
	shf.r.wrap.b32 	%r7126, %r6733, %r6732, 8;
	shf.r.wrap.b32 	%r7127, %r6732, %r6733, 8;
	mov.b64 	%rd2433, {%r7127, %r7126};
	shr.u64 	%rd2434, %rd1844, 7;
	xor.b64  	%rd2435, %rd2432, %rd2434;
	xor.b64  	%rd2436, %rd2435, %rd2433;
	add.s64 	%rd2437, %rd2348, %rd1831;
	add.s64 	%rd2438, %rd2437, %rd2431;
	add.s64 	%rd2439, %rd2438, %rd2436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7128,%dummy}, %rd2426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7129}, %rd2426;
	}
	shf.r.wrap.b32 	%r7130, %r7129, %r7128, 19;
	shf.r.wrap.b32 	%r7131, %r7128, %r7129, 19;
	mov.b64 	%rd2440, {%r7131, %r7130};
	shf.l.wrap.b32 	%r7132, %r7128, %r7129, 3;
	shf.l.wrap.b32 	%r7133, %r7129, %r7128, 3;
	mov.b64 	%rd2441, {%r7133, %r7132};
	shr.u64 	%rd2442, %rd2426, 6;
	xor.b64  	%rd2443, %rd2440, %rd2442;
	xor.b64  	%rd2444, %rd2443, %rd2441;
	shf.r.wrap.b32 	%r7134, %r6743, %r6742, 1;
	shf.r.wrap.b32 	%r7135, %r6742, %r6743, 1;
	mov.b64 	%rd2445, {%r7135, %r7134};
	shf.r.wrap.b32 	%r7136, %r6743, %r6742, 8;
	shf.r.wrap.b32 	%r7137, %r6742, %r6743, 8;
	mov.b64 	%rd2446, {%r7137, %r7136};
	shr.u64 	%rd2447, %rd1857, 7;
	xor.b64  	%rd2448, %rd2445, %rd2447;
	xor.b64  	%rd2449, %rd2448, %rd2446;
	add.s64 	%rd2450, %rd2361, %rd1844;
	add.s64 	%rd2451, %rd2450, %rd2444;
	add.s64 	%rd2452, %rd2451, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7138,%dummy}, %rd2439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7139}, %rd2439;
	}
	shf.r.wrap.b32 	%r7140, %r7139, %r7138, 19;
	shf.r.wrap.b32 	%r7141, %r7138, %r7139, 19;
	mov.b64 	%rd2453, {%r7141, %r7140};
	shf.l.wrap.b32 	%r7142, %r7138, %r7139, 3;
	shf.l.wrap.b32 	%r7143, %r7139, %r7138, 3;
	mov.b64 	%rd2454, {%r7143, %r7142};
	shr.u64 	%rd2455, %rd2439, 6;
	xor.b64  	%rd2456, %rd2453, %rd2455;
	xor.b64  	%rd2457, %rd2456, %rd2454;
	shf.r.wrap.b32 	%r7144, %r6753, %r6752, 1;
	shf.r.wrap.b32 	%r7145, %r6752, %r6753, 1;
	mov.b64 	%rd2458, {%r7145, %r7144};
	shf.r.wrap.b32 	%r7146, %r6753, %r6752, 8;
	shf.r.wrap.b32 	%r7147, %r6752, %r6753, 8;
	mov.b64 	%rd2459, {%r7147, %r7146};
	shr.u64 	%rd2460, %rd1870, 7;
	xor.b64  	%rd2461, %rd2458, %rd2460;
	xor.b64  	%rd2462, %rd2461, %rd2459;
	add.s64 	%rd2463, %rd2374, %rd1857;
	add.s64 	%rd2464, %rd2463, %rd2457;
	add.s64 	%rd2465, %rd2464, %rd2462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7148,%dummy}, %rd2452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7149}, %rd2452;
	}
	shf.r.wrap.b32 	%r7150, %r7149, %r7148, 19;
	shf.r.wrap.b32 	%r7151, %r7148, %r7149, 19;
	mov.b64 	%rd2466, {%r7151, %r7150};
	shf.l.wrap.b32 	%r7152, %r7148, %r7149, 3;
	shf.l.wrap.b32 	%r7153, %r7149, %r7148, 3;
	mov.b64 	%rd2467, {%r7153, %r7152};
	shr.u64 	%rd2468, %rd2452, 6;
	xor.b64  	%rd2469, %rd2466, %rd2468;
	xor.b64  	%rd2470, %rd2469, %rd2467;
	shf.r.wrap.b32 	%r7154, %r7019, %r7018, 1;
	shf.r.wrap.b32 	%r7155, %r7018, %r7019, 1;
	mov.b64 	%rd2471, {%r7155, %r7154};
	shf.r.wrap.b32 	%r7156, %r7019, %r7018, 8;
	shf.r.wrap.b32 	%r7157, %r7018, %r7019, 8;
	mov.b64 	%rd2472, {%r7157, %r7156};
	shr.u64 	%rd2473, %rd1883, 7;
	xor.b64  	%rd2474, %rd2471, %rd2473;
	xor.b64  	%rd2475, %rd2474, %rd2472;
	add.s64 	%rd2476, %rd2387, %rd1870;
	add.s64 	%rd2477, %rd2476, %rd2470;
	add.s64 	%rd2478, %rd2477, %rd2475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7158,%dummy}, %rd2465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7159}, %rd2465;
	}
	shf.r.wrap.b32 	%r7160, %r7159, %r7158, 19;
	shf.r.wrap.b32 	%r7161, %r7158, %r7159, 19;
	mov.b64 	%rd2479, {%r7161, %r7160};
	shf.l.wrap.b32 	%r7162, %r7158, %r7159, 3;
	shf.l.wrap.b32 	%r7163, %r7159, %r7158, 3;
	mov.b64 	%rd2480, {%r7163, %r7162};
	shr.u64 	%rd2481, %rd2465, 6;
	xor.b64  	%rd2482, %rd2479, %rd2481;
	xor.b64  	%rd2483, %rd2482, %rd2480;
	shf.r.wrap.b32 	%r7164, %r7029, %r7028, 1;
	shf.r.wrap.b32 	%r7165, %r7028, %r7029, 1;
	mov.b64 	%rd2484, {%r7165, %r7164};
	shf.r.wrap.b32 	%r7166, %r7029, %r7028, 8;
	shf.r.wrap.b32 	%r7167, %r7028, %r7029, 8;
	mov.b64 	%rd2485, {%r7167, %r7166};
	shr.u64 	%rd2486, %rd1896, 7;
	xor.b64  	%rd2487, %rd2484, %rd2486;
	xor.b64  	%rd2488, %rd2487, %rd2485;
	add.s64 	%rd2489, %rd2400, %rd1883;
	add.s64 	%rd2490, %rd2489, %rd2483;
	add.s64 	%rd2491, %rd2490, %rd2488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7168,%dummy}, %rd2478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7169}, %rd2478;
	}
	shf.r.wrap.b32 	%r7170, %r7169, %r7168, 19;
	shf.r.wrap.b32 	%r7171, %r7168, %r7169, 19;
	mov.b64 	%rd2492, {%r7171, %r7170};
	shf.l.wrap.b32 	%r7172, %r7168, %r7169, 3;
	shf.l.wrap.b32 	%r7173, %r7169, %r7168, 3;
	mov.b64 	%rd2493, {%r7173, %r7172};
	shr.u64 	%rd2494, %rd2478, 6;
	xor.b64  	%rd2495, %rd2492, %rd2494;
	xor.b64  	%rd2496, %rd2495, %rd2493;
	shf.r.wrap.b32 	%r7174, %r7039, %r7038, 1;
	shf.r.wrap.b32 	%r7175, %r7038, %r7039, 1;
	mov.b64 	%rd2497, {%r7175, %r7174};
	shf.r.wrap.b32 	%r7176, %r7039, %r7038, 8;
	shf.r.wrap.b32 	%r7177, %r7038, %r7039, 8;
	mov.b64 	%rd2498, {%r7177, %r7176};
	shr.u64 	%rd2499, %rd2309, 7;
	xor.b64  	%rd2500, %rd2497, %rd2499;
	xor.b64  	%rd2501, %rd2500, %rd2498;
	add.s64 	%rd2502, %rd2413, %rd1896;
	add.s64 	%rd2503, %rd2502, %rd2496;
	add.s64 	%rd2504, %rd2503, %rd2501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7178,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7179}, %rd2285;
	}
	shf.r.wrap.b32 	%r7180, %r7179, %r7178, 14;
	shf.r.wrap.b32 	%r7181, %r7178, %r7179, 14;
	mov.b64 	%rd2505, {%r7181, %r7180};
	shf.r.wrap.b32 	%r7182, %r7179, %r7178, 18;
	shf.r.wrap.b32 	%r7183, %r7178, %r7179, 18;
	mov.b64 	%rd2506, {%r7183, %r7182};
	xor.b64  	%rd2507, %rd2506, %rd2505;
	shf.l.wrap.b32 	%r7184, %r7178, %r7179, 23;
	shf.l.wrap.b32 	%r7185, %r7179, %r7178, 23;
	mov.b64 	%rd2508, {%r7185, %r7184};
	xor.b64  	%rd2509, %rd2507, %rd2508;
	xor.b64  	%rd2510, %rd2260, %rd2235;
	and.b64  	%rd2511, %rd2510, %rd2285;
	xor.b64  	%rd2512, %rd2511, %rd2235;
	add.s64 	%rd2513, %rd2512, %rd2210;
	add.s64 	%rd2514, %rd2513, %rd2309;
	ld.const.u64 	%rd2515, [k_sha512+512];
	add.s64 	%rd2516, %rd2514, %rd2515;
	add.s64 	%rd2517, %rd2516, %rd2509;
	add.s64 	%rd2518, %rd2517, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd2296;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 28;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 28;
	mov.b64 	%rd2519, {%r7189, %r7188};
	shf.l.wrap.b32 	%r7190, %r7186, %r7187, 30;
	shf.l.wrap.b32 	%r7191, %r7187, %r7186, 30;
	mov.b64 	%rd2520, {%r7191, %r7190};
	xor.b64  	%rd2521, %rd2520, %rd2519;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 25;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 25;
	mov.b64 	%rd2522, {%r7193, %r7192};
	xor.b64  	%rd2523, %rd2521, %rd2522;
	xor.b64  	%rd2524, %rd2296, %rd2246;
	xor.b64  	%rd2525, %rd2296, %rd2271;
	and.b64  	%rd2526, %rd2525, %rd2524;
	xor.b64  	%rd2527, %rd2526, %rd2296;
	add.s64 	%rd2528, %rd2517, %rd2527;
	add.s64 	%rd2529, %rd2528, %rd2523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd2518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd2518;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 14;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 14;
	mov.b64 	%rd2530, {%r7197, %r7196};
	shf.r.wrap.b32 	%r7198, %r7195, %r7194, 18;
	shf.r.wrap.b32 	%r7199, %r7194, %r7195, 18;
	mov.b64 	%rd2531, {%r7199, %r7198};
	xor.b64  	%rd2532, %rd2531, %rd2530;
	shf.l.wrap.b32 	%r7200, %r7194, %r7195, 23;
	shf.l.wrap.b32 	%r7201, %r7195, %r7194, 23;
	mov.b64 	%rd2533, {%r7201, %r7200};
	xor.b64  	%rd2534, %rd2532, %rd2533;
	xor.b64  	%rd2535, %rd2285, %rd2260;
	and.b64  	%rd2536, %rd2518, %rd2535;
	xor.b64  	%rd2537, %rd2536, %rd2260;
	add.s64 	%rd2538, %rd2322, %rd2235;
	ld.const.u64 	%rd2539, [k_sha512+520];
	add.s64 	%rd2540, %rd2538, %rd2539;
	add.s64 	%rd2541, %rd2540, %rd2537;
	add.s64 	%rd2542, %rd2541, %rd2534;
	add.s64 	%rd2543, %rd2542, %rd2246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7202,%dummy}, %rd2529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7203}, %rd2529;
	}
	shf.r.wrap.b32 	%r7204, %r7203, %r7202, 28;
	shf.r.wrap.b32 	%r7205, %r7202, %r7203, 28;
	mov.b64 	%rd2544, {%r7205, %r7204};
	shf.l.wrap.b32 	%r7206, %r7202, %r7203, 30;
	shf.l.wrap.b32 	%r7207, %r7203, %r7202, 30;
	mov.b64 	%rd2545, {%r7207, %r7206};
	xor.b64  	%rd2546, %rd2545, %rd2544;
	shf.l.wrap.b32 	%r7208, %r7202, %r7203, 25;
	shf.l.wrap.b32 	%r7209, %r7203, %r7202, 25;
	mov.b64 	%rd2547, {%r7209, %r7208};
	xor.b64  	%rd2548, %rd2546, %rd2547;
	xor.b64  	%rd2549, %rd2529, %rd2271;
	xor.b64  	%rd2550, %rd2529, %rd2296;
	and.b64  	%rd2551, %rd2550, %rd2549;
	xor.b64  	%rd2552, %rd2551, %rd2529;
	add.s64 	%rd2553, %rd2542, %rd2552;
	add.s64 	%rd2554, %rd2553, %rd2548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7210,%dummy}, %rd2543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7211}, %rd2543;
	}
	shf.r.wrap.b32 	%r7212, %r7211, %r7210, 14;
	shf.r.wrap.b32 	%r7213, %r7210, %r7211, 14;
	mov.b64 	%rd2555, {%r7213, %r7212};
	shf.r.wrap.b32 	%r7214, %r7211, %r7210, 18;
	shf.r.wrap.b32 	%r7215, %r7210, %r7211, 18;
	mov.b64 	%rd2556, {%r7215, %r7214};
	xor.b64  	%rd2557, %rd2556, %rd2555;
	shf.l.wrap.b32 	%r7216, %r7210, %r7211, 23;
	shf.l.wrap.b32 	%r7217, %r7211, %r7210, 23;
	mov.b64 	%rd2558, {%r7217, %r7216};
	xor.b64  	%rd2559, %rd2557, %rd2558;
	xor.b64  	%rd2560, %rd2518, %rd2285;
	and.b64  	%rd2561, %rd2543, %rd2560;
	xor.b64  	%rd2562, %rd2561, %rd2285;
	add.s64 	%rd2563, %rd2335, %rd2260;
	ld.const.u64 	%rd2564, [k_sha512+528];
	add.s64 	%rd2565, %rd2563, %rd2564;
	add.s64 	%rd2566, %rd2565, %rd2562;
	add.s64 	%rd2567, %rd2566, %rd2559;
	add.s64 	%rd2568, %rd2567, %rd2271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7218,%dummy}, %rd2554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7219}, %rd2554;
	}
	shf.r.wrap.b32 	%r7220, %r7219, %r7218, 28;
	shf.r.wrap.b32 	%r7221, %r7218, %r7219, 28;
	mov.b64 	%rd2569, {%r7221, %r7220};
	shf.l.wrap.b32 	%r7222, %r7218, %r7219, 30;
	shf.l.wrap.b32 	%r7223, %r7219, %r7218, 30;
	mov.b64 	%rd2570, {%r7223, %r7222};
	xor.b64  	%rd2571, %rd2570, %rd2569;
	shf.l.wrap.b32 	%r7224, %r7218, %r7219, 25;
	shf.l.wrap.b32 	%r7225, %r7219, %r7218, 25;
	mov.b64 	%rd2572, {%r7225, %r7224};
	xor.b64  	%rd2573, %rd2571, %rd2572;
	xor.b64  	%rd2574, %rd2554, %rd2296;
	xor.b64  	%rd2575, %rd2554, %rd2529;
	and.b64  	%rd2576, %rd2575, %rd2574;
	xor.b64  	%rd2577, %rd2576, %rd2554;
	add.s64 	%rd2578, %rd2567, %rd2577;
	add.s64 	%rd2579, %rd2578, %rd2573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7226,%dummy}, %rd2568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7227}, %rd2568;
	}
	shf.r.wrap.b32 	%r7228, %r7227, %r7226, 14;
	shf.r.wrap.b32 	%r7229, %r7226, %r7227, 14;
	mov.b64 	%rd2580, {%r7229, %r7228};
	shf.r.wrap.b32 	%r7230, %r7227, %r7226, 18;
	shf.r.wrap.b32 	%r7231, %r7226, %r7227, 18;
	mov.b64 	%rd2581, {%r7231, %r7230};
	xor.b64  	%rd2582, %rd2581, %rd2580;
	shf.l.wrap.b32 	%r7232, %r7226, %r7227, 23;
	shf.l.wrap.b32 	%r7233, %r7227, %r7226, 23;
	mov.b64 	%rd2583, {%r7233, %r7232};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	xor.b64  	%rd2585, %rd2543, %rd2518;
	and.b64  	%rd2586, %rd2568, %rd2585;
	xor.b64  	%rd2587, %rd2586, %rd2518;
	add.s64 	%rd2588, %rd2348, %rd2285;
	ld.const.u64 	%rd2589, [k_sha512+536];
	add.s64 	%rd2590, %rd2588, %rd2589;
	add.s64 	%rd2591, %rd2590, %rd2587;
	add.s64 	%rd2592, %rd2591, %rd2584;
	add.s64 	%rd2593, %rd2592, %rd2296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7234,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7235}, %rd2579;
	}
	shf.r.wrap.b32 	%r7236, %r7235, %r7234, 28;
	shf.r.wrap.b32 	%r7237, %r7234, %r7235, 28;
	mov.b64 	%rd2594, {%r7237, %r7236};
	shf.l.wrap.b32 	%r7238, %r7234, %r7235, 30;
	shf.l.wrap.b32 	%r7239, %r7235, %r7234, 30;
	mov.b64 	%rd2595, {%r7239, %r7238};
	xor.b64  	%rd2596, %rd2595, %rd2594;
	shf.l.wrap.b32 	%r7240, %r7234, %r7235, 25;
	shf.l.wrap.b32 	%r7241, %r7235, %r7234, 25;
	mov.b64 	%rd2597, {%r7241, %r7240};
	xor.b64  	%rd2598, %rd2596, %rd2597;
	xor.b64  	%rd2599, %rd2579, %rd2529;
	xor.b64  	%rd2600, %rd2579, %rd2554;
	and.b64  	%rd2601, %rd2600, %rd2599;
	xor.b64  	%rd2602, %rd2601, %rd2579;
	add.s64 	%rd2603, %rd2592, %rd2602;
	add.s64 	%rd2604, %rd2603, %rd2598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7242,%dummy}, %rd2593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7243}, %rd2593;
	}
	shf.r.wrap.b32 	%r7244, %r7243, %r7242, 14;
	shf.r.wrap.b32 	%r7245, %r7242, %r7243, 14;
	mov.b64 	%rd2605, {%r7245, %r7244};
	shf.r.wrap.b32 	%r7246, %r7243, %r7242, 18;
	shf.r.wrap.b32 	%r7247, %r7242, %r7243, 18;
	mov.b64 	%rd2606, {%r7247, %r7246};
	xor.b64  	%rd2607, %rd2606, %rd2605;
	shf.l.wrap.b32 	%r7248, %r7242, %r7243, 23;
	shf.l.wrap.b32 	%r7249, %r7243, %r7242, 23;
	mov.b64 	%rd2608, {%r7249, %r7248};
	xor.b64  	%rd2609, %rd2607, %rd2608;
	xor.b64  	%rd2610, %rd2568, %rd2543;
	and.b64  	%rd2611, %rd2593, %rd2610;
	xor.b64  	%rd2612, %rd2611, %rd2543;
	add.s64 	%rd2613, %rd2518, %rd2361;
	ld.const.u64 	%rd2614, [k_sha512+544];
	add.s64 	%rd2615, %rd2613, %rd2614;
	add.s64 	%rd2616, %rd2615, %rd2612;
	add.s64 	%rd2617, %rd2616, %rd2609;
	add.s64 	%rd2618, %rd2617, %rd2529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7250,%dummy}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7251}, %rd2604;
	}
	shf.r.wrap.b32 	%r7252, %r7251, %r7250, 28;
	shf.r.wrap.b32 	%r7253, %r7250, %r7251, 28;
	mov.b64 	%rd2619, {%r7253, %r7252};
	shf.l.wrap.b32 	%r7254, %r7250, %r7251, 30;
	shf.l.wrap.b32 	%r7255, %r7251, %r7250, 30;
	mov.b64 	%rd2620, {%r7255, %r7254};
	xor.b64  	%rd2621, %rd2620, %rd2619;
	shf.l.wrap.b32 	%r7256, %r7250, %r7251, 25;
	shf.l.wrap.b32 	%r7257, %r7251, %r7250, 25;
	mov.b64 	%rd2622, {%r7257, %r7256};
	xor.b64  	%rd2623, %rd2621, %rd2622;
	xor.b64  	%rd2624, %rd2604, %rd2554;
	xor.b64  	%rd2625, %rd2604, %rd2579;
	and.b64  	%rd2626, %rd2625, %rd2624;
	xor.b64  	%rd2627, %rd2626, %rd2604;
	add.s64 	%rd2628, %rd2617, %rd2627;
	add.s64 	%rd2629, %rd2628, %rd2623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7258,%dummy}, %rd2618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7259}, %rd2618;
	}
	shf.r.wrap.b32 	%r7260, %r7259, %r7258, 14;
	shf.r.wrap.b32 	%r7261, %r7258, %r7259, 14;
	mov.b64 	%rd2630, {%r7261, %r7260};
	shf.r.wrap.b32 	%r7262, %r7259, %r7258, 18;
	shf.r.wrap.b32 	%r7263, %r7258, %r7259, 18;
	mov.b64 	%rd2631, {%r7263, %r7262};
	xor.b64  	%rd2632, %rd2631, %rd2630;
	shf.l.wrap.b32 	%r7264, %r7258, %r7259, 23;
	shf.l.wrap.b32 	%r7265, %r7259, %r7258, 23;
	mov.b64 	%rd2633, {%r7265, %r7264};
	xor.b64  	%rd2634, %rd2632, %rd2633;
	xor.b64  	%rd2635, %rd2593, %rd2568;
	and.b64  	%rd2636, %rd2618, %rd2635;
	xor.b64  	%rd2637, %rd2636, %rd2568;
	add.s64 	%rd2638, %rd2543, %rd2374;
	ld.const.u64 	%rd2639, [k_sha512+552];
	add.s64 	%rd2640, %rd2638, %rd2639;
	add.s64 	%rd2641, %rd2640, %rd2637;
	add.s64 	%rd2642, %rd2641, %rd2634;
	add.s64 	%rd2643, %rd2642, %rd2554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7266,%dummy}, %rd2629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7267}, %rd2629;
	}
	shf.r.wrap.b32 	%r7268, %r7267, %r7266, 28;
	shf.r.wrap.b32 	%r7269, %r7266, %r7267, 28;
	mov.b64 	%rd2644, {%r7269, %r7268};
	shf.l.wrap.b32 	%r7270, %r7266, %r7267, 30;
	shf.l.wrap.b32 	%r7271, %r7267, %r7266, 30;
	mov.b64 	%rd2645, {%r7271, %r7270};
	xor.b64  	%rd2646, %rd2645, %rd2644;
	shf.l.wrap.b32 	%r7272, %r7266, %r7267, 25;
	shf.l.wrap.b32 	%r7273, %r7267, %r7266, 25;
	mov.b64 	%rd2647, {%r7273, %r7272};
	xor.b64  	%rd2648, %rd2646, %rd2647;
	xor.b64  	%rd2649, %rd2629, %rd2579;
	xor.b64  	%rd2650, %rd2629, %rd2604;
	and.b64  	%rd2651, %rd2650, %rd2649;
	xor.b64  	%rd2652, %rd2651, %rd2629;
	add.s64 	%rd2653, %rd2642, %rd2652;
	add.s64 	%rd2654, %rd2653, %rd2648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7274,%dummy}, %rd2643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7275}, %rd2643;
	}
	shf.r.wrap.b32 	%r7276, %r7275, %r7274, 14;
	shf.r.wrap.b32 	%r7277, %r7274, %r7275, 14;
	mov.b64 	%rd2655, {%r7277, %r7276};
	shf.r.wrap.b32 	%r7278, %r7275, %r7274, 18;
	shf.r.wrap.b32 	%r7279, %r7274, %r7275, 18;
	mov.b64 	%rd2656, {%r7279, %r7278};
	xor.b64  	%rd2657, %rd2656, %rd2655;
	shf.l.wrap.b32 	%r7280, %r7274, %r7275, 23;
	shf.l.wrap.b32 	%r7281, %r7275, %r7274, 23;
	mov.b64 	%rd2658, {%r7281, %r7280};
	xor.b64  	%rd2659, %rd2657, %rd2658;
	xor.b64  	%rd2660, %rd2618, %rd2593;
	and.b64  	%rd2661, %rd2643, %rd2660;
	xor.b64  	%rd2662, %rd2661, %rd2593;
	add.s64 	%rd2663, %rd2568, %rd2387;
	ld.const.u64 	%rd2664, [k_sha512+560];
	add.s64 	%rd2665, %rd2663, %rd2664;
	add.s64 	%rd2666, %rd2665, %rd2662;
	add.s64 	%rd2667, %rd2666, %rd2659;
	add.s64 	%rd2668, %rd2667, %rd2579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7282,%dummy}, %rd2654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7283}, %rd2654;
	}
	shf.r.wrap.b32 	%r7284, %r7283, %r7282, 28;
	shf.r.wrap.b32 	%r7285, %r7282, %r7283, 28;
	mov.b64 	%rd2669, {%r7285, %r7284};
	shf.l.wrap.b32 	%r7286, %r7282, %r7283, 30;
	shf.l.wrap.b32 	%r7287, %r7283, %r7282, 30;
	mov.b64 	%rd2670, {%r7287, %r7286};
	xor.b64  	%rd2671, %rd2670, %rd2669;
	shf.l.wrap.b32 	%r7288, %r7282, %r7283, 25;
	shf.l.wrap.b32 	%r7289, %r7283, %r7282, 25;
	mov.b64 	%rd2672, {%r7289, %r7288};
	xor.b64  	%rd2673, %rd2671, %rd2672;
	xor.b64  	%rd2674, %rd2654, %rd2604;
	xor.b64  	%rd2675, %rd2654, %rd2629;
	and.b64  	%rd2676, %rd2675, %rd2674;
	xor.b64  	%rd2677, %rd2676, %rd2654;
	add.s64 	%rd2678, %rd2667, %rd2677;
	add.s64 	%rd2679, %rd2678, %rd2673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7290,%dummy}, %rd2668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7291}, %rd2668;
	}
	shf.r.wrap.b32 	%r7292, %r7291, %r7290, 14;
	shf.r.wrap.b32 	%r7293, %r7290, %r7291, 14;
	mov.b64 	%rd2680, {%r7293, %r7292};
	shf.r.wrap.b32 	%r7294, %r7291, %r7290, 18;
	shf.r.wrap.b32 	%r7295, %r7290, %r7291, 18;
	mov.b64 	%rd2681, {%r7295, %r7294};
	xor.b64  	%rd2682, %rd2681, %rd2680;
	shf.l.wrap.b32 	%r7296, %r7290, %r7291, 23;
	shf.l.wrap.b32 	%r7297, %r7291, %r7290, 23;
	mov.b64 	%rd2683, {%r7297, %r7296};
	xor.b64  	%rd2684, %rd2682, %rd2683;
	xor.b64  	%rd2685, %rd2643, %rd2618;
	and.b64  	%rd2686, %rd2668, %rd2685;
	xor.b64  	%rd2687, %rd2686, %rd2618;
	add.s64 	%rd2688, %rd2593, %rd2400;
	ld.const.u64 	%rd2689, [k_sha512+568];
	add.s64 	%rd2690, %rd2688, %rd2689;
	add.s64 	%rd2691, %rd2690, %rd2687;
	add.s64 	%rd2692, %rd2691, %rd2684;
	add.s64 	%rd2693, %rd2692, %rd2604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7298,%dummy}, %rd2679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7299}, %rd2679;
	}
	shf.r.wrap.b32 	%r7300, %r7299, %r7298, 28;
	shf.r.wrap.b32 	%r7301, %r7298, %r7299, 28;
	mov.b64 	%rd2694, {%r7301, %r7300};
	shf.l.wrap.b32 	%r7302, %r7298, %r7299, 30;
	shf.l.wrap.b32 	%r7303, %r7299, %r7298, 30;
	mov.b64 	%rd2695, {%r7303, %r7302};
	xor.b64  	%rd2696, %rd2695, %rd2694;
	shf.l.wrap.b32 	%r7304, %r7298, %r7299, 25;
	shf.l.wrap.b32 	%r7305, %r7299, %r7298, 25;
	mov.b64 	%rd2697, {%r7305, %r7304};
	xor.b64  	%rd2698, %rd2696, %rd2697;
	xor.b64  	%rd2699, %rd2679, %rd2629;
	xor.b64  	%rd2700, %rd2679, %rd2654;
	and.b64  	%rd2701, %rd2700, %rd2699;
	xor.b64  	%rd2702, %rd2701, %rd2679;
	add.s64 	%rd2703, %rd2692, %rd2702;
	add.s64 	%rd2704, %rd2703, %rd2698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7306,%dummy}, %rd2693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7307}, %rd2693;
	}
	shf.r.wrap.b32 	%r7308, %r7307, %r7306, 14;
	shf.r.wrap.b32 	%r7309, %r7306, %r7307, 14;
	mov.b64 	%rd2705, {%r7309, %r7308};
	shf.r.wrap.b32 	%r7310, %r7307, %r7306, 18;
	shf.r.wrap.b32 	%r7311, %r7306, %r7307, 18;
	mov.b64 	%rd2706, {%r7311, %r7310};
	xor.b64  	%rd2707, %rd2706, %rd2705;
	shf.l.wrap.b32 	%r7312, %r7306, %r7307, 23;
	shf.l.wrap.b32 	%r7313, %r7307, %r7306, 23;
	mov.b64 	%rd2708, {%r7313, %r7312};
	xor.b64  	%rd2709, %rd2707, %rd2708;
	xor.b64  	%rd2710, %rd2668, %rd2643;
	and.b64  	%rd2711, %rd2693, %rd2710;
	xor.b64  	%rd2712, %rd2711, %rd2643;
	add.s64 	%rd2713, %rd2618, %rd2413;
	ld.const.u64 	%rd2714, [k_sha512+576];
	add.s64 	%rd2715, %rd2713, %rd2714;
	add.s64 	%rd2716, %rd2715, %rd2712;
	add.s64 	%rd2717, %rd2716, %rd2709;
	add.s64 	%rd2718, %rd2717, %rd2629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd2704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7315}, %rd2704;
	}
	shf.r.wrap.b32 	%r7316, %r7315, %r7314, 28;
	shf.r.wrap.b32 	%r7317, %r7314, %r7315, 28;
	mov.b64 	%rd2719, {%r7317, %r7316};
	shf.l.wrap.b32 	%r7318, %r7314, %r7315, 30;
	shf.l.wrap.b32 	%r7319, %r7315, %r7314, 30;
	mov.b64 	%rd2720, {%r7319, %r7318};
	xor.b64  	%rd2721, %rd2720, %rd2719;
	shf.l.wrap.b32 	%r7320, %r7314, %r7315, 25;
	shf.l.wrap.b32 	%r7321, %r7315, %r7314, 25;
	mov.b64 	%rd2722, {%r7321, %r7320};
	xor.b64  	%rd2723, %rd2721, %rd2722;
	xor.b64  	%rd2724, %rd2704, %rd2654;
	xor.b64  	%rd2725, %rd2704, %rd2679;
	and.b64  	%rd2726, %rd2725, %rd2724;
	xor.b64  	%rd2727, %rd2726, %rd2704;
	add.s64 	%rd2728, %rd2717, %rd2727;
	add.s64 	%rd2729, %rd2728, %rd2723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd2718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd2718;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 14;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 14;
	mov.b64 	%rd2730, {%r7325, %r7324};
	shf.r.wrap.b32 	%r7326, %r7323, %r7322, 18;
	shf.r.wrap.b32 	%r7327, %r7322, %r7323, 18;
	mov.b64 	%rd2731, {%r7327, %r7326};
	xor.b64  	%rd2732, %rd2731, %rd2730;
	shf.l.wrap.b32 	%r7328, %r7322, %r7323, 23;
	shf.l.wrap.b32 	%r7329, %r7323, %r7322, 23;
	mov.b64 	%rd2733, {%r7329, %r7328};
	xor.b64  	%rd2734, %rd2732, %rd2733;
	xor.b64  	%rd2735, %rd2693, %rd2668;
	and.b64  	%rd2736, %rd2718, %rd2735;
	xor.b64  	%rd2737, %rd2736, %rd2668;
	add.s64 	%rd2738, %rd2643, %rd2426;
	ld.const.u64 	%rd2739, [k_sha512+584];
	add.s64 	%rd2740, %rd2738, %rd2739;
	add.s64 	%rd2741, %rd2740, %rd2737;
	add.s64 	%rd2742, %rd2741, %rd2734;
	add.s64 	%rd2743, %rd2742, %rd2654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd2729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7331}, %rd2729;
	}
	shf.r.wrap.b32 	%r7332, %r7331, %r7330, 28;
	shf.r.wrap.b32 	%r7333, %r7330, %r7331, 28;
	mov.b64 	%rd2744, {%r7333, %r7332};
	shf.l.wrap.b32 	%r7334, %r7330, %r7331, 30;
	shf.l.wrap.b32 	%r7335, %r7331, %r7330, 30;
	mov.b64 	%rd2745, {%r7335, %r7334};
	xor.b64  	%rd2746, %rd2745, %rd2744;
	shf.l.wrap.b32 	%r7336, %r7330, %r7331, 25;
	shf.l.wrap.b32 	%r7337, %r7331, %r7330, 25;
	mov.b64 	%rd2747, {%r7337, %r7336};
	xor.b64  	%rd2748, %rd2746, %rd2747;
	xor.b64  	%rd2749, %rd2729, %rd2679;
	xor.b64  	%rd2750, %rd2729, %rd2704;
	and.b64  	%rd2751, %rd2750, %rd2749;
	xor.b64  	%rd2752, %rd2751, %rd2729;
	add.s64 	%rd2753, %rd2742, %rd2752;
	add.s64 	%rd2754, %rd2753, %rd2748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7338,%dummy}, %rd2743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7339}, %rd2743;
	}
	shf.r.wrap.b32 	%r7340, %r7339, %r7338, 14;
	shf.r.wrap.b32 	%r7341, %r7338, %r7339, 14;
	mov.b64 	%rd2755, {%r7341, %r7340};
	shf.r.wrap.b32 	%r7342, %r7339, %r7338, 18;
	shf.r.wrap.b32 	%r7343, %r7338, %r7339, 18;
	mov.b64 	%rd2756, {%r7343, %r7342};
	xor.b64  	%rd2757, %rd2756, %rd2755;
	shf.l.wrap.b32 	%r7344, %r7338, %r7339, 23;
	shf.l.wrap.b32 	%r7345, %r7339, %r7338, 23;
	mov.b64 	%rd2758, {%r7345, %r7344};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	xor.b64  	%rd2760, %rd2718, %rd2693;
	and.b64  	%rd2761, %rd2743, %rd2760;
	xor.b64  	%rd2762, %rd2761, %rd2693;
	add.s64 	%rd2763, %rd2668, %rd2439;
	ld.const.u64 	%rd2764, [k_sha512+592];
	add.s64 	%rd2765, %rd2763, %rd2764;
	add.s64 	%rd2766, %rd2765, %rd2762;
	add.s64 	%rd2767, %rd2766, %rd2759;
	add.s64 	%rd2768, %rd2767, %rd2679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7346,%dummy}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7347}, %rd2754;
	}
	shf.r.wrap.b32 	%r7348, %r7347, %r7346, 28;
	shf.r.wrap.b32 	%r7349, %r7346, %r7347, 28;
	mov.b64 	%rd2769, {%r7349, %r7348};
	shf.l.wrap.b32 	%r7350, %r7346, %r7347, 30;
	shf.l.wrap.b32 	%r7351, %r7347, %r7346, 30;
	mov.b64 	%rd2770, {%r7351, %r7350};
	xor.b64  	%rd2771, %rd2770, %rd2769;
	shf.l.wrap.b32 	%r7352, %r7346, %r7347, 25;
	shf.l.wrap.b32 	%r7353, %r7347, %r7346, 25;
	mov.b64 	%rd2772, {%r7353, %r7352};
	xor.b64  	%rd2773, %rd2771, %rd2772;
	xor.b64  	%rd2774, %rd2754, %rd2704;
	xor.b64  	%rd2775, %rd2754, %rd2729;
	and.b64  	%rd2776, %rd2775, %rd2774;
	xor.b64  	%rd2777, %rd2776, %rd2754;
	add.s64 	%rd2778, %rd2767, %rd2777;
	add.s64 	%rd2779, %rd2778, %rd2773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd2768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7355}, %rd2768;
	}
	shf.r.wrap.b32 	%r7356, %r7355, %r7354, 14;
	shf.r.wrap.b32 	%r7357, %r7354, %r7355, 14;
	mov.b64 	%rd2780, {%r7357, %r7356};
	shf.r.wrap.b32 	%r7358, %r7355, %r7354, 18;
	shf.r.wrap.b32 	%r7359, %r7354, %r7355, 18;
	mov.b64 	%rd2781, {%r7359, %r7358};
	xor.b64  	%rd2782, %rd2781, %rd2780;
	shf.l.wrap.b32 	%r7360, %r7354, %r7355, 23;
	shf.l.wrap.b32 	%r7361, %r7355, %r7354, 23;
	mov.b64 	%rd2783, {%r7361, %r7360};
	xor.b64  	%rd2784, %rd2782, %rd2783;
	xor.b64  	%rd2785, %rd2743, %rd2718;
	and.b64  	%rd2786, %rd2768, %rd2785;
	xor.b64  	%rd2787, %rd2786, %rd2718;
	add.s64 	%rd2788, %rd2693, %rd2452;
	ld.const.u64 	%rd2789, [k_sha512+600];
	add.s64 	%rd2790, %rd2788, %rd2789;
	add.s64 	%rd2791, %rd2790, %rd2787;
	add.s64 	%rd2792, %rd2791, %rd2784;
	add.s64 	%rd2793, %rd2792, %rd2704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7362,%dummy}, %rd2779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7363}, %rd2779;
	}
	shf.r.wrap.b32 	%r7364, %r7363, %r7362, 28;
	shf.r.wrap.b32 	%r7365, %r7362, %r7363, 28;
	mov.b64 	%rd2794, {%r7365, %r7364};
	shf.l.wrap.b32 	%r7366, %r7362, %r7363, 30;
	shf.l.wrap.b32 	%r7367, %r7363, %r7362, 30;
	mov.b64 	%rd2795, {%r7367, %r7366};
	xor.b64  	%rd2796, %rd2795, %rd2794;
	shf.l.wrap.b32 	%r7368, %r7362, %r7363, 25;
	shf.l.wrap.b32 	%r7369, %r7363, %r7362, 25;
	mov.b64 	%rd2797, {%r7369, %r7368};
	xor.b64  	%rd2798, %rd2796, %rd2797;
	xor.b64  	%rd2799, %rd2779, %rd2729;
	xor.b64  	%rd2800, %rd2779, %rd2754;
	and.b64  	%rd2801, %rd2800, %rd2799;
	xor.b64  	%rd2802, %rd2801, %rd2779;
	add.s64 	%rd2803, %rd2792, %rd2802;
	add.s64 	%rd2804, %rd2803, %rd2798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7370,%dummy}, %rd2793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7371}, %rd2793;
	}
	shf.r.wrap.b32 	%r7372, %r7371, %r7370, 14;
	shf.r.wrap.b32 	%r7373, %r7370, %r7371, 14;
	mov.b64 	%rd2805, {%r7373, %r7372};
	shf.r.wrap.b32 	%r7374, %r7371, %r7370, 18;
	shf.r.wrap.b32 	%r7375, %r7370, %r7371, 18;
	mov.b64 	%rd2806, {%r7375, %r7374};
	xor.b64  	%rd2807, %rd2806, %rd2805;
	shf.l.wrap.b32 	%r7376, %r7370, %r7371, 23;
	shf.l.wrap.b32 	%r7377, %r7371, %r7370, 23;
	mov.b64 	%rd2808, {%r7377, %r7376};
	xor.b64  	%rd2809, %rd2807, %rd2808;
	xor.b64  	%rd2810, %rd2768, %rd2743;
	and.b64  	%rd2811, %rd2793, %rd2810;
	xor.b64  	%rd2812, %rd2811, %rd2743;
	add.s64 	%rd2813, %rd2718, %rd2465;
	ld.const.u64 	%rd2814, [k_sha512+608];
	add.s64 	%rd2815, %rd2813, %rd2814;
	add.s64 	%rd2816, %rd2815, %rd2812;
	add.s64 	%rd2817, %rd2816, %rd2809;
	add.s64 	%rd2818, %rd2817, %rd2729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7378,%dummy}, %rd2804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7379}, %rd2804;
	}
	shf.r.wrap.b32 	%r7380, %r7379, %r7378, 28;
	shf.r.wrap.b32 	%r7381, %r7378, %r7379, 28;
	mov.b64 	%rd2819, {%r7381, %r7380};
	shf.l.wrap.b32 	%r7382, %r7378, %r7379, 30;
	shf.l.wrap.b32 	%r7383, %r7379, %r7378, 30;
	mov.b64 	%rd2820, {%r7383, %r7382};
	xor.b64  	%rd2821, %rd2820, %rd2819;
	shf.l.wrap.b32 	%r7384, %r7378, %r7379, 25;
	shf.l.wrap.b32 	%r7385, %r7379, %r7378, 25;
	mov.b64 	%rd2822, {%r7385, %r7384};
	xor.b64  	%rd2823, %rd2821, %rd2822;
	xor.b64  	%rd2824, %rd2804, %rd2754;
	xor.b64  	%rd2825, %rd2804, %rd2779;
	and.b64  	%rd2826, %rd2825, %rd2824;
	xor.b64  	%rd2827, %rd2826, %rd2804;
	add.s64 	%rd2828, %rd2817, %rd2827;
	add.s64 	%rd2829, %rd2828, %rd2823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7386,%dummy}, %rd2818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7387}, %rd2818;
	}
	shf.r.wrap.b32 	%r7388, %r7387, %r7386, 14;
	shf.r.wrap.b32 	%r7389, %r7386, %r7387, 14;
	mov.b64 	%rd2830, {%r7389, %r7388};
	shf.r.wrap.b32 	%r7390, %r7387, %r7386, 18;
	shf.r.wrap.b32 	%r7391, %r7386, %r7387, 18;
	mov.b64 	%rd2831, {%r7391, %r7390};
	xor.b64  	%rd2832, %rd2831, %rd2830;
	shf.l.wrap.b32 	%r7392, %r7386, %r7387, 23;
	shf.l.wrap.b32 	%r7393, %r7387, %r7386, 23;
	mov.b64 	%rd2833, {%r7393, %r7392};
	xor.b64  	%rd2834, %rd2832, %rd2833;
	xor.b64  	%rd2835, %rd2793, %rd2768;
	and.b64  	%rd2836, %rd2818, %rd2835;
	xor.b64  	%rd2837, %rd2836, %rd2768;
	add.s64 	%rd2838, %rd2743, %rd2478;
	ld.const.u64 	%rd2839, [k_sha512+616];
	add.s64 	%rd2840, %rd2838, %rd2839;
	add.s64 	%rd2841, %rd2840, %rd2837;
	add.s64 	%rd2842, %rd2841, %rd2834;
	add.s64 	%rd2843, %rd2842, %rd2754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd2829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7395}, %rd2829;
	}
	shf.r.wrap.b32 	%r7396, %r7395, %r7394, 28;
	shf.r.wrap.b32 	%r7397, %r7394, %r7395, 28;
	mov.b64 	%rd2844, {%r7397, %r7396};
	shf.l.wrap.b32 	%r7398, %r7394, %r7395, 30;
	shf.l.wrap.b32 	%r7399, %r7395, %r7394, 30;
	mov.b64 	%rd2845, {%r7399, %r7398};
	xor.b64  	%rd2846, %rd2845, %rd2844;
	shf.l.wrap.b32 	%r7400, %r7394, %r7395, 25;
	shf.l.wrap.b32 	%r7401, %r7395, %r7394, 25;
	mov.b64 	%rd2847, {%r7401, %r7400};
	xor.b64  	%rd2848, %rd2846, %rd2847;
	xor.b64  	%rd2849, %rd2829, %rd2779;
	xor.b64  	%rd2850, %rd2829, %rd2804;
	and.b64  	%rd2851, %rd2850, %rd2849;
	xor.b64  	%rd2852, %rd2851, %rd2829;
	add.s64 	%rd2853, %rd2842, %rd2852;
	add.s64 	%rd2854, %rd2853, %rd2848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7402,%dummy}, %rd2843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7403}, %rd2843;
	}
	shf.r.wrap.b32 	%r7404, %r7403, %r7402, 14;
	shf.r.wrap.b32 	%r7405, %r7402, %r7403, 14;
	mov.b64 	%rd2855, {%r7405, %r7404};
	shf.r.wrap.b32 	%r7406, %r7403, %r7402, 18;
	shf.r.wrap.b32 	%r7407, %r7402, %r7403, 18;
	mov.b64 	%rd2856, {%r7407, %r7406};
	xor.b64  	%rd2857, %rd2856, %rd2855;
	shf.l.wrap.b32 	%r7408, %r7402, %r7403, 23;
	shf.l.wrap.b32 	%r7409, %r7403, %r7402, 23;
	mov.b64 	%rd2858, {%r7409, %r7408};
	xor.b64  	%rd2859, %rd2857, %rd2858;
	xor.b64  	%rd2860, %rd2818, %rd2793;
	and.b64  	%rd2861, %rd2843, %rd2860;
	xor.b64  	%rd2862, %rd2861, %rd2793;
	add.s64 	%rd2863, %rd2768, %rd2491;
	ld.const.u64 	%rd2864, [k_sha512+624];
	add.s64 	%rd2865, %rd2863, %rd2864;
	add.s64 	%rd2866, %rd2865, %rd2862;
	add.s64 	%rd2867, %rd2866, %rd2859;
	add.s64 	%rd2868, %rd2867, %rd2779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7410,%dummy}, %rd2854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7411}, %rd2854;
	}
	shf.r.wrap.b32 	%r7412, %r7411, %r7410, 28;
	shf.r.wrap.b32 	%r7413, %r7410, %r7411, 28;
	mov.b64 	%rd2869, {%r7413, %r7412};
	shf.l.wrap.b32 	%r7414, %r7410, %r7411, 30;
	shf.l.wrap.b32 	%r7415, %r7411, %r7410, 30;
	mov.b64 	%rd2870, {%r7415, %r7414};
	xor.b64  	%rd2871, %rd2870, %rd2869;
	shf.l.wrap.b32 	%r7416, %r7410, %r7411, 25;
	shf.l.wrap.b32 	%r7417, %r7411, %r7410, 25;
	mov.b64 	%rd2872, {%r7417, %r7416};
	xor.b64  	%rd2873, %rd2871, %rd2872;
	xor.b64  	%rd2874, %rd2854, %rd2804;
	xor.b64  	%rd2875, %rd2854, %rd2829;
	and.b64  	%rd2876, %rd2875, %rd2874;
	xor.b64  	%rd2877, %rd2876, %rd2854;
	add.s64 	%rd2878, %rd2867, %rd2877;
	add.s64 	%rd2879, %rd2878, %rd2873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7418,%dummy}, %rd2868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7419}, %rd2868;
	}
	shf.r.wrap.b32 	%r7420, %r7419, %r7418, 14;
	shf.r.wrap.b32 	%r7421, %r7418, %r7419, 14;
	mov.b64 	%rd2880, {%r7421, %r7420};
	shf.r.wrap.b32 	%r7422, %r7419, %r7418, 18;
	shf.r.wrap.b32 	%r7423, %r7418, %r7419, 18;
	mov.b64 	%rd2881, {%r7423, %r7422};
	xor.b64  	%rd2882, %rd2881, %rd2880;
	shf.l.wrap.b32 	%r7424, %r7418, %r7419, 23;
	shf.l.wrap.b32 	%r7425, %r7419, %r7418, 23;
	mov.b64 	%rd2883, {%r7425, %r7424};
	xor.b64  	%rd2884, %rd2882, %rd2883;
	xor.b64  	%rd2885, %rd2843, %rd2818;
	and.b64  	%rd2886, %rd2868, %rd2885;
	xor.b64  	%rd2887, %rd2886, %rd2818;
	add.s64 	%rd2888, %rd2793, %rd2504;
	ld.const.u64 	%rd2889, [k_sha512+632];
	add.s64 	%rd2890, %rd2888, %rd2889;
	add.s64 	%rd2891, %rd2890, %rd2887;
	add.s64 	%rd2892, %rd2891, %rd2884;
	add.s64 	%rd2893, %rd2892, %rd2804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7426,%dummy}, %rd2879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7427}, %rd2879;
	}
	shf.r.wrap.b32 	%r7428, %r7427, %r7426, 28;
	shf.r.wrap.b32 	%r7429, %r7426, %r7427, 28;
	mov.b64 	%rd2894, {%r7429, %r7428};
	shf.l.wrap.b32 	%r7430, %r7426, %r7427, 30;
	shf.l.wrap.b32 	%r7431, %r7427, %r7426, 30;
	mov.b64 	%rd2895, {%r7431, %r7430};
	xor.b64  	%rd2896, %rd2895, %rd2894;
	shf.l.wrap.b32 	%r7432, %r7426, %r7427, 25;
	shf.l.wrap.b32 	%r7433, %r7427, %r7426, 25;
	mov.b64 	%rd2897, {%r7433, %r7432};
	xor.b64  	%rd2898, %rd2896, %rd2897;
	xor.b64  	%rd2899, %rd2879, %rd2829;
	xor.b64  	%rd2900, %rd2879, %rd2854;
	and.b64  	%rd2901, %rd2900, %rd2899;
	xor.b64  	%rd2902, %rd2901, %rd2879;
	add.s64 	%rd2903, %rd2892, %rd2902;
	add.s64 	%rd2904, %rd2903, %rd2898;
	add.s64 	%rd2905, %rd84, %rd2904;
	st.u64 	[%rd9+-192], %rd2905;
	add.s64 	%rd2906, %rd92, %rd2879;
	st.u64 	[%rd9+-184], %rd2906;
	add.s64 	%rd2907, %rd90, %rd2854;
	st.u64 	[%rd9+-176], %rd2907;
	add.s64 	%rd2908, %rd82, %rd2829;
	st.u64 	[%rd9+-168], %rd2908;
	add.s64 	%rd2909, %rd65, %rd2893;
	st.u64 	[%rd9+-160], %rd2909;
	add.s64 	%rd2910, %rd72, %rd2868;
	st.u64 	[%rd9+-152], %rd2910;
	add.s64 	%rd2911, %rd71, %rd2843;
	st.u64 	[%rd9+-144], %rd2911;
	add.s64 	%rd2912, %rd76, %rd2818;
	st.u64 	[%rd9+-136], %rd2912;
	st.v2.u32 	[%rd9+-128], {%r9676, %r9675};
	st.v2.u32 	[%rd9+-120], {%r9674, %r9673};
	st.v2.u32 	[%rd9+-112], {%r9680, %r9679};
	st.v2.u32 	[%rd9+-104], {%r9678, %r9677};
	st.v2.u32 	[%rd9+-96], {%r9684, %r9683};
	st.v2.u32 	[%rd9+-88], {%r9682, %r9681};
	st.v2.u32 	[%rd9+-80], {%r9688, %r9687};
	st.v2.u32 	[%rd9+-72], {%r9686, %r9685};
	st.v2.u32 	[%rd9+-64], {%r9692, %r9691};
	st.v2.u32 	[%rd9+-56], {%r9690, %r9689};
	st.v2.u32 	[%rd9+-48], {%r9696, %r9695};
	st.v2.u32 	[%rd9+-40], {%r9694, %r9693};
	st.v2.u32 	[%rd9+-32], {%r9700, %r9699};
	st.v2.u32 	[%rd9+-24], {%r9698, %r9697};
	st.v2.u32 	[%rd9+-16], {%r9704, %r9703};
	st.v2.u32 	[%rd9+-8], {%r9702, %r9701};

BB1_171:
	ret;
}

.func sha512_update_global_swap(
	.param .b64 sha512_update_global_swap_param_0,
	.param .b64 sha512_update_global_swap_param_1,
	.param .b32 sha512_update_global_swap_param_2
)
{
	.reg .pred 	%p<144>;
	.reg .b32 	%r<20500>;
	.reg .b64 	%rd<5780>;


	ld.param.u64 	%rd83, [sha512_update_global_swap_param_0];
	ld.param.u64 	%rd82, [sha512_update_global_swap_param_1];
	ld.param.u32 	%r2907, [sha512_update_global_swap_param_2];
	cvta.to.local.u64 	%rd1, %rd83;
	add.s32 	%r1, %r2907, -128;
	ld.const.u64 	%rd2, [k_sha512];
	ld.const.u64 	%rd3, [k_sha512+8];
	ld.const.u64 	%rd4, [k_sha512+16];
	ld.const.u64 	%rd5, [k_sha512+24];
	ld.const.u64 	%rd6, [k_sha512+32];
	ld.const.u64 	%rd7, [k_sha512+40];
	ld.const.u64 	%rd8, [k_sha512+48];
	ld.const.u64 	%rd9, [k_sha512+56];
	ld.const.u64 	%rd10, [k_sha512+64];
	ld.const.u64 	%rd11, [k_sha512+72];
	ld.const.u64 	%rd12, [k_sha512+80];
	ld.const.u64 	%rd13, [k_sha512+88];
	ld.const.u64 	%rd14, [k_sha512+96];
	ld.const.u64 	%rd15, [k_sha512+104];
	ld.const.u64 	%rd16, [k_sha512+112];
	ld.const.u64 	%rd17, [k_sha512+120];
	ld.const.u64 	%rd18, [k_sha512+128];
	ld.const.u64 	%rd19, [k_sha512+136];
	ld.const.u64 	%rd20, [k_sha512+144];
	ld.const.u64 	%rd21, [k_sha512+152];
	ld.const.u64 	%rd22, [k_sha512+160];
	ld.const.u64 	%rd23, [k_sha512+168];
	ld.const.u64 	%rd24, [k_sha512+176];
	ld.const.u64 	%rd25, [k_sha512+184];
	ld.const.u64 	%rd26, [k_sha512+192];
	ld.const.u64 	%rd27, [k_sha512+200];
	ld.const.u64 	%rd28, [k_sha512+208];
	ld.const.u64 	%rd29, [k_sha512+216];
	ld.const.u64 	%rd30, [k_sha512+224];
	ld.const.u64 	%rd31, [k_sha512+232];
	ld.const.u64 	%rd32, [k_sha512+240];
	ld.const.u64 	%rd33, [k_sha512+248];
	ld.const.u64 	%rd34, [k_sha512+256];
	ld.const.u64 	%rd35, [k_sha512+264];
	ld.const.u64 	%rd36, [k_sha512+272];
	ld.const.u64 	%rd37, [k_sha512+280];
	ld.const.u64 	%rd38, [k_sha512+288];
	ld.const.u64 	%rd39, [k_sha512+296];
	ld.const.u64 	%rd40, [k_sha512+304];
	ld.const.u64 	%rd41, [k_sha512+312];
	ld.const.u64 	%rd42, [k_sha512+320];
	ld.const.u64 	%rd43, [k_sha512+328];
	ld.const.u64 	%rd44, [k_sha512+336];
	ld.const.u64 	%rd45, [k_sha512+344];
	ld.const.u64 	%rd46, [k_sha512+352];
	ld.const.u64 	%rd47, [k_sha512+360];
	ld.const.u64 	%rd48, [k_sha512+368];
	ld.const.u64 	%rd49, [k_sha512+376];
	ld.const.u64 	%rd50, [k_sha512+384];
	ld.const.u64 	%rd51, [k_sha512+392];
	ld.const.u64 	%rd52, [k_sha512+400];
	ld.const.u64 	%rd53, [k_sha512+408];
	ld.const.u64 	%rd54, [k_sha512+416];
	ld.const.u64 	%rd55, [k_sha512+424];
	ld.const.u64 	%rd56, [k_sha512+432];
	ld.const.u64 	%rd57, [k_sha512+440];
	ld.const.u64 	%rd58, [k_sha512+448];
	ld.const.u64 	%rd59, [k_sha512+456];
	ld.const.u64 	%rd60, [k_sha512+464];
	ld.const.u64 	%rd61, [k_sha512+472];
	ld.const.u64 	%rd62, [k_sha512+480];
	ld.const.u64 	%rd63, [k_sha512+488];
	ld.const.u64 	%rd64, [k_sha512+496];
	ld.const.u64 	%rd65, [k_sha512+504];
	ld.const.u64 	%rd66, [k_sha512+512];
	ld.const.u64 	%rd67, [k_sha512+520];
	ld.const.u64 	%rd68, [k_sha512+528];
	ld.const.u64 	%rd69, [k_sha512+536];
	ld.const.u64 	%rd70, [k_sha512+544];
	ld.const.u64 	%rd71, [k_sha512+552];
	ld.const.u64 	%rd72, [k_sha512+560];
	ld.const.u64 	%rd73, [k_sha512+568];
	ld.const.u64 	%rd74, [k_sha512+576];
	ld.const.u64 	%rd75, [k_sha512+584];
	ld.const.u64 	%rd76, [k_sha512+592];
	ld.const.u64 	%rd77, [k_sha512+600];
	ld.const.u64 	%rd78, [k_sha512+608];
	ld.const.u64 	%rd79, [k_sha512+616];
	ld.const.u64 	%rd80, [k_sha512+624];
	mov.u32 	%r20337, 0;
	ld.const.u64 	%rd81, [k_sha512+632];
	mov.u32 	%r20338, %r20337;
	bra.uni 	BB2_1;

BB2_295:
	ld.local.v2.u32 	{%r18294, %r18295}, [%rd1+64];
	ld.local.v2.u32 	{%r18298, %r18299}, [%rd1+72];
	ld.local.v2.u32 	{%r18302, %r18303}, [%rd1+80];
	ld.local.v2.u32 	{%r18306, %r18307}, [%rd1+88];
	ld.local.v2.u32 	{%r18310, %r18311}, [%rd1+96];
	ld.local.v2.u32 	{%r18314, %r18315}, [%rd1+104];
	ld.local.v2.u32 	{%r18318, %r18319}, [%rd1+112];
	ld.local.v2.u32 	{%r18322, %r18323}, [%rd1+120];
	ld.local.v2.u32 	{%r18326, %r18327}, [%rd1+128];
	ld.local.v2.u32 	{%r18330, %r18331}, [%rd1+136];
	ld.local.v2.u32 	{%r18334, %r18335}, [%rd1+144];
	ld.local.v2.u32 	{%r18338, %r18339}, [%rd1+152];
	ld.local.v2.u32 	{%r18342, %r18343}, [%rd1+160];
	ld.local.v2.u32 	{%r18346, %r18347}, [%rd1+168];
	ld.local.v2.u32 	{%r18350, %r18351}, [%rd1+176];
	ld.local.v2.u32 	{%r18354, %r18355}, [%rd1+184];
	or.b32  	%r18358, %r18294, %r20439;
	or.b32  	%r18359, %r18295, %r20438;
	mov.b64	%rd2996, {%r18359, %r18358};
	or.b32  	%r18360, %r18298, %r20437;
	or.b32  	%r18361, %r18299, %r20436;
	mov.b64	%rd2997, {%r18361, %r18360};
	or.b32  	%r18362, %r18302, %r20443;
	or.b32  	%r18363, %r18303, %r20442;
	mov.b64	%rd2998, {%r18363, %r18362};
	or.b32  	%r18364, %r18306, %r20441;
	or.b32  	%r18365, %r18307, %r20440;
	mov.b64	%rd2999, {%r18365, %r18364};
	or.b32  	%r18366, %r18310, %r20447;
	or.b32  	%r18367, %r18311, %r20446;
	mov.b64	%rd3000, {%r18367, %r18366};
	or.b32  	%r18368, %r18314, %r20445;
	or.b32  	%r18369, %r18315, %r20444;
	mov.b64	%rd3001, {%r18369, %r18368};
	or.b32  	%r18370, %r18318, %r20451;
	or.b32  	%r18371, %r18319, %r20450;
	mov.b64	%rd3002, {%r18371, %r18370};
	or.b32  	%r18372, %r18322, %r20449;
	or.b32  	%r18373, %r18323, %r20448;
	mov.b64	%rd3003, {%r18373, %r18372};
	or.b32  	%r18374, %r18326, %r20455;
	or.b32  	%r18375, %r18327, %r20454;
	mov.b64	%rd3004, {%r18375, %r18374};
	or.b32  	%r18376, %r18330, %r20453;
	or.b32  	%r18377, %r18331, %r20452;
	mov.b64	%rd3005, {%r18377, %r18376};
	or.b32  	%r18378, %r18334, %r20459;
	or.b32  	%r18379, %r18335, %r20458;
	mov.b64	%rd3006, {%r18379, %r18378};
	or.b32  	%r18380, %r18338, %r20457;
	or.b32  	%r18381, %r18339, %r20456;
	mov.b64	%rd3007, {%r18381, %r18380};
	or.b32  	%r18382, %r18342, %r20463;
	or.b32  	%r18383, %r18343, %r20462;
	mov.b64	%rd3008, {%r18383, %r18382};
	or.b32  	%r18384, %r18346, %r20461;
	or.b32  	%r18385, %r18347, %r20460;
	mov.b64	%rd3009, {%r18385, %r18384};
	or.b32  	%r18386, %r18350, %r20467;
	or.b32  	%r18387, %r18351, %r20466;
	mov.b64	%rd3010, {%r18387, %r18386};
	or.b32  	%r18388, %r18354, %r20465;
	or.b32  	%r18389, %r18355, %r20464;
	mov.b64	%rd3011, {%r18389, %r18388};
	ld.local.u64 	%rd3012, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18390,%dummy}, %rd3012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18391}, %rd3012;
	}
	shf.r.wrap.b32 	%r18392, %r18391, %r18390, 14;
	shf.r.wrap.b32 	%r18393, %r18390, %r18391, 14;
	mov.b64 	%rd3013, {%r18393, %r18392};
	shf.r.wrap.b32 	%r18394, %r18391, %r18390, 18;
	shf.r.wrap.b32 	%r18395, %r18390, %r18391, 18;
	mov.b64 	%rd3014, {%r18395, %r18394};
	xor.b64  	%rd3015, %rd3014, %rd3013;
	shf.l.wrap.b32 	%r18396, %r18390, %r18391, 23;
	shf.l.wrap.b32 	%r18397, %r18391, %r18390, 23;
	mov.b64 	%rd3016, {%r18397, %r18396};
	xor.b64  	%rd3017, %rd3015, %rd3016;
	ld.local.u64 	%rd3018, [%rd1+48];
	ld.local.u64 	%rd3019, [%rd1+40];
	xor.b64  	%rd3020, %rd3018, %rd3019;
	and.b64  	%rd3021, %rd3020, %rd3012;
	xor.b64  	%rd3022, %rd3021, %rd3018;
	ld.local.u64 	%rd3023, [%rd1+56];
	add.s64 	%rd3024, %rd3022, %rd3023;
	add.s64 	%rd3025, %rd3024, %rd2996;
	add.s64 	%rd3026, %rd3025, %rd2;
	add.s64 	%rd3027, %rd3026, %rd3017;
	ld.local.u64 	%rd3028, [%rd1+24];
	add.s64 	%rd3029, %rd3027, %rd3028;
	ld.local.u64 	%rd3030, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18398,%dummy}, %rd3030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18399}, %rd3030;
	}
	shf.r.wrap.b32 	%r18400, %r18399, %r18398, 28;
	shf.r.wrap.b32 	%r18401, %r18398, %r18399, 28;
	mov.b64 	%rd3031, {%r18401, %r18400};
	shf.l.wrap.b32 	%r18402, %r18398, %r18399, 30;
	shf.l.wrap.b32 	%r18403, %r18399, %r18398, 30;
	mov.b64 	%rd3032, {%r18403, %r18402};
	xor.b64  	%rd3033, %rd3032, %rd3031;
	shf.l.wrap.b32 	%r18404, %r18398, %r18399, 25;
	shf.l.wrap.b32 	%r18405, %r18399, %r18398, 25;
	mov.b64 	%rd3034, {%r18405, %r18404};
	xor.b64  	%rd3035, %rd3033, %rd3034;
	ld.local.u64 	%rd3036, [%rd1+16];
	xor.b64  	%rd3037, %rd3036, %rd3030;
	ld.local.u64 	%rd3038, [%rd1+8];
	xor.b64  	%rd3039, %rd3038, %rd3030;
	and.b64  	%rd3040, %rd3037, %rd3039;
	xor.b64  	%rd3041, %rd3040, %rd3030;
	add.s64 	%rd3042, %rd3027, %rd3041;
	add.s64 	%rd3043, %rd3042, %rd3035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18406,%dummy}, %rd3029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18407}, %rd3029;
	}
	shf.r.wrap.b32 	%r18408, %r18407, %r18406, 14;
	shf.r.wrap.b32 	%r18409, %r18406, %r18407, 14;
	mov.b64 	%rd3044, {%r18409, %r18408};
	shf.r.wrap.b32 	%r18410, %r18407, %r18406, 18;
	shf.r.wrap.b32 	%r18411, %r18406, %r18407, 18;
	mov.b64 	%rd3045, {%r18411, %r18410};
	xor.b64  	%rd3046, %rd3045, %rd3044;
	shf.l.wrap.b32 	%r18412, %r18406, %r18407, 23;
	shf.l.wrap.b32 	%r18413, %r18407, %r18406, 23;
	mov.b64 	%rd3047, {%r18413, %r18412};
	xor.b64  	%rd3048, %rd3046, %rd3047;
	xor.b64  	%rd3049, %rd3019, %rd3012;
	and.b64  	%rd3050, %rd3029, %rd3049;
	xor.b64  	%rd3051, %rd3050, %rd3019;
	add.s64 	%rd3052, %rd2997, %rd3018;
	add.s64 	%rd3053, %rd3052, %rd3;
	add.s64 	%rd3054, %rd3053, %rd3051;
	add.s64 	%rd3055, %rd3054, %rd3048;
	add.s64 	%rd3056, %rd3055, %rd3036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18414,%dummy}, %rd3043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18415}, %rd3043;
	}
	shf.r.wrap.b32 	%r18416, %r18415, %r18414, 28;
	shf.r.wrap.b32 	%r18417, %r18414, %r18415, 28;
	mov.b64 	%rd3057, {%r18417, %r18416};
	shf.l.wrap.b32 	%r18418, %r18414, %r18415, 30;
	shf.l.wrap.b32 	%r18419, %r18415, %r18414, 30;
	mov.b64 	%rd3058, {%r18419, %r18418};
	xor.b64  	%rd3059, %rd3058, %rd3057;
	shf.l.wrap.b32 	%r18420, %r18414, %r18415, 25;
	shf.l.wrap.b32 	%r18421, %r18415, %r18414, 25;
	mov.b64 	%rd3060, {%r18421, %r18420};
	xor.b64  	%rd3061, %rd3059, %rd3060;
	xor.b64  	%rd3062, %rd3043, %rd3038;
	xor.b64  	%rd3063, %rd3043, %rd3030;
	and.b64  	%rd3064, %rd3063, %rd3062;
	xor.b64  	%rd3065, %rd3064, %rd3043;
	add.s64 	%rd3066, %rd3055, %rd3065;
	add.s64 	%rd3067, %rd3066, %rd3061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18422,%dummy}, %rd3056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18423}, %rd3056;
	}
	shf.r.wrap.b32 	%r18424, %r18423, %r18422, 14;
	shf.r.wrap.b32 	%r18425, %r18422, %r18423, 14;
	mov.b64 	%rd3068, {%r18425, %r18424};
	shf.r.wrap.b32 	%r18426, %r18423, %r18422, 18;
	shf.r.wrap.b32 	%r18427, %r18422, %r18423, 18;
	mov.b64 	%rd3069, {%r18427, %r18426};
	xor.b64  	%rd3070, %rd3069, %rd3068;
	shf.l.wrap.b32 	%r18428, %r18422, %r18423, 23;
	shf.l.wrap.b32 	%r18429, %r18423, %r18422, 23;
	mov.b64 	%rd3071, {%r18429, %r18428};
	xor.b64  	%rd3072, %rd3070, %rd3071;
	xor.b64  	%rd3073, %rd3029, %rd3012;
	and.b64  	%rd3074, %rd3056, %rd3073;
	xor.b64  	%rd3075, %rd3074, %rd3012;
	add.s64 	%rd3076, %rd2998, %rd3019;
	add.s64 	%rd3077, %rd3076, %rd4;
	add.s64 	%rd3078, %rd3077, %rd3075;
	add.s64 	%rd3079, %rd3078, %rd3072;
	add.s64 	%rd3080, %rd3079, %rd3038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18430,%dummy}, %rd3067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18431}, %rd3067;
	}
	shf.r.wrap.b32 	%r18432, %r18431, %r18430, 28;
	shf.r.wrap.b32 	%r18433, %r18430, %r18431, 28;
	mov.b64 	%rd3081, {%r18433, %r18432};
	shf.l.wrap.b32 	%r18434, %r18430, %r18431, 30;
	shf.l.wrap.b32 	%r18435, %r18431, %r18430, 30;
	mov.b64 	%rd3082, {%r18435, %r18434};
	xor.b64  	%rd3083, %rd3082, %rd3081;
	shf.l.wrap.b32 	%r18436, %r18430, %r18431, 25;
	shf.l.wrap.b32 	%r18437, %r18431, %r18430, 25;
	mov.b64 	%rd3084, {%r18437, %r18436};
	xor.b64  	%rd3085, %rd3083, %rd3084;
	xor.b64  	%rd3086, %rd3067, %rd3030;
	xor.b64  	%rd3087, %rd3067, %rd3043;
	and.b64  	%rd3088, %rd3087, %rd3086;
	xor.b64  	%rd3089, %rd3088, %rd3067;
	add.s64 	%rd3090, %rd3079, %rd3089;
	add.s64 	%rd3091, %rd3090, %rd3085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18438,%dummy}, %rd3080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18439}, %rd3080;
	}
	shf.r.wrap.b32 	%r18440, %r18439, %r18438, 14;
	shf.r.wrap.b32 	%r18441, %r18438, %r18439, 14;
	mov.b64 	%rd3092, {%r18441, %r18440};
	shf.r.wrap.b32 	%r18442, %r18439, %r18438, 18;
	shf.r.wrap.b32 	%r18443, %r18438, %r18439, 18;
	mov.b64 	%rd3093, {%r18443, %r18442};
	xor.b64  	%rd3094, %rd3093, %rd3092;
	shf.l.wrap.b32 	%r18444, %r18438, %r18439, 23;
	shf.l.wrap.b32 	%r18445, %r18439, %r18438, 23;
	mov.b64 	%rd3095, {%r18445, %r18444};
	xor.b64  	%rd3096, %rd3094, %rd3095;
	xor.b64  	%rd3097, %rd3056, %rd3029;
	and.b64  	%rd3098, %rd3080, %rd3097;
	xor.b64  	%rd3099, %rd3098, %rd3029;
	add.s64 	%rd3100, %rd2999, %rd3012;
	add.s64 	%rd3101, %rd3100, %rd5;
	add.s64 	%rd3102, %rd3101, %rd3099;
	add.s64 	%rd3103, %rd3102, %rd3096;
	add.s64 	%rd3104, %rd3103, %rd3030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18446,%dummy}, %rd3091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18447}, %rd3091;
	}
	shf.r.wrap.b32 	%r18448, %r18447, %r18446, 28;
	shf.r.wrap.b32 	%r18449, %r18446, %r18447, 28;
	mov.b64 	%rd3105, {%r18449, %r18448};
	shf.l.wrap.b32 	%r18450, %r18446, %r18447, 30;
	shf.l.wrap.b32 	%r18451, %r18447, %r18446, 30;
	mov.b64 	%rd3106, {%r18451, %r18450};
	xor.b64  	%rd3107, %rd3106, %rd3105;
	shf.l.wrap.b32 	%r18452, %r18446, %r18447, 25;
	shf.l.wrap.b32 	%r18453, %r18447, %r18446, 25;
	mov.b64 	%rd3108, {%r18453, %r18452};
	xor.b64  	%rd3109, %rd3107, %rd3108;
	xor.b64  	%rd3110, %rd3091, %rd3043;
	xor.b64  	%rd3111, %rd3091, %rd3067;
	and.b64  	%rd3112, %rd3111, %rd3110;
	xor.b64  	%rd3113, %rd3112, %rd3091;
	add.s64 	%rd3114, %rd3103, %rd3113;
	add.s64 	%rd3115, %rd3114, %rd3109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18454,%dummy}, %rd3104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18455}, %rd3104;
	}
	shf.r.wrap.b32 	%r18456, %r18455, %r18454, 14;
	shf.r.wrap.b32 	%r18457, %r18454, %r18455, 14;
	mov.b64 	%rd3116, {%r18457, %r18456};
	shf.r.wrap.b32 	%r18458, %r18455, %r18454, 18;
	shf.r.wrap.b32 	%r18459, %r18454, %r18455, 18;
	mov.b64 	%rd3117, {%r18459, %r18458};
	xor.b64  	%rd3118, %rd3117, %rd3116;
	shf.l.wrap.b32 	%r18460, %r18454, %r18455, 23;
	shf.l.wrap.b32 	%r18461, %r18455, %r18454, 23;
	mov.b64 	%rd3119, {%r18461, %r18460};
	xor.b64  	%rd3120, %rd3118, %rd3119;
	xor.b64  	%rd3121, %rd3080, %rd3056;
	and.b64  	%rd3122, %rd3104, %rd3121;
	xor.b64  	%rd3123, %rd3122, %rd3056;
	add.s64 	%rd3124, %rd3029, %rd3000;
	add.s64 	%rd3125, %rd3124, %rd6;
	add.s64 	%rd3126, %rd3125, %rd3123;
	add.s64 	%rd3127, %rd3126, %rd3120;
	add.s64 	%rd3128, %rd3127, %rd3043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18462,%dummy}, %rd3115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18463}, %rd3115;
	}
	shf.r.wrap.b32 	%r18464, %r18463, %r18462, 28;
	shf.r.wrap.b32 	%r18465, %r18462, %r18463, 28;
	mov.b64 	%rd3129, {%r18465, %r18464};
	shf.l.wrap.b32 	%r18466, %r18462, %r18463, 30;
	shf.l.wrap.b32 	%r18467, %r18463, %r18462, 30;
	mov.b64 	%rd3130, {%r18467, %r18466};
	xor.b64  	%rd3131, %rd3130, %rd3129;
	shf.l.wrap.b32 	%r18468, %r18462, %r18463, 25;
	shf.l.wrap.b32 	%r18469, %r18463, %r18462, 25;
	mov.b64 	%rd3132, {%r18469, %r18468};
	xor.b64  	%rd3133, %rd3131, %rd3132;
	xor.b64  	%rd3134, %rd3115, %rd3067;
	xor.b64  	%rd3135, %rd3115, %rd3091;
	and.b64  	%rd3136, %rd3135, %rd3134;
	xor.b64  	%rd3137, %rd3136, %rd3115;
	add.s64 	%rd3138, %rd3127, %rd3137;
	add.s64 	%rd3139, %rd3138, %rd3133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18470,%dummy}, %rd3128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18471}, %rd3128;
	}
	shf.r.wrap.b32 	%r18472, %r18471, %r18470, 14;
	shf.r.wrap.b32 	%r18473, %r18470, %r18471, 14;
	mov.b64 	%rd3140, {%r18473, %r18472};
	shf.r.wrap.b32 	%r18474, %r18471, %r18470, 18;
	shf.r.wrap.b32 	%r18475, %r18470, %r18471, 18;
	mov.b64 	%rd3141, {%r18475, %r18474};
	xor.b64  	%rd3142, %rd3141, %rd3140;
	shf.l.wrap.b32 	%r18476, %r18470, %r18471, 23;
	shf.l.wrap.b32 	%r18477, %r18471, %r18470, 23;
	mov.b64 	%rd3143, {%r18477, %r18476};
	xor.b64  	%rd3144, %rd3142, %rd3143;
	xor.b64  	%rd3145, %rd3104, %rd3080;
	and.b64  	%rd3146, %rd3128, %rd3145;
	xor.b64  	%rd3147, %rd3146, %rd3080;
	add.s64 	%rd3148, %rd3056, %rd3001;
	add.s64 	%rd3149, %rd3148, %rd7;
	add.s64 	%rd3150, %rd3149, %rd3147;
	add.s64 	%rd3151, %rd3150, %rd3144;
	add.s64 	%rd3152, %rd3151, %rd3067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18478,%dummy}, %rd3139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18479}, %rd3139;
	}
	shf.r.wrap.b32 	%r18480, %r18479, %r18478, 28;
	shf.r.wrap.b32 	%r18481, %r18478, %r18479, 28;
	mov.b64 	%rd3153, {%r18481, %r18480};
	shf.l.wrap.b32 	%r18482, %r18478, %r18479, 30;
	shf.l.wrap.b32 	%r18483, %r18479, %r18478, 30;
	mov.b64 	%rd3154, {%r18483, %r18482};
	xor.b64  	%rd3155, %rd3154, %rd3153;
	shf.l.wrap.b32 	%r18484, %r18478, %r18479, 25;
	shf.l.wrap.b32 	%r18485, %r18479, %r18478, 25;
	mov.b64 	%rd3156, {%r18485, %r18484};
	xor.b64  	%rd3157, %rd3155, %rd3156;
	xor.b64  	%rd3158, %rd3139, %rd3091;
	xor.b64  	%rd3159, %rd3139, %rd3115;
	and.b64  	%rd3160, %rd3159, %rd3158;
	xor.b64  	%rd3161, %rd3160, %rd3139;
	add.s64 	%rd3162, %rd3151, %rd3161;
	add.s64 	%rd3163, %rd3162, %rd3157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18486,%dummy}, %rd3152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18487}, %rd3152;
	}
	shf.r.wrap.b32 	%r18488, %r18487, %r18486, 14;
	shf.r.wrap.b32 	%r18489, %r18486, %r18487, 14;
	mov.b64 	%rd3164, {%r18489, %r18488};
	shf.r.wrap.b32 	%r18490, %r18487, %r18486, 18;
	shf.r.wrap.b32 	%r18491, %r18486, %r18487, 18;
	mov.b64 	%rd3165, {%r18491, %r18490};
	xor.b64  	%rd3166, %rd3165, %rd3164;
	shf.l.wrap.b32 	%r18492, %r18486, %r18487, 23;
	shf.l.wrap.b32 	%r18493, %r18487, %r18486, 23;
	mov.b64 	%rd3167, {%r18493, %r18492};
	xor.b64  	%rd3168, %rd3166, %rd3167;
	xor.b64  	%rd3169, %rd3128, %rd3104;
	and.b64  	%rd3170, %rd3152, %rd3169;
	xor.b64  	%rd3171, %rd3170, %rd3104;
	add.s64 	%rd3172, %rd3080, %rd3002;
	add.s64 	%rd3173, %rd3172, %rd8;
	add.s64 	%rd3174, %rd3173, %rd3171;
	add.s64 	%rd3175, %rd3174, %rd3168;
	add.s64 	%rd3176, %rd3175, %rd3091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18494,%dummy}, %rd3163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18495}, %rd3163;
	}
	shf.r.wrap.b32 	%r18496, %r18495, %r18494, 28;
	shf.r.wrap.b32 	%r18497, %r18494, %r18495, 28;
	mov.b64 	%rd3177, {%r18497, %r18496};
	shf.l.wrap.b32 	%r18498, %r18494, %r18495, 30;
	shf.l.wrap.b32 	%r18499, %r18495, %r18494, 30;
	mov.b64 	%rd3178, {%r18499, %r18498};
	xor.b64  	%rd3179, %rd3178, %rd3177;
	shf.l.wrap.b32 	%r18500, %r18494, %r18495, 25;
	shf.l.wrap.b32 	%r18501, %r18495, %r18494, 25;
	mov.b64 	%rd3180, {%r18501, %r18500};
	xor.b64  	%rd3181, %rd3179, %rd3180;
	xor.b64  	%rd3182, %rd3163, %rd3115;
	xor.b64  	%rd3183, %rd3163, %rd3139;
	and.b64  	%rd3184, %rd3183, %rd3182;
	xor.b64  	%rd3185, %rd3184, %rd3163;
	add.s64 	%rd3186, %rd3175, %rd3185;
	add.s64 	%rd3187, %rd3186, %rd3181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18502,%dummy}, %rd3176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18503}, %rd3176;
	}
	shf.r.wrap.b32 	%r18504, %r18503, %r18502, 14;
	shf.r.wrap.b32 	%r18505, %r18502, %r18503, 14;
	mov.b64 	%rd3188, {%r18505, %r18504};
	shf.r.wrap.b32 	%r18506, %r18503, %r18502, 18;
	shf.r.wrap.b32 	%r18507, %r18502, %r18503, 18;
	mov.b64 	%rd3189, {%r18507, %r18506};
	xor.b64  	%rd3190, %rd3189, %rd3188;
	shf.l.wrap.b32 	%r18508, %r18502, %r18503, 23;
	shf.l.wrap.b32 	%r18509, %r18503, %r18502, 23;
	mov.b64 	%rd3191, {%r18509, %r18508};
	xor.b64  	%rd3192, %rd3190, %rd3191;
	xor.b64  	%rd3193, %rd3152, %rd3128;
	and.b64  	%rd3194, %rd3176, %rd3193;
	xor.b64  	%rd3195, %rd3194, %rd3128;
	add.s64 	%rd3196, %rd3104, %rd3003;
	add.s64 	%rd3197, %rd3196, %rd9;
	add.s64 	%rd3198, %rd3197, %rd3195;
	add.s64 	%rd3199, %rd3198, %rd3192;
	add.s64 	%rd3200, %rd3199, %rd3115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18510,%dummy}, %rd3187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18511}, %rd3187;
	}
	shf.r.wrap.b32 	%r18512, %r18511, %r18510, 28;
	shf.r.wrap.b32 	%r18513, %r18510, %r18511, 28;
	mov.b64 	%rd3201, {%r18513, %r18512};
	shf.l.wrap.b32 	%r18514, %r18510, %r18511, 30;
	shf.l.wrap.b32 	%r18515, %r18511, %r18510, 30;
	mov.b64 	%rd3202, {%r18515, %r18514};
	xor.b64  	%rd3203, %rd3202, %rd3201;
	shf.l.wrap.b32 	%r18516, %r18510, %r18511, 25;
	shf.l.wrap.b32 	%r18517, %r18511, %r18510, 25;
	mov.b64 	%rd3204, {%r18517, %r18516};
	xor.b64  	%rd3205, %rd3203, %rd3204;
	xor.b64  	%rd3206, %rd3187, %rd3139;
	xor.b64  	%rd3207, %rd3187, %rd3163;
	and.b64  	%rd3208, %rd3207, %rd3206;
	xor.b64  	%rd3209, %rd3208, %rd3187;
	add.s64 	%rd3210, %rd3199, %rd3209;
	add.s64 	%rd3211, %rd3210, %rd3205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18518,%dummy}, %rd3200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18519}, %rd3200;
	}
	shf.r.wrap.b32 	%r18520, %r18519, %r18518, 14;
	shf.r.wrap.b32 	%r18521, %r18518, %r18519, 14;
	mov.b64 	%rd3212, {%r18521, %r18520};
	shf.r.wrap.b32 	%r18522, %r18519, %r18518, 18;
	shf.r.wrap.b32 	%r18523, %r18518, %r18519, 18;
	mov.b64 	%rd3213, {%r18523, %r18522};
	xor.b64  	%rd3214, %rd3213, %rd3212;
	shf.l.wrap.b32 	%r18524, %r18518, %r18519, 23;
	shf.l.wrap.b32 	%r18525, %r18519, %r18518, 23;
	mov.b64 	%rd3215, {%r18525, %r18524};
	xor.b64  	%rd3216, %rd3214, %rd3215;
	xor.b64  	%rd3217, %rd3176, %rd3152;
	and.b64  	%rd3218, %rd3200, %rd3217;
	xor.b64  	%rd3219, %rd3218, %rd3152;
	add.s64 	%rd3220, %rd3128, %rd3004;
	add.s64 	%rd3221, %rd3220, %rd10;
	add.s64 	%rd3222, %rd3221, %rd3219;
	add.s64 	%rd3223, %rd3222, %rd3216;
	add.s64 	%rd3224, %rd3223, %rd3139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18526,%dummy}, %rd3211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18527}, %rd3211;
	}
	shf.r.wrap.b32 	%r18528, %r18527, %r18526, 28;
	shf.r.wrap.b32 	%r18529, %r18526, %r18527, 28;
	mov.b64 	%rd3225, {%r18529, %r18528};
	shf.l.wrap.b32 	%r18530, %r18526, %r18527, 30;
	shf.l.wrap.b32 	%r18531, %r18527, %r18526, 30;
	mov.b64 	%rd3226, {%r18531, %r18530};
	xor.b64  	%rd3227, %rd3226, %rd3225;
	shf.l.wrap.b32 	%r18532, %r18526, %r18527, 25;
	shf.l.wrap.b32 	%r18533, %r18527, %r18526, 25;
	mov.b64 	%rd3228, {%r18533, %r18532};
	xor.b64  	%rd3229, %rd3227, %rd3228;
	xor.b64  	%rd3230, %rd3211, %rd3163;
	xor.b64  	%rd3231, %rd3211, %rd3187;
	and.b64  	%rd3232, %rd3231, %rd3230;
	xor.b64  	%rd3233, %rd3232, %rd3211;
	add.s64 	%rd3234, %rd3223, %rd3233;
	add.s64 	%rd3235, %rd3234, %rd3229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18534,%dummy}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18535}, %rd3224;
	}
	shf.r.wrap.b32 	%r18536, %r18535, %r18534, 14;
	shf.r.wrap.b32 	%r18537, %r18534, %r18535, 14;
	mov.b64 	%rd3236, {%r18537, %r18536};
	shf.r.wrap.b32 	%r18538, %r18535, %r18534, 18;
	shf.r.wrap.b32 	%r18539, %r18534, %r18535, 18;
	mov.b64 	%rd3237, {%r18539, %r18538};
	xor.b64  	%rd3238, %rd3237, %rd3236;
	shf.l.wrap.b32 	%r18540, %r18534, %r18535, 23;
	shf.l.wrap.b32 	%r18541, %r18535, %r18534, 23;
	mov.b64 	%rd3239, {%r18541, %r18540};
	xor.b64  	%rd3240, %rd3238, %rd3239;
	xor.b64  	%rd3241, %rd3200, %rd3176;
	and.b64  	%rd3242, %rd3224, %rd3241;
	xor.b64  	%rd3243, %rd3242, %rd3176;
	add.s64 	%rd3244, %rd3152, %rd3005;
	add.s64 	%rd3245, %rd3244, %rd11;
	add.s64 	%rd3246, %rd3245, %rd3243;
	add.s64 	%rd3247, %rd3246, %rd3240;
	add.s64 	%rd3248, %rd3247, %rd3163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18542,%dummy}, %rd3235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18543}, %rd3235;
	}
	shf.r.wrap.b32 	%r18544, %r18543, %r18542, 28;
	shf.r.wrap.b32 	%r18545, %r18542, %r18543, 28;
	mov.b64 	%rd3249, {%r18545, %r18544};
	shf.l.wrap.b32 	%r18546, %r18542, %r18543, 30;
	shf.l.wrap.b32 	%r18547, %r18543, %r18542, 30;
	mov.b64 	%rd3250, {%r18547, %r18546};
	xor.b64  	%rd3251, %rd3250, %rd3249;
	shf.l.wrap.b32 	%r18548, %r18542, %r18543, 25;
	shf.l.wrap.b32 	%r18549, %r18543, %r18542, 25;
	mov.b64 	%rd3252, {%r18549, %r18548};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	xor.b64  	%rd3254, %rd3235, %rd3187;
	xor.b64  	%rd3255, %rd3235, %rd3211;
	and.b64  	%rd3256, %rd3255, %rd3254;
	xor.b64  	%rd3257, %rd3256, %rd3235;
	add.s64 	%rd3258, %rd3247, %rd3257;
	add.s64 	%rd3259, %rd3258, %rd3253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18550,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18551}, %rd3248;
	}
	shf.r.wrap.b32 	%r18552, %r18551, %r18550, 14;
	shf.r.wrap.b32 	%r18553, %r18550, %r18551, 14;
	mov.b64 	%rd3260, {%r18553, %r18552};
	shf.r.wrap.b32 	%r18554, %r18551, %r18550, 18;
	shf.r.wrap.b32 	%r18555, %r18550, %r18551, 18;
	mov.b64 	%rd3261, {%r18555, %r18554};
	xor.b64  	%rd3262, %rd3261, %rd3260;
	shf.l.wrap.b32 	%r18556, %r18550, %r18551, 23;
	shf.l.wrap.b32 	%r18557, %r18551, %r18550, 23;
	mov.b64 	%rd3263, {%r18557, %r18556};
	xor.b64  	%rd3264, %rd3262, %rd3263;
	xor.b64  	%rd3265, %rd3224, %rd3200;
	and.b64  	%rd3266, %rd3248, %rd3265;
	xor.b64  	%rd3267, %rd3266, %rd3200;
	add.s64 	%rd3268, %rd3176, %rd3006;
	add.s64 	%rd3269, %rd3268, %rd12;
	add.s64 	%rd3270, %rd3269, %rd3267;
	add.s64 	%rd3271, %rd3270, %rd3264;
	add.s64 	%rd3272, %rd3271, %rd3187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18558,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18559}, %rd3259;
	}
	shf.r.wrap.b32 	%r18560, %r18559, %r18558, 28;
	shf.r.wrap.b32 	%r18561, %r18558, %r18559, 28;
	mov.b64 	%rd3273, {%r18561, %r18560};
	shf.l.wrap.b32 	%r18562, %r18558, %r18559, 30;
	shf.l.wrap.b32 	%r18563, %r18559, %r18558, 30;
	mov.b64 	%rd3274, {%r18563, %r18562};
	xor.b64  	%rd3275, %rd3274, %rd3273;
	shf.l.wrap.b32 	%r18564, %r18558, %r18559, 25;
	shf.l.wrap.b32 	%r18565, %r18559, %r18558, 25;
	mov.b64 	%rd3276, {%r18565, %r18564};
	xor.b64  	%rd3277, %rd3275, %rd3276;
	xor.b64  	%rd3278, %rd3259, %rd3211;
	xor.b64  	%rd3279, %rd3259, %rd3235;
	and.b64  	%rd3280, %rd3279, %rd3278;
	xor.b64  	%rd3281, %rd3280, %rd3259;
	add.s64 	%rd3282, %rd3271, %rd3281;
	add.s64 	%rd3283, %rd3282, %rd3277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18566,%dummy}, %rd3272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18567}, %rd3272;
	}
	shf.r.wrap.b32 	%r18568, %r18567, %r18566, 14;
	shf.r.wrap.b32 	%r18569, %r18566, %r18567, 14;
	mov.b64 	%rd3284, {%r18569, %r18568};
	shf.r.wrap.b32 	%r18570, %r18567, %r18566, 18;
	shf.r.wrap.b32 	%r18571, %r18566, %r18567, 18;
	mov.b64 	%rd3285, {%r18571, %r18570};
	xor.b64  	%rd3286, %rd3285, %rd3284;
	shf.l.wrap.b32 	%r18572, %r18566, %r18567, 23;
	shf.l.wrap.b32 	%r18573, %r18567, %r18566, 23;
	mov.b64 	%rd3287, {%r18573, %r18572};
	xor.b64  	%rd3288, %rd3286, %rd3287;
	xor.b64  	%rd3289, %rd3248, %rd3224;
	and.b64  	%rd3290, %rd3272, %rd3289;
	xor.b64  	%rd3291, %rd3290, %rd3224;
	add.s64 	%rd3292, %rd3200, %rd3007;
	add.s64 	%rd3293, %rd3292, %rd13;
	add.s64 	%rd3294, %rd3293, %rd3291;
	add.s64 	%rd3295, %rd3294, %rd3288;
	add.s64 	%rd3296, %rd3295, %rd3211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18574,%dummy}, %rd3283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18575}, %rd3283;
	}
	shf.r.wrap.b32 	%r18576, %r18575, %r18574, 28;
	shf.r.wrap.b32 	%r18577, %r18574, %r18575, 28;
	mov.b64 	%rd3297, {%r18577, %r18576};
	shf.l.wrap.b32 	%r18578, %r18574, %r18575, 30;
	shf.l.wrap.b32 	%r18579, %r18575, %r18574, 30;
	mov.b64 	%rd3298, {%r18579, %r18578};
	xor.b64  	%rd3299, %rd3298, %rd3297;
	shf.l.wrap.b32 	%r18580, %r18574, %r18575, 25;
	shf.l.wrap.b32 	%r18581, %r18575, %r18574, 25;
	mov.b64 	%rd3300, {%r18581, %r18580};
	xor.b64  	%rd3301, %rd3299, %rd3300;
	xor.b64  	%rd3302, %rd3283, %rd3235;
	xor.b64  	%rd3303, %rd3283, %rd3259;
	and.b64  	%rd3304, %rd3303, %rd3302;
	xor.b64  	%rd3305, %rd3304, %rd3283;
	add.s64 	%rd3306, %rd3295, %rd3305;
	add.s64 	%rd3307, %rd3306, %rd3301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18582,%dummy}, %rd3296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18583}, %rd3296;
	}
	shf.r.wrap.b32 	%r18584, %r18583, %r18582, 14;
	shf.r.wrap.b32 	%r18585, %r18582, %r18583, 14;
	mov.b64 	%rd3308, {%r18585, %r18584};
	shf.r.wrap.b32 	%r18586, %r18583, %r18582, 18;
	shf.r.wrap.b32 	%r18587, %r18582, %r18583, 18;
	mov.b64 	%rd3309, {%r18587, %r18586};
	xor.b64  	%rd3310, %rd3309, %rd3308;
	shf.l.wrap.b32 	%r18588, %r18582, %r18583, 23;
	shf.l.wrap.b32 	%r18589, %r18583, %r18582, 23;
	mov.b64 	%rd3311, {%r18589, %r18588};
	xor.b64  	%rd3312, %rd3310, %rd3311;
	xor.b64  	%rd3313, %rd3272, %rd3248;
	and.b64  	%rd3314, %rd3296, %rd3313;
	xor.b64  	%rd3315, %rd3314, %rd3248;
	add.s64 	%rd3316, %rd3224, %rd3008;
	add.s64 	%rd3317, %rd3316, %rd14;
	add.s64 	%rd3318, %rd3317, %rd3315;
	add.s64 	%rd3319, %rd3318, %rd3312;
	add.s64 	%rd3320, %rd3319, %rd3235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18590,%dummy}, %rd3307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18591}, %rd3307;
	}
	shf.r.wrap.b32 	%r18592, %r18591, %r18590, 28;
	shf.r.wrap.b32 	%r18593, %r18590, %r18591, 28;
	mov.b64 	%rd3321, {%r18593, %r18592};
	shf.l.wrap.b32 	%r18594, %r18590, %r18591, 30;
	shf.l.wrap.b32 	%r18595, %r18591, %r18590, 30;
	mov.b64 	%rd3322, {%r18595, %r18594};
	xor.b64  	%rd3323, %rd3322, %rd3321;
	shf.l.wrap.b32 	%r18596, %r18590, %r18591, 25;
	shf.l.wrap.b32 	%r18597, %r18591, %r18590, 25;
	mov.b64 	%rd3324, {%r18597, %r18596};
	xor.b64  	%rd3325, %rd3323, %rd3324;
	xor.b64  	%rd3326, %rd3307, %rd3259;
	xor.b64  	%rd3327, %rd3307, %rd3283;
	and.b64  	%rd3328, %rd3327, %rd3326;
	xor.b64  	%rd3329, %rd3328, %rd3307;
	add.s64 	%rd3330, %rd3319, %rd3329;
	add.s64 	%rd3331, %rd3330, %rd3325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18598,%dummy}, %rd3320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18599}, %rd3320;
	}
	shf.r.wrap.b32 	%r18600, %r18599, %r18598, 14;
	shf.r.wrap.b32 	%r18601, %r18598, %r18599, 14;
	mov.b64 	%rd3332, {%r18601, %r18600};
	shf.r.wrap.b32 	%r18602, %r18599, %r18598, 18;
	shf.r.wrap.b32 	%r18603, %r18598, %r18599, 18;
	mov.b64 	%rd3333, {%r18603, %r18602};
	xor.b64  	%rd3334, %rd3333, %rd3332;
	shf.l.wrap.b32 	%r18604, %r18598, %r18599, 23;
	shf.l.wrap.b32 	%r18605, %r18599, %r18598, 23;
	mov.b64 	%rd3335, {%r18605, %r18604};
	xor.b64  	%rd3336, %rd3334, %rd3335;
	xor.b64  	%rd3337, %rd3296, %rd3272;
	and.b64  	%rd3338, %rd3320, %rd3337;
	xor.b64  	%rd3339, %rd3338, %rd3272;
	add.s64 	%rd3340, %rd3248, %rd3009;
	add.s64 	%rd3341, %rd3340, %rd15;
	add.s64 	%rd3342, %rd3341, %rd3339;
	add.s64 	%rd3343, %rd3342, %rd3336;
	add.s64 	%rd3344, %rd3343, %rd3259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18606,%dummy}, %rd3331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18607}, %rd3331;
	}
	shf.r.wrap.b32 	%r18608, %r18607, %r18606, 28;
	shf.r.wrap.b32 	%r18609, %r18606, %r18607, 28;
	mov.b64 	%rd3345, {%r18609, %r18608};
	shf.l.wrap.b32 	%r18610, %r18606, %r18607, 30;
	shf.l.wrap.b32 	%r18611, %r18607, %r18606, 30;
	mov.b64 	%rd3346, {%r18611, %r18610};
	xor.b64  	%rd3347, %rd3346, %rd3345;
	shf.l.wrap.b32 	%r18612, %r18606, %r18607, 25;
	shf.l.wrap.b32 	%r18613, %r18607, %r18606, 25;
	mov.b64 	%rd3348, {%r18613, %r18612};
	xor.b64  	%rd3349, %rd3347, %rd3348;
	xor.b64  	%rd3350, %rd3331, %rd3283;
	xor.b64  	%rd3351, %rd3331, %rd3307;
	and.b64  	%rd3352, %rd3351, %rd3350;
	xor.b64  	%rd3353, %rd3352, %rd3331;
	add.s64 	%rd3354, %rd3343, %rd3353;
	add.s64 	%rd3355, %rd3354, %rd3349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18614,%dummy}, %rd3344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18615}, %rd3344;
	}
	shf.r.wrap.b32 	%r18616, %r18615, %r18614, 14;
	shf.r.wrap.b32 	%r18617, %r18614, %r18615, 14;
	mov.b64 	%rd3356, {%r18617, %r18616};
	shf.r.wrap.b32 	%r18618, %r18615, %r18614, 18;
	shf.r.wrap.b32 	%r18619, %r18614, %r18615, 18;
	mov.b64 	%rd3357, {%r18619, %r18618};
	xor.b64  	%rd3358, %rd3357, %rd3356;
	shf.l.wrap.b32 	%r18620, %r18614, %r18615, 23;
	shf.l.wrap.b32 	%r18621, %r18615, %r18614, 23;
	mov.b64 	%rd3359, {%r18621, %r18620};
	xor.b64  	%rd3360, %rd3358, %rd3359;
	xor.b64  	%rd3361, %rd3320, %rd3296;
	and.b64  	%rd3362, %rd3344, %rd3361;
	xor.b64  	%rd3363, %rd3362, %rd3296;
	add.s64 	%rd3364, %rd3272, %rd3010;
	add.s64 	%rd3365, %rd3364, %rd16;
	add.s64 	%rd3366, %rd3365, %rd3363;
	add.s64 	%rd3367, %rd3366, %rd3360;
	add.s64 	%rd3368, %rd3367, %rd3283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18622,%dummy}, %rd3355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18623}, %rd3355;
	}
	shf.r.wrap.b32 	%r18624, %r18623, %r18622, 28;
	shf.r.wrap.b32 	%r18625, %r18622, %r18623, 28;
	mov.b64 	%rd3369, {%r18625, %r18624};
	shf.l.wrap.b32 	%r18626, %r18622, %r18623, 30;
	shf.l.wrap.b32 	%r18627, %r18623, %r18622, 30;
	mov.b64 	%rd3370, {%r18627, %r18626};
	xor.b64  	%rd3371, %rd3370, %rd3369;
	shf.l.wrap.b32 	%r18628, %r18622, %r18623, 25;
	shf.l.wrap.b32 	%r18629, %r18623, %r18622, 25;
	mov.b64 	%rd3372, {%r18629, %r18628};
	xor.b64  	%rd3373, %rd3371, %rd3372;
	xor.b64  	%rd3374, %rd3355, %rd3307;
	xor.b64  	%rd3375, %rd3355, %rd3331;
	and.b64  	%rd3376, %rd3375, %rd3374;
	xor.b64  	%rd3377, %rd3376, %rd3355;
	add.s64 	%rd3378, %rd3367, %rd3377;
	add.s64 	%rd3379, %rd3378, %rd3373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18630,%dummy}, %rd3368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18631}, %rd3368;
	}
	shf.r.wrap.b32 	%r18632, %r18631, %r18630, 14;
	shf.r.wrap.b32 	%r18633, %r18630, %r18631, 14;
	mov.b64 	%rd3380, {%r18633, %r18632};
	shf.r.wrap.b32 	%r18634, %r18631, %r18630, 18;
	shf.r.wrap.b32 	%r18635, %r18630, %r18631, 18;
	mov.b64 	%rd3381, {%r18635, %r18634};
	xor.b64  	%rd3382, %rd3381, %rd3380;
	shf.l.wrap.b32 	%r18636, %r18630, %r18631, 23;
	shf.l.wrap.b32 	%r18637, %r18631, %r18630, 23;
	mov.b64 	%rd3383, {%r18637, %r18636};
	xor.b64  	%rd3384, %rd3382, %rd3383;
	xor.b64  	%rd3385, %rd3344, %rd3320;
	and.b64  	%rd3386, %rd3368, %rd3385;
	xor.b64  	%rd3387, %rd3386, %rd3320;
	add.s64 	%rd3388, %rd3296, %rd3011;
	add.s64 	%rd3389, %rd3388, %rd17;
	add.s64 	%rd3390, %rd3389, %rd3387;
	add.s64 	%rd3391, %rd3390, %rd3384;
	add.s64 	%rd3392, %rd3391, %rd3307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18638,%dummy}, %rd3379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18639}, %rd3379;
	}
	shf.r.wrap.b32 	%r18640, %r18639, %r18638, 28;
	shf.r.wrap.b32 	%r18641, %r18638, %r18639, 28;
	mov.b64 	%rd3393, {%r18641, %r18640};
	shf.l.wrap.b32 	%r18642, %r18638, %r18639, 30;
	shf.l.wrap.b32 	%r18643, %r18639, %r18638, 30;
	mov.b64 	%rd3394, {%r18643, %r18642};
	xor.b64  	%rd3395, %rd3394, %rd3393;
	shf.l.wrap.b32 	%r18644, %r18638, %r18639, 25;
	shf.l.wrap.b32 	%r18645, %r18639, %r18638, 25;
	mov.b64 	%rd3396, {%r18645, %r18644};
	xor.b64  	%rd3397, %rd3395, %rd3396;
	xor.b64  	%rd3398, %rd3379, %rd3331;
	xor.b64  	%rd3399, %rd3379, %rd3355;
	and.b64  	%rd3400, %rd3399, %rd3398;
	xor.b64  	%rd3401, %rd3400, %rd3379;
	add.s64 	%rd3402, %rd3391, %rd3401;
	add.s64 	%rd3403, %rd3402, %rd3397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18646,%dummy}, %rd3010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18647}, %rd3010;
	}
	shf.r.wrap.b32 	%r18648, %r18647, %r18646, 19;
	shf.r.wrap.b32 	%r18649, %r18646, %r18647, 19;
	mov.b64 	%rd3404, {%r18649, %r18648};
	shf.l.wrap.b32 	%r18650, %r18646, %r18647, 3;
	shf.l.wrap.b32 	%r18651, %r18647, %r18646, 3;
	mov.b64 	%rd3405, {%r18651, %r18650};
	shr.u64 	%rd3406, %rd3010, 6;
	xor.b64  	%rd3407, %rd3404, %rd3406;
	xor.b64  	%rd3408, %rd3407, %rd3405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18652,%dummy}, %rd2997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18653}, %rd2997;
	}
	shf.r.wrap.b32 	%r18654, %r18653, %r18652, 1;
	shf.r.wrap.b32 	%r18655, %r18652, %r18653, 1;
	mov.b64 	%rd3409, {%r18655, %r18654};
	shf.r.wrap.b32 	%r18656, %r18653, %r18652, 8;
	shf.r.wrap.b32 	%r18657, %r18652, %r18653, 8;
	mov.b64 	%rd3410, {%r18657, %r18656};
	shr.u64 	%rd3411, %rd2997, 7;
	xor.b64  	%rd3412, %rd3409, %rd3411;
	xor.b64  	%rd3413, %rd3412, %rd3410;
	add.s64 	%rd3414, %rd3005, %rd2996;
	add.s64 	%rd3415, %rd3414, %rd3408;
	add.s64 	%rd3416, %rd3415, %rd3413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18658,%dummy}, %rd3011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18659}, %rd3011;
	}
	shf.r.wrap.b32 	%r18660, %r18659, %r18658, 19;
	shf.r.wrap.b32 	%r18661, %r18658, %r18659, 19;
	mov.b64 	%rd3417, {%r18661, %r18660};
	shf.l.wrap.b32 	%r18662, %r18658, %r18659, 3;
	shf.l.wrap.b32 	%r18663, %r18659, %r18658, 3;
	mov.b64 	%rd3418, {%r18663, %r18662};
	shr.u64 	%rd3419, %rd3011, 6;
	xor.b64  	%rd3420, %rd3417, %rd3419;
	xor.b64  	%rd3421, %rd3420, %rd3418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18664,%dummy}, %rd2998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18665}, %rd2998;
	}
	shf.r.wrap.b32 	%r18666, %r18665, %r18664, 1;
	shf.r.wrap.b32 	%r18667, %r18664, %r18665, 1;
	mov.b64 	%rd3422, {%r18667, %r18666};
	shf.r.wrap.b32 	%r18668, %r18665, %r18664, 8;
	shf.r.wrap.b32 	%r18669, %r18664, %r18665, 8;
	mov.b64 	%rd3423, {%r18669, %r18668};
	shr.u64 	%rd3424, %rd2998, 7;
	xor.b64  	%rd3425, %rd3422, %rd3424;
	xor.b64  	%rd3426, %rd3425, %rd3423;
	add.s64 	%rd3427, %rd3006, %rd2997;
	add.s64 	%rd3428, %rd3427, %rd3421;
	add.s64 	%rd3429, %rd3428, %rd3426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18670,%dummy}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18671}, %rd3416;
	}
	shf.r.wrap.b32 	%r18672, %r18671, %r18670, 19;
	shf.r.wrap.b32 	%r18673, %r18670, %r18671, 19;
	mov.b64 	%rd3430, {%r18673, %r18672};
	shf.l.wrap.b32 	%r18674, %r18670, %r18671, 3;
	shf.l.wrap.b32 	%r18675, %r18671, %r18670, 3;
	mov.b64 	%rd3431, {%r18675, %r18674};
	shr.u64 	%rd3432, %rd3416, 6;
	xor.b64  	%rd3433, %rd3430, %rd3432;
	xor.b64  	%rd3434, %rd3433, %rd3431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18676,%dummy}, %rd2999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18677}, %rd2999;
	}
	shf.r.wrap.b32 	%r18678, %r18677, %r18676, 1;
	shf.r.wrap.b32 	%r18679, %r18676, %r18677, 1;
	mov.b64 	%rd3435, {%r18679, %r18678};
	shf.r.wrap.b32 	%r18680, %r18677, %r18676, 8;
	shf.r.wrap.b32 	%r18681, %r18676, %r18677, 8;
	mov.b64 	%rd3436, {%r18681, %r18680};
	shr.u64 	%rd3437, %rd2999, 7;
	xor.b64  	%rd3438, %rd3435, %rd3437;
	xor.b64  	%rd3439, %rd3438, %rd3436;
	add.s64 	%rd3440, %rd3007, %rd2998;
	add.s64 	%rd3441, %rd3440, %rd3434;
	add.s64 	%rd3442, %rd3441, %rd3439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18682,%dummy}, %rd3429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18683}, %rd3429;
	}
	shf.r.wrap.b32 	%r18684, %r18683, %r18682, 19;
	shf.r.wrap.b32 	%r18685, %r18682, %r18683, 19;
	mov.b64 	%rd3443, {%r18685, %r18684};
	shf.l.wrap.b32 	%r18686, %r18682, %r18683, 3;
	shf.l.wrap.b32 	%r18687, %r18683, %r18682, 3;
	mov.b64 	%rd3444, {%r18687, %r18686};
	shr.u64 	%rd3445, %rd3429, 6;
	xor.b64  	%rd3446, %rd3443, %rd3445;
	xor.b64  	%rd3447, %rd3446, %rd3444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18688,%dummy}, %rd3000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18689}, %rd3000;
	}
	shf.r.wrap.b32 	%r18690, %r18689, %r18688, 1;
	shf.r.wrap.b32 	%r18691, %r18688, %r18689, 1;
	mov.b64 	%rd3448, {%r18691, %r18690};
	shf.r.wrap.b32 	%r18692, %r18689, %r18688, 8;
	shf.r.wrap.b32 	%r18693, %r18688, %r18689, 8;
	mov.b64 	%rd3449, {%r18693, %r18692};
	shr.u64 	%rd3450, %rd3000, 7;
	xor.b64  	%rd3451, %rd3448, %rd3450;
	xor.b64  	%rd3452, %rd3451, %rd3449;
	add.s64 	%rd3453, %rd3008, %rd2999;
	add.s64 	%rd3454, %rd3453, %rd3447;
	add.s64 	%rd3455, %rd3454, %rd3452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18694,%dummy}, %rd3442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18695}, %rd3442;
	}
	shf.r.wrap.b32 	%r18696, %r18695, %r18694, 19;
	shf.r.wrap.b32 	%r18697, %r18694, %r18695, 19;
	mov.b64 	%rd3456, {%r18697, %r18696};
	shf.l.wrap.b32 	%r18698, %r18694, %r18695, 3;
	shf.l.wrap.b32 	%r18699, %r18695, %r18694, 3;
	mov.b64 	%rd3457, {%r18699, %r18698};
	shr.u64 	%rd3458, %rd3442, 6;
	xor.b64  	%rd3459, %rd3456, %rd3458;
	xor.b64  	%rd3460, %rd3459, %rd3457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18700,%dummy}, %rd3001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18701}, %rd3001;
	}
	shf.r.wrap.b32 	%r18702, %r18701, %r18700, 1;
	shf.r.wrap.b32 	%r18703, %r18700, %r18701, 1;
	mov.b64 	%rd3461, {%r18703, %r18702};
	shf.r.wrap.b32 	%r18704, %r18701, %r18700, 8;
	shf.r.wrap.b32 	%r18705, %r18700, %r18701, 8;
	mov.b64 	%rd3462, {%r18705, %r18704};
	shr.u64 	%rd3463, %rd3001, 7;
	xor.b64  	%rd3464, %rd3461, %rd3463;
	xor.b64  	%rd3465, %rd3464, %rd3462;
	add.s64 	%rd3466, %rd3009, %rd3000;
	add.s64 	%rd3467, %rd3466, %rd3460;
	add.s64 	%rd3468, %rd3467, %rd3465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18706,%dummy}, %rd3455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18707}, %rd3455;
	}
	shf.r.wrap.b32 	%r18708, %r18707, %r18706, 19;
	shf.r.wrap.b32 	%r18709, %r18706, %r18707, 19;
	mov.b64 	%rd3469, {%r18709, %r18708};
	shf.l.wrap.b32 	%r18710, %r18706, %r18707, 3;
	shf.l.wrap.b32 	%r18711, %r18707, %r18706, 3;
	mov.b64 	%rd3470, {%r18711, %r18710};
	shr.u64 	%rd3471, %rd3455, 6;
	xor.b64  	%rd3472, %rd3469, %rd3471;
	xor.b64  	%rd3473, %rd3472, %rd3470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18712,%dummy}, %rd3002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18713}, %rd3002;
	}
	shf.r.wrap.b32 	%r18714, %r18713, %r18712, 1;
	shf.r.wrap.b32 	%r18715, %r18712, %r18713, 1;
	mov.b64 	%rd3474, {%r18715, %r18714};
	shf.r.wrap.b32 	%r18716, %r18713, %r18712, 8;
	shf.r.wrap.b32 	%r18717, %r18712, %r18713, 8;
	mov.b64 	%rd3475, {%r18717, %r18716};
	shr.u64 	%rd3476, %rd3002, 7;
	xor.b64  	%rd3477, %rd3474, %rd3476;
	xor.b64  	%rd3478, %rd3477, %rd3475;
	add.s64 	%rd3479, %rd3010, %rd3001;
	add.s64 	%rd3480, %rd3479, %rd3473;
	add.s64 	%rd3481, %rd3480, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18718,%dummy}, %rd3468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18719}, %rd3468;
	}
	shf.r.wrap.b32 	%r18720, %r18719, %r18718, 19;
	shf.r.wrap.b32 	%r18721, %r18718, %r18719, 19;
	mov.b64 	%rd3482, {%r18721, %r18720};
	shf.l.wrap.b32 	%r18722, %r18718, %r18719, 3;
	shf.l.wrap.b32 	%r18723, %r18719, %r18718, 3;
	mov.b64 	%rd3483, {%r18723, %r18722};
	shr.u64 	%rd3484, %rd3468, 6;
	xor.b64  	%rd3485, %rd3482, %rd3484;
	xor.b64  	%rd3486, %rd3485, %rd3483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18724,%dummy}, %rd3003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18725}, %rd3003;
	}
	shf.r.wrap.b32 	%r18726, %r18725, %r18724, 1;
	shf.r.wrap.b32 	%r18727, %r18724, %r18725, 1;
	mov.b64 	%rd3487, {%r18727, %r18726};
	shf.r.wrap.b32 	%r18728, %r18725, %r18724, 8;
	shf.r.wrap.b32 	%r18729, %r18724, %r18725, 8;
	mov.b64 	%rd3488, {%r18729, %r18728};
	shr.u64 	%rd3489, %rd3003, 7;
	xor.b64  	%rd3490, %rd3487, %rd3489;
	xor.b64  	%rd3491, %rd3490, %rd3488;
	add.s64 	%rd3492, %rd3011, %rd3002;
	add.s64 	%rd3493, %rd3492, %rd3486;
	add.s64 	%rd3494, %rd3493, %rd3491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18730,%dummy}, %rd3481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18731}, %rd3481;
	}
	shf.r.wrap.b32 	%r18732, %r18731, %r18730, 19;
	shf.r.wrap.b32 	%r18733, %r18730, %r18731, 19;
	mov.b64 	%rd3495, {%r18733, %r18732};
	shf.l.wrap.b32 	%r18734, %r18730, %r18731, 3;
	shf.l.wrap.b32 	%r18735, %r18731, %r18730, 3;
	mov.b64 	%rd3496, {%r18735, %r18734};
	shr.u64 	%rd3497, %rd3481, 6;
	xor.b64  	%rd3498, %rd3495, %rd3497;
	xor.b64  	%rd3499, %rd3498, %rd3496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18736,%dummy}, %rd3004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18737}, %rd3004;
	}
	shf.r.wrap.b32 	%r18738, %r18737, %r18736, 1;
	shf.r.wrap.b32 	%r18739, %r18736, %r18737, 1;
	mov.b64 	%rd3500, {%r18739, %r18738};
	shf.r.wrap.b32 	%r18740, %r18737, %r18736, 8;
	shf.r.wrap.b32 	%r18741, %r18736, %r18737, 8;
	mov.b64 	%rd3501, {%r18741, %r18740};
	shr.u64 	%rd3502, %rd3004, 7;
	xor.b64  	%rd3503, %rd3500, %rd3502;
	xor.b64  	%rd3504, %rd3503, %rd3501;
	add.s64 	%rd3505, %rd3416, %rd3003;
	add.s64 	%rd3506, %rd3505, %rd3499;
	add.s64 	%rd3507, %rd3506, %rd3504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18742,%dummy}, %rd3494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18743}, %rd3494;
	}
	shf.r.wrap.b32 	%r18744, %r18743, %r18742, 19;
	shf.r.wrap.b32 	%r18745, %r18742, %r18743, 19;
	mov.b64 	%rd3508, {%r18745, %r18744};
	shf.l.wrap.b32 	%r18746, %r18742, %r18743, 3;
	shf.l.wrap.b32 	%r18747, %r18743, %r18742, 3;
	mov.b64 	%rd3509, {%r18747, %r18746};
	shr.u64 	%rd3510, %rd3494, 6;
	xor.b64  	%rd3511, %rd3508, %rd3510;
	xor.b64  	%rd3512, %rd3511, %rd3509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18748,%dummy}, %rd3005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18749}, %rd3005;
	}
	shf.r.wrap.b32 	%r18750, %r18749, %r18748, 1;
	shf.r.wrap.b32 	%r18751, %r18748, %r18749, 1;
	mov.b64 	%rd3513, {%r18751, %r18750};
	shf.r.wrap.b32 	%r18752, %r18749, %r18748, 8;
	shf.r.wrap.b32 	%r18753, %r18748, %r18749, 8;
	mov.b64 	%rd3514, {%r18753, %r18752};
	shr.u64 	%rd3515, %rd3005, 7;
	xor.b64  	%rd3516, %rd3513, %rd3515;
	xor.b64  	%rd3517, %rd3516, %rd3514;
	add.s64 	%rd3518, %rd3429, %rd3004;
	add.s64 	%rd3519, %rd3518, %rd3512;
	add.s64 	%rd3520, %rd3519, %rd3517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18754,%dummy}, %rd3507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18755}, %rd3507;
	}
	shf.r.wrap.b32 	%r18756, %r18755, %r18754, 19;
	shf.r.wrap.b32 	%r18757, %r18754, %r18755, 19;
	mov.b64 	%rd3521, {%r18757, %r18756};
	shf.l.wrap.b32 	%r18758, %r18754, %r18755, 3;
	shf.l.wrap.b32 	%r18759, %r18755, %r18754, 3;
	mov.b64 	%rd3522, {%r18759, %r18758};
	shr.u64 	%rd3523, %rd3507, 6;
	xor.b64  	%rd3524, %rd3521, %rd3523;
	xor.b64  	%rd3525, %rd3524, %rd3522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18760,%dummy}, %rd3006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18761}, %rd3006;
	}
	shf.r.wrap.b32 	%r18762, %r18761, %r18760, 1;
	shf.r.wrap.b32 	%r18763, %r18760, %r18761, 1;
	mov.b64 	%rd3526, {%r18763, %r18762};
	shf.r.wrap.b32 	%r18764, %r18761, %r18760, 8;
	shf.r.wrap.b32 	%r18765, %r18760, %r18761, 8;
	mov.b64 	%rd3527, {%r18765, %r18764};
	shr.u64 	%rd3528, %rd3006, 7;
	xor.b64  	%rd3529, %rd3526, %rd3528;
	xor.b64  	%rd3530, %rd3529, %rd3527;
	add.s64 	%rd3531, %rd3442, %rd3005;
	add.s64 	%rd3532, %rd3531, %rd3525;
	add.s64 	%rd3533, %rd3532, %rd3530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18766,%dummy}, %rd3520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18767}, %rd3520;
	}
	shf.r.wrap.b32 	%r18768, %r18767, %r18766, 19;
	shf.r.wrap.b32 	%r18769, %r18766, %r18767, 19;
	mov.b64 	%rd3534, {%r18769, %r18768};
	shf.l.wrap.b32 	%r18770, %r18766, %r18767, 3;
	shf.l.wrap.b32 	%r18771, %r18767, %r18766, 3;
	mov.b64 	%rd3535, {%r18771, %r18770};
	shr.u64 	%rd3536, %rd3520, 6;
	xor.b64  	%rd3537, %rd3534, %rd3536;
	xor.b64  	%rd3538, %rd3537, %rd3535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18772,%dummy}, %rd3007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18773}, %rd3007;
	}
	shf.r.wrap.b32 	%r18774, %r18773, %r18772, 1;
	shf.r.wrap.b32 	%r18775, %r18772, %r18773, 1;
	mov.b64 	%rd3539, {%r18775, %r18774};
	shf.r.wrap.b32 	%r18776, %r18773, %r18772, 8;
	shf.r.wrap.b32 	%r18777, %r18772, %r18773, 8;
	mov.b64 	%rd3540, {%r18777, %r18776};
	shr.u64 	%rd3541, %rd3007, 7;
	xor.b64  	%rd3542, %rd3539, %rd3541;
	xor.b64  	%rd3543, %rd3542, %rd3540;
	add.s64 	%rd3544, %rd3455, %rd3006;
	add.s64 	%rd3545, %rd3544, %rd3538;
	add.s64 	%rd3546, %rd3545, %rd3543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18778,%dummy}, %rd3533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18779}, %rd3533;
	}
	shf.r.wrap.b32 	%r18780, %r18779, %r18778, 19;
	shf.r.wrap.b32 	%r18781, %r18778, %r18779, 19;
	mov.b64 	%rd3547, {%r18781, %r18780};
	shf.l.wrap.b32 	%r18782, %r18778, %r18779, 3;
	shf.l.wrap.b32 	%r18783, %r18779, %r18778, 3;
	mov.b64 	%rd3548, {%r18783, %r18782};
	shr.u64 	%rd3549, %rd3533, 6;
	xor.b64  	%rd3550, %rd3547, %rd3549;
	xor.b64  	%rd3551, %rd3550, %rd3548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18784,%dummy}, %rd3008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18785}, %rd3008;
	}
	shf.r.wrap.b32 	%r18786, %r18785, %r18784, 1;
	shf.r.wrap.b32 	%r18787, %r18784, %r18785, 1;
	mov.b64 	%rd3552, {%r18787, %r18786};
	shf.r.wrap.b32 	%r18788, %r18785, %r18784, 8;
	shf.r.wrap.b32 	%r18789, %r18784, %r18785, 8;
	mov.b64 	%rd3553, {%r18789, %r18788};
	shr.u64 	%rd3554, %rd3008, 7;
	xor.b64  	%rd3555, %rd3552, %rd3554;
	xor.b64  	%rd3556, %rd3555, %rd3553;
	add.s64 	%rd3557, %rd3468, %rd3007;
	add.s64 	%rd3558, %rd3557, %rd3551;
	add.s64 	%rd3559, %rd3558, %rd3556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18790,%dummy}, %rd3546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18791}, %rd3546;
	}
	shf.r.wrap.b32 	%r18792, %r18791, %r18790, 19;
	shf.r.wrap.b32 	%r18793, %r18790, %r18791, 19;
	mov.b64 	%rd3560, {%r18793, %r18792};
	shf.l.wrap.b32 	%r18794, %r18790, %r18791, 3;
	shf.l.wrap.b32 	%r18795, %r18791, %r18790, 3;
	mov.b64 	%rd3561, {%r18795, %r18794};
	shr.u64 	%rd3562, %rd3546, 6;
	xor.b64  	%rd3563, %rd3560, %rd3562;
	xor.b64  	%rd3564, %rd3563, %rd3561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18796,%dummy}, %rd3009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18797}, %rd3009;
	}
	shf.r.wrap.b32 	%r18798, %r18797, %r18796, 1;
	shf.r.wrap.b32 	%r18799, %r18796, %r18797, 1;
	mov.b64 	%rd3565, {%r18799, %r18798};
	shf.r.wrap.b32 	%r18800, %r18797, %r18796, 8;
	shf.r.wrap.b32 	%r18801, %r18796, %r18797, 8;
	mov.b64 	%rd3566, {%r18801, %r18800};
	shr.u64 	%rd3567, %rd3009, 7;
	xor.b64  	%rd3568, %rd3565, %rd3567;
	xor.b64  	%rd3569, %rd3568, %rd3566;
	add.s64 	%rd3570, %rd3481, %rd3008;
	add.s64 	%rd3571, %rd3570, %rd3564;
	add.s64 	%rd3572, %rd3571, %rd3569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18802,%dummy}, %rd3559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18803}, %rd3559;
	}
	shf.r.wrap.b32 	%r18804, %r18803, %r18802, 19;
	shf.r.wrap.b32 	%r18805, %r18802, %r18803, 19;
	mov.b64 	%rd3573, {%r18805, %r18804};
	shf.l.wrap.b32 	%r18806, %r18802, %r18803, 3;
	shf.l.wrap.b32 	%r18807, %r18803, %r18802, 3;
	mov.b64 	%rd3574, {%r18807, %r18806};
	shr.u64 	%rd3575, %rd3559, 6;
	xor.b64  	%rd3576, %rd3573, %rd3575;
	xor.b64  	%rd3577, %rd3576, %rd3574;
	shf.r.wrap.b32 	%r18808, %r18647, %r18646, 1;
	shf.r.wrap.b32 	%r18809, %r18646, %r18647, 1;
	mov.b64 	%rd3578, {%r18809, %r18808};
	shf.r.wrap.b32 	%r18810, %r18647, %r18646, 8;
	shf.r.wrap.b32 	%r18811, %r18646, %r18647, 8;
	mov.b64 	%rd3579, {%r18811, %r18810};
	shr.u64 	%rd3580, %rd3010, 7;
	xor.b64  	%rd3581, %rd3578, %rd3580;
	xor.b64  	%rd3582, %rd3581, %rd3579;
	add.s64 	%rd3583, %rd3494, %rd3009;
	add.s64 	%rd3584, %rd3583, %rd3577;
	add.s64 	%rd3585, %rd3584, %rd3582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18812,%dummy}, %rd3572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18813}, %rd3572;
	}
	shf.r.wrap.b32 	%r18814, %r18813, %r18812, 19;
	shf.r.wrap.b32 	%r18815, %r18812, %r18813, 19;
	mov.b64 	%rd3586, {%r18815, %r18814};
	shf.l.wrap.b32 	%r18816, %r18812, %r18813, 3;
	shf.l.wrap.b32 	%r18817, %r18813, %r18812, 3;
	mov.b64 	%rd3587, {%r18817, %r18816};
	shr.u64 	%rd3588, %rd3572, 6;
	xor.b64  	%rd3589, %rd3586, %rd3588;
	xor.b64  	%rd3590, %rd3589, %rd3587;
	shf.r.wrap.b32 	%r18818, %r18659, %r18658, 1;
	shf.r.wrap.b32 	%r18819, %r18658, %r18659, 1;
	mov.b64 	%rd3591, {%r18819, %r18818};
	shf.r.wrap.b32 	%r18820, %r18659, %r18658, 8;
	shf.r.wrap.b32 	%r18821, %r18658, %r18659, 8;
	mov.b64 	%rd3592, {%r18821, %r18820};
	shr.u64 	%rd3593, %rd3011, 7;
	xor.b64  	%rd3594, %rd3591, %rd3593;
	xor.b64  	%rd3595, %rd3594, %rd3592;
	add.s64 	%rd3596, %rd3507, %rd3010;
	add.s64 	%rd3597, %rd3596, %rd3590;
	add.s64 	%rd3598, %rd3597, %rd3595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18822,%dummy}, %rd3585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18823}, %rd3585;
	}
	shf.r.wrap.b32 	%r18824, %r18823, %r18822, 19;
	shf.r.wrap.b32 	%r18825, %r18822, %r18823, 19;
	mov.b64 	%rd3599, {%r18825, %r18824};
	shf.l.wrap.b32 	%r18826, %r18822, %r18823, 3;
	shf.l.wrap.b32 	%r18827, %r18823, %r18822, 3;
	mov.b64 	%rd3600, {%r18827, %r18826};
	shr.u64 	%rd3601, %rd3585, 6;
	xor.b64  	%rd3602, %rd3599, %rd3601;
	xor.b64  	%rd3603, %rd3602, %rd3600;
	shf.r.wrap.b32 	%r18828, %r18671, %r18670, 1;
	shf.r.wrap.b32 	%r18829, %r18670, %r18671, 1;
	mov.b64 	%rd3604, {%r18829, %r18828};
	shf.r.wrap.b32 	%r18830, %r18671, %r18670, 8;
	shf.r.wrap.b32 	%r18831, %r18670, %r18671, 8;
	mov.b64 	%rd3605, {%r18831, %r18830};
	shr.u64 	%rd3606, %rd3416, 7;
	xor.b64  	%rd3607, %rd3604, %rd3606;
	xor.b64  	%rd3608, %rd3607, %rd3605;
	add.s64 	%rd3609, %rd3520, %rd3011;
	add.s64 	%rd3610, %rd3609, %rd3603;
	add.s64 	%rd3611, %rd3610, %rd3608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18832,%dummy}, %rd3392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18833}, %rd3392;
	}
	shf.r.wrap.b32 	%r18834, %r18833, %r18832, 14;
	shf.r.wrap.b32 	%r18835, %r18832, %r18833, 14;
	mov.b64 	%rd3612, {%r18835, %r18834};
	shf.r.wrap.b32 	%r18836, %r18833, %r18832, 18;
	shf.r.wrap.b32 	%r18837, %r18832, %r18833, 18;
	mov.b64 	%rd3613, {%r18837, %r18836};
	xor.b64  	%rd3614, %rd3613, %rd3612;
	shf.l.wrap.b32 	%r18838, %r18832, %r18833, 23;
	shf.l.wrap.b32 	%r18839, %r18833, %r18832, 23;
	mov.b64 	%rd3615, {%r18839, %r18838};
	xor.b64  	%rd3616, %rd3614, %rd3615;
	xor.b64  	%rd3617, %rd3368, %rd3344;
	and.b64  	%rd3618, %rd3617, %rd3392;
	xor.b64  	%rd3619, %rd3618, %rd3344;
	add.s64 	%rd3620, %rd3619, %rd3320;
	add.s64 	%rd3621, %rd3620, %rd3416;
	add.s64 	%rd3622, %rd3621, %rd18;
	add.s64 	%rd3623, %rd3622, %rd3616;
	add.s64 	%rd3624, %rd3623, %rd3331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18840,%dummy}, %rd3403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18841}, %rd3403;
	}
	shf.r.wrap.b32 	%r18842, %r18841, %r18840, 28;
	shf.r.wrap.b32 	%r18843, %r18840, %r18841, 28;
	mov.b64 	%rd3625, {%r18843, %r18842};
	shf.l.wrap.b32 	%r18844, %r18840, %r18841, 30;
	shf.l.wrap.b32 	%r18845, %r18841, %r18840, 30;
	mov.b64 	%rd3626, {%r18845, %r18844};
	xor.b64  	%rd3627, %rd3626, %rd3625;
	shf.l.wrap.b32 	%r18846, %r18840, %r18841, 25;
	shf.l.wrap.b32 	%r18847, %r18841, %r18840, 25;
	mov.b64 	%rd3628, {%r18847, %r18846};
	xor.b64  	%rd3629, %rd3627, %rd3628;
	xor.b64  	%rd3630, %rd3403, %rd3355;
	xor.b64  	%rd3631, %rd3403, %rd3379;
	and.b64  	%rd3632, %rd3631, %rd3630;
	xor.b64  	%rd3633, %rd3632, %rd3403;
	add.s64 	%rd3634, %rd3623, %rd3633;
	add.s64 	%rd3635, %rd3634, %rd3629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18848,%dummy}, %rd3624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18849}, %rd3624;
	}
	shf.r.wrap.b32 	%r18850, %r18849, %r18848, 14;
	shf.r.wrap.b32 	%r18851, %r18848, %r18849, 14;
	mov.b64 	%rd3636, {%r18851, %r18850};
	shf.r.wrap.b32 	%r18852, %r18849, %r18848, 18;
	shf.r.wrap.b32 	%r18853, %r18848, %r18849, 18;
	mov.b64 	%rd3637, {%r18853, %r18852};
	xor.b64  	%rd3638, %rd3637, %rd3636;
	shf.l.wrap.b32 	%r18854, %r18848, %r18849, 23;
	shf.l.wrap.b32 	%r18855, %r18849, %r18848, 23;
	mov.b64 	%rd3639, {%r18855, %r18854};
	xor.b64  	%rd3640, %rd3638, %rd3639;
	xor.b64  	%rd3641, %rd3392, %rd3368;
	and.b64  	%rd3642, %rd3624, %rd3641;
	xor.b64  	%rd3643, %rd3642, %rd3368;
	add.s64 	%rd3644, %rd3429, %rd3344;
	add.s64 	%rd3645, %rd3644, %rd19;
	add.s64 	%rd3646, %rd3645, %rd3643;
	add.s64 	%rd3647, %rd3646, %rd3640;
	add.s64 	%rd3648, %rd3647, %rd3355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18856,%dummy}, %rd3635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18857}, %rd3635;
	}
	shf.r.wrap.b32 	%r18858, %r18857, %r18856, 28;
	shf.r.wrap.b32 	%r18859, %r18856, %r18857, 28;
	mov.b64 	%rd3649, {%r18859, %r18858};
	shf.l.wrap.b32 	%r18860, %r18856, %r18857, 30;
	shf.l.wrap.b32 	%r18861, %r18857, %r18856, 30;
	mov.b64 	%rd3650, {%r18861, %r18860};
	xor.b64  	%rd3651, %rd3650, %rd3649;
	shf.l.wrap.b32 	%r18862, %r18856, %r18857, 25;
	shf.l.wrap.b32 	%r18863, %r18857, %r18856, 25;
	mov.b64 	%rd3652, {%r18863, %r18862};
	xor.b64  	%rd3653, %rd3651, %rd3652;
	xor.b64  	%rd3654, %rd3635, %rd3379;
	xor.b64  	%rd3655, %rd3635, %rd3403;
	and.b64  	%rd3656, %rd3655, %rd3654;
	xor.b64  	%rd3657, %rd3656, %rd3635;
	add.s64 	%rd3658, %rd3647, %rd3657;
	add.s64 	%rd3659, %rd3658, %rd3653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18864,%dummy}, %rd3648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18865}, %rd3648;
	}
	shf.r.wrap.b32 	%r18866, %r18865, %r18864, 14;
	shf.r.wrap.b32 	%r18867, %r18864, %r18865, 14;
	mov.b64 	%rd3660, {%r18867, %r18866};
	shf.r.wrap.b32 	%r18868, %r18865, %r18864, 18;
	shf.r.wrap.b32 	%r18869, %r18864, %r18865, 18;
	mov.b64 	%rd3661, {%r18869, %r18868};
	xor.b64  	%rd3662, %rd3661, %rd3660;
	shf.l.wrap.b32 	%r18870, %r18864, %r18865, 23;
	shf.l.wrap.b32 	%r18871, %r18865, %r18864, 23;
	mov.b64 	%rd3663, {%r18871, %r18870};
	xor.b64  	%rd3664, %rd3662, %rd3663;
	xor.b64  	%rd3665, %rd3624, %rd3392;
	and.b64  	%rd3666, %rd3648, %rd3665;
	xor.b64  	%rd3667, %rd3666, %rd3392;
	add.s64 	%rd3668, %rd3442, %rd3368;
	add.s64 	%rd3669, %rd3668, %rd20;
	add.s64 	%rd3670, %rd3669, %rd3667;
	add.s64 	%rd3671, %rd3670, %rd3664;
	add.s64 	%rd3672, %rd3671, %rd3379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18872,%dummy}, %rd3659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18873}, %rd3659;
	}
	shf.r.wrap.b32 	%r18874, %r18873, %r18872, 28;
	shf.r.wrap.b32 	%r18875, %r18872, %r18873, 28;
	mov.b64 	%rd3673, {%r18875, %r18874};
	shf.l.wrap.b32 	%r18876, %r18872, %r18873, 30;
	shf.l.wrap.b32 	%r18877, %r18873, %r18872, 30;
	mov.b64 	%rd3674, {%r18877, %r18876};
	xor.b64  	%rd3675, %rd3674, %rd3673;
	shf.l.wrap.b32 	%r18878, %r18872, %r18873, 25;
	shf.l.wrap.b32 	%r18879, %r18873, %r18872, 25;
	mov.b64 	%rd3676, {%r18879, %r18878};
	xor.b64  	%rd3677, %rd3675, %rd3676;
	xor.b64  	%rd3678, %rd3659, %rd3403;
	xor.b64  	%rd3679, %rd3659, %rd3635;
	and.b64  	%rd3680, %rd3679, %rd3678;
	xor.b64  	%rd3681, %rd3680, %rd3659;
	add.s64 	%rd3682, %rd3671, %rd3681;
	add.s64 	%rd3683, %rd3682, %rd3677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18880,%dummy}, %rd3672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18881}, %rd3672;
	}
	shf.r.wrap.b32 	%r18882, %r18881, %r18880, 14;
	shf.r.wrap.b32 	%r18883, %r18880, %r18881, 14;
	mov.b64 	%rd3684, {%r18883, %r18882};
	shf.r.wrap.b32 	%r18884, %r18881, %r18880, 18;
	shf.r.wrap.b32 	%r18885, %r18880, %r18881, 18;
	mov.b64 	%rd3685, {%r18885, %r18884};
	xor.b64  	%rd3686, %rd3685, %rd3684;
	shf.l.wrap.b32 	%r18886, %r18880, %r18881, 23;
	shf.l.wrap.b32 	%r18887, %r18881, %r18880, 23;
	mov.b64 	%rd3687, {%r18887, %r18886};
	xor.b64  	%rd3688, %rd3686, %rd3687;
	xor.b64  	%rd3689, %rd3648, %rd3624;
	and.b64  	%rd3690, %rd3672, %rd3689;
	xor.b64  	%rd3691, %rd3690, %rd3624;
	add.s64 	%rd3692, %rd3455, %rd3392;
	add.s64 	%rd3693, %rd3692, %rd21;
	add.s64 	%rd3694, %rd3693, %rd3691;
	add.s64 	%rd3695, %rd3694, %rd3688;
	add.s64 	%rd3696, %rd3695, %rd3403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18888,%dummy}, %rd3683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18889}, %rd3683;
	}
	shf.r.wrap.b32 	%r18890, %r18889, %r18888, 28;
	shf.r.wrap.b32 	%r18891, %r18888, %r18889, 28;
	mov.b64 	%rd3697, {%r18891, %r18890};
	shf.l.wrap.b32 	%r18892, %r18888, %r18889, 30;
	shf.l.wrap.b32 	%r18893, %r18889, %r18888, 30;
	mov.b64 	%rd3698, {%r18893, %r18892};
	xor.b64  	%rd3699, %rd3698, %rd3697;
	shf.l.wrap.b32 	%r18894, %r18888, %r18889, 25;
	shf.l.wrap.b32 	%r18895, %r18889, %r18888, 25;
	mov.b64 	%rd3700, {%r18895, %r18894};
	xor.b64  	%rd3701, %rd3699, %rd3700;
	xor.b64  	%rd3702, %rd3683, %rd3635;
	xor.b64  	%rd3703, %rd3683, %rd3659;
	and.b64  	%rd3704, %rd3703, %rd3702;
	xor.b64  	%rd3705, %rd3704, %rd3683;
	add.s64 	%rd3706, %rd3695, %rd3705;
	add.s64 	%rd3707, %rd3706, %rd3701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18896,%dummy}, %rd3696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18897}, %rd3696;
	}
	shf.r.wrap.b32 	%r18898, %r18897, %r18896, 14;
	shf.r.wrap.b32 	%r18899, %r18896, %r18897, 14;
	mov.b64 	%rd3708, {%r18899, %r18898};
	shf.r.wrap.b32 	%r18900, %r18897, %r18896, 18;
	shf.r.wrap.b32 	%r18901, %r18896, %r18897, 18;
	mov.b64 	%rd3709, {%r18901, %r18900};
	xor.b64  	%rd3710, %rd3709, %rd3708;
	shf.l.wrap.b32 	%r18902, %r18896, %r18897, 23;
	shf.l.wrap.b32 	%r18903, %r18897, %r18896, 23;
	mov.b64 	%rd3711, {%r18903, %r18902};
	xor.b64  	%rd3712, %rd3710, %rd3711;
	xor.b64  	%rd3713, %rd3672, %rd3648;
	and.b64  	%rd3714, %rd3696, %rd3713;
	xor.b64  	%rd3715, %rd3714, %rd3648;
	add.s64 	%rd3716, %rd3624, %rd3468;
	add.s64 	%rd3717, %rd3716, %rd22;
	add.s64 	%rd3718, %rd3717, %rd3715;
	add.s64 	%rd3719, %rd3718, %rd3712;
	add.s64 	%rd3720, %rd3719, %rd3635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18904,%dummy}, %rd3707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18905}, %rd3707;
	}
	shf.r.wrap.b32 	%r18906, %r18905, %r18904, 28;
	shf.r.wrap.b32 	%r18907, %r18904, %r18905, 28;
	mov.b64 	%rd3721, {%r18907, %r18906};
	shf.l.wrap.b32 	%r18908, %r18904, %r18905, 30;
	shf.l.wrap.b32 	%r18909, %r18905, %r18904, 30;
	mov.b64 	%rd3722, {%r18909, %r18908};
	xor.b64  	%rd3723, %rd3722, %rd3721;
	shf.l.wrap.b32 	%r18910, %r18904, %r18905, 25;
	shf.l.wrap.b32 	%r18911, %r18905, %r18904, 25;
	mov.b64 	%rd3724, {%r18911, %r18910};
	xor.b64  	%rd3725, %rd3723, %rd3724;
	xor.b64  	%rd3726, %rd3707, %rd3659;
	xor.b64  	%rd3727, %rd3707, %rd3683;
	and.b64  	%rd3728, %rd3727, %rd3726;
	xor.b64  	%rd3729, %rd3728, %rd3707;
	add.s64 	%rd3730, %rd3719, %rd3729;
	add.s64 	%rd3731, %rd3730, %rd3725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18912,%dummy}, %rd3720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18913}, %rd3720;
	}
	shf.r.wrap.b32 	%r18914, %r18913, %r18912, 14;
	shf.r.wrap.b32 	%r18915, %r18912, %r18913, 14;
	mov.b64 	%rd3732, {%r18915, %r18914};
	shf.r.wrap.b32 	%r18916, %r18913, %r18912, 18;
	shf.r.wrap.b32 	%r18917, %r18912, %r18913, 18;
	mov.b64 	%rd3733, {%r18917, %r18916};
	xor.b64  	%rd3734, %rd3733, %rd3732;
	shf.l.wrap.b32 	%r18918, %r18912, %r18913, 23;
	shf.l.wrap.b32 	%r18919, %r18913, %r18912, 23;
	mov.b64 	%rd3735, {%r18919, %r18918};
	xor.b64  	%rd3736, %rd3734, %rd3735;
	xor.b64  	%rd3737, %rd3696, %rd3672;
	and.b64  	%rd3738, %rd3720, %rd3737;
	xor.b64  	%rd3739, %rd3738, %rd3672;
	add.s64 	%rd3740, %rd3648, %rd3481;
	add.s64 	%rd3741, %rd3740, %rd23;
	add.s64 	%rd3742, %rd3741, %rd3739;
	add.s64 	%rd3743, %rd3742, %rd3736;
	add.s64 	%rd3744, %rd3743, %rd3659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18920,%dummy}, %rd3731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18921}, %rd3731;
	}
	shf.r.wrap.b32 	%r18922, %r18921, %r18920, 28;
	shf.r.wrap.b32 	%r18923, %r18920, %r18921, 28;
	mov.b64 	%rd3745, {%r18923, %r18922};
	shf.l.wrap.b32 	%r18924, %r18920, %r18921, 30;
	shf.l.wrap.b32 	%r18925, %r18921, %r18920, 30;
	mov.b64 	%rd3746, {%r18925, %r18924};
	xor.b64  	%rd3747, %rd3746, %rd3745;
	shf.l.wrap.b32 	%r18926, %r18920, %r18921, 25;
	shf.l.wrap.b32 	%r18927, %r18921, %r18920, 25;
	mov.b64 	%rd3748, {%r18927, %r18926};
	xor.b64  	%rd3749, %rd3747, %rd3748;
	xor.b64  	%rd3750, %rd3731, %rd3683;
	xor.b64  	%rd3751, %rd3731, %rd3707;
	and.b64  	%rd3752, %rd3751, %rd3750;
	xor.b64  	%rd3753, %rd3752, %rd3731;
	add.s64 	%rd3754, %rd3743, %rd3753;
	add.s64 	%rd3755, %rd3754, %rd3749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18928,%dummy}, %rd3744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18929}, %rd3744;
	}
	shf.r.wrap.b32 	%r18930, %r18929, %r18928, 14;
	shf.r.wrap.b32 	%r18931, %r18928, %r18929, 14;
	mov.b64 	%rd3756, {%r18931, %r18930};
	shf.r.wrap.b32 	%r18932, %r18929, %r18928, 18;
	shf.r.wrap.b32 	%r18933, %r18928, %r18929, 18;
	mov.b64 	%rd3757, {%r18933, %r18932};
	xor.b64  	%rd3758, %rd3757, %rd3756;
	shf.l.wrap.b32 	%r18934, %r18928, %r18929, 23;
	shf.l.wrap.b32 	%r18935, %r18929, %r18928, 23;
	mov.b64 	%rd3759, {%r18935, %r18934};
	xor.b64  	%rd3760, %rd3758, %rd3759;
	xor.b64  	%rd3761, %rd3720, %rd3696;
	and.b64  	%rd3762, %rd3744, %rd3761;
	xor.b64  	%rd3763, %rd3762, %rd3696;
	add.s64 	%rd3764, %rd3672, %rd3494;
	add.s64 	%rd3765, %rd3764, %rd24;
	add.s64 	%rd3766, %rd3765, %rd3763;
	add.s64 	%rd3767, %rd3766, %rd3760;
	add.s64 	%rd3768, %rd3767, %rd3683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18936,%dummy}, %rd3755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18937}, %rd3755;
	}
	shf.r.wrap.b32 	%r18938, %r18937, %r18936, 28;
	shf.r.wrap.b32 	%r18939, %r18936, %r18937, 28;
	mov.b64 	%rd3769, {%r18939, %r18938};
	shf.l.wrap.b32 	%r18940, %r18936, %r18937, 30;
	shf.l.wrap.b32 	%r18941, %r18937, %r18936, 30;
	mov.b64 	%rd3770, {%r18941, %r18940};
	xor.b64  	%rd3771, %rd3770, %rd3769;
	shf.l.wrap.b32 	%r18942, %r18936, %r18937, 25;
	shf.l.wrap.b32 	%r18943, %r18937, %r18936, 25;
	mov.b64 	%rd3772, {%r18943, %r18942};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	xor.b64  	%rd3774, %rd3755, %rd3707;
	xor.b64  	%rd3775, %rd3755, %rd3731;
	and.b64  	%rd3776, %rd3775, %rd3774;
	xor.b64  	%rd3777, %rd3776, %rd3755;
	add.s64 	%rd3778, %rd3767, %rd3777;
	add.s64 	%rd3779, %rd3778, %rd3773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18944,%dummy}, %rd3768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18945}, %rd3768;
	}
	shf.r.wrap.b32 	%r18946, %r18945, %r18944, 14;
	shf.r.wrap.b32 	%r18947, %r18944, %r18945, 14;
	mov.b64 	%rd3780, {%r18947, %r18946};
	shf.r.wrap.b32 	%r18948, %r18945, %r18944, 18;
	shf.r.wrap.b32 	%r18949, %r18944, %r18945, 18;
	mov.b64 	%rd3781, {%r18949, %r18948};
	xor.b64  	%rd3782, %rd3781, %rd3780;
	shf.l.wrap.b32 	%r18950, %r18944, %r18945, 23;
	shf.l.wrap.b32 	%r18951, %r18945, %r18944, 23;
	mov.b64 	%rd3783, {%r18951, %r18950};
	xor.b64  	%rd3784, %rd3782, %rd3783;
	xor.b64  	%rd3785, %rd3744, %rd3720;
	and.b64  	%rd3786, %rd3768, %rd3785;
	xor.b64  	%rd3787, %rd3786, %rd3720;
	add.s64 	%rd3788, %rd3696, %rd3507;
	add.s64 	%rd3789, %rd3788, %rd25;
	add.s64 	%rd3790, %rd3789, %rd3787;
	add.s64 	%rd3791, %rd3790, %rd3784;
	add.s64 	%rd3792, %rd3791, %rd3707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18952,%dummy}, %rd3779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18953}, %rd3779;
	}
	shf.r.wrap.b32 	%r18954, %r18953, %r18952, 28;
	shf.r.wrap.b32 	%r18955, %r18952, %r18953, 28;
	mov.b64 	%rd3793, {%r18955, %r18954};
	shf.l.wrap.b32 	%r18956, %r18952, %r18953, 30;
	shf.l.wrap.b32 	%r18957, %r18953, %r18952, 30;
	mov.b64 	%rd3794, {%r18957, %r18956};
	xor.b64  	%rd3795, %rd3794, %rd3793;
	shf.l.wrap.b32 	%r18958, %r18952, %r18953, 25;
	shf.l.wrap.b32 	%r18959, %r18953, %r18952, 25;
	mov.b64 	%rd3796, {%r18959, %r18958};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	xor.b64  	%rd3798, %rd3779, %rd3731;
	xor.b64  	%rd3799, %rd3779, %rd3755;
	and.b64  	%rd3800, %rd3799, %rd3798;
	xor.b64  	%rd3801, %rd3800, %rd3779;
	add.s64 	%rd3802, %rd3791, %rd3801;
	add.s64 	%rd3803, %rd3802, %rd3797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18960,%dummy}, %rd3792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18961}, %rd3792;
	}
	shf.r.wrap.b32 	%r18962, %r18961, %r18960, 14;
	shf.r.wrap.b32 	%r18963, %r18960, %r18961, 14;
	mov.b64 	%rd3804, {%r18963, %r18962};
	shf.r.wrap.b32 	%r18964, %r18961, %r18960, 18;
	shf.r.wrap.b32 	%r18965, %r18960, %r18961, 18;
	mov.b64 	%rd3805, {%r18965, %r18964};
	xor.b64  	%rd3806, %rd3805, %rd3804;
	shf.l.wrap.b32 	%r18966, %r18960, %r18961, 23;
	shf.l.wrap.b32 	%r18967, %r18961, %r18960, 23;
	mov.b64 	%rd3807, {%r18967, %r18966};
	xor.b64  	%rd3808, %rd3806, %rd3807;
	xor.b64  	%rd3809, %rd3768, %rd3744;
	and.b64  	%rd3810, %rd3792, %rd3809;
	xor.b64  	%rd3811, %rd3810, %rd3744;
	add.s64 	%rd3812, %rd3720, %rd3520;
	add.s64 	%rd3813, %rd3812, %rd26;
	add.s64 	%rd3814, %rd3813, %rd3811;
	add.s64 	%rd3815, %rd3814, %rd3808;
	add.s64 	%rd3816, %rd3815, %rd3731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18968,%dummy}, %rd3803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18969}, %rd3803;
	}
	shf.r.wrap.b32 	%r18970, %r18969, %r18968, 28;
	shf.r.wrap.b32 	%r18971, %r18968, %r18969, 28;
	mov.b64 	%rd3817, {%r18971, %r18970};
	shf.l.wrap.b32 	%r18972, %r18968, %r18969, 30;
	shf.l.wrap.b32 	%r18973, %r18969, %r18968, 30;
	mov.b64 	%rd3818, {%r18973, %r18972};
	xor.b64  	%rd3819, %rd3818, %rd3817;
	shf.l.wrap.b32 	%r18974, %r18968, %r18969, 25;
	shf.l.wrap.b32 	%r18975, %r18969, %r18968, 25;
	mov.b64 	%rd3820, {%r18975, %r18974};
	xor.b64  	%rd3821, %rd3819, %rd3820;
	xor.b64  	%rd3822, %rd3803, %rd3755;
	xor.b64  	%rd3823, %rd3803, %rd3779;
	and.b64  	%rd3824, %rd3823, %rd3822;
	xor.b64  	%rd3825, %rd3824, %rd3803;
	add.s64 	%rd3826, %rd3815, %rd3825;
	add.s64 	%rd3827, %rd3826, %rd3821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18976,%dummy}, %rd3816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18977}, %rd3816;
	}
	shf.r.wrap.b32 	%r18978, %r18977, %r18976, 14;
	shf.r.wrap.b32 	%r18979, %r18976, %r18977, 14;
	mov.b64 	%rd3828, {%r18979, %r18978};
	shf.r.wrap.b32 	%r18980, %r18977, %r18976, 18;
	shf.r.wrap.b32 	%r18981, %r18976, %r18977, 18;
	mov.b64 	%rd3829, {%r18981, %r18980};
	xor.b64  	%rd3830, %rd3829, %rd3828;
	shf.l.wrap.b32 	%r18982, %r18976, %r18977, 23;
	shf.l.wrap.b32 	%r18983, %r18977, %r18976, 23;
	mov.b64 	%rd3831, {%r18983, %r18982};
	xor.b64  	%rd3832, %rd3830, %rd3831;
	xor.b64  	%rd3833, %rd3792, %rd3768;
	and.b64  	%rd3834, %rd3816, %rd3833;
	xor.b64  	%rd3835, %rd3834, %rd3768;
	add.s64 	%rd3836, %rd3744, %rd3533;
	add.s64 	%rd3837, %rd3836, %rd27;
	add.s64 	%rd3838, %rd3837, %rd3835;
	add.s64 	%rd3839, %rd3838, %rd3832;
	add.s64 	%rd3840, %rd3839, %rd3755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18984,%dummy}, %rd3827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18985}, %rd3827;
	}
	shf.r.wrap.b32 	%r18986, %r18985, %r18984, 28;
	shf.r.wrap.b32 	%r18987, %r18984, %r18985, 28;
	mov.b64 	%rd3841, {%r18987, %r18986};
	shf.l.wrap.b32 	%r18988, %r18984, %r18985, 30;
	shf.l.wrap.b32 	%r18989, %r18985, %r18984, 30;
	mov.b64 	%rd3842, {%r18989, %r18988};
	xor.b64  	%rd3843, %rd3842, %rd3841;
	shf.l.wrap.b32 	%r18990, %r18984, %r18985, 25;
	shf.l.wrap.b32 	%r18991, %r18985, %r18984, 25;
	mov.b64 	%rd3844, {%r18991, %r18990};
	xor.b64  	%rd3845, %rd3843, %rd3844;
	xor.b64  	%rd3846, %rd3827, %rd3779;
	xor.b64  	%rd3847, %rd3827, %rd3803;
	and.b64  	%rd3848, %rd3847, %rd3846;
	xor.b64  	%rd3849, %rd3848, %rd3827;
	add.s64 	%rd3850, %rd3839, %rd3849;
	add.s64 	%rd3851, %rd3850, %rd3845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18992,%dummy}, %rd3840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18993}, %rd3840;
	}
	shf.r.wrap.b32 	%r18994, %r18993, %r18992, 14;
	shf.r.wrap.b32 	%r18995, %r18992, %r18993, 14;
	mov.b64 	%rd3852, {%r18995, %r18994};
	shf.r.wrap.b32 	%r18996, %r18993, %r18992, 18;
	shf.r.wrap.b32 	%r18997, %r18992, %r18993, 18;
	mov.b64 	%rd3853, {%r18997, %r18996};
	xor.b64  	%rd3854, %rd3853, %rd3852;
	shf.l.wrap.b32 	%r18998, %r18992, %r18993, 23;
	shf.l.wrap.b32 	%r18999, %r18993, %r18992, 23;
	mov.b64 	%rd3855, {%r18999, %r18998};
	xor.b64  	%rd3856, %rd3854, %rd3855;
	xor.b64  	%rd3857, %rd3816, %rd3792;
	and.b64  	%rd3858, %rd3840, %rd3857;
	xor.b64  	%rd3859, %rd3858, %rd3792;
	add.s64 	%rd3860, %rd3768, %rd3546;
	add.s64 	%rd3861, %rd3860, %rd28;
	add.s64 	%rd3862, %rd3861, %rd3859;
	add.s64 	%rd3863, %rd3862, %rd3856;
	add.s64 	%rd3864, %rd3863, %rd3779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19000,%dummy}, %rd3851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19001}, %rd3851;
	}
	shf.r.wrap.b32 	%r19002, %r19001, %r19000, 28;
	shf.r.wrap.b32 	%r19003, %r19000, %r19001, 28;
	mov.b64 	%rd3865, {%r19003, %r19002};
	shf.l.wrap.b32 	%r19004, %r19000, %r19001, 30;
	shf.l.wrap.b32 	%r19005, %r19001, %r19000, 30;
	mov.b64 	%rd3866, {%r19005, %r19004};
	xor.b64  	%rd3867, %rd3866, %rd3865;
	shf.l.wrap.b32 	%r19006, %r19000, %r19001, 25;
	shf.l.wrap.b32 	%r19007, %r19001, %r19000, 25;
	mov.b64 	%rd3868, {%r19007, %r19006};
	xor.b64  	%rd3869, %rd3867, %rd3868;
	xor.b64  	%rd3870, %rd3851, %rd3803;
	xor.b64  	%rd3871, %rd3851, %rd3827;
	and.b64  	%rd3872, %rd3871, %rd3870;
	xor.b64  	%rd3873, %rd3872, %rd3851;
	add.s64 	%rd3874, %rd3863, %rd3873;
	add.s64 	%rd3875, %rd3874, %rd3869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19008,%dummy}, %rd3864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19009}, %rd3864;
	}
	shf.r.wrap.b32 	%r19010, %r19009, %r19008, 14;
	shf.r.wrap.b32 	%r19011, %r19008, %r19009, 14;
	mov.b64 	%rd3876, {%r19011, %r19010};
	shf.r.wrap.b32 	%r19012, %r19009, %r19008, 18;
	shf.r.wrap.b32 	%r19013, %r19008, %r19009, 18;
	mov.b64 	%rd3877, {%r19013, %r19012};
	xor.b64  	%rd3878, %rd3877, %rd3876;
	shf.l.wrap.b32 	%r19014, %r19008, %r19009, 23;
	shf.l.wrap.b32 	%r19015, %r19009, %r19008, 23;
	mov.b64 	%rd3879, {%r19015, %r19014};
	xor.b64  	%rd3880, %rd3878, %rd3879;
	xor.b64  	%rd3881, %rd3840, %rd3816;
	and.b64  	%rd3882, %rd3864, %rd3881;
	xor.b64  	%rd3883, %rd3882, %rd3816;
	add.s64 	%rd3884, %rd3792, %rd3559;
	add.s64 	%rd3885, %rd3884, %rd29;
	add.s64 	%rd3886, %rd3885, %rd3883;
	add.s64 	%rd3887, %rd3886, %rd3880;
	add.s64 	%rd3888, %rd3887, %rd3803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19016,%dummy}, %rd3875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19017}, %rd3875;
	}
	shf.r.wrap.b32 	%r19018, %r19017, %r19016, 28;
	shf.r.wrap.b32 	%r19019, %r19016, %r19017, 28;
	mov.b64 	%rd3889, {%r19019, %r19018};
	shf.l.wrap.b32 	%r19020, %r19016, %r19017, 30;
	shf.l.wrap.b32 	%r19021, %r19017, %r19016, 30;
	mov.b64 	%rd3890, {%r19021, %r19020};
	xor.b64  	%rd3891, %rd3890, %rd3889;
	shf.l.wrap.b32 	%r19022, %r19016, %r19017, 25;
	shf.l.wrap.b32 	%r19023, %r19017, %r19016, 25;
	mov.b64 	%rd3892, {%r19023, %r19022};
	xor.b64  	%rd3893, %rd3891, %rd3892;
	xor.b64  	%rd3894, %rd3875, %rd3827;
	xor.b64  	%rd3895, %rd3875, %rd3851;
	and.b64  	%rd3896, %rd3895, %rd3894;
	xor.b64  	%rd3897, %rd3896, %rd3875;
	add.s64 	%rd3898, %rd3887, %rd3897;
	add.s64 	%rd3899, %rd3898, %rd3893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19024,%dummy}, %rd3888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19025}, %rd3888;
	}
	shf.r.wrap.b32 	%r19026, %r19025, %r19024, 14;
	shf.r.wrap.b32 	%r19027, %r19024, %r19025, 14;
	mov.b64 	%rd3900, {%r19027, %r19026};
	shf.r.wrap.b32 	%r19028, %r19025, %r19024, 18;
	shf.r.wrap.b32 	%r19029, %r19024, %r19025, 18;
	mov.b64 	%rd3901, {%r19029, %r19028};
	xor.b64  	%rd3902, %rd3901, %rd3900;
	shf.l.wrap.b32 	%r19030, %r19024, %r19025, 23;
	shf.l.wrap.b32 	%r19031, %r19025, %r19024, 23;
	mov.b64 	%rd3903, {%r19031, %r19030};
	xor.b64  	%rd3904, %rd3902, %rd3903;
	xor.b64  	%rd3905, %rd3864, %rd3840;
	and.b64  	%rd3906, %rd3888, %rd3905;
	xor.b64  	%rd3907, %rd3906, %rd3840;
	add.s64 	%rd3908, %rd3816, %rd3572;
	add.s64 	%rd3909, %rd3908, %rd30;
	add.s64 	%rd3910, %rd3909, %rd3907;
	add.s64 	%rd3911, %rd3910, %rd3904;
	add.s64 	%rd3912, %rd3911, %rd3827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19032,%dummy}, %rd3899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19033}, %rd3899;
	}
	shf.r.wrap.b32 	%r19034, %r19033, %r19032, 28;
	shf.r.wrap.b32 	%r19035, %r19032, %r19033, 28;
	mov.b64 	%rd3913, {%r19035, %r19034};
	shf.l.wrap.b32 	%r19036, %r19032, %r19033, 30;
	shf.l.wrap.b32 	%r19037, %r19033, %r19032, 30;
	mov.b64 	%rd3914, {%r19037, %r19036};
	xor.b64  	%rd3915, %rd3914, %rd3913;
	shf.l.wrap.b32 	%r19038, %r19032, %r19033, 25;
	shf.l.wrap.b32 	%r19039, %r19033, %r19032, 25;
	mov.b64 	%rd3916, {%r19039, %r19038};
	xor.b64  	%rd3917, %rd3915, %rd3916;
	xor.b64  	%rd3918, %rd3899, %rd3851;
	xor.b64  	%rd3919, %rd3899, %rd3875;
	and.b64  	%rd3920, %rd3919, %rd3918;
	xor.b64  	%rd3921, %rd3920, %rd3899;
	add.s64 	%rd3922, %rd3911, %rd3921;
	add.s64 	%rd3923, %rd3922, %rd3917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19040,%dummy}, %rd3912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19041}, %rd3912;
	}
	shf.r.wrap.b32 	%r19042, %r19041, %r19040, 14;
	shf.r.wrap.b32 	%r19043, %r19040, %r19041, 14;
	mov.b64 	%rd3924, {%r19043, %r19042};
	shf.r.wrap.b32 	%r19044, %r19041, %r19040, 18;
	shf.r.wrap.b32 	%r19045, %r19040, %r19041, 18;
	mov.b64 	%rd3925, {%r19045, %r19044};
	xor.b64  	%rd3926, %rd3925, %rd3924;
	shf.l.wrap.b32 	%r19046, %r19040, %r19041, 23;
	shf.l.wrap.b32 	%r19047, %r19041, %r19040, 23;
	mov.b64 	%rd3927, {%r19047, %r19046};
	xor.b64  	%rd3928, %rd3926, %rd3927;
	xor.b64  	%rd3929, %rd3888, %rd3864;
	and.b64  	%rd3930, %rd3912, %rd3929;
	xor.b64  	%rd3931, %rd3930, %rd3864;
	add.s64 	%rd3932, %rd3840, %rd3585;
	add.s64 	%rd3933, %rd3932, %rd31;
	add.s64 	%rd3934, %rd3933, %rd3931;
	add.s64 	%rd3935, %rd3934, %rd3928;
	add.s64 	%rd3936, %rd3935, %rd3851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19048,%dummy}, %rd3923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19049}, %rd3923;
	}
	shf.r.wrap.b32 	%r19050, %r19049, %r19048, 28;
	shf.r.wrap.b32 	%r19051, %r19048, %r19049, 28;
	mov.b64 	%rd3937, {%r19051, %r19050};
	shf.l.wrap.b32 	%r19052, %r19048, %r19049, 30;
	shf.l.wrap.b32 	%r19053, %r19049, %r19048, 30;
	mov.b64 	%rd3938, {%r19053, %r19052};
	xor.b64  	%rd3939, %rd3938, %rd3937;
	shf.l.wrap.b32 	%r19054, %r19048, %r19049, 25;
	shf.l.wrap.b32 	%r19055, %r19049, %r19048, 25;
	mov.b64 	%rd3940, {%r19055, %r19054};
	xor.b64  	%rd3941, %rd3939, %rd3940;
	xor.b64  	%rd3942, %rd3923, %rd3875;
	xor.b64  	%rd3943, %rd3923, %rd3899;
	and.b64  	%rd3944, %rd3943, %rd3942;
	xor.b64  	%rd3945, %rd3944, %rd3923;
	add.s64 	%rd3946, %rd3935, %rd3945;
	add.s64 	%rd3947, %rd3946, %rd3941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19056,%dummy}, %rd3936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19057}, %rd3936;
	}
	shf.r.wrap.b32 	%r19058, %r19057, %r19056, 14;
	shf.r.wrap.b32 	%r19059, %r19056, %r19057, 14;
	mov.b64 	%rd3948, {%r19059, %r19058};
	shf.r.wrap.b32 	%r19060, %r19057, %r19056, 18;
	shf.r.wrap.b32 	%r19061, %r19056, %r19057, 18;
	mov.b64 	%rd3949, {%r19061, %r19060};
	xor.b64  	%rd3950, %rd3949, %rd3948;
	shf.l.wrap.b32 	%r19062, %r19056, %r19057, 23;
	shf.l.wrap.b32 	%r19063, %r19057, %r19056, 23;
	mov.b64 	%rd3951, {%r19063, %r19062};
	xor.b64  	%rd3952, %rd3950, %rd3951;
	xor.b64  	%rd3953, %rd3912, %rd3888;
	and.b64  	%rd3954, %rd3936, %rd3953;
	xor.b64  	%rd3955, %rd3954, %rd3888;
	add.s64 	%rd3956, %rd3864, %rd3598;
	add.s64 	%rd3957, %rd3956, %rd32;
	add.s64 	%rd3958, %rd3957, %rd3955;
	add.s64 	%rd3959, %rd3958, %rd3952;
	add.s64 	%rd3960, %rd3959, %rd3875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19064,%dummy}, %rd3947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19065}, %rd3947;
	}
	shf.r.wrap.b32 	%r19066, %r19065, %r19064, 28;
	shf.r.wrap.b32 	%r19067, %r19064, %r19065, 28;
	mov.b64 	%rd3961, {%r19067, %r19066};
	shf.l.wrap.b32 	%r19068, %r19064, %r19065, 30;
	shf.l.wrap.b32 	%r19069, %r19065, %r19064, 30;
	mov.b64 	%rd3962, {%r19069, %r19068};
	xor.b64  	%rd3963, %rd3962, %rd3961;
	shf.l.wrap.b32 	%r19070, %r19064, %r19065, 25;
	shf.l.wrap.b32 	%r19071, %r19065, %r19064, 25;
	mov.b64 	%rd3964, {%r19071, %r19070};
	xor.b64  	%rd3965, %rd3963, %rd3964;
	xor.b64  	%rd3966, %rd3947, %rd3899;
	xor.b64  	%rd3967, %rd3947, %rd3923;
	and.b64  	%rd3968, %rd3967, %rd3966;
	xor.b64  	%rd3969, %rd3968, %rd3947;
	add.s64 	%rd3970, %rd3959, %rd3969;
	add.s64 	%rd3971, %rd3970, %rd3965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19072,%dummy}, %rd3960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19073}, %rd3960;
	}
	shf.r.wrap.b32 	%r19074, %r19073, %r19072, 14;
	shf.r.wrap.b32 	%r19075, %r19072, %r19073, 14;
	mov.b64 	%rd3972, {%r19075, %r19074};
	shf.r.wrap.b32 	%r19076, %r19073, %r19072, 18;
	shf.r.wrap.b32 	%r19077, %r19072, %r19073, 18;
	mov.b64 	%rd3973, {%r19077, %r19076};
	xor.b64  	%rd3974, %rd3973, %rd3972;
	shf.l.wrap.b32 	%r19078, %r19072, %r19073, 23;
	shf.l.wrap.b32 	%r19079, %r19073, %r19072, 23;
	mov.b64 	%rd3975, {%r19079, %r19078};
	xor.b64  	%rd3976, %rd3974, %rd3975;
	xor.b64  	%rd3977, %rd3936, %rd3912;
	and.b64  	%rd3978, %rd3960, %rd3977;
	xor.b64  	%rd3979, %rd3978, %rd3912;
	add.s64 	%rd3980, %rd3888, %rd3611;
	add.s64 	%rd3981, %rd3980, %rd33;
	add.s64 	%rd3982, %rd3981, %rd3979;
	add.s64 	%rd3983, %rd3982, %rd3976;
	add.s64 	%rd3984, %rd3983, %rd3899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19080,%dummy}, %rd3971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19081}, %rd3971;
	}
	shf.r.wrap.b32 	%r19082, %r19081, %r19080, 28;
	shf.r.wrap.b32 	%r19083, %r19080, %r19081, 28;
	mov.b64 	%rd3985, {%r19083, %r19082};
	shf.l.wrap.b32 	%r19084, %r19080, %r19081, 30;
	shf.l.wrap.b32 	%r19085, %r19081, %r19080, 30;
	mov.b64 	%rd3986, {%r19085, %r19084};
	xor.b64  	%rd3987, %rd3986, %rd3985;
	shf.l.wrap.b32 	%r19086, %r19080, %r19081, 25;
	shf.l.wrap.b32 	%r19087, %r19081, %r19080, 25;
	mov.b64 	%rd3988, {%r19087, %r19086};
	xor.b64  	%rd3989, %rd3987, %rd3988;
	xor.b64  	%rd3990, %rd3971, %rd3923;
	xor.b64  	%rd3991, %rd3971, %rd3947;
	and.b64  	%rd3992, %rd3991, %rd3990;
	xor.b64  	%rd3993, %rd3992, %rd3971;
	add.s64 	%rd3994, %rd3983, %rd3993;
	add.s64 	%rd3995, %rd3994, %rd3989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19088,%dummy}, %rd3598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19089}, %rd3598;
	}
	shf.r.wrap.b32 	%r19090, %r19089, %r19088, 19;
	shf.r.wrap.b32 	%r19091, %r19088, %r19089, 19;
	mov.b64 	%rd3996, {%r19091, %r19090};
	shf.l.wrap.b32 	%r19092, %r19088, %r19089, 3;
	shf.l.wrap.b32 	%r19093, %r19089, %r19088, 3;
	mov.b64 	%rd3997, {%r19093, %r19092};
	shr.u64 	%rd3998, %rd3598, 6;
	xor.b64  	%rd3999, %rd3996, %rd3998;
	xor.b64  	%rd4000, %rd3999, %rd3997;
	shf.r.wrap.b32 	%r19094, %r18683, %r18682, 1;
	shf.r.wrap.b32 	%r19095, %r18682, %r18683, 1;
	mov.b64 	%rd4001, {%r19095, %r19094};
	shf.r.wrap.b32 	%r19096, %r18683, %r18682, 8;
	shf.r.wrap.b32 	%r19097, %r18682, %r18683, 8;
	mov.b64 	%rd4002, {%r19097, %r19096};
	shr.u64 	%rd4003, %rd3429, 7;
	xor.b64  	%rd4004, %rd4001, %rd4003;
	xor.b64  	%rd4005, %rd4004, %rd4002;
	add.s64 	%rd4006, %rd3533, %rd3416;
	add.s64 	%rd4007, %rd4006, %rd4000;
	add.s64 	%rd4008, %rd4007, %rd4005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19098,%dummy}, %rd3611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19099}, %rd3611;
	}
	shf.r.wrap.b32 	%r19100, %r19099, %r19098, 19;
	shf.r.wrap.b32 	%r19101, %r19098, %r19099, 19;
	mov.b64 	%rd4009, {%r19101, %r19100};
	shf.l.wrap.b32 	%r19102, %r19098, %r19099, 3;
	shf.l.wrap.b32 	%r19103, %r19099, %r19098, 3;
	mov.b64 	%rd4010, {%r19103, %r19102};
	shr.u64 	%rd4011, %rd3611, 6;
	xor.b64  	%rd4012, %rd4009, %rd4011;
	xor.b64  	%rd4013, %rd4012, %rd4010;
	shf.r.wrap.b32 	%r19104, %r18695, %r18694, 1;
	shf.r.wrap.b32 	%r19105, %r18694, %r18695, 1;
	mov.b64 	%rd4014, {%r19105, %r19104};
	shf.r.wrap.b32 	%r19106, %r18695, %r18694, 8;
	shf.r.wrap.b32 	%r19107, %r18694, %r18695, 8;
	mov.b64 	%rd4015, {%r19107, %r19106};
	shr.u64 	%rd4016, %rd3442, 7;
	xor.b64  	%rd4017, %rd4014, %rd4016;
	xor.b64  	%rd4018, %rd4017, %rd4015;
	add.s64 	%rd4019, %rd3546, %rd3429;
	add.s64 	%rd4020, %rd4019, %rd4013;
	add.s64 	%rd4021, %rd4020, %rd4018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19108,%dummy}, %rd4008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19109}, %rd4008;
	}
	shf.r.wrap.b32 	%r19110, %r19109, %r19108, 19;
	shf.r.wrap.b32 	%r19111, %r19108, %r19109, 19;
	mov.b64 	%rd4022, {%r19111, %r19110};
	shf.l.wrap.b32 	%r19112, %r19108, %r19109, 3;
	shf.l.wrap.b32 	%r19113, %r19109, %r19108, 3;
	mov.b64 	%rd4023, {%r19113, %r19112};
	shr.u64 	%rd4024, %rd4008, 6;
	xor.b64  	%rd4025, %rd4022, %rd4024;
	xor.b64  	%rd4026, %rd4025, %rd4023;
	shf.r.wrap.b32 	%r19114, %r18707, %r18706, 1;
	shf.r.wrap.b32 	%r19115, %r18706, %r18707, 1;
	mov.b64 	%rd4027, {%r19115, %r19114};
	shf.r.wrap.b32 	%r19116, %r18707, %r18706, 8;
	shf.r.wrap.b32 	%r19117, %r18706, %r18707, 8;
	mov.b64 	%rd4028, {%r19117, %r19116};
	shr.u64 	%rd4029, %rd3455, 7;
	xor.b64  	%rd4030, %rd4027, %rd4029;
	xor.b64  	%rd4031, %rd4030, %rd4028;
	add.s64 	%rd4032, %rd3559, %rd3442;
	add.s64 	%rd4033, %rd4032, %rd4026;
	add.s64 	%rd4034, %rd4033, %rd4031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19118,%dummy}, %rd4021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19119}, %rd4021;
	}
	shf.r.wrap.b32 	%r19120, %r19119, %r19118, 19;
	shf.r.wrap.b32 	%r19121, %r19118, %r19119, 19;
	mov.b64 	%rd4035, {%r19121, %r19120};
	shf.l.wrap.b32 	%r19122, %r19118, %r19119, 3;
	shf.l.wrap.b32 	%r19123, %r19119, %r19118, 3;
	mov.b64 	%rd4036, {%r19123, %r19122};
	shr.u64 	%rd4037, %rd4021, 6;
	xor.b64  	%rd4038, %rd4035, %rd4037;
	xor.b64  	%rd4039, %rd4038, %rd4036;
	shf.r.wrap.b32 	%r19124, %r18719, %r18718, 1;
	shf.r.wrap.b32 	%r19125, %r18718, %r18719, 1;
	mov.b64 	%rd4040, {%r19125, %r19124};
	shf.r.wrap.b32 	%r19126, %r18719, %r18718, 8;
	shf.r.wrap.b32 	%r19127, %r18718, %r18719, 8;
	mov.b64 	%rd4041, {%r19127, %r19126};
	shr.u64 	%rd4042, %rd3468, 7;
	xor.b64  	%rd4043, %rd4040, %rd4042;
	xor.b64  	%rd4044, %rd4043, %rd4041;
	add.s64 	%rd4045, %rd3572, %rd3455;
	add.s64 	%rd4046, %rd4045, %rd4039;
	add.s64 	%rd4047, %rd4046, %rd4044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19128,%dummy}, %rd4034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19129}, %rd4034;
	}
	shf.r.wrap.b32 	%r19130, %r19129, %r19128, 19;
	shf.r.wrap.b32 	%r19131, %r19128, %r19129, 19;
	mov.b64 	%rd4048, {%r19131, %r19130};
	shf.l.wrap.b32 	%r19132, %r19128, %r19129, 3;
	shf.l.wrap.b32 	%r19133, %r19129, %r19128, 3;
	mov.b64 	%rd4049, {%r19133, %r19132};
	shr.u64 	%rd4050, %rd4034, 6;
	xor.b64  	%rd4051, %rd4048, %rd4050;
	xor.b64  	%rd4052, %rd4051, %rd4049;
	shf.r.wrap.b32 	%r19134, %r18731, %r18730, 1;
	shf.r.wrap.b32 	%r19135, %r18730, %r18731, 1;
	mov.b64 	%rd4053, {%r19135, %r19134};
	shf.r.wrap.b32 	%r19136, %r18731, %r18730, 8;
	shf.r.wrap.b32 	%r19137, %r18730, %r18731, 8;
	mov.b64 	%rd4054, {%r19137, %r19136};
	shr.u64 	%rd4055, %rd3481, 7;
	xor.b64  	%rd4056, %rd4053, %rd4055;
	xor.b64  	%rd4057, %rd4056, %rd4054;
	add.s64 	%rd4058, %rd3585, %rd3468;
	add.s64 	%rd4059, %rd4058, %rd4052;
	add.s64 	%rd4060, %rd4059, %rd4057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19138,%dummy}, %rd4047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19139}, %rd4047;
	}
	shf.r.wrap.b32 	%r19140, %r19139, %r19138, 19;
	shf.r.wrap.b32 	%r19141, %r19138, %r19139, 19;
	mov.b64 	%rd4061, {%r19141, %r19140};
	shf.l.wrap.b32 	%r19142, %r19138, %r19139, 3;
	shf.l.wrap.b32 	%r19143, %r19139, %r19138, 3;
	mov.b64 	%rd4062, {%r19143, %r19142};
	shr.u64 	%rd4063, %rd4047, 6;
	xor.b64  	%rd4064, %rd4061, %rd4063;
	xor.b64  	%rd4065, %rd4064, %rd4062;
	shf.r.wrap.b32 	%r19144, %r18743, %r18742, 1;
	shf.r.wrap.b32 	%r19145, %r18742, %r18743, 1;
	mov.b64 	%rd4066, {%r19145, %r19144};
	shf.r.wrap.b32 	%r19146, %r18743, %r18742, 8;
	shf.r.wrap.b32 	%r19147, %r18742, %r18743, 8;
	mov.b64 	%rd4067, {%r19147, %r19146};
	shr.u64 	%rd4068, %rd3494, 7;
	xor.b64  	%rd4069, %rd4066, %rd4068;
	xor.b64  	%rd4070, %rd4069, %rd4067;
	add.s64 	%rd4071, %rd3598, %rd3481;
	add.s64 	%rd4072, %rd4071, %rd4065;
	add.s64 	%rd4073, %rd4072, %rd4070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19148,%dummy}, %rd4060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19149}, %rd4060;
	}
	shf.r.wrap.b32 	%r19150, %r19149, %r19148, 19;
	shf.r.wrap.b32 	%r19151, %r19148, %r19149, 19;
	mov.b64 	%rd4074, {%r19151, %r19150};
	shf.l.wrap.b32 	%r19152, %r19148, %r19149, 3;
	shf.l.wrap.b32 	%r19153, %r19149, %r19148, 3;
	mov.b64 	%rd4075, {%r19153, %r19152};
	shr.u64 	%rd4076, %rd4060, 6;
	xor.b64  	%rd4077, %rd4074, %rd4076;
	xor.b64  	%rd4078, %rd4077, %rd4075;
	shf.r.wrap.b32 	%r19154, %r18755, %r18754, 1;
	shf.r.wrap.b32 	%r19155, %r18754, %r18755, 1;
	mov.b64 	%rd4079, {%r19155, %r19154};
	shf.r.wrap.b32 	%r19156, %r18755, %r18754, 8;
	shf.r.wrap.b32 	%r19157, %r18754, %r18755, 8;
	mov.b64 	%rd4080, {%r19157, %r19156};
	shr.u64 	%rd4081, %rd3507, 7;
	xor.b64  	%rd4082, %rd4079, %rd4081;
	xor.b64  	%rd4083, %rd4082, %rd4080;
	add.s64 	%rd4084, %rd3611, %rd3494;
	add.s64 	%rd4085, %rd4084, %rd4078;
	add.s64 	%rd4086, %rd4085, %rd4083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19158,%dummy}, %rd4073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19159}, %rd4073;
	}
	shf.r.wrap.b32 	%r19160, %r19159, %r19158, 19;
	shf.r.wrap.b32 	%r19161, %r19158, %r19159, 19;
	mov.b64 	%rd4087, {%r19161, %r19160};
	shf.l.wrap.b32 	%r19162, %r19158, %r19159, 3;
	shf.l.wrap.b32 	%r19163, %r19159, %r19158, 3;
	mov.b64 	%rd4088, {%r19163, %r19162};
	shr.u64 	%rd4089, %rd4073, 6;
	xor.b64  	%rd4090, %rd4087, %rd4089;
	xor.b64  	%rd4091, %rd4090, %rd4088;
	shf.r.wrap.b32 	%r19164, %r18767, %r18766, 1;
	shf.r.wrap.b32 	%r19165, %r18766, %r18767, 1;
	mov.b64 	%rd4092, {%r19165, %r19164};
	shf.r.wrap.b32 	%r19166, %r18767, %r18766, 8;
	shf.r.wrap.b32 	%r19167, %r18766, %r18767, 8;
	mov.b64 	%rd4093, {%r19167, %r19166};
	shr.u64 	%rd4094, %rd3520, 7;
	xor.b64  	%rd4095, %rd4092, %rd4094;
	xor.b64  	%rd4096, %rd4095, %rd4093;
	add.s64 	%rd4097, %rd4008, %rd3507;
	add.s64 	%rd4098, %rd4097, %rd4091;
	add.s64 	%rd4099, %rd4098, %rd4096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19168,%dummy}, %rd4086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19169}, %rd4086;
	}
	shf.r.wrap.b32 	%r19170, %r19169, %r19168, 19;
	shf.r.wrap.b32 	%r19171, %r19168, %r19169, 19;
	mov.b64 	%rd4100, {%r19171, %r19170};
	shf.l.wrap.b32 	%r19172, %r19168, %r19169, 3;
	shf.l.wrap.b32 	%r19173, %r19169, %r19168, 3;
	mov.b64 	%rd4101, {%r19173, %r19172};
	shr.u64 	%rd4102, %rd4086, 6;
	xor.b64  	%rd4103, %rd4100, %rd4102;
	xor.b64  	%rd4104, %rd4103, %rd4101;
	shf.r.wrap.b32 	%r19174, %r18779, %r18778, 1;
	shf.r.wrap.b32 	%r19175, %r18778, %r18779, 1;
	mov.b64 	%rd4105, {%r19175, %r19174};
	shf.r.wrap.b32 	%r19176, %r18779, %r18778, 8;
	shf.r.wrap.b32 	%r19177, %r18778, %r18779, 8;
	mov.b64 	%rd4106, {%r19177, %r19176};
	shr.u64 	%rd4107, %rd3533, 7;
	xor.b64  	%rd4108, %rd4105, %rd4107;
	xor.b64  	%rd4109, %rd4108, %rd4106;
	add.s64 	%rd4110, %rd4021, %rd3520;
	add.s64 	%rd4111, %rd4110, %rd4104;
	add.s64 	%rd4112, %rd4111, %rd4109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19178,%dummy}, %rd4099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19179}, %rd4099;
	}
	shf.r.wrap.b32 	%r19180, %r19179, %r19178, 19;
	shf.r.wrap.b32 	%r19181, %r19178, %r19179, 19;
	mov.b64 	%rd4113, {%r19181, %r19180};
	shf.l.wrap.b32 	%r19182, %r19178, %r19179, 3;
	shf.l.wrap.b32 	%r19183, %r19179, %r19178, 3;
	mov.b64 	%rd4114, {%r19183, %r19182};
	shr.u64 	%rd4115, %rd4099, 6;
	xor.b64  	%rd4116, %rd4113, %rd4115;
	xor.b64  	%rd4117, %rd4116, %rd4114;
	shf.r.wrap.b32 	%r19184, %r18791, %r18790, 1;
	shf.r.wrap.b32 	%r19185, %r18790, %r18791, 1;
	mov.b64 	%rd4118, {%r19185, %r19184};
	shf.r.wrap.b32 	%r19186, %r18791, %r18790, 8;
	shf.r.wrap.b32 	%r19187, %r18790, %r18791, 8;
	mov.b64 	%rd4119, {%r19187, %r19186};
	shr.u64 	%rd4120, %rd3546, 7;
	xor.b64  	%rd4121, %rd4118, %rd4120;
	xor.b64  	%rd4122, %rd4121, %rd4119;
	add.s64 	%rd4123, %rd4034, %rd3533;
	add.s64 	%rd4124, %rd4123, %rd4117;
	add.s64 	%rd4125, %rd4124, %rd4122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19188,%dummy}, %rd4112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19189}, %rd4112;
	}
	shf.r.wrap.b32 	%r19190, %r19189, %r19188, 19;
	shf.r.wrap.b32 	%r19191, %r19188, %r19189, 19;
	mov.b64 	%rd4126, {%r19191, %r19190};
	shf.l.wrap.b32 	%r19192, %r19188, %r19189, 3;
	shf.l.wrap.b32 	%r19193, %r19189, %r19188, 3;
	mov.b64 	%rd4127, {%r19193, %r19192};
	shr.u64 	%rd4128, %rd4112, 6;
	xor.b64  	%rd4129, %rd4126, %rd4128;
	xor.b64  	%rd4130, %rd4129, %rd4127;
	shf.r.wrap.b32 	%r19194, %r18803, %r18802, 1;
	shf.r.wrap.b32 	%r19195, %r18802, %r18803, 1;
	mov.b64 	%rd4131, {%r19195, %r19194};
	shf.r.wrap.b32 	%r19196, %r18803, %r18802, 8;
	shf.r.wrap.b32 	%r19197, %r18802, %r18803, 8;
	mov.b64 	%rd4132, {%r19197, %r19196};
	shr.u64 	%rd4133, %rd3559, 7;
	xor.b64  	%rd4134, %rd4131, %rd4133;
	xor.b64  	%rd4135, %rd4134, %rd4132;
	add.s64 	%rd4136, %rd4047, %rd3546;
	add.s64 	%rd4137, %rd4136, %rd4130;
	add.s64 	%rd4138, %rd4137, %rd4135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19198,%dummy}, %rd4125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19199}, %rd4125;
	}
	shf.r.wrap.b32 	%r19200, %r19199, %r19198, 19;
	shf.r.wrap.b32 	%r19201, %r19198, %r19199, 19;
	mov.b64 	%rd4139, {%r19201, %r19200};
	shf.l.wrap.b32 	%r19202, %r19198, %r19199, 3;
	shf.l.wrap.b32 	%r19203, %r19199, %r19198, 3;
	mov.b64 	%rd4140, {%r19203, %r19202};
	shr.u64 	%rd4141, %rd4125, 6;
	xor.b64  	%rd4142, %rd4139, %rd4141;
	xor.b64  	%rd4143, %rd4142, %rd4140;
	shf.r.wrap.b32 	%r19204, %r18813, %r18812, 1;
	shf.r.wrap.b32 	%r19205, %r18812, %r18813, 1;
	mov.b64 	%rd4144, {%r19205, %r19204};
	shf.r.wrap.b32 	%r19206, %r18813, %r18812, 8;
	shf.r.wrap.b32 	%r19207, %r18812, %r18813, 8;
	mov.b64 	%rd4145, {%r19207, %r19206};
	shr.u64 	%rd4146, %rd3572, 7;
	xor.b64  	%rd4147, %rd4144, %rd4146;
	xor.b64  	%rd4148, %rd4147, %rd4145;
	add.s64 	%rd4149, %rd4060, %rd3559;
	add.s64 	%rd4150, %rd4149, %rd4143;
	add.s64 	%rd4151, %rd4150, %rd4148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19208,%dummy}, %rd4138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19209}, %rd4138;
	}
	shf.r.wrap.b32 	%r19210, %r19209, %r19208, 19;
	shf.r.wrap.b32 	%r19211, %r19208, %r19209, 19;
	mov.b64 	%rd4152, {%r19211, %r19210};
	shf.l.wrap.b32 	%r19212, %r19208, %r19209, 3;
	shf.l.wrap.b32 	%r19213, %r19209, %r19208, 3;
	mov.b64 	%rd4153, {%r19213, %r19212};
	shr.u64 	%rd4154, %rd4138, 6;
	xor.b64  	%rd4155, %rd4152, %rd4154;
	xor.b64  	%rd4156, %rd4155, %rd4153;
	shf.r.wrap.b32 	%r19214, %r18823, %r18822, 1;
	shf.r.wrap.b32 	%r19215, %r18822, %r18823, 1;
	mov.b64 	%rd4157, {%r19215, %r19214};
	shf.r.wrap.b32 	%r19216, %r18823, %r18822, 8;
	shf.r.wrap.b32 	%r19217, %r18822, %r18823, 8;
	mov.b64 	%rd4158, {%r19217, %r19216};
	shr.u64 	%rd4159, %rd3585, 7;
	xor.b64  	%rd4160, %rd4157, %rd4159;
	xor.b64  	%rd4161, %rd4160, %rd4158;
	add.s64 	%rd4162, %rd4073, %rd3572;
	add.s64 	%rd4163, %rd4162, %rd4156;
	add.s64 	%rd4164, %rd4163, %rd4161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19218,%dummy}, %rd4151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19219}, %rd4151;
	}
	shf.r.wrap.b32 	%r19220, %r19219, %r19218, 19;
	shf.r.wrap.b32 	%r19221, %r19218, %r19219, 19;
	mov.b64 	%rd4165, {%r19221, %r19220};
	shf.l.wrap.b32 	%r19222, %r19218, %r19219, 3;
	shf.l.wrap.b32 	%r19223, %r19219, %r19218, 3;
	mov.b64 	%rd4166, {%r19223, %r19222};
	shr.u64 	%rd4167, %rd4151, 6;
	xor.b64  	%rd4168, %rd4165, %rd4167;
	xor.b64  	%rd4169, %rd4168, %rd4166;
	shf.r.wrap.b32 	%r19224, %r19089, %r19088, 1;
	shf.r.wrap.b32 	%r19225, %r19088, %r19089, 1;
	mov.b64 	%rd4170, {%r19225, %r19224};
	shf.r.wrap.b32 	%r19226, %r19089, %r19088, 8;
	shf.r.wrap.b32 	%r19227, %r19088, %r19089, 8;
	mov.b64 	%rd4171, {%r19227, %r19226};
	shr.u64 	%rd4172, %rd3598, 7;
	xor.b64  	%rd4173, %rd4170, %rd4172;
	xor.b64  	%rd4174, %rd4173, %rd4171;
	add.s64 	%rd4175, %rd4086, %rd3585;
	add.s64 	%rd4176, %rd4175, %rd4169;
	add.s64 	%rd4177, %rd4176, %rd4174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19228,%dummy}, %rd4164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19229}, %rd4164;
	}
	shf.r.wrap.b32 	%r19230, %r19229, %r19228, 19;
	shf.r.wrap.b32 	%r19231, %r19228, %r19229, 19;
	mov.b64 	%rd4178, {%r19231, %r19230};
	shf.l.wrap.b32 	%r19232, %r19228, %r19229, 3;
	shf.l.wrap.b32 	%r19233, %r19229, %r19228, 3;
	mov.b64 	%rd4179, {%r19233, %r19232};
	shr.u64 	%rd4180, %rd4164, 6;
	xor.b64  	%rd4181, %rd4178, %rd4180;
	xor.b64  	%rd4182, %rd4181, %rd4179;
	shf.r.wrap.b32 	%r19234, %r19099, %r19098, 1;
	shf.r.wrap.b32 	%r19235, %r19098, %r19099, 1;
	mov.b64 	%rd4183, {%r19235, %r19234};
	shf.r.wrap.b32 	%r19236, %r19099, %r19098, 8;
	shf.r.wrap.b32 	%r19237, %r19098, %r19099, 8;
	mov.b64 	%rd4184, {%r19237, %r19236};
	shr.u64 	%rd4185, %rd3611, 7;
	xor.b64  	%rd4186, %rd4183, %rd4185;
	xor.b64  	%rd4187, %rd4186, %rd4184;
	add.s64 	%rd4188, %rd4099, %rd3598;
	add.s64 	%rd4189, %rd4188, %rd4182;
	add.s64 	%rd4190, %rd4189, %rd4187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19238,%dummy}, %rd4177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19239}, %rd4177;
	}
	shf.r.wrap.b32 	%r19240, %r19239, %r19238, 19;
	shf.r.wrap.b32 	%r19241, %r19238, %r19239, 19;
	mov.b64 	%rd4191, {%r19241, %r19240};
	shf.l.wrap.b32 	%r19242, %r19238, %r19239, 3;
	shf.l.wrap.b32 	%r19243, %r19239, %r19238, 3;
	mov.b64 	%rd4192, {%r19243, %r19242};
	shr.u64 	%rd4193, %rd4177, 6;
	xor.b64  	%rd4194, %rd4191, %rd4193;
	xor.b64  	%rd4195, %rd4194, %rd4192;
	shf.r.wrap.b32 	%r19244, %r19109, %r19108, 1;
	shf.r.wrap.b32 	%r19245, %r19108, %r19109, 1;
	mov.b64 	%rd4196, {%r19245, %r19244};
	shf.r.wrap.b32 	%r19246, %r19109, %r19108, 8;
	shf.r.wrap.b32 	%r19247, %r19108, %r19109, 8;
	mov.b64 	%rd4197, {%r19247, %r19246};
	shr.u64 	%rd4198, %rd4008, 7;
	xor.b64  	%rd4199, %rd4196, %rd4198;
	xor.b64  	%rd4200, %rd4199, %rd4197;
	add.s64 	%rd4201, %rd4112, %rd3611;
	add.s64 	%rd4202, %rd4201, %rd4195;
	add.s64 	%rd4203, %rd4202, %rd4200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19248,%dummy}, %rd3984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19249}, %rd3984;
	}
	shf.r.wrap.b32 	%r19250, %r19249, %r19248, 14;
	shf.r.wrap.b32 	%r19251, %r19248, %r19249, 14;
	mov.b64 	%rd4204, {%r19251, %r19250};
	shf.r.wrap.b32 	%r19252, %r19249, %r19248, 18;
	shf.r.wrap.b32 	%r19253, %r19248, %r19249, 18;
	mov.b64 	%rd4205, {%r19253, %r19252};
	xor.b64  	%rd4206, %rd4205, %rd4204;
	shf.l.wrap.b32 	%r19254, %r19248, %r19249, 23;
	shf.l.wrap.b32 	%r19255, %r19249, %r19248, 23;
	mov.b64 	%rd4207, {%r19255, %r19254};
	xor.b64  	%rd4208, %rd4206, %rd4207;
	xor.b64  	%rd4209, %rd3960, %rd3936;
	and.b64  	%rd4210, %rd4209, %rd3984;
	xor.b64  	%rd4211, %rd4210, %rd3936;
	add.s64 	%rd4212, %rd4211, %rd3912;
	add.s64 	%rd4213, %rd4212, %rd4008;
	add.s64 	%rd4214, %rd4213, %rd34;
	add.s64 	%rd4215, %rd4214, %rd4208;
	add.s64 	%rd4216, %rd4215, %rd3923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19256,%dummy}, %rd3995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19257}, %rd3995;
	}
	shf.r.wrap.b32 	%r19258, %r19257, %r19256, 28;
	shf.r.wrap.b32 	%r19259, %r19256, %r19257, 28;
	mov.b64 	%rd4217, {%r19259, %r19258};
	shf.l.wrap.b32 	%r19260, %r19256, %r19257, 30;
	shf.l.wrap.b32 	%r19261, %r19257, %r19256, 30;
	mov.b64 	%rd4218, {%r19261, %r19260};
	xor.b64  	%rd4219, %rd4218, %rd4217;
	shf.l.wrap.b32 	%r19262, %r19256, %r19257, 25;
	shf.l.wrap.b32 	%r19263, %r19257, %r19256, 25;
	mov.b64 	%rd4220, {%r19263, %r19262};
	xor.b64  	%rd4221, %rd4219, %rd4220;
	xor.b64  	%rd4222, %rd3995, %rd3947;
	xor.b64  	%rd4223, %rd3995, %rd3971;
	and.b64  	%rd4224, %rd4223, %rd4222;
	xor.b64  	%rd4225, %rd4224, %rd3995;
	add.s64 	%rd4226, %rd4215, %rd4225;
	add.s64 	%rd4227, %rd4226, %rd4221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19264,%dummy}, %rd4216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19265}, %rd4216;
	}
	shf.r.wrap.b32 	%r19266, %r19265, %r19264, 14;
	shf.r.wrap.b32 	%r19267, %r19264, %r19265, 14;
	mov.b64 	%rd4228, {%r19267, %r19266};
	shf.r.wrap.b32 	%r19268, %r19265, %r19264, 18;
	shf.r.wrap.b32 	%r19269, %r19264, %r19265, 18;
	mov.b64 	%rd4229, {%r19269, %r19268};
	xor.b64  	%rd4230, %rd4229, %rd4228;
	shf.l.wrap.b32 	%r19270, %r19264, %r19265, 23;
	shf.l.wrap.b32 	%r19271, %r19265, %r19264, 23;
	mov.b64 	%rd4231, {%r19271, %r19270};
	xor.b64  	%rd4232, %rd4230, %rd4231;
	xor.b64  	%rd4233, %rd3984, %rd3960;
	and.b64  	%rd4234, %rd4216, %rd4233;
	xor.b64  	%rd4235, %rd4234, %rd3960;
	add.s64 	%rd4236, %rd4021, %rd3936;
	add.s64 	%rd4237, %rd4236, %rd35;
	add.s64 	%rd4238, %rd4237, %rd4235;
	add.s64 	%rd4239, %rd4238, %rd4232;
	add.s64 	%rd4240, %rd4239, %rd3947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19272,%dummy}, %rd4227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19273}, %rd4227;
	}
	shf.r.wrap.b32 	%r19274, %r19273, %r19272, 28;
	shf.r.wrap.b32 	%r19275, %r19272, %r19273, 28;
	mov.b64 	%rd4241, {%r19275, %r19274};
	shf.l.wrap.b32 	%r19276, %r19272, %r19273, 30;
	shf.l.wrap.b32 	%r19277, %r19273, %r19272, 30;
	mov.b64 	%rd4242, {%r19277, %r19276};
	xor.b64  	%rd4243, %rd4242, %rd4241;
	shf.l.wrap.b32 	%r19278, %r19272, %r19273, 25;
	shf.l.wrap.b32 	%r19279, %r19273, %r19272, 25;
	mov.b64 	%rd4244, {%r19279, %r19278};
	xor.b64  	%rd4245, %rd4243, %rd4244;
	xor.b64  	%rd4246, %rd4227, %rd3971;
	xor.b64  	%rd4247, %rd4227, %rd3995;
	and.b64  	%rd4248, %rd4247, %rd4246;
	xor.b64  	%rd4249, %rd4248, %rd4227;
	add.s64 	%rd4250, %rd4239, %rd4249;
	add.s64 	%rd4251, %rd4250, %rd4245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19280,%dummy}, %rd4240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19281}, %rd4240;
	}
	shf.r.wrap.b32 	%r19282, %r19281, %r19280, 14;
	shf.r.wrap.b32 	%r19283, %r19280, %r19281, 14;
	mov.b64 	%rd4252, {%r19283, %r19282};
	shf.r.wrap.b32 	%r19284, %r19281, %r19280, 18;
	shf.r.wrap.b32 	%r19285, %r19280, %r19281, 18;
	mov.b64 	%rd4253, {%r19285, %r19284};
	xor.b64  	%rd4254, %rd4253, %rd4252;
	shf.l.wrap.b32 	%r19286, %r19280, %r19281, 23;
	shf.l.wrap.b32 	%r19287, %r19281, %r19280, 23;
	mov.b64 	%rd4255, {%r19287, %r19286};
	xor.b64  	%rd4256, %rd4254, %rd4255;
	xor.b64  	%rd4257, %rd4216, %rd3984;
	and.b64  	%rd4258, %rd4240, %rd4257;
	xor.b64  	%rd4259, %rd4258, %rd3984;
	add.s64 	%rd4260, %rd4034, %rd3960;
	add.s64 	%rd4261, %rd4260, %rd36;
	add.s64 	%rd4262, %rd4261, %rd4259;
	add.s64 	%rd4263, %rd4262, %rd4256;
	add.s64 	%rd4264, %rd4263, %rd3971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19288,%dummy}, %rd4251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19289}, %rd4251;
	}
	shf.r.wrap.b32 	%r19290, %r19289, %r19288, 28;
	shf.r.wrap.b32 	%r19291, %r19288, %r19289, 28;
	mov.b64 	%rd4265, {%r19291, %r19290};
	shf.l.wrap.b32 	%r19292, %r19288, %r19289, 30;
	shf.l.wrap.b32 	%r19293, %r19289, %r19288, 30;
	mov.b64 	%rd4266, {%r19293, %r19292};
	xor.b64  	%rd4267, %rd4266, %rd4265;
	shf.l.wrap.b32 	%r19294, %r19288, %r19289, 25;
	shf.l.wrap.b32 	%r19295, %r19289, %r19288, 25;
	mov.b64 	%rd4268, {%r19295, %r19294};
	xor.b64  	%rd4269, %rd4267, %rd4268;
	xor.b64  	%rd4270, %rd4251, %rd3995;
	xor.b64  	%rd4271, %rd4251, %rd4227;
	and.b64  	%rd4272, %rd4271, %rd4270;
	xor.b64  	%rd4273, %rd4272, %rd4251;
	add.s64 	%rd4274, %rd4263, %rd4273;
	add.s64 	%rd4275, %rd4274, %rd4269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19296,%dummy}, %rd4264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19297}, %rd4264;
	}
	shf.r.wrap.b32 	%r19298, %r19297, %r19296, 14;
	shf.r.wrap.b32 	%r19299, %r19296, %r19297, 14;
	mov.b64 	%rd4276, {%r19299, %r19298};
	shf.r.wrap.b32 	%r19300, %r19297, %r19296, 18;
	shf.r.wrap.b32 	%r19301, %r19296, %r19297, 18;
	mov.b64 	%rd4277, {%r19301, %r19300};
	xor.b64  	%rd4278, %rd4277, %rd4276;
	shf.l.wrap.b32 	%r19302, %r19296, %r19297, 23;
	shf.l.wrap.b32 	%r19303, %r19297, %r19296, 23;
	mov.b64 	%rd4279, {%r19303, %r19302};
	xor.b64  	%rd4280, %rd4278, %rd4279;
	xor.b64  	%rd4281, %rd4240, %rd4216;
	and.b64  	%rd4282, %rd4264, %rd4281;
	xor.b64  	%rd4283, %rd4282, %rd4216;
	add.s64 	%rd4284, %rd4047, %rd3984;
	add.s64 	%rd4285, %rd4284, %rd37;
	add.s64 	%rd4286, %rd4285, %rd4283;
	add.s64 	%rd4287, %rd4286, %rd4280;
	add.s64 	%rd4288, %rd4287, %rd3995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19304,%dummy}, %rd4275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19305}, %rd4275;
	}
	shf.r.wrap.b32 	%r19306, %r19305, %r19304, 28;
	shf.r.wrap.b32 	%r19307, %r19304, %r19305, 28;
	mov.b64 	%rd4289, {%r19307, %r19306};
	shf.l.wrap.b32 	%r19308, %r19304, %r19305, 30;
	shf.l.wrap.b32 	%r19309, %r19305, %r19304, 30;
	mov.b64 	%rd4290, {%r19309, %r19308};
	xor.b64  	%rd4291, %rd4290, %rd4289;
	shf.l.wrap.b32 	%r19310, %r19304, %r19305, 25;
	shf.l.wrap.b32 	%r19311, %r19305, %r19304, 25;
	mov.b64 	%rd4292, {%r19311, %r19310};
	xor.b64  	%rd4293, %rd4291, %rd4292;
	xor.b64  	%rd4294, %rd4275, %rd4227;
	xor.b64  	%rd4295, %rd4275, %rd4251;
	and.b64  	%rd4296, %rd4295, %rd4294;
	xor.b64  	%rd4297, %rd4296, %rd4275;
	add.s64 	%rd4298, %rd4287, %rd4297;
	add.s64 	%rd4299, %rd4298, %rd4293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19312,%dummy}, %rd4288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19313}, %rd4288;
	}
	shf.r.wrap.b32 	%r19314, %r19313, %r19312, 14;
	shf.r.wrap.b32 	%r19315, %r19312, %r19313, 14;
	mov.b64 	%rd4300, {%r19315, %r19314};
	shf.r.wrap.b32 	%r19316, %r19313, %r19312, 18;
	shf.r.wrap.b32 	%r19317, %r19312, %r19313, 18;
	mov.b64 	%rd4301, {%r19317, %r19316};
	xor.b64  	%rd4302, %rd4301, %rd4300;
	shf.l.wrap.b32 	%r19318, %r19312, %r19313, 23;
	shf.l.wrap.b32 	%r19319, %r19313, %r19312, 23;
	mov.b64 	%rd4303, {%r19319, %r19318};
	xor.b64  	%rd4304, %rd4302, %rd4303;
	xor.b64  	%rd4305, %rd4264, %rd4240;
	and.b64  	%rd4306, %rd4288, %rd4305;
	xor.b64  	%rd4307, %rd4306, %rd4240;
	add.s64 	%rd4308, %rd4216, %rd4060;
	add.s64 	%rd4309, %rd4308, %rd38;
	add.s64 	%rd4310, %rd4309, %rd4307;
	add.s64 	%rd4311, %rd4310, %rd4304;
	add.s64 	%rd4312, %rd4311, %rd4227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19320,%dummy}, %rd4299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19321}, %rd4299;
	}
	shf.r.wrap.b32 	%r19322, %r19321, %r19320, 28;
	shf.r.wrap.b32 	%r19323, %r19320, %r19321, 28;
	mov.b64 	%rd4313, {%r19323, %r19322};
	shf.l.wrap.b32 	%r19324, %r19320, %r19321, 30;
	shf.l.wrap.b32 	%r19325, %r19321, %r19320, 30;
	mov.b64 	%rd4314, {%r19325, %r19324};
	xor.b64  	%rd4315, %rd4314, %rd4313;
	shf.l.wrap.b32 	%r19326, %r19320, %r19321, 25;
	shf.l.wrap.b32 	%r19327, %r19321, %r19320, 25;
	mov.b64 	%rd4316, {%r19327, %r19326};
	xor.b64  	%rd4317, %rd4315, %rd4316;
	xor.b64  	%rd4318, %rd4299, %rd4251;
	xor.b64  	%rd4319, %rd4299, %rd4275;
	and.b64  	%rd4320, %rd4319, %rd4318;
	xor.b64  	%rd4321, %rd4320, %rd4299;
	add.s64 	%rd4322, %rd4311, %rd4321;
	add.s64 	%rd4323, %rd4322, %rd4317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19328,%dummy}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19329}, %rd4312;
	}
	shf.r.wrap.b32 	%r19330, %r19329, %r19328, 14;
	shf.r.wrap.b32 	%r19331, %r19328, %r19329, 14;
	mov.b64 	%rd4324, {%r19331, %r19330};
	shf.r.wrap.b32 	%r19332, %r19329, %r19328, 18;
	shf.r.wrap.b32 	%r19333, %r19328, %r19329, 18;
	mov.b64 	%rd4325, {%r19333, %r19332};
	xor.b64  	%rd4326, %rd4325, %rd4324;
	shf.l.wrap.b32 	%r19334, %r19328, %r19329, 23;
	shf.l.wrap.b32 	%r19335, %r19329, %r19328, 23;
	mov.b64 	%rd4327, {%r19335, %r19334};
	xor.b64  	%rd4328, %rd4326, %rd4327;
	xor.b64  	%rd4329, %rd4288, %rd4264;
	and.b64  	%rd4330, %rd4312, %rd4329;
	xor.b64  	%rd4331, %rd4330, %rd4264;
	add.s64 	%rd4332, %rd4240, %rd4073;
	add.s64 	%rd4333, %rd4332, %rd39;
	add.s64 	%rd4334, %rd4333, %rd4331;
	add.s64 	%rd4335, %rd4334, %rd4328;
	add.s64 	%rd4336, %rd4335, %rd4251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19336,%dummy}, %rd4323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19337}, %rd4323;
	}
	shf.r.wrap.b32 	%r19338, %r19337, %r19336, 28;
	shf.r.wrap.b32 	%r19339, %r19336, %r19337, 28;
	mov.b64 	%rd4337, {%r19339, %r19338};
	shf.l.wrap.b32 	%r19340, %r19336, %r19337, 30;
	shf.l.wrap.b32 	%r19341, %r19337, %r19336, 30;
	mov.b64 	%rd4338, {%r19341, %r19340};
	xor.b64  	%rd4339, %rd4338, %rd4337;
	shf.l.wrap.b32 	%r19342, %r19336, %r19337, 25;
	shf.l.wrap.b32 	%r19343, %r19337, %r19336, 25;
	mov.b64 	%rd4340, {%r19343, %r19342};
	xor.b64  	%rd4341, %rd4339, %rd4340;
	xor.b64  	%rd4342, %rd4323, %rd4275;
	xor.b64  	%rd4343, %rd4323, %rd4299;
	and.b64  	%rd4344, %rd4343, %rd4342;
	xor.b64  	%rd4345, %rd4344, %rd4323;
	add.s64 	%rd4346, %rd4335, %rd4345;
	add.s64 	%rd4347, %rd4346, %rd4341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19344,%dummy}, %rd4336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19345}, %rd4336;
	}
	shf.r.wrap.b32 	%r19346, %r19345, %r19344, 14;
	shf.r.wrap.b32 	%r19347, %r19344, %r19345, 14;
	mov.b64 	%rd4348, {%r19347, %r19346};
	shf.r.wrap.b32 	%r19348, %r19345, %r19344, 18;
	shf.r.wrap.b32 	%r19349, %r19344, %r19345, 18;
	mov.b64 	%rd4349, {%r19349, %r19348};
	xor.b64  	%rd4350, %rd4349, %rd4348;
	shf.l.wrap.b32 	%r19350, %r19344, %r19345, 23;
	shf.l.wrap.b32 	%r19351, %r19345, %r19344, 23;
	mov.b64 	%rd4351, {%r19351, %r19350};
	xor.b64  	%rd4352, %rd4350, %rd4351;
	xor.b64  	%rd4353, %rd4312, %rd4288;
	and.b64  	%rd4354, %rd4336, %rd4353;
	xor.b64  	%rd4355, %rd4354, %rd4288;
	add.s64 	%rd4356, %rd4264, %rd4086;
	add.s64 	%rd4357, %rd4356, %rd40;
	add.s64 	%rd4358, %rd4357, %rd4355;
	add.s64 	%rd4359, %rd4358, %rd4352;
	add.s64 	%rd4360, %rd4359, %rd4275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19352,%dummy}, %rd4347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19353}, %rd4347;
	}
	shf.r.wrap.b32 	%r19354, %r19353, %r19352, 28;
	shf.r.wrap.b32 	%r19355, %r19352, %r19353, 28;
	mov.b64 	%rd4361, {%r19355, %r19354};
	shf.l.wrap.b32 	%r19356, %r19352, %r19353, 30;
	shf.l.wrap.b32 	%r19357, %r19353, %r19352, 30;
	mov.b64 	%rd4362, {%r19357, %r19356};
	xor.b64  	%rd4363, %rd4362, %rd4361;
	shf.l.wrap.b32 	%r19358, %r19352, %r19353, 25;
	shf.l.wrap.b32 	%r19359, %r19353, %r19352, 25;
	mov.b64 	%rd4364, {%r19359, %r19358};
	xor.b64  	%rd4365, %rd4363, %rd4364;
	xor.b64  	%rd4366, %rd4347, %rd4299;
	xor.b64  	%rd4367, %rd4347, %rd4323;
	and.b64  	%rd4368, %rd4367, %rd4366;
	xor.b64  	%rd4369, %rd4368, %rd4347;
	add.s64 	%rd4370, %rd4359, %rd4369;
	add.s64 	%rd4371, %rd4370, %rd4365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19360,%dummy}, %rd4360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19361}, %rd4360;
	}
	shf.r.wrap.b32 	%r19362, %r19361, %r19360, 14;
	shf.r.wrap.b32 	%r19363, %r19360, %r19361, 14;
	mov.b64 	%rd4372, {%r19363, %r19362};
	shf.r.wrap.b32 	%r19364, %r19361, %r19360, 18;
	shf.r.wrap.b32 	%r19365, %r19360, %r19361, 18;
	mov.b64 	%rd4373, {%r19365, %r19364};
	xor.b64  	%rd4374, %rd4373, %rd4372;
	shf.l.wrap.b32 	%r19366, %r19360, %r19361, 23;
	shf.l.wrap.b32 	%r19367, %r19361, %r19360, 23;
	mov.b64 	%rd4375, {%r19367, %r19366};
	xor.b64  	%rd4376, %rd4374, %rd4375;
	xor.b64  	%rd4377, %rd4336, %rd4312;
	and.b64  	%rd4378, %rd4360, %rd4377;
	xor.b64  	%rd4379, %rd4378, %rd4312;
	add.s64 	%rd4380, %rd4288, %rd4099;
	add.s64 	%rd4381, %rd4380, %rd41;
	add.s64 	%rd4382, %rd4381, %rd4379;
	add.s64 	%rd4383, %rd4382, %rd4376;
	add.s64 	%rd4384, %rd4383, %rd4299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19368,%dummy}, %rd4371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19369}, %rd4371;
	}
	shf.r.wrap.b32 	%r19370, %r19369, %r19368, 28;
	shf.r.wrap.b32 	%r19371, %r19368, %r19369, 28;
	mov.b64 	%rd4385, {%r19371, %r19370};
	shf.l.wrap.b32 	%r19372, %r19368, %r19369, 30;
	shf.l.wrap.b32 	%r19373, %r19369, %r19368, 30;
	mov.b64 	%rd4386, {%r19373, %r19372};
	xor.b64  	%rd4387, %rd4386, %rd4385;
	shf.l.wrap.b32 	%r19374, %r19368, %r19369, 25;
	shf.l.wrap.b32 	%r19375, %r19369, %r19368, 25;
	mov.b64 	%rd4388, {%r19375, %r19374};
	xor.b64  	%rd4389, %rd4387, %rd4388;
	xor.b64  	%rd4390, %rd4371, %rd4323;
	xor.b64  	%rd4391, %rd4371, %rd4347;
	and.b64  	%rd4392, %rd4391, %rd4390;
	xor.b64  	%rd4393, %rd4392, %rd4371;
	add.s64 	%rd4394, %rd4383, %rd4393;
	add.s64 	%rd4395, %rd4394, %rd4389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19376,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19377}, %rd4384;
	}
	shf.r.wrap.b32 	%r19378, %r19377, %r19376, 14;
	shf.r.wrap.b32 	%r19379, %r19376, %r19377, 14;
	mov.b64 	%rd4396, {%r19379, %r19378};
	shf.r.wrap.b32 	%r19380, %r19377, %r19376, 18;
	shf.r.wrap.b32 	%r19381, %r19376, %r19377, 18;
	mov.b64 	%rd4397, {%r19381, %r19380};
	xor.b64  	%rd4398, %rd4397, %rd4396;
	shf.l.wrap.b32 	%r19382, %r19376, %r19377, 23;
	shf.l.wrap.b32 	%r19383, %r19377, %r19376, 23;
	mov.b64 	%rd4399, {%r19383, %r19382};
	xor.b64  	%rd4400, %rd4398, %rd4399;
	xor.b64  	%rd4401, %rd4360, %rd4336;
	and.b64  	%rd4402, %rd4384, %rd4401;
	xor.b64  	%rd4403, %rd4402, %rd4336;
	add.s64 	%rd4404, %rd4312, %rd4112;
	add.s64 	%rd4405, %rd4404, %rd42;
	add.s64 	%rd4406, %rd4405, %rd4403;
	add.s64 	%rd4407, %rd4406, %rd4400;
	add.s64 	%rd4408, %rd4407, %rd4323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19384,%dummy}, %rd4395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19385}, %rd4395;
	}
	shf.r.wrap.b32 	%r19386, %r19385, %r19384, 28;
	shf.r.wrap.b32 	%r19387, %r19384, %r19385, 28;
	mov.b64 	%rd4409, {%r19387, %r19386};
	shf.l.wrap.b32 	%r19388, %r19384, %r19385, 30;
	shf.l.wrap.b32 	%r19389, %r19385, %r19384, 30;
	mov.b64 	%rd4410, {%r19389, %r19388};
	xor.b64  	%rd4411, %rd4410, %rd4409;
	shf.l.wrap.b32 	%r19390, %r19384, %r19385, 25;
	shf.l.wrap.b32 	%r19391, %r19385, %r19384, 25;
	mov.b64 	%rd4412, {%r19391, %r19390};
	xor.b64  	%rd4413, %rd4411, %rd4412;
	xor.b64  	%rd4414, %rd4395, %rd4347;
	xor.b64  	%rd4415, %rd4395, %rd4371;
	and.b64  	%rd4416, %rd4415, %rd4414;
	xor.b64  	%rd4417, %rd4416, %rd4395;
	add.s64 	%rd4418, %rd4407, %rd4417;
	add.s64 	%rd4419, %rd4418, %rd4413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19392,%dummy}, %rd4408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19393}, %rd4408;
	}
	shf.r.wrap.b32 	%r19394, %r19393, %r19392, 14;
	shf.r.wrap.b32 	%r19395, %r19392, %r19393, 14;
	mov.b64 	%rd4420, {%r19395, %r19394};
	shf.r.wrap.b32 	%r19396, %r19393, %r19392, 18;
	shf.r.wrap.b32 	%r19397, %r19392, %r19393, 18;
	mov.b64 	%rd4421, {%r19397, %r19396};
	xor.b64  	%rd4422, %rd4421, %rd4420;
	shf.l.wrap.b32 	%r19398, %r19392, %r19393, 23;
	shf.l.wrap.b32 	%r19399, %r19393, %r19392, 23;
	mov.b64 	%rd4423, {%r19399, %r19398};
	xor.b64  	%rd4424, %rd4422, %rd4423;
	xor.b64  	%rd4425, %rd4384, %rd4360;
	and.b64  	%rd4426, %rd4408, %rd4425;
	xor.b64  	%rd4427, %rd4426, %rd4360;
	add.s64 	%rd4428, %rd4336, %rd4125;
	add.s64 	%rd4429, %rd4428, %rd43;
	add.s64 	%rd4430, %rd4429, %rd4427;
	add.s64 	%rd4431, %rd4430, %rd4424;
	add.s64 	%rd4432, %rd4431, %rd4347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19400,%dummy}, %rd4419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19401}, %rd4419;
	}
	shf.r.wrap.b32 	%r19402, %r19401, %r19400, 28;
	shf.r.wrap.b32 	%r19403, %r19400, %r19401, 28;
	mov.b64 	%rd4433, {%r19403, %r19402};
	shf.l.wrap.b32 	%r19404, %r19400, %r19401, 30;
	shf.l.wrap.b32 	%r19405, %r19401, %r19400, 30;
	mov.b64 	%rd4434, {%r19405, %r19404};
	xor.b64  	%rd4435, %rd4434, %rd4433;
	shf.l.wrap.b32 	%r19406, %r19400, %r19401, 25;
	shf.l.wrap.b32 	%r19407, %r19401, %r19400, 25;
	mov.b64 	%rd4436, {%r19407, %r19406};
	xor.b64  	%rd4437, %rd4435, %rd4436;
	xor.b64  	%rd4438, %rd4419, %rd4371;
	xor.b64  	%rd4439, %rd4419, %rd4395;
	and.b64  	%rd4440, %rd4439, %rd4438;
	xor.b64  	%rd4441, %rd4440, %rd4419;
	add.s64 	%rd4442, %rd4431, %rd4441;
	add.s64 	%rd4443, %rd4442, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19408,%dummy}, %rd4432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19409}, %rd4432;
	}
	shf.r.wrap.b32 	%r19410, %r19409, %r19408, 14;
	shf.r.wrap.b32 	%r19411, %r19408, %r19409, 14;
	mov.b64 	%rd4444, {%r19411, %r19410};
	shf.r.wrap.b32 	%r19412, %r19409, %r19408, 18;
	shf.r.wrap.b32 	%r19413, %r19408, %r19409, 18;
	mov.b64 	%rd4445, {%r19413, %r19412};
	xor.b64  	%rd4446, %rd4445, %rd4444;
	shf.l.wrap.b32 	%r19414, %r19408, %r19409, 23;
	shf.l.wrap.b32 	%r19415, %r19409, %r19408, 23;
	mov.b64 	%rd4447, {%r19415, %r19414};
	xor.b64  	%rd4448, %rd4446, %rd4447;
	xor.b64  	%rd4449, %rd4408, %rd4384;
	and.b64  	%rd4450, %rd4432, %rd4449;
	xor.b64  	%rd4451, %rd4450, %rd4384;
	add.s64 	%rd4452, %rd4360, %rd4138;
	add.s64 	%rd4453, %rd4452, %rd44;
	add.s64 	%rd4454, %rd4453, %rd4451;
	add.s64 	%rd4455, %rd4454, %rd4448;
	add.s64 	%rd4456, %rd4455, %rd4371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19416,%dummy}, %rd4443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19417}, %rd4443;
	}
	shf.r.wrap.b32 	%r19418, %r19417, %r19416, 28;
	shf.r.wrap.b32 	%r19419, %r19416, %r19417, 28;
	mov.b64 	%rd4457, {%r19419, %r19418};
	shf.l.wrap.b32 	%r19420, %r19416, %r19417, 30;
	shf.l.wrap.b32 	%r19421, %r19417, %r19416, 30;
	mov.b64 	%rd4458, {%r19421, %r19420};
	xor.b64  	%rd4459, %rd4458, %rd4457;
	shf.l.wrap.b32 	%r19422, %r19416, %r19417, 25;
	shf.l.wrap.b32 	%r19423, %r19417, %r19416, 25;
	mov.b64 	%rd4460, {%r19423, %r19422};
	xor.b64  	%rd4461, %rd4459, %rd4460;
	xor.b64  	%rd4462, %rd4443, %rd4395;
	xor.b64  	%rd4463, %rd4443, %rd4419;
	and.b64  	%rd4464, %rd4463, %rd4462;
	xor.b64  	%rd4465, %rd4464, %rd4443;
	add.s64 	%rd4466, %rd4455, %rd4465;
	add.s64 	%rd4467, %rd4466, %rd4461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19424,%dummy}, %rd4456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19425}, %rd4456;
	}
	shf.r.wrap.b32 	%r19426, %r19425, %r19424, 14;
	shf.r.wrap.b32 	%r19427, %r19424, %r19425, 14;
	mov.b64 	%rd4468, {%r19427, %r19426};
	shf.r.wrap.b32 	%r19428, %r19425, %r19424, 18;
	shf.r.wrap.b32 	%r19429, %r19424, %r19425, 18;
	mov.b64 	%rd4469, {%r19429, %r19428};
	xor.b64  	%rd4470, %rd4469, %rd4468;
	shf.l.wrap.b32 	%r19430, %r19424, %r19425, 23;
	shf.l.wrap.b32 	%r19431, %r19425, %r19424, 23;
	mov.b64 	%rd4471, {%r19431, %r19430};
	xor.b64  	%rd4472, %rd4470, %rd4471;
	xor.b64  	%rd4473, %rd4432, %rd4408;
	and.b64  	%rd4474, %rd4456, %rd4473;
	xor.b64  	%rd4475, %rd4474, %rd4408;
	add.s64 	%rd4476, %rd4384, %rd4151;
	add.s64 	%rd4477, %rd4476, %rd45;
	add.s64 	%rd4478, %rd4477, %rd4475;
	add.s64 	%rd4479, %rd4478, %rd4472;
	add.s64 	%rd4480, %rd4479, %rd4395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19432,%dummy}, %rd4467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19433}, %rd4467;
	}
	shf.r.wrap.b32 	%r19434, %r19433, %r19432, 28;
	shf.r.wrap.b32 	%r19435, %r19432, %r19433, 28;
	mov.b64 	%rd4481, {%r19435, %r19434};
	shf.l.wrap.b32 	%r19436, %r19432, %r19433, 30;
	shf.l.wrap.b32 	%r19437, %r19433, %r19432, 30;
	mov.b64 	%rd4482, {%r19437, %r19436};
	xor.b64  	%rd4483, %rd4482, %rd4481;
	shf.l.wrap.b32 	%r19438, %r19432, %r19433, 25;
	shf.l.wrap.b32 	%r19439, %r19433, %r19432, 25;
	mov.b64 	%rd4484, {%r19439, %r19438};
	xor.b64  	%rd4485, %rd4483, %rd4484;
	xor.b64  	%rd4486, %rd4467, %rd4419;
	xor.b64  	%rd4487, %rd4467, %rd4443;
	and.b64  	%rd4488, %rd4487, %rd4486;
	xor.b64  	%rd4489, %rd4488, %rd4467;
	add.s64 	%rd4490, %rd4479, %rd4489;
	add.s64 	%rd4491, %rd4490, %rd4485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19440,%dummy}, %rd4480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19441}, %rd4480;
	}
	shf.r.wrap.b32 	%r19442, %r19441, %r19440, 14;
	shf.r.wrap.b32 	%r19443, %r19440, %r19441, 14;
	mov.b64 	%rd4492, {%r19443, %r19442};
	shf.r.wrap.b32 	%r19444, %r19441, %r19440, 18;
	shf.r.wrap.b32 	%r19445, %r19440, %r19441, 18;
	mov.b64 	%rd4493, {%r19445, %r19444};
	xor.b64  	%rd4494, %rd4493, %rd4492;
	shf.l.wrap.b32 	%r19446, %r19440, %r19441, 23;
	shf.l.wrap.b32 	%r19447, %r19441, %r19440, 23;
	mov.b64 	%rd4495, {%r19447, %r19446};
	xor.b64  	%rd4496, %rd4494, %rd4495;
	xor.b64  	%rd4497, %rd4456, %rd4432;
	and.b64  	%rd4498, %rd4480, %rd4497;
	xor.b64  	%rd4499, %rd4498, %rd4432;
	add.s64 	%rd4500, %rd4408, %rd4164;
	add.s64 	%rd4501, %rd4500, %rd46;
	add.s64 	%rd4502, %rd4501, %rd4499;
	add.s64 	%rd4503, %rd4502, %rd4496;
	add.s64 	%rd4504, %rd4503, %rd4419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19448,%dummy}, %rd4491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19449}, %rd4491;
	}
	shf.r.wrap.b32 	%r19450, %r19449, %r19448, 28;
	shf.r.wrap.b32 	%r19451, %r19448, %r19449, 28;
	mov.b64 	%rd4505, {%r19451, %r19450};
	shf.l.wrap.b32 	%r19452, %r19448, %r19449, 30;
	shf.l.wrap.b32 	%r19453, %r19449, %r19448, 30;
	mov.b64 	%rd4506, {%r19453, %r19452};
	xor.b64  	%rd4507, %rd4506, %rd4505;
	shf.l.wrap.b32 	%r19454, %r19448, %r19449, 25;
	shf.l.wrap.b32 	%r19455, %r19449, %r19448, 25;
	mov.b64 	%rd4508, {%r19455, %r19454};
	xor.b64  	%rd4509, %rd4507, %rd4508;
	xor.b64  	%rd4510, %rd4491, %rd4443;
	xor.b64  	%rd4511, %rd4491, %rd4467;
	and.b64  	%rd4512, %rd4511, %rd4510;
	xor.b64  	%rd4513, %rd4512, %rd4491;
	add.s64 	%rd4514, %rd4503, %rd4513;
	add.s64 	%rd4515, %rd4514, %rd4509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19456,%dummy}, %rd4504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19457}, %rd4504;
	}
	shf.r.wrap.b32 	%r19458, %r19457, %r19456, 14;
	shf.r.wrap.b32 	%r19459, %r19456, %r19457, 14;
	mov.b64 	%rd4516, {%r19459, %r19458};
	shf.r.wrap.b32 	%r19460, %r19457, %r19456, 18;
	shf.r.wrap.b32 	%r19461, %r19456, %r19457, 18;
	mov.b64 	%rd4517, {%r19461, %r19460};
	xor.b64  	%rd4518, %rd4517, %rd4516;
	shf.l.wrap.b32 	%r19462, %r19456, %r19457, 23;
	shf.l.wrap.b32 	%r19463, %r19457, %r19456, 23;
	mov.b64 	%rd4519, {%r19463, %r19462};
	xor.b64  	%rd4520, %rd4518, %rd4519;
	xor.b64  	%rd4521, %rd4480, %rd4456;
	and.b64  	%rd4522, %rd4504, %rd4521;
	xor.b64  	%rd4523, %rd4522, %rd4456;
	add.s64 	%rd4524, %rd4432, %rd4177;
	add.s64 	%rd4525, %rd4524, %rd47;
	add.s64 	%rd4526, %rd4525, %rd4523;
	add.s64 	%rd4527, %rd4526, %rd4520;
	add.s64 	%rd4528, %rd4527, %rd4443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19464,%dummy}, %rd4515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19465}, %rd4515;
	}
	shf.r.wrap.b32 	%r19466, %r19465, %r19464, 28;
	shf.r.wrap.b32 	%r19467, %r19464, %r19465, 28;
	mov.b64 	%rd4529, {%r19467, %r19466};
	shf.l.wrap.b32 	%r19468, %r19464, %r19465, 30;
	shf.l.wrap.b32 	%r19469, %r19465, %r19464, 30;
	mov.b64 	%rd4530, {%r19469, %r19468};
	xor.b64  	%rd4531, %rd4530, %rd4529;
	shf.l.wrap.b32 	%r19470, %r19464, %r19465, 25;
	shf.l.wrap.b32 	%r19471, %r19465, %r19464, 25;
	mov.b64 	%rd4532, {%r19471, %r19470};
	xor.b64  	%rd4533, %rd4531, %rd4532;
	xor.b64  	%rd4534, %rd4515, %rd4467;
	xor.b64  	%rd4535, %rd4515, %rd4491;
	and.b64  	%rd4536, %rd4535, %rd4534;
	xor.b64  	%rd4537, %rd4536, %rd4515;
	add.s64 	%rd4538, %rd4527, %rd4537;
	add.s64 	%rd4539, %rd4538, %rd4533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19472,%dummy}, %rd4528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19473}, %rd4528;
	}
	shf.r.wrap.b32 	%r19474, %r19473, %r19472, 14;
	shf.r.wrap.b32 	%r19475, %r19472, %r19473, 14;
	mov.b64 	%rd4540, {%r19475, %r19474};
	shf.r.wrap.b32 	%r19476, %r19473, %r19472, 18;
	shf.r.wrap.b32 	%r19477, %r19472, %r19473, 18;
	mov.b64 	%rd4541, {%r19477, %r19476};
	xor.b64  	%rd4542, %rd4541, %rd4540;
	shf.l.wrap.b32 	%r19478, %r19472, %r19473, 23;
	shf.l.wrap.b32 	%r19479, %r19473, %r19472, 23;
	mov.b64 	%rd4543, {%r19479, %r19478};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	xor.b64  	%rd4545, %rd4504, %rd4480;
	and.b64  	%rd4546, %rd4528, %rd4545;
	xor.b64  	%rd4547, %rd4546, %rd4480;
	add.s64 	%rd4548, %rd4456, %rd4190;
	add.s64 	%rd4549, %rd4548, %rd48;
	add.s64 	%rd4550, %rd4549, %rd4547;
	add.s64 	%rd4551, %rd4550, %rd4544;
	add.s64 	%rd4552, %rd4551, %rd4467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19480,%dummy}, %rd4539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19481}, %rd4539;
	}
	shf.r.wrap.b32 	%r19482, %r19481, %r19480, 28;
	shf.r.wrap.b32 	%r19483, %r19480, %r19481, 28;
	mov.b64 	%rd4553, {%r19483, %r19482};
	shf.l.wrap.b32 	%r19484, %r19480, %r19481, 30;
	shf.l.wrap.b32 	%r19485, %r19481, %r19480, 30;
	mov.b64 	%rd4554, {%r19485, %r19484};
	xor.b64  	%rd4555, %rd4554, %rd4553;
	shf.l.wrap.b32 	%r19486, %r19480, %r19481, 25;
	shf.l.wrap.b32 	%r19487, %r19481, %r19480, 25;
	mov.b64 	%rd4556, {%r19487, %r19486};
	xor.b64  	%rd4557, %rd4555, %rd4556;
	xor.b64  	%rd4558, %rd4539, %rd4491;
	xor.b64  	%rd4559, %rd4539, %rd4515;
	and.b64  	%rd4560, %rd4559, %rd4558;
	xor.b64  	%rd4561, %rd4560, %rd4539;
	add.s64 	%rd4562, %rd4551, %rd4561;
	add.s64 	%rd4563, %rd4562, %rd4557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19488,%dummy}, %rd4552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19489}, %rd4552;
	}
	shf.r.wrap.b32 	%r19490, %r19489, %r19488, 14;
	shf.r.wrap.b32 	%r19491, %r19488, %r19489, 14;
	mov.b64 	%rd4564, {%r19491, %r19490};
	shf.r.wrap.b32 	%r19492, %r19489, %r19488, 18;
	shf.r.wrap.b32 	%r19493, %r19488, %r19489, 18;
	mov.b64 	%rd4565, {%r19493, %r19492};
	xor.b64  	%rd4566, %rd4565, %rd4564;
	shf.l.wrap.b32 	%r19494, %r19488, %r19489, 23;
	shf.l.wrap.b32 	%r19495, %r19489, %r19488, 23;
	mov.b64 	%rd4567, {%r19495, %r19494};
	xor.b64  	%rd4568, %rd4566, %rd4567;
	xor.b64  	%rd4569, %rd4528, %rd4504;
	and.b64  	%rd4570, %rd4552, %rd4569;
	xor.b64  	%rd4571, %rd4570, %rd4504;
	add.s64 	%rd4572, %rd4480, %rd4203;
	add.s64 	%rd4573, %rd4572, %rd49;
	add.s64 	%rd4574, %rd4573, %rd4571;
	add.s64 	%rd4575, %rd4574, %rd4568;
	add.s64 	%rd4576, %rd4575, %rd4491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19496,%dummy}, %rd4563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19497}, %rd4563;
	}
	shf.r.wrap.b32 	%r19498, %r19497, %r19496, 28;
	shf.r.wrap.b32 	%r19499, %r19496, %r19497, 28;
	mov.b64 	%rd4577, {%r19499, %r19498};
	shf.l.wrap.b32 	%r19500, %r19496, %r19497, 30;
	shf.l.wrap.b32 	%r19501, %r19497, %r19496, 30;
	mov.b64 	%rd4578, {%r19501, %r19500};
	xor.b64  	%rd4579, %rd4578, %rd4577;
	shf.l.wrap.b32 	%r19502, %r19496, %r19497, 25;
	shf.l.wrap.b32 	%r19503, %r19497, %r19496, 25;
	mov.b64 	%rd4580, {%r19503, %r19502};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	xor.b64  	%rd4582, %rd4563, %rd4515;
	xor.b64  	%rd4583, %rd4563, %rd4539;
	and.b64  	%rd4584, %rd4583, %rd4582;
	xor.b64  	%rd4585, %rd4584, %rd4563;
	add.s64 	%rd4586, %rd4575, %rd4585;
	add.s64 	%rd4587, %rd4586, %rd4581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19504,%dummy}, %rd4190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19505}, %rd4190;
	}
	shf.r.wrap.b32 	%r19506, %r19505, %r19504, 19;
	shf.r.wrap.b32 	%r19507, %r19504, %r19505, 19;
	mov.b64 	%rd4588, {%r19507, %r19506};
	shf.l.wrap.b32 	%r19508, %r19504, %r19505, 3;
	shf.l.wrap.b32 	%r19509, %r19505, %r19504, 3;
	mov.b64 	%rd4589, {%r19509, %r19508};
	shr.u64 	%rd4590, %rd4190, 6;
	xor.b64  	%rd4591, %rd4588, %rd4590;
	xor.b64  	%rd4592, %rd4591, %rd4589;
	shf.r.wrap.b32 	%r19510, %r19119, %r19118, 1;
	shf.r.wrap.b32 	%r19511, %r19118, %r19119, 1;
	mov.b64 	%rd4593, {%r19511, %r19510};
	shf.r.wrap.b32 	%r19512, %r19119, %r19118, 8;
	shf.r.wrap.b32 	%r19513, %r19118, %r19119, 8;
	mov.b64 	%rd4594, {%r19513, %r19512};
	shr.u64 	%rd4595, %rd4021, 7;
	xor.b64  	%rd4596, %rd4593, %rd4595;
	xor.b64  	%rd4597, %rd4596, %rd4594;
	add.s64 	%rd4598, %rd4125, %rd4008;
	add.s64 	%rd4599, %rd4598, %rd4592;
	add.s64 	%rd4600, %rd4599, %rd4597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19514,%dummy}, %rd4203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19515}, %rd4203;
	}
	shf.r.wrap.b32 	%r19516, %r19515, %r19514, 19;
	shf.r.wrap.b32 	%r19517, %r19514, %r19515, 19;
	mov.b64 	%rd4601, {%r19517, %r19516};
	shf.l.wrap.b32 	%r19518, %r19514, %r19515, 3;
	shf.l.wrap.b32 	%r19519, %r19515, %r19514, 3;
	mov.b64 	%rd4602, {%r19519, %r19518};
	shr.u64 	%rd4603, %rd4203, 6;
	xor.b64  	%rd4604, %rd4601, %rd4603;
	xor.b64  	%rd4605, %rd4604, %rd4602;
	shf.r.wrap.b32 	%r19520, %r19129, %r19128, 1;
	shf.r.wrap.b32 	%r19521, %r19128, %r19129, 1;
	mov.b64 	%rd4606, {%r19521, %r19520};
	shf.r.wrap.b32 	%r19522, %r19129, %r19128, 8;
	shf.r.wrap.b32 	%r19523, %r19128, %r19129, 8;
	mov.b64 	%rd4607, {%r19523, %r19522};
	shr.u64 	%rd4608, %rd4034, 7;
	xor.b64  	%rd4609, %rd4606, %rd4608;
	xor.b64  	%rd4610, %rd4609, %rd4607;
	add.s64 	%rd4611, %rd4138, %rd4021;
	add.s64 	%rd4612, %rd4611, %rd4605;
	add.s64 	%rd4613, %rd4612, %rd4610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19524,%dummy}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19525}, %rd4600;
	}
	shf.r.wrap.b32 	%r19526, %r19525, %r19524, 19;
	shf.r.wrap.b32 	%r19527, %r19524, %r19525, 19;
	mov.b64 	%rd4614, {%r19527, %r19526};
	shf.l.wrap.b32 	%r19528, %r19524, %r19525, 3;
	shf.l.wrap.b32 	%r19529, %r19525, %r19524, 3;
	mov.b64 	%rd4615, {%r19529, %r19528};
	shr.u64 	%rd4616, %rd4600, 6;
	xor.b64  	%rd4617, %rd4614, %rd4616;
	xor.b64  	%rd4618, %rd4617, %rd4615;
	shf.r.wrap.b32 	%r19530, %r19139, %r19138, 1;
	shf.r.wrap.b32 	%r19531, %r19138, %r19139, 1;
	mov.b64 	%rd4619, {%r19531, %r19530};
	shf.r.wrap.b32 	%r19532, %r19139, %r19138, 8;
	shf.r.wrap.b32 	%r19533, %r19138, %r19139, 8;
	mov.b64 	%rd4620, {%r19533, %r19532};
	shr.u64 	%rd4621, %rd4047, 7;
	xor.b64  	%rd4622, %rd4619, %rd4621;
	xor.b64  	%rd4623, %rd4622, %rd4620;
	add.s64 	%rd4624, %rd4151, %rd4034;
	add.s64 	%rd4625, %rd4624, %rd4618;
	add.s64 	%rd4626, %rd4625, %rd4623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19534,%dummy}, %rd4613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19535}, %rd4613;
	}
	shf.r.wrap.b32 	%r19536, %r19535, %r19534, 19;
	shf.r.wrap.b32 	%r19537, %r19534, %r19535, 19;
	mov.b64 	%rd4627, {%r19537, %r19536};
	shf.l.wrap.b32 	%r19538, %r19534, %r19535, 3;
	shf.l.wrap.b32 	%r19539, %r19535, %r19534, 3;
	mov.b64 	%rd4628, {%r19539, %r19538};
	shr.u64 	%rd4629, %rd4613, 6;
	xor.b64  	%rd4630, %rd4627, %rd4629;
	xor.b64  	%rd4631, %rd4630, %rd4628;
	shf.r.wrap.b32 	%r19540, %r19149, %r19148, 1;
	shf.r.wrap.b32 	%r19541, %r19148, %r19149, 1;
	mov.b64 	%rd4632, {%r19541, %r19540};
	shf.r.wrap.b32 	%r19542, %r19149, %r19148, 8;
	shf.r.wrap.b32 	%r19543, %r19148, %r19149, 8;
	mov.b64 	%rd4633, {%r19543, %r19542};
	shr.u64 	%rd4634, %rd4060, 7;
	xor.b64  	%rd4635, %rd4632, %rd4634;
	xor.b64  	%rd4636, %rd4635, %rd4633;
	add.s64 	%rd4637, %rd4164, %rd4047;
	add.s64 	%rd4638, %rd4637, %rd4631;
	add.s64 	%rd4639, %rd4638, %rd4636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19544,%dummy}, %rd4626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19545}, %rd4626;
	}
	shf.r.wrap.b32 	%r19546, %r19545, %r19544, 19;
	shf.r.wrap.b32 	%r19547, %r19544, %r19545, 19;
	mov.b64 	%rd4640, {%r19547, %r19546};
	shf.l.wrap.b32 	%r19548, %r19544, %r19545, 3;
	shf.l.wrap.b32 	%r19549, %r19545, %r19544, 3;
	mov.b64 	%rd4641, {%r19549, %r19548};
	shr.u64 	%rd4642, %rd4626, 6;
	xor.b64  	%rd4643, %rd4640, %rd4642;
	xor.b64  	%rd4644, %rd4643, %rd4641;
	shf.r.wrap.b32 	%r19550, %r19159, %r19158, 1;
	shf.r.wrap.b32 	%r19551, %r19158, %r19159, 1;
	mov.b64 	%rd4645, {%r19551, %r19550};
	shf.r.wrap.b32 	%r19552, %r19159, %r19158, 8;
	shf.r.wrap.b32 	%r19553, %r19158, %r19159, 8;
	mov.b64 	%rd4646, {%r19553, %r19552};
	shr.u64 	%rd4647, %rd4073, 7;
	xor.b64  	%rd4648, %rd4645, %rd4647;
	xor.b64  	%rd4649, %rd4648, %rd4646;
	add.s64 	%rd4650, %rd4177, %rd4060;
	add.s64 	%rd4651, %rd4650, %rd4644;
	add.s64 	%rd4652, %rd4651, %rd4649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19554,%dummy}, %rd4639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19555}, %rd4639;
	}
	shf.r.wrap.b32 	%r19556, %r19555, %r19554, 19;
	shf.r.wrap.b32 	%r19557, %r19554, %r19555, 19;
	mov.b64 	%rd4653, {%r19557, %r19556};
	shf.l.wrap.b32 	%r19558, %r19554, %r19555, 3;
	shf.l.wrap.b32 	%r19559, %r19555, %r19554, 3;
	mov.b64 	%rd4654, {%r19559, %r19558};
	shr.u64 	%rd4655, %rd4639, 6;
	xor.b64  	%rd4656, %rd4653, %rd4655;
	xor.b64  	%rd4657, %rd4656, %rd4654;
	shf.r.wrap.b32 	%r19560, %r19169, %r19168, 1;
	shf.r.wrap.b32 	%r19561, %r19168, %r19169, 1;
	mov.b64 	%rd4658, {%r19561, %r19560};
	shf.r.wrap.b32 	%r19562, %r19169, %r19168, 8;
	shf.r.wrap.b32 	%r19563, %r19168, %r19169, 8;
	mov.b64 	%rd4659, {%r19563, %r19562};
	shr.u64 	%rd4660, %rd4086, 7;
	xor.b64  	%rd4661, %rd4658, %rd4660;
	xor.b64  	%rd4662, %rd4661, %rd4659;
	add.s64 	%rd4663, %rd4190, %rd4073;
	add.s64 	%rd4664, %rd4663, %rd4657;
	add.s64 	%rd4665, %rd4664, %rd4662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19564,%dummy}, %rd4652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19565}, %rd4652;
	}
	shf.r.wrap.b32 	%r19566, %r19565, %r19564, 19;
	shf.r.wrap.b32 	%r19567, %r19564, %r19565, 19;
	mov.b64 	%rd4666, {%r19567, %r19566};
	shf.l.wrap.b32 	%r19568, %r19564, %r19565, 3;
	shf.l.wrap.b32 	%r19569, %r19565, %r19564, 3;
	mov.b64 	%rd4667, {%r19569, %r19568};
	shr.u64 	%rd4668, %rd4652, 6;
	xor.b64  	%rd4669, %rd4666, %rd4668;
	xor.b64  	%rd4670, %rd4669, %rd4667;
	shf.r.wrap.b32 	%r19570, %r19179, %r19178, 1;
	shf.r.wrap.b32 	%r19571, %r19178, %r19179, 1;
	mov.b64 	%rd4671, {%r19571, %r19570};
	shf.r.wrap.b32 	%r19572, %r19179, %r19178, 8;
	shf.r.wrap.b32 	%r19573, %r19178, %r19179, 8;
	mov.b64 	%rd4672, {%r19573, %r19572};
	shr.u64 	%rd4673, %rd4099, 7;
	xor.b64  	%rd4674, %rd4671, %rd4673;
	xor.b64  	%rd4675, %rd4674, %rd4672;
	add.s64 	%rd4676, %rd4203, %rd4086;
	add.s64 	%rd4677, %rd4676, %rd4670;
	add.s64 	%rd4678, %rd4677, %rd4675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19574,%dummy}, %rd4665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19575}, %rd4665;
	}
	shf.r.wrap.b32 	%r19576, %r19575, %r19574, 19;
	shf.r.wrap.b32 	%r19577, %r19574, %r19575, 19;
	mov.b64 	%rd4679, {%r19577, %r19576};
	shf.l.wrap.b32 	%r19578, %r19574, %r19575, 3;
	shf.l.wrap.b32 	%r19579, %r19575, %r19574, 3;
	mov.b64 	%rd4680, {%r19579, %r19578};
	shr.u64 	%rd4681, %rd4665, 6;
	xor.b64  	%rd4682, %rd4679, %rd4681;
	xor.b64  	%rd4683, %rd4682, %rd4680;
	shf.r.wrap.b32 	%r19580, %r19189, %r19188, 1;
	shf.r.wrap.b32 	%r19581, %r19188, %r19189, 1;
	mov.b64 	%rd4684, {%r19581, %r19580};
	shf.r.wrap.b32 	%r19582, %r19189, %r19188, 8;
	shf.r.wrap.b32 	%r19583, %r19188, %r19189, 8;
	mov.b64 	%rd4685, {%r19583, %r19582};
	shr.u64 	%rd4686, %rd4112, 7;
	xor.b64  	%rd4687, %rd4684, %rd4686;
	xor.b64  	%rd4688, %rd4687, %rd4685;
	add.s64 	%rd4689, %rd4600, %rd4099;
	add.s64 	%rd4690, %rd4689, %rd4683;
	add.s64 	%rd4691, %rd4690, %rd4688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19584,%dummy}, %rd4678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19585}, %rd4678;
	}
	shf.r.wrap.b32 	%r19586, %r19585, %r19584, 19;
	shf.r.wrap.b32 	%r19587, %r19584, %r19585, 19;
	mov.b64 	%rd4692, {%r19587, %r19586};
	shf.l.wrap.b32 	%r19588, %r19584, %r19585, 3;
	shf.l.wrap.b32 	%r19589, %r19585, %r19584, 3;
	mov.b64 	%rd4693, {%r19589, %r19588};
	shr.u64 	%rd4694, %rd4678, 6;
	xor.b64  	%rd4695, %rd4692, %rd4694;
	xor.b64  	%rd4696, %rd4695, %rd4693;
	shf.r.wrap.b32 	%r19590, %r19199, %r19198, 1;
	shf.r.wrap.b32 	%r19591, %r19198, %r19199, 1;
	mov.b64 	%rd4697, {%r19591, %r19590};
	shf.r.wrap.b32 	%r19592, %r19199, %r19198, 8;
	shf.r.wrap.b32 	%r19593, %r19198, %r19199, 8;
	mov.b64 	%rd4698, {%r19593, %r19592};
	shr.u64 	%rd4699, %rd4125, 7;
	xor.b64  	%rd4700, %rd4697, %rd4699;
	xor.b64  	%rd4701, %rd4700, %rd4698;
	add.s64 	%rd4702, %rd4613, %rd4112;
	add.s64 	%rd4703, %rd4702, %rd4696;
	add.s64 	%rd4704, %rd4703, %rd4701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19594,%dummy}, %rd4691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19595}, %rd4691;
	}
	shf.r.wrap.b32 	%r19596, %r19595, %r19594, 19;
	shf.r.wrap.b32 	%r19597, %r19594, %r19595, 19;
	mov.b64 	%rd4705, {%r19597, %r19596};
	shf.l.wrap.b32 	%r19598, %r19594, %r19595, 3;
	shf.l.wrap.b32 	%r19599, %r19595, %r19594, 3;
	mov.b64 	%rd4706, {%r19599, %r19598};
	shr.u64 	%rd4707, %rd4691, 6;
	xor.b64  	%rd4708, %rd4705, %rd4707;
	xor.b64  	%rd4709, %rd4708, %rd4706;
	shf.r.wrap.b32 	%r19600, %r19209, %r19208, 1;
	shf.r.wrap.b32 	%r19601, %r19208, %r19209, 1;
	mov.b64 	%rd4710, {%r19601, %r19600};
	shf.r.wrap.b32 	%r19602, %r19209, %r19208, 8;
	shf.r.wrap.b32 	%r19603, %r19208, %r19209, 8;
	mov.b64 	%rd4711, {%r19603, %r19602};
	shr.u64 	%rd4712, %rd4138, 7;
	xor.b64  	%rd4713, %rd4710, %rd4712;
	xor.b64  	%rd4714, %rd4713, %rd4711;
	add.s64 	%rd4715, %rd4626, %rd4125;
	add.s64 	%rd4716, %rd4715, %rd4709;
	add.s64 	%rd4717, %rd4716, %rd4714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19604,%dummy}, %rd4704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19605}, %rd4704;
	}
	shf.r.wrap.b32 	%r19606, %r19605, %r19604, 19;
	shf.r.wrap.b32 	%r19607, %r19604, %r19605, 19;
	mov.b64 	%rd4718, {%r19607, %r19606};
	shf.l.wrap.b32 	%r19608, %r19604, %r19605, 3;
	shf.l.wrap.b32 	%r19609, %r19605, %r19604, 3;
	mov.b64 	%rd4719, {%r19609, %r19608};
	shr.u64 	%rd4720, %rd4704, 6;
	xor.b64  	%rd4721, %rd4718, %rd4720;
	xor.b64  	%rd4722, %rd4721, %rd4719;
	shf.r.wrap.b32 	%r19610, %r19219, %r19218, 1;
	shf.r.wrap.b32 	%r19611, %r19218, %r19219, 1;
	mov.b64 	%rd4723, {%r19611, %r19610};
	shf.r.wrap.b32 	%r19612, %r19219, %r19218, 8;
	shf.r.wrap.b32 	%r19613, %r19218, %r19219, 8;
	mov.b64 	%rd4724, {%r19613, %r19612};
	shr.u64 	%rd4725, %rd4151, 7;
	xor.b64  	%rd4726, %rd4723, %rd4725;
	xor.b64  	%rd4727, %rd4726, %rd4724;
	add.s64 	%rd4728, %rd4639, %rd4138;
	add.s64 	%rd4729, %rd4728, %rd4722;
	add.s64 	%rd4730, %rd4729, %rd4727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19614,%dummy}, %rd4717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19615}, %rd4717;
	}
	shf.r.wrap.b32 	%r19616, %r19615, %r19614, 19;
	shf.r.wrap.b32 	%r19617, %r19614, %r19615, 19;
	mov.b64 	%rd4731, {%r19617, %r19616};
	shf.l.wrap.b32 	%r19618, %r19614, %r19615, 3;
	shf.l.wrap.b32 	%r19619, %r19615, %r19614, 3;
	mov.b64 	%rd4732, {%r19619, %r19618};
	shr.u64 	%rd4733, %rd4717, 6;
	xor.b64  	%rd4734, %rd4731, %rd4733;
	xor.b64  	%rd4735, %rd4734, %rd4732;
	shf.r.wrap.b32 	%r19620, %r19229, %r19228, 1;
	shf.r.wrap.b32 	%r19621, %r19228, %r19229, 1;
	mov.b64 	%rd4736, {%r19621, %r19620};
	shf.r.wrap.b32 	%r19622, %r19229, %r19228, 8;
	shf.r.wrap.b32 	%r19623, %r19228, %r19229, 8;
	mov.b64 	%rd4737, {%r19623, %r19622};
	shr.u64 	%rd4738, %rd4164, 7;
	xor.b64  	%rd4739, %rd4736, %rd4738;
	xor.b64  	%rd4740, %rd4739, %rd4737;
	add.s64 	%rd4741, %rd4652, %rd4151;
	add.s64 	%rd4742, %rd4741, %rd4735;
	add.s64 	%rd4743, %rd4742, %rd4740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19624,%dummy}, %rd4730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19625}, %rd4730;
	}
	shf.r.wrap.b32 	%r19626, %r19625, %r19624, 19;
	shf.r.wrap.b32 	%r19627, %r19624, %r19625, 19;
	mov.b64 	%rd4744, {%r19627, %r19626};
	shf.l.wrap.b32 	%r19628, %r19624, %r19625, 3;
	shf.l.wrap.b32 	%r19629, %r19625, %r19624, 3;
	mov.b64 	%rd4745, {%r19629, %r19628};
	shr.u64 	%rd4746, %rd4730, 6;
	xor.b64  	%rd4747, %rd4744, %rd4746;
	xor.b64  	%rd4748, %rd4747, %rd4745;
	shf.r.wrap.b32 	%r19630, %r19239, %r19238, 1;
	shf.r.wrap.b32 	%r19631, %r19238, %r19239, 1;
	mov.b64 	%rd4749, {%r19631, %r19630};
	shf.r.wrap.b32 	%r19632, %r19239, %r19238, 8;
	shf.r.wrap.b32 	%r19633, %r19238, %r19239, 8;
	mov.b64 	%rd4750, {%r19633, %r19632};
	shr.u64 	%rd4751, %rd4177, 7;
	xor.b64  	%rd4752, %rd4749, %rd4751;
	xor.b64  	%rd4753, %rd4752, %rd4750;
	add.s64 	%rd4754, %rd4665, %rd4164;
	add.s64 	%rd4755, %rd4754, %rd4748;
	add.s64 	%rd4756, %rd4755, %rd4753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19634,%dummy}, %rd4743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19635}, %rd4743;
	}
	shf.r.wrap.b32 	%r19636, %r19635, %r19634, 19;
	shf.r.wrap.b32 	%r19637, %r19634, %r19635, 19;
	mov.b64 	%rd4757, {%r19637, %r19636};
	shf.l.wrap.b32 	%r19638, %r19634, %r19635, 3;
	shf.l.wrap.b32 	%r19639, %r19635, %r19634, 3;
	mov.b64 	%rd4758, {%r19639, %r19638};
	shr.u64 	%rd4759, %rd4743, 6;
	xor.b64  	%rd4760, %rd4757, %rd4759;
	xor.b64  	%rd4761, %rd4760, %rd4758;
	shf.r.wrap.b32 	%r19640, %r19505, %r19504, 1;
	shf.r.wrap.b32 	%r19641, %r19504, %r19505, 1;
	mov.b64 	%rd4762, {%r19641, %r19640};
	shf.r.wrap.b32 	%r19642, %r19505, %r19504, 8;
	shf.r.wrap.b32 	%r19643, %r19504, %r19505, 8;
	mov.b64 	%rd4763, {%r19643, %r19642};
	shr.u64 	%rd4764, %rd4190, 7;
	xor.b64  	%rd4765, %rd4762, %rd4764;
	xor.b64  	%rd4766, %rd4765, %rd4763;
	add.s64 	%rd4767, %rd4678, %rd4177;
	add.s64 	%rd4768, %rd4767, %rd4761;
	add.s64 	%rd4769, %rd4768, %rd4766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19644,%dummy}, %rd4756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19645}, %rd4756;
	}
	shf.r.wrap.b32 	%r19646, %r19645, %r19644, 19;
	shf.r.wrap.b32 	%r19647, %r19644, %r19645, 19;
	mov.b64 	%rd4770, {%r19647, %r19646};
	shf.l.wrap.b32 	%r19648, %r19644, %r19645, 3;
	shf.l.wrap.b32 	%r19649, %r19645, %r19644, 3;
	mov.b64 	%rd4771, {%r19649, %r19648};
	shr.u64 	%rd4772, %rd4756, 6;
	xor.b64  	%rd4773, %rd4770, %rd4772;
	xor.b64  	%rd4774, %rd4773, %rd4771;
	shf.r.wrap.b32 	%r19650, %r19515, %r19514, 1;
	shf.r.wrap.b32 	%r19651, %r19514, %r19515, 1;
	mov.b64 	%rd4775, {%r19651, %r19650};
	shf.r.wrap.b32 	%r19652, %r19515, %r19514, 8;
	shf.r.wrap.b32 	%r19653, %r19514, %r19515, 8;
	mov.b64 	%rd4776, {%r19653, %r19652};
	shr.u64 	%rd4777, %rd4203, 7;
	xor.b64  	%rd4778, %rd4775, %rd4777;
	xor.b64  	%rd4779, %rd4778, %rd4776;
	add.s64 	%rd4780, %rd4691, %rd4190;
	add.s64 	%rd4781, %rd4780, %rd4774;
	add.s64 	%rd4782, %rd4781, %rd4779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19654,%dummy}, %rd4769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19655}, %rd4769;
	}
	shf.r.wrap.b32 	%r19656, %r19655, %r19654, 19;
	shf.r.wrap.b32 	%r19657, %r19654, %r19655, 19;
	mov.b64 	%rd4783, {%r19657, %r19656};
	shf.l.wrap.b32 	%r19658, %r19654, %r19655, 3;
	shf.l.wrap.b32 	%r19659, %r19655, %r19654, 3;
	mov.b64 	%rd4784, {%r19659, %r19658};
	shr.u64 	%rd4785, %rd4769, 6;
	xor.b64  	%rd4786, %rd4783, %rd4785;
	xor.b64  	%rd4787, %rd4786, %rd4784;
	shf.r.wrap.b32 	%r19660, %r19525, %r19524, 1;
	shf.r.wrap.b32 	%r19661, %r19524, %r19525, 1;
	mov.b64 	%rd4788, {%r19661, %r19660};
	shf.r.wrap.b32 	%r19662, %r19525, %r19524, 8;
	shf.r.wrap.b32 	%r19663, %r19524, %r19525, 8;
	mov.b64 	%rd4789, {%r19663, %r19662};
	shr.u64 	%rd4790, %rd4600, 7;
	xor.b64  	%rd4791, %rd4788, %rd4790;
	xor.b64  	%rd4792, %rd4791, %rd4789;
	add.s64 	%rd4793, %rd4704, %rd4203;
	add.s64 	%rd4794, %rd4793, %rd4787;
	add.s64 	%rd4795, %rd4794, %rd4792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19664,%dummy}, %rd4576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19665}, %rd4576;
	}
	shf.r.wrap.b32 	%r19666, %r19665, %r19664, 14;
	shf.r.wrap.b32 	%r19667, %r19664, %r19665, 14;
	mov.b64 	%rd4796, {%r19667, %r19666};
	shf.r.wrap.b32 	%r19668, %r19665, %r19664, 18;
	shf.r.wrap.b32 	%r19669, %r19664, %r19665, 18;
	mov.b64 	%rd4797, {%r19669, %r19668};
	xor.b64  	%rd4798, %rd4797, %rd4796;
	shf.l.wrap.b32 	%r19670, %r19664, %r19665, 23;
	shf.l.wrap.b32 	%r19671, %r19665, %r19664, 23;
	mov.b64 	%rd4799, {%r19671, %r19670};
	xor.b64  	%rd4800, %rd4798, %rd4799;
	xor.b64  	%rd4801, %rd4552, %rd4528;
	and.b64  	%rd4802, %rd4801, %rd4576;
	xor.b64  	%rd4803, %rd4802, %rd4528;
	add.s64 	%rd4804, %rd4803, %rd4504;
	add.s64 	%rd4805, %rd4804, %rd4600;
	add.s64 	%rd4806, %rd4805, %rd50;
	add.s64 	%rd4807, %rd4806, %rd4800;
	add.s64 	%rd4808, %rd4807, %rd4515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19672,%dummy}, %rd4587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19673}, %rd4587;
	}
	shf.r.wrap.b32 	%r19674, %r19673, %r19672, 28;
	shf.r.wrap.b32 	%r19675, %r19672, %r19673, 28;
	mov.b64 	%rd4809, {%r19675, %r19674};
	shf.l.wrap.b32 	%r19676, %r19672, %r19673, 30;
	shf.l.wrap.b32 	%r19677, %r19673, %r19672, 30;
	mov.b64 	%rd4810, {%r19677, %r19676};
	xor.b64  	%rd4811, %rd4810, %rd4809;
	shf.l.wrap.b32 	%r19678, %r19672, %r19673, 25;
	shf.l.wrap.b32 	%r19679, %r19673, %r19672, 25;
	mov.b64 	%rd4812, {%r19679, %r19678};
	xor.b64  	%rd4813, %rd4811, %rd4812;
	xor.b64  	%rd4814, %rd4587, %rd4539;
	xor.b64  	%rd4815, %rd4587, %rd4563;
	and.b64  	%rd4816, %rd4815, %rd4814;
	xor.b64  	%rd4817, %rd4816, %rd4587;
	add.s64 	%rd4818, %rd4807, %rd4817;
	add.s64 	%rd4819, %rd4818, %rd4813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19680,%dummy}, %rd4808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19681}, %rd4808;
	}
	shf.r.wrap.b32 	%r19682, %r19681, %r19680, 14;
	shf.r.wrap.b32 	%r19683, %r19680, %r19681, 14;
	mov.b64 	%rd4820, {%r19683, %r19682};
	shf.r.wrap.b32 	%r19684, %r19681, %r19680, 18;
	shf.r.wrap.b32 	%r19685, %r19680, %r19681, 18;
	mov.b64 	%rd4821, {%r19685, %r19684};
	xor.b64  	%rd4822, %rd4821, %rd4820;
	shf.l.wrap.b32 	%r19686, %r19680, %r19681, 23;
	shf.l.wrap.b32 	%r19687, %r19681, %r19680, 23;
	mov.b64 	%rd4823, {%r19687, %r19686};
	xor.b64  	%rd4824, %rd4822, %rd4823;
	xor.b64  	%rd4825, %rd4576, %rd4552;
	and.b64  	%rd4826, %rd4808, %rd4825;
	xor.b64  	%rd4827, %rd4826, %rd4552;
	add.s64 	%rd4828, %rd4613, %rd4528;
	add.s64 	%rd4829, %rd4828, %rd51;
	add.s64 	%rd4830, %rd4829, %rd4827;
	add.s64 	%rd4831, %rd4830, %rd4824;
	add.s64 	%rd4832, %rd4831, %rd4539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19688,%dummy}, %rd4819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19689}, %rd4819;
	}
	shf.r.wrap.b32 	%r19690, %r19689, %r19688, 28;
	shf.r.wrap.b32 	%r19691, %r19688, %r19689, 28;
	mov.b64 	%rd4833, {%r19691, %r19690};
	shf.l.wrap.b32 	%r19692, %r19688, %r19689, 30;
	shf.l.wrap.b32 	%r19693, %r19689, %r19688, 30;
	mov.b64 	%rd4834, {%r19693, %r19692};
	xor.b64  	%rd4835, %rd4834, %rd4833;
	shf.l.wrap.b32 	%r19694, %r19688, %r19689, 25;
	shf.l.wrap.b32 	%r19695, %r19689, %r19688, 25;
	mov.b64 	%rd4836, {%r19695, %r19694};
	xor.b64  	%rd4837, %rd4835, %rd4836;
	xor.b64  	%rd4838, %rd4819, %rd4563;
	xor.b64  	%rd4839, %rd4819, %rd4587;
	and.b64  	%rd4840, %rd4839, %rd4838;
	xor.b64  	%rd4841, %rd4840, %rd4819;
	add.s64 	%rd4842, %rd4831, %rd4841;
	add.s64 	%rd4843, %rd4842, %rd4837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19696,%dummy}, %rd4832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19697}, %rd4832;
	}
	shf.r.wrap.b32 	%r19698, %r19697, %r19696, 14;
	shf.r.wrap.b32 	%r19699, %r19696, %r19697, 14;
	mov.b64 	%rd4844, {%r19699, %r19698};
	shf.r.wrap.b32 	%r19700, %r19697, %r19696, 18;
	shf.r.wrap.b32 	%r19701, %r19696, %r19697, 18;
	mov.b64 	%rd4845, {%r19701, %r19700};
	xor.b64  	%rd4846, %rd4845, %rd4844;
	shf.l.wrap.b32 	%r19702, %r19696, %r19697, 23;
	shf.l.wrap.b32 	%r19703, %r19697, %r19696, 23;
	mov.b64 	%rd4847, {%r19703, %r19702};
	xor.b64  	%rd4848, %rd4846, %rd4847;
	xor.b64  	%rd4849, %rd4808, %rd4576;
	and.b64  	%rd4850, %rd4832, %rd4849;
	xor.b64  	%rd4851, %rd4850, %rd4576;
	add.s64 	%rd4852, %rd4626, %rd4552;
	add.s64 	%rd4853, %rd4852, %rd52;
	add.s64 	%rd4854, %rd4853, %rd4851;
	add.s64 	%rd4855, %rd4854, %rd4848;
	add.s64 	%rd4856, %rd4855, %rd4563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19704,%dummy}, %rd4843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19705}, %rd4843;
	}
	shf.r.wrap.b32 	%r19706, %r19705, %r19704, 28;
	shf.r.wrap.b32 	%r19707, %r19704, %r19705, 28;
	mov.b64 	%rd4857, {%r19707, %r19706};
	shf.l.wrap.b32 	%r19708, %r19704, %r19705, 30;
	shf.l.wrap.b32 	%r19709, %r19705, %r19704, 30;
	mov.b64 	%rd4858, {%r19709, %r19708};
	xor.b64  	%rd4859, %rd4858, %rd4857;
	shf.l.wrap.b32 	%r19710, %r19704, %r19705, 25;
	shf.l.wrap.b32 	%r19711, %r19705, %r19704, 25;
	mov.b64 	%rd4860, {%r19711, %r19710};
	xor.b64  	%rd4861, %rd4859, %rd4860;
	xor.b64  	%rd4862, %rd4843, %rd4587;
	xor.b64  	%rd4863, %rd4843, %rd4819;
	and.b64  	%rd4864, %rd4863, %rd4862;
	xor.b64  	%rd4865, %rd4864, %rd4843;
	add.s64 	%rd4866, %rd4855, %rd4865;
	add.s64 	%rd4867, %rd4866, %rd4861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19712,%dummy}, %rd4856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19713}, %rd4856;
	}
	shf.r.wrap.b32 	%r19714, %r19713, %r19712, 14;
	shf.r.wrap.b32 	%r19715, %r19712, %r19713, 14;
	mov.b64 	%rd4868, {%r19715, %r19714};
	shf.r.wrap.b32 	%r19716, %r19713, %r19712, 18;
	shf.r.wrap.b32 	%r19717, %r19712, %r19713, 18;
	mov.b64 	%rd4869, {%r19717, %r19716};
	xor.b64  	%rd4870, %rd4869, %rd4868;
	shf.l.wrap.b32 	%r19718, %r19712, %r19713, 23;
	shf.l.wrap.b32 	%r19719, %r19713, %r19712, 23;
	mov.b64 	%rd4871, {%r19719, %r19718};
	xor.b64  	%rd4872, %rd4870, %rd4871;
	xor.b64  	%rd4873, %rd4832, %rd4808;
	and.b64  	%rd4874, %rd4856, %rd4873;
	xor.b64  	%rd4875, %rd4874, %rd4808;
	add.s64 	%rd4876, %rd4639, %rd4576;
	add.s64 	%rd4877, %rd4876, %rd53;
	add.s64 	%rd4878, %rd4877, %rd4875;
	add.s64 	%rd4879, %rd4878, %rd4872;
	add.s64 	%rd4880, %rd4879, %rd4587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19720,%dummy}, %rd4867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19721}, %rd4867;
	}
	shf.r.wrap.b32 	%r19722, %r19721, %r19720, 28;
	shf.r.wrap.b32 	%r19723, %r19720, %r19721, 28;
	mov.b64 	%rd4881, {%r19723, %r19722};
	shf.l.wrap.b32 	%r19724, %r19720, %r19721, 30;
	shf.l.wrap.b32 	%r19725, %r19721, %r19720, 30;
	mov.b64 	%rd4882, {%r19725, %r19724};
	xor.b64  	%rd4883, %rd4882, %rd4881;
	shf.l.wrap.b32 	%r19726, %r19720, %r19721, 25;
	shf.l.wrap.b32 	%r19727, %r19721, %r19720, 25;
	mov.b64 	%rd4884, {%r19727, %r19726};
	xor.b64  	%rd4885, %rd4883, %rd4884;
	xor.b64  	%rd4886, %rd4867, %rd4819;
	xor.b64  	%rd4887, %rd4867, %rd4843;
	and.b64  	%rd4888, %rd4887, %rd4886;
	xor.b64  	%rd4889, %rd4888, %rd4867;
	add.s64 	%rd4890, %rd4879, %rd4889;
	add.s64 	%rd4891, %rd4890, %rd4885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19728,%dummy}, %rd4880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19729}, %rd4880;
	}
	shf.r.wrap.b32 	%r19730, %r19729, %r19728, 14;
	shf.r.wrap.b32 	%r19731, %r19728, %r19729, 14;
	mov.b64 	%rd4892, {%r19731, %r19730};
	shf.r.wrap.b32 	%r19732, %r19729, %r19728, 18;
	shf.r.wrap.b32 	%r19733, %r19728, %r19729, 18;
	mov.b64 	%rd4893, {%r19733, %r19732};
	xor.b64  	%rd4894, %rd4893, %rd4892;
	shf.l.wrap.b32 	%r19734, %r19728, %r19729, 23;
	shf.l.wrap.b32 	%r19735, %r19729, %r19728, 23;
	mov.b64 	%rd4895, {%r19735, %r19734};
	xor.b64  	%rd4896, %rd4894, %rd4895;
	xor.b64  	%rd4897, %rd4856, %rd4832;
	and.b64  	%rd4898, %rd4880, %rd4897;
	xor.b64  	%rd4899, %rd4898, %rd4832;
	add.s64 	%rd4900, %rd4808, %rd4652;
	add.s64 	%rd4901, %rd4900, %rd54;
	add.s64 	%rd4902, %rd4901, %rd4899;
	add.s64 	%rd4903, %rd4902, %rd4896;
	add.s64 	%rd4904, %rd4903, %rd4819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19736,%dummy}, %rd4891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19737}, %rd4891;
	}
	shf.r.wrap.b32 	%r19738, %r19737, %r19736, 28;
	shf.r.wrap.b32 	%r19739, %r19736, %r19737, 28;
	mov.b64 	%rd4905, {%r19739, %r19738};
	shf.l.wrap.b32 	%r19740, %r19736, %r19737, 30;
	shf.l.wrap.b32 	%r19741, %r19737, %r19736, 30;
	mov.b64 	%rd4906, {%r19741, %r19740};
	xor.b64  	%rd4907, %rd4906, %rd4905;
	shf.l.wrap.b32 	%r19742, %r19736, %r19737, 25;
	shf.l.wrap.b32 	%r19743, %r19737, %r19736, 25;
	mov.b64 	%rd4908, {%r19743, %r19742};
	xor.b64  	%rd4909, %rd4907, %rd4908;
	xor.b64  	%rd4910, %rd4891, %rd4843;
	xor.b64  	%rd4911, %rd4891, %rd4867;
	and.b64  	%rd4912, %rd4911, %rd4910;
	xor.b64  	%rd4913, %rd4912, %rd4891;
	add.s64 	%rd4914, %rd4903, %rd4913;
	add.s64 	%rd4915, %rd4914, %rd4909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19744,%dummy}, %rd4904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19745}, %rd4904;
	}
	shf.r.wrap.b32 	%r19746, %r19745, %r19744, 14;
	shf.r.wrap.b32 	%r19747, %r19744, %r19745, 14;
	mov.b64 	%rd4916, {%r19747, %r19746};
	shf.r.wrap.b32 	%r19748, %r19745, %r19744, 18;
	shf.r.wrap.b32 	%r19749, %r19744, %r19745, 18;
	mov.b64 	%rd4917, {%r19749, %r19748};
	xor.b64  	%rd4918, %rd4917, %rd4916;
	shf.l.wrap.b32 	%r19750, %r19744, %r19745, 23;
	shf.l.wrap.b32 	%r19751, %r19745, %r19744, 23;
	mov.b64 	%rd4919, {%r19751, %r19750};
	xor.b64  	%rd4920, %rd4918, %rd4919;
	xor.b64  	%rd4921, %rd4880, %rd4856;
	and.b64  	%rd4922, %rd4904, %rd4921;
	xor.b64  	%rd4923, %rd4922, %rd4856;
	add.s64 	%rd4924, %rd4832, %rd4665;
	add.s64 	%rd4925, %rd4924, %rd55;
	add.s64 	%rd4926, %rd4925, %rd4923;
	add.s64 	%rd4927, %rd4926, %rd4920;
	add.s64 	%rd4928, %rd4927, %rd4843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19752,%dummy}, %rd4915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19753}, %rd4915;
	}
	shf.r.wrap.b32 	%r19754, %r19753, %r19752, 28;
	shf.r.wrap.b32 	%r19755, %r19752, %r19753, 28;
	mov.b64 	%rd4929, {%r19755, %r19754};
	shf.l.wrap.b32 	%r19756, %r19752, %r19753, 30;
	shf.l.wrap.b32 	%r19757, %r19753, %r19752, 30;
	mov.b64 	%rd4930, {%r19757, %r19756};
	xor.b64  	%rd4931, %rd4930, %rd4929;
	shf.l.wrap.b32 	%r19758, %r19752, %r19753, 25;
	shf.l.wrap.b32 	%r19759, %r19753, %r19752, 25;
	mov.b64 	%rd4932, {%r19759, %r19758};
	xor.b64  	%rd4933, %rd4931, %rd4932;
	xor.b64  	%rd4934, %rd4915, %rd4867;
	xor.b64  	%rd4935, %rd4915, %rd4891;
	and.b64  	%rd4936, %rd4935, %rd4934;
	xor.b64  	%rd4937, %rd4936, %rd4915;
	add.s64 	%rd4938, %rd4927, %rd4937;
	add.s64 	%rd4939, %rd4938, %rd4933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19760,%dummy}, %rd4928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19761}, %rd4928;
	}
	shf.r.wrap.b32 	%r19762, %r19761, %r19760, 14;
	shf.r.wrap.b32 	%r19763, %r19760, %r19761, 14;
	mov.b64 	%rd4940, {%r19763, %r19762};
	shf.r.wrap.b32 	%r19764, %r19761, %r19760, 18;
	shf.r.wrap.b32 	%r19765, %r19760, %r19761, 18;
	mov.b64 	%rd4941, {%r19765, %r19764};
	xor.b64  	%rd4942, %rd4941, %rd4940;
	shf.l.wrap.b32 	%r19766, %r19760, %r19761, 23;
	shf.l.wrap.b32 	%r19767, %r19761, %r19760, 23;
	mov.b64 	%rd4943, {%r19767, %r19766};
	xor.b64  	%rd4944, %rd4942, %rd4943;
	xor.b64  	%rd4945, %rd4904, %rd4880;
	and.b64  	%rd4946, %rd4928, %rd4945;
	xor.b64  	%rd4947, %rd4946, %rd4880;
	add.s64 	%rd4948, %rd4856, %rd4678;
	add.s64 	%rd4949, %rd4948, %rd56;
	add.s64 	%rd4950, %rd4949, %rd4947;
	add.s64 	%rd4951, %rd4950, %rd4944;
	add.s64 	%rd4952, %rd4951, %rd4867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19768,%dummy}, %rd4939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19769}, %rd4939;
	}
	shf.r.wrap.b32 	%r19770, %r19769, %r19768, 28;
	shf.r.wrap.b32 	%r19771, %r19768, %r19769, 28;
	mov.b64 	%rd4953, {%r19771, %r19770};
	shf.l.wrap.b32 	%r19772, %r19768, %r19769, 30;
	shf.l.wrap.b32 	%r19773, %r19769, %r19768, 30;
	mov.b64 	%rd4954, {%r19773, %r19772};
	xor.b64  	%rd4955, %rd4954, %rd4953;
	shf.l.wrap.b32 	%r19774, %r19768, %r19769, 25;
	shf.l.wrap.b32 	%r19775, %r19769, %r19768, 25;
	mov.b64 	%rd4956, {%r19775, %r19774};
	xor.b64  	%rd4957, %rd4955, %rd4956;
	xor.b64  	%rd4958, %rd4939, %rd4891;
	xor.b64  	%rd4959, %rd4939, %rd4915;
	and.b64  	%rd4960, %rd4959, %rd4958;
	xor.b64  	%rd4961, %rd4960, %rd4939;
	add.s64 	%rd4962, %rd4951, %rd4961;
	add.s64 	%rd4963, %rd4962, %rd4957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19776,%dummy}, %rd4952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19777}, %rd4952;
	}
	shf.r.wrap.b32 	%r19778, %r19777, %r19776, 14;
	shf.r.wrap.b32 	%r19779, %r19776, %r19777, 14;
	mov.b64 	%rd4964, {%r19779, %r19778};
	shf.r.wrap.b32 	%r19780, %r19777, %r19776, 18;
	shf.r.wrap.b32 	%r19781, %r19776, %r19777, 18;
	mov.b64 	%rd4965, {%r19781, %r19780};
	xor.b64  	%rd4966, %rd4965, %rd4964;
	shf.l.wrap.b32 	%r19782, %r19776, %r19777, 23;
	shf.l.wrap.b32 	%r19783, %r19777, %r19776, 23;
	mov.b64 	%rd4967, {%r19783, %r19782};
	xor.b64  	%rd4968, %rd4966, %rd4967;
	xor.b64  	%rd4969, %rd4928, %rd4904;
	and.b64  	%rd4970, %rd4952, %rd4969;
	xor.b64  	%rd4971, %rd4970, %rd4904;
	add.s64 	%rd4972, %rd4880, %rd4691;
	add.s64 	%rd4973, %rd4972, %rd57;
	add.s64 	%rd4974, %rd4973, %rd4971;
	add.s64 	%rd4975, %rd4974, %rd4968;
	add.s64 	%rd4976, %rd4975, %rd4891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19784,%dummy}, %rd4963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19785}, %rd4963;
	}
	shf.r.wrap.b32 	%r19786, %r19785, %r19784, 28;
	shf.r.wrap.b32 	%r19787, %r19784, %r19785, 28;
	mov.b64 	%rd4977, {%r19787, %r19786};
	shf.l.wrap.b32 	%r19788, %r19784, %r19785, 30;
	shf.l.wrap.b32 	%r19789, %r19785, %r19784, 30;
	mov.b64 	%rd4978, {%r19789, %r19788};
	xor.b64  	%rd4979, %rd4978, %rd4977;
	shf.l.wrap.b32 	%r19790, %r19784, %r19785, 25;
	shf.l.wrap.b32 	%r19791, %r19785, %r19784, 25;
	mov.b64 	%rd4980, {%r19791, %r19790};
	xor.b64  	%rd4981, %rd4979, %rd4980;
	xor.b64  	%rd4982, %rd4963, %rd4915;
	xor.b64  	%rd4983, %rd4963, %rd4939;
	and.b64  	%rd4984, %rd4983, %rd4982;
	xor.b64  	%rd4985, %rd4984, %rd4963;
	add.s64 	%rd4986, %rd4975, %rd4985;
	add.s64 	%rd4987, %rd4986, %rd4981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19792,%dummy}, %rd4976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19793}, %rd4976;
	}
	shf.r.wrap.b32 	%r19794, %r19793, %r19792, 14;
	shf.r.wrap.b32 	%r19795, %r19792, %r19793, 14;
	mov.b64 	%rd4988, {%r19795, %r19794};
	shf.r.wrap.b32 	%r19796, %r19793, %r19792, 18;
	shf.r.wrap.b32 	%r19797, %r19792, %r19793, 18;
	mov.b64 	%rd4989, {%r19797, %r19796};
	xor.b64  	%rd4990, %rd4989, %rd4988;
	shf.l.wrap.b32 	%r19798, %r19792, %r19793, 23;
	shf.l.wrap.b32 	%r19799, %r19793, %r19792, 23;
	mov.b64 	%rd4991, {%r19799, %r19798};
	xor.b64  	%rd4992, %rd4990, %rd4991;
	xor.b64  	%rd4993, %rd4952, %rd4928;
	and.b64  	%rd4994, %rd4976, %rd4993;
	xor.b64  	%rd4995, %rd4994, %rd4928;
	add.s64 	%rd4996, %rd4904, %rd4704;
	add.s64 	%rd4997, %rd4996, %rd58;
	add.s64 	%rd4998, %rd4997, %rd4995;
	add.s64 	%rd4999, %rd4998, %rd4992;
	add.s64 	%rd5000, %rd4999, %rd4915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19800,%dummy}, %rd4987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19801}, %rd4987;
	}
	shf.r.wrap.b32 	%r19802, %r19801, %r19800, 28;
	shf.r.wrap.b32 	%r19803, %r19800, %r19801, 28;
	mov.b64 	%rd5001, {%r19803, %r19802};
	shf.l.wrap.b32 	%r19804, %r19800, %r19801, 30;
	shf.l.wrap.b32 	%r19805, %r19801, %r19800, 30;
	mov.b64 	%rd5002, {%r19805, %r19804};
	xor.b64  	%rd5003, %rd5002, %rd5001;
	shf.l.wrap.b32 	%r19806, %r19800, %r19801, 25;
	shf.l.wrap.b32 	%r19807, %r19801, %r19800, 25;
	mov.b64 	%rd5004, {%r19807, %r19806};
	xor.b64  	%rd5005, %rd5003, %rd5004;
	xor.b64  	%rd5006, %rd4987, %rd4939;
	xor.b64  	%rd5007, %rd4987, %rd4963;
	and.b64  	%rd5008, %rd5007, %rd5006;
	xor.b64  	%rd5009, %rd5008, %rd4987;
	add.s64 	%rd5010, %rd4999, %rd5009;
	add.s64 	%rd5011, %rd5010, %rd5005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19808,%dummy}, %rd5000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19809}, %rd5000;
	}
	shf.r.wrap.b32 	%r19810, %r19809, %r19808, 14;
	shf.r.wrap.b32 	%r19811, %r19808, %r19809, 14;
	mov.b64 	%rd5012, {%r19811, %r19810};
	shf.r.wrap.b32 	%r19812, %r19809, %r19808, 18;
	shf.r.wrap.b32 	%r19813, %r19808, %r19809, 18;
	mov.b64 	%rd5013, {%r19813, %r19812};
	xor.b64  	%rd5014, %rd5013, %rd5012;
	shf.l.wrap.b32 	%r19814, %r19808, %r19809, 23;
	shf.l.wrap.b32 	%r19815, %r19809, %r19808, 23;
	mov.b64 	%rd5015, {%r19815, %r19814};
	xor.b64  	%rd5016, %rd5014, %rd5015;
	xor.b64  	%rd5017, %rd4976, %rd4952;
	and.b64  	%rd5018, %rd5000, %rd5017;
	xor.b64  	%rd5019, %rd5018, %rd4952;
	add.s64 	%rd5020, %rd4928, %rd4717;
	add.s64 	%rd5021, %rd5020, %rd59;
	add.s64 	%rd5022, %rd5021, %rd5019;
	add.s64 	%rd5023, %rd5022, %rd5016;
	add.s64 	%rd5024, %rd5023, %rd4939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19816,%dummy}, %rd5011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19817}, %rd5011;
	}
	shf.r.wrap.b32 	%r19818, %r19817, %r19816, 28;
	shf.r.wrap.b32 	%r19819, %r19816, %r19817, 28;
	mov.b64 	%rd5025, {%r19819, %r19818};
	shf.l.wrap.b32 	%r19820, %r19816, %r19817, 30;
	shf.l.wrap.b32 	%r19821, %r19817, %r19816, 30;
	mov.b64 	%rd5026, {%r19821, %r19820};
	xor.b64  	%rd5027, %rd5026, %rd5025;
	shf.l.wrap.b32 	%r19822, %r19816, %r19817, 25;
	shf.l.wrap.b32 	%r19823, %r19817, %r19816, 25;
	mov.b64 	%rd5028, {%r19823, %r19822};
	xor.b64  	%rd5029, %rd5027, %rd5028;
	xor.b64  	%rd5030, %rd5011, %rd4963;
	xor.b64  	%rd5031, %rd5011, %rd4987;
	and.b64  	%rd5032, %rd5031, %rd5030;
	xor.b64  	%rd5033, %rd5032, %rd5011;
	add.s64 	%rd5034, %rd5023, %rd5033;
	add.s64 	%rd5035, %rd5034, %rd5029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19824,%dummy}, %rd5024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19825}, %rd5024;
	}
	shf.r.wrap.b32 	%r19826, %r19825, %r19824, 14;
	shf.r.wrap.b32 	%r19827, %r19824, %r19825, 14;
	mov.b64 	%rd5036, {%r19827, %r19826};
	shf.r.wrap.b32 	%r19828, %r19825, %r19824, 18;
	shf.r.wrap.b32 	%r19829, %r19824, %r19825, 18;
	mov.b64 	%rd5037, {%r19829, %r19828};
	xor.b64  	%rd5038, %rd5037, %rd5036;
	shf.l.wrap.b32 	%r19830, %r19824, %r19825, 23;
	shf.l.wrap.b32 	%r19831, %r19825, %r19824, 23;
	mov.b64 	%rd5039, {%r19831, %r19830};
	xor.b64  	%rd5040, %rd5038, %rd5039;
	xor.b64  	%rd5041, %rd5000, %rd4976;
	and.b64  	%rd5042, %rd5024, %rd5041;
	xor.b64  	%rd5043, %rd5042, %rd4976;
	add.s64 	%rd5044, %rd4952, %rd4730;
	add.s64 	%rd5045, %rd5044, %rd60;
	add.s64 	%rd5046, %rd5045, %rd5043;
	add.s64 	%rd5047, %rd5046, %rd5040;
	add.s64 	%rd5048, %rd5047, %rd4963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19832,%dummy}, %rd5035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19833}, %rd5035;
	}
	shf.r.wrap.b32 	%r19834, %r19833, %r19832, 28;
	shf.r.wrap.b32 	%r19835, %r19832, %r19833, 28;
	mov.b64 	%rd5049, {%r19835, %r19834};
	shf.l.wrap.b32 	%r19836, %r19832, %r19833, 30;
	shf.l.wrap.b32 	%r19837, %r19833, %r19832, 30;
	mov.b64 	%rd5050, {%r19837, %r19836};
	xor.b64  	%rd5051, %rd5050, %rd5049;
	shf.l.wrap.b32 	%r19838, %r19832, %r19833, 25;
	shf.l.wrap.b32 	%r19839, %r19833, %r19832, 25;
	mov.b64 	%rd5052, {%r19839, %r19838};
	xor.b64  	%rd5053, %rd5051, %rd5052;
	xor.b64  	%rd5054, %rd5035, %rd4987;
	xor.b64  	%rd5055, %rd5035, %rd5011;
	and.b64  	%rd5056, %rd5055, %rd5054;
	xor.b64  	%rd5057, %rd5056, %rd5035;
	add.s64 	%rd5058, %rd5047, %rd5057;
	add.s64 	%rd5059, %rd5058, %rd5053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19840,%dummy}, %rd5048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19841}, %rd5048;
	}
	shf.r.wrap.b32 	%r19842, %r19841, %r19840, 14;
	shf.r.wrap.b32 	%r19843, %r19840, %r19841, 14;
	mov.b64 	%rd5060, {%r19843, %r19842};
	shf.r.wrap.b32 	%r19844, %r19841, %r19840, 18;
	shf.r.wrap.b32 	%r19845, %r19840, %r19841, 18;
	mov.b64 	%rd5061, {%r19845, %r19844};
	xor.b64  	%rd5062, %rd5061, %rd5060;
	shf.l.wrap.b32 	%r19846, %r19840, %r19841, 23;
	shf.l.wrap.b32 	%r19847, %r19841, %r19840, 23;
	mov.b64 	%rd5063, {%r19847, %r19846};
	xor.b64  	%rd5064, %rd5062, %rd5063;
	xor.b64  	%rd5065, %rd5024, %rd5000;
	and.b64  	%rd5066, %rd5048, %rd5065;
	xor.b64  	%rd5067, %rd5066, %rd5000;
	add.s64 	%rd5068, %rd4976, %rd4743;
	add.s64 	%rd5069, %rd5068, %rd61;
	add.s64 	%rd5070, %rd5069, %rd5067;
	add.s64 	%rd5071, %rd5070, %rd5064;
	add.s64 	%rd5072, %rd5071, %rd4987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19848,%dummy}, %rd5059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19849}, %rd5059;
	}
	shf.r.wrap.b32 	%r19850, %r19849, %r19848, 28;
	shf.r.wrap.b32 	%r19851, %r19848, %r19849, 28;
	mov.b64 	%rd5073, {%r19851, %r19850};
	shf.l.wrap.b32 	%r19852, %r19848, %r19849, 30;
	shf.l.wrap.b32 	%r19853, %r19849, %r19848, 30;
	mov.b64 	%rd5074, {%r19853, %r19852};
	xor.b64  	%rd5075, %rd5074, %rd5073;
	shf.l.wrap.b32 	%r19854, %r19848, %r19849, 25;
	shf.l.wrap.b32 	%r19855, %r19849, %r19848, 25;
	mov.b64 	%rd5076, {%r19855, %r19854};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	xor.b64  	%rd5078, %rd5059, %rd5011;
	xor.b64  	%rd5079, %rd5059, %rd5035;
	and.b64  	%rd5080, %rd5079, %rd5078;
	xor.b64  	%rd5081, %rd5080, %rd5059;
	add.s64 	%rd5082, %rd5071, %rd5081;
	add.s64 	%rd5083, %rd5082, %rd5077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19856,%dummy}, %rd5072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19857}, %rd5072;
	}
	shf.r.wrap.b32 	%r19858, %r19857, %r19856, 14;
	shf.r.wrap.b32 	%r19859, %r19856, %r19857, 14;
	mov.b64 	%rd5084, {%r19859, %r19858};
	shf.r.wrap.b32 	%r19860, %r19857, %r19856, 18;
	shf.r.wrap.b32 	%r19861, %r19856, %r19857, 18;
	mov.b64 	%rd5085, {%r19861, %r19860};
	xor.b64  	%rd5086, %rd5085, %rd5084;
	shf.l.wrap.b32 	%r19862, %r19856, %r19857, 23;
	shf.l.wrap.b32 	%r19863, %r19857, %r19856, 23;
	mov.b64 	%rd5087, {%r19863, %r19862};
	xor.b64  	%rd5088, %rd5086, %rd5087;
	xor.b64  	%rd5089, %rd5048, %rd5024;
	and.b64  	%rd5090, %rd5072, %rd5089;
	xor.b64  	%rd5091, %rd5090, %rd5024;
	add.s64 	%rd5092, %rd5000, %rd4756;
	add.s64 	%rd5093, %rd5092, %rd62;
	add.s64 	%rd5094, %rd5093, %rd5091;
	add.s64 	%rd5095, %rd5094, %rd5088;
	add.s64 	%rd5096, %rd5095, %rd5011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19864,%dummy}, %rd5083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19865}, %rd5083;
	}
	shf.r.wrap.b32 	%r19866, %r19865, %r19864, 28;
	shf.r.wrap.b32 	%r19867, %r19864, %r19865, 28;
	mov.b64 	%rd5097, {%r19867, %r19866};
	shf.l.wrap.b32 	%r19868, %r19864, %r19865, 30;
	shf.l.wrap.b32 	%r19869, %r19865, %r19864, 30;
	mov.b64 	%rd5098, {%r19869, %r19868};
	xor.b64  	%rd5099, %rd5098, %rd5097;
	shf.l.wrap.b32 	%r19870, %r19864, %r19865, 25;
	shf.l.wrap.b32 	%r19871, %r19865, %r19864, 25;
	mov.b64 	%rd5100, {%r19871, %r19870};
	xor.b64  	%rd5101, %rd5099, %rd5100;
	xor.b64  	%rd5102, %rd5083, %rd5035;
	xor.b64  	%rd5103, %rd5083, %rd5059;
	and.b64  	%rd5104, %rd5103, %rd5102;
	xor.b64  	%rd5105, %rd5104, %rd5083;
	add.s64 	%rd5106, %rd5095, %rd5105;
	add.s64 	%rd5107, %rd5106, %rd5101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19872,%dummy}, %rd5096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19873}, %rd5096;
	}
	shf.r.wrap.b32 	%r19874, %r19873, %r19872, 14;
	shf.r.wrap.b32 	%r19875, %r19872, %r19873, 14;
	mov.b64 	%rd5108, {%r19875, %r19874};
	shf.r.wrap.b32 	%r19876, %r19873, %r19872, 18;
	shf.r.wrap.b32 	%r19877, %r19872, %r19873, 18;
	mov.b64 	%rd5109, {%r19877, %r19876};
	xor.b64  	%rd5110, %rd5109, %rd5108;
	shf.l.wrap.b32 	%r19878, %r19872, %r19873, 23;
	shf.l.wrap.b32 	%r19879, %r19873, %r19872, 23;
	mov.b64 	%rd5111, {%r19879, %r19878};
	xor.b64  	%rd5112, %rd5110, %rd5111;
	xor.b64  	%rd5113, %rd5072, %rd5048;
	and.b64  	%rd5114, %rd5096, %rd5113;
	xor.b64  	%rd5115, %rd5114, %rd5048;
	add.s64 	%rd5116, %rd5024, %rd4769;
	add.s64 	%rd5117, %rd5116, %rd63;
	add.s64 	%rd5118, %rd5117, %rd5115;
	add.s64 	%rd5119, %rd5118, %rd5112;
	add.s64 	%rd5120, %rd5119, %rd5035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19880,%dummy}, %rd5107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19881}, %rd5107;
	}
	shf.r.wrap.b32 	%r19882, %r19881, %r19880, 28;
	shf.r.wrap.b32 	%r19883, %r19880, %r19881, 28;
	mov.b64 	%rd5121, {%r19883, %r19882};
	shf.l.wrap.b32 	%r19884, %r19880, %r19881, 30;
	shf.l.wrap.b32 	%r19885, %r19881, %r19880, 30;
	mov.b64 	%rd5122, {%r19885, %r19884};
	xor.b64  	%rd5123, %rd5122, %rd5121;
	shf.l.wrap.b32 	%r19886, %r19880, %r19881, 25;
	shf.l.wrap.b32 	%r19887, %r19881, %r19880, 25;
	mov.b64 	%rd5124, {%r19887, %r19886};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	xor.b64  	%rd5126, %rd5107, %rd5059;
	xor.b64  	%rd5127, %rd5107, %rd5083;
	and.b64  	%rd5128, %rd5127, %rd5126;
	xor.b64  	%rd5129, %rd5128, %rd5107;
	add.s64 	%rd5130, %rd5119, %rd5129;
	add.s64 	%rd5131, %rd5130, %rd5125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19888,%dummy}, %rd5120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19889}, %rd5120;
	}
	shf.r.wrap.b32 	%r19890, %r19889, %r19888, 14;
	shf.r.wrap.b32 	%r19891, %r19888, %r19889, 14;
	mov.b64 	%rd5132, {%r19891, %r19890};
	shf.r.wrap.b32 	%r19892, %r19889, %r19888, 18;
	shf.r.wrap.b32 	%r19893, %r19888, %r19889, 18;
	mov.b64 	%rd5133, {%r19893, %r19892};
	xor.b64  	%rd5134, %rd5133, %rd5132;
	shf.l.wrap.b32 	%r19894, %r19888, %r19889, 23;
	shf.l.wrap.b32 	%r19895, %r19889, %r19888, 23;
	mov.b64 	%rd5135, {%r19895, %r19894};
	xor.b64  	%rd5136, %rd5134, %rd5135;
	xor.b64  	%rd5137, %rd5096, %rd5072;
	and.b64  	%rd5138, %rd5120, %rd5137;
	xor.b64  	%rd5139, %rd5138, %rd5072;
	add.s64 	%rd5140, %rd5048, %rd4782;
	add.s64 	%rd5141, %rd5140, %rd64;
	add.s64 	%rd5142, %rd5141, %rd5139;
	add.s64 	%rd5143, %rd5142, %rd5136;
	add.s64 	%rd5144, %rd5143, %rd5059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19896,%dummy}, %rd5131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19897}, %rd5131;
	}
	shf.r.wrap.b32 	%r19898, %r19897, %r19896, 28;
	shf.r.wrap.b32 	%r19899, %r19896, %r19897, 28;
	mov.b64 	%rd5145, {%r19899, %r19898};
	shf.l.wrap.b32 	%r19900, %r19896, %r19897, 30;
	shf.l.wrap.b32 	%r19901, %r19897, %r19896, 30;
	mov.b64 	%rd5146, {%r19901, %r19900};
	xor.b64  	%rd5147, %rd5146, %rd5145;
	shf.l.wrap.b32 	%r19902, %r19896, %r19897, 25;
	shf.l.wrap.b32 	%r19903, %r19897, %r19896, 25;
	mov.b64 	%rd5148, {%r19903, %r19902};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	xor.b64  	%rd5150, %rd5131, %rd5083;
	xor.b64  	%rd5151, %rd5131, %rd5107;
	and.b64  	%rd5152, %rd5151, %rd5150;
	xor.b64  	%rd5153, %rd5152, %rd5131;
	add.s64 	%rd5154, %rd5143, %rd5153;
	add.s64 	%rd5155, %rd5154, %rd5149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19904,%dummy}, %rd5144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19905}, %rd5144;
	}
	shf.r.wrap.b32 	%r19906, %r19905, %r19904, 14;
	shf.r.wrap.b32 	%r19907, %r19904, %r19905, 14;
	mov.b64 	%rd5156, {%r19907, %r19906};
	shf.r.wrap.b32 	%r19908, %r19905, %r19904, 18;
	shf.r.wrap.b32 	%r19909, %r19904, %r19905, 18;
	mov.b64 	%rd5157, {%r19909, %r19908};
	xor.b64  	%rd5158, %rd5157, %rd5156;
	shf.l.wrap.b32 	%r19910, %r19904, %r19905, 23;
	shf.l.wrap.b32 	%r19911, %r19905, %r19904, 23;
	mov.b64 	%rd5159, {%r19911, %r19910};
	xor.b64  	%rd5160, %rd5158, %rd5159;
	xor.b64  	%rd5161, %rd5120, %rd5096;
	and.b64  	%rd5162, %rd5144, %rd5161;
	xor.b64  	%rd5163, %rd5162, %rd5096;
	add.s64 	%rd5164, %rd5072, %rd4795;
	add.s64 	%rd5165, %rd5164, %rd65;
	add.s64 	%rd5166, %rd5165, %rd5163;
	add.s64 	%rd5167, %rd5166, %rd5160;
	add.s64 	%rd5168, %rd5167, %rd5083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19912,%dummy}, %rd5155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19913}, %rd5155;
	}
	shf.r.wrap.b32 	%r19914, %r19913, %r19912, 28;
	shf.r.wrap.b32 	%r19915, %r19912, %r19913, 28;
	mov.b64 	%rd5169, {%r19915, %r19914};
	shf.l.wrap.b32 	%r19916, %r19912, %r19913, 30;
	shf.l.wrap.b32 	%r19917, %r19913, %r19912, 30;
	mov.b64 	%rd5170, {%r19917, %r19916};
	xor.b64  	%rd5171, %rd5170, %rd5169;
	shf.l.wrap.b32 	%r19918, %r19912, %r19913, 25;
	shf.l.wrap.b32 	%r19919, %r19913, %r19912, 25;
	mov.b64 	%rd5172, {%r19919, %r19918};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	xor.b64  	%rd5174, %rd5155, %rd5107;
	xor.b64  	%rd5175, %rd5155, %rd5131;
	and.b64  	%rd5176, %rd5175, %rd5174;
	xor.b64  	%rd5177, %rd5176, %rd5155;
	add.s64 	%rd5178, %rd5167, %rd5177;
	add.s64 	%rd5179, %rd5178, %rd5173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19920,%dummy}, %rd4782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19921}, %rd4782;
	}
	shf.r.wrap.b32 	%r19922, %r19921, %r19920, 19;
	shf.r.wrap.b32 	%r19923, %r19920, %r19921, 19;
	mov.b64 	%rd5180, {%r19923, %r19922};
	shf.l.wrap.b32 	%r19924, %r19920, %r19921, 3;
	shf.l.wrap.b32 	%r19925, %r19921, %r19920, 3;
	mov.b64 	%rd5181, {%r19925, %r19924};
	shr.u64 	%rd5182, %rd4782, 6;
	xor.b64  	%rd5183, %rd5180, %rd5182;
	xor.b64  	%rd5184, %rd5183, %rd5181;
	shf.r.wrap.b32 	%r19926, %r19535, %r19534, 1;
	shf.r.wrap.b32 	%r19927, %r19534, %r19535, 1;
	mov.b64 	%rd5185, {%r19927, %r19926};
	shf.r.wrap.b32 	%r19928, %r19535, %r19534, 8;
	shf.r.wrap.b32 	%r19929, %r19534, %r19535, 8;
	mov.b64 	%rd5186, {%r19929, %r19928};
	shr.u64 	%rd5187, %rd4613, 7;
	xor.b64  	%rd5188, %rd5185, %rd5187;
	xor.b64  	%rd5189, %rd5188, %rd5186;
	add.s64 	%rd5190, %rd4717, %rd4600;
	add.s64 	%rd5191, %rd5190, %rd5184;
	add.s64 	%rd5192, %rd5191, %rd5189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19930,%dummy}, %rd4795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19931}, %rd4795;
	}
	shf.r.wrap.b32 	%r19932, %r19931, %r19930, 19;
	shf.r.wrap.b32 	%r19933, %r19930, %r19931, 19;
	mov.b64 	%rd5193, {%r19933, %r19932};
	shf.l.wrap.b32 	%r19934, %r19930, %r19931, 3;
	shf.l.wrap.b32 	%r19935, %r19931, %r19930, 3;
	mov.b64 	%rd5194, {%r19935, %r19934};
	shr.u64 	%rd5195, %rd4795, 6;
	xor.b64  	%rd5196, %rd5193, %rd5195;
	xor.b64  	%rd5197, %rd5196, %rd5194;
	shf.r.wrap.b32 	%r19936, %r19545, %r19544, 1;
	shf.r.wrap.b32 	%r19937, %r19544, %r19545, 1;
	mov.b64 	%rd5198, {%r19937, %r19936};
	shf.r.wrap.b32 	%r19938, %r19545, %r19544, 8;
	shf.r.wrap.b32 	%r19939, %r19544, %r19545, 8;
	mov.b64 	%rd5199, {%r19939, %r19938};
	shr.u64 	%rd5200, %rd4626, 7;
	xor.b64  	%rd5201, %rd5198, %rd5200;
	xor.b64  	%rd5202, %rd5201, %rd5199;
	add.s64 	%rd5203, %rd4730, %rd4613;
	add.s64 	%rd5204, %rd5203, %rd5197;
	add.s64 	%rd5205, %rd5204, %rd5202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19940,%dummy}, %rd5192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19941}, %rd5192;
	}
	shf.r.wrap.b32 	%r19942, %r19941, %r19940, 19;
	shf.r.wrap.b32 	%r19943, %r19940, %r19941, 19;
	mov.b64 	%rd5206, {%r19943, %r19942};
	shf.l.wrap.b32 	%r19944, %r19940, %r19941, 3;
	shf.l.wrap.b32 	%r19945, %r19941, %r19940, 3;
	mov.b64 	%rd5207, {%r19945, %r19944};
	shr.u64 	%rd5208, %rd5192, 6;
	xor.b64  	%rd5209, %rd5206, %rd5208;
	xor.b64  	%rd5210, %rd5209, %rd5207;
	shf.r.wrap.b32 	%r19946, %r19555, %r19554, 1;
	shf.r.wrap.b32 	%r19947, %r19554, %r19555, 1;
	mov.b64 	%rd5211, {%r19947, %r19946};
	shf.r.wrap.b32 	%r19948, %r19555, %r19554, 8;
	shf.r.wrap.b32 	%r19949, %r19554, %r19555, 8;
	mov.b64 	%rd5212, {%r19949, %r19948};
	shr.u64 	%rd5213, %rd4639, 7;
	xor.b64  	%rd5214, %rd5211, %rd5213;
	xor.b64  	%rd5215, %rd5214, %rd5212;
	add.s64 	%rd5216, %rd4743, %rd4626;
	add.s64 	%rd5217, %rd5216, %rd5210;
	add.s64 	%rd5218, %rd5217, %rd5215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19950,%dummy}, %rd5205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19951}, %rd5205;
	}
	shf.r.wrap.b32 	%r19952, %r19951, %r19950, 19;
	shf.r.wrap.b32 	%r19953, %r19950, %r19951, 19;
	mov.b64 	%rd5219, {%r19953, %r19952};
	shf.l.wrap.b32 	%r19954, %r19950, %r19951, 3;
	shf.l.wrap.b32 	%r19955, %r19951, %r19950, 3;
	mov.b64 	%rd5220, {%r19955, %r19954};
	shr.u64 	%rd5221, %rd5205, 6;
	xor.b64  	%rd5222, %rd5219, %rd5221;
	xor.b64  	%rd5223, %rd5222, %rd5220;
	shf.r.wrap.b32 	%r19956, %r19565, %r19564, 1;
	shf.r.wrap.b32 	%r19957, %r19564, %r19565, 1;
	mov.b64 	%rd5224, {%r19957, %r19956};
	shf.r.wrap.b32 	%r19958, %r19565, %r19564, 8;
	shf.r.wrap.b32 	%r19959, %r19564, %r19565, 8;
	mov.b64 	%rd5225, {%r19959, %r19958};
	shr.u64 	%rd5226, %rd4652, 7;
	xor.b64  	%rd5227, %rd5224, %rd5226;
	xor.b64  	%rd5228, %rd5227, %rd5225;
	add.s64 	%rd5229, %rd4756, %rd4639;
	add.s64 	%rd5230, %rd5229, %rd5223;
	add.s64 	%rd5231, %rd5230, %rd5228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19960,%dummy}, %rd5218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19961}, %rd5218;
	}
	shf.r.wrap.b32 	%r19962, %r19961, %r19960, 19;
	shf.r.wrap.b32 	%r19963, %r19960, %r19961, 19;
	mov.b64 	%rd5232, {%r19963, %r19962};
	shf.l.wrap.b32 	%r19964, %r19960, %r19961, 3;
	shf.l.wrap.b32 	%r19965, %r19961, %r19960, 3;
	mov.b64 	%rd5233, {%r19965, %r19964};
	shr.u64 	%rd5234, %rd5218, 6;
	xor.b64  	%rd5235, %rd5232, %rd5234;
	xor.b64  	%rd5236, %rd5235, %rd5233;
	shf.r.wrap.b32 	%r19966, %r19575, %r19574, 1;
	shf.r.wrap.b32 	%r19967, %r19574, %r19575, 1;
	mov.b64 	%rd5237, {%r19967, %r19966};
	shf.r.wrap.b32 	%r19968, %r19575, %r19574, 8;
	shf.r.wrap.b32 	%r19969, %r19574, %r19575, 8;
	mov.b64 	%rd5238, {%r19969, %r19968};
	shr.u64 	%rd5239, %rd4665, 7;
	xor.b64  	%rd5240, %rd5237, %rd5239;
	xor.b64  	%rd5241, %rd5240, %rd5238;
	add.s64 	%rd5242, %rd4769, %rd4652;
	add.s64 	%rd5243, %rd5242, %rd5236;
	add.s64 	%rd5244, %rd5243, %rd5241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19970,%dummy}, %rd5231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19971}, %rd5231;
	}
	shf.r.wrap.b32 	%r19972, %r19971, %r19970, 19;
	shf.r.wrap.b32 	%r19973, %r19970, %r19971, 19;
	mov.b64 	%rd5245, {%r19973, %r19972};
	shf.l.wrap.b32 	%r19974, %r19970, %r19971, 3;
	shf.l.wrap.b32 	%r19975, %r19971, %r19970, 3;
	mov.b64 	%rd5246, {%r19975, %r19974};
	shr.u64 	%rd5247, %rd5231, 6;
	xor.b64  	%rd5248, %rd5245, %rd5247;
	xor.b64  	%rd5249, %rd5248, %rd5246;
	shf.r.wrap.b32 	%r19976, %r19585, %r19584, 1;
	shf.r.wrap.b32 	%r19977, %r19584, %r19585, 1;
	mov.b64 	%rd5250, {%r19977, %r19976};
	shf.r.wrap.b32 	%r19978, %r19585, %r19584, 8;
	shf.r.wrap.b32 	%r19979, %r19584, %r19585, 8;
	mov.b64 	%rd5251, {%r19979, %r19978};
	shr.u64 	%rd5252, %rd4678, 7;
	xor.b64  	%rd5253, %rd5250, %rd5252;
	xor.b64  	%rd5254, %rd5253, %rd5251;
	add.s64 	%rd5255, %rd4782, %rd4665;
	add.s64 	%rd5256, %rd5255, %rd5249;
	add.s64 	%rd5257, %rd5256, %rd5254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19980,%dummy}, %rd5244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19981}, %rd5244;
	}
	shf.r.wrap.b32 	%r19982, %r19981, %r19980, 19;
	shf.r.wrap.b32 	%r19983, %r19980, %r19981, 19;
	mov.b64 	%rd5258, {%r19983, %r19982};
	shf.l.wrap.b32 	%r19984, %r19980, %r19981, 3;
	shf.l.wrap.b32 	%r19985, %r19981, %r19980, 3;
	mov.b64 	%rd5259, {%r19985, %r19984};
	shr.u64 	%rd5260, %rd5244, 6;
	xor.b64  	%rd5261, %rd5258, %rd5260;
	xor.b64  	%rd5262, %rd5261, %rd5259;
	shf.r.wrap.b32 	%r19986, %r19595, %r19594, 1;
	shf.r.wrap.b32 	%r19987, %r19594, %r19595, 1;
	mov.b64 	%rd5263, {%r19987, %r19986};
	shf.r.wrap.b32 	%r19988, %r19595, %r19594, 8;
	shf.r.wrap.b32 	%r19989, %r19594, %r19595, 8;
	mov.b64 	%rd5264, {%r19989, %r19988};
	shr.u64 	%rd5265, %rd4691, 7;
	xor.b64  	%rd5266, %rd5263, %rd5265;
	xor.b64  	%rd5267, %rd5266, %rd5264;
	add.s64 	%rd5268, %rd4795, %rd4678;
	add.s64 	%rd5269, %rd5268, %rd5262;
	add.s64 	%rd5270, %rd5269, %rd5267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19990,%dummy}, %rd5257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19991}, %rd5257;
	}
	shf.r.wrap.b32 	%r19992, %r19991, %r19990, 19;
	shf.r.wrap.b32 	%r19993, %r19990, %r19991, 19;
	mov.b64 	%rd5271, {%r19993, %r19992};
	shf.l.wrap.b32 	%r19994, %r19990, %r19991, 3;
	shf.l.wrap.b32 	%r19995, %r19991, %r19990, 3;
	mov.b64 	%rd5272, {%r19995, %r19994};
	shr.u64 	%rd5273, %rd5257, 6;
	xor.b64  	%rd5274, %rd5271, %rd5273;
	xor.b64  	%rd5275, %rd5274, %rd5272;
	shf.r.wrap.b32 	%r19996, %r19605, %r19604, 1;
	shf.r.wrap.b32 	%r19997, %r19604, %r19605, 1;
	mov.b64 	%rd5276, {%r19997, %r19996};
	shf.r.wrap.b32 	%r19998, %r19605, %r19604, 8;
	shf.r.wrap.b32 	%r19999, %r19604, %r19605, 8;
	mov.b64 	%rd5277, {%r19999, %r19998};
	shr.u64 	%rd5278, %rd4704, 7;
	xor.b64  	%rd5279, %rd5276, %rd5278;
	xor.b64  	%rd5280, %rd5279, %rd5277;
	add.s64 	%rd5281, %rd5192, %rd4691;
	add.s64 	%rd5282, %rd5281, %rd5275;
	add.s64 	%rd5283, %rd5282, %rd5280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20000,%dummy}, %rd5270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20001}, %rd5270;
	}
	shf.r.wrap.b32 	%r20002, %r20001, %r20000, 19;
	shf.r.wrap.b32 	%r20003, %r20000, %r20001, 19;
	mov.b64 	%rd5284, {%r20003, %r20002};
	shf.l.wrap.b32 	%r20004, %r20000, %r20001, 3;
	shf.l.wrap.b32 	%r20005, %r20001, %r20000, 3;
	mov.b64 	%rd5285, {%r20005, %r20004};
	shr.u64 	%rd5286, %rd5270, 6;
	xor.b64  	%rd5287, %rd5284, %rd5286;
	xor.b64  	%rd5288, %rd5287, %rd5285;
	shf.r.wrap.b32 	%r20006, %r19615, %r19614, 1;
	shf.r.wrap.b32 	%r20007, %r19614, %r19615, 1;
	mov.b64 	%rd5289, {%r20007, %r20006};
	shf.r.wrap.b32 	%r20008, %r19615, %r19614, 8;
	shf.r.wrap.b32 	%r20009, %r19614, %r19615, 8;
	mov.b64 	%rd5290, {%r20009, %r20008};
	shr.u64 	%rd5291, %rd4717, 7;
	xor.b64  	%rd5292, %rd5289, %rd5291;
	xor.b64  	%rd5293, %rd5292, %rd5290;
	add.s64 	%rd5294, %rd5205, %rd4704;
	add.s64 	%rd5295, %rd5294, %rd5288;
	add.s64 	%rd5296, %rd5295, %rd5293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20010,%dummy}, %rd5283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20011}, %rd5283;
	}
	shf.r.wrap.b32 	%r20012, %r20011, %r20010, 19;
	shf.r.wrap.b32 	%r20013, %r20010, %r20011, 19;
	mov.b64 	%rd5297, {%r20013, %r20012};
	shf.l.wrap.b32 	%r20014, %r20010, %r20011, 3;
	shf.l.wrap.b32 	%r20015, %r20011, %r20010, 3;
	mov.b64 	%rd5298, {%r20015, %r20014};
	shr.u64 	%rd5299, %rd5283, 6;
	xor.b64  	%rd5300, %rd5297, %rd5299;
	xor.b64  	%rd5301, %rd5300, %rd5298;
	shf.r.wrap.b32 	%r20016, %r19625, %r19624, 1;
	shf.r.wrap.b32 	%r20017, %r19624, %r19625, 1;
	mov.b64 	%rd5302, {%r20017, %r20016};
	shf.r.wrap.b32 	%r20018, %r19625, %r19624, 8;
	shf.r.wrap.b32 	%r20019, %r19624, %r19625, 8;
	mov.b64 	%rd5303, {%r20019, %r20018};
	shr.u64 	%rd5304, %rd4730, 7;
	xor.b64  	%rd5305, %rd5302, %rd5304;
	xor.b64  	%rd5306, %rd5305, %rd5303;
	add.s64 	%rd5307, %rd5218, %rd4717;
	add.s64 	%rd5308, %rd5307, %rd5301;
	add.s64 	%rd5309, %rd5308, %rd5306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20020,%dummy}, %rd5296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20021}, %rd5296;
	}
	shf.r.wrap.b32 	%r20022, %r20021, %r20020, 19;
	shf.r.wrap.b32 	%r20023, %r20020, %r20021, 19;
	mov.b64 	%rd5310, {%r20023, %r20022};
	shf.l.wrap.b32 	%r20024, %r20020, %r20021, 3;
	shf.l.wrap.b32 	%r20025, %r20021, %r20020, 3;
	mov.b64 	%rd5311, {%r20025, %r20024};
	shr.u64 	%rd5312, %rd5296, 6;
	xor.b64  	%rd5313, %rd5310, %rd5312;
	xor.b64  	%rd5314, %rd5313, %rd5311;
	shf.r.wrap.b32 	%r20026, %r19635, %r19634, 1;
	shf.r.wrap.b32 	%r20027, %r19634, %r19635, 1;
	mov.b64 	%rd5315, {%r20027, %r20026};
	shf.r.wrap.b32 	%r20028, %r19635, %r19634, 8;
	shf.r.wrap.b32 	%r20029, %r19634, %r19635, 8;
	mov.b64 	%rd5316, {%r20029, %r20028};
	shr.u64 	%rd5317, %rd4743, 7;
	xor.b64  	%rd5318, %rd5315, %rd5317;
	xor.b64  	%rd5319, %rd5318, %rd5316;
	add.s64 	%rd5320, %rd5231, %rd4730;
	add.s64 	%rd5321, %rd5320, %rd5314;
	add.s64 	%rd5322, %rd5321, %rd5319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20030,%dummy}, %rd5309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20031}, %rd5309;
	}
	shf.r.wrap.b32 	%r20032, %r20031, %r20030, 19;
	shf.r.wrap.b32 	%r20033, %r20030, %r20031, 19;
	mov.b64 	%rd5323, {%r20033, %r20032};
	shf.l.wrap.b32 	%r20034, %r20030, %r20031, 3;
	shf.l.wrap.b32 	%r20035, %r20031, %r20030, 3;
	mov.b64 	%rd5324, {%r20035, %r20034};
	shr.u64 	%rd5325, %rd5309, 6;
	xor.b64  	%rd5326, %rd5323, %rd5325;
	xor.b64  	%rd5327, %rd5326, %rd5324;
	shf.r.wrap.b32 	%r20036, %r19645, %r19644, 1;
	shf.r.wrap.b32 	%r20037, %r19644, %r19645, 1;
	mov.b64 	%rd5328, {%r20037, %r20036};
	shf.r.wrap.b32 	%r20038, %r19645, %r19644, 8;
	shf.r.wrap.b32 	%r20039, %r19644, %r19645, 8;
	mov.b64 	%rd5329, {%r20039, %r20038};
	shr.u64 	%rd5330, %rd4756, 7;
	xor.b64  	%rd5331, %rd5328, %rd5330;
	xor.b64  	%rd5332, %rd5331, %rd5329;
	add.s64 	%rd5333, %rd5244, %rd4743;
	add.s64 	%rd5334, %rd5333, %rd5327;
	add.s64 	%rd5335, %rd5334, %rd5332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20040,%dummy}, %rd5322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20041}, %rd5322;
	}
	shf.r.wrap.b32 	%r20042, %r20041, %r20040, 19;
	shf.r.wrap.b32 	%r20043, %r20040, %r20041, 19;
	mov.b64 	%rd5336, {%r20043, %r20042};
	shf.l.wrap.b32 	%r20044, %r20040, %r20041, 3;
	shf.l.wrap.b32 	%r20045, %r20041, %r20040, 3;
	mov.b64 	%rd5337, {%r20045, %r20044};
	shr.u64 	%rd5338, %rd5322, 6;
	xor.b64  	%rd5339, %rd5336, %rd5338;
	xor.b64  	%rd5340, %rd5339, %rd5337;
	shf.r.wrap.b32 	%r20046, %r19655, %r19654, 1;
	shf.r.wrap.b32 	%r20047, %r19654, %r19655, 1;
	mov.b64 	%rd5341, {%r20047, %r20046};
	shf.r.wrap.b32 	%r20048, %r19655, %r19654, 8;
	shf.r.wrap.b32 	%r20049, %r19654, %r19655, 8;
	mov.b64 	%rd5342, {%r20049, %r20048};
	shr.u64 	%rd5343, %rd4769, 7;
	xor.b64  	%rd5344, %rd5341, %rd5343;
	xor.b64  	%rd5345, %rd5344, %rd5342;
	add.s64 	%rd5346, %rd5257, %rd4756;
	add.s64 	%rd5347, %rd5346, %rd5340;
	add.s64 	%rd5348, %rd5347, %rd5345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20050,%dummy}, %rd5335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20051}, %rd5335;
	}
	shf.r.wrap.b32 	%r20052, %r20051, %r20050, 19;
	shf.r.wrap.b32 	%r20053, %r20050, %r20051, 19;
	mov.b64 	%rd5349, {%r20053, %r20052};
	shf.l.wrap.b32 	%r20054, %r20050, %r20051, 3;
	shf.l.wrap.b32 	%r20055, %r20051, %r20050, 3;
	mov.b64 	%rd5350, {%r20055, %r20054};
	shr.u64 	%rd5351, %rd5335, 6;
	xor.b64  	%rd5352, %rd5349, %rd5351;
	xor.b64  	%rd5353, %rd5352, %rd5350;
	shf.r.wrap.b32 	%r20056, %r19921, %r19920, 1;
	shf.r.wrap.b32 	%r20057, %r19920, %r19921, 1;
	mov.b64 	%rd5354, {%r20057, %r20056};
	shf.r.wrap.b32 	%r20058, %r19921, %r19920, 8;
	shf.r.wrap.b32 	%r20059, %r19920, %r19921, 8;
	mov.b64 	%rd5355, {%r20059, %r20058};
	shr.u64 	%rd5356, %rd4782, 7;
	xor.b64  	%rd5357, %rd5354, %rd5356;
	xor.b64  	%rd5358, %rd5357, %rd5355;
	add.s64 	%rd5359, %rd5270, %rd4769;
	add.s64 	%rd5360, %rd5359, %rd5353;
	add.s64 	%rd5361, %rd5360, %rd5358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20060,%dummy}, %rd5348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20061}, %rd5348;
	}
	shf.r.wrap.b32 	%r20062, %r20061, %r20060, 19;
	shf.r.wrap.b32 	%r20063, %r20060, %r20061, 19;
	mov.b64 	%rd5362, {%r20063, %r20062};
	shf.l.wrap.b32 	%r20064, %r20060, %r20061, 3;
	shf.l.wrap.b32 	%r20065, %r20061, %r20060, 3;
	mov.b64 	%rd5363, {%r20065, %r20064};
	shr.u64 	%rd5364, %rd5348, 6;
	xor.b64  	%rd5365, %rd5362, %rd5364;
	xor.b64  	%rd5366, %rd5365, %rd5363;
	shf.r.wrap.b32 	%r20066, %r19931, %r19930, 1;
	shf.r.wrap.b32 	%r20067, %r19930, %r19931, 1;
	mov.b64 	%rd5367, {%r20067, %r20066};
	shf.r.wrap.b32 	%r20068, %r19931, %r19930, 8;
	shf.r.wrap.b32 	%r20069, %r19930, %r19931, 8;
	mov.b64 	%rd5368, {%r20069, %r20068};
	shr.u64 	%rd5369, %rd4795, 7;
	xor.b64  	%rd5370, %rd5367, %rd5369;
	xor.b64  	%rd5371, %rd5370, %rd5368;
	add.s64 	%rd5372, %rd5283, %rd4782;
	add.s64 	%rd5373, %rd5372, %rd5366;
	add.s64 	%rd5374, %rd5373, %rd5371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20070,%dummy}, %rd5361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20071}, %rd5361;
	}
	shf.r.wrap.b32 	%r20072, %r20071, %r20070, 19;
	shf.r.wrap.b32 	%r20073, %r20070, %r20071, 19;
	mov.b64 	%rd5375, {%r20073, %r20072};
	shf.l.wrap.b32 	%r20074, %r20070, %r20071, 3;
	shf.l.wrap.b32 	%r20075, %r20071, %r20070, 3;
	mov.b64 	%rd5376, {%r20075, %r20074};
	shr.u64 	%rd5377, %rd5361, 6;
	xor.b64  	%rd5378, %rd5375, %rd5377;
	xor.b64  	%rd5379, %rd5378, %rd5376;
	shf.r.wrap.b32 	%r20076, %r19941, %r19940, 1;
	shf.r.wrap.b32 	%r20077, %r19940, %r19941, 1;
	mov.b64 	%rd5380, {%r20077, %r20076};
	shf.r.wrap.b32 	%r20078, %r19941, %r19940, 8;
	shf.r.wrap.b32 	%r20079, %r19940, %r19941, 8;
	mov.b64 	%rd5381, {%r20079, %r20078};
	shr.u64 	%rd5382, %rd5192, 7;
	xor.b64  	%rd5383, %rd5380, %rd5382;
	xor.b64  	%rd5384, %rd5383, %rd5381;
	add.s64 	%rd5385, %rd5296, %rd4795;
	add.s64 	%rd5386, %rd5385, %rd5379;
	add.s64 	%rd5387, %rd5386, %rd5384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20080,%dummy}, %rd5168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20081}, %rd5168;
	}
	shf.r.wrap.b32 	%r20082, %r20081, %r20080, 14;
	shf.r.wrap.b32 	%r20083, %r20080, %r20081, 14;
	mov.b64 	%rd5388, {%r20083, %r20082};
	shf.r.wrap.b32 	%r20084, %r20081, %r20080, 18;
	shf.r.wrap.b32 	%r20085, %r20080, %r20081, 18;
	mov.b64 	%rd5389, {%r20085, %r20084};
	xor.b64  	%rd5390, %rd5389, %rd5388;
	shf.l.wrap.b32 	%r20086, %r20080, %r20081, 23;
	shf.l.wrap.b32 	%r20087, %r20081, %r20080, 23;
	mov.b64 	%rd5391, {%r20087, %r20086};
	xor.b64  	%rd5392, %rd5390, %rd5391;
	xor.b64  	%rd5393, %rd5144, %rd5120;
	and.b64  	%rd5394, %rd5393, %rd5168;
	xor.b64  	%rd5395, %rd5394, %rd5120;
	add.s64 	%rd5396, %rd5395, %rd5096;
	add.s64 	%rd5397, %rd5396, %rd5192;
	add.s64 	%rd5398, %rd5397, %rd66;
	add.s64 	%rd5399, %rd5398, %rd5392;
	add.s64 	%rd5400, %rd5399, %rd5107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20088,%dummy}, %rd5179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20089}, %rd5179;
	}
	shf.r.wrap.b32 	%r20090, %r20089, %r20088, 28;
	shf.r.wrap.b32 	%r20091, %r20088, %r20089, 28;
	mov.b64 	%rd5401, {%r20091, %r20090};
	shf.l.wrap.b32 	%r20092, %r20088, %r20089, 30;
	shf.l.wrap.b32 	%r20093, %r20089, %r20088, 30;
	mov.b64 	%rd5402, {%r20093, %r20092};
	xor.b64  	%rd5403, %rd5402, %rd5401;
	shf.l.wrap.b32 	%r20094, %r20088, %r20089, 25;
	shf.l.wrap.b32 	%r20095, %r20089, %r20088, 25;
	mov.b64 	%rd5404, {%r20095, %r20094};
	xor.b64  	%rd5405, %rd5403, %rd5404;
	xor.b64  	%rd5406, %rd5179, %rd5131;
	xor.b64  	%rd5407, %rd5179, %rd5155;
	and.b64  	%rd5408, %rd5407, %rd5406;
	xor.b64  	%rd5409, %rd5408, %rd5179;
	add.s64 	%rd5410, %rd5399, %rd5409;
	add.s64 	%rd5411, %rd5410, %rd5405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20096,%dummy}, %rd5400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20097}, %rd5400;
	}
	shf.r.wrap.b32 	%r20098, %r20097, %r20096, 14;
	shf.r.wrap.b32 	%r20099, %r20096, %r20097, 14;
	mov.b64 	%rd5412, {%r20099, %r20098};
	shf.r.wrap.b32 	%r20100, %r20097, %r20096, 18;
	shf.r.wrap.b32 	%r20101, %r20096, %r20097, 18;
	mov.b64 	%rd5413, {%r20101, %r20100};
	xor.b64  	%rd5414, %rd5413, %rd5412;
	shf.l.wrap.b32 	%r20102, %r20096, %r20097, 23;
	shf.l.wrap.b32 	%r20103, %r20097, %r20096, 23;
	mov.b64 	%rd5415, {%r20103, %r20102};
	xor.b64  	%rd5416, %rd5414, %rd5415;
	xor.b64  	%rd5417, %rd5168, %rd5144;
	and.b64  	%rd5418, %rd5400, %rd5417;
	xor.b64  	%rd5419, %rd5418, %rd5144;
	add.s64 	%rd5420, %rd5205, %rd5120;
	add.s64 	%rd5421, %rd5420, %rd67;
	add.s64 	%rd5422, %rd5421, %rd5419;
	add.s64 	%rd5423, %rd5422, %rd5416;
	add.s64 	%rd5424, %rd5423, %rd5131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20104,%dummy}, %rd5411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20105}, %rd5411;
	}
	shf.r.wrap.b32 	%r20106, %r20105, %r20104, 28;
	shf.r.wrap.b32 	%r20107, %r20104, %r20105, 28;
	mov.b64 	%rd5425, {%r20107, %r20106};
	shf.l.wrap.b32 	%r20108, %r20104, %r20105, 30;
	shf.l.wrap.b32 	%r20109, %r20105, %r20104, 30;
	mov.b64 	%rd5426, {%r20109, %r20108};
	xor.b64  	%rd5427, %rd5426, %rd5425;
	shf.l.wrap.b32 	%r20110, %r20104, %r20105, 25;
	shf.l.wrap.b32 	%r20111, %r20105, %r20104, 25;
	mov.b64 	%rd5428, {%r20111, %r20110};
	xor.b64  	%rd5429, %rd5427, %rd5428;
	xor.b64  	%rd5430, %rd5411, %rd5155;
	xor.b64  	%rd5431, %rd5411, %rd5179;
	and.b64  	%rd5432, %rd5431, %rd5430;
	xor.b64  	%rd5433, %rd5432, %rd5411;
	add.s64 	%rd5434, %rd5423, %rd5433;
	add.s64 	%rd5435, %rd5434, %rd5429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20112,%dummy}, %rd5424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20113}, %rd5424;
	}
	shf.r.wrap.b32 	%r20114, %r20113, %r20112, 14;
	shf.r.wrap.b32 	%r20115, %r20112, %r20113, 14;
	mov.b64 	%rd5436, {%r20115, %r20114};
	shf.r.wrap.b32 	%r20116, %r20113, %r20112, 18;
	shf.r.wrap.b32 	%r20117, %r20112, %r20113, 18;
	mov.b64 	%rd5437, {%r20117, %r20116};
	xor.b64  	%rd5438, %rd5437, %rd5436;
	shf.l.wrap.b32 	%r20118, %r20112, %r20113, 23;
	shf.l.wrap.b32 	%r20119, %r20113, %r20112, 23;
	mov.b64 	%rd5439, {%r20119, %r20118};
	xor.b64  	%rd5440, %rd5438, %rd5439;
	xor.b64  	%rd5441, %rd5400, %rd5168;
	and.b64  	%rd5442, %rd5424, %rd5441;
	xor.b64  	%rd5443, %rd5442, %rd5168;
	add.s64 	%rd5444, %rd5218, %rd5144;
	add.s64 	%rd5445, %rd5444, %rd68;
	add.s64 	%rd5446, %rd5445, %rd5443;
	add.s64 	%rd5447, %rd5446, %rd5440;
	add.s64 	%rd5448, %rd5447, %rd5155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20120,%dummy}, %rd5435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20121}, %rd5435;
	}
	shf.r.wrap.b32 	%r20122, %r20121, %r20120, 28;
	shf.r.wrap.b32 	%r20123, %r20120, %r20121, 28;
	mov.b64 	%rd5449, {%r20123, %r20122};
	shf.l.wrap.b32 	%r20124, %r20120, %r20121, 30;
	shf.l.wrap.b32 	%r20125, %r20121, %r20120, 30;
	mov.b64 	%rd5450, {%r20125, %r20124};
	xor.b64  	%rd5451, %rd5450, %rd5449;
	shf.l.wrap.b32 	%r20126, %r20120, %r20121, 25;
	shf.l.wrap.b32 	%r20127, %r20121, %r20120, 25;
	mov.b64 	%rd5452, {%r20127, %r20126};
	xor.b64  	%rd5453, %rd5451, %rd5452;
	xor.b64  	%rd5454, %rd5435, %rd5179;
	xor.b64  	%rd5455, %rd5435, %rd5411;
	and.b64  	%rd5456, %rd5455, %rd5454;
	xor.b64  	%rd5457, %rd5456, %rd5435;
	add.s64 	%rd5458, %rd5447, %rd5457;
	add.s64 	%rd5459, %rd5458, %rd5453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20128,%dummy}, %rd5448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20129}, %rd5448;
	}
	shf.r.wrap.b32 	%r20130, %r20129, %r20128, 14;
	shf.r.wrap.b32 	%r20131, %r20128, %r20129, 14;
	mov.b64 	%rd5460, {%r20131, %r20130};
	shf.r.wrap.b32 	%r20132, %r20129, %r20128, 18;
	shf.r.wrap.b32 	%r20133, %r20128, %r20129, 18;
	mov.b64 	%rd5461, {%r20133, %r20132};
	xor.b64  	%rd5462, %rd5461, %rd5460;
	shf.l.wrap.b32 	%r20134, %r20128, %r20129, 23;
	shf.l.wrap.b32 	%r20135, %r20129, %r20128, 23;
	mov.b64 	%rd5463, {%r20135, %r20134};
	xor.b64  	%rd5464, %rd5462, %rd5463;
	xor.b64  	%rd5465, %rd5424, %rd5400;
	and.b64  	%rd5466, %rd5448, %rd5465;
	xor.b64  	%rd5467, %rd5466, %rd5400;
	add.s64 	%rd5468, %rd5231, %rd5168;
	add.s64 	%rd5469, %rd5468, %rd69;
	add.s64 	%rd5470, %rd5469, %rd5467;
	add.s64 	%rd5471, %rd5470, %rd5464;
	add.s64 	%rd5472, %rd5471, %rd5179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20136,%dummy}, %rd5459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20137}, %rd5459;
	}
	shf.r.wrap.b32 	%r20138, %r20137, %r20136, 28;
	shf.r.wrap.b32 	%r20139, %r20136, %r20137, 28;
	mov.b64 	%rd5473, {%r20139, %r20138};
	shf.l.wrap.b32 	%r20140, %r20136, %r20137, 30;
	shf.l.wrap.b32 	%r20141, %r20137, %r20136, 30;
	mov.b64 	%rd5474, {%r20141, %r20140};
	xor.b64  	%rd5475, %rd5474, %rd5473;
	shf.l.wrap.b32 	%r20142, %r20136, %r20137, 25;
	shf.l.wrap.b32 	%r20143, %r20137, %r20136, 25;
	mov.b64 	%rd5476, {%r20143, %r20142};
	xor.b64  	%rd5477, %rd5475, %rd5476;
	xor.b64  	%rd5478, %rd5459, %rd5411;
	xor.b64  	%rd5479, %rd5459, %rd5435;
	and.b64  	%rd5480, %rd5479, %rd5478;
	xor.b64  	%rd5481, %rd5480, %rd5459;
	add.s64 	%rd5482, %rd5471, %rd5481;
	add.s64 	%rd5483, %rd5482, %rd5477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20144,%dummy}, %rd5472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20145}, %rd5472;
	}
	shf.r.wrap.b32 	%r20146, %r20145, %r20144, 14;
	shf.r.wrap.b32 	%r20147, %r20144, %r20145, 14;
	mov.b64 	%rd5484, {%r20147, %r20146};
	shf.r.wrap.b32 	%r20148, %r20145, %r20144, 18;
	shf.r.wrap.b32 	%r20149, %r20144, %r20145, 18;
	mov.b64 	%rd5485, {%r20149, %r20148};
	xor.b64  	%rd5486, %rd5485, %rd5484;
	shf.l.wrap.b32 	%r20150, %r20144, %r20145, 23;
	shf.l.wrap.b32 	%r20151, %r20145, %r20144, 23;
	mov.b64 	%rd5487, {%r20151, %r20150};
	xor.b64  	%rd5488, %rd5486, %rd5487;
	xor.b64  	%rd5489, %rd5448, %rd5424;
	and.b64  	%rd5490, %rd5472, %rd5489;
	xor.b64  	%rd5491, %rd5490, %rd5424;
	add.s64 	%rd5492, %rd5400, %rd5244;
	add.s64 	%rd5493, %rd5492, %rd70;
	add.s64 	%rd5494, %rd5493, %rd5491;
	add.s64 	%rd5495, %rd5494, %rd5488;
	add.s64 	%rd5496, %rd5495, %rd5411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20152,%dummy}, %rd5483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20153}, %rd5483;
	}
	shf.r.wrap.b32 	%r20154, %r20153, %r20152, 28;
	shf.r.wrap.b32 	%r20155, %r20152, %r20153, 28;
	mov.b64 	%rd5497, {%r20155, %r20154};
	shf.l.wrap.b32 	%r20156, %r20152, %r20153, 30;
	shf.l.wrap.b32 	%r20157, %r20153, %r20152, 30;
	mov.b64 	%rd5498, {%r20157, %r20156};
	xor.b64  	%rd5499, %rd5498, %rd5497;
	shf.l.wrap.b32 	%r20158, %r20152, %r20153, 25;
	shf.l.wrap.b32 	%r20159, %r20153, %r20152, 25;
	mov.b64 	%rd5500, {%r20159, %r20158};
	xor.b64  	%rd5501, %rd5499, %rd5500;
	xor.b64  	%rd5502, %rd5483, %rd5435;
	xor.b64  	%rd5503, %rd5483, %rd5459;
	and.b64  	%rd5504, %rd5503, %rd5502;
	xor.b64  	%rd5505, %rd5504, %rd5483;
	add.s64 	%rd5506, %rd5495, %rd5505;
	add.s64 	%rd5507, %rd5506, %rd5501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20160,%dummy}, %rd5496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20161}, %rd5496;
	}
	shf.r.wrap.b32 	%r20162, %r20161, %r20160, 14;
	shf.r.wrap.b32 	%r20163, %r20160, %r20161, 14;
	mov.b64 	%rd5508, {%r20163, %r20162};
	shf.r.wrap.b32 	%r20164, %r20161, %r20160, 18;
	shf.r.wrap.b32 	%r20165, %r20160, %r20161, 18;
	mov.b64 	%rd5509, {%r20165, %r20164};
	xor.b64  	%rd5510, %rd5509, %rd5508;
	shf.l.wrap.b32 	%r20166, %r20160, %r20161, 23;
	shf.l.wrap.b32 	%r20167, %r20161, %r20160, 23;
	mov.b64 	%rd5511, {%r20167, %r20166};
	xor.b64  	%rd5512, %rd5510, %rd5511;
	xor.b64  	%rd5513, %rd5472, %rd5448;
	and.b64  	%rd5514, %rd5496, %rd5513;
	xor.b64  	%rd5515, %rd5514, %rd5448;
	add.s64 	%rd5516, %rd5424, %rd5257;
	add.s64 	%rd5517, %rd5516, %rd71;
	add.s64 	%rd5518, %rd5517, %rd5515;
	add.s64 	%rd5519, %rd5518, %rd5512;
	add.s64 	%rd5520, %rd5519, %rd5435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20168,%dummy}, %rd5507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20169}, %rd5507;
	}
	shf.r.wrap.b32 	%r20170, %r20169, %r20168, 28;
	shf.r.wrap.b32 	%r20171, %r20168, %r20169, 28;
	mov.b64 	%rd5521, {%r20171, %r20170};
	shf.l.wrap.b32 	%r20172, %r20168, %r20169, 30;
	shf.l.wrap.b32 	%r20173, %r20169, %r20168, 30;
	mov.b64 	%rd5522, {%r20173, %r20172};
	xor.b64  	%rd5523, %rd5522, %rd5521;
	shf.l.wrap.b32 	%r20174, %r20168, %r20169, 25;
	shf.l.wrap.b32 	%r20175, %r20169, %r20168, 25;
	mov.b64 	%rd5524, {%r20175, %r20174};
	xor.b64  	%rd5525, %rd5523, %rd5524;
	xor.b64  	%rd5526, %rd5507, %rd5459;
	xor.b64  	%rd5527, %rd5507, %rd5483;
	and.b64  	%rd5528, %rd5527, %rd5526;
	xor.b64  	%rd5529, %rd5528, %rd5507;
	add.s64 	%rd5530, %rd5519, %rd5529;
	add.s64 	%rd5531, %rd5530, %rd5525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20176,%dummy}, %rd5520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20177}, %rd5520;
	}
	shf.r.wrap.b32 	%r20178, %r20177, %r20176, 14;
	shf.r.wrap.b32 	%r20179, %r20176, %r20177, 14;
	mov.b64 	%rd5532, {%r20179, %r20178};
	shf.r.wrap.b32 	%r20180, %r20177, %r20176, 18;
	shf.r.wrap.b32 	%r20181, %r20176, %r20177, 18;
	mov.b64 	%rd5533, {%r20181, %r20180};
	xor.b64  	%rd5534, %rd5533, %rd5532;
	shf.l.wrap.b32 	%r20182, %r20176, %r20177, 23;
	shf.l.wrap.b32 	%r20183, %r20177, %r20176, 23;
	mov.b64 	%rd5535, {%r20183, %r20182};
	xor.b64  	%rd5536, %rd5534, %rd5535;
	xor.b64  	%rd5537, %rd5496, %rd5472;
	and.b64  	%rd5538, %rd5520, %rd5537;
	xor.b64  	%rd5539, %rd5538, %rd5472;
	add.s64 	%rd5540, %rd5448, %rd5270;
	add.s64 	%rd5541, %rd5540, %rd72;
	add.s64 	%rd5542, %rd5541, %rd5539;
	add.s64 	%rd5543, %rd5542, %rd5536;
	add.s64 	%rd5544, %rd5543, %rd5459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20184,%dummy}, %rd5531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20185}, %rd5531;
	}
	shf.r.wrap.b32 	%r20186, %r20185, %r20184, 28;
	shf.r.wrap.b32 	%r20187, %r20184, %r20185, 28;
	mov.b64 	%rd5545, {%r20187, %r20186};
	shf.l.wrap.b32 	%r20188, %r20184, %r20185, 30;
	shf.l.wrap.b32 	%r20189, %r20185, %r20184, 30;
	mov.b64 	%rd5546, {%r20189, %r20188};
	xor.b64  	%rd5547, %rd5546, %rd5545;
	shf.l.wrap.b32 	%r20190, %r20184, %r20185, 25;
	shf.l.wrap.b32 	%r20191, %r20185, %r20184, 25;
	mov.b64 	%rd5548, {%r20191, %r20190};
	xor.b64  	%rd5549, %rd5547, %rd5548;
	xor.b64  	%rd5550, %rd5531, %rd5483;
	xor.b64  	%rd5551, %rd5531, %rd5507;
	and.b64  	%rd5552, %rd5551, %rd5550;
	xor.b64  	%rd5553, %rd5552, %rd5531;
	add.s64 	%rd5554, %rd5543, %rd5553;
	add.s64 	%rd5555, %rd5554, %rd5549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20192,%dummy}, %rd5544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20193}, %rd5544;
	}
	shf.r.wrap.b32 	%r20194, %r20193, %r20192, 14;
	shf.r.wrap.b32 	%r20195, %r20192, %r20193, 14;
	mov.b64 	%rd5556, {%r20195, %r20194};
	shf.r.wrap.b32 	%r20196, %r20193, %r20192, 18;
	shf.r.wrap.b32 	%r20197, %r20192, %r20193, 18;
	mov.b64 	%rd5557, {%r20197, %r20196};
	xor.b64  	%rd5558, %rd5557, %rd5556;
	shf.l.wrap.b32 	%r20198, %r20192, %r20193, 23;
	shf.l.wrap.b32 	%r20199, %r20193, %r20192, 23;
	mov.b64 	%rd5559, {%r20199, %r20198};
	xor.b64  	%rd5560, %rd5558, %rd5559;
	xor.b64  	%rd5561, %rd5520, %rd5496;
	and.b64  	%rd5562, %rd5544, %rd5561;
	xor.b64  	%rd5563, %rd5562, %rd5496;
	add.s64 	%rd5564, %rd5472, %rd5283;
	add.s64 	%rd5565, %rd5564, %rd73;
	add.s64 	%rd5566, %rd5565, %rd5563;
	add.s64 	%rd5567, %rd5566, %rd5560;
	add.s64 	%rd5568, %rd5567, %rd5483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20200,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20201}, %rd5555;
	}
	shf.r.wrap.b32 	%r20202, %r20201, %r20200, 28;
	shf.r.wrap.b32 	%r20203, %r20200, %r20201, 28;
	mov.b64 	%rd5569, {%r20203, %r20202};
	shf.l.wrap.b32 	%r20204, %r20200, %r20201, 30;
	shf.l.wrap.b32 	%r20205, %r20201, %r20200, 30;
	mov.b64 	%rd5570, {%r20205, %r20204};
	xor.b64  	%rd5571, %rd5570, %rd5569;
	shf.l.wrap.b32 	%r20206, %r20200, %r20201, 25;
	shf.l.wrap.b32 	%r20207, %r20201, %r20200, 25;
	mov.b64 	%rd5572, {%r20207, %r20206};
	xor.b64  	%rd5573, %rd5571, %rd5572;
	xor.b64  	%rd5574, %rd5555, %rd5507;
	xor.b64  	%rd5575, %rd5555, %rd5531;
	and.b64  	%rd5576, %rd5575, %rd5574;
	xor.b64  	%rd5577, %rd5576, %rd5555;
	add.s64 	%rd5578, %rd5567, %rd5577;
	add.s64 	%rd5579, %rd5578, %rd5573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20208,%dummy}, %rd5568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20209}, %rd5568;
	}
	shf.r.wrap.b32 	%r20210, %r20209, %r20208, 14;
	shf.r.wrap.b32 	%r20211, %r20208, %r20209, 14;
	mov.b64 	%rd5580, {%r20211, %r20210};
	shf.r.wrap.b32 	%r20212, %r20209, %r20208, 18;
	shf.r.wrap.b32 	%r20213, %r20208, %r20209, 18;
	mov.b64 	%rd5581, {%r20213, %r20212};
	xor.b64  	%rd5582, %rd5581, %rd5580;
	shf.l.wrap.b32 	%r20214, %r20208, %r20209, 23;
	shf.l.wrap.b32 	%r20215, %r20209, %r20208, 23;
	mov.b64 	%rd5583, {%r20215, %r20214};
	xor.b64  	%rd5584, %rd5582, %rd5583;
	xor.b64  	%rd5585, %rd5544, %rd5520;
	and.b64  	%rd5586, %rd5568, %rd5585;
	xor.b64  	%rd5587, %rd5586, %rd5520;
	add.s64 	%rd5588, %rd5496, %rd5296;
	add.s64 	%rd5589, %rd5588, %rd74;
	add.s64 	%rd5590, %rd5589, %rd5587;
	add.s64 	%rd5591, %rd5590, %rd5584;
	add.s64 	%rd5592, %rd5591, %rd5507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20216,%dummy}, %rd5579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20217}, %rd5579;
	}
	shf.r.wrap.b32 	%r20218, %r20217, %r20216, 28;
	shf.r.wrap.b32 	%r20219, %r20216, %r20217, 28;
	mov.b64 	%rd5593, {%r20219, %r20218};
	shf.l.wrap.b32 	%r20220, %r20216, %r20217, 30;
	shf.l.wrap.b32 	%r20221, %r20217, %r20216, 30;
	mov.b64 	%rd5594, {%r20221, %r20220};
	xor.b64  	%rd5595, %rd5594, %rd5593;
	shf.l.wrap.b32 	%r20222, %r20216, %r20217, 25;
	shf.l.wrap.b32 	%r20223, %r20217, %r20216, 25;
	mov.b64 	%rd5596, {%r20223, %r20222};
	xor.b64  	%rd5597, %rd5595, %rd5596;
	xor.b64  	%rd5598, %rd5579, %rd5531;
	xor.b64  	%rd5599, %rd5579, %rd5555;
	and.b64  	%rd5600, %rd5599, %rd5598;
	xor.b64  	%rd5601, %rd5600, %rd5579;
	add.s64 	%rd5602, %rd5591, %rd5601;
	add.s64 	%rd5603, %rd5602, %rd5597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20224,%dummy}, %rd5592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20225}, %rd5592;
	}
	shf.r.wrap.b32 	%r20226, %r20225, %r20224, 14;
	shf.r.wrap.b32 	%r20227, %r20224, %r20225, 14;
	mov.b64 	%rd5604, {%r20227, %r20226};
	shf.r.wrap.b32 	%r20228, %r20225, %r20224, 18;
	shf.r.wrap.b32 	%r20229, %r20224, %r20225, 18;
	mov.b64 	%rd5605, {%r20229, %r20228};
	xor.b64  	%rd5606, %rd5605, %rd5604;
	shf.l.wrap.b32 	%r20230, %r20224, %r20225, 23;
	shf.l.wrap.b32 	%r20231, %r20225, %r20224, 23;
	mov.b64 	%rd5607, {%r20231, %r20230};
	xor.b64  	%rd5608, %rd5606, %rd5607;
	xor.b64  	%rd5609, %rd5568, %rd5544;
	and.b64  	%rd5610, %rd5592, %rd5609;
	xor.b64  	%rd5611, %rd5610, %rd5544;
	add.s64 	%rd5612, %rd5520, %rd5309;
	add.s64 	%rd5613, %rd5612, %rd75;
	add.s64 	%rd5614, %rd5613, %rd5611;
	add.s64 	%rd5615, %rd5614, %rd5608;
	add.s64 	%rd5616, %rd5615, %rd5531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20232,%dummy}, %rd5603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20233}, %rd5603;
	}
	shf.r.wrap.b32 	%r20234, %r20233, %r20232, 28;
	shf.r.wrap.b32 	%r20235, %r20232, %r20233, 28;
	mov.b64 	%rd5617, {%r20235, %r20234};
	shf.l.wrap.b32 	%r20236, %r20232, %r20233, 30;
	shf.l.wrap.b32 	%r20237, %r20233, %r20232, 30;
	mov.b64 	%rd5618, {%r20237, %r20236};
	xor.b64  	%rd5619, %rd5618, %rd5617;
	shf.l.wrap.b32 	%r20238, %r20232, %r20233, 25;
	shf.l.wrap.b32 	%r20239, %r20233, %r20232, 25;
	mov.b64 	%rd5620, {%r20239, %r20238};
	xor.b64  	%rd5621, %rd5619, %rd5620;
	xor.b64  	%rd5622, %rd5603, %rd5555;
	xor.b64  	%rd5623, %rd5603, %rd5579;
	and.b64  	%rd5624, %rd5623, %rd5622;
	xor.b64  	%rd5625, %rd5624, %rd5603;
	add.s64 	%rd5626, %rd5615, %rd5625;
	add.s64 	%rd5627, %rd5626, %rd5621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20240,%dummy}, %rd5616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20241}, %rd5616;
	}
	shf.r.wrap.b32 	%r20242, %r20241, %r20240, 14;
	shf.r.wrap.b32 	%r20243, %r20240, %r20241, 14;
	mov.b64 	%rd5628, {%r20243, %r20242};
	shf.r.wrap.b32 	%r20244, %r20241, %r20240, 18;
	shf.r.wrap.b32 	%r20245, %r20240, %r20241, 18;
	mov.b64 	%rd5629, {%r20245, %r20244};
	xor.b64  	%rd5630, %rd5629, %rd5628;
	shf.l.wrap.b32 	%r20246, %r20240, %r20241, 23;
	shf.l.wrap.b32 	%r20247, %r20241, %r20240, 23;
	mov.b64 	%rd5631, {%r20247, %r20246};
	xor.b64  	%rd5632, %rd5630, %rd5631;
	xor.b64  	%rd5633, %rd5592, %rd5568;
	and.b64  	%rd5634, %rd5616, %rd5633;
	xor.b64  	%rd5635, %rd5634, %rd5568;
	add.s64 	%rd5636, %rd5544, %rd5322;
	add.s64 	%rd5637, %rd5636, %rd76;
	add.s64 	%rd5638, %rd5637, %rd5635;
	add.s64 	%rd5639, %rd5638, %rd5632;
	add.s64 	%rd5640, %rd5639, %rd5555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20248,%dummy}, %rd5627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20249}, %rd5627;
	}
	shf.r.wrap.b32 	%r20250, %r20249, %r20248, 28;
	shf.r.wrap.b32 	%r20251, %r20248, %r20249, 28;
	mov.b64 	%rd5641, {%r20251, %r20250};
	shf.l.wrap.b32 	%r20252, %r20248, %r20249, 30;
	shf.l.wrap.b32 	%r20253, %r20249, %r20248, 30;
	mov.b64 	%rd5642, {%r20253, %r20252};
	xor.b64  	%rd5643, %rd5642, %rd5641;
	shf.l.wrap.b32 	%r20254, %r20248, %r20249, 25;
	shf.l.wrap.b32 	%r20255, %r20249, %r20248, 25;
	mov.b64 	%rd5644, {%r20255, %r20254};
	xor.b64  	%rd5645, %rd5643, %rd5644;
	xor.b64  	%rd5646, %rd5627, %rd5579;
	xor.b64  	%rd5647, %rd5627, %rd5603;
	and.b64  	%rd5648, %rd5647, %rd5646;
	xor.b64  	%rd5649, %rd5648, %rd5627;
	add.s64 	%rd5650, %rd5639, %rd5649;
	add.s64 	%rd5651, %rd5650, %rd5645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20256,%dummy}, %rd5640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20257}, %rd5640;
	}
	shf.r.wrap.b32 	%r20258, %r20257, %r20256, 14;
	shf.r.wrap.b32 	%r20259, %r20256, %r20257, 14;
	mov.b64 	%rd5652, {%r20259, %r20258};
	shf.r.wrap.b32 	%r20260, %r20257, %r20256, 18;
	shf.r.wrap.b32 	%r20261, %r20256, %r20257, 18;
	mov.b64 	%rd5653, {%r20261, %r20260};
	xor.b64  	%rd5654, %rd5653, %rd5652;
	shf.l.wrap.b32 	%r20262, %r20256, %r20257, 23;
	shf.l.wrap.b32 	%r20263, %r20257, %r20256, 23;
	mov.b64 	%rd5655, {%r20263, %r20262};
	xor.b64  	%rd5656, %rd5654, %rd5655;
	xor.b64  	%rd5657, %rd5616, %rd5592;
	and.b64  	%rd5658, %rd5640, %rd5657;
	xor.b64  	%rd5659, %rd5658, %rd5592;
	add.s64 	%rd5660, %rd5568, %rd5335;
	add.s64 	%rd5661, %rd5660, %rd77;
	add.s64 	%rd5662, %rd5661, %rd5659;
	add.s64 	%rd5663, %rd5662, %rd5656;
	add.s64 	%rd5664, %rd5663, %rd5579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20264,%dummy}, %rd5651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20265}, %rd5651;
	}
	shf.r.wrap.b32 	%r20266, %r20265, %r20264, 28;
	shf.r.wrap.b32 	%r20267, %r20264, %r20265, 28;
	mov.b64 	%rd5665, {%r20267, %r20266};
	shf.l.wrap.b32 	%r20268, %r20264, %r20265, 30;
	shf.l.wrap.b32 	%r20269, %r20265, %r20264, 30;
	mov.b64 	%rd5666, {%r20269, %r20268};
	xor.b64  	%rd5667, %rd5666, %rd5665;
	shf.l.wrap.b32 	%r20270, %r20264, %r20265, 25;
	shf.l.wrap.b32 	%r20271, %r20265, %r20264, 25;
	mov.b64 	%rd5668, {%r20271, %r20270};
	xor.b64  	%rd5669, %rd5667, %rd5668;
	xor.b64  	%rd5670, %rd5651, %rd5603;
	xor.b64  	%rd5671, %rd5651, %rd5627;
	and.b64  	%rd5672, %rd5671, %rd5670;
	xor.b64  	%rd5673, %rd5672, %rd5651;
	add.s64 	%rd5674, %rd5663, %rd5673;
	add.s64 	%rd5675, %rd5674, %rd5669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20272,%dummy}, %rd5664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20273}, %rd5664;
	}
	shf.r.wrap.b32 	%r20274, %r20273, %r20272, 14;
	shf.r.wrap.b32 	%r20275, %r20272, %r20273, 14;
	mov.b64 	%rd5676, {%r20275, %r20274};
	shf.r.wrap.b32 	%r20276, %r20273, %r20272, 18;
	shf.r.wrap.b32 	%r20277, %r20272, %r20273, 18;
	mov.b64 	%rd5677, {%r20277, %r20276};
	xor.b64  	%rd5678, %rd5677, %rd5676;
	shf.l.wrap.b32 	%r20278, %r20272, %r20273, 23;
	shf.l.wrap.b32 	%r20279, %r20273, %r20272, 23;
	mov.b64 	%rd5679, {%r20279, %r20278};
	xor.b64  	%rd5680, %rd5678, %rd5679;
	xor.b64  	%rd5681, %rd5640, %rd5616;
	and.b64  	%rd5682, %rd5664, %rd5681;
	xor.b64  	%rd5683, %rd5682, %rd5616;
	add.s64 	%rd5684, %rd5592, %rd5348;
	add.s64 	%rd5685, %rd5684, %rd78;
	add.s64 	%rd5686, %rd5685, %rd5683;
	add.s64 	%rd5687, %rd5686, %rd5680;
	add.s64 	%rd5688, %rd5687, %rd5603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20280,%dummy}, %rd5675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20281}, %rd5675;
	}
	shf.r.wrap.b32 	%r20282, %r20281, %r20280, 28;
	shf.r.wrap.b32 	%r20283, %r20280, %r20281, 28;
	mov.b64 	%rd5689, {%r20283, %r20282};
	shf.l.wrap.b32 	%r20284, %r20280, %r20281, 30;
	shf.l.wrap.b32 	%r20285, %r20281, %r20280, 30;
	mov.b64 	%rd5690, {%r20285, %r20284};
	xor.b64  	%rd5691, %rd5690, %rd5689;
	shf.l.wrap.b32 	%r20286, %r20280, %r20281, 25;
	shf.l.wrap.b32 	%r20287, %r20281, %r20280, 25;
	mov.b64 	%rd5692, {%r20287, %r20286};
	xor.b64  	%rd5693, %rd5691, %rd5692;
	xor.b64  	%rd5694, %rd5675, %rd5627;
	xor.b64  	%rd5695, %rd5675, %rd5651;
	and.b64  	%rd5696, %rd5695, %rd5694;
	xor.b64  	%rd5697, %rd5696, %rd5675;
	add.s64 	%rd5698, %rd5687, %rd5697;
	add.s64 	%rd5699, %rd5698, %rd5693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20288,%dummy}, %rd5688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20289}, %rd5688;
	}
	shf.r.wrap.b32 	%r20290, %r20289, %r20288, 14;
	shf.r.wrap.b32 	%r20291, %r20288, %r20289, 14;
	mov.b64 	%rd5700, {%r20291, %r20290};
	shf.r.wrap.b32 	%r20292, %r20289, %r20288, 18;
	shf.r.wrap.b32 	%r20293, %r20288, %r20289, 18;
	mov.b64 	%rd5701, {%r20293, %r20292};
	xor.b64  	%rd5702, %rd5701, %rd5700;
	shf.l.wrap.b32 	%r20294, %r20288, %r20289, 23;
	shf.l.wrap.b32 	%r20295, %r20289, %r20288, 23;
	mov.b64 	%rd5703, {%r20295, %r20294};
	xor.b64  	%rd5704, %rd5702, %rd5703;
	xor.b64  	%rd5705, %rd5664, %rd5640;
	and.b64  	%rd5706, %rd5688, %rd5705;
	xor.b64  	%rd5707, %rd5706, %rd5640;
	add.s64 	%rd5708, %rd5616, %rd5361;
	add.s64 	%rd5709, %rd5708, %rd79;
	add.s64 	%rd5710, %rd5709, %rd5707;
	add.s64 	%rd5711, %rd5710, %rd5704;
	add.s64 	%rd5712, %rd5711, %rd5627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20296,%dummy}, %rd5699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20297}, %rd5699;
	}
	shf.r.wrap.b32 	%r20298, %r20297, %r20296, 28;
	shf.r.wrap.b32 	%r20299, %r20296, %r20297, 28;
	mov.b64 	%rd5713, {%r20299, %r20298};
	shf.l.wrap.b32 	%r20300, %r20296, %r20297, 30;
	shf.l.wrap.b32 	%r20301, %r20297, %r20296, 30;
	mov.b64 	%rd5714, {%r20301, %r20300};
	xor.b64  	%rd5715, %rd5714, %rd5713;
	shf.l.wrap.b32 	%r20302, %r20296, %r20297, 25;
	shf.l.wrap.b32 	%r20303, %r20297, %r20296, 25;
	mov.b64 	%rd5716, {%r20303, %r20302};
	xor.b64  	%rd5717, %rd5715, %rd5716;
	xor.b64  	%rd5718, %rd5699, %rd5651;
	xor.b64  	%rd5719, %rd5699, %rd5675;
	and.b64  	%rd5720, %rd5719, %rd5718;
	xor.b64  	%rd5721, %rd5720, %rd5699;
	add.s64 	%rd5722, %rd5711, %rd5721;
	add.s64 	%rd5723, %rd5722, %rd5717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20304,%dummy}, %rd5712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20305}, %rd5712;
	}
	shf.r.wrap.b32 	%r20306, %r20305, %r20304, 14;
	shf.r.wrap.b32 	%r20307, %r20304, %r20305, 14;
	mov.b64 	%rd5724, {%r20307, %r20306};
	shf.r.wrap.b32 	%r20308, %r20305, %r20304, 18;
	shf.r.wrap.b32 	%r20309, %r20304, %r20305, 18;
	mov.b64 	%rd5725, {%r20309, %r20308};
	xor.b64  	%rd5726, %rd5725, %rd5724;
	shf.l.wrap.b32 	%r20310, %r20304, %r20305, 23;
	shf.l.wrap.b32 	%r20311, %r20305, %r20304, 23;
	mov.b64 	%rd5727, {%r20311, %r20310};
	xor.b64  	%rd5728, %rd5726, %rd5727;
	xor.b64  	%rd5729, %rd5688, %rd5664;
	and.b64  	%rd5730, %rd5712, %rd5729;
	xor.b64  	%rd5731, %rd5730, %rd5664;
	add.s64 	%rd5732, %rd5640, %rd5374;
	add.s64 	%rd5733, %rd5732, %rd80;
	add.s64 	%rd5734, %rd5733, %rd5731;
	add.s64 	%rd5735, %rd5734, %rd5728;
	add.s64 	%rd5736, %rd5735, %rd5651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20312,%dummy}, %rd5723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20313}, %rd5723;
	}
	shf.r.wrap.b32 	%r20314, %r20313, %r20312, 28;
	shf.r.wrap.b32 	%r20315, %r20312, %r20313, 28;
	mov.b64 	%rd5737, {%r20315, %r20314};
	shf.l.wrap.b32 	%r20316, %r20312, %r20313, 30;
	shf.l.wrap.b32 	%r20317, %r20313, %r20312, 30;
	mov.b64 	%rd5738, {%r20317, %r20316};
	xor.b64  	%rd5739, %rd5738, %rd5737;
	shf.l.wrap.b32 	%r20318, %r20312, %r20313, 25;
	shf.l.wrap.b32 	%r20319, %r20313, %r20312, 25;
	mov.b64 	%rd5740, {%r20319, %r20318};
	xor.b64  	%rd5741, %rd5739, %rd5740;
	xor.b64  	%rd5742, %rd5723, %rd5675;
	xor.b64  	%rd5743, %rd5723, %rd5699;
	and.b64  	%rd5744, %rd5743, %rd5742;
	xor.b64  	%rd5745, %rd5744, %rd5723;
	add.s64 	%rd5746, %rd5735, %rd5745;
	add.s64 	%rd5747, %rd5746, %rd5741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20320,%dummy}, %rd5736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20321}, %rd5736;
	}
	shf.r.wrap.b32 	%r20322, %r20321, %r20320, 14;
	shf.r.wrap.b32 	%r20323, %r20320, %r20321, 14;
	mov.b64 	%rd5748, {%r20323, %r20322};
	shf.r.wrap.b32 	%r20324, %r20321, %r20320, 18;
	shf.r.wrap.b32 	%r20325, %r20320, %r20321, 18;
	mov.b64 	%rd5749, {%r20325, %r20324};
	xor.b64  	%rd5750, %rd5749, %rd5748;
	shf.l.wrap.b32 	%r20326, %r20320, %r20321, 23;
	shf.l.wrap.b32 	%r20327, %r20321, %r20320, 23;
	mov.b64 	%rd5751, {%r20327, %r20326};
	xor.b64  	%rd5752, %rd5750, %rd5751;
	xor.b64  	%rd5753, %rd5712, %rd5688;
	and.b64  	%rd5754, %rd5736, %rd5753;
	xor.b64  	%rd5755, %rd5754, %rd5688;
	add.s64 	%rd5756, %rd5664, %rd5387;
	add.s64 	%rd5757, %rd5756, %rd81;
	add.s64 	%rd5758, %rd5757, %rd5755;
	add.s64 	%rd5759, %rd5758, %rd5752;
	add.s64 	%rd5760, %rd5759, %rd5675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20328,%dummy}, %rd5747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20329}, %rd5747;
	}
	shf.r.wrap.b32 	%r20330, %r20329, %r20328, 28;
	shf.r.wrap.b32 	%r20331, %r20328, %r20329, 28;
	mov.b64 	%rd5761, {%r20331, %r20330};
	shf.l.wrap.b32 	%r20332, %r20328, %r20329, 30;
	shf.l.wrap.b32 	%r20333, %r20329, %r20328, 30;
	mov.b64 	%rd5762, {%r20333, %r20332};
	xor.b64  	%rd5763, %rd5762, %rd5761;
	shf.l.wrap.b32 	%r20334, %r20328, %r20329, 25;
	shf.l.wrap.b32 	%r20335, %r20329, %r20328, 25;
	mov.b64 	%rd5764, {%r20335, %r20334};
	xor.b64  	%rd5765, %rd5763, %rd5764;
	xor.b64  	%rd5766, %rd5747, %rd5699;
	xor.b64  	%rd5767, %rd5747, %rd5723;
	and.b64  	%rd5768, %rd5767, %rd5766;
	xor.b64  	%rd5769, %rd5768, %rd5747;
	add.s64 	%rd5770, %rd5759, %rd5769;
	add.s64 	%rd5771, %rd5770, %rd5765;
	add.s64 	%rd5772, %rd3030, %rd5771;
	st.local.u64 	[%rd1], %rd5772;
	add.s64 	%rd5773, %rd3038, %rd5747;
	st.local.u64 	[%rd1+8], %rd5773;
	add.s64 	%rd5774, %rd3036, %rd5723;
	st.local.u64 	[%rd1+16], %rd5774;
	add.s64 	%rd5775, %rd3028, %rd5699;
	st.local.u64 	[%rd1+24], %rd5775;
	add.s64 	%rd5776, %rd3012, %rd5760;
	st.local.u64 	[%rd1+32], %rd5776;
	add.s64 	%rd5777, %rd3019, %rd5736;
	st.local.u64 	[%rd1+40], %rd5777;
	add.s64 	%rd5778, %rd3018, %rd5712;
	st.local.u64 	[%rd1+48], %rd5778;
	add.s64 	%rd5779, %rd3023, %rd5688;
	st.local.u64 	[%rd1+56], %rd5779;
	st.local.v2.u32 	[%rd1+64], {%r20471, %r20470};
	st.local.v2.u32 	[%rd1+72], {%r20469, %r20468};
	st.local.v2.u32 	[%rd1+80], {%r20475, %r20474};
	st.local.v2.u32 	[%rd1+88], {%r20473, %r20472};
	st.local.v2.u32 	[%rd1+96], {%r20479, %r20478};
	st.local.v2.u32 	[%rd1+104], {%r20477, %r20476};
	st.local.v2.u32 	[%rd1+112], {%r20483, %r20482};
	st.local.v2.u32 	[%rd1+120], {%r20481, %r20480};
	st.local.v2.u32 	[%rd1+128], {%r20487, %r20486};
	st.local.v2.u32 	[%rd1+136], {%r20485, %r20484};
	st.local.v2.u32 	[%rd1+144], {%r20491, %r20490};
	st.local.v2.u32 	[%rd1+152], {%r20489, %r20488};
	st.local.v2.u32 	[%rd1+160], {%r20495, %r20494};
	st.local.v2.u32 	[%rd1+168], {%r20493, %r20492};
	st.local.v2.u32 	[%rd1+176], {%r20499, %r20498};
	st.local.v2.u32 	[%rd1+184], {%r20497, %r20496};
	add.s32 	%r20337, %r20337, 128;
	add.s32 	%r20338, %r20338, 32;

BB2_1:
	mul.wide.s32 	%rd84, %r20338, 4;
	add.s64 	%rd85, %rd82, %rd84;
	ld.global.u32 	%r4, [%rd85];
	add.s32 	%r2910, %r20338, 1;
	mul.wide.s32 	%rd86, %r2910, 4;
	add.s64 	%rd87, %rd82, %rd86;
	ld.global.u32 	%r5, [%rd87];
	add.s32 	%r2911, %r20338, 2;
	mul.wide.s32 	%rd88, %r2911, 4;
	add.s64 	%rd89, %rd82, %rd88;
	ld.global.u32 	%r6, [%rd89];
	add.s32 	%r2912, %r20338, 3;
	mul.wide.s32 	%rd90, %r2912, 4;
	add.s64 	%rd91, %rd82, %rd90;
	ld.global.u32 	%r7, [%rd91];
	add.s32 	%r2913, %r20338, 4;
	mul.wide.s32 	%rd92, %r2913, 4;
	add.s64 	%rd93, %rd82, %rd92;
	ld.global.u32 	%r8, [%rd93];
	add.s32 	%r2914, %r20338, 5;
	mul.wide.s32 	%rd94, %r2914, 4;
	add.s64 	%rd95, %rd82, %rd94;
	ld.global.u32 	%r9, [%rd95];
	add.s32 	%r2915, %r20338, 6;
	mul.wide.s32 	%rd96, %r2915, 4;
	add.s64 	%rd97, %rd82, %rd96;
	ld.global.u32 	%r10, [%rd97];
	add.s32 	%r2916, %r20338, 7;
	mul.wide.s32 	%rd98, %r2916, 4;
	add.s64 	%rd99, %rd82, %rd98;
	ld.global.u32 	%r11, [%rd99];
	add.s32 	%r2917, %r20338, 8;
	mul.wide.s32 	%rd100, %r2917, 4;
	add.s64 	%rd101, %rd82, %rd100;
	ld.global.u32 	%r12, [%rd101];
	add.s32 	%r2918, %r20338, 9;
	mul.wide.s32 	%rd102, %r2918, 4;
	add.s64 	%rd103, %rd82, %rd102;
	ld.global.u32 	%r13, [%rd103];
	add.s32 	%r2919, %r20338, 10;
	mul.wide.s32 	%rd104, %r2919, 4;
	add.s64 	%rd105, %rd82, %rd104;
	ld.global.u32 	%r14, [%rd105];
	add.s32 	%r2920, %r20338, 11;
	mul.wide.s32 	%rd106, %r2920, 4;
	add.s64 	%rd107, %rd82, %rd106;
	ld.global.u32 	%r15, [%rd107];
	add.s32 	%r2921, %r20338, 12;
	mul.wide.s32 	%rd108, %r2921, 4;
	add.s64 	%rd109, %rd82, %rd108;
	ld.global.u32 	%r16, [%rd109];
	add.s32 	%r2922, %r20338, 13;
	mul.wide.s32 	%rd110, %r2922, 4;
	add.s64 	%rd111, %rd82, %rd110;
	ld.global.u32 	%r17, [%rd111];
	add.s32 	%r2923, %r20338, 14;
	mul.wide.s32 	%rd112, %r2923, 4;
	add.s64 	%rd113, %rd82, %rd112;
	ld.global.u32 	%r18, [%rd113];
	add.s32 	%r2924, %r20338, 15;
	mul.wide.s32 	%rd114, %r2924, 4;
	add.s64 	%rd115, %rd82, %rd114;
	ld.global.u32 	%r19, [%rd115];
	add.s32 	%r2925, %r20338, 16;
	mul.wide.s32 	%rd116, %r2925, 4;
	add.s64 	%rd117, %rd82, %rd116;
	ld.global.u32 	%r20, [%rd117];
	add.s32 	%r2926, %r20338, 17;
	mul.wide.s32 	%rd118, %r2926, 4;
	add.s64 	%rd119, %rd82, %rd118;
	ld.global.u32 	%r21, [%rd119];
	add.s32 	%r2927, %r20338, 18;
	mul.wide.s32 	%rd120, %r2927, 4;
	add.s64 	%rd121, %rd82, %rd120;
	ld.global.u32 	%r22, [%rd121];
	add.s32 	%r2928, %r20338, 19;
	mul.wide.s32 	%rd122, %r2928, 4;
	add.s64 	%rd123, %rd82, %rd122;
	ld.global.u32 	%r23, [%rd123];
	add.s32 	%r2929, %r20338, 20;
	mul.wide.s32 	%rd124, %r2929, 4;
	add.s64 	%rd125, %rd82, %rd124;
	ld.global.u32 	%r24, [%rd125];
	add.s32 	%r2930, %r20338, 21;
	mul.wide.s32 	%rd126, %r2930, 4;
	add.s64 	%rd127, %rd82, %rd126;
	ld.global.u32 	%r25, [%rd127];
	add.s32 	%r2931, %r20338, 22;
	mul.wide.s32 	%rd128, %r2931, 4;
	add.s64 	%rd129, %rd82, %rd128;
	ld.global.u32 	%r26, [%rd129];
	add.s32 	%r2932, %r20338, 23;
	mul.wide.s32 	%rd130, %r2932, 4;
	add.s64 	%rd131, %rd82, %rd130;
	ld.global.u32 	%r27, [%rd131];
	add.s32 	%r2933, %r20338, 24;
	mul.wide.s32 	%rd132, %r2933, 4;
	add.s64 	%rd133, %rd82, %rd132;
	ld.global.u32 	%r28, [%rd133];
	add.s32 	%r2934, %r20338, 25;
	mul.wide.s32 	%rd134, %r2934, 4;
	add.s64 	%rd135, %rd82, %rd134;
	ld.global.u32 	%r29, [%rd135];
	add.s32 	%r2935, %r20338, 26;
	mul.wide.s32 	%rd136, %r2935, 4;
	add.s64 	%rd137, %rd82, %rd136;
	ld.global.u32 	%r30, [%rd137];
	add.s32 	%r2936, %r20338, 27;
	mul.wide.s32 	%rd138, %r2936, 4;
	add.s64 	%rd139, %rd82, %rd138;
	ld.global.u32 	%r31, [%rd139];
	add.s32 	%r2937, %r20338, 28;
	mul.wide.s32 	%rd140, %r2937, 4;
	add.s64 	%rd141, %rd82, %rd140;
	ld.global.u32 	%r32, [%rd141];
	add.s32 	%r2938, %r20338, 29;
	mul.wide.s32 	%rd142, %r2938, 4;
	add.s64 	%rd143, %rd82, %rd142;
	ld.global.u32 	%r33, [%rd143];
	add.s32 	%r2939, %r20338, 30;
	mul.wide.s32 	%rd144, %r2939, 4;
	add.s64 	%rd145, %rd82, %rd144;
	ld.global.u32 	%r34, [%rd145];
	add.s32 	%r2940, %r20338, 31;
	mul.wide.s32 	%rd146, %r2940, 4;
	add.s64 	%rd147, %rd82, %rd146;
	ld.global.u32 	%r35, [%rd147];
	setp.lt.s32	%p1, %r20337, %r1;
	@%p1 bra 	BB2_208;
	bra.uni 	BB2_2;

BB2_208:
	// inline asm
	prmt.b32 %r12975, %r4, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12977, %r5, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12979, %r6, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12981, %r7, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20443, %r8, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20442, %r9, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20441, %r10, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r11, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r12, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r13, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r14, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r15, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r16, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r17, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r18, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r21, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r22, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r24, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r25, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r29, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r31, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r33, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r34, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r35, 0, 0x0123;
	// inline asm
	ld.local.u32 	%r13072, [%rd1+192];
	add.s32 	%r13073, %r13072, 128;
	st.local.u32 	[%rd1+192], %r13073;
	bfe.u32 	%r13071, %r13072, 2, 5;
	and.b32  	%r13074, %r13072, 3;
	shl.b32 	%r13075, %r13074, 2;
	mov.u32 	%r13076, 1985229328;
	shr.u32 	%r13077, %r13076, %r13075;
	and.b32  	%r1784, %r13077, 65535;
	mov.u32 	%r20468, 0;
	setp.gt.s32	%p97, %r13071, 15;
	@%p97 bra 	BB2_241;

	setp.gt.s32	%p121, %r13071, 7;
	@%p121 bra 	BB2_226;

	setp.gt.s32	%p133, %r13071, 3;
	@%p133 bra 	BB2_218;

	setp.gt.s32	%p139, %r13071, 1;
	@%p139 bra 	BB2_215;

	setp.eq.s32	%p142, %r13071, 0;
	@%p142 bra 	BB2_293;
	bra.uni 	BB2_213;

BB2_293:
	mov.u32 	%r20468, 0;
	// inline asm
	prmt.b32 %r20471, %r20468, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20441, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20442, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20443, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20436, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20437, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20438, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20439, %r12975, %r20468, %r1784;
	// inline asm
	mov.u32 	%r20469, %r20468;
	mov.u32 	%r20470, %r20468;
	bra.uni 	BB2_294;

BB2_241:
	setp.gt.s32	%p98, %r13071, 23;
	@%p98 bra 	BB2_257;

	setp.gt.s32	%p110, %r13071, 19;
	@%p110 bra 	BB2_250;

	setp.gt.s32	%p116, %r13071, 17;
	@%p116 bra 	BB2_247;

	setp.eq.s32	%p119, %r13071, 16;
	@%p119 bra 	BB2_280;
	bra.uni 	BB2_245;

BB2_280:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20487, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20484, %r20436;
	mov.u32 	%r20485, %r20436;
	mov.u32 	%r20486, %r20436;
	bra.uni 	BB2_287;

BB2_226:
	setp.gt.s32	%p122, %r13071, 11;
	@%p122 bra 	BB2_234;

	setp.gt.s32	%p128, %r13071, 9;
	@%p128 bra 	BB2_231;

	setp.eq.s32	%p131, %r13071, 8;
	@%p131 bra 	BB2_284;
	bra.uni 	BB2_229;

BB2_284:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20479, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20476, %r20436;
	mov.u32 	%r20477, %r20436;
	mov.u32 	%r20478, %r20436;
	bra.uni 	BB2_285;

BB2_257:
	setp.gt.s32	%p99, %r13071, 27;
	@%p99 bra 	BB2_265;

	setp.gt.s32	%p105, %r13071, 25;
	@%p105 bra 	BB2_262;

	setp.eq.s32	%p108, %r13071, 24;
	@%p108 bra 	BB2_276;
	bra.uni 	BB2_260;

BB2_276:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20495, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20488, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20456, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20492, %r20436;
	mov.u32 	%r20493, %r20436;
	mov.u32 	%r20494, %r20436;
	bra.uni 	BB2_289;

BB2_218:
	setp.gt.s32	%p134, %r13071, 5;
	@%p134 bra 	BB2_222;

	setp.eq.s32	%p137, %r13071, 4;
	@%p137 bra 	BB2_291;
	bra.uni 	BB2_220;

BB2_291:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20475, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20441, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20442, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20443, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20472, %r20436;
	mov.u32 	%r20473, %r20436;
	mov.u32 	%r20474, %r20436;
	bra.uni 	BB2_225;

BB2_250:
	setp.gt.s32	%p111, %r13071, 21;
	@%p111 bra 	BB2_254;

	setp.eq.s32	%p114, %r13071, 20;
	@%p114 bra 	BB2_278;
	bra.uni 	BB2_252;

BB2_278:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20491, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20488, %r20436;
	mov.u32 	%r20489, %r20436;
	mov.u32 	%r20490, %r20436;
	bra.uni 	BB2_288;

BB2_234:
	setp.gt.s32	%p123, %r13071, 13;
	@%p123 bra 	BB2_238;

	setp.eq.s32	%p126, %r13071, 12;
	@%p126 bra 	BB2_282;
	bra.uni 	BB2_236;

BB2_282:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20483, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20480, %r20436;
	mov.u32 	%r20481, %r20436;
	mov.u32 	%r20482, %r20436;
	bra.uni 	BB2_286;

BB2_265:
	setp.gt.s32	%p100, %r13071, 29;
	@%p100 bra 	BB2_269;

	setp.eq.s32	%p103, %r13071, 28;
	@%p103 bra 	BB2_274;
	bra.uni 	BB2_267;

BB2_274:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20499, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20492, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20493, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20494, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20495, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20488, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20456, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20460, %r20436;
	mov.u32 	%r20461, %r20436;
	mov.u32 	%r20462, %r20436;
	mov.u32 	%r20463, %r20436;
	mov.u32 	%r20496, %r20436;
	mov.u32 	%r20497, %r20436;
	mov.u32 	%r20498, %r20436;
	bra.uni 	BB2_295;

BB2_215:
	setp.eq.s32	%p140, %r13071, 2;
	@%p140 bra 	BB2_292;
	bra.uni 	BB2_216;

BB2_292:
	mov.u32 	%r20438, 0;
	// inline asm
	prmt.b32 %r20469, %r20438, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20441, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20442, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20443, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20436, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20437, %r12975, %r20438, %r1784;
	// inline asm
	mov.u32 	%r20439, %r20438;
	mov.u32 	%r20468, %r20438;
	mov.u32 	%r20472, %r20438;
	mov.u32 	%r20473, %r20438;
	mov.u32 	%r20474, %r20438;
	mov.u32 	%r20475, %r20438;
	mov.u32 	%r20476, %r20438;
	mov.u32 	%r20477, %r20438;
	mov.u32 	%r20478, %r20438;
	mov.u32 	%r20479, %r20438;
	mov.u32 	%r20480, %r20438;
	mov.u32 	%r20481, %r20438;
	mov.u32 	%r20482, %r20438;
	mov.u32 	%r20483, %r20438;
	mov.u32 	%r20484, %r20438;
	mov.u32 	%r20485, %r20438;
	mov.u32 	%r20486, %r20438;
	mov.u32 	%r20487, %r20438;
	mov.u32 	%r20488, %r20438;
	mov.u32 	%r20489, %r20438;
	mov.u32 	%r20490, %r20438;
	mov.u32 	%r20491, %r20438;
	mov.u32 	%r20492, %r20438;
	mov.u32 	%r20493, %r20438;
	mov.u32 	%r20494, %r20438;
	mov.u32 	%r20495, %r20438;
	mov.u32 	%r20496, %r20438;
	mov.u32 	%r20497, %r20438;
	mov.u32 	%r20498, %r20438;
	mov.u32 	%r20499, %r20438;
	bra.uni 	BB2_295;

BB2_247:
	setp.eq.s32	%p117, %r13071, 18;
	@%p117 bra 	BB2_279;
	bra.uni 	BB2_248;

BB2_279:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20485, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20484, %r20436;
	bra.uni 	BB2_287;

BB2_231:
	setp.eq.s32	%p129, %r13071, 10;
	@%p129 bra 	BB2_283;
	bra.uni 	BB2_232;

BB2_283:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20477, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20476, %r20436;
	bra.uni 	BB2_285;

BB2_262:
	setp.eq.s32	%p106, %r13071, 26;
	@%p106 bra 	BB2_275;
	bra.uni 	BB2_263;

BB2_275:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20493, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20494, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20495, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20488, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20456, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20462, %r20436;
	mov.u32 	%r20463, %r20436;
	mov.u32 	%r20492, %r20436;
	bra.uni 	BB2_289;

BB2_222:
	setp.eq.s32	%p135, %r13071, 6;
	@%p135 bra 	BB2_290;
	bra.uni 	BB2_223;

BB2_290:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20473, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20441, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20472, %r20436;
	bra.uni 	BB2_225;

BB2_254:
	setp.eq.s32	%p112, %r13071, 22;
	@%p112 bra 	BB2_277;
	bra.uni 	BB2_255;

BB2_277:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20489, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20488, %r20436;
	bra.uni 	BB2_288;

BB2_238:
	setp.eq.s32	%p124, %r13071, 14;
	@%p124 bra 	BB2_281;
	bra.uni 	BB2_239;

BB2_281:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20481, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20480, %r20436;
	bra.uni 	BB2_286;

BB2_269:
	setp.eq.s32	%p101, %r13071, 30;
	@%p101 bra 	BB2_273;
	bra.uni 	BB2_270;

BB2_273:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20497, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20498, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20499, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20492, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20493, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20494, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20495, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20488, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20456, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20460, %r20436;
	mov.u32 	%r20461, %r20436;
	mov.u32 	%r20462, %r20436;
	mov.u32 	%r20463, %r20436;
	mov.u32 	%r20466, %r20436;
	mov.u32 	%r20467, %r20436;
	mov.u32 	%r20496, %r20436;
	bra.uni 	BB2_295;

BB2_213:
	setp.eq.s32	%p143, %r13071, 1;
	@%p143 bra 	BB2_214;
	bra.uni 	BB2_271;

BB2_214:
	mov.u32 	%r20439, 0;
	// inline asm
	prmt.b32 %r20470, %r20439, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20441, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20442, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20443, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20436, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20437, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20438, %r12975, %r20439, %r1784;
	// inline asm
	mov.u32 	%r20468, %r20439;
	mov.u32 	%r20469, %r20439;
	mov.u32 	%r20472, %r20439;
	mov.u32 	%r20473, %r20439;
	mov.u32 	%r20474, %r20439;
	mov.u32 	%r20475, %r20439;
	mov.u32 	%r20476, %r20439;
	mov.u32 	%r20477, %r20439;
	mov.u32 	%r20478, %r20439;
	mov.u32 	%r20479, %r20439;
	mov.u32 	%r20480, %r20439;
	mov.u32 	%r20481, %r20439;
	mov.u32 	%r20482, %r20439;
	mov.u32 	%r20483, %r20439;
	mov.u32 	%r20484, %r20439;
	mov.u32 	%r20485, %r20439;
	mov.u32 	%r20486, %r20439;
	mov.u32 	%r20487, %r20439;
	mov.u32 	%r20488, %r20439;
	mov.u32 	%r20489, %r20439;
	mov.u32 	%r20490, %r20439;
	mov.u32 	%r20491, %r20439;
	mov.u32 	%r20492, %r20439;
	mov.u32 	%r20493, %r20439;
	mov.u32 	%r20494, %r20439;
	mov.u32 	%r20495, %r20439;
	mov.u32 	%r20496, %r20439;
	mov.u32 	%r20497, %r20439;
	mov.u32 	%r20498, %r20439;
	mov.u32 	%r20499, %r20439;
	bra.uni 	BB2_295;

BB2_245:
	setp.eq.s32	%p120, %r13071, 17;
	@%p120 bra 	BB2_246;
	bra.uni 	BB2_271;

BB2_246:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20486, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20484, %r20436;
	mov.u32 	%r20485, %r20436;
	bra.uni 	BB2_287;

BB2_229:
	setp.eq.s32	%p132, %r13071, 9;
	@%p132 bra 	BB2_230;
	bra.uni 	BB2_271;

BB2_230:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20478, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20476, %r20436;
	mov.u32 	%r20477, %r20436;
	bra.uni 	BB2_285;

BB2_260:
	setp.eq.s32	%p109, %r13071, 25;
	@%p109 bra 	BB2_261;
	bra.uni 	BB2_271;

BB2_261:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20494, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20495, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20488, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20456, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20463, %r20436;
	mov.u32 	%r20492, %r20436;
	mov.u32 	%r20493, %r20436;
	bra.uni 	BB2_289;

BB2_220:
	setp.eq.s32	%p138, %r13071, 5;
	@%p138 bra 	BB2_221;
	bra.uni 	BB2_271;

BB2_221:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20474, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20441, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20442, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20472, %r20436;
	mov.u32 	%r20473, %r20436;
	bra.uni 	BB2_225;

BB2_252:
	setp.eq.s32	%p115, %r13071, 21;
	@%p115 bra 	BB2_253;
	bra.uni 	BB2_271;

BB2_253:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20490, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20488, %r20436;
	mov.u32 	%r20489, %r20436;
	bra.uni 	BB2_288;

BB2_236:
	setp.eq.s32	%p127, %r13071, 13;
	@%p127 bra 	BB2_237;
	bra.uni 	BB2_271;

BB2_237:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20482, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20480, %r20436;
	mov.u32 	%r20481, %r20436;
	bra.uni 	BB2_286;

BB2_267:
	setp.eq.s32	%p104, %r13071, 29;
	@%p104 bra 	BB2_268;
	bra.uni 	BB2_271;

BB2_268:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20498, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20499, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20492, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20493, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20494, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20495, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20488, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20456, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20460, %r20436;
	mov.u32 	%r20461, %r20436;
	mov.u32 	%r20462, %r20436;
	mov.u32 	%r20463, %r20436;
	mov.u32 	%r20467, %r20436;
	mov.u32 	%r20496, %r20436;
	mov.u32 	%r20497, %r20436;
	bra.uni 	BB2_295;

BB2_216:
	setp.eq.s32	%p141, %r13071, 3;
	@%p141 bra 	BB2_217;
	bra.uni 	BB2_271;

BB2_217:
	mov.u32 	%r20437, 0;
	// inline asm
	prmt.b32 %r20468, %r20437, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20441, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20442, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20443, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20436, %r12975, %r20437, %r1784;
	// inline asm
	mov.u32 	%r20438, %r20437;
	mov.u32 	%r20439, %r20437;
	mov.u32 	%r20472, %r20437;
	mov.u32 	%r20473, %r20437;
	mov.u32 	%r20474, %r20437;
	mov.u32 	%r20475, %r20437;
	mov.u32 	%r20476, %r20437;
	mov.u32 	%r20477, %r20437;
	mov.u32 	%r20478, %r20437;
	mov.u32 	%r20479, %r20437;
	mov.u32 	%r20480, %r20437;
	mov.u32 	%r20481, %r20437;
	mov.u32 	%r20482, %r20437;
	mov.u32 	%r20483, %r20437;
	mov.u32 	%r20484, %r20437;
	mov.u32 	%r20485, %r20437;
	mov.u32 	%r20486, %r20437;
	mov.u32 	%r20487, %r20437;
	mov.u32 	%r20488, %r20437;
	mov.u32 	%r20489, %r20437;
	mov.u32 	%r20490, %r20437;
	mov.u32 	%r20491, %r20437;
	mov.u32 	%r20492, %r20437;
	mov.u32 	%r20493, %r20437;
	mov.u32 	%r20494, %r20437;
	mov.u32 	%r20495, %r20437;
	mov.u32 	%r20496, %r20437;
	mov.u32 	%r20497, %r20437;
	mov.u32 	%r20498, %r20437;
	mov.u32 	%r20499, %r20437;
	bra.uni 	BB2_295;

BB2_248:
	setp.eq.s32	%p118, %r13071, 19;
	@%p118 bra 	BB2_249;
	bra.uni 	BB2_271;

BB2_249:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20484, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	bra.uni 	BB2_287;

BB2_232:
	setp.eq.s32	%p130, %r13071, 11;
	@%p130 bra 	BB2_233;
	bra.uni 	BB2_271;

BB2_233:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20476, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	bra.uni 	BB2_285;

BB2_263:
	setp.eq.s32	%p107, %r13071, 27;
	@%p107 bra 	BB2_264;
	bra.uni 	BB2_271;

BB2_264:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20492, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20493, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20494, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20495, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20488, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20456, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20461, %r20436;
	mov.u32 	%r20462, %r20436;
	mov.u32 	%r20463, %r20436;
	bra.uni 	BB2_289;

BB2_223:
	setp.eq.s32	%p136, %r13071, 7;
	@%p136 bra 	BB2_224;
	bra.uni 	BB2_271;

BB2_224:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20472, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20449, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20450, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20451, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20444, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20445, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20446, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20447, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20440, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;

BB2_225:
	mov.u32 	%r20476, %r20436;
	mov.u32 	%r20477, %r20436;
	mov.u32 	%r20478, %r20436;
	mov.u32 	%r20479, %r20436;

BB2_285:
	mov.u32 	%r20480, %r20436;
	mov.u32 	%r20481, %r20436;
	mov.u32 	%r20482, %r20436;
	mov.u32 	%r20483, %r20436;

BB2_286:
	mov.u32 	%r20484, %r20436;
	mov.u32 	%r20485, %r20436;
	mov.u32 	%r20486, %r20436;
	mov.u32 	%r20487, %r20436;

BB2_287:
	mov.u32 	%r20488, %r20436;
	mov.u32 	%r20489, %r20436;
	mov.u32 	%r20490, %r20436;
	mov.u32 	%r20491, %r20436;

BB2_288:
	mov.u32 	%r20492, %r20436;
	mov.u32 	%r20493, %r20436;
	mov.u32 	%r20494, %r20436;
	mov.u32 	%r20495, %r20436;

BB2_289:
	mov.u32 	%r20496, %r20436;
	mov.u32 	%r20497, %r20436;
	mov.u32 	%r20498, %r20436;
	mov.u32 	%r20499, %r20436;
	bra.uni 	BB2_295;

BB2_255:
	setp.eq.s32	%p113, %r13071, 23;
	@%p113 bra 	BB2_256;
	bra.uni 	BB2_271;

BB2_256:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20488, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	bra.uni 	BB2_288;

BB2_239:
	setp.eq.s32	%p125, %r13071, 15;
	@%p125 bra 	BB2_240;
	bra.uni 	BB2_271;

BB2_240:
	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20480, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20465, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20466, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20467, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20460, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20461, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20462, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20463, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20456, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20457, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20458, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20459, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20452, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20453, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20454, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20455, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20448, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	bra.uni 	BB2_286;

BB2_270:
	setp.ne.s32	%p102, %r13071, 31;
	@%p102 bra 	BB2_271;

	mov.u32 	%r20436, 0;
	// inline asm
	prmt.b32 %r20496, %r20436, %r20464, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20497, %r20464, %r20465, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20498, %r20465, %r20466, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20499, %r20466, %r20467, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20492, %r20467, %r20460, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20493, %r20460, %r20461, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20494, %r20461, %r20462, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20495, %r20462, %r20463, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20488, %r20463, %r20456, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20489, %r20456, %r20457, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20490, %r20457, %r20458, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20491, %r20458, %r20459, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20484, %r20459, %r20452, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20485, %r20452, %r20453, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20486, %r20453, %r20454, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20487, %r20454, %r20455, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20480, %r20455, %r20448, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20481, %r20448, %r20449, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20482, %r20449, %r20450, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20483, %r20450, %r20451, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20476, %r20451, %r20444, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20477, %r20444, %r20445, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20478, %r20445, %r20446, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20479, %r20446, %r20447, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20472, %r20447, %r20440, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20473, %r20440, %r20441, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20474, %r20441, %r20442, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20475, %r20442, %r20443, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20468, %r20443, %r12981, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20469, %r12981, %r12979, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20470, %r12979, %r12977, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20471, %r12977, %r12975, %r1784;
	// inline asm
	// inline asm
	prmt.b32 %r20464, %r12975, %r20436, %r1784;
	// inline asm
	mov.u32 	%r20437, %r20436;
	mov.u32 	%r20438, %r20436;
	mov.u32 	%r20439, %r20436;
	mov.u32 	%r20440, %r20436;
	mov.u32 	%r20441, %r20436;
	mov.u32 	%r20442, %r20436;
	mov.u32 	%r20443, %r20436;
	mov.u32 	%r20444, %r20436;
	mov.u32 	%r20445, %r20436;
	mov.u32 	%r20446, %r20436;
	mov.u32 	%r20447, %r20436;
	mov.u32 	%r20448, %r20436;
	mov.u32 	%r20449, %r20436;
	mov.u32 	%r20450, %r20436;
	mov.u32 	%r20451, %r20436;
	mov.u32 	%r20452, %r20436;
	mov.u32 	%r20453, %r20436;
	mov.u32 	%r20454, %r20436;
	mov.u32 	%r20455, %r20436;
	mov.u32 	%r20456, %r20436;
	mov.u32 	%r20457, %r20436;
	mov.u32 	%r20458, %r20436;
	mov.u32 	%r20459, %r20436;
	mov.u32 	%r20460, %r20436;
	mov.u32 	%r20461, %r20436;
	mov.u32 	%r20462, %r20436;
	mov.u32 	%r20463, %r20436;
	mov.u32 	%r20465, %r20436;
	mov.u32 	%r20466, %r20436;
	mov.u32 	%r20467, %r20436;
	bra.uni 	BB2_295;

BB2_271:
	mov.u32 	%r20436, %r12981;
	mov.u32 	%r20437, %r12979;
	mov.u32 	%r20438, %r12977;
	mov.u32 	%r20439, %r12975;
	mov.u32 	%r20469, %r20468;
	mov.u32 	%r20470, %r20468;
	mov.u32 	%r20471, %r20468;

BB2_294:
	mov.u32 	%r20472, %r20468;
	mov.u32 	%r20473, %r20468;
	mov.u32 	%r20474, %r20468;
	mov.u32 	%r20475, %r20468;
	mov.u32 	%r20476, %r20468;
	mov.u32 	%r20477, %r20468;
	mov.u32 	%r20478, %r20468;
	mov.u32 	%r20479, %r20468;
	mov.u32 	%r20480, %r20468;
	mov.u32 	%r20481, %r20468;
	mov.u32 	%r20482, %r20468;
	mov.u32 	%r20483, %r20468;
	mov.u32 	%r20484, %r20468;
	mov.u32 	%r20485, %r20468;
	mov.u32 	%r20486, %r20468;
	mov.u32 	%r20487, %r20468;
	mov.u32 	%r20488, %r20468;
	mov.u32 	%r20489, %r20468;
	mov.u32 	%r20490, %r20468;
	mov.u32 	%r20491, %r20468;
	mov.u32 	%r20492, %r20468;
	mov.u32 	%r20493, %r20468;
	mov.u32 	%r20494, %r20468;
	mov.u32 	%r20495, %r20468;
	mov.u32 	%r20496, %r20468;
	mov.u32 	%r20497, %r20468;
	mov.u32 	%r20498, %r20468;
	mov.u32 	%r20499, %r20468;
	bra.uni 	BB2_295;

BB2_2:
	ld.param.u32 	%r20336, [sha512_update_global_swap_param_2];
	// inline asm
	prmt.b32 %r2941, %r4, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2943, %r5, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2945, %r6, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2947, %r7, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r8, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r9, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r10, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r11, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r12, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r13, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r14, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r15, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r16, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r17, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r18, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r20, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r21, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r22, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r24, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r25, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r29, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r31, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r33, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r34, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r35, 0, 0x0123;
	// inline asm
	ld.local.u32 	%r3005, [%rd1+192];
	and.b32  	%r3006, %r3005, 127;
	sub.s32 	%r3007, %r20336, %r20337;
	add.s32 	%r3008, %r3005, %r3007;
	st.local.u32 	[%rd1+192], %r3008;
	add.s32 	%r3009, %r3006, %r3007;
	setp.lt.s32	%p2, %r3009, 128;
	bfe.u32 	%r68, %r3005, 2, 5;
	and.b32  	%r3010, %r3005, 3;
	shl.b32 	%r3011, %r3010, 2;
	mov.u32 	%r3012, 1985229328;
	shr.u32 	%r3013, %r3012, %r3011;
	and.b32  	%r69, %r3013, 65535;
	@%p2 bra 	BB2_91;
	bra.uni 	BB2_3;

BB2_91:
	setp.gt.s32	%p50, %r68, 15;
	@%p50 bra 	BB2_123;

	setp.gt.s32	%p74, %r68, 7;
	@%p74 bra 	BB2_108;

	setp.gt.s32	%p86, %r68, 3;
	@%p86 bra 	BB2_101;

	setp.gt.s32	%p92, %r68, 1;
	@%p92 bra 	BB2_98;

	setp.eq.s32	%p95, %r68, 0;
	@%p95 bra 	BB2_205;
	bra.uni 	BB2_96;

BB2_205:
	// inline asm
	prmt.b32 %r3003, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2947, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2945, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2943, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r12910, 0;
	// inline asm
	prmt.b32 %r20434, %r2941, %r12910, %r69;
	// inline asm
	bra.uni 	BB2_206;

BB2_3:
	mov.u32 	%r20371, 0;
	setp.gt.s32	%p3, %r68, 15;
	@%p3 bra 	BB2_36;

	setp.gt.s32	%p27, %r68, 7;
	@%p27 bra 	BB2_21;

	setp.gt.s32	%p39, %r68, 3;
	@%p39 bra 	BB2_13;

	setp.gt.s32	%p45, %r68, 1;
	@%p45 bra 	BB2_10;

	setp.eq.s32	%p48, %r68, 0;
	@%p48 bra 	BB2_88;
	bra.uni 	BB2_8;

BB2_88:
	mov.u32 	%r20371, 0;
	// inline asm
	prmt.b32 %r20374, %r20371, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20339, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20370, %r2941, %r20371, %r69;
	// inline asm
	mov.u32 	%r20372, %r20371;
	mov.u32 	%r20373, %r20371;
	bra.uni 	BB2_89;

BB2_123:
	setp.gt.s32	%p51, %r68, 23;
	@%p51 bra 	BB2_139;

	setp.gt.s32	%p63, %r68, 19;
	@%p63 bra 	BB2_132;

	setp.gt.s32	%p69, %r68, 17;
	@%p69 bra 	BB2_129;

	setp.eq.s32	%p72, %r68, 16;
	@%p72 bra 	BB2_180;
	bra.uni 	BB2_127;

BB2_180:
	// inline asm
	prmt.b32 %r3003, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2973, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	bra.uni 	BB2_181;

BB2_36:
	setp.gt.s32	%p4, %r68, 23;
	@%p4 bra 	BB2_52;

	setp.gt.s32	%p16, %r68, 19;
	@%p16 bra 	BB2_45;

	setp.gt.s32	%p22, %r68, 17;
	@%p22 bra 	BB2_42;

	setp.eq.s32	%p25, %r68, 16;
	@%p25 bra 	BB2_75;
	bra.uni 	BB2_40;

BB2_75:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20390, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20387, %r20339;
	mov.u32 	%r20388, %r20339;
	mov.u32 	%r20389, %r20339;
	bra.uni 	BB2_82;

BB2_108:
	setp.gt.s32	%p75, %r68, 11;
	@%p75 bra 	BB2_116;

	setp.gt.s32	%p81, %r68, 9;
	@%p81 bra 	BB2_113;

	setp.eq.s32	%p84, %r68, 8;
	@%p84 bra 	BB2_194;
	bra.uni 	BB2_111;

BB2_194:
	// inline asm
	prmt.b32 %r3003, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2957, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	bra.uni 	BB2_195;

BB2_21:
	setp.gt.s32	%p28, %r68, 11;
	@%p28 bra 	BB2_29;

	setp.gt.s32	%p34, %r68, 9;
	@%p34 bra 	BB2_26;

	setp.eq.s32	%p37, %r68, 8;
	@%p37 bra 	BB2_79;
	bra.uni 	BB2_24;

BB2_79:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20382, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20379, %r20339;
	mov.u32 	%r20380, %r20339;
	mov.u32 	%r20381, %r20339;
	bra.uni 	BB2_80;

BB2_139:
	setp.gt.s32	%p52, %r68, 27;
	@%p52 bra 	BB2_147;

	setp.gt.s32	%p58, %r68, 25;
	@%p58 bra 	BB2_144;

	setp.eq.s32	%p61, %r68, 24;
	@%p61 bra 	BB2_166;
	bra.uni 	BB2_142;

BB2_166:
	// inline asm
	prmt.b32 %r3003, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2989, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r2987, %r2947;
	bra.uni 	BB2_167;

BB2_52:
	setp.gt.s32	%p5, %r68, 27;
	@%p5 bra 	BB2_60;

	setp.gt.s32	%p11, %r68, 25;
	@%p11 bra 	BB2_57;

	setp.eq.s32	%p14, %r68, 24;
	@%p14 bra 	BB2_71;
	bra.uni 	BB2_55;

BB2_71:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20398, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20391, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2987, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20395, %r20339;
	mov.u32 	%r20396, %r20339;
	mov.u32 	%r20397, %r20339;
	bra.uni 	BB2_84;

BB2_101:
	setp.gt.s32	%p87, %r68, 5;
	@%p87 bra 	BB2_105;

	setp.eq.s32	%p90, %r68, 4;
	@%p90 bra 	BB2_201;
	bra.uni 	BB2_103;

BB2_201:
	// inline asm
	prmt.b32 %r3003, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2949, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r20434, %r2947;
	bra.uni 	BB2_206;

BB2_13:
	setp.gt.s32	%p40, %r68, 5;
	@%p40 bra 	BB2_17;

	setp.eq.s32	%p43, %r68, 4;
	@%p43 bra 	BB2_86;
	bra.uni 	BB2_15;

BB2_86:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20378, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20375, %r20339;
	mov.u32 	%r20376, %r20339;
	mov.u32 	%r20377, %r20339;
	bra.uni 	BB2_20;

BB2_132:
	setp.gt.s32	%p64, %r68, 21;
	@%p64 bra 	BB2_136;

	setp.eq.s32	%p67, %r68, 20;
	@%p67 bra 	BB2_173;
	bra.uni 	BB2_134;

BB2_173:
	// inline asm
	prmt.b32 %r3003, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2981, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	bra.uni 	BB2_174;

BB2_45:
	setp.gt.s32	%p17, %r68, 21;
	@%p17 bra 	BB2_49;

	setp.eq.s32	%p20, %r68, 20;
	@%p20 bra 	BB2_73;
	bra.uni 	BB2_47;

BB2_73:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20394, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20391, %r20339;
	mov.u32 	%r20392, %r20339;
	mov.u32 	%r20393, %r20339;
	bra.uni 	BB2_83;

BB2_116:
	setp.gt.s32	%p76, %r68, 13;
	@%p76 bra 	BB2_120;

	setp.eq.s32	%p79, %r68, 12;
	@%p79 bra 	BB2_187;
	bra.uni 	BB2_118;

BB2_187:
	// inline asm
	prmt.b32 %r3003, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2965, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	bra.uni 	BB2_188;

BB2_29:
	setp.gt.s32	%p29, %r68, 13;
	@%p29 bra 	BB2_33;

	setp.eq.s32	%p32, %r68, 12;
	@%p32 bra 	BB2_77;
	bra.uni 	BB2_31;

BB2_77:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20386, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20383, %r20339;
	mov.u32 	%r20384, %r20339;
	mov.u32 	%r20385, %r20339;
	bra.uni 	BB2_81;

BB2_147:
	setp.gt.s32	%p53, %r68, 29;
	@%p53 bra 	BB2_151;

	setp.eq.s32	%p56, %r68, 28;
	@%p56 bra 	BB2_159;
	bra.uni 	BB2_149;

BB2_159:
	// inline asm
	prmt.b32 %r3003, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2997, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r2987, %r2947;
	mov.u32 	%r2985, %r2947;
	mov.u32 	%r2983, %r2947;
	mov.u32 	%r2981, %r2947;
	mov.u32 	%r2995, %r2947;
	bra.uni 	BB2_160;

BB2_60:
	setp.gt.s32	%p6, %r68, 29;
	@%p6 bra 	BB2_64;

	setp.eq.s32	%p9, %r68, 28;
	@%p9 bra 	BB2_69;
	bra.uni 	BB2_62;

BB2_69:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20402, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20395, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20396, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20397, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20398, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20391, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2987, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r2995, %r20339;
	mov.u32 	%r2993, %r20339;
	mov.u32 	%r2991, %r20339;
	mov.u32 	%r2989, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20399, %r20339;
	mov.u32 	%r20400, %r20339;
	mov.u32 	%r20401, %r20339;
	bra.uni 	BB2_90;

BB2_98:
	setp.eq.s32	%p93, %r68, 2;
	@%p93 bra 	BB2_203;
	bra.uni 	BB2_99;

BB2_203:
	// inline asm
	prmt.b32 %r3003, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2947, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2943, 0;
	// inline asm
	prmt.b32 %r2945, %r2941, %r2943, %r69;
	// inline asm
	mov.u32 	%r20434, %r2943;
	bra.uni 	BB2_206;

BB2_10:
	setp.eq.s32	%p46, %r68, 2;
	@%p46 bra 	BB2_87;
	bra.uni 	BB2_11;

BB2_87:
	mov.u32 	%r20341, 0;
	// inline asm
	prmt.b32 %r20372, %r20341, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20339, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2941, %r20341, %r69;
	// inline asm
	mov.u32 	%r20370, %r20341;
	mov.u32 	%r20371, %r20341;
	mov.u32 	%r20375, %r20341;
	mov.u32 	%r20376, %r20341;
	mov.u32 	%r20377, %r20341;
	mov.u32 	%r20378, %r20341;
	mov.u32 	%r20379, %r20341;
	mov.u32 	%r20380, %r20341;
	mov.u32 	%r20381, %r20341;
	mov.u32 	%r20382, %r20341;
	mov.u32 	%r20383, %r20341;
	mov.u32 	%r20384, %r20341;
	mov.u32 	%r20385, %r20341;
	mov.u32 	%r20386, %r20341;
	mov.u32 	%r20387, %r20341;
	mov.u32 	%r20388, %r20341;
	mov.u32 	%r20389, %r20341;
	mov.u32 	%r20390, %r20341;
	mov.u32 	%r20391, %r20341;
	mov.u32 	%r20392, %r20341;
	mov.u32 	%r20393, %r20341;
	mov.u32 	%r20394, %r20341;
	mov.u32 	%r20395, %r20341;
	mov.u32 	%r20396, %r20341;
	mov.u32 	%r20397, %r20341;
	mov.u32 	%r20398, %r20341;
	mov.u32 	%r20399, %r20341;
	mov.u32 	%r20400, %r20341;
	mov.u32 	%r20401, %r20341;
	mov.u32 	%r20402, %r20341;
	bra.uni 	BB2_90;

BB2_129:
	setp.eq.s32	%p70, %r68, 18;
	@%p70 bra 	BB2_178;
	bra.uni 	BB2_130;

BB2_178:
	// inline asm
	prmt.b32 %r3003, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2977, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	bra.uni 	BB2_175;

BB2_42:
	setp.eq.s32	%p23, %r68, 18;
	@%p23 bra 	BB2_74;
	bra.uni 	BB2_43;

BB2_74:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20388, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20387, %r20339;
	bra.uni 	BB2_82;

BB2_113:
	setp.eq.s32	%p82, %r68, 10;
	@%p82 bra 	BB2_192;
	bra.uni 	BB2_114;

BB2_192:
	// inline asm
	prmt.b32 %r3003, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2961, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	bra.uni 	BB2_189;

BB2_26:
	setp.eq.s32	%p35, %r68, 10;
	@%p35 bra 	BB2_78;
	bra.uni 	BB2_27;

BB2_78:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20380, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20379, %r20339;
	bra.uni 	BB2_80;

BB2_144:
	setp.eq.s32	%p59, %r68, 26;
	@%p59 bra 	BB2_164;
	bra.uni 	BB2_145;

BB2_164:
	// inline asm
	prmt.b32 %r3003, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2993, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r2987, %r2947;
	mov.u32 	%r2985, %r2947;
	mov.u32 	%r2983, %r2947;
	mov.u32 	%r2981, %r2947;
	bra.uni 	BB2_161;

BB2_57:
	setp.eq.s32	%p12, %r68, 26;
	@%p12 bra 	BB2_70;
	bra.uni 	BB2_58;

BB2_70:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20396, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20397, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20398, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20391, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2987, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r2991, %r20339;
	mov.u32 	%r2989, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20395, %r20339;
	bra.uni 	BB2_84;

BB2_105:
	setp.eq.s32	%p88, %r68, 6;
	@%p88 bra 	BB2_199;
	bra.uni 	BB2_106;

BB2_199:
	// inline asm
	prmt.b32 %r3003, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2953, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	bra.uni 	BB2_196;

BB2_17:
	setp.eq.s32	%p41, %r68, 6;
	@%p41 bra 	BB2_85;
	bra.uni 	BB2_18;

BB2_85:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20376, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20375, %r20339;
	bra.uni 	BB2_20;

BB2_136:
	setp.eq.s32	%p65, %r68, 22;
	@%p65 bra 	BB2_171;
	bra.uni 	BB2_137;

BB2_171:
	// inline asm
	prmt.b32 %r3003, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2985, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	bra.uni 	BB2_168;

BB2_49:
	setp.eq.s32	%p18, %r68, 22;
	@%p18 bra 	BB2_72;
	bra.uni 	BB2_50;

BB2_72:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20392, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20391, %r20339;
	bra.uni 	BB2_83;

BB2_120:
	setp.eq.s32	%p77, %r68, 14;
	@%p77 bra 	BB2_185;
	bra.uni 	BB2_121;

BB2_185:
	// inline asm
	prmt.b32 %r3003, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2969, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	bra.uni 	BB2_182;

BB2_33:
	setp.eq.s32	%p30, %r68, 14;
	@%p30 bra 	BB2_76;
	bra.uni 	BB2_34;

BB2_76:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20384, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20383, %r20339;
	bra.uni 	BB2_81;

BB2_151:
	setp.eq.s32	%p54, %r68, 30;
	@%p54 bra 	BB2_157;
	bra.uni 	BB2_152;

BB2_157:
	// inline asm
	prmt.b32 %r3003, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r3001, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r2987, %r2947;
	mov.u32 	%r2985, %r2947;
	mov.u32 	%r2983, %r2947;
	mov.u32 	%r2981, %r2947;
	mov.u32 	%r2995, %r2947;
	mov.u32 	%r2993, %r2947;
	mov.u32 	%r2991, %r2947;
	mov.u32 	%r2989, %r2947;
	bra.uni 	BB2_155;

BB2_64:
	setp.eq.s32	%p7, %r68, 30;
	@%p7 bra 	BB2_68;
	bra.uni 	BB2_65;

BB2_68:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20400, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20401, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20402, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20395, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20396, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20397, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20398, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20391, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2987, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r2995, %r20339;
	mov.u32 	%r2993, %r20339;
	mov.u32 	%r2991, %r20339;
	mov.u32 	%r2989, %r20339;
	mov.u32 	%r2999, %r20339;
	mov.u32 	%r2997, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20399, %r20339;
	bra.uni 	BB2_90;

BB2_96:
	setp.eq.s32	%p96, %r68, 1;
	@%p96 bra 	BB2_204;
	bra.uni 	BB2_97;

BB2_204:
	// inline asm
	prmt.b32 %r3003, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2947, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2945, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r20434, 0;
	// inline asm
	prmt.b32 %r2943, %r2941, %r20434, %r69;
	// inline asm
	bra.uni 	BB2_206;

BB2_8:
	setp.eq.s32	%p49, %r68, 1;
	@%p49 bra 	BB2_9;
	bra.uni 	BB2_66;

BB2_9:
	mov.u32 	%r20370, 0;
	// inline asm
	prmt.b32 %r20373, %r20370, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20339, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20340, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20341, %r2941, %r20370, %r69;
	// inline asm
	mov.u32 	%r20371, %r20370;
	mov.u32 	%r20372, %r20370;
	mov.u32 	%r20375, %r20370;
	mov.u32 	%r20376, %r20370;
	mov.u32 	%r20377, %r20370;
	mov.u32 	%r20378, %r20370;
	mov.u32 	%r20379, %r20370;
	mov.u32 	%r20380, %r20370;
	mov.u32 	%r20381, %r20370;
	mov.u32 	%r20382, %r20370;
	mov.u32 	%r20383, %r20370;
	mov.u32 	%r20384, %r20370;
	mov.u32 	%r20385, %r20370;
	mov.u32 	%r20386, %r20370;
	mov.u32 	%r20387, %r20370;
	mov.u32 	%r20388, %r20370;
	mov.u32 	%r20389, %r20370;
	mov.u32 	%r20390, %r20370;
	mov.u32 	%r20391, %r20370;
	mov.u32 	%r20392, %r20370;
	mov.u32 	%r20393, %r20370;
	mov.u32 	%r20394, %r20370;
	mov.u32 	%r20395, %r20370;
	mov.u32 	%r20396, %r20370;
	mov.u32 	%r20397, %r20370;
	mov.u32 	%r20398, %r20370;
	mov.u32 	%r20399, %r20370;
	mov.u32 	%r20400, %r20370;
	mov.u32 	%r20401, %r20370;
	mov.u32 	%r20402, %r20370;
	bra.uni 	BB2_90;

BB2_127:
	setp.eq.s32	%p73, %r68, 17;
	@%p73 bra 	BB2_179;
	bra.uni 	BB2_128;

BB2_179:
	// inline asm
	prmt.b32 %r3003, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2975, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	bra.uni 	BB2_176;

BB2_40:
	setp.eq.s32	%p26, %r68, 17;
	@%p26 bra 	BB2_41;
	bra.uni 	BB2_66;

BB2_41:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20389, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20387, %r20339;
	mov.u32 	%r20388, %r20339;
	bra.uni 	BB2_82;

BB2_111:
	setp.eq.s32	%p85, %r68, 9;
	@%p85 bra 	BB2_193;
	bra.uni 	BB2_112;

BB2_193:
	// inline asm
	prmt.b32 %r3003, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2959, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	bra.uni 	BB2_190;

BB2_24:
	setp.eq.s32	%p38, %r68, 9;
	@%p38 bra 	BB2_25;
	bra.uni 	BB2_66;

BB2_25:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20381, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20379, %r20339;
	mov.u32 	%r20380, %r20339;
	bra.uni 	BB2_80;

BB2_142:
	setp.eq.s32	%p62, %r68, 25;
	@%p62 bra 	BB2_165;
	bra.uni 	BB2_143;

BB2_165:
	// inline asm
	prmt.b32 %r3003, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2991, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r2987, %r2947;
	mov.u32 	%r2985, %r2947;
	mov.u32 	%r2983, %r2947;
	mov.u32 	%r2981, %r2947;
	bra.uni 	BB2_162;

BB2_55:
	setp.eq.s32	%p15, %r68, 25;
	@%p15 bra 	BB2_56;
	bra.uni 	BB2_66;

BB2_56:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20397, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20398, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20391, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2987, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r2989, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20395, %r20339;
	mov.u32 	%r20396, %r20339;
	bra.uni 	BB2_84;

BB2_103:
	setp.eq.s32	%p91, %r68, 5;
	@%p91 bra 	BB2_200;
	bra.uni 	BB2_104;

BB2_200:
	// inline asm
	prmt.b32 %r3003, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2951, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	bra.uni 	BB2_197;

BB2_15:
	setp.eq.s32	%p44, %r68, 5;
	@%p44 bra 	BB2_16;
	bra.uni 	BB2_66;

BB2_16:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20377, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20375, %r20339;
	mov.u32 	%r20376, %r20339;
	bra.uni 	BB2_20;

BB2_134:
	setp.eq.s32	%p68, %r68, 21;
	@%p68 bra 	BB2_172;
	bra.uni 	BB2_135;

BB2_172:
	// inline asm
	prmt.b32 %r3003, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2983, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	bra.uni 	BB2_169;

BB2_47:
	setp.eq.s32	%p21, %r68, 21;
	@%p21 bra 	BB2_48;
	bra.uni 	BB2_66;

BB2_48:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20393, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20391, %r20339;
	mov.u32 	%r20392, %r20339;
	bra.uni 	BB2_83;

BB2_118:
	setp.eq.s32	%p80, %r68, 13;
	@%p80 bra 	BB2_186;
	bra.uni 	BB2_119;

BB2_186:
	// inline asm
	prmt.b32 %r3003, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2967, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	bra.uni 	BB2_183;

BB2_31:
	setp.eq.s32	%p33, %r68, 13;
	@%p33 bra 	BB2_32;
	bra.uni 	BB2_66;

BB2_32:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20385, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20383, %r20339;
	mov.u32 	%r20384, %r20339;
	bra.uni 	BB2_81;

BB2_149:
	setp.eq.s32	%p57, %r68, 29;
	@%p57 bra 	BB2_158;
	bra.uni 	BB2_150;

BB2_158:
	// inline asm
	prmt.b32 %r3003, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2999, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r2987, %r2947;
	mov.u32 	%r2985, %r2947;
	mov.u32 	%r2983, %r2947;
	mov.u32 	%r2981, %r2947;
	mov.u32 	%r2995, %r2947;
	mov.u32 	%r2993, %r2947;
	mov.u32 	%r2991, %r2947;
	mov.u32 	%r2989, %r2947;
	bra.uni 	BB2_156;

BB2_62:
	setp.eq.s32	%p10, %r68, 29;
	@%p10 bra 	BB2_63;
	bra.uni 	BB2_66;

BB2_63:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20401, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20402, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20395, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20396, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20397, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20398, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20391, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2987, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r2995, %r20339;
	mov.u32 	%r2993, %r20339;
	mov.u32 	%r2991, %r20339;
	mov.u32 	%r2989, %r20339;
	mov.u32 	%r2997, %r20339;
	mov.u32 	%r20370, %r20339;
	mov.u32 	%r20399, %r20339;
	mov.u32 	%r20400, %r20339;
	bra.uni 	BB2_90;

BB2_99:
	setp.eq.s32	%p94, %r68, 3;
	@%p94 bra 	BB2_202;
	bra.uni 	BB2_100;

BB2_202:
	// inline asm
	prmt.b32 %r3003, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2945, 0;
	// inline asm
	prmt.b32 %r2947, %r2941, %r2945, %r69;
	// inline asm
	mov.u32 	%r2943, %r2945;
	mov.u32 	%r20434, %r2945;
	bra.uni 	BB2_206;

BB2_11:
	setp.eq.s32	%p47, %r68, 3;
	@%p47 bra 	BB2_12;
	bra.uni 	BB2_66;

BB2_12:
	mov.u32 	%r20340, 0;
	// inline asm
	prmt.b32 %r20371, %r20340, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2953, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2951, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2949, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20339, %r2941, %r20340, %r69;
	// inline asm
	mov.u32 	%r20341, %r20340;
	mov.u32 	%r20370, %r20340;
	mov.u32 	%r20375, %r20340;
	mov.u32 	%r20376, %r20340;
	mov.u32 	%r20377, %r20340;
	mov.u32 	%r20378, %r20340;
	mov.u32 	%r20379, %r20340;
	mov.u32 	%r20380, %r20340;
	mov.u32 	%r20381, %r20340;
	mov.u32 	%r20382, %r20340;
	mov.u32 	%r20383, %r20340;
	mov.u32 	%r20384, %r20340;
	mov.u32 	%r20385, %r20340;
	mov.u32 	%r20386, %r20340;
	mov.u32 	%r20387, %r20340;
	mov.u32 	%r20388, %r20340;
	mov.u32 	%r20389, %r20340;
	mov.u32 	%r20390, %r20340;
	mov.u32 	%r20391, %r20340;
	mov.u32 	%r20392, %r20340;
	mov.u32 	%r20393, %r20340;
	mov.u32 	%r20394, %r20340;
	mov.u32 	%r20395, %r20340;
	mov.u32 	%r20396, %r20340;
	mov.u32 	%r20397, %r20340;
	mov.u32 	%r20398, %r20340;
	mov.u32 	%r20399, %r20340;
	mov.u32 	%r20400, %r20340;
	mov.u32 	%r20401, %r20340;
	mov.u32 	%r20402, %r20340;
	bra.uni 	BB2_90;

BB2_130:
	setp.eq.s32	%p71, %r68, 19;
	@%p71 bra 	BB2_177;
	bra.uni 	BB2_131;

BB2_177:
	// inline asm
	prmt.b32 %r3003, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2979, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;

BB2_174:
	mov.u32 	%r2977, %r2947;

BB2_175:
	mov.u32 	%r2975, %r2947;

BB2_176:
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r20434, %r2947;
	bra.uni 	BB2_206;

BB2_43:
	setp.eq.s32	%p24, %r68, 19;
	@%p24 bra 	BB2_44;
	bra.uni 	BB2_66;

BB2_44:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20387, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r20370, %r20339;
	bra.uni 	BB2_82;

BB2_114:
	setp.eq.s32	%p83, %r68, 11;
	@%p83 bra 	BB2_191;
	bra.uni 	BB2_115;

BB2_191:
	// inline asm
	prmt.b32 %r3003, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2963, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;

BB2_188:
	mov.u32 	%r2961, %r2947;

BB2_189:
	mov.u32 	%r2959, %r2947;

BB2_190:
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r20434, %r2947;
	bra.uni 	BB2_206;

BB2_27:
	setp.eq.s32	%p36, %r68, 11;
	@%p36 bra 	BB2_28;
	bra.uni 	BB2_66;

BB2_28:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20379, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r20370, %r20339;
	bra.uni 	BB2_80;

BB2_145:
	setp.eq.s32	%p60, %r68, 27;
	@%p60 bra 	BB2_163;
	bra.uni 	BB2_146;

BB2_163:
	// inline asm
	prmt.b32 %r3003, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2995, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r2987, %r2947;
	mov.u32 	%r2985, %r2947;
	mov.u32 	%r2983, %r2947;
	mov.u32 	%r2981, %r2947;

BB2_160:
	mov.u32 	%r2993, %r2947;

BB2_161:
	mov.u32 	%r2991, %r2947;

BB2_162:
	mov.u32 	%r2989, %r2947;
	mov.u32 	%r20434, %r2947;
	bra.uni 	BB2_206;

BB2_58:
	setp.eq.s32	%p13, %r68, 27;
	@%p13 bra 	BB2_59;
	bra.uni 	BB2_66;

BB2_59:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20395, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20396, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20397, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20398, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20391, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2987, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r2993, %r20339;
	mov.u32 	%r2991, %r20339;
	mov.u32 	%r2989, %r20339;
	mov.u32 	%r20370, %r20339;
	bra.uni 	BB2_84;

BB2_106:
	setp.eq.s32	%p89, %r68, 7;
	@%p89 bra 	BB2_198;
	bra.uni 	BB2_107;

BB2_198:
	// inline asm
	prmt.b32 %r3003, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2955, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;

BB2_195:
	mov.u32 	%r2953, %r2947;

BB2_196:
	mov.u32 	%r2951, %r2947;

BB2_197:
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r20434, %r2947;
	bra.uni 	BB2_206;

BB2_18:
	setp.eq.s32	%p42, %r68, 7;
	@%p42 bra 	BB2_19;
	bra.uni 	BB2_66;

BB2_19:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20375, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2969, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2967, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2965, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2963, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2961, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2959, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2957, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2955, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r20370, %r20339;

BB2_20:
	mov.u32 	%r20379, %r20339;
	mov.u32 	%r20380, %r20339;
	mov.u32 	%r20381, %r20339;
	mov.u32 	%r20382, %r20339;

BB2_80:
	mov.u32 	%r20383, %r20339;
	mov.u32 	%r20384, %r20339;
	mov.u32 	%r20385, %r20339;
	mov.u32 	%r20386, %r20339;

BB2_81:
	mov.u32 	%r20387, %r20339;
	mov.u32 	%r20388, %r20339;
	mov.u32 	%r20389, %r20339;
	mov.u32 	%r20390, %r20339;

BB2_82:
	mov.u32 	%r20391, %r20339;
	mov.u32 	%r20392, %r20339;
	mov.u32 	%r20393, %r20339;
	mov.u32 	%r20394, %r20339;

BB2_83:
	mov.u32 	%r20395, %r20339;
	mov.u32 	%r20396, %r20339;
	mov.u32 	%r20397, %r20339;
	mov.u32 	%r20398, %r20339;

BB2_84:
	mov.u32 	%r20399, %r20339;
	mov.u32 	%r20400, %r20339;
	mov.u32 	%r20401, %r20339;
	mov.u32 	%r20402, %r20339;
	bra.uni 	BB2_90;

BB2_137:
	setp.eq.s32	%p66, %r68, 23;
	@%p66 bra 	BB2_170;
	bra.uni 	BB2_138;

BB2_170:
	// inline asm
	prmt.b32 %r3003, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2987, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;

BB2_167:
	mov.u32 	%r2985, %r2947;

BB2_168:
	mov.u32 	%r2983, %r2947;

BB2_169:
	mov.u32 	%r2981, %r2947;
	mov.u32 	%r20434, %r2947;
	bra.uni 	BB2_206;

BB2_50:
	setp.eq.s32	%p19, %r68, 23;
	@%p19 bra 	BB2_51;
	bra.uni 	BB2_66;

BB2_51:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20391, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r20370, %r20339;
	bra.uni 	BB2_83;

BB2_121:
	setp.eq.s32	%p78, %r68, 15;
	@%p78 bra 	BB2_184;
	bra.uni 	BB2_122;

BB2_184:
	// inline asm
	prmt.b32 %r3003, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2943, %r2941, %r69;
	// inline asm
	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r2971, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;

BB2_181:
	mov.u32 	%r2969, %r2947;

BB2_182:
	mov.u32 	%r2967, %r2947;

BB2_183:
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r20434, %r2947;
	bra.uni 	BB2_206;

BB2_34:
	setp.eq.s32	%p31, %r68, 15;
	@%p31 bra 	BB2_35;
	bra.uni 	BB2_66;

BB2_35:
	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20383, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3001, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2999, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2997, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2995, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2993, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2991, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2989, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2987, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2985, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2983, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2981, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2979, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2977, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2975, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2973, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r2971, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r20370, %r20339;
	bra.uni 	BB2_81;

BB2_152:
	setp.ne.s32	%p55, %r68, 31;
	@%p55 bra 	BB2_153;

	mov.u32 	%r2947, 0;
	// inline asm
	prmt.b32 %r3003, %r2941, %r2947, %r69;
	// inline asm
	mov.u32 	%r2945, %r2947;
	mov.u32 	%r2943, %r2947;
	mov.u32 	%r2955, %r2947;
	mov.u32 	%r2953, %r2947;
	mov.u32 	%r2951, %r2947;
	mov.u32 	%r2949, %r2947;
	mov.u32 	%r2963, %r2947;
	mov.u32 	%r2961, %r2947;
	mov.u32 	%r2959, %r2947;
	mov.u32 	%r2957, %r2947;
	mov.u32 	%r2971, %r2947;
	mov.u32 	%r2969, %r2947;
	mov.u32 	%r2967, %r2947;
	mov.u32 	%r2965, %r2947;
	mov.u32 	%r2979, %r2947;
	mov.u32 	%r2977, %r2947;
	mov.u32 	%r2975, %r2947;
	mov.u32 	%r2973, %r2947;
	mov.u32 	%r2987, %r2947;
	mov.u32 	%r2985, %r2947;
	mov.u32 	%r2983, %r2947;
	mov.u32 	%r2981, %r2947;
	mov.u32 	%r2995, %r2947;
	mov.u32 	%r2993, %r2947;
	mov.u32 	%r2991, %r2947;
	mov.u32 	%r2989, %r2947;
	mov.u32 	%r3001, %r2947;

BB2_155:
	mov.u32 	%r2999, %r2947;

BB2_156:
	mov.u32 	%r2997, %r2947;
	mov.u32 	%r20434, %r2947;
	bra.uni 	BB2_206;

BB2_65:
	setp.ne.s32	%p8, %r68, 31;
	@%p8 bra 	BB2_66;

	mov.u32 	%r20339, 0;
	// inline asm
	prmt.b32 %r20399, %r20339, %r3003, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20400, %r3003, %r3001, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20401, %r3001, %r2999, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20402, %r2999, %r2997, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20395, %r2997, %r2995, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20396, %r2995, %r2993, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20397, %r2993, %r2991, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20398, %r2991, %r2989, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20391, %r2989, %r2987, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20392, %r2987, %r2985, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20393, %r2985, %r2983, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20394, %r2983, %r2981, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20387, %r2981, %r2979, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20388, %r2979, %r2977, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20389, %r2977, %r2975, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20390, %r2975, %r2973, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20383, %r2973, %r2971, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20384, %r2971, %r2969, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20385, %r2969, %r2967, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20386, %r2967, %r2965, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20379, %r2965, %r2963, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20380, %r2963, %r2961, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20381, %r2961, %r2959, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20382, %r2959, %r2957, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20375, %r2957, %r2955, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20376, %r2955, %r2953, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20377, %r2953, %r2951, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20378, %r2951, %r2949, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20371, %r2949, %r2947, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20372, %r2947, %r2945, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20373, %r2945, %r2943, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r20374, %r2943, %r2941, %r69;
	// inline asm
	// inline asm
	prmt.b32 %r3003, %r2941, %r20339, %r69;
	// inline asm
	mov.u32 	%r20340, %r20339;
	mov.u32 	%r20341, %r20339;
	mov.u32 	%r2955, %r20339;
	mov.u32 	%r2953, %r20339;
	mov.u32 	%r2951, %r20339;
	mov.u32 	%r2949, %r20339;
	mov.u32 	%r2963, %r20339;
	mov.u32 	%r2961, %r20339;
	mov.u32 	%r2959, %r20339;
	mov.u32 	%r2957, %r20339;
	mov.u32 	%r2971, %r20339;
	mov.u32 	%r2969, %r20339;
	mov.u32 	%r2967, %r20339;
	mov.u32 	%r2965, %r20339;
	mov.u32 	%r2979, %r20339;
	mov.u32 	%r2977, %r20339;
	mov.u32 	%r2975, %r20339;
	mov.u32 	%r2973, %r20339;
	mov.u32 	%r2987, %r20339;
	mov.u32 	%r2985, %r20339;
	mov.u32 	%r2983, %r20339;
	mov.u32 	%r2981, %r20339;
	mov.u32 	%r2995, %r20339;
	mov.u32 	%r2993, %r20339;
	mov.u32 	%r2991, %r20339;
	mov.u32 	%r2989, %r20339;
	mov.u32 	%r3001, %r20339;
	mov.u32 	%r2999, %r20339;
	mov.u32 	%r2997, %r20339;
	mov.u32 	%r20370, %r20339;
	bra.uni 	BB2_90;

BB2_66:
	mov.u32 	%r20339, %r2947;
	mov.u32 	%r20340, %r2945;
	mov.u32 	%r20341, %r2943;
	mov.u32 	%r20370, %r2941;
	mov.u32 	%r20372, %r20371;
	mov.u32 	%r20373, %r20371;
	mov.u32 	%r20374, %r20371;

BB2_89:
	mov.u32 	%r20375, %r20371;
	mov.u32 	%r20376, %r20371;
	mov.u32 	%r20377, %r20371;
	mov.u32 	%r20378, %r20371;
	mov.u32 	%r20379, %r20371;
	mov.u32 	%r20380, %r20371;
	mov.u32 	%r20381, %r20371;
	mov.u32 	%r20382, %r20371;
	mov.u32 	%r20383, %r20371;
	mov.u32 	%r20384, %r20371;
	mov.u32 	%r20385, %r20371;
	mov.u32 	%r20386, %r20371;
	mov.u32 	%r20387, %r20371;
	mov.u32 	%r20388, %r20371;
	mov.u32 	%r20389, %r20371;
	mov.u32 	%r20390, %r20371;
	mov.u32 	%r20391, %r20371;
	mov.u32 	%r20392, %r20371;
	mov.u32 	%r20393, %r20371;
	mov.u32 	%r20394, %r20371;
	mov.u32 	%r20395, %r20371;
	mov.u32 	%r20396, %r20371;
	mov.u32 	%r20397, %r20371;
	mov.u32 	%r20398, %r20371;
	mov.u32 	%r20399, %r20371;
	mov.u32 	%r20400, %r20371;
	mov.u32 	%r20401, %r20371;
	mov.u32 	%r20402, %r20371;

BB2_90:
	ld.local.v2.u32 	{%r8262, %r8263}, [%rd1+64];
	ld.local.v2.u32 	{%r8266, %r8267}, [%rd1+72];
	ld.local.v2.u32 	{%r8270, %r8271}, [%rd1+80];
	ld.local.v2.u32 	{%r8274, %r8275}, [%rd1+88];
	ld.local.v2.u32 	{%r8278, %r8279}, [%rd1+96];
	ld.local.v2.u32 	{%r8282, %r8283}, [%rd1+104];
	ld.local.v2.u32 	{%r8286, %r8287}, [%rd1+112];
	ld.local.v2.u32 	{%r8290, %r8291}, [%rd1+120];
	ld.local.v2.u32 	{%r8294, %r8295}, [%rd1+128];
	ld.local.v2.u32 	{%r8298, %r8299}, [%rd1+136];
	ld.local.v2.u32 	{%r8302, %r8303}, [%rd1+144];
	ld.local.v2.u32 	{%r8306, %r8307}, [%rd1+152];
	ld.local.v2.u32 	{%r8310, %r8311}, [%rd1+160];
	ld.local.v2.u32 	{%r8314, %r8315}, [%rd1+168];
	ld.local.v2.u32 	{%r8318, %r8319}, [%rd1+176];
	ld.local.v2.u32 	{%r8322, %r8323}, [%rd1+184];
	or.b32  	%r8326, %r8262, %r20370;
	or.b32  	%r8327, %r8263, %r20341;
	mov.b64	%rd148, {%r8327, %r8326};
	or.b32  	%r8328, %r8266, %r20340;
	or.b32  	%r8329, %r8267, %r20339;
	mov.b64	%rd149, {%r8329, %r8328};
	or.b32  	%r8330, %r8270, %r2949;
	or.b32  	%r8331, %r8271, %r2951;
	mov.b64	%rd150, {%r8331, %r8330};
	or.b32  	%r8332, %r8274, %r2953;
	or.b32  	%r8333, %r8275, %r2955;
	mov.b64	%rd151, {%r8333, %r8332};
	or.b32  	%r8334, %r8278, %r2957;
	or.b32  	%r8335, %r8279, %r2959;
	mov.b64	%rd152, {%r8335, %r8334};
	or.b32  	%r8336, %r8282, %r2961;
	or.b32  	%r8337, %r8283, %r2963;
	mov.b64	%rd153, {%r8337, %r8336};
	or.b32  	%r8338, %r8286, %r2965;
	or.b32  	%r8339, %r8287, %r2967;
	mov.b64	%rd154, {%r8339, %r8338};
	or.b32  	%r8340, %r8290, %r2969;
	or.b32  	%r8341, %r8291, %r2971;
	mov.b64	%rd155, {%r8341, %r8340};
	or.b32  	%r8342, %r8294, %r2973;
	or.b32  	%r8343, %r8295, %r2975;
	mov.b64	%rd156, {%r8343, %r8342};
	or.b32  	%r8344, %r8298, %r2977;
	or.b32  	%r8345, %r8299, %r2979;
	mov.b64	%rd157, {%r8345, %r8344};
	or.b32  	%r8346, %r8302, %r2981;
	or.b32  	%r8347, %r8303, %r2983;
	mov.b64	%rd158, {%r8347, %r8346};
	or.b32  	%r8348, %r8306, %r2985;
	or.b32  	%r8349, %r8307, %r2987;
	mov.b64	%rd159, {%r8349, %r8348};
	or.b32  	%r8350, %r8310, %r2989;
	or.b32  	%r8351, %r8311, %r2991;
	mov.b64	%rd160, {%r8351, %r8350};
	or.b32  	%r8352, %r8314, %r2993;
	or.b32  	%r8353, %r8315, %r2995;
	mov.b64	%rd161, {%r8353, %r8352};
	or.b32  	%r8354, %r8318, %r2997;
	or.b32  	%r8355, %r8319, %r2999;
	mov.b64	%rd162, {%r8355, %r8354};
	or.b32  	%r8356, %r8322, %r3001;
	or.b32  	%r8357, %r8323, %r3003;
	mov.b64	%rd163, {%r8357, %r8356};
	ld.local.u64 	%rd164, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8358,%dummy}, %rd164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8359}, %rd164;
	}
	shf.r.wrap.b32 	%r8360, %r8359, %r8358, 14;
	shf.r.wrap.b32 	%r8361, %r8358, %r8359, 14;
	mov.b64 	%rd165, {%r8361, %r8360};
	shf.r.wrap.b32 	%r8362, %r8359, %r8358, 18;
	shf.r.wrap.b32 	%r8363, %r8358, %r8359, 18;
	mov.b64 	%rd166, {%r8363, %r8362};
	xor.b64  	%rd167, %rd166, %rd165;
	shf.l.wrap.b32 	%r8364, %r8358, %r8359, 23;
	shf.l.wrap.b32 	%r8365, %r8359, %r8358, 23;
	mov.b64 	%rd168, {%r8365, %r8364};
	xor.b64  	%rd169, %rd167, %rd168;
	ld.local.u64 	%rd170, [%rd1+48];
	ld.local.u64 	%rd171, [%rd1+40];
	xor.b64  	%rd172, %rd170, %rd171;
	and.b64  	%rd173, %rd172, %rd164;
	xor.b64  	%rd174, %rd173, %rd170;
	ld.local.u64 	%rd175, [%rd1+56];
	add.s64 	%rd176, %rd175, %rd148;
	add.s64 	%rd177, %rd176, %rd2;
	add.s64 	%rd178, %rd177, %rd174;
	add.s64 	%rd179, %rd178, %rd169;
	ld.local.u64 	%rd180, [%rd1+24];
	add.s64 	%rd181, %rd179, %rd180;
	ld.local.u64 	%rd182, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8366,%dummy}, %rd182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8367}, %rd182;
	}
	shf.r.wrap.b32 	%r8368, %r8367, %r8366, 28;
	shf.r.wrap.b32 	%r8369, %r8366, %r8367, 28;
	mov.b64 	%rd183, {%r8369, %r8368};
	shf.l.wrap.b32 	%r8370, %r8366, %r8367, 30;
	shf.l.wrap.b32 	%r8371, %r8367, %r8366, 30;
	mov.b64 	%rd184, {%r8371, %r8370};
	xor.b64  	%rd185, %rd184, %rd183;
	shf.l.wrap.b32 	%r8372, %r8366, %r8367, 25;
	shf.l.wrap.b32 	%r8373, %r8367, %r8366, 25;
	mov.b64 	%rd186, {%r8373, %r8372};
	xor.b64  	%rd187, %rd185, %rd186;
	ld.local.u64 	%rd188, [%rd1+16];
	xor.b64  	%rd189, %rd188, %rd182;
	ld.local.u64 	%rd190, [%rd1+8];
	xor.b64  	%rd191, %rd190, %rd182;
	and.b64  	%rd192, %rd189, %rd191;
	xor.b64  	%rd193, %rd192, %rd182;
	add.s64 	%rd194, %rd179, %rd193;
	add.s64 	%rd195, %rd194, %rd187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8374,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8375}, %rd181;
	}
	shf.r.wrap.b32 	%r8376, %r8375, %r8374, 14;
	shf.r.wrap.b32 	%r8377, %r8374, %r8375, 14;
	mov.b64 	%rd196, {%r8377, %r8376};
	shf.r.wrap.b32 	%r8378, %r8375, %r8374, 18;
	shf.r.wrap.b32 	%r8379, %r8374, %r8375, 18;
	mov.b64 	%rd197, {%r8379, %r8378};
	xor.b64  	%rd198, %rd197, %rd196;
	shf.l.wrap.b32 	%r8380, %r8374, %r8375, 23;
	shf.l.wrap.b32 	%r8381, %r8375, %r8374, 23;
	mov.b64 	%rd199, {%r8381, %r8380};
	xor.b64  	%rd200, %rd198, %rd199;
	xor.b64  	%rd201, %rd171, %rd164;
	and.b64  	%rd202, %rd181, %rd201;
	xor.b64  	%rd203, %rd202, %rd171;
	add.s64 	%rd204, %rd170, %rd149;
	add.s64 	%rd205, %rd204, %rd3;
	add.s64 	%rd206, %rd205, %rd203;
	add.s64 	%rd207, %rd206, %rd200;
	add.s64 	%rd208, %rd207, %rd188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8382,%dummy}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8383}, %rd195;
	}
	shf.r.wrap.b32 	%r8384, %r8383, %r8382, 28;
	shf.r.wrap.b32 	%r8385, %r8382, %r8383, 28;
	mov.b64 	%rd209, {%r8385, %r8384};
	shf.l.wrap.b32 	%r8386, %r8382, %r8383, 30;
	shf.l.wrap.b32 	%r8387, %r8383, %r8382, 30;
	mov.b64 	%rd210, {%r8387, %r8386};
	xor.b64  	%rd211, %rd210, %rd209;
	shf.l.wrap.b32 	%r8388, %r8382, %r8383, 25;
	shf.l.wrap.b32 	%r8389, %r8383, %r8382, 25;
	mov.b64 	%rd212, {%r8389, %r8388};
	xor.b64  	%rd213, %rd211, %rd212;
	xor.b64  	%rd214, %rd195, %rd190;
	xor.b64  	%rd215, %rd195, %rd182;
	and.b64  	%rd216, %rd215, %rd214;
	xor.b64  	%rd217, %rd216, %rd195;
	add.s64 	%rd218, %rd207, %rd217;
	add.s64 	%rd219, %rd218, %rd213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8390,%dummy}, %rd208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8391}, %rd208;
	}
	shf.r.wrap.b32 	%r8392, %r8391, %r8390, 14;
	shf.r.wrap.b32 	%r8393, %r8390, %r8391, 14;
	mov.b64 	%rd220, {%r8393, %r8392};
	shf.r.wrap.b32 	%r8394, %r8391, %r8390, 18;
	shf.r.wrap.b32 	%r8395, %r8390, %r8391, 18;
	mov.b64 	%rd221, {%r8395, %r8394};
	xor.b64  	%rd222, %rd221, %rd220;
	shf.l.wrap.b32 	%r8396, %r8390, %r8391, 23;
	shf.l.wrap.b32 	%r8397, %r8391, %r8390, 23;
	mov.b64 	%rd223, {%r8397, %r8396};
	xor.b64  	%rd224, %rd222, %rd223;
	xor.b64  	%rd225, %rd181, %rd164;
	and.b64  	%rd226, %rd208, %rd225;
	xor.b64  	%rd227, %rd226, %rd164;
	add.s64 	%rd228, %rd171, %rd150;
	add.s64 	%rd229, %rd228, %rd4;
	add.s64 	%rd230, %rd229, %rd227;
	add.s64 	%rd231, %rd230, %rd224;
	add.s64 	%rd232, %rd231, %rd190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8398,%dummy}, %rd219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8399}, %rd219;
	}
	shf.r.wrap.b32 	%r8400, %r8399, %r8398, 28;
	shf.r.wrap.b32 	%r8401, %r8398, %r8399, 28;
	mov.b64 	%rd233, {%r8401, %r8400};
	shf.l.wrap.b32 	%r8402, %r8398, %r8399, 30;
	shf.l.wrap.b32 	%r8403, %r8399, %r8398, 30;
	mov.b64 	%rd234, {%r8403, %r8402};
	xor.b64  	%rd235, %rd234, %rd233;
	shf.l.wrap.b32 	%r8404, %r8398, %r8399, 25;
	shf.l.wrap.b32 	%r8405, %r8399, %r8398, 25;
	mov.b64 	%rd236, {%r8405, %r8404};
	xor.b64  	%rd237, %rd235, %rd236;
	xor.b64  	%rd238, %rd219, %rd182;
	xor.b64  	%rd239, %rd219, %rd195;
	and.b64  	%rd240, %rd239, %rd238;
	xor.b64  	%rd241, %rd240, %rd219;
	add.s64 	%rd242, %rd231, %rd241;
	add.s64 	%rd243, %rd242, %rd237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8406,%dummy}, %rd232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8407}, %rd232;
	}
	shf.r.wrap.b32 	%r8408, %r8407, %r8406, 14;
	shf.r.wrap.b32 	%r8409, %r8406, %r8407, 14;
	mov.b64 	%rd244, {%r8409, %r8408};
	shf.r.wrap.b32 	%r8410, %r8407, %r8406, 18;
	shf.r.wrap.b32 	%r8411, %r8406, %r8407, 18;
	mov.b64 	%rd245, {%r8411, %r8410};
	xor.b64  	%rd246, %rd245, %rd244;
	shf.l.wrap.b32 	%r8412, %r8406, %r8407, 23;
	shf.l.wrap.b32 	%r8413, %r8407, %r8406, 23;
	mov.b64 	%rd247, {%r8413, %r8412};
	xor.b64  	%rd248, %rd246, %rd247;
	xor.b64  	%rd249, %rd208, %rd181;
	and.b64  	%rd250, %rd232, %rd249;
	xor.b64  	%rd251, %rd250, %rd181;
	add.s64 	%rd252, %rd164, %rd151;
	add.s64 	%rd253, %rd252, %rd5;
	add.s64 	%rd254, %rd253, %rd251;
	add.s64 	%rd255, %rd254, %rd248;
	add.s64 	%rd256, %rd255, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8414,%dummy}, %rd243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8415}, %rd243;
	}
	shf.r.wrap.b32 	%r8416, %r8415, %r8414, 28;
	shf.r.wrap.b32 	%r8417, %r8414, %r8415, 28;
	mov.b64 	%rd257, {%r8417, %r8416};
	shf.l.wrap.b32 	%r8418, %r8414, %r8415, 30;
	shf.l.wrap.b32 	%r8419, %r8415, %r8414, 30;
	mov.b64 	%rd258, {%r8419, %r8418};
	xor.b64  	%rd259, %rd258, %rd257;
	shf.l.wrap.b32 	%r8420, %r8414, %r8415, 25;
	shf.l.wrap.b32 	%r8421, %r8415, %r8414, 25;
	mov.b64 	%rd260, {%r8421, %r8420};
	xor.b64  	%rd261, %rd259, %rd260;
	xor.b64  	%rd262, %rd243, %rd195;
	xor.b64  	%rd263, %rd243, %rd219;
	and.b64  	%rd264, %rd263, %rd262;
	xor.b64  	%rd265, %rd264, %rd243;
	add.s64 	%rd266, %rd255, %rd265;
	add.s64 	%rd267, %rd266, %rd261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8422,%dummy}, %rd256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8423}, %rd256;
	}
	shf.r.wrap.b32 	%r8424, %r8423, %r8422, 14;
	shf.r.wrap.b32 	%r8425, %r8422, %r8423, 14;
	mov.b64 	%rd268, {%r8425, %r8424};
	shf.r.wrap.b32 	%r8426, %r8423, %r8422, 18;
	shf.r.wrap.b32 	%r8427, %r8422, %r8423, 18;
	mov.b64 	%rd269, {%r8427, %r8426};
	xor.b64  	%rd270, %rd269, %rd268;
	shf.l.wrap.b32 	%r8428, %r8422, %r8423, 23;
	shf.l.wrap.b32 	%r8429, %r8423, %r8422, 23;
	mov.b64 	%rd271, {%r8429, %r8428};
	xor.b64  	%rd272, %rd270, %rd271;
	xor.b64  	%rd273, %rd232, %rd208;
	and.b64  	%rd274, %rd256, %rd273;
	xor.b64  	%rd275, %rd274, %rd208;
	add.s64 	%rd276, %rd181, %rd152;
	add.s64 	%rd277, %rd276, %rd6;
	add.s64 	%rd278, %rd277, %rd275;
	add.s64 	%rd279, %rd278, %rd272;
	add.s64 	%rd280, %rd279, %rd195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8430,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8431}, %rd267;
	}
	shf.r.wrap.b32 	%r8432, %r8431, %r8430, 28;
	shf.r.wrap.b32 	%r8433, %r8430, %r8431, 28;
	mov.b64 	%rd281, {%r8433, %r8432};
	shf.l.wrap.b32 	%r8434, %r8430, %r8431, 30;
	shf.l.wrap.b32 	%r8435, %r8431, %r8430, 30;
	mov.b64 	%rd282, {%r8435, %r8434};
	xor.b64  	%rd283, %rd282, %rd281;
	shf.l.wrap.b32 	%r8436, %r8430, %r8431, 25;
	shf.l.wrap.b32 	%r8437, %r8431, %r8430, 25;
	mov.b64 	%rd284, {%r8437, %r8436};
	xor.b64  	%rd285, %rd283, %rd284;
	xor.b64  	%rd286, %rd267, %rd219;
	xor.b64  	%rd287, %rd267, %rd243;
	and.b64  	%rd288, %rd287, %rd286;
	xor.b64  	%rd289, %rd288, %rd267;
	add.s64 	%rd290, %rd279, %rd289;
	add.s64 	%rd291, %rd290, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8438,%dummy}, %rd280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8439}, %rd280;
	}
	shf.r.wrap.b32 	%r8440, %r8439, %r8438, 14;
	shf.r.wrap.b32 	%r8441, %r8438, %r8439, 14;
	mov.b64 	%rd292, {%r8441, %r8440};
	shf.r.wrap.b32 	%r8442, %r8439, %r8438, 18;
	shf.r.wrap.b32 	%r8443, %r8438, %r8439, 18;
	mov.b64 	%rd293, {%r8443, %r8442};
	xor.b64  	%rd294, %rd293, %rd292;
	shf.l.wrap.b32 	%r8444, %r8438, %r8439, 23;
	shf.l.wrap.b32 	%r8445, %r8439, %r8438, 23;
	mov.b64 	%rd295, {%r8445, %r8444};
	xor.b64  	%rd296, %rd294, %rd295;
	xor.b64  	%rd297, %rd256, %rd232;
	and.b64  	%rd298, %rd280, %rd297;
	xor.b64  	%rd299, %rd298, %rd232;
	add.s64 	%rd300, %rd208, %rd153;
	add.s64 	%rd301, %rd300, %rd7;
	add.s64 	%rd302, %rd301, %rd299;
	add.s64 	%rd303, %rd302, %rd296;
	add.s64 	%rd304, %rd303, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8446,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8447}, %rd291;
	}
	shf.r.wrap.b32 	%r8448, %r8447, %r8446, 28;
	shf.r.wrap.b32 	%r8449, %r8446, %r8447, 28;
	mov.b64 	%rd305, {%r8449, %r8448};
	shf.l.wrap.b32 	%r8450, %r8446, %r8447, 30;
	shf.l.wrap.b32 	%r8451, %r8447, %r8446, 30;
	mov.b64 	%rd306, {%r8451, %r8450};
	xor.b64  	%rd307, %rd306, %rd305;
	shf.l.wrap.b32 	%r8452, %r8446, %r8447, 25;
	shf.l.wrap.b32 	%r8453, %r8447, %r8446, 25;
	mov.b64 	%rd308, {%r8453, %r8452};
	xor.b64  	%rd309, %rd307, %rd308;
	xor.b64  	%rd310, %rd291, %rd243;
	xor.b64  	%rd311, %rd291, %rd267;
	and.b64  	%rd312, %rd311, %rd310;
	xor.b64  	%rd313, %rd312, %rd291;
	add.s64 	%rd314, %rd303, %rd313;
	add.s64 	%rd315, %rd314, %rd309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8454,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8455}, %rd304;
	}
	shf.r.wrap.b32 	%r8456, %r8455, %r8454, 14;
	shf.r.wrap.b32 	%r8457, %r8454, %r8455, 14;
	mov.b64 	%rd316, {%r8457, %r8456};
	shf.r.wrap.b32 	%r8458, %r8455, %r8454, 18;
	shf.r.wrap.b32 	%r8459, %r8454, %r8455, 18;
	mov.b64 	%rd317, {%r8459, %r8458};
	xor.b64  	%rd318, %rd317, %rd316;
	shf.l.wrap.b32 	%r8460, %r8454, %r8455, 23;
	shf.l.wrap.b32 	%r8461, %r8455, %r8454, 23;
	mov.b64 	%rd319, {%r8461, %r8460};
	xor.b64  	%rd320, %rd318, %rd319;
	xor.b64  	%rd321, %rd280, %rd256;
	and.b64  	%rd322, %rd304, %rd321;
	xor.b64  	%rd323, %rd322, %rd256;
	add.s64 	%rd324, %rd232, %rd154;
	add.s64 	%rd325, %rd324, %rd8;
	add.s64 	%rd326, %rd325, %rd323;
	add.s64 	%rd327, %rd326, %rd320;
	add.s64 	%rd328, %rd327, %rd243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8462,%dummy}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8463}, %rd315;
	}
	shf.r.wrap.b32 	%r8464, %r8463, %r8462, 28;
	shf.r.wrap.b32 	%r8465, %r8462, %r8463, 28;
	mov.b64 	%rd329, {%r8465, %r8464};
	shf.l.wrap.b32 	%r8466, %r8462, %r8463, 30;
	shf.l.wrap.b32 	%r8467, %r8463, %r8462, 30;
	mov.b64 	%rd330, {%r8467, %r8466};
	xor.b64  	%rd331, %rd330, %rd329;
	shf.l.wrap.b32 	%r8468, %r8462, %r8463, 25;
	shf.l.wrap.b32 	%r8469, %r8463, %r8462, 25;
	mov.b64 	%rd332, {%r8469, %r8468};
	xor.b64  	%rd333, %rd331, %rd332;
	xor.b64  	%rd334, %rd315, %rd267;
	xor.b64  	%rd335, %rd315, %rd291;
	and.b64  	%rd336, %rd335, %rd334;
	xor.b64  	%rd337, %rd336, %rd315;
	add.s64 	%rd338, %rd327, %rd337;
	add.s64 	%rd339, %rd338, %rd333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8470,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8471}, %rd328;
	}
	shf.r.wrap.b32 	%r8472, %r8471, %r8470, 14;
	shf.r.wrap.b32 	%r8473, %r8470, %r8471, 14;
	mov.b64 	%rd340, {%r8473, %r8472};
	shf.r.wrap.b32 	%r8474, %r8471, %r8470, 18;
	shf.r.wrap.b32 	%r8475, %r8470, %r8471, 18;
	mov.b64 	%rd341, {%r8475, %r8474};
	xor.b64  	%rd342, %rd341, %rd340;
	shf.l.wrap.b32 	%r8476, %r8470, %r8471, 23;
	shf.l.wrap.b32 	%r8477, %r8471, %r8470, 23;
	mov.b64 	%rd343, {%r8477, %r8476};
	xor.b64  	%rd344, %rd342, %rd343;
	xor.b64  	%rd345, %rd304, %rd280;
	and.b64  	%rd346, %rd328, %rd345;
	xor.b64  	%rd347, %rd346, %rd280;
	add.s64 	%rd348, %rd256, %rd155;
	add.s64 	%rd349, %rd348, %rd9;
	add.s64 	%rd350, %rd349, %rd347;
	add.s64 	%rd351, %rd350, %rd344;
	add.s64 	%rd352, %rd351, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8478,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8479}, %rd339;
	}
	shf.r.wrap.b32 	%r8480, %r8479, %r8478, 28;
	shf.r.wrap.b32 	%r8481, %r8478, %r8479, 28;
	mov.b64 	%rd353, {%r8481, %r8480};
	shf.l.wrap.b32 	%r8482, %r8478, %r8479, 30;
	shf.l.wrap.b32 	%r8483, %r8479, %r8478, 30;
	mov.b64 	%rd354, {%r8483, %r8482};
	xor.b64  	%rd355, %rd354, %rd353;
	shf.l.wrap.b32 	%r8484, %r8478, %r8479, 25;
	shf.l.wrap.b32 	%r8485, %r8479, %r8478, 25;
	mov.b64 	%rd356, {%r8485, %r8484};
	xor.b64  	%rd357, %rd355, %rd356;
	xor.b64  	%rd358, %rd339, %rd291;
	xor.b64  	%rd359, %rd339, %rd315;
	and.b64  	%rd360, %rd359, %rd358;
	xor.b64  	%rd361, %rd360, %rd339;
	add.s64 	%rd362, %rd351, %rd361;
	add.s64 	%rd363, %rd362, %rd357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8486,%dummy}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8487}, %rd352;
	}
	shf.r.wrap.b32 	%r8488, %r8487, %r8486, 14;
	shf.r.wrap.b32 	%r8489, %r8486, %r8487, 14;
	mov.b64 	%rd364, {%r8489, %r8488};
	shf.r.wrap.b32 	%r8490, %r8487, %r8486, 18;
	shf.r.wrap.b32 	%r8491, %r8486, %r8487, 18;
	mov.b64 	%rd365, {%r8491, %r8490};
	xor.b64  	%rd366, %rd365, %rd364;
	shf.l.wrap.b32 	%r8492, %r8486, %r8487, 23;
	shf.l.wrap.b32 	%r8493, %r8487, %r8486, 23;
	mov.b64 	%rd367, {%r8493, %r8492};
	xor.b64  	%rd368, %rd366, %rd367;
	xor.b64  	%rd369, %rd328, %rd304;
	and.b64  	%rd370, %rd352, %rd369;
	xor.b64  	%rd371, %rd370, %rd304;
	add.s64 	%rd372, %rd280, %rd156;
	add.s64 	%rd373, %rd372, %rd10;
	add.s64 	%rd374, %rd373, %rd371;
	add.s64 	%rd375, %rd374, %rd368;
	add.s64 	%rd376, %rd375, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8494,%dummy}, %rd363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8495}, %rd363;
	}
	shf.r.wrap.b32 	%r8496, %r8495, %r8494, 28;
	shf.r.wrap.b32 	%r8497, %r8494, %r8495, 28;
	mov.b64 	%rd377, {%r8497, %r8496};
	shf.l.wrap.b32 	%r8498, %r8494, %r8495, 30;
	shf.l.wrap.b32 	%r8499, %r8495, %r8494, 30;
	mov.b64 	%rd378, {%r8499, %r8498};
	xor.b64  	%rd379, %rd378, %rd377;
	shf.l.wrap.b32 	%r8500, %r8494, %r8495, 25;
	shf.l.wrap.b32 	%r8501, %r8495, %r8494, 25;
	mov.b64 	%rd380, {%r8501, %r8500};
	xor.b64  	%rd381, %rd379, %rd380;
	xor.b64  	%rd382, %rd363, %rd315;
	xor.b64  	%rd383, %rd363, %rd339;
	and.b64  	%rd384, %rd383, %rd382;
	xor.b64  	%rd385, %rd384, %rd363;
	add.s64 	%rd386, %rd375, %rd385;
	add.s64 	%rd387, %rd386, %rd381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8502,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8503}, %rd376;
	}
	shf.r.wrap.b32 	%r8504, %r8503, %r8502, 14;
	shf.r.wrap.b32 	%r8505, %r8502, %r8503, 14;
	mov.b64 	%rd388, {%r8505, %r8504};
	shf.r.wrap.b32 	%r8506, %r8503, %r8502, 18;
	shf.r.wrap.b32 	%r8507, %r8502, %r8503, 18;
	mov.b64 	%rd389, {%r8507, %r8506};
	xor.b64  	%rd390, %rd389, %rd388;
	shf.l.wrap.b32 	%r8508, %r8502, %r8503, 23;
	shf.l.wrap.b32 	%r8509, %r8503, %r8502, 23;
	mov.b64 	%rd391, {%r8509, %r8508};
	xor.b64  	%rd392, %rd390, %rd391;
	xor.b64  	%rd393, %rd352, %rd328;
	and.b64  	%rd394, %rd376, %rd393;
	xor.b64  	%rd395, %rd394, %rd328;
	add.s64 	%rd396, %rd304, %rd157;
	add.s64 	%rd397, %rd396, %rd11;
	add.s64 	%rd398, %rd397, %rd395;
	add.s64 	%rd399, %rd398, %rd392;
	add.s64 	%rd400, %rd399, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8510,%dummy}, %rd387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8511}, %rd387;
	}
	shf.r.wrap.b32 	%r8512, %r8511, %r8510, 28;
	shf.r.wrap.b32 	%r8513, %r8510, %r8511, 28;
	mov.b64 	%rd401, {%r8513, %r8512};
	shf.l.wrap.b32 	%r8514, %r8510, %r8511, 30;
	shf.l.wrap.b32 	%r8515, %r8511, %r8510, 30;
	mov.b64 	%rd402, {%r8515, %r8514};
	xor.b64  	%rd403, %rd402, %rd401;
	shf.l.wrap.b32 	%r8516, %r8510, %r8511, 25;
	shf.l.wrap.b32 	%r8517, %r8511, %r8510, 25;
	mov.b64 	%rd404, {%r8517, %r8516};
	xor.b64  	%rd405, %rd403, %rd404;
	xor.b64  	%rd406, %rd387, %rd339;
	xor.b64  	%rd407, %rd387, %rd363;
	and.b64  	%rd408, %rd407, %rd406;
	xor.b64  	%rd409, %rd408, %rd387;
	add.s64 	%rd410, %rd399, %rd409;
	add.s64 	%rd411, %rd410, %rd405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8518,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8519}, %rd400;
	}
	shf.r.wrap.b32 	%r8520, %r8519, %r8518, 14;
	shf.r.wrap.b32 	%r8521, %r8518, %r8519, 14;
	mov.b64 	%rd412, {%r8521, %r8520};
	shf.r.wrap.b32 	%r8522, %r8519, %r8518, 18;
	shf.r.wrap.b32 	%r8523, %r8518, %r8519, 18;
	mov.b64 	%rd413, {%r8523, %r8522};
	xor.b64  	%rd414, %rd413, %rd412;
	shf.l.wrap.b32 	%r8524, %r8518, %r8519, 23;
	shf.l.wrap.b32 	%r8525, %r8519, %r8518, 23;
	mov.b64 	%rd415, {%r8525, %r8524};
	xor.b64  	%rd416, %rd414, %rd415;
	xor.b64  	%rd417, %rd376, %rd352;
	and.b64  	%rd418, %rd400, %rd417;
	xor.b64  	%rd419, %rd418, %rd352;
	add.s64 	%rd420, %rd328, %rd158;
	add.s64 	%rd421, %rd420, %rd12;
	add.s64 	%rd422, %rd421, %rd419;
	add.s64 	%rd423, %rd422, %rd416;
	add.s64 	%rd424, %rd423, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8526,%dummy}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8527}, %rd411;
	}
	shf.r.wrap.b32 	%r8528, %r8527, %r8526, 28;
	shf.r.wrap.b32 	%r8529, %r8526, %r8527, 28;
	mov.b64 	%rd425, {%r8529, %r8528};
	shf.l.wrap.b32 	%r8530, %r8526, %r8527, 30;
	shf.l.wrap.b32 	%r8531, %r8527, %r8526, 30;
	mov.b64 	%rd426, {%r8531, %r8530};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r8532, %r8526, %r8527, 25;
	shf.l.wrap.b32 	%r8533, %r8527, %r8526, 25;
	mov.b64 	%rd428, {%r8533, %r8532};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd411, %rd363;
	xor.b64  	%rd431, %rd411, %rd387;
	and.b64  	%rd432, %rd431, %rd430;
	xor.b64  	%rd433, %rd432, %rd411;
	add.s64 	%rd434, %rd423, %rd433;
	add.s64 	%rd435, %rd434, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8534,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8535}, %rd424;
	}
	shf.r.wrap.b32 	%r8536, %r8535, %r8534, 14;
	shf.r.wrap.b32 	%r8537, %r8534, %r8535, 14;
	mov.b64 	%rd436, {%r8537, %r8536};
	shf.r.wrap.b32 	%r8538, %r8535, %r8534, 18;
	shf.r.wrap.b32 	%r8539, %r8534, %r8535, 18;
	mov.b64 	%rd437, {%r8539, %r8538};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r8540, %r8534, %r8535, 23;
	shf.l.wrap.b32 	%r8541, %r8535, %r8534, 23;
	mov.b64 	%rd439, {%r8541, %r8540};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd400, %rd376;
	and.b64  	%rd442, %rd424, %rd441;
	xor.b64  	%rd443, %rd442, %rd376;
	add.s64 	%rd444, %rd352, %rd159;
	add.s64 	%rd445, %rd444, %rd13;
	add.s64 	%rd446, %rd445, %rd443;
	add.s64 	%rd447, %rd446, %rd440;
	add.s64 	%rd448, %rd447, %rd363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8542,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8543}, %rd435;
	}
	shf.r.wrap.b32 	%r8544, %r8543, %r8542, 28;
	shf.r.wrap.b32 	%r8545, %r8542, %r8543, 28;
	mov.b64 	%rd449, {%r8545, %r8544};
	shf.l.wrap.b32 	%r8546, %r8542, %r8543, 30;
	shf.l.wrap.b32 	%r8547, %r8543, %r8542, 30;
	mov.b64 	%rd450, {%r8547, %r8546};
	xor.b64  	%rd451, %rd450, %rd449;
	shf.l.wrap.b32 	%r8548, %r8542, %r8543, 25;
	shf.l.wrap.b32 	%r8549, %r8543, %r8542, 25;
	mov.b64 	%rd452, {%r8549, %r8548};
	xor.b64  	%rd453, %rd451, %rd452;
	xor.b64  	%rd454, %rd435, %rd387;
	xor.b64  	%rd455, %rd435, %rd411;
	and.b64  	%rd456, %rd455, %rd454;
	xor.b64  	%rd457, %rd456, %rd435;
	add.s64 	%rd458, %rd447, %rd457;
	add.s64 	%rd459, %rd458, %rd453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8550,%dummy}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8551}, %rd448;
	}
	shf.r.wrap.b32 	%r8552, %r8551, %r8550, 14;
	shf.r.wrap.b32 	%r8553, %r8550, %r8551, 14;
	mov.b64 	%rd460, {%r8553, %r8552};
	shf.r.wrap.b32 	%r8554, %r8551, %r8550, 18;
	shf.r.wrap.b32 	%r8555, %r8550, %r8551, 18;
	mov.b64 	%rd461, {%r8555, %r8554};
	xor.b64  	%rd462, %rd461, %rd460;
	shf.l.wrap.b32 	%r8556, %r8550, %r8551, 23;
	shf.l.wrap.b32 	%r8557, %r8551, %r8550, 23;
	mov.b64 	%rd463, {%r8557, %r8556};
	xor.b64  	%rd464, %rd462, %rd463;
	xor.b64  	%rd465, %rd424, %rd400;
	and.b64  	%rd466, %rd448, %rd465;
	xor.b64  	%rd467, %rd466, %rd400;
	add.s64 	%rd468, %rd376, %rd160;
	add.s64 	%rd469, %rd468, %rd14;
	add.s64 	%rd470, %rd469, %rd467;
	add.s64 	%rd471, %rd470, %rd464;
	add.s64 	%rd472, %rd471, %rd387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8558,%dummy}, %rd459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8559}, %rd459;
	}
	shf.r.wrap.b32 	%r8560, %r8559, %r8558, 28;
	shf.r.wrap.b32 	%r8561, %r8558, %r8559, 28;
	mov.b64 	%rd473, {%r8561, %r8560};
	shf.l.wrap.b32 	%r8562, %r8558, %r8559, 30;
	shf.l.wrap.b32 	%r8563, %r8559, %r8558, 30;
	mov.b64 	%rd474, {%r8563, %r8562};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.l.wrap.b32 	%r8564, %r8558, %r8559, 25;
	shf.l.wrap.b32 	%r8565, %r8559, %r8558, 25;
	mov.b64 	%rd476, {%r8565, %r8564};
	xor.b64  	%rd477, %rd475, %rd476;
	xor.b64  	%rd478, %rd459, %rd411;
	xor.b64  	%rd479, %rd459, %rd435;
	and.b64  	%rd480, %rd479, %rd478;
	xor.b64  	%rd481, %rd480, %rd459;
	add.s64 	%rd482, %rd471, %rd481;
	add.s64 	%rd483, %rd482, %rd477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8566,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8567}, %rd472;
	}
	shf.r.wrap.b32 	%r8568, %r8567, %r8566, 14;
	shf.r.wrap.b32 	%r8569, %r8566, %r8567, 14;
	mov.b64 	%rd484, {%r8569, %r8568};
	shf.r.wrap.b32 	%r8570, %r8567, %r8566, 18;
	shf.r.wrap.b32 	%r8571, %r8566, %r8567, 18;
	mov.b64 	%rd485, {%r8571, %r8570};
	xor.b64  	%rd486, %rd485, %rd484;
	shf.l.wrap.b32 	%r8572, %r8566, %r8567, 23;
	shf.l.wrap.b32 	%r8573, %r8567, %r8566, 23;
	mov.b64 	%rd487, {%r8573, %r8572};
	xor.b64  	%rd488, %rd486, %rd487;
	xor.b64  	%rd489, %rd448, %rd424;
	and.b64  	%rd490, %rd472, %rd489;
	xor.b64  	%rd491, %rd490, %rd424;
	add.s64 	%rd492, %rd400, %rd161;
	add.s64 	%rd493, %rd492, %rd15;
	add.s64 	%rd494, %rd493, %rd491;
	add.s64 	%rd495, %rd494, %rd488;
	add.s64 	%rd496, %rd495, %rd411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8574,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8575}, %rd483;
	}
	shf.r.wrap.b32 	%r8576, %r8575, %r8574, 28;
	shf.r.wrap.b32 	%r8577, %r8574, %r8575, 28;
	mov.b64 	%rd497, {%r8577, %r8576};
	shf.l.wrap.b32 	%r8578, %r8574, %r8575, 30;
	shf.l.wrap.b32 	%r8579, %r8575, %r8574, 30;
	mov.b64 	%rd498, {%r8579, %r8578};
	xor.b64  	%rd499, %rd498, %rd497;
	shf.l.wrap.b32 	%r8580, %r8574, %r8575, 25;
	shf.l.wrap.b32 	%r8581, %r8575, %r8574, 25;
	mov.b64 	%rd500, {%r8581, %r8580};
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd483, %rd435;
	xor.b64  	%rd503, %rd483, %rd459;
	and.b64  	%rd504, %rd503, %rd502;
	xor.b64  	%rd505, %rd504, %rd483;
	add.s64 	%rd506, %rd495, %rd505;
	add.s64 	%rd507, %rd506, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8582,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8583}, %rd496;
	}
	shf.r.wrap.b32 	%r8584, %r8583, %r8582, 14;
	shf.r.wrap.b32 	%r8585, %r8582, %r8583, 14;
	mov.b64 	%rd508, {%r8585, %r8584};
	shf.r.wrap.b32 	%r8586, %r8583, %r8582, 18;
	shf.r.wrap.b32 	%r8587, %r8582, %r8583, 18;
	mov.b64 	%rd509, {%r8587, %r8586};
	xor.b64  	%rd510, %rd509, %rd508;
	shf.l.wrap.b32 	%r8588, %r8582, %r8583, 23;
	shf.l.wrap.b32 	%r8589, %r8583, %r8582, 23;
	mov.b64 	%rd511, {%r8589, %r8588};
	xor.b64  	%rd512, %rd510, %rd511;
	xor.b64  	%rd513, %rd472, %rd448;
	and.b64  	%rd514, %rd496, %rd513;
	xor.b64  	%rd515, %rd514, %rd448;
	add.s64 	%rd516, %rd424, %rd162;
	add.s64 	%rd517, %rd516, %rd16;
	add.s64 	%rd518, %rd517, %rd515;
	add.s64 	%rd519, %rd518, %rd512;
	add.s64 	%rd520, %rd519, %rd435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8590,%dummy}, %rd507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8591}, %rd507;
	}
	shf.r.wrap.b32 	%r8592, %r8591, %r8590, 28;
	shf.r.wrap.b32 	%r8593, %r8590, %r8591, 28;
	mov.b64 	%rd521, {%r8593, %r8592};
	shf.l.wrap.b32 	%r8594, %r8590, %r8591, 30;
	shf.l.wrap.b32 	%r8595, %r8591, %r8590, 30;
	mov.b64 	%rd522, {%r8595, %r8594};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.l.wrap.b32 	%r8596, %r8590, %r8591, 25;
	shf.l.wrap.b32 	%r8597, %r8591, %r8590, 25;
	mov.b64 	%rd524, {%r8597, %r8596};
	xor.b64  	%rd525, %rd523, %rd524;
	xor.b64  	%rd526, %rd507, %rd459;
	xor.b64  	%rd527, %rd507, %rd483;
	and.b64  	%rd528, %rd527, %rd526;
	xor.b64  	%rd529, %rd528, %rd507;
	add.s64 	%rd530, %rd519, %rd529;
	add.s64 	%rd531, %rd530, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8598,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8599}, %rd520;
	}
	shf.r.wrap.b32 	%r8600, %r8599, %r8598, 14;
	shf.r.wrap.b32 	%r8601, %r8598, %r8599, 14;
	mov.b64 	%rd532, {%r8601, %r8600};
	shf.r.wrap.b32 	%r8602, %r8599, %r8598, 18;
	shf.r.wrap.b32 	%r8603, %r8598, %r8599, 18;
	mov.b64 	%rd533, {%r8603, %r8602};
	xor.b64  	%rd534, %rd533, %rd532;
	shf.l.wrap.b32 	%r8604, %r8598, %r8599, 23;
	shf.l.wrap.b32 	%r8605, %r8599, %r8598, 23;
	mov.b64 	%rd535, {%r8605, %r8604};
	xor.b64  	%rd536, %rd534, %rd535;
	xor.b64  	%rd537, %rd496, %rd472;
	and.b64  	%rd538, %rd520, %rd537;
	xor.b64  	%rd539, %rd538, %rd472;
	add.s64 	%rd540, %rd448, %rd163;
	add.s64 	%rd541, %rd540, %rd17;
	add.s64 	%rd542, %rd541, %rd539;
	add.s64 	%rd543, %rd542, %rd536;
	add.s64 	%rd544, %rd543, %rd459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8606,%dummy}, %rd531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8607}, %rd531;
	}
	shf.r.wrap.b32 	%r8608, %r8607, %r8606, 28;
	shf.r.wrap.b32 	%r8609, %r8606, %r8607, 28;
	mov.b64 	%rd545, {%r8609, %r8608};
	shf.l.wrap.b32 	%r8610, %r8606, %r8607, 30;
	shf.l.wrap.b32 	%r8611, %r8607, %r8606, 30;
	mov.b64 	%rd546, {%r8611, %r8610};
	xor.b64  	%rd547, %rd546, %rd545;
	shf.l.wrap.b32 	%r8612, %r8606, %r8607, 25;
	shf.l.wrap.b32 	%r8613, %r8607, %r8606, 25;
	mov.b64 	%rd548, {%r8613, %r8612};
	xor.b64  	%rd549, %rd547, %rd548;
	xor.b64  	%rd550, %rd531, %rd483;
	xor.b64  	%rd551, %rd531, %rd507;
	and.b64  	%rd552, %rd551, %rd550;
	xor.b64  	%rd553, %rd552, %rd531;
	add.s64 	%rd554, %rd543, %rd553;
	add.s64 	%rd555, %rd554, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8614,%dummy}, %rd162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8615}, %rd162;
	}
	shf.r.wrap.b32 	%r8616, %r8615, %r8614, 19;
	shf.r.wrap.b32 	%r8617, %r8614, %r8615, 19;
	mov.b64 	%rd556, {%r8617, %r8616};
	shf.l.wrap.b32 	%r8618, %r8614, %r8615, 3;
	shf.l.wrap.b32 	%r8619, %r8615, %r8614, 3;
	mov.b64 	%rd557, {%r8619, %r8618};
	shr.u64 	%rd558, %rd162, 6;
	xor.b64  	%rd559, %rd556, %rd558;
	xor.b64  	%rd560, %rd559, %rd557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8620,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8621}, %rd149;
	}
	shf.r.wrap.b32 	%r8622, %r8621, %r8620, 1;
	shf.r.wrap.b32 	%r8623, %r8620, %r8621, 1;
	mov.b64 	%rd561, {%r8623, %r8622};
	shf.r.wrap.b32 	%r8624, %r8621, %r8620, 8;
	shf.r.wrap.b32 	%r8625, %r8620, %r8621, 8;
	mov.b64 	%rd562, {%r8625, %r8624};
	shr.u64 	%rd563, %rd149, 7;
	xor.b64  	%rd564, %rd561, %rd563;
	xor.b64  	%rd565, %rd564, %rd562;
	add.s64 	%rd566, %rd157, %rd148;
	add.s64 	%rd567, %rd566, %rd560;
	add.s64 	%rd568, %rd567, %rd565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8626,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8627}, %rd163;
	}
	shf.r.wrap.b32 	%r8628, %r8627, %r8626, 19;
	shf.r.wrap.b32 	%r8629, %r8626, %r8627, 19;
	mov.b64 	%rd569, {%r8629, %r8628};
	shf.l.wrap.b32 	%r8630, %r8626, %r8627, 3;
	shf.l.wrap.b32 	%r8631, %r8627, %r8626, 3;
	mov.b64 	%rd570, {%r8631, %r8630};
	shr.u64 	%rd571, %rd163, 6;
	xor.b64  	%rd572, %rd569, %rd571;
	xor.b64  	%rd573, %rd572, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8632,%dummy}, %rd150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8633}, %rd150;
	}
	shf.r.wrap.b32 	%r8634, %r8633, %r8632, 1;
	shf.r.wrap.b32 	%r8635, %r8632, %r8633, 1;
	mov.b64 	%rd574, {%r8635, %r8634};
	shf.r.wrap.b32 	%r8636, %r8633, %r8632, 8;
	shf.r.wrap.b32 	%r8637, %r8632, %r8633, 8;
	mov.b64 	%rd575, {%r8637, %r8636};
	shr.u64 	%rd576, %rd150, 7;
	xor.b64  	%rd577, %rd574, %rd576;
	xor.b64  	%rd578, %rd577, %rd575;
	add.s64 	%rd579, %rd158, %rd149;
	add.s64 	%rd580, %rd579, %rd573;
	add.s64 	%rd581, %rd580, %rd578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8638,%dummy}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8639}, %rd568;
	}
	shf.r.wrap.b32 	%r8640, %r8639, %r8638, 19;
	shf.r.wrap.b32 	%r8641, %r8638, %r8639, 19;
	mov.b64 	%rd582, {%r8641, %r8640};
	shf.l.wrap.b32 	%r8642, %r8638, %r8639, 3;
	shf.l.wrap.b32 	%r8643, %r8639, %r8638, 3;
	mov.b64 	%rd583, {%r8643, %r8642};
	shr.u64 	%rd584, %rd568, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8644,%dummy}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8645}, %rd151;
	}
	shf.r.wrap.b32 	%r8646, %r8645, %r8644, 1;
	shf.r.wrap.b32 	%r8647, %r8644, %r8645, 1;
	mov.b64 	%rd587, {%r8647, %r8646};
	shf.r.wrap.b32 	%r8648, %r8645, %r8644, 8;
	shf.r.wrap.b32 	%r8649, %r8644, %r8645, 8;
	mov.b64 	%rd588, {%r8649, %r8648};
	shr.u64 	%rd589, %rd151, 7;
	xor.b64  	%rd590, %rd587, %rd589;
	xor.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd159, %rd150;
	add.s64 	%rd593, %rd592, %rd586;
	add.s64 	%rd594, %rd593, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8650,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8651}, %rd581;
	}
	shf.r.wrap.b32 	%r8652, %r8651, %r8650, 19;
	shf.r.wrap.b32 	%r8653, %r8650, %r8651, 19;
	mov.b64 	%rd595, {%r8653, %r8652};
	shf.l.wrap.b32 	%r8654, %r8650, %r8651, 3;
	shf.l.wrap.b32 	%r8655, %r8651, %r8650, 3;
	mov.b64 	%rd596, {%r8655, %r8654};
	shr.u64 	%rd597, %rd581, 6;
	xor.b64  	%rd598, %rd595, %rd597;
	xor.b64  	%rd599, %rd598, %rd596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8656,%dummy}, %rd152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8657}, %rd152;
	}
	shf.r.wrap.b32 	%r8658, %r8657, %r8656, 1;
	shf.r.wrap.b32 	%r8659, %r8656, %r8657, 1;
	mov.b64 	%rd600, {%r8659, %r8658};
	shf.r.wrap.b32 	%r8660, %r8657, %r8656, 8;
	shf.r.wrap.b32 	%r8661, %r8656, %r8657, 8;
	mov.b64 	%rd601, {%r8661, %r8660};
	shr.u64 	%rd602, %rd152, 7;
	xor.b64  	%rd603, %rd600, %rd602;
	xor.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd160, %rd151;
	add.s64 	%rd606, %rd605, %rd599;
	add.s64 	%rd607, %rd606, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8662,%dummy}, %rd594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8663}, %rd594;
	}
	shf.r.wrap.b32 	%r8664, %r8663, %r8662, 19;
	shf.r.wrap.b32 	%r8665, %r8662, %r8663, 19;
	mov.b64 	%rd608, {%r8665, %r8664};
	shf.l.wrap.b32 	%r8666, %r8662, %r8663, 3;
	shf.l.wrap.b32 	%r8667, %r8663, %r8662, 3;
	mov.b64 	%rd609, {%r8667, %r8666};
	shr.u64 	%rd610, %rd594, 6;
	xor.b64  	%rd611, %rd608, %rd610;
	xor.b64  	%rd612, %rd611, %rd609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8668,%dummy}, %rd153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8669}, %rd153;
	}
	shf.r.wrap.b32 	%r8670, %r8669, %r8668, 1;
	shf.r.wrap.b32 	%r8671, %r8668, %r8669, 1;
	mov.b64 	%rd613, {%r8671, %r8670};
	shf.r.wrap.b32 	%r8672, %r8669, %r8668, 8;
	shf.r.wrap.b32 	%r8673, %r8668, %r8669, 8;
	mov.b64 	%rd614, {%r8673, %r8672};
	shr.u64 	%rd615, %rd153, 7;
	xor.b64  	%rd616, %rd613, %rd615;
	xor.b64  	%rd617, %rd616, %rd614;
	add.s64 	%rd618, %rd161, %rd152;
	add.s64 	%rd619, %rd618, %rd612;
	add.s64 	%rd620, %rd619, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8674,%dummy}, %rd607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8675}, %rd607;
	}
	shf.r.wrap.b32 	%r8676, %r8675, %r8674, 19;
	shf.r.wrap.b32 	%r8677, %r8674, %r8675, 19;
	mov.b64 	%rd621, {%r8677, %r8676};
	shf.l.wrap.b32 	%r8678, %r8674, %r8675, 3;
	shf.l.wrap.b32 	%r8679, %r8675, %r8674, 3;
	mov.b64 	%rd622, {%r8679, %r8678};
	shr.u64 	%rd623, %rd607, 6;
	xor.b64  	%rd624, %rd621, %rd623;
	xor.b64  	%rd625, %rd624, %rd622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8680,%dummy}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8681}, %rd154;
	}
	shf.r.wrap.b32 	%r8682, %r8681, %r8680, 1;
	shf.r.wrap.b32 	%r8683, %r8680, %r8681, 1;
	mov.b64 	%rd626, {%r8683, %r8682};
	shf.r.wrap.b32 	%r8684, %r8681, %r8680, 8;
	shf.r.wrap.b32 	%r8685, %r8680, %r8681, 8;
	mov.b64 	%rd627, {%r8685, %r8684};
	shr.u64 	%rd628, %rd154, 7;
	xor.b64  	%rd629, %rd626, %rd628;
	xor.b64  	%rd630, %rd629, %rd627;
	add.s64 	%rd631, %rd162, %rd153;
	add.s64 	%rd632, %rd631, %rd625;
	add.s64 	%rd633, %rd632, %rd630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8686,%dummy}, %rd620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8687}, %rd620;
	}
	shf.r.wrap.b32 	%r8688, %r8687, %r8686, 19;
	shf.r.wrap.b32 	%r8689, %r8686, %r8687, 19;
	mov.b64 	%rd634, {%r8689, %r8688};
	shf.l.wrap.b32 	%r8690, %r8686, %r8687, 3;
	shf.l.wrap.b32 	%r8691, %r8687, %r8686, 3;
	mov.b64 	%rd635, {%r8691, %r8690};
	shr.u64 	%rd636, %rd620, 6;
	xor.b64  	%rd637, %rd634, %rd636;
	xor.b64  	%rd638, %rd637, %rd635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8692,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8693}, %rd155;
	}
	shf.r.wrap.b32 	%r8694, %r8693, %r8692, 1;
	shf.r.wrap.b32 	%r8695, %r8692, %r8693, 1;
	mov.b64 	%rd639, {%r8695, %r8694};
	shf.r.wrap.b32 	%r8696, %r8693, %r8692, 8;
	shf.r.wrap.b32 	%r8697, %r8692, %r8693, 8;
	mov.b64 	%rd640, {%r8697, %r8696};
	shr.u64 	%rd641, %rd155, 7;
	xor.b64  	%rd642, %rd639, %rd641;
	xor.b64  	%rd643, %rd642, %rd640;
	add.s64 	%rd644, %rd163, %rd154;
	add.s64 	%rd645, %rd644, %rd638;
	add.s64 	%rd646, %rd645, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8698,%dummy}, %rd633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8699}, %rd633;
	}
	shf.r.wrap.b32 	%r8700, %r8699, %r8698, 19;
	shf.r.wrap.b32 	%r8701, %r8698, %r8699, 19;
	mov.b64 	%rd647, {%r8701, %r8700};
	shf.l.wrap.b32 	%r8702, %r8698, %r8699, 3;
	shf.l.wrap.b32 	%r8703, %r8699, %r8698, 3;
	mov.b64 	%rd648, {%r8703, %r8702};
	shr.u64 	%rd649, %rd633, 6;
	xor.b64  	%rd650, %rd647, %rd649;
	xor.b64  	%rd651, %rd650, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8704,%dummy}, %rd156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8705}, %rd156;
	}
	shf.r.wrap.b32 	%r8706, %r8705, %r8704, 1;
	shf.r.wrap.b32 	%r8707, %r8704, %r8705, 1;
	mov.b64 	%rd652, {%r8707, %r8706};
	shf.r.wrap.b32 	%r8708, %r8705, %r8704, 8;
	shf.r.wrap.b32 	%r8709, %r8704, %r8705, 8;
	mov.b64 	%rd653, {%r8709, %r8708};
	shr.u64 	%rd654, %rd156, 7;
	xor.b64  	%rd655, %rd652, %rd654;
	xor.b64  	%rd656, %rd655, %rd653;
	add.s64 	%rd657, %rd568, %rd155;
	add.s64 	%rd658, %rd657, %rd651;
	add.s64 	%rd659, %rd658, %rd656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8710,%dummy}, %rd646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8711}, %rd646;
	}
	shf.r.wrap.b32 	%r8712, %r8711, %r8710, 19;
	shf.r.wrap.b32 	%r8713, %r8710, %r8711, 19;
	mov.b64 	%rd660, {%r8713, %r8712};
	shf.l.wrap.b32 	%r8714, %r8710, %r8711, 3;
	shf.l.wrap.b32 	%r8715, %r8711, %r8710, 3;
	mov.b64 	%rd661, {%r8715, %r8714};
	shr.u64 	%rd662, %rd646, 6;
	xor.b64  	%rd663, %rd660, %rd662;
	xor.b64  	%rd664, %rd663, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8716,%dummy}, %rd157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8717}, %rd157;
	}
	shf.r.wrap.b32 	%r8718, %r8717, %r8716, 1;
	shf.r.wrap.b32 	%r8719, %r8716, %r8717, 1;
	mov.b64 	%rd665, {%r8719, %r8718};
	shf.r.wrap.b32 	%r8720, %r8717, %r8716, 8;
	shf.r.wrap.b32 	%r8721, %r8716, %r8717, 8;
	mov.b64 	%rd666, {%r8721, %r8720};
	shr.u64 	%rd667, %rd157, 7;
	xor.b64  	%rd668, %rd665, %rd667;
	xor.b64  	%rd669, %rd668, %rd666;
	add.s64 	%rd670, %rd581, %rd156;
	add.s64 	%rd671, %rd670, %rd664;
	add.s64 	%rd672, %rd671, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8722,%dummy}, %rd659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8723}, %rd659;
	}
	shf.r.wrap.b32 	%r8724, %r8723, %r8722, 19;
	shf.r.wrap.b32 	%r8725, %r8722, %r8723, 19;
	mov.b64 	%rd673, {%r8725, %r8724};
	shf.l.wrap.b32 	%r8726, %r8722, %r8723, 3;
	shf.l.wrap.b32 	%r8727, %r8723, %r8722, 3;
	mov.b64 	%rd674, {%r8727, %r8726};
	shr.u64 	%rd675, %rd659, 6;
	xor.b64  	%rd676, %rd673, %rd675;
	xor.b64  	%rd677, %rd676, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8728,%dummy}, %rd158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8729}, %rd158;
	}
	shf.r.wrap.b32 	%r8730, %r8729, %r8728, 1;
	shf.r.wrap.b32 	%r8731, %r8728, %r8729, 1;
	mov.b64 	%rd678, {%r8731, %r8730};
	shf.r.wrap.b32 	%r8732, %r8729, %r8728, 8;
	shf.r.wrap.b32 	%r8733, %r8728, %r8729, 8;
	mov.b64 	%rd679, {%r8733, %r8732};
	shr.u64 	%rd680, %rd158, 7;
	xor.b64  	%rd681, %rd678, %rd680;
	xor.b64  	%rd682, %rd681, %rd679;
	add.s64 	%rd683, %rd594, %rd157;
	add.s64 	%rd684, %rd683, %rd677;
	add.s64 	%rd685, %rd684, %rd682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8734,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8735}, %rd672;
	}
	shf.r.wrap.b32 	%r8736, %r8735, %r8734, 19;
	shf.r.wrap.b32 	%r8737, %r8734, %r8735, 19;
	mov.b64 	%rd686, {%r8737, %r8736};
	shf.l.wrap.b32 	%r8738, %r8734, %r8735, 3;
	shf.l.wrap.b32 	%r8739, %r8735, %r8734, 3;
	mov.b64 	%rd687, {%r8739, %r8738};
	shr.u64 	%rd688, %rd672, 6;
	xor.b64  	%rd689, %rd686, %rd688;
	xor.b64  	%rd690, %rd689, %rd687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8740,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8741}, %rd159;
	}
	shf.r.wrap.b32 	%r8742, %r8741, %r8740, 1;
	shf.r.wrap.b32 	%r8743, %r8740, %r8741, 1;
	mov.b64 	%rd691, {%r8743, %r8742};
	shf.r.wrap.b32 	%r8744, %r8741, %r8740, 8;
	shf.r.wrap.b32 	%r8745, %r8740, %r8741, 8;
	mov.b64 	%rd692, {%r8745, %r8744};
	shr.u64 	%rd693, %rd159, 7;
	xor.b64  	%rd694, %rd691, %rd693;
	xor.b64  	%rd695, %rd694, %rd692;
	add.s64 	%rd696, %rd607, %rd158;
	add.s64 	%rd697, %rd696, %rd690;
	add.s64 	%rd698, %rd697, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8746,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8747}, %rd685;
	}
	shf.r.wrap.b32 	%r8748, %r8747, %r8746, 19;
	shf.r.wrap.b32 	%r8749, %r8746, %r8747, 19;
	mov.b64 	%rd699, {%r8749, %r8748};
	shf.l.wrap.b32 	%r8750, %r8746, %r8747, 3;
	shf.l.wrap.b32 	%r8751, %r8747, %r8746, 3;
	mov.b64 	%rd700, {%r8751, %r8750};
	shr.u64 	%rd701, %rd685, 6;
	xor.b64  	%rd702, %rd699, %rd701;
	xor.b64  	%rd703, %rd702, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8752,%dummy}, %rd160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8753}, %rd160;
	}
	shf.r.wrap.b32 	%r8754, %r8753, %r8752, 1;
	shf.r.wrap.b32 	%r8755, %r8752, %r8753, 1;
	mov.b64 	%rd704, {%r8755, %r8754};
	shf.r.wrap.b32 	%r8756, %r8753, %r8752, 8;
	shf.r.wrap.b32 	%r8757, %r8752, %r8753, 8;
	mov.b64 	%rd705, {%r8757, %r8756};
	shr.u64 	%rd706, %rd160, 7;
	xor.b64  	%rd707, %rd704, %rd706;
	xor.b64  	%rd708, %rd707, %rd705;
	add.s64 	%rd709, %rd620, %rd159;
	add.s64 	%rd710, %rd709, %rd703;
	add.s64 	%rd711, %rd710, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8758,%dummy}, %rd698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8759}, %rd698;
	}
	shf.r.wrap.b32 	%r8760, %r8759, %r8758, 19;
	shf.r.wrap.b32 	%r8761, %r8758, %r8759, 19;
	mov.b64 	%rd712, {%r8761, %r8760};
	shf.l.wrap.b32 	%r8762, %r8758, %r8759, 3;
	shf.l.wrap.b32 	%r8763, %r8759, %r8758, 3;
	mov.b64 	%rd713, {%r8763, %r8762};
	shr.u64 	%rd714, %rd698, 6;
	xor.b64  	%rd715, %rd712, %rd714;
	xor.b64  	%rd716, %rd715, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8764,%dummy}, %rd161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8765}, %rd161;
	}
	shf.r.wrap.b32 	%r8766, %r8765, %r8764, 1;
	shf.r.wrap.b32 	%r8767, %r8764, %r8765, 1;
	mov.b64 	%rd717, {%r8767, %r8766};
	shf.r.wrap.b32 	%r8768, %r8765, %r8764, 8;
	shf.r.wrap.b32 	%r8769, %r8764, %r8765, 8;
	mov.b64 	%rd718, {%r8769, %r8768};
	shr.u64 	%rd719, %rd161, 7;
	xor.b64  	%rd720, %rd717, %rd719;
	xor.b64  	%rd721, %rd720, %rd718;
	add.s64 	%rd722, %rd633, %rd160;
	add.s64 	%rd723, %rd722, %rd716;
	add.s64 	%rd724, %rd723, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8770,%dummy}, %rd711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8771}, %rd711;
	}
	shf.r.wrap.b32 	%r8772, %r8771, %r8770, 19;
	shf.r.wrap.b32 	%r8773, %r8770, %r8771, 19;
	mov.b64 	%rd725, {%r8773, %r8772};
	shf.l.wrap.b32 	%r8774, %r8770, %r8771, 3;
	shf.l.wrap.b32 	%r8775, %r8771, %r8770, 3;
	mov.b64 	%rd726, {%r8775, %r8774};
	shr.u64 	%rd727, %rd711, 6;
	xor.b64  	%rd728, %rd725, %rd727;
	xor.b64  	%rd729, %rd728, %rd726;
	shf.r.wrap.b32 	%r8776, %r8615, %r8614, 1;
	shf.r.wrap.b32 	%r8777, %r8614, %r8615, 1;
	mov.b64 	%rd730, {%r8777, %r8776};
	shf.r.wrap.b32 	%r8778, %r8615, %r8614, 8;
	shf.r.wrap.b32 	%r8779, %r8614, %r8615, 8;
	mov.b64 	%rd731, {%r8779, %r8778};
	shr.u64 	%rd732, %rd162, 7;
	xor.b64  	%rd733, %rd730, %rd732;
	xor.b64  	%rd734, %rd733, %rd731;
	add.s64 	%rd735, %rd646, %rd161;
	add.s64 	%rd736, %rd735, %rd729;
	add.s64 	%rd737, %rd736, %rd734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8780,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8781}, %rd724;
	}
	shf.r.wrap.b32 	%r8782, %r8781, %r8780, 19;
	shf.r.wrap.b32 	%r8783, %r8780, %r8781, 19;
	mov.b64 	%rd738, {%r8783, %r8782};
	shf.l.wrap.b32 	%r8784, %r8780, %r8781, 3;
	shf.l.wrap.b32 	%r8785, %r8781, %r8780, 3;
	mov.b64 	%rd739, {%r8785, %r8784};
	shr.u64 	%rd740, %rd724, 6;
	xor.b64  	%rd741, %rd738, %rd740;
	xor.b64  	%rd742, %rd741, %rd739;
	shf.r.wrap.b32 	%r8786, %r8627, %r8626, 1;
	shf.r.wrap.b32 	%r8787, %r8626, %r8627, 1;
	mov.b64 	%rd743, {%r8787, %r8786};
	shf.r.wrap.b32 	%r8788, %r8627, %r8626, 8;
	shf.r.wrap.b32 	%r8789, %r8626, %r8627, 8;
	mov.b64 	%rd744, {%r8789, %r8788};
	shr.u64 	%rd745, %rd163, 7;
	xor.b64  	%rd746, %rd743, %rd745;
	xor.b64  	%rd747, %rd746, %rd744;
	add.s64 	%rd748, %rd659, %rd162;
	add.s64 	%rd749, %rd748, %rd742;
	add.s64 	%rd750, %rd749, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8790,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8791}, %rd737;
	}
	shf.r.wrap.b32 	%r8792, %r8791, %r8790, 19;
	shf.r.wrap.b32 	%r8793, %r8790, %r8791, 19;
	mov.b64 	%rd751, {%r8793, %r8792};
	shf.l.wrap.b32 	%r8794, %r8790, %r8791, 3;
	shf.l.wrap.b32 	%r8795, %r8791, %r8790, 3;
	mov.b64 	%rd752, {%r8795, %r8794};
	shr.u64 	%rd753, %rd737, 6;
	xor.b64  	%rd754, %rd751, %rd753;
	xor.b64  	%rd755, %rd754, %rd752;
	shf.r.wrap.b32 	%r8796, %r8639, %r8638, 1;
	shf.r.wrap.b32 	%r8797, %r8638, %r8639, 1;
	mov.b64 	%rd756, {%r8797, %r8796};
	shf.r.wrap.b32 	%r8798, %r8639, %r8638, 8;
	shf.r.wrap.b32 	%r8799, %r8638, %r8639, 8;
	mov.b64 	%rd757, {%r8799, %r8798};
	shr.u64 	%rd758, %rd568, 7;
	xor.b64  	%rd759, %rd756, %rd758;
	xor.b64  	%rd760, %rd759, %rd757;
	add.s64 	%rd761, %rd672, %rd163;
	add.s64 	%rd762, %rd761, %rd755;
	add.s64 	%rd763, %rd762, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8800,%dummy}, %rd544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8801}, %rd544;
	}
	shf.r.wrap.b32 	%r8802, %r8801, %r8800, 14;
	shf.r.wrap.b32 	%r8803, %r8800, %r8801, 14;
	mov.b64 	%rd764, {%r8803, %r8802};
	shf.r.wrap.b32 	%r8804, %r8801, %r8800, 18;
	shf.r.wrap.b32 	%r8805, %r8800, %r8801, 18;
	mov.b64 	%rd765, {%r8805, %r8804};
	xor.b64  	%rd766, %rd765, %rd764;
	shf.l.wrap.b32 	%r8806, %r8800, %r8801, 23;
	shf.l.wrap.b32 	%r8807, %r8801, %r8800, 23;
	mov.b64 	%rd767, {%r8807, %r8806};
	xor.b64  	%rd768, %rd766, %rd767;
	xor.b64  	%rd769, %rd520, %rd496;
	and.b64  	%rd770, %rd544, %rd769;
	xor.b64  	%rd771, %rd770, %rd496;
	add.s64 	%rd772, %rd771, %rd472;
	add.s64 	%rd773, %rd772, %rd568;
	add.s64 	%rd775, %rd773, %rd18;
	add.s64 	%rd776, %rd775, %rd768;
	add.s64 	%rd777, %rd776, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8808,%dummy}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8809}, %rd555;
	}
	shf.r.wrap.b32 	%r8810, %r8809, %r8808, 28;
	shf.r.wrap.b32 	%r8811, %r8808, %r8809, 28;
	mov.b64 	%rd778, {%r8811, %r8810};
	shf.l.wrap.b32 	%r8812, %r8808, %r8809, 30;
	shf.l.wrap.b32 	%r8813, %r8809, %r8808, 30;
	mov.b64 	%rd779, {%r8813, %r8812};
	xor.b64  	%rd780, %rd779, %rd778;
	shf.l.wrap.b32 	%r8814, %r8808, %r8809, 25;
	shf.l.wrap.b32 	%r8815, %r8809, %r8808, 25;
	mov.b64 	%rd781, {%r8815, %r8814};
	xor.b64  	%rd782, %rd780, %rd781;
	xor.b64  	%rd783, %rd555, %rd507;
	xor.b64  	%rd784, %rd555, %rd531;
	and.b64  	%rd785, %rd784, %rd783;
	xor.b64  	%rd786, %rd785, %rd555;
	add.s64 	%rd787, %rd776, %rd786;
	add.s64 	%rd788, %rd787, %rd782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8816,%dummy}, %rd777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8817}, %rd777;
	}
	shf.r.wrap.b32 	%r8818, %r8817, %r8816, 14;
	shf.r.wrap.b32 	%r8819, %r8816, %r8817, 14;
	mov.b64 	%rd789, {%r8819, %r8818};
	shf.r.wrap.b32 	%r8820, %r8817, %r8816, 18;
	shf.r.wrap.b32 	%r8821, %r8816, %r8817, 18;
	mov.b64 	%rd790, {%r8821, %r8820};
	xor.b64  	%rd791, %rd790, %rd789;
	shf.l.wrap.b32 	%r8822, %r8816, %r8817, 23;
	shf.l.wrap.b32 	%r8823, %r8817, %r8816, 23;
	mov.b64 	%rd792, {%r8823, %r8822};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd544, %rd520;
	and.b64  	%rd795, %rd777, %rd794;
	xor.b64  	%rd796, %rd795, %rd520;
	add.s64 	%rd797, %rd581, %rd496;
	add.s64 	%rd799, %rd797, %rd19;
	add.s64 	%rd800, %rd799, %rd796;
	add.s64 	%rd801, %rd800, %rd793;
	add.s64 	%rd802, %rd801, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8824,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8825}, %rd788;
	}
	shf.r.wrap.b32 	%r8826, %r8825, %r8824, 28;
	shf.r.wrap.b32 	%r8827, %r8824, %r8825, 28;
	mov.b64 	%rd803, {%r8827, %r8826};
	shf.l.wrap.b32 	%r8828, %r8824, %r8825, 30;
	shf.l.wrap.b32 	%r8829, %r8825, %r8824, 30;
	mov.b64 	%rd804, {%r8829, %r8828};
	xor.b64  	%rd805, %rd804, %rd803;
	shf.l.wrap.b32 	%r8830, %r8824, %r8825, 25;
	shf.l.wrap.b32 	%r8831, %r8825, %r8824, 25;
	mov.b64 	%rd806, {%r8831, %r8830};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd788, %rd531;
	xor.b64  	%rd809, %rd788, %rd555;
	and.b64  	%rd810, %rd809, %rd808;
	xor.b64  	%rd811, %rd810, %rd788;
	add.s64 	%rd812, %rd801, %rd811;
	add.s64 	%rd813, %rd812, %rd807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8832,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8833}, %rd802;
	}
	shf.r.wrap.b32 	%r8834, %r8833, %r8832, 14;
	shf.r.wrap.b32 	%r8835, %r8832, %r8833, 14;
	mov.b64 	%rd814, {%r8835, %r8834};
	shf.r.wrap.b32 	%r8836, %r8833, %r8832, 18;
	shf.r.wrap.b32 	%r8837, %r8832, %r8833, 18;
	mov.b64 	%rd815, {%r8837, %r8836};
	xor.b64  	%rd816, %rd815, %rd814;
	shf.l.wrap.b32 	%r8838, %r8832, %r8833, 23;
	shf.l.wrap.b32 	%r8839, %r8833, %r8832, 23;
	mov.b64 	%rd817, {%r8839, %r8838};
	xor.b64  	%rd818, %rd816, %rd817;
	xor.b64  	%rd819, %rd777, %rd544;
	and.b64  	%rd820, %rd802, %rd819;
	xor.b64  	%rd821, %rd820, %rd544;
	add.s64 	%rd822, %rd594, %rd520;
	add.s64 	%rd824, %rd822, %rd20;
	add.s64 	%rd825, %rd824, %rd821;
	add.s64 	%rd826, %rd825, %rd818;
	add.s64 	%rd827, %rd826, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8840,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8841}, %rd813;
	}
	shf.r.wrap.b32 	%r8842, %r8841, %r8840, 28;
	shf.r.wrap.b32 	%r8843, %r8840, %r8841, 28;
	mov.b64 	%rd828, {%r8843, %r8842};
	shf.l.wrap.b32 	%r8844, %r8840, %r8841, 30;
	shf.l.wrap.b32 	%r8845, %r8841, %r8840, 30;
	mov.b64 	%rd829, {%r8845, %r8844};
	xor.b64  	%rd830, %rd829, %rd828;
	shf.l.wrap.b32 	%r8846, %r8840, %r8841, 25;
	shf.l.wrap.b32 	%r8847, %r8841, %r8840, 25;
	mov.b64 	%rd831, {%r8847, %r8846};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd813, %rd555;
	xor.b64  	%rd834, %rd813, %rd788;
	and.b64  	%rd835, %rd834, %rd833;
	xor.b64  	%rd836, %rd835, %rd813;
	add.s64 	%rd837, %rd826, %rd836;
	add.s64 	%rd838, %rd837, %rd832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8848,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8849}, %rd827;
	}
	shf.r.wrap.b32 	%r8850, %r8849, %r8848, 14;
	shf.r.wrap.b32 	%r8851, %r8848, %r8849, 14;
	mov.b64 	%rd839, {%r8851, %r8850};
	shf.r.wrap.b32 	%r8852, %r8849, %r8848, 18;
	shf.r.wrap.b32 	%r8853, %r8848, %r8849, 18;
	mov.b64 	%rd840, {%r8853, %r8852};
	xor.b64  	%rd841, %rd840, %rd839;
	shf.l.wrap.b32 	%r8854, %r8848, %r8849, 23;
	shf.l.wrap.b32 	%r8855, %r8849, %r8848, 23;
	mov.b64 	%rd842, {%r8855, %r8854};
	xor.b64  	%rd843, %rd841, %rd842;
	xor.b64  	%rd844, %rd802, %rd777;
	and.b64  	%rd845, %rd827, %rd844;
	xor.b64  	%rd846, %rd845, %rd777;
	add.s64 	%rd847, %rd607, %rd544;
	add.s64 	%rd849, %rd847, %rd21;
	add.s64 	%rd850, %rd849, %rd846;
	add.s64 	%rd851, %rd850, %rd843;
	add.s64 	%rd852, %rd851, %rd555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8856,%dummy}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8857}, %rd838;
	}
	shf.r.wrap.b32 	%r8858, %r8857, %r8856, 28;
	shf.r.wrap.b32 	%r8859, %r8856, %r8857, 28;
	mov.b64 	%rd853, {%r8859, %r8858};
	shf.l.wrap.b32 	%r8860, %r8856, %r8857, 30;
	shf.l.wrap.b32 	%r8861, %r8857, %r8856, 30;
	mov.b64 	%rd854, {%r8861, %r8860};
	xor.b64  	%rd855, %rd854, %rd853;
	shf.l.wrap.b32 	%r8862, %r8856, %r8857, 25;
	shf.l.wrap.b32 	%r8863, %r8857, %r8856, 25;
	mov.b64 	%rd856, {%r8863, %r8862};
	xor.b64  	%rd857, %rd855, %rd856;
	xor.b64  	%rd858, %rd838, %rd788;
	xor.b64  	%rd859, %rd838, %rd813;
	and.b64  	%rd860, %rd859, %rd858;
	xor.b64  	%rd861, %rd860, %rd838;
	add.s64 	%rd862, %rd851, %rd861;
	add.s64 	%rd863, %rd862, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8864,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8865}, %rd852;
	}
	shf.r.wrap.b32 	%r8866, %r8865, %r8864, 14;
	shf.r.wrap.b32 	%r8867, %r8864, %r8865, 14;
	mov.b64 	%rd864, {%r8867, %r8866};
	shf.r.wrap.b32 	%r8868, %r8865, %r8864, 18;
	shf.r.wrap.b32 	%r8869, %r8864, %r8865, 18;
	mov.b64 	%rd865, {%r8869, %r8868};
	xor.b64  	%rd866, %rd865, %rd864;
	shf.l.wrap.b32 	%r8870, %r8864, %r8865, 23;
	shf.l.wrap.b32 	%r8871, %r8865, %r8864, 23;
	mov.b64 	%rd867, {%r8871, %r8870};
	xor.b64  	%rd868, %rd866, %rd867;
	xor.b64  	%rd869, %rd827, %rd802;
	and.b64  	%rd870, %rd852, %rd869;
	xor.b64  	%rd871, %rd870, %rd802;
	add.s64 	%rd872, %rd777, %rd620;
	add.s64 	%rd874, %rd872, %rd22;
	add.s64 	%rd875, %rd874, %rd871;
	add.s64 	%rd876, %rd875, %rd868;
	add.s64 	%rd877, %rd876, %rd788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8872,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8873}, %rd863;
	}
	shf.r.wrap.b32 	%r8874, %r8873, %r8872, 28;
	shf.r.wrap.b32 	%r8875, %r8872, %r8873, 28;
	mov.b64 	%rd878, {%r8875, %r8874};
	shf.l.wrap.b32 	%r8876, %r8872, %r8873, 30;
	shf.l.wrap.b32 	%r8877, %r8873, %r8872, 30;
	mov.b64 	%rd879, {%r8877, %r8876};
	xor.b64  	%rd880, %rd879, %rd878;
	shf.l.wrap.b32 	%r8878, %r8872, %r8873, 25;
	shf.l.wrap.b32 	%r8879, %r8873, %r8872, 25;
	mov.b64 	%rd881, {%r8879, %r8878};
	xor.b64  	%rd882, %rd880, %rd881;
	xor.b64  	%rd883, %rd863, %rd813;
	xor.b64  	%rd884, %rd863, %rd838;
	and.b64  	%rd885, %rd884, %rd883;
	xor.b64  	%rd886, %rd885, %rd863;
	add.s64 	%rd887, %rd876, %rd886;
	add.s64 	%rd888, %rd887, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8880,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8881}, %rd877;
	}
	shf.r.wrap.b32 	%r8882, %r8881, %r8880, 14;
	shf.r.wrap.b32 	%r8883, %r8880, %r8881, 14;
	mov.b64 	%rd889, {%r8883, %r8882};
	shf.r.wrap.b32 	%r8884, %r8881, %r8880, 18;
	shf.r.wrap.b32 	%r8885, %r8880, %r8881, 18;
	mov.b64 	%rd890, {%r8885, %r8884};
	xor.b64  	%rd891, %rd890, %rd889;
	shf.l.wrap.b32 	%r8886, %r8880, %r8881, 23;
	shf.l.wrap.b32 	%r8887, %r8881, %r8880, 23;
	mov.b64 	%rd892, {%r8887, %r8886};
	xor.b64  	%rd893, %rd891, %rd892;
	xor.b64  	%rd894, %rd852, %rd827;
	and.b64  	%rd895, %rd877, %rd894;
	xor.b64  	%rd896, %rd895, %rd827;
	add.s64 	%rd897, %rd802, %rd633;
	add.s64 	%rd899, %rd897, %rd23;
	add.s64 	%rd900, %rd899, %rd896;
	add.s64 	%rd901, %rd900, %rd893;
	add.s64 	%rd902, %rd901, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8888,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8889}, %rd888;
	}
	shf.r.wrap.b32 	%r8890, %r8889, %r8888, 28;
	shf.r.wrap.b32 	%r8891, %r8888, %r8889, 28;
	mov.b64 	%rd903, {%r8891, %r8890};
	shf.l.wrap.b32 	%r8892, %r8888, %r8889, 30;
	shf.l.wrap.b32 	%r8893, %r8889, %r8888, 30;
	mov.b64 	%rd904, {%r8893, %r8892};
	xor.b64  	%rd905, %rd904, %rd903;
	shf.l.wrap.b32 	%r8894, %r8888, %r8889, 25;
	shf.l.wrap.b32 	%r8895, %r8889, %r8888, 25;
	mov.b64 	%rd906, {%r8895, %r8894};
	xor.b64  	%rd907, %rd905, %rd906;
	xor.b64  	%rd908, %rd888, %rd838;
	xor.b64  	%rd909, %rd888, %rd863;
	and.b64  	%rd910, %rd909, %rd908;
	xor.b64  	%rd911, %rd910, %rd888;
	add.s64 	%rd912, %rd901, %rd911;
	add.s64 	%rd913, %rd912, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8896,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8897}, %rd902;
	}
	shf.r.wrap.b32 	%r8898, %r8897, %r8896, 14;
	shf.r.wrap.b32 	%r8899, %r8896, %r8897, 14;
	mov.b64 	%rd914, {%r8899, %r8898};
	shf.r.wrap.b32 	%r8900, %r8897, %r8896, 18;
	shf.r.wrap.b32 	%r8901, %r8896, %r8897, 18;
	mov.b64 	%rd915, {%r8901, %r8900};
	xor.b64  	%rd916, %rd915, %rd914;
	shf.l.wrap.b32 	%r8902, %r8896, %r8897, 23;
	shf.l.wrap.b32 	%r8903, %r8897, %r8896, 23;
	mov.b64 	%rd917, {%r8903, %r8902};
	xor.b64  	%rd918, %rd916, %rd917;
	xor.b64  	%rd919, %rd877, %rd852;
	and.b64  	%rd920, %rd902, %rd919;
	xor.b64  	%rd921, %rd920, %rd852;
	add.s64 	%rd922, %rd827, %rd646;
	add.s64 	%rd924, %rd922, %rd24;
	add.s64 	%rd925, %rd924, %rd921;
	add.s64 	%rd926, %rd925, %rd918;
	add.s64 	%rd927, %rd926, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8904,%dummy}, %rd913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8905}, %rd913;
	}
	shf.r.wrap.b32 	%r8906, %r8905, %r8904, 28;
	shf.r.wrap.b32 	%r8907, %r8904, %r8905, 28;
	mov.b64 	%rd928, {%r8907, %r8906};
	shf.l.wrap.b32 	%r8908, %r8904, %r8905, 30;
	shf.l.wrap.b32 	%r8909, %r8905, %r8904, 30;
	mov.b64 	%rd929, {%r8909, %r8908};
	xor.b64  	%rd930, %rd929, %rd928;
	shf.l.wrap.b32 	%r8910, %r8904, %r8905, 25;
	shf.l.wrap.b32 	%r8911, %r8905, %r8904, 25;
	mov.b64 	%rd931, {%r8911, %r8910};
	xor.b64  	%rd932, %rd930, %rd931;
	xor.b64  	%rd933, %rd913, %rd863;
	xor.b64  	%rd934, %rd913, %rd888;
	and.b64  	%rd935, %rd934, %rd933;
	xor.b64  	%rd936, %rd935, %rd913;
	add.s64 	%rd937, %rd926, %rd936;
	add.s64 	%rd938, %rd937, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8912,%dummy}, %rd927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8913}, %rd927;
	}
	shf.r.wrap.b32 	%r8914, %r8913, %r8912, 14;
	shf.r.wrap.b32 	%r8915, %r8912, %r8913, 14;
	mov.b64 	%rd939, {%r8915, %r8914};
	shf.r.wrap.b32 	%r8916, %r8913, %r8912, 18;
	shf.r.wrap.b32 	%r8917, %r8912, %r8913, 18;
	mov.b64 	%rd940, {%r8917, %r8916};
	xor.b64  	%rd941, %rd940, %rd939;
	shf.l.wrap.b32 	%r8918, %r8912, %r8913, 23;
	shf.l.wrap.b32 	%r8919, %r8913, %r8912, 23;
	mov.b64 	%rd942, {%r8919, %r8918};
	xor.b64  	%rd943, %rd941, %rd942;
	xor.b64  	%rd944, %rd902, %rd877;
	and.b64  	%rd945, %rd927, %rd944;
	xor.b64  	%rd946, %rd945, %rd877;
	add.s64 	%rd947, %rd852, %rd659;
	add.s64 	%rd949, %rd947, %rd25;
	add.s64 	%rd950, %rd949, %rd946;
	add.s64 	%rd951, %rd950, %rd943;
	add.s64 	%rd952, %rd951, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8920,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8921}, %rd938;
	}
	shf.r.wrap.b32 	%r8922, %r8921, %r8920, 28;
	shf.r.wrap.b32 	%r8923, %r8920, %r8921, 28;
	mov.b64 	%rd953, {%r8923, %r8922};
	shf.l.wrap.b32 	%r8924, %r8920, %r8921, 30;
	shf.l.wrap.b32 	%r8925, %r8921, %r8920, 30;
	mov.b64 	%rd954, {%r8925, %r8924};
	xor.b64  	%rd955, %rd954, %rd953;
	shf.l.wrap.b32 	%r8926, %r8920, %r8921, 25;
	shf.l.wrap.b32 	%r8927, %r8921, %r8920, 25;
	mov.b64 	%rd956, {%r8927, %r8926};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd938, %rd888;
	xor.b64  	%rd959, %rd938, %rd913;
	and.b64  	%rd960, %rd959, %rd958;
	xor.b64  	%rd961, %rd960, %rd938;
	add.s64 	%rd962, %rd951, %rd961;
	add.s64 	%rd963, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8928,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8929}, %rd952;
	}
	shf.r.wrap.b32 	%r8930, %r8929, %r8928, 14;
	shf.r.wrap.b32 	%r8931, %r8928, %r8929, 14;
	mov.b64 	%rd964, {%r8931, %r8930};
	shf.r.wrap.b32 	%r8932, %r8929, %r8928, 18;
	shf.r.wrap.b32 	%r8933, %r8928, %r8929, 18;
	mov.b64 	%rd965, {%r8933, %r8932};
	xor.b64  	%rd966, %rd965, %rd964;
	shf.l.wrap.b32 	%r8934, %r8928, %r8929, 23;
	shf.l.wrap.b32 	%r8935, %r8929, %r8928, 23;
	mov.b64 	%rd967, {%r8935, %r8934};
	xor.b64  	%rd968, %rd966, %rd967;
	xor.b64  	%rd969, %rd927, %rd902;
	and.b64  	%rd970, %rd952, %rd969;
	xor.b64  	%rd971, %rd970, %rd902;
	add.s64 	%rd972, %rd877, %rd672;
	add.s64 	%rd974, %rd972, %rd26;
	add.s64 	%rd975, %rd974, %rd971;
	add.s64 	%rd976, %rd975, %rd968;
	add.s64 	%rd977, %rd976, %rd888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8936,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8937}, %rd963;
	}
	shf.r.wrap.b32 	%r8938, %r8937, %r8936, 28;
	shf.r.wrap.b32 	%r8939, %r8936, %r8937, 28;
	mov.b64 	%rd978, {%r8939, %r8938};
	shf.l.wrap.b32 	%r8940, %r8936, %r8937, 30;
	shf.l.wrap.b32 	%r8941, %r8937, %r8936, 30;
	mov.b64 	%rd979, {%r8941, %r8940};
	xor.b64  	%rd980, %rd979, %rd978;
	shf.l.wrap.b32 	%r8942, %r8936, %r8937, 25;
	shf.l.wrap.b32 	%r8943, %r8937, %r8936, 25;
	mov.b64 	%rd981, {%r8943, %r8942};
	xor.b64  	%rd982, %rd980, %rd981;
	xor.b64  	%rd983, %rd963, %rd913;
	xor.b64  	%rd984, %rd963, %rd938;
	and.b64  	%rd985, %rd984, %rd983;
	xor.b64  	%rd986, %rd985, %rd963;
	add.s64 	%rd987, %rd976, %rd986;
	add.s64 	%rd988, %rd987, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8944,%dummy}, %rd977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8945}, %rd977;
	}
	shf.r.wrap.b32 	%r8946, %r8945, %r8944, 14;
	shf.r.wrap.b32 	%r8947, %r8944, %r8945, 14;
	mov.b64 	%rd989, {%r8947, %r8946};
	shf.r.wrap.b32 	%r8948, %r8945, %r8944, 18;
	shf.r.wrap.b32 	%r8949, %r8944, %r8945, 18;
	mov.b64 	%rd990, {%r8949, %r8948};
	xor.b64  	%rd991, %rd990, %rd989;
	shf.l.wrap.b32 	%r8950, %r8944, %r8945, 23;
	shf.l.wrap.b32 	%r8951, %r8945, %r8944, 23;
	mov.b64 	%rd992, {%r8951, %r8950};
	xor.b64  	%rd993, %rd991, %rd992;
	xor.b64  	%rd994, %rd952, %rd927;
	and.b64  	%rd995, %rd977, %rd994;
	xor.b64  	%rd996, %rd995, %rd927;
	add.s64 	%rd997, %rd902, %rd685;
	add.s64 	%rd999, %rd997, %rd27;
	add.s64 	%rd1000, %rd999, %rd996;
	add.s64 	%rd1001, %rd1000, %rd993;
	add.s64 	%rd1002, %rd1001, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8952,%dummy}, %rd988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8953}, %rd988;
	}
	shf.r.wrap.b32 	%r8954, %r8953, %r8952, 28;
	shf.r.wrap.b32 	%r8955, %r8952, %r8953, 28;
	mov.b64 	%rd1003, {%r8955, %r8954};
	shf.l.wrap.b32 	%r8956, %r8952, %r8953, 30;
	shf.l.wrap.b32 	%r8957, %r8953, %r8952, 30;
	mov.b64 	%rd1004, {%r8957, %r8956};
	xor.b64  	%rd1005, %rd1004, %rd1003;
	shf.l.wrap.b32 	%r8958, %r8952, %r8953, 25;
	shf.l.wrap.b32 	%r8959, %r8953, %r8952, 25;
	mov.b64 	%rd1006, {%r8959, %r8958};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	xor.b64  	%rd1008, %rd988, %rd938;
	xor.b64  	%rd1009, %rd988, %rd963;
	and.b64  	%rd1010, %rd1009, %rd1008;
	xor.b64  	%rd1011, %rd1010, %rd988;
	add.s64 	%rd1012, %rd1001, %rd1011;
	add.s64 	%rd1013, %rd1012, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8960,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8961}, %rd1002;
	}
	shf.r.wrap.b32 	%r8962, %r8961, %r8960, 14;
	shf.r.wrap.b32 	%r8963, %r8960, %r8961, 14;
	mov.b64 	%rd1014, {%r8963, %r8962};
	shf.r.wrap.b32 	%r8964, %r8961, %r8960, 18;
	shf.r.wrap.b32 	%r8965, %r8960, %r8961, 18;
	mov.b64 	%rd1015, {%r8965, %r8964};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.l.wrap.b32 	%r8966, %r8960, %r8961, 23;
	shf.l.wrap.b32 	%r8967, %r8961, %r8960, 23;
	mov.b64 	%rd1017, {%r8967, %r8966};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	xor.b64  	%rd1019, %rd977, %rd952;
	and.b64  	%rd1020, %rd1002, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd952;
	add.s64 	%rd1022, %rd927, %rd698;
	add.s64 	%rd1024, %rd1022, %rd28;
	add.s64 	%rd1025, %rd1024, %rd1021;
	add.s64 	%rd1026, %rd1025, %rd1018;
	add.s64 	%rd1027, %rd1026, %rd938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8968,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8969}, %rd1013;
	}
	shf.r.wrap.b32 	%r8970, %r8969, %r8968, 28;
	shf.r.wrap.b32 	%r8971, %r8968, %r8969, 28;
	mov.b64 	%rd1028, {%r8971, %r8970};
	shf.l.wrap.b32 	%r8972, %r8968, %r8969, 30;
	shf.l.wrap.b32 	%r8973, %r8969, %r8968, 30;
	mov.b64 	%rd1029, {%r8973, %r8972};
	xor.b64  	%rd1030, %rd1029, %rd1028;
	shf.l.wrap.b32 	%r8974, %r8968, %r8969, 25;
	shf.l.wrap.b32 	%r8975, %r8969, %r8968, 25;
	mov.b64 	%rd1031, {%r8975, %r8974};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	xor.b64  	%rd1033, %rd1013, %rd963;
	xor.b64  	%rd1034, %rd1013, %rd988;
	and.b64  	%rd1035, %rd1034, %rd1033;
	xor.b64  	%rd1036, %rd1035, %rd1013;
	add.s64 	%rd1037, %rd1026, %rd1036;
	add.s64 	%rd1038, %rd1037, %rd1032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8976,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8977}, %rd1027;
	}
	shf.r.wrap.b32 	%r8978, %r8977, %r8976, 14;
	shf.r.wrap.b32 	%r8979, %r8976, %r8977, 14;
	mov.b64 	%rd1039, {%r8979, %r8978};
	shf.r.wrap.b32 	%r8980, %r8977, %r8976, 18;
	shf.r.wrap.b32 	%r8981, %r8976, %r8977, 18;
	mov.b64 	%rd1040, {%r8981, %r8980};
	xor.b64  	%rd1041, %rd1040, %rd1039;
	shf.l.wrap.b32 	%r8982, %r8976, %r8977, 23;
	shf.l.wrap.b32 	%r8983, %r8977, %r8976, 23;
	mov.b64 	%rd1042, {%r8983, %r8982};
	xor.b64  	%rd1043, %rd1041, %rd1042;
	xor.b64  	%rd1044, %rd1002, %rd977;
	and.b64  	%rd1045, %rd1027, %rd1044;
	xor.b64  	%rd1046, %rd1045, %rd977;
	add.s64 	%rd1047, %rd952, %rd711;
	add.s64 	%rd1049, %rd1047, %rd29;
	add.s64 	%rd1050, %rd1049, %rd1046;
	add.s64 	%rd1051, %rd1050, %rd1043;
	add.s64 	%rd1052, %rd1051, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8984,%dummy}, %rd1038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8985}, %rd1038;
	}
	shf.r.wrap.b32 	%r8986, %r8985, %r8984, 28;
	shf.r.wrap.b32 	%r8987, %r8984, %r8985, 28;
	mov.b64 	%rd1053, {%r8987, %r8986};
	shf.l.wrap.b32 	%r8988, %r8984, %r8985, 30;
	shf.l.wrap.b32 	%r8989, %r8985, %r8984, 30;
	mov.b64 	%rd1054, {%r8989, %r8988};
	xor.b64  	%rd1055, %rd1054, %rd1053;
	shf.l.wrap.b32 	%r8990, %r8984, %r8985, 25;
	shf.l.wrap.b32 	%r8991, %r8985, %r8984, 25;
	mov.b64 	%rd1056, {%r8991, %r8990};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	xor.b64  	%rd1058, %rd1038, %rd988;
	xor.b64  	%rd1059, %rd1038, %rd1013;
	and.b64  	%rd1060, %rd1059, %rd1058;
	xor.b64  	%rd1061, %rd1060, %rd1038;
	add.s64 	%rd1062, %rd1051, %rd1061;
	add.s64 	%rd1063, %rd1062, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8992,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8993}, %rd1052;
	}
	shf.r.wrap.b32 	%r8994, %r8993, %r8992, 14;
	shf.r.wrap.b32 	%r8995, %r8992, %r8993, 14;
	mov.b64 	%rd1064, {%r8995, %r8994};
	shf.r.wrap.b32 	%r8996, %r8993, %r8992, 18;
	shf.r.wrap.b32 	%r8997, %r8992, %r8993, 18;
	mov.b64 	%rd1065, {%r8997, %r8996};
	xor.b64  	%rd1066, %rd1065, %rd1064;
	shf.l.wrap.b32 	%r8998, %r8992, %r8993, 23;
	shf.l.wrap.b32 	%r8999, %r8993, %r8992, 23;
	mov.b64 	%rd1067, {%r8999, %r8998};
	xor.b64  	%rd1068, %rd1066, %rd1067;
	xor.b64  	%rd1069, %rd1027, %rd1002;
	and.b64  	%rd1070, %rd1052, %rd1069;
	xor.b64  	%rd1071, %rd1070, %rd1002;
	add.s64 	%rd1072, %rd977, %rd724;
	add.s64 	%rd1074, %rd1072, %rd30;
	add.s64 	%rd1075, %rd1074, %rd1071;
	add.s64 	%rd1076, %rd1075, %rd1068;
	add.s64 	%rd1077, %rd1076, %rd988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9000,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9001}, %rd1063;
	}
	shf.r.wrap.b32 	%r9002, %r9001, %r9000, 28;
	shf.r.wrap.b32 	%r9003, %r9000, %r9001, 28;
	mov.b64 	%rd1078, {%r9003, %r9002};
	shf.l.wrap.b32 	%r9004, %r9000, %r9001, 30;
	shf.l.wrap.b32 	%r9005, %r9001, %r9000, 30;
	mov.b64 	%rd1079, {%r9005, %r9004};
	xor.b64  	%rd1080, %rd1079, %rd1078;
	shf.l.wrap.b32 	%r9006, %r9000, %r9001, 25;
	shf.l.wrap.b32 	%r9007, %r9001, %r9000, 25;
	mov.b64 	%rd1081, {%r9007, %r9006};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	xor.b64  	%rd1083, %rd1063, %rd1013;
	xor.b64  	%rd1084, %rd1063, %rd1038;
	and.b64  	%rd1085, %rd1084, %rd1083;
	xor.b64  	%rd1086, %rd1085, %rd1063;
	add.s64 	%rd1087, %rd1076, %rd1086;
	add.s64 	%rd1088, %rd1087, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9008,%dummy}, %rd1077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9009}, %rd1077;
	}
	shf.r.wrap.b32 	%r9010, %r9009, %r9008, 14;
	shf.r.wrap.b32 	%r9011, %r9008, %r9009, 14;
	mov.b64 	%rd1089, {%r9011, %r9010};
	shf.r.wrap.b32 	%r9012, %r9009, %r9008, 18;
	shf.r.wrap.b32 	%r9013, %r9008, %r9009, 18;
	mov.b64 	%rd1090, {%r9013, %r9012};
	xor.b64  	%rd1091, %rd1090, %rd1089;
	shf.l.wrap.b32 	%r9014, %r9008, %r9009, 23;
	shf.l.wrap.b32 	%r9015, %r9009, %r9008, 23;
	mov.b64 	%rd1092, {%r9015, %r9014};
	xor.b64  	%rd1093, %rd1091, %rd1092;
	xor.b64  	%rd1094, %rd1052, %rd1027;
	and.b64  	%rd1095, %rd1077, %rd1094;
	xor.b64  	%rd1096, %rd1095, %rd1027;
	add.s64 	%rd1097, %rd1002, %rd737;
	add.s64 	%rd1099, %rd1097, %rd31;
	add.s64 	%rd1100, %rd1099, %rd1096;
	add.s64 	%rd1101, %rd1100, %rd1093;
	add.s64 	%rd1102, %rd1101, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9016,%dummy}, %rd1088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9017}, %rd1088;
	}
	shf.r.wrap.b32 	%r9018, %r9017, %r9016, 28;
	shf.r.wrap.b32 	%r9019, %r9016, %r9017, 28;
	mov.b64 	%rd1103, {%r9019, %r9018};
	shf.l.wrap.b32 	%r9020, %r9016, %r9017, 30;
	shf.l.wrap.b32 	%r9021, %r9017, %r9016, 30;
	mov.b64 	%rd1104, {%r9021, %r9020};
	xor.b64  	%rd1105, %rd1104, %rd1103;
	shf.l.wrap.b32 	%r9022, %r9016, %r9017, 25;
	shf.l.wrap.b32 	%r9023, %r9017, %r9016, 25;
	mov.b64 	%rd1106, {%r9023, %r9022};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	xor.b64  	%rd1108, %rd1088, %rd1038;
	xor.b64  	%rd1109, %rd1088, %rd1063;
	and.b64  	%rd1110, %rd1109, %rd1108;
	xor.b64  	%rd1111, %rd1110, %rd1088;
	add.s64 	%rd1112, %rd1101, %rd1111;
	add.s64 	%rd1113, %rd1112, %rd1107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9024,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9025}, %rd1102;
	}
	shf.r.wrap.b32 	%r9026, %r9025, %r9024, 14;
	shf.r.wrap.b32 	%r9027, %r9024, %r9025, 14;
	mov.b64 	%rd1114, {%r9027, %r9026};
	shf.r.wrap.b32 	%r9028, %r9025, %r9024, 18;
	shf.r.wrap.b32 	%r9029, %r9024, %r9025, 18;
	mov.b64 	%rd1115, {%r9029, %r9028};
	xor.b64  	%rd1116, %rd1115, %rd1114;
	shf.l.wrap.b32 	%r9030, %r9024, %r9025, 23;
	shf.l.wrap.b32 	%r9031, %r9025, %r9024, 23;
	mov.b64 	%rd1117, {%r9031, %r9030};
	xor.b64  	%rd1118, %rd1116, %rd1117;
	xor.b64  	%rd1119, %rd1077, %rd1052;
	and.b64  	%rd1120, %rd1102, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1052;
	add.s64 	%rd1122, %rd1027, %rd750;
	add.s64 	%rd1124, %rd1122, %rd32;
	add.s64 	%rd1125, %rd1124, %rd1121;
	add.s64 	%rd1126, %rd1125, %rd1118;
	add.s64 	%rd1127, %rd1126, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9032,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9033}, %rd1113;
	}
	shf.r.wrap.b32 	%r9034, %r9033, %r9032, 28;
	shf.r.wrap.b32 	%r9035, %r9032, %r9033, 28;
	mov.b64 	%rd1128, {%r9035, %r9034};
	shf.l.wrap.b32 	%r9036, %r9032, %r9033, 30;
	shf.l.wrap.b32 	%r9037, %r9033, %r9032, 30;
	mov.b64 	%rd1129, {%r9037, %r9036};
	xor.b64  	%rd1130, %rd1129, %rd1128;
	shf.l.wrap.b32 	%r9038, %r9032, %r9033, 25;
	shf.l.wrap.b32 	%r9039, %r9033, %r9032, 25;
	mov.b64 	%rd1131, {%r9039, %r9038};
	xor.b64  	%rd1132, %rd1130, %rd1131;
	xor.b64  	%rd1133, %rd1113, %rd1063;
	xor.b64  	%rd1134, %rd1113, %rd1088;
	and.b64  	%rd1135, %rd1134, %rd1133;
	xor.b64  	%rd1136, %rd1135, %rd1113;
	add.s64 	%rd1137, %rd1126, %rd1136;
	add.s64 	%rd1138, %rd1137, %rd1132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9040,%dummy}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9041}, %rd1127;
	}
	shf.r.wrap.b32 	%r9042, %r9041, %r9040, 14;
	shf.r.wrap.b32 	%r9043, %r9040, %r9041, 14;
	mov.b64 	%rd1139, {%r9043, %r9042};
	shf.r.wrap.b32 	%r9044, %r9041, %r9040, 18;
	shf.r.wrap.b32 	%r9045, %r9040, %r9041, 18;
	mov.b64 	%rd1140, {%r9045, %r9044};
	xor.b64  	%rd1141, %rd1140, %rd1139;
	shf.l.wrap.b32 	%r9046, %r9040, %r9041, 23;
	shf.l.wrap.b32 	%r9047, %r9041, %r9040, 23;
	mov.b64 	%rd1142, {%r9047, %r9046};
	xor.b64  	%rd1143, %rd1141, %rd1142;
	xor.b64  	%rd1144, %rd1102, %rd1077;
	and.b64  	%rd1145, %rd1127, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1077;
	add.s64 	%rd1147, %rd1052, %rd763;
	add.s64 	%rd1149, %rd1147, %rd33;
	add.s64 	%rd1150, %rd1149, %rd1146;
	add.s64 	%rd1151, %rd1150, %rd1143;
	add.s64 	%rd1152, %rd1151, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9048,%dummy}, %rd1138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9049}, %rd1138;
	}
	shf.r.wrap.b32 	%r9050, %r9049, %r9048, 28;
	shf.r.wrap.b32 	%r9051, %r9048, %r9049, 28;
	mov.b64 	%rd1153, {%r9051, %r9050};
	shf.l.wrap.b32 	%r9052, %r9048, %r9049, 30;
	shf.l.wrap.b32 	%r9053, %r9049, %r9048, 30;
	mov.b64 	%rd1154, {%r9053, %r9052};
	xor.b64  	%rd1155, %rd1154, %rd1153;
	shf.l.wrap.b32 	%r9054, %r9048, %r9049, 25;
	shf.l.wrap.b32 	%r9055, %r9049, %r9048, 25;
	mov.b64 	%rd1156, {%r9055, %r9054};
	xor.b64  	%rd1157, %rd1155, %rd1156;
	xor.b64  	%rd1158, %rd1138, %rd1088;
	xor.b64  	%rd1159, %rd1138, %rd1113;
	and.b64  	%rd1160, %rd1159, %rd1158;
	xor.b64  	%rd1161, %rd1160, %rd1138;
	add.s64 	%rd1162, %rd1151, %rd1161;
	add.s64 	%rd1163, %rd1162, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9056,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9057}, %rd750;
	}
	shf.r.wrap.b32 	%r9058, %r9057, %r9056, 19;
	shf.r.wrap.b32 	%r9059, %r9056, %r9057, 19;
	mov.b64 	%rd1164, {%r9059, %r9058};
	shf.l.wrap.b32 	%r9060, %r9056, %r9057, 3;
	shf.l.wrap.b32 	%r9061, %r9057, %r9056, 3;
	mov.b64 	%rd1165, {%r9061, %r9060};
	shr.u64 	%rd1166, %rd750, 6;
	xor.b64  	%rd1167, %rd1164, %rd1166;
	xor.b64  	%rd1168, %rd1167, %rd1165;
	shf.r.wrap.b32 	%r9062, %r8651, %r8650, 1;
	shf.r.wrap.b32 	%r9063, %r8650, %r8651, 1;
	mov.b64 	%rd1169, {%r9063, %r9062};
	shf.r.wrap.b32 	%r9064, %r8651, %r8650, 8;
	shf.r.wrap.b32 	%r9065, %r8650, %r8651, 8;
	mov.b64 	%rd1170, {%r9065, %r9064};
	shr.u64 	%rd1171, %rd581, 7;
	xor.b64  	%rd1172, %rd1169, %rd1171;
	xor.b64  	%rd1173, %rd1172, %rd1170;
	add.s64 	%rd1174, %rd685, %rd568;
	add.s64 	%rd1175, %rd1174, %rd1168;
	add.s64 	%rd1176, %rd1175, %rd1173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9066,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9067}, %rd763;
	}
	shf.r.wrap.b32 	%r9068, %r9067, %r9066, 19;
	shf.r.wrap.b32 	%r9069, %r9066, %r9067, 19;
	mov.b64 	%rd1177, {%r9069, %r9068};
	shf.l.wrap.b32 	%r9070, %r9066, %r9067, 3;
	shf.l.wrap.b32 	%r9071, %r9067, %r9066, 3;
	mov.b64 	%rd1178, {%r9071, %r9070};
	shr.u64 	%rd1179, %rd763, 6;
	xor.b64  	%rd1180, %rd1177, %rd1179;
	xor.b64  	%rd1181, %rd1180, %rd1178;
	shf.r.wrap.b32 	%r9072, %r8663, %r8662, 1;
	shf.r.wrap.b32 	%r9073, %r8662, %r8663, 1;
	mov.b64 	%rd1182, {%r9073, %r9072};
	shf.r.wrap.b32 	%r9074, %r8663, %r8662, 8;
	shf.r.wrap.b32 	%r9075, %r8662, %r8663, 8;
	mov.b64 	%rd1183, {%r9075, %r9074};
	shr.u64 	%rd1184, %rd594, 7;
	xor.b64  	%rd1185, %rd1182, %rd1184;
	xor.b64  	%rd1186, %rd1185, %rd1183;
	add.s64 	%rd1187, %rd698, %rd581;
	add.s64 	%rd1188, %rd1187, %rd1181;
	add.s64 	%rd1189, %rd1188, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9076,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9077}, %rd1176;
	}
	shf.r.wrap.b32 	%r9078, %r9077, %r9076, 19;
	shf.r.wrap.b32 	%r9079, %r9076, %r9077, 19;
	mov.b64 	%rd1190, {%r9079, %r9078};
	shf.l.wrap.b32 	%r9080, %r9076, %r9077, 3;
	shf.l.wrap.b32 	%r9081, %r9077, %r9076, 3;
	mov.b64 	%rd1191, {%r9081, %r9080};
	shr.u64 	%rd1192, %rd1176, 6;
	xor.b64  	%rd1193, %rd1190, %rd1192;
	xor.b64  	%rd1194, %rd1193, %rd1191;
	shf.r.wrap.b32 	%r9082, %r8675, %r8674, 1;
	shf.r.wrap.b32 	%r9083, %r8674, %r8675, 1;
	mov.b64 	%rd1195, {%r9083, %r9082};
	shf.r.wrap.b32 	%r9084, %r8675, %r8674, 8;
	shf.r.wrap.b32 	%r9085, %r8674, %r8675, 8;
	mov.b64 	%rd1196, {%r9085, %r9084};
	shr.u64 	%rd1197, %rd607, 7;
	xor.b64  	%rd1198, %rd1195, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1196;
	add.s64 	%rd1200, %rd711, %rd594;
	add.s64 	%rd1201, %rd1200, %rd1194;
	add.s64 	%rd1202, %rd1201, %rd1199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9086,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9087}, %rd1189;
	}
	shf.r.wrap.b32 	%r9088, %r9087, %r9086, 19;
	shf.r.wrap.b32 	%r9089, %r9086, %r9087, 19;
	mov.b64 	%rd1203, {%r9089, %r9088};
	shf.l.wrap.b32 	%r9090, %r9086, %r9087, 3;
	shf.l.wrap.b32 	%r9091, %r9087, %r9086, 3;
	mov.b64 	%rd1204, {%r9091, %r9090};
	shr.u64 	%rd1205, %rd1189, 6;
	xor.b64  	%rd1206, %rd1203, %rd1205;
	xor.b64  	%rd1207, %rd1206, %rd1204;
	shf.r.wrap.b32 	%r9092, %r8687, %r8686, 1;
	shf.r.wrap.b32 	%r9093, %r8686, %r8687, 1;
	mov.b64 	%rd1208, {%r9093, %r9092};
	shf.r.wrap.b32 	%r9094, %r8687, %r8686, 8;
	shf.r.wrap.b32 	%r9095, %r8686, %r8687, 8;
	mov.b64 	%rd1209, {%r9095, %r9094};
	shr.u64 	%rd1210, %rd620, 7;
	xor.b64  	%rd1211, %rd1208, %rd1210;
	xor.b64  	%rd1212, %rd1211, %rd1209;
	add.s64 	%rd1213, %rd724, %rd607;
	add.s64 	%rd1214, %rd1213, %rd1207;
	add.s64 	%rd1215, %rd1214, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9096,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9097}, %rd1202;
	}
	shf.r.wrap.b32 	%r9098, %r9097, %r9096, 19;
	shf.r.wrap.b32 	%r9099, %r9096, %r9097, 19;
	mov.b64 	%rd1216, {%r9099, %r9098};
	shf.l.wrap.b32 	%r9100, %r9096, %r9097, 3;
	shf.l.wrap.b32 	%r9101, %r9097, %r9096, 3;
	mov.b64 	%rd1217, {%r9101, %r9100};
	shr.u64 	%rd1218, %rd1202, 6;
	xor.b64  	%rd1219, %rd1216, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1217;
	shf.r.wrap.b32 	%r9102, %r8699, %r8698, 1;
	shf.r.wrap.b32 	%r9103, %r8698, %r8699, 1;
	mov.b64 	%rd1221, {%r9103, %r9102};
	shf.r.wrap.b32 	%r9104, %r8699, %r8698, 8;
	shf.r.wrap.b32 	%r9105, %r8698, %r8699, 8;
	mov.b64 	%rd1222, {%r9105, %r9104};
	shr.u64 	%rd1223, %rd633, 7;
	xor.b64  	%rd1224, %rd1221, %rd1223;
	xor.b64  	%rd1225, %rd1224, %rd1222;
	add.s64 	%rd1226, %rd737, %rd620;
	add.s64 	%rd1227, %rd1226, %rd1220;
	add.s64 	%rd1228, %rd1227, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9106,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9107}, %rd1215;
	}
	shf.r.wrap.b32 	%r9108, %r9107, %r9106, 19;
	shf.r.wrap.b32 	%r9109, %r9106, %r9107, 19;
	mov.b64 	%rd1229, {%r9109, %r9108};
	shf.l.wrap.b32 	%r9110, %r9106, %r9107, 3;
	shf.l.wrap.b32 	%r9111, %r9107, %r9106, 3;
	mov.b64 	%rd1230, {%r9111, %r9110};
	shr.u64 	%rd1231, %rd1215, 6;
	xor.b64  	%rd1232, %rd1229, %rd1231;
	xor.b64  	%rd1233, %rd1232, %rd1230;
	shf.r.wrap.b32 	%r9112, %r8711, %r8710, 1;
	shf.r.wrap.b32 	%r9113, %r8710, %r8711, 1;
	mov.b64 	%rd1234, {%r9113, %r9112};
	shf.r.wrap.b32 	%r9114, %r8711, %r8710, 8;
	shf.r.wrap.b32 	%r9115, %r8710, %r8711, 8;
	mov.b64 	%rd1235, {%r9115, %r9114};
	shr.u64 	%rd1236, %rd646, 7;
	xor.b64  	%rd1237, %rd1234, %rd1236;
	xor.b64  	%rd1238, %rd1237, %rd1235;
	add.s64 	%rd1239, %rd750, %rd633;
	add.s64 	%rd1240, %rd1239, %rd1233;
	add.s64 	%rd1241, %rd1240, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9116,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9117}, %rd1228;
	}
	shf.r.wrap.b32 	%r9118, %r9117, %r9116, 19;
	shf.r.wrap.b32 	%r9119, %r9116, %r9117, 19;
	mov.b64 	%rd1242, {%r9119, %r9118};
	shf.l.wrap.b32 	%r9120, %r9116, %r9117, 3;
	shf.l.wrap.b32 	%r9121, %r9117, %r9116, 3;
	mov.b64 	%rd1243, {%r9121, %r9120};
	shr.u64 	%rd1244, %rd1228, 6;
	xor.b64  	%rd1245, %rd1242, %rd1244;
	xor.b64  	%rd1246, %rd1245, %rd1243;
	shf.r.wrap.b32 	%r9122, %r8723, %r8722, 1;
	shf.r.wrap.b32 	%r9123, %r8722, %r8723, 1;
	mov.b64 	%rd1247, {%r9123, %r9122};
	shf.r.wrap.b32 	%r9124, %r8723, %r8722, 8;
	shf.r.wrap.b32 	%r9125, %r8722, %r8723, 8;
	mov.b64 	%rd1248, {%r9125, %r9124};
	shr.u64 	%rd1249, %rd659, 7;
	xor.b64  	%rd1250, %rd1247, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd1248;
	add.s64 	%rd1252, %rd763, %rd646;
	add.s64 	%rd1253, %rd1252, %rd1246;
	add.s64 	%rd1254, %rd1253, %rd1251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9126,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9127}, %rd1241;
	}
	shf.r.wrap.b32 	%r9128, %r9127, %r9126, 19;
	shf.r.wrap.b32 	%r9129, %r9126, %r9127, 19;
	mov.b64 	%rd1255, {%r9129, %r9128};
	shf.l.wrap.b32 	%r9130, %r9126, %r9127, 3;
	shf.l.wrap.b32 	%r9131, %r9127, %r9126, 3;
	mov.b64 	%rd1256, {%r9131, %r9130};
	shr.u64 	%rd1257, %rd1241, 6;
	xor.b64  	%rd1258, %rd1255, %rd1257;
	xor.b64  	%rd1259, %rd1258, %rd1256;
	shf.r.wrap.b32 	%r9132, %r8735, %r8734, 1;
	shf.r.wrap.b32 	%r9133, %r8734, %r8735, 1;
	mov.b64 	%rd1260, {%r9133, %r9132};
	shf.r.wrap.b32 	%r9134, %r8735, %r8734, 8;
	shf.r.wrap.b32 	%r9135, %r8734, %r8735, 8;
	mov.b64 	%rd1261, {%r9135, %r9134};
	shr.u64 	%rd1262, %rd672, 7;
	xor.b64  	%rd1263, %rd1260, %rd1262;
	xor.b64  	%rd1264, %rd1263, %rd1261;
	add.s64 	%rd1265, %rd1176, %rd659;
	add.s64 	%rd1266, %rd1265, %rd1259;
	add.s64 	%rd1267, %rd1266, %rd1264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9136,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9137}, %rd1254;
	}
	shf.r.wrap.b32 	%r9138, %r9137, %r9136, 19;
	shf.r.wrap.b32 	%r9139, %r9136, %r9137, 19;
	mov.b64 	%rd1268, {%r9139, %r9138};
	shf.l.wrap.b32 	%r9140, %r9136, %r9137, 3;
	shf.l.wrap.b32 	%r9141, %r9137, %r9136, 3;
	mov.b64 	%rd1269, {%r9141, %r9140};
	shr.u64 	%rd1270, %rd1254, 6;
	xor.b64  	%rd1271, %rd1268, %rd1270;
	xor.b64  	%rd1272, %rd1271, %rd1269;
	shf.r.wrap.b32 	%r9142, %r8747, %r8746, 1;
	shf.r.wrap.b32 	%r9143, %r8746, %r8747, 1;
	mov.b64 	%rd1273, {%r9143, %r9142};
	shf.r.wrap.b32 	%r9144, %r8747, %r8746, 8;
	shf.r.wrap.b32 	%r9145, %r8746, %r8747, 8;
	mov.b64 	%rd1274, {%r9145, %r9144};
	shr.u64 	%rd1275, %rd685, 7;
	xor.b64  	%rd1276, %rd1273, %rd1275;
	xor.b64  	%rd1277, %rd1276, %rd1274;
	add.s64 	%rd1278, %rd1189, %rd672;
	add.s64 	%rd1279, %rd1278, %rd1272;
	add.s64 	%rd1280, %rd1279, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9146,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9147}, %rd1267;
	}
	shf.r.wrap.b32 	%r9148, %r9147, %r9146, 19;
	shf.r.wrap.b32 	%r9149, %r9146, %r9147, 19;
	mov.b64 	%rd1281, {%r9149, %r9148};
	shf.l.wrap.b32 	%r9150, %r9146, %r9147, 3;
	shf.l.wrap.b32 	%r9151, %r9147, %r9146, 3;
	mov.b64 	%rd1282, {%r9151, %r9150};
	shr.u64 	%rd1283, %rd1267, 6;
	xor.b64  	%rd1284, %rd1281, %rd1283;
	xor.b64  	%rd1285, %rd1284, %rd1282;
	shf.r.wrap.b32 	%r9152, %r8759, %r8758, 1;
	shf.r.wrap.b32 	%r9153, %r8758, %r8759, 1;
	mov.b64 	%rd1286, {%r9153, %r9152};
	shf.r.wrap.b32 	%r9154, %r8759, %r8758, 8;
	shf.r.wrap.b32 	%r9155, %r8758, %r8759, 8;
	mov.b64 	%rd1287, {%r9155, %r9154};
	shr.u64 	%rd1288, %rd698, 7;
	xor.b64  	%rd1289, %rd1286, %rd1288;
	xor.b64  	%rd1290, %rd1289, %rd1287;
	add.s64 	%rd1291, %rd1202, %rd685;
	add.s64 	%rd1292, %rd1291, %rd1285;
	add.s64 	%rd1293, %rd1292, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9156,%dummy}, %rd1280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9157}, %rd1280;
	}
	shf.r.wrap.b32 	%r9158, %r9157, %r9156, 19;
	shf.r.wrap.b32 	%r9159, %r9156, %r9157, 19;
	mov.b64 	%rd1294, {%r9159, %r9158};
	shf.l.wrap.b32 	%r9160, %r9156, %r9157, 3;
	shf.l.wrap.b32 	%r9161, %r9157, %r9156, 3;
	mov.b64 	%rd1295, {%r9161, %r9160};
	shr.u64 	%rd1296, %rd1280, 6;
	xor.b64  	%rd1297, %rd1294, %rd1296;
	xor.b64  	%rd1298, %rd1297, %rd1295;
	shf.r.wrap.b32 	%r9162, %r8771, %r8770, 1;
	shf.r.wrap.b32 	%r9163, %r8770, %r8771, 1;
	mov.b64 	%rd1299, {%r9163, %r9162};
	shf.r.wrap.b32 	%r9164, %r8771, %r8770, 8;
	shf.r.wrap.b32 	%r9165, %r8770, %r8771, 8;
	mov.b64 	%rd1300, {%r9165, %r9164};
	shr.u64 	%rd1301, %rd711, 7;
	xor.b64  	%rd1302, %rd1299, %rd1301;
	xor.b64  	%rd1303, %rd1302, %rd1300;
	add.s64 	%rd1304, %rd1215, %rd698;
	add.s64 	%rd1305, %rd1304, %rd1298;
	add.s64 	%rd1306, %rd1305, %rd1303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9166,%dummy}, %rd1293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9167}, %rd1293;
	}
	shf.r.wrap.b32 	%r9168, %r9167, %r9166, 19;
	shf.r.wrap.b32 	%r9169, %r9166, %r9167, 19;
	mov.b64 	%rd1307, {%r9169, %r9168};
	shf.l.wrap.b32 	%r9170, %r9166, %r9167, 3;
	shf.l.wrap.b32 	%r9171, %r9167, %r9166, 3;
	mov.b64 	%rd1308, {%r9171, %r9170};
	shr.u64 	%rd1309, %rd1293, 6;
	xor.b64  	%rd1310, %rd1307, %rd1309;
	xor.b64  	%rd1311, %rd1310, %rd1308;
	shf.r.wrap.b32 	%r9172, %r8781, %r8780, 1;
	shf.r.wrap.b32 	%r9173, %r8780, %r8781, 1;
	mov.b64 	%rd1312, {%r9173, %r9172};
	shf.r.wrap.b32 	%r9174, %r8781, %r8780, 8;
	shf.r.wrap.b32 	%r9175, %r8780, %r8781, 8;
	mov.b64 	%rd1313, {%r9175, %r9174};
	shr.u64 	%rd1314, %rd724, 7;
	xor.b64  	%rd1315, %rd1312, %rd1314;
	xor.b64  	%rd1316, %rd1315, %rd1313;
	add.s64 	%rd1317, %rd1228, %rd711;
	add.s64 	%rd1318, %rd1317, %rd1311;
	add.s64 	%rd1319, %rd1318, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9176,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9177}, %rd1306;
	}
	shf.r.wrap.b32 	%r9178, %r9177, %r9176, 19;
	shf.r.wrap.b32 	%r9179, %r9176, %r9177, 19;
	mov.b64 	%rd1320, {%r9179, %r9178};
	shf.l.wrap.b32 	%r9180, %r9176, %r9177, 3;
	shf.l.wrap.b32 	%r9181, %r9177, %r9176, 3;
	mov.b64 	%rd1321, {%r9181, %r9180};
	shr.u64 	%rd1322, %rd1306, 6;
	xor.b64  	%rd1323, %rd1320, %rd1322;
	xor.b64  	%rd1324, %rd1323, %rd1321;
	shf.r.wrap.b32 	%r9182, %r8791, %r8790, 1;
	shf.r.wrap.b32 	%r9183, %r8790, %r8791, 1;
	mov.b64 	%rd1325, {%r9183, %r9182};
	shf.r.wrap.b32 	%r9184, %r8791, %r8790, 8;
	shf.r.wrap.b32 	%r9185, %r8790, %r8791, 8;
	mov.b64 	%rd1326, {%r9185, %r9184};
	shr.u64 	%rd1327, %rd737, 7;
	xor.b64  	%rd1328, %rd1325, %rd1327;
	xor.b64  	%rd1329, %rd1328, %rd1326;
	add.s64 	%rd1330, %rd1241, %rd724;
	add.s64 	%rd1331, %rd1330, %rd1324;
	add.s64 	%rd1332, %rd1331, %rd1329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9186,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9187}, %rd1319;
	}
	shf.r.wrap.b32 	%r9188, %r9187, %r9186, 19;
	shf.r.wrap.b32 	%r9189, %r9186, %r9187, 19;
	mov.b64 	%rd1333, {%r9189, %r9188};
	shf.l.wrap.b32 	%r9190, %r9186, %r9187, 3;
	shf.l.wrap.b32 	%r9191, %r9187, %r9186, 3;
	mov.b64 	%rd1334, {%r9191, %r9190};
	shr.u64 	%rd1335, %rd1319, 6;
	xor.b64  	%rd1336, %rd1333, %rd1335;
	xor.b64  	%rd1337, %rd1336, %rd1334;
	shf.r.wrap.b32 	%r9192, %r9057, %r9056, 1;
	shf.r.wrap.b32 	%r9193, %r9056, %r9057, 1;
	mov.b64 	%rd1338, {%r9193, %r9192};
	shf.r.wrap.b32 	%r9194, %r9057, %r9056, 8;
	shf.r.wrap.b32 	%r9195, %r9056, %r9057, 8;
	mov.b64 	%rd1339, {%r9195, %r9194};
	shr.u64 	%rd1340, %rd750, 7;
	xor.b64  	%rd1341, %rd1338, %rd1340;
	xor.b64  	%rd1342, %rd1341, %rd1339;
	add.s64 	%rd1343, %rd1254, %rd737;
	add.s64 	%rd1344, %rd1343, %rd1337;
	add.s64 	%rd1345, %rd1344, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9196,%dummy}, %rd1332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9197}, %rd1332;
	}
	shf.r.wrap.b32 	%r9198, %r9197, %r9196, 19;
	shf.r.wrap.b32 	%r9199, %r9196, %r9197, 19;
	mov.b64 	%rd1346, {%r9199, %r9198};
	shf.l.wrap.b32 	%r9200, %r9196, %r9197, 3;
	shf.l.wrap.b32 	%r9201, %r9197, %r9196, 3;
	mov.b64 	%rd1347, {%r9201, %r9200};
	shr.u64 	%rd1348, %rd1332, 6;
	xor.b64  	%rd1349, %rd1346, %rd1348;
	xor.b64  	%rd1350, %rd1349, %rd1347;
	shf.r.wrap.b32 	%r9202, %r9067, %r9066, 1;
	shf.r.wrap.b32 	%r9203, %r9066, %r9067, 1;
	mov.b64 	%rd1351, {%r9203, %r9202};
	shf.r.wrap.b32 	%r9204, %r9067, %r9066, 8;
	shf.r.wrap.b32 	%r9205, %r9066, %r9067, 8;
	mov.b64 	%rd1352, {%r9205, %r9204};
	shr.u64 	%rd1353, %rd763, 7;
	xor.b64  	%rd1354, %rd1351, %rd1353;
	xor.b64  	%rd1355, %rd1354, %rd1352;
	add.s64 	%rd1356, %rd1267, %rd750;
	add.s64 	%rd1357, %rd1356, %rd1350;
	add.s64 	%rd1358, %rd1357, %rd1355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9206,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9207}, %rd1345;
	}
	shf.r.wrap.b32 	%r9208, %r9207, %r9206, 19;
	shf.r.wrap.b32 	%r9209, %r9206, %r9207, 19;
	mov.b64 	%rd1359, {%r9209, %r9208};
	shf.l.wrap.b32 	%r9210, %r9206, %r9207, 3;
	shf.l.wrap.b32 	%r9211, %r9207, %r9206, 3;
	mov.b64 	%rd1360, {%r9211, %r9210};
	shr.u64 	%rd1361, %rd1345, 6;
	xor.b64  	%rd1362, %rd1359, %rd1361;
	xor.b64  	%rd1363, %rd1362, %rd1360;
	shf.r.wrap.b32 	%r9212, %r9077, %r9076, 1;
	shf.r.wrap.b32 	%r9213, %r9076, %r9077, 1;
	mov.b64 	%rd1364, {%r9213, %r9212};
	shf.r.wrap.b32 	%r9214, %r9077, %r9076, 8;
	shf.r.wrap.b32 	%r9215, %r9076, %r9077, 8;
	mov.b64 	%rd1365, {%r9215, %r9214};
	shr.u64 	%rd1366, %rd1176, 7;
	xor.b64  	%rd1367, %rd1364, %rd1366;
	xor.b64  	%rd1368, %rd1367, %rd1365;
	add.s64 	%rd1369, %rd1280, %rd763;
	add.s64 	%rd1370, %rd1369, %rd1363;
	add.s64 	%rd1371, %rd1370, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9216,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9217}, %rd1152;
	}
	shf.r.wrap.b32 	%r9218, %r9217, %r9216, 14;
	shf.r.wrap.b32 	%r9219, %r9216, %r9217, 14;
	mov.b64 	%rd1372, {%r9219, %r9218};
	shf.r.wrap.b32 	%r9220, %r9217, %r9216, 18;
	shf.r.wrap.b32 	%r9221, %r9216, %r9217, 18;
	mov.b64 	%rd1373, {%r9221, %r9220};
	xor.b64  	%rd1374, %rd1373, %rd1372;
	shf.l.wrap.b32 	%r9222, %r9216, %r9217, 23;
	shf.l.wrap.b32 	%r9223, %r9217, %r9216, 23;
	mov.b64 	%rd1375, {%r9223, %r9222};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	xor.b64  	%rd1377, %rd1127, %rd1102;
	and.b64  	%rd1378, %rd1152, %rd1377;
	xor.b64  	%rd1379, %rd1378, %rd1102;
	add.s64 	%rd1380, %rd1379, %rd1077;
	add.s64 	%rd1381, %rd1380, %rd1176;
	add.s64 	%rd1383, %rd1381, %rd34;
	add.s64 	%rd1384, %rd1383, %rd1376;
	add.s64 	%rd1385, %rd1384, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9224,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9225}, %rd1163;
	}
	shf.r.wrap.b32 	%r9226, %r9225, %r9224, 28;
	shf.r.wrap.b32 	%r9227, %r9224, %r9225, 28;
	mov.b64 	%rd1386, {%r9227, %r9226};
	shf.l.wrap.b32 	%r9228, %r9224, %r9225, 30;
	shf.l.wrap.b32 	%r9229, %r9225, %r9224, 30;
	mov.b64 	%rd1387, {%r9229, %r9228};
	xor.b64  	%rd1388, %rd1387, %rd1386;
	shf.l.wrap.b32 	%r9230, %r9224, %r9225, 25;
	shf.l.wrap.b32 	%r9231, %r9225, %r9224, 25;
	mov.b64 	%rd1389, {%r9231, %r9230};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	xor.b64  	%rd1391, %rd1163, %rd1113;
	xor.b64  	%rd1392, %rd1163, %rd1138;
	and.b64  	%rd1393, %rd1392, %rd1391;
	xor.b64  	%rd1394, %rd1393, %rd1163;
	add.s64 	%rd1395, %rd1384, %rd1394;
	add.s64 	%rd1396, %rd1395, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9232,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9233}, %rd1385;
	}
	shf.r.wrap.b32 	%r9234, %r9233, %r9232, 14;
	shf.r.wrap.b32 	%r9235, %r9232, %r9233, 14;
	mov.b64 	%rd1397, {%r9235, %r9234};
	shf.r.wrap.b32 	%r9236, %r9233, %r9232, 18;
	shf.r.wrap.b32 	%r9237, %r9232, %r9233, 18;
	mov.b64 	%rd1398, {%r9237, %r9236};
	xor.b64  	%rd1399, %rd1398, %rd1397;
	shf.l.wrap.b32 	%r9238, %r9232, %r9233, 23;
	shf.l.wrap.b32 	%r9239, %r9233, %r9232, 23;
	mov.b64 	%rd1400, {%r9239, %r9238};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	xor.b64  	%rd1402, %rd1152, %rd1127;
	and.b64  	%rd1403, %rd1385, %rd1402;
	xor.b64  	%rd1404, %rd1403, %rd1127;
	add.s64 	%rd1405, %rd1189, %rd1102;
	add.s64 	%rd1407, %rd1405, %rd35;
	add.s64 	%rd1408, %rd1407, %rd1404;
	add.s64 	%rd1409, %rd1408, %rd1401;
	add.s64 	%rd1410, %rd1409, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9240,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9241}, %rd1396;
	}
	shf.r.wrap.b32 	%r9242, %r9241, %r9240, 28;
	shf.r.wrap.b32 	%r9243, %r9240, %r9241, 28;
	mov.b64 	%rd1411, {%r9243, %r9242};
	shf.l.wrap.b32 	%r9244, %r9240, %r9241, 30;
	shf.l.wrap.b32 	%r9245, %r9241, %r9240, 30;
	mov.b64 	%rd1412, {%r9245, %r9244};
	xor.b64  	%rd1413, %rd1412, %rd1411;
	shf.l.wrap.b32 	%r9246, %r9240, %r9241, 25;
	shf.l.wrap.b32 	%r9247, %r9241, %r9240, 25;
	mov.b64 	%rd1414, {%r9247, %r9246};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	xor.b64  	%rd1416, %rd1396, %rd1138;
	xor.b64  	%rd1417, %rd1396, %rd1163;
	and.b64  	%rd1418, %rd1417, %rd1416;
	xor.b64  	%rd1419, %rd1418, %rd1396;
	add.s64 	%rd1420, %rd1409, %rd1419;
	add.s64 	%rd1421, %rd1420, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9248,%dummy}, %rd1410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9249}, %rd1410;
	}
	shf.r.wrap.b32 	%r9250, %r9249, %r9248, 14;
	shf.r.wrap.b32 	%r9251, %r9248, %r9249, 14;
	mov.b64 	%rd1422, {%r9251, %r9250};
	shf.r.wrap.b32 	%r9252, %r9249, %r9248, 18;
	shf.r.wrap.b32 	%r9253, %r9248, %r9249, 18;
	mov.b64 	%rd1423, {%r9253, %r9252};
	xor.b64  	%rd1424, %rd1423, %rd1422;
	shf.l.wrap.b32 	%r9254, %r9248, %r9249, 23;
	shf.l.wrap.b32 	%r9255, %r9249, %r9248, 23;
	mov.b64 	%rd1425, {%r9255, %r9254};
	xor.b64  	%rd1426, %rd1424, %rd1425;
	xor.b64  	%rd1427, %rd1385, %rd1152;
	and.b64  	%rd1428, %rd1410, %rd1427;
	xor.b64  	%rd1429, %rd1428, %rd1152;
	add.s64 	%rd1430, %rd1202, %rd1127;
	add.s64 	%rd1432, %rd1430, %rd36;
	add.s64 	%rd1433, %rd1432, %rd1429;
	add.s64 	%rd1434, %rd1433, %rd1426;
	add.s64 	%rd1435, %rd1434, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9256,%dummy}, %rd1421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9257}, %rd1421;
	}
	shf.r.wrap.b32 	%r9258, %r9257, %r9256, 28;
	shf.r.wrap.b32 	%r9259, %r9256, %r9257, 28;
	mov.b64 	%rd1436, {%r9259, %r9258};
	shf.l.wrap.b32 	%r9260, %r9256, %r9257, 30;
	shf.l.wrap.b32 	%r9261, %r9257, %r9256, 30;
	mov.b64 	%rd1437, {%r9261, %r9260};
	xor.b64  	%rd1438, %rd1437, %rd1436;
	shf.l.wrap.b32 	%r9262, %r9256, %r9257, 25;
	shf.l.wrap.b32 	%r9263, %r9257, %r9256, 25;
	mov.b64 	%rd1439, {%r9263, %r9262};
	xor.b64  	%rd1440, %rd1438, %rd1439;
	xor.b64  	%rd1441, %rd1421, %rd1163;
	xor.b64  	%rd1442, %rd1421, %rd1396;
	and.b64  	%rd1443, %rd1442, %rd1441;
	xor.b64  	%rd1444, %rd1443, %rd1421;
	add.s64 	%rd1445, %rd1434, %rd1444;
	add.s64 	%rd1446, %rd1445, %rd1440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9264,%dummy}, %rd1435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9265}, %rd1435;
	}
	shf.r.wrap.b32 	%r9266, %r9265, %r9264, 14;
	shf.r.wrap.b32 	%r9267, %r9264, %r9265, 14;
	mov.b64 	%rd1447, {%r9267, %r9266};
	shf.r.wrap.b32 	%r9268, %r9265, %r9264, 18;
	shf.r.wrap.b32 	%r9269, %r9264, %r9265, 18;
	mov.b64 	%rd1448, {%r9269, %r9268};
	xor.b64  	%rd1449, %rd1448, %rd1447;
	shf.l.wrap.b32 	%r9270, %r9264, %r9265, 23;
	shf.l.wrap.b32 	%r9271, %r9265, %r9264, 23;
	mov.b64 	%rd1450, {%r9271, %r9270};
	xor.b64  	%rd1451, %rd1449, %rd1450;
	xor.b64  	%rd1452, %rd1410, %rd1385;
	and.b64  	%rd1453, %rd1435, %rd1452;
	xor.b64  	%rd1454, %rd1453, %rd1385;
	add.s64 	%rd1455, %rd1215, %rd1152;
	add.s64 	%rd1457, %rd1455, %rd37;
	add.s64 	%rd1458, %rd1457, %rd1454;
	add.s64 	%rd1459, %rd1458, %rd1451;
	add.s64 	%rd1460, %rd1459, %rd1163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9272,%dummy}, %rd1446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9273}, %rd1446;
	}
	shf.r.wrap.b32 	%r9274, %r9273, %r9272, 28;
	shf.r.wrap.b32 	%r9275, %r9272, %r9273, 28;
	mov.b64 	%rd1461, {%r9275, %r9274};
	shf.l.wrap.b32 	%r9276, %r9272, %r9273, 30;
	shf.l.wrap.b32 	%r9277, %r9273, %r9272, 30;
	mov.b64 	%rd1462, {%r9277, %r9276};
	xor.b64  	%rd1463, %rd1462, %rd1461;
	shf.l.wrap.b32 	%r9278, %r9272, %r9273, 25;
	shf.l.wrap.b32 	%r9279, %r9273, %r9272, 25;
	mov.b64 	%rd1464, {%r9279, %r9278};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	xor.b64  	%rd1466, %rd1446, %rd1396;
	xor.b64  	%rd1467, %rd1446, %rd1421;
	and.b64  	%rd1468, %rd1467, %rd1466;
	xor.b64  	%rd1469, %rd1468, %rd1446;
	add.s64 	%rd1470, %rd1459, %rd1469;
	add.s64 	%rd1471, %rd1470, %rd1465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9280,%dummy}, %rd1460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9281}, %rd1460;
	}
	shf.r.wrap.b32 	%r9282, %r9281, %r9280, 14;
	shf.r.wrap.b32 	%r9283, %r9280, %r9281, 14;
	mov.b64 	%rd1472, {%r9283, %r9282};
	shf.r.wrap.b32 	%r9284, %r9281, %r9280, 18;
	shf.r.wrap.b32 	%r9285, %r9280, %r9281, 18;
	mov.b64 	%rd1473, {%r9285, %r9284};
	xor.b64  	%rd1474, %rd1473, %rd1472;
	shf.l.wrap.b32 	%r9286, %r9280, %r9281, 23;
	shf.l.wrap.b32 	%r9287, %r9281, %r9280, 23;
	mov.b64 	%rd1475, {%r9287, %r9286};
	xor.b64  	%rd1476, %rd1474, %rd1475;
	xor.b64  	%rd1477, %rd1435, %rd1410;
	and.b64  	%rd1478, %rd1460, %rd1477;
	xor.b64  	%rd1479, %rd1478, %rd1410;
	add.s64 	%rd1480, %rd1385, %rd1228;
	add.s64 	%rd1482, %rd1480, %rd38;
	add.s64 	%rd1483, %rd1482, %rd1479;
	add.s64 	%rd1484, %rd1483, %rd1476;
	add.s64 	%rd1485, %rd1484, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9288,%dummy}, %rd1471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9289}, %rd1471;
	}
	shf.r.wrap.b32 	%r9290, %r9289, %r9288, 28;
	shf.r.wrap.b32 	%r9291, %r9288, %r9289, 28;
	mov.b64 	%rd1486, {%r9291, %r9290};
	shf.l.wrap.b32 	%r9292, %r9288, %r9289, 30;
	shf.l.wrap.b32 	%r9293, %r9289, %r9288, 30;
	mov.b64 	%rd1487, {%r9293, %r9292};
	xor.b64  	%rd1488, %rd1487, %rd1486;
	shf.l.wrap.b32 	%r9294, %r9288, %r9289, 25;
	shf.l.wrap.b32 	%r9295, %r9289, %r9288, 25;
	mov.b64 	%rd1489, {%r9295, %r9294};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	xor.b64  	%rd1491, %rd1471, %rd1421;
	xor.b64  	%rd1492, %rd1471, %rd1446;
	and.b64  	%rd1493, %rd1492, %rd1491;
	xor.b64  	%rd1494, %rd1493, %rd1471;
	add.s64 	%rd1495, %rd1484, %rd1494;
	add.s64 	%rd1496, %rd1495, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9296,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9297}, %rd1485;
	}
	shf.r.wrap.b32 	%r9298, %r9297, %r9296, 14;
	shf.r.wrap.b32 	%r9299, %r9296, %r9297, 14;
	mov.b64 	%rd1497, {%r9299, %r9298};
	shf.r.wrap.b32 	%r9300, %r9297, %r9296, 18;
	shf.r.wrap.b32 	%r9301, %r9296, %r9297, 18;
	mov.b64 	%rd1498, {%r9301, %r9300};
	xor.b64  	%rd1499, %rd1498, %rd1497;
	shf.l.wrap.b32 	%r9302, %r9296, %r9297, 23;
	shf.l.wrap.b32 	%r9303, %r9297, %r9296, 23;
	mov.b64 	%rd1500, {%r9303, %r9302};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	xor.b64  	%rd1502, %rd1460, %rd1435;
	and.b64  	%rd1503, %rd1485, %rd1502;
	xor.b64  	%rd1504, %rd1503, %rd1435;
	add.s64 	%rd1505, %rd1410, %rd1241;
	add.s64 	%rd1507, %rd1505, %rd39;
	add.s64 	%rd1508, %rd1507, %rd1504;
	add.s64 	%rd1509, %rd1508, %rd1501;
	add.s64 	%rd1510, %rd1509, %rd1421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9304,%dummy}, %rd1496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9305}, %rd1496;
	}
	shf.r.wrap.b32 	%r9306, %r9305, %r9304, 28;
	shf.r.wrap.b32 	%r9307, %r9304, %r9305, 28;
	mov.b64 	%rd1511, {%r9307, %r9306};
	shf.l.wrap.b32 	%r9308, %r9304, %r9305, 30;
	shf.l.wrap.b32 	%r9309, %r9305, %r9304, 30;
	mov.b64 	%rd1512, {%r9309, %r9308};
	xor.b64  	%rd1513, %rd1512, %rd1511;
	shf.l.wrap.b32 	%r9310, %r9304, %r9305, 25;
	shf.l.wrap.b32 	%r9311, %r9305, %r9304, 25;
	mov.b64 	%rd1514, {%r9311, %r9310};
	xor.b64  	%rd1515, %rd1513, %rd1514;
	xor.b64  	%rd1516, %rd1496, %rd1446;
	xor.b64  	%rd1517, %rd1496, %rd1471;
	and.b64  	%rd1518, %rd1517, %rd1516;
	xor.b64  	%rd1519, %rd1518, %rd1496;
	add.s64 	%rd1520, %rd1509, %rd1519;
	add.s64 	%rd1521, %rd1520, %rd1515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9312,%dummy}, %rd1510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9313}, %rd1510;
	}
	shf.r.wrap.b32 	%r9314, %r9313, %r9312, 14;
	shf.r.wrap.b32 	%r9315, %r9312, %r9313, 14;
	mov.b64 	%rd1522, {%r9315, %r9314};
	shf.r.wrap.b32 	%r9316, %r9313, %r9312, 18;
	shf.r.wrap.b32 	%r9317, %r9312, %r9313, 18;
	mov.b64 	%rd1523, {%r9317, %r9316};
	xor.b64  	%rd1524, %rd1523, %rd1522;
	shf.l.wrap.b32 	%r9318, %r9312, %r9313, 23;
	shf.l.wrap.b32 	%r9319, %r9313, %r9312, 23;
	mov.b64 	%rd1525, {%r9319, %r9318};
	xor.b64  	%rd1526, %rd1524, %rd1525;
	xor.b64  	%rd1527, %rd1485, %rd1460;
	and.b64  	%rd1528, %rd1510, %rd1527;
	xor.b64  	%rd1529, %rd1528, %rd1460;
	add.s64 	%rd1530, %rd1435, %rd1254;
	add.s64 	%rd1532, %rd1530, %rd40;
	add.s64 	%rd1533, %rd1532, %rd1529;
	add.s64 	%rd1534, %rd1533, %rd1526;
	add.s64 	%rd1535, %rd1534, %rd1446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9320,%dummy}, %rd1521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9321}, %rd1521;
	}
	shf.r.wrap.b32 	%r9322, %r9321, %r9320, 28;
	shf.r.wrap.b32 	%r9323, %r9320, %r9321, 28;
	mov.b64 	%rd1536, {%r9323, %r9322};
	shf.l.wrap.b32 	%r9324, %r9320, %r9321, 30;
	shf.l.wrap.b32 	%r9325, %r9321, %r9320, 30;
	mov.b64 	%rd1537, {%r9325, %r9324};
	xor.b64  	%rd1538, %rd1537, %rd1536;
	shf.l.wrap.b32 	%r9326, %r9320, %r9321, 25;
	shf.l.wrap.b32 	%r9327, %r9321, %r9320, 25;
	mov.b64 	%rd1539, {%r9327, %r9326};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	xor.b64  	%rd1541, %rd1521, %rd1471;
	xor.b64  	%rd1542, %rd1521, %rd1496;
	and.b64  	%rd1543, %rd1542, %rd1541;
	xor.b64  	%rd1544, %rd1543, %rd1521;
	add.s64 	%rd1545, %rd1534, %rd1544;
	add.s64 	%rd1546, %rd1545, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9328,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9329}, %rd1535;
	}
	shf.r.wrap.b32 	%r9330, %r9329, %r9328, 14;
	shf.r.wrap.b32 	%r9331, %r9328, %r9329, 14;
	mov.b64 	%rd1547, {%r9331, %r9330};
	shf.r.wrap.b32 	%r9332, %r9329, %r9328, 18;
	shf.r.wrap.b32 	%r9333, %r9328, %r9329, 18;
	mov.b64 	%rd1548, {%r9333, %r9332};
	xor.b64  	%rd1549, %rd1548, %rd1547;
	shf.l.wrap.b32 	%r9334, %r9328, %r9329, 23;
	shf.l.wrap.b32 	%r9335, %r9329, %r9328, 23;
	mov.b64 	%rd1550, {%r9335, %r9334};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	xor.b64  	%rd1552, %rd1510, %rd1485;
	and.b64  	%rd1553, %rd1535, %rd1552;
	xor.b64  	%rd1554, %rd1553, %rd1485;
	add.s64 	%rd1555, %rd1460, %rd1267;
	add.s64 	%rd1557, %rd1555, %rd41;
	add.s64 	%rd1558, %rd1557, %rd1554;
	add.s64 	%rd1559, %rd1558, %rd1551;
	add.s64 	%rd1560, %rd1559, %rd1471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9336,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9337}, %rd1546;
	}
	shf.r.wrap.b32 	%r9338, %r9337, %r9336, 28;
	shf.r.wrap.b32 	%r9339, %r9336, %r9337, 28;
	mov.b64 	%rd1561, {%r9339, %r9338};
	shf.l.wrap.b32 	%r9340, %r9336, %r9337, 30;
	shf.l.wrap.b32 	%r9341, %r9337, %r9336, 30;
	mov.b64 	%rd1562, {%r9341, %r9340};
	xor.b64  	%rd1563, %rd1562, %rd1561;
	shf.l.wrap.b32 	%r9342, %r9336, %r9337, 25;
	shf.l.wrap.b32 	%r9343, %r9337, %r9336, 25;
	mov.b64 	%rd1564, {%r9343, %r9342};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	xor.b64  	%rd1566, %rd1546, %rd1496;
	xor.b64  	%rd1567, %rd1546, %rd1521;
	and.b64  	%rd1568, %rd1567, %rd1566;
	xor.b64  	%rd1569, %rd1568, %rd1546;
	add.s64 	%rd1570, %rd1559, %rd1569;
	add.s64 	%rd1571, %rd1570, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9344,%dummy}, %rd1560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9345}, %rd1560;
	}
	shf.r.wrap.b32 	%r9346, %r9345, %r9344, 14;
	shf.r.wrap.b32 	%r9347, %r9344, %r9345, 14;
	mov.b64 	%rd1572, {%r9347, %r9346};
	shf.r.wrap.b32 	%r9348, %r9345, %r9344, 18;
	shf.r.wrap.b32 	%r9349, %r9344, %r9345, 18;
	mov.b64 	%rd1573, {%r9349, %r9348};
	xor.b64  	%rd1574, %rd1573, %rd1572;
	shf.l.wrap.b32 	%r9350, %r9344, %r9345, 23;
	shf.l.wrap.b32 	%r9351, %r9345, %r9344, 23;
	mov.b64 	%rd1575, {%r9351, %r9350};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	xor.b64  	%rd1577, %rd1535, %rd1510;
	and.b64  	%rd1578, %rd1560, %rd1577;
	xor.b64  	%rd1579, %rd1578, %rd1510;
	add.s64 	%rd1580, %rd1485, %rd1280;
	add.s64 	%rd1582, %rd1580, %rd42;
	add.s64 	%rd1583, %rd1582, %rd1579;
	add.s64 	%rd1584, %rd1583, %rd1576;
	add.s64 	%rd1585, %rd1584, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9352,%dummy}, %rd1571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9353}, %rd1571;
	}
	shf.r.wrap.b32 	%r9354, %r9353, %r9352, 28;
	shf.r.wrap.b32 	%r9355, %r9352, %r9353, 28;
	mov.b64 	%rd1586, {%r9355, %r9354};
	shf.l.wrap.b32 	%r9356, %r9352, %r9353, 30;
	shf.l.wrap.b32 	%r9357, %r9353, %r9352, 30;
	mov.b64 	%rd1587, {%r9357, %r9356};
	xor.b64  	%rd1588, %rd1587, %rd1586;
	shf.l.wrap.b32 	%r9358, %r9352, %r9353, 25;
	shf.l.wrap.b32 	%r9359, %r9353, %r9352, 25;
	mov.b64 	%rd1589, {%r9359, %r9358};
	xor.b64  	%rd1590, %rd1588, %rd1589;
	xor.b64  	%rd1591, %rd1571, %rd1521;
	xor.b64  	%rd1592, %rd1571, %rd1546;
	and.b64  	%rd1593, %rd1592, %rd1591;
	xor.b64  	%rd1594, %rd1593, %rd1571;
	add.s64 	%rd1595, %rd1584, %rd1594;
	add.s64 	%rd1596, %rd1595, %rd1590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9360,%dummy}, %rd1585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9361}, %rd1585;
	}
	shf.r.wrap.b32 	%r9362, %r9361, %r9360, 14;
	shf.r.wrap.b32 	%r9363, %r9360, %r9361, 14;
	mov.b64 	%rd1597, {%r9363, %r9362};
	shf.r.wrap.b32 	%r9364, %r9361, %r9360, 18;
	shf.r.wrap.b32 	%r9365, %r9360, %r9361, 18;
	mov.b64 	%rd1598, {%r9365, %r9364};
	xor.b64  	%rd1599, %rd1598, %rd1597;
	shf.l.wrap.b32 	%r9366, %r9360, %r9361, 23;
	shf.l.wrap.b32 	%r9367, %r9361, %r9360, 23;
	mov.b64 	%rd1600, {%r9367, %r9366};
	xor.b64  	%rd1601, %rd1599, %rd1600;
	xor.b64  	%rd1602, %rd1560, %rd1535;
	and.b64  	%rd1603, %rd1585, %rd1602;
	xor.b64  	%rd1604, %rd1603, %rd1535;
	add.s64 	%rd1605, %rd1510, %rd1293;
	add.s64 	%rd1607, %rd1605, %rd43;
	add.s64 	%rd1608, %rd1607, %rd1604;
	add.s64 	%rd1609, %rd1608, %rd1601;
	add.s64 	%rd1610, %rd1609, %rd1521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9368,%dummy}, %rd1596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9369}, %rd1596;
	}
	shf.r.wrap.b32 	%r9370, %r9369, %r9368, 28;
	shf.r.wrap.b32 	%r9371, %r9368, %r9369, 28;
	mov.b64 	%rd1611, {%r9371, %r9370};
	shf.l.wrap.b32 	%r9372, %r9368, %r9369, 30;
	shf.l.wrap.b32 	%r9373, %r9369, %r9368, 30;
	mov.b64 	%rd1612, {%r9373, %r9372};
	xor.b64  	%rd1613, %rd1612, %rd1611;
	shf.l.wrap.b32 	%r9374, %r9368, %r9369, 25;
	shf.l.wrap.b32 	%r9375, %r9369, %r9368, 25;
	mov.b64 	%rd1614, {%r9375, %r9374};
	xor.b64  	%rd1615, %rd1613, %rd1614;
	xor.b64  	%rd1616, %rd1596, %rd1546;
	xor.b64  	%rd1617, %rd1596, %rd1571;
	and.b64  	%rd1618, %rd1617, %rd1616;
	xor.b64  	%rd1619, %rd1618, %rd1596;
	add.s64 	%rd1620, %rd1609, %rd1619;
	add.s64 	%rd1621, %rd1620, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9376,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9377}, %rd1610;
	}
	shf.r.wrap.b32 	%r9378, %r9377, %r9376, 14;
	shf.r.wrap.b32 	%r9379, %r9376, %r9377, 14;
	mov.b64 	%rd1622, {%r9379, %r9378};
	shf.r.wrap.b32 	%r9380, %r9377, %r9376, 18;
	shf.r.wrap.b32 	%r9381, %r9376, %r9377, 18;
	mov.b64 	%rd1623, {%r9381, %r9380};
	xor.b64  	%rd1624, %rd1623, %rd1622;
	shf.l.wrap.b32 	%r9382, %r9376, %r9377, 23;
	shf.l.wrap.b32 	%r9383, %r9377, %r9376, 23;
	mov.b64 	%rd1625, {%r9383, %r9382};
	xor.b64  	%rd1626, %rd1624, %rd1625;
	xor.b64  	%rd1627, %rd1585, %rd1560;
	and.b64  	%rd1628, %rd1610, %rd1627;
	xor.b64  	%rd1629, %rd1628, %rd1560;
	add.s64 	%rd1630, %rd1535, %rd1306;
	add.s64 	%rd1632, %rd1630, %rd44;
	add.s64 	%rd1633, %rd1632, %rd1629;
	add.s64 	%rd1634, %rd1633, %rd1626;
	add.s64 	%rd1635, %rd1634, %rd1546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9384,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9385}, %rd1621;
	}
	shf.r.wrap.b32 	%r9386, %r9385, %r9384, 28;
	shf.r.wrap.b32 	%r9387, %r9384, %r9385, 28;
	mov.b64 	%rd1636, {%r9387, %r9386};
	shf.l.wrap.b32 	%r9388, %r9384, %r9385, 30;
	shf.l.wrap.b32 	%r9389, %r9385, %r9384, 30;
	mov.b64 	%rd1637, {%r9389, %r9388};
	xor.b64  	%rd1638, %rd1637, %rd1636;
	shf.l.wrap.b32 	%r9390, %r9384, %r9385, 25;
	shf.l.wrap.b32 	%r9391, %r9385, %r9384, 25;
	mov.b64 	%rd1639, {%r9391, %r9390};
	xor.b64  	%rd1640, %rd1638, %rd1639;
	xor.b64  	%rd1641, %rd1621, %rd1571;
	xor.b64  	%rd1642, %rd1621, %rd1596;
	and.b64  	%rd1643, %rd1642, %rd1641;
	xor.b64  	%rd1644, %rd1643, %rd1621;
	add.s64 	%rd1645, %rd1634, %rd1644;
	add.s64 	%rd1646, %rd1645, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9392,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9393}, %rd1635;
	}
	shf.r.wrap.b32 	%r9394, %r9393, %r9392, 14;
	shf.r.wrap.b32 	%r9395, %r9392, %r9393, 14;
	mov.b64 	%rd1647, {%r9395, %r9394};
	shf.r.wrap.b32 	%r9396, %r9393, %r9392, 18;
	shf.r.wrap.b32 	%r9397, %r9392, %r9393, 18;
	mov.b64 	%rd1648, {%r9397, %r9396};
	xor.b64  	%rd1649, %rd1648, %rd1647;
	shf.l.wrap.b32 	%r9398, %r9392, %r9393, 23;
	shf.l.wrap.b32 	%r9399, %r9393, %r9392, 23;
	mov.b64 	%rd1650, {%r9399, %r9398};
	xor.b64  	%rd1651, %rd1649, %rd1650;
	xor.b64  	%rd1652, %rd1610, %rd1585;
	and.b64  	%rd1653, %rd1635, %rd1652;
	xor.b64  	%rd1654, %rd1653, %rd1585;
	add.s64 	%rd1655, %rd1560, %rd1319;
	add.s64 	%rd1657, %rd1655, %rd45;
	add.s64 	%rd1658, %rd1657, %rd1654;
	add.s64 	%rd1659, %rd1658, %rd1651;
	add.s64 	%rd1660, %rd1659, %rd1571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9400,%dummy}, %rd1646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9401}, %rd1646;
	}
	shf.r.wrap.b32 	%r9402, %r9401, %r9400, 28;
	shf.r.wrap.b32 	%r9403, %r9400, %r9401, 28;
	mov.b64 	%rd1661, {%r9403, %r9402};
	shf.l.wrap.b32 	%r9404, %r9400, %r9401, 30;
	shf.l.wrap.b32 	%r9405, %r9401, %r9400, 30;
	mov.b64 	%rd1662, {%r9405, %r9404};
	xor.b64  	%rd1663, %rd1662, %rd1661;
	shf.l.wrap.b32 	%r9406, %r9400, %r9401, 25;
	shf.l.wrap.b32 	%r9407, %r9401, %r9400, 25;
	mov.b64 	%rd1664, {%r9407, %r9406};
	xor.b64  	%rd1665, %rd1663, %rd1664;
	xor.b64  	%rd1666, %rd1646, %rd1596;
	xor.b64  	%rd1667, %rd1646, %rd1621;
	and.b64  	%rd1668, %rd1667, %rd1666;
	xor.b64  	%rd1669, %rd1668, %rd1646;
	add.s64 	%rd1670, %rd1659, %rd1669;
	add.s64 	%rd1671, %rd1670, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9408,%dummy}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9409}, %rd1660;
	}
	shf.r.wrap.b32 	%r9410, %r9409, %r9408, 14;
	shf.r.wrap.b32 	%r9411, %r9408, %r9409, 14;
	mov.b64 	%rd1672, {%r9411, %r9410};
	shf.r.wrap.b32 	%r9412, %r9409, %r9408, 18;
	shf.r.wrap.b32 	%r9413, %r9408, %r9409, 18;
	mov.b64 	%rd1673, {%r9413, %r9412};
	xor.b64  	%rd1674, %rd1673, %rd1672;
	shf.l.wrap.b32 	%r9414, %r9408, %r9409, 23;
	shf.l.wrap.b32 	%r9415, %r9409, %r9408, 23;
	mov.b64 	%rd1675, {%r9415, %r9414};
	xor.b64  	%rd1676, %rd1674, %rd1675;
	xor.b64  	%rd1677, %rd1635, %rd1610;
	and.b64  	%rd1678, %rd1660, %rd1677;
	xor.b64  	%rd1679, %rd1678, %rd1610;
	add.s64 	%rd1680, %rd1585, %rd1332;
	add.s64 	%rd1682, %rd1680, %rd46;
	add.s64 	%rd1683, %rd1682, %rd1679;
	add.s64 	%rd1684, %rd1683, %rd1676;
	add.s64 	%rd1685, %rd1684, %rd1596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9416,%dummy}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9417}, %rd1671;
	}
	shf.r.wrap.b32 	%r9418, %r9417, %r9416, 28;
	shf.r.wrap.b32 	%r9419, %r9416, %r9417, 28;
	mov.b64 	%rd1686, {%r9419, %r9418};
	shf.l.wrap.b32 	%r9420, %r9416, %r9417, 30;
	shf.l.wrap.b32 	%r9421, %r9417, %r9416, 30;
	mov.b64 	%rd1687, {%r9421, %r9420};
	xor.b64  	%rd1688, %rd1687, %rd1686;
	shf.l.wrap.b32 	%r9422, %r9416, %r9417, 25;
	shf.l.wrap.b32 	%r9423, %r9417, %r9416, 25;
	mov.b64 	%rd1689, {%r9423, %r9422};
	xor.b64  	%rd1690, %rd1688, %rd1689;
	xor.b64  	%rd1691, %rd1671, %rd1621;
	xor.b64  	%rd1692, %rd1671, %rd1646;
	and.b64  	%rd1693, %rd1692, %rd1691;
	xor.b64  	%rd1694, %rd1693, %rd1671;
	add.s64 	%rd1695, %rd1684, %rd1694;
	add.s64 	%rd1696, %rd1695, %rd1690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9424,%dummy}, %rd1685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9425}, %rd1685;
	}
	shf.r.wrap.b32 	%r9426, %r9425, %r9424, 14;
	shf.r.wrap.b32 	%r9427, %r9424, %r9425, 14;
	mov.b64 	%rd1697, {%r9427, %r9426};
	shf.r.wrap.b32 	%r9428, %r9425, %r9424, 18;
	shf.r.wrap.b32 	%r9429, %r9424, %r9425, 18;
	mov.b64 	%rd1698, {%r9429, %r9428};
	xor.b64  	%rd1699, %rd1698, %rd1697;
	shf.l.wrap.b32 	%r9430, %r9424, %r9425, 23;
	shf.l.wrap.b32 	%r9431, %r9425, %r9424, 23;
	mov.b64 	%rd1700, {%r9431, %r9430};
	xor.b64  	%rd1701, %rd1699, %rd1700;
	xor.b64  	%rd1702, %rd1660, %rd1635;
	and.b64  	%rd1703, %rd1685, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1635;
	add.s64 	%rd1705, %rd1610, %rd1345;
	add.s64 	%rd1707, %rd1705, %rd47;
	add.s64 	%rd1708, %rd1707, %rd1704;
	add.s64 	%rd1709, %rd1708, %rd1701;
	add.s64 	%rd1710, %rd1709, %rd1621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9432,%dummy}, %rd1696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9433}, %rd1696;
	}
	shf.r.wrap.b32 	%r9434, %r9433, %r9432, 28;
	shf.r.wrap.b32 	%r9435, %r9432, %r9433, 28;
	mov.b64 	%rd1711, {%r9435, %r9434};
	shf.l.wrap.b32 	%r9436, %r9432, %r9433, 30;
	shf.l.wrap.b32 	%r9437, %r9433, %r9432, 30;
	mov.b64 	%rd1712, {%r9437, %r9436};
	xor.b64  	%rd1713, %rd1712, %rd1711;
	shf.l.wrap.b32 	%r9438, %r9432, %r9433, 25;
	shf.l.wrap.b32 	%r9439, %r9433, %r9432, 25;
	mov.b64 	%rd1714, {%r9439, %r9438};
	xor.b64  	%rd1715, %rd1713, %rd1714;
	xor.b64  	%rd1716, %rd1696, %rd1646;
	xor.b64  	%rd1717, %rd1696, %rd1671;
	and.b64  	%rd1718, %rd1717, %rd1716;
	xor.b64  	%rd1719, %rd1718, %rd1696;
	add.s64 	%rd1720, %rd1709, %rd1719;
	add.s64 	%rd1721, %rd1720, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9440,%dummy}, %rd1710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9441}, %rd1710;
	}
	shf.r.wrap.b32 	%r9442, %r9441, %r9440, 14;
	shf.r.wrap.b32 	%r9443, %r9440, %r9441, 14;
	mov.b64 	%rd1722, {%r9443, %r9442};
	shf.r.wrap.b32 	%r9444, %r9441, %r9440, 18;
	shf.r.wrap.b32 	%r9445, %r9440, %r9441, 18;
	mov.b64 	%rd1723, {%r9445, %r9444};
	xor.b64  	%rd1724, %rd1723, %rd1722;
	shf.l.wrap.b32 	%r9446, %r9440, %r9441, 23;
	shf.l.wrap.b32 	%r9447, %r9441, %r9440, 23;
	mov.b64 	%rd1725, {%r9447, %r9446};
	xor.b64  	%rd1726, %rd1724, %rd1725;
	xor.b64  	%rd1727, %rd1685, %rd1660;
	and.b64  	%rd1728, %rd1710, %rd1727;
	xor.b64  	%rd1729, %rd1728, %rd1660;
	add.s64 	%rd1730, %rd1635, %rd1358;
	add.s64 	%rd1732, %rd1730, %rd48;
	add.s64 	%rd1733, %rd1732, %rd1729;
	add.s64 	%rd1734, %rd1733, %rd1726;
	add.s64 	%rd1735, %rd1734, %rd1646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9448,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9449}, %rd1721;
	}
	shf.r.wrap.b32 	%r9450, %r9449, %r9448, 28;
	shf.r.wrap.b32 	%r9451, %r9448, %r9449, 28;
	mov.b64 	%rd1736, {%r9451, %r9450};
	shf.l.wrap.b32 	%r9452, %r9448, %r9449, 30;
	shf.l.wrap.b32 	%r9453, %r9449, %r9448, 30;
	mov.b64 	%rd1737, {%r9453, %r9452};
	xor.b64  	%rd1738, %rd1737, %rd1736;
	shf.l.wrap.b32 	%r9454, %r9448, %r9449, 25;
	shf.l.wrap.b32 	%r9455, %r9449, %r9448, 25;
	mov.b64 	%rd1739, {%r9455, %r9454};
	xor.b64  	%rd1740, %rd1738, %rd1739;
	xor.b64  	%rd1741, %rd1721, %rd1671;
	xor.b64  	%rd1742, %rd1721, %rd1696;
	and.b64  	%rd1743, %rd1742, %rd1741;
	xor.b64  	%rd1744, %rd1743, %rd1721;
	add.s64 	%rd1745, %rd1734, %rd1744;
	add.s64 	%rd1746, %rd1745, %rd1740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9456,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9457}, %rd1735;
	}
	shf.r.wrap.b32 	%r9458, %r9457, %r9456, 14;
	shf.r.wrap.b32 	%r9459, %r9456, %r9457, 14;
	mov.b64 	%rd1747, {%r9459, %r9458};
	shf.r.wrap.b32 	%r9460, %r9457, %r9456, 18;
	shf.r.wrap.b32 	%r9461, %r9456, %r9457, 18;
	mov.b64 	%rd1748, {%r9461, %r9460};
	xor.b64  	%rd1749, %rd1748, %rd1747;
	shf.l.wrap.b32 	%r9462, %r9456, %r9457, 23;
	shf.l.wrap.b32 	%r9463, %r9457, %r9456, 23;
	mov.b64 	%rd1750, {%r9463, %r9462};
	xor.b64  	%rd1751, %rd1749, %rd1750;
	xor.b64  	%rd1752, %rd1710, %rd1685;
	and.b64  	%rd1753, %rd1735, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1685;
	add.s64 	%rd1755, %rd1660, %rd1371;
	add.s64 	%rd1757, %rd1755, %rd49;
	add.s64 	%rd1758, %rd1757, %rd1754;
	add.s64 	%rd1759, %rd1758, %rd1751;
	add.s64 	%rd1760, %rd1759, %rd1671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9464,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9465}, %rd1746;
	}
	shf.r.wrap.b32 	%r9466, %r9465, %r9464, 28;
	shf.r.wrap.b32 	%r9467, %r9464, %r9465, 28;
	mov.b64 	%rd1761, {%r9467, %r9466};
	shf.l.wrap.b32 	%r9468, %r9464, %r9465, 30;
	shf.l.wrap.b32 	%r9469, %r9465, %r9464, 30;
	mov.b64 	%rd1762, {%r9469, %r9468};
	xor.b64  	%rd1763, %rd1762, %rd1761;
	shf.l.wrap.b32 	%r9470, %r9464, %r9465, 25;
	shf.l.wrap.b32 	%r9471, %r9465, %r9464, 25;
	mov.b64 	%rd1764, {%r9471, %r9470};
	xor.b64  	%rd1765, %rd1763, %rd1764;
	xor.b64  	%rd1766, %rd1746, %rd1696;
	xor.b64  	%rd1767, %rd1746, %rd1721;
	and.b64  	%rd1768, %rd1767, %rd1766;
	xor.b64  	%rd1769, %rd1768, %rd1746;
	add.s64 	%rd1770, %rd1759, %rd1769;
	add.s64 	%rd1771, %rd1770, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9472,%dummy}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9473}, %rd1358;
	}
	shf.r.wrap.b32 	%r9474, %r9473, %r9472, 19;
	shf.r.wrap.b32 	%r9475, %r9472, %r9473, 19;
	mov.b64 	%rd1772, {%r9475, %r9474};
	shf.l.wrap.b32 	%r9476, %r9472, %r9473, 3;
	shf.l.wrap.b32 	%r9477, %r9473, %r9472, 3;
	mov.b64 	%rd1773, {%r9477, %r9476};
	shr.u64 	%rd1774, %rd1358, 6;
	xor.b64  	%rd1775, %rd1772, %rd1774;
	xor.b64  	%rd1776, %rd1775, %rd1773;
	shf.r.wrap.b32 	%r9478, %r9087, %r9086, 1;
	shf.r.wrap.b32 	%r9479, %r9086, %r9087, 1;
	mov.b64 	%rd1777, {%r9479, %r9478};
	shf.r.wrap.b32 	%r9480, %r9087, %r9086, 8;
	shf.r.wrap.b32 	%r9481, %r9086, %r9087, 8;
	mov.b64 	%rd1778, {%r9481, %r9480};
	shr.u64 	%rd1779, %rd1189, 7;
	xor.b64  	%rd1780, %rd1777, %rd1779;
	xor.b64  	%rd1781, %rd1780, %rd1778;
	add.s64 	%rd1782, %rd1293, %rd1176;
	add.s64 	%rd1783, %rd1782, %rd1776;
	add.s64 	%rd1784, %rd1783, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9482,%dummy}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9483}, %rd1371;
	}
	shf.r.wrap.b32 	%r9484, %r9483, %r9482, 19;
	shf.r.wrap.b32 	%r9485, %r9482, %r9483, 19;
	mov.b64 	%rd1785, {%r9485, %r9484};
	shf.l.wrap.b32 	%r9486, %r9482, %r9483, 3;
	shf.l.wrap.b32 	%r9487, %r9483, %r9482, 3;
	mov.b64 	%rd1786, {%r9487, %r9486};
	shr.u64 	%rd1787, %rd1371, 6;
	xor.b64  	%rd1788, %rd1785, %rd1787;
	xor.b64  	%rd1789, %rd1788, %rd1786;
	shf.r.wrap.b32 	%r9488, %r9097, %r9096, 1;
	shf.r.wrap.b32 	%r9489, %r9096, %r9097, 1;
	mov.b64 	%rd1790, {%r9489, %r9488};
	shf.r.wrap.b32 	%r9490, %r9097, %r9096, 8;
	shf.r.wrap.b32 	%r9491, %r9096, %r9097, 8;
	mov.b64 	%rd1791, {%r9491, %r9490};
	shr.u64 	%rd1792, %rd1202, 7;
	xor.b64  	%rd1793, %rd1790, %rd1792;
	xor.b64  	%rd1794, %rd1793, %rd1791;
	add.s64 	%rd1795, %rd1306, %rd1189;
	add.s64 	%rd1796, %rd1795, %rd1789;
	add.s64 	%rd1797, %rd1796, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9492,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9493}, %rd1784;
	}
	shf.r.wrap.b32 	%r9494, %r9493, %r9492, 19;
	shf.r.wrap.b32 	%r9495, %r9492, %r9493, 19;
	mov.b64 	%rd1798, {%r9495, %r9494};
	shf.l.wrap.b32 	%r9496, %r9492, %r9493, 3;
	shf.l.wrap.b32 	%r9497, %r9493, %r9492, 3;
	mov.b64 	%rd1799, {%r9497, %r9496};
	shr.u64 	%rd1800, %rd1784, 6;
	xor.b64  	%rd1801, %rd1798, %rd1800;
	xor.b64  	%rd1802, %rd1801, %rd1799;
	shf.r.wrap.b32 	%r9498, %r9107, %r9106, 1;
	shf.r.wrap.b32 	%r9499, %r9106, %r9107, 1;
	mov.b64 	%rd1803, {%r9499, %r9498};
	shf.r.wrap.b32 	%r9500, %r9107, %r9106, 8;
	shf.r.wrap.b32 	%r9501, %r9106, %r9107, 8;
	mov.b64 	%rd1804, {%r9501, %r9500};
	shr.u64 	%rd1805, %rd1215, 7;
	xor.b64  	%rd1806, %rd1803, %rd1805;
	xor.b64  	%rd1807, %rd1806, %rd1804;
	add.s64 	%rd1808, %rd1319, %rd1202;
	add.s64 	%rd1809, %rd1808, %rd1802;
	add.s64 	%rd1810, %rd1809, %rd1807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9502,%dummy}, %rd1797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9503}, %rd1797;
	}
	shf.r.wrap.b32 	%r9504, %r9503, %r9502, 19;
	shf.r.wrap.b32 	%r9505, %r9502, %r9503, 19;
	mov.b64 	%rd1811, {%r9505, %r9504};
	shf.l.wrap.b32 	%r9506, %r9502, %r9503, 3;
	shf.l.wrap.b32 	%r9507, %r9503, %r9502, 3;
	mov.b64 	%rd1812, {%r9507, %r9506};
	shr.u64 	%rd1813, %rd1797, 6;
	xor.b64  	%rd1814, %rd1811, %rd1813;
	xor.b64  	%rd1815, %rd1814, %rd1812;
	shf.r.wrap.b32 	%r9508, %r9117, %r9116, 1;
	shf.r.wrap.b32 	%r9509, %r9116, %r9117, 1;
	mov.b64 	%rd1816, {%r9509, %r9508};
	shf.r.wrap.b32 	%r9510, %r9117, %r9116, 8;
	shf.r.wrap.b32 	%r9511, %r9116, %r9117, 8;
	mov.b64 	%rd1817, {%r9511, %r9510};
	shr.u64 	%rd1818, %rd1228, 7;
	xor.b64  	%rd1819, %rd1816, %rd1818;
	xor.b64  	%rd1820, %rd1819, %rd1817;
	add.s64 	%rd1821, %rd1332, %rd1215;
	add.s64 	%rd1822, %rd1821, %rd1815;
	add.s64 	%rd1823, %rd1822, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9512,%dummy}, %rd1810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9513}, %rd1810;
	}
	shf.r.wrap.b32 	%r9514, %r9513, %r9512, 19;
	shf.r.wrap.b32 	%r9515, %r9512, %r9513, 19;
	mov.b64 	%rd1824, {%r9515, %r9514};
	shf.l.wrap.b32 	%r9516, %r9512, %r9513, 3;
	shf.l.wrap.b32 	%r9517, %r9513, %r9512, 3;
	mov.b64 	%rd1825, {%r9517, %r9516};
	shr.u64 	%rd1826, %rd1810, 6;
	xor.b64  	%rd1827, %rd1824, %rd1826;
	xor.b64  	%rd1828, %rd1827, %rd1825;
	shf.r.wrap.b32 	%r9518, %r9127, %r9126, 1;
	shf.r.wrap.b32 	%r9519, %r9126, %r9127, 1;
	mov.b64 	%rd1829, {%r9519, %r9518};
	shf.r.wrap.b32 	%r9520, %r9127, %r9126, 8;
	shf.r.wrap.b32 	%r9521, %r9126, %r9127, 8;
	mov.b64 	%rd1830, {%r9521, %r9520};
	shr.u64 	%rd1831, %rd1241, 7;
	xor.b64  	%rd1832, %rd1829, %rd1831;
	xor.b64  	%rd1833, %rd1832, %rd1830;
	add.s64 	%rd1834, %rd1345, %rd1228;
	add.s64 	%rd1835, %rd1834, %rd1828;
	add.s64 	%rd1836, %rd1835, %rd1833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9522,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9523}, %rd1823;
	}
	shf.r.wrap.b32 	%r9524, %r9523, %r9522, 19;
	shf.r.wrap.b32 	%r9525, %r9522, %r9523, 19;
	mov.b64 	%rd1837, {%r9525, %r9524};
	shf.l.wrap.b32 	%r9526, %r9522, %r9523, 3;
	shf.l.wrap.b32 	%r9527, %r9523, %r9522, 3;
	mov.b64 	%rd1838, {%r9527, %r9526};
	shr.u64 	%rd1839, %rd1823, 6;
	xor.b64  	%rd1840, %rd1837, %rd1839;
	xor.b64  	%rd1841, %rd1840, %rd1838;
	shf.r.wrap.b32 	%r9528, %r9137, %r9136, 1;
	shf.r.wrap.b32 	%r9529, %r9136, %r9137, 1;
	mov.b64 	%rd1842, {%r9529, %r9528};
	shf.r.wrap.b32 	%r9530, %r9137, %r9136, 8;
	shf.r.wrap.b32 	%r9531, %r9136, %r9137, 8;
	mov.b64 	%rd1843, {%r9531, %r9530};
	shr.u64 	%rd1844, %rd1254, 7;
	xor.b64  	%rd1845, %rd1842, %rd1844;
	xor.b64  	%rd1846, %rd1845, %rd1843;
	add.s64 	%rd1847, %rd1358, %rd1241;
	add.s64 	%rd1848, %rd1847, %rd1841;
	add.s64 	%rd1849, %rd1848, %rd1846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9532,%dummy}, %rd1836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9533}, %rd1836;
	}
	shf.r.wrap.b32 	%r9534, %r9533, %r9532, 19;
	shf.r.wrap.b32 	%r9535, %r9532, %r9533, 19;
	mov.b64 	%rd1850, {%r9535, %r9534};
	shf.l.wrap.b32 	%r9536, %r9532, %r9533, 3;
	shf.l.wrap.b32 	%r9537, %r9533, %r9532, 3;
	mov.b64 	%rd1851, {%r9537, %r9536};
	shr.u64 	%rd1852, %rd1836, 6;
	xor.b64  	%rd1853, %rd1850, %rd1852;
	xor.b64  	%rd1854, %rd1853, %rd1851;
	shf.r.wrap.b32 	%r9538, %r9147, %r9146, 1;
	shf.r.wrap.b32 	%r9539, %r9146, %r9147, 1;
	mov.b64 	%rd1855, {%r9539, %r9538};
	shf.r.wrap.b32 	%r9540, %r9147, %r9146, 8;
	shf.r.wrap.b32 	%r9541, %r9146, %r9147, 8;
	mov.b64 	%rd1856, {%r9541, %r9540};
	shr.u64 	%rd1857, %rd1267, 7;
	xor.b64  	%rd1858, %rd1855, %rd1857;
	xor.b64  	%rd1859, %rd1858, %rd1856;
	add.s64 	%rd1860, %rd1371, %rd1254;
	add.s64 	%rd1861, %rd1860, %rd1854;
	add.s64 	%rd1862, %rd1861, %rd1859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9542,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9543}, %rd1849;
	}
	shf.r.wrap.b32 	%r9544, %r9543, %r9542, 19;
	shf.r.wrap.b32 	%r9545, %r9542, %r9543, 19;
	mov.b64 	%rd1863, {%r9545, %r9544};
	shf.l.wrap.b32 	%r9546, %r9542, %r9543, 3;
	shf.l.wrap.b32 	%r9547, %r9543, %r9542, 3;
	mov.b64 	%rd1864, {%r9547, %r9546};
	shr.u64 	%rd1865, %rd1849, 6;
	xor.b64  	%rd1866, %rd1863, %rd1865;
	xor.b64  	%rd1867, %rd1866, %rd1864;
	shf.r.wrap.b32 	%r9548, %r9157, %r9156, 1;
	shf.r.wrap.b32 	%r9549, %r9156, %r9157, 1;
	mov.b64 	%rd1868, {%r9549, %r9548};
	shf.r.wrap.b32 	%r9550, %r9157, %r9156, 8;
	shf.r.wrap.b32 	%r9551, %r9156, %r9157, 8;
	mov.b64 	%rd1869, {%r9551, %r9550};
	shr.u64 	%rd1870, %rd1280, 7;
	xor.b64  	%rd1871, %rd1868, %rd1870;
	xor.b64  	%rd1872, %rd1871, %rd1869;
	add.s64 	%rd1873, %rd1784, %rd1267;
	add.s64 	%rd1874, %rd1873, %rd1867;
	add.s64 	%rd1875, %rd1874, %rd1872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9552,%dummy}, %rd1862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9553}, %rd1862;
	}
	shf.r.wrap.b32 	%r9554, %r9553, %r9552, 19;
	shf.r.wrap.b32 	%r9555, %r9552, %r9553, 19;
	mov.b64 	%rd1876, {%r9555, %r9554};
	shf.l.wrap.b32 	%r9556, %r9552, %r9553, 3;
	shf.l.wrap.b32 	%r9557, %r9553, %r9552, 3;
	mov.b64 	%rd1877, {%r9557, %r9556};
	shr.u64 	%rd1878, %rd1862, 6;
	xor.b64  	%rd1879, %rd1876, %rd1878;
	xor.b64  	%rd1880, %rd1879, %rd1877;
	shf.r.wrap.b32 	%r9558, %r9167, %r9166, 1;
	shf.r.wrap.b32 	%r9559, %r9166, %r9167, 1;
	mov.b64 	%rd1881, {%r9559, %r9558};
	shf.r.wrap.b32 	%r9560, %r9167, %r9166, 8;
	shf.r.wrap.b32 	%r9561, %r9166, %r9167, 8;
	mov.b64 	%rd1882, {%r9561, %r9560};
	shr.u64 	%rd1883, %rd1293, 7;
	xor.b64  	%rd1884, %rd1881, %rd1883;
	xor.b64  	%rd1885, %rd1884, %rd1882;
	add.s64 	%rd1886, %rd1797, %rd1280;
	add.s64 	%rd1887, %rd1886, %rd1880;
	add.s64 	%rd1888, %rd1887, %rd1885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9562,%dummy}, %rd1875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9563}, %rd1875;
	}
	shf.r.wrap.b32 	%r9564, %r9563, %r9562, 19;
	shf.r.wrap.b32 	%r9565, %r9562, %r9563, 19;
	mov.b64 	%rd1889, {%r9565, %r9564};
	shf.l.wrap.b32 	%r9566, %r9562, %r9563, 3;
	shf.l.wrap.b32 	%r9567, %r9563, %r9562, 3;
	mov.b64 	%rd1890, {%r9567, %r9566};
	shr.u64 	%rd1891, %rd1875, 6;
	xor.b64  	%rd1892, %rd1889, %rd1891;
	xor.b64  	%rd1893, %rd1892, %rd1890;
	shf.r.wrap.b32 	%r9568, %r9177, %r9176, 1;
	shf.r.wrap.b32 	%r9569, %r9176, %r9177, 1;
	mov.b64 	%rd1894, {%r9569, %r9568};
	shf.r.wrap.b32 	%r9570, %r9177, %r9176, 8;
	shf.r.wrap.b32 	%r9571, %r9176, %r9177, 8;
	mov.b64 	%rd1895, {%r9571, %r9570};
	shr.u64 	%rd1896, %rd1306, 7;
	xor.b64  	%rd1897, %rd1894, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1895;
	add.s64 	%rd1899, %rd1810, %rd1293;
	add.s64 	%rd1900, %rd1899, %rd1893;
	add.s64 	%rd1901, %rd1900, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9572,%dummy}, %rd1888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9573}, %rd1888;
	}
	shf.r.wrap.b32 	%r9574, %r9573, %r9572, 19;
	shf.r.wrap.b32 	%r9575, %r9572, %r9573, 19;
	mov.b64 	%rd1902, {%r9575, %r9574};
	shf.l.wrap.b32 	%r9576, %r9572, %r9573, 3;
	shf.l.wrap.b32 	%r9577, %r9573, %r9572, 3;
	mov.b64 	%rd1903, {%r9577, %r9576};
	shr.u64 	%rd1904, %rd1888, 6;
	xor.b64  	%rd1905, %rd1902, %rd1904;
	xor.b64  	%rd1906, %rd1905, %rd1903;
	shf.r.wrap.b32 	%r9578, %r9187, %r9186, 1;
	shf.r.wrap.b32 	%r9579, %r9186, %r9187, 1;
	mov.b64 	%rd1907, {%r9579, %r9578};
	shf.r.wrap.b32 	%r9580, %r9187, %r9186, 8;
	shf.r.wrap.b32 	%r9581, %r9186, %r9187, 8;
	mov.b64 	%rd1908, {%r9581, %r9580};
	shr.u64 	%rd1909, %rd1319, 7;
	xor.b64  	%rd1910, %rd1907, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1908;
	add.s64 	%rd1912, %rd1823, %rd1306;
	add.s64 	%rd1913, %rd1912, %rd1906;
	add.s64 	%rd1914, %rd1913, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9582,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9583}, %rd1901;
	}
	shf.r.wrap.b32 	%r9584, %r9583, %r9582, 19;
	shf.r.wrap.b32 	%r9585, %r9582, %r9583, 19;
	mov.b64 	%rd1915, {%r9585, %r9584};
	shf.l.wrap.b32 	%r9586, %r9582, %r9583, 3;
	shf.l.wrap.b32 	%r9587, %r9583, %r9582, 3;
	mov.b64 	%rd1916, {%r9587, %r9586};
	shr.u64 	%rd1917, %rd1901, 6;
	xor.b64  	%rd1918, %rd1915, %rd1917;
	xor.b64  	%rd1919, %rd1918, %rd1916;
	shf.r.wrap.b32 	%r9588, %r9197, %r9196, 1;
	shf.r.wrap.b32 	%r9589, %r9196, %r9197, 1;
	mov.b64 	%rd1920, {%r9589, %r9588};
	shf.r.wrap.b32 	%r9590, %r9197, %r9196, 8;
	shf.r.wrap.b32 	%r9591, %r9196, %r9197, 8;
	mov.b64 	%rd1921, {%r9591, %r9590};
	shr.u64 	%rd1922, %rd1332, 7;
	xor.b64  	%rd1923, %rd1920, %rd1922;
	xor.b64  	%rd1924, %rd1923, %rd1921;
	add.s64 	%rd1925, %rd1836, %rd1319;
	add.s64 	%rd1926, %rd1925, %rd1919;
	add.s64 	%rd1927, %rd1926, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9592,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9593}, %rd1914;
	}
	shf.r.wrap.b32 	%r9594, %r9593, %r9592, 19;
	shf.r.wrap.b32 	%r9595, %r9592, %r9593, 19;
	mov.b64 	%rd1928, {%r9595, %r9594};
	shf.l.wrap.b32 	%r9596, %r9592, %r9593, 3;
	shf.l.wrap.b32 	%r9597, %r9593, %r9592, 3;
	mov.b64 	%rd1929, {%r9597, %r9596};
	shr.u64 	%rd1930, %rd1914, 6;
	xor.b64  	%rd1931, %rd1928, %rd1930;
	xor.b64  	%rd1932, %rd1931, %rd1929;
	shf.r.wrap.b32 	%r9598, %r9207, %r9206, 1;
	shf.r.wrap.b32 	%r9599, %r9206, %r9207, 1;
	mov.b64 	%rd1933, {%r9599, %r9598};
	shf.r.wrap.b32 	%r9600, %r9207, %r9206, 8;
	shf.r.wrap.b32 	%r9601, %r9206, %r9207, 8;
	mov.b64 	%rd1934, {%r9601, %r9600};
	shr.u64 	%rd1935, %rd1345, 7;
	xor.b64  	%rd1936, %rd1933, %rd1935;
	xor.b64  	%rd1937, %rd1936, %rd1934;
	add.s64 	%rd1938, %rd1849, %rd1332;
	add.s64 	%rd1939, %rd1938, %rd1932;
	add.s64 	%rd1940, %rd1939, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9602,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9603}, %rd1927;
	}
	shf.r.wrap.b32 	%r9604, %r9603, %r9602, 19;
	shf.r.wrap.b32 	%r9605, %r9602, %r9603, 19;
	mov.b64 	%rd1941, {%r9605, %r9604};
	shf.l.wrap.b32 	%r9606, %r9602, %r9603, 3;
	shf.l.wrap.b32 	%r9607, %r9603, %r9602, 3;
	mov.b64 	%rd1942, {%r9607, %r9606};
	shr.u64 	%rd1943, %rd1927, 6;
	xor.b64  	%rd1944, %rd1941, %rd1943;
	xor.b64  	%rd1945, %rd1944, %rd1942;
	shf.r.wrap.b32 	%r9608, %r9473, %r9472, 1;
	shf.r.wrap.b32 	%r9609, %r9472, %r9473, 1;
	mov.b64 	%rd1946, {%r9609, %r9608};
	shf.r.wrap.b32 	%r9610, %r9473, %r9472, 8;
	shf.r.wrap.b32 	%r9611, %r9472, %r9473, 8;
	mov.b64 	%rd1947, {%r9611, %r9610};
	shr.u64 	%rd1948, %rd1358, 7;
	xor.b64  	%rd1949, %rd1946, %rd1948;
	xor.b64  	%rd1950, %rd1949, %rd1947;
	add.s64 	%rd1951, %rd1862, %rd1345;
	add.s64 	%rd1952, %rd1951, %rd1945;
	add.s64 	%rd1953, %rd1952, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9612,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9613}, %rd1940;
	}
	shf.r.wrap.b32 	%r9614, %r9613, %r9612, 19;
	shf.r.wrap.b32 	%r9615, %r9612, %r9613, 19;
	mov.b64 	%rd1954, {%r9615, %r9614};
	shf.l.wrap.b32 	%r9616, %r9612, %r9613, 3;
	shf.l.wrap.b32 	%r9617, %r9613, %r9612, 3;
	mov.b64 	%rd1955, {%r9617, %r9616};
	shr.u64 	%rd1956, %rd1940, 6;
	xor.b64  	%rd1957, %rd1954, %rd1956;
	xor.b64  	%rd1958, %rd1957, %rd1955;
	shf.r.wrap.b32 	%r9618, %r9483, %r9482, 1;
	shf.r.wrap.b32 	%r9619, %r9482, %r9483, 1;
	mov.b64 	%rd1959, {%r9619, %r9618};
	shf.r.wrap.b32 	%r9620, %r9483, %r9482, 8;
	shf.r.wrap.b32 	%r9621, %r9482, %r9483, 8;
	mov.b64 	%rd1960, {%r9621, %r9620};
	shr.u64 	%rd1961, %rd1371, 7;
	xor.b64  	%rd1962, %rd1959, %rd1961;
	xor.b64  	%rd1963, %rd1962, %rd1960;
	add.s64 	%rd1964, %rd1875, %rd1358;
	add.s64 	%rd1965, %rd1964, %rd1958;
	add.s64 	%rd1966, %rd1965, %rd1963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9622,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9623}, %rd1953;
	}
	shf.r.wrap.b32 	%r9624, %r9623, %r9622, 19;
	shf.r.wrap.b32 	%r9625, %r9622, %r9623, 19;
	mov.b64 	%rd1967, {%r9625, %r9624};
	shf.l.wrap.b32 	%r9626, %r9622, %r9623, 3;
	shf.l.wrap.b32 	%r9627, %r9623, %r9622, 3;
	mov.b64 	%rd1968, {%r9627, %r9626};
	shr.u64 	%rd1969, %rd1953, 6;
	xor.b64  	%rd1970, %rd1967, %rd1969;
	xor.b64  	%rd1971, %rd1970, %rd1968;
	shf.r.wrap.b32 	%r9628, %r9493, %r9492, 1;
	shf.r.wrap.b32 	%r9629, %r9492, %r9493, 1;
	mov.b64 	%rd1972, {%r9629, %r9628};
	shf.r.wrap.b32 	%r9630, %r9493, %r9492, 8;
	shf.r.wrap.b32 	%r9631, %r9492, %r9493, 8;
	mov.b64 	%rd1973, {%r9631, %r9630};
	shr.u64 	%rd1974, %rd1784, 7;
	xor.b64  	%rd1975, %rd1972, %rd1974;
	xor.b64  	%rd1976, %rd1975, %rd1973;
	add.s64 	%rd1977, %rd1888, %rd1371;
	add.s64 	%rd1978, %rd1977, %rd1971;
	add.s64 	%rd1979, %rd1978, %rd1976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9632,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9633}, %rd1760;
	}
	shf.r.wrap.b32 	%r9634, %r9633, %r9632, 14;
	shf.r.wrap.b32 	%r9635, %r9632, %r9633, 14;
	mov.b64 	%rd1980, {%r9635, %r9634};
	shf.r.wrap.b32 	%r9636, %r9633, %r9632, 18;
	shf.r.wrap.b32 	%r9637, %r9632, %r9633, 18;
	mov.b64 	%rd1981, {%r9637, %r9636};
	xor.b64  	%rd1982, %rd1981, %rd1980;
	shf.l.wrap.b32 	%r9638, %r9632, %r9633, 23;
	shf.l.wrap.b32 	%r9639, %r9633, %r9632, 23;
	mov.b64 	%rd1983, {%r9639, %r9638};
	xor.b64  	%rd1984, %rd1982, %rd1983;
	xor.b64  	%rd1985, %rd1735, %rd1710;
	and.b64  	%rd1986, %rd1760, %rd1985;
	xor.b64  	%rd1987, %rd1986, %rd1710;
	add.s64 	%rd1988, %rd1987, %rd1685;
	add.s64 	%rd1989, %rd1988, %rd1784;
	add.s64 	%rd1991, %rd1989, %rd50;
	add.s64 	%rd1992, %rd1991, %rd1984;
	add.s64 	%rd1993, %rd1992, %rd1696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9640,%dummy}, %rd1771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9641}, %rd1771;
	}
	shf.r.wrap.b32 	%r9642, %r9641, %r9640, 28;
	shf.r.wrap.b32 	%r9643, %r9640, %r9641, 28;
	mov.b64 	%rd1994, {%r9643, %r9642};
	shf.l.wrap.b32 	%r9644, %r9640, %r9641, 30;
	shf.l.wrap.b32 	%r9645, %r9641, %r9640, 30;
	mov.b64 	%rd1995, {%r9645, %r9644};
	xor.b64  	%rd1996, %rd1995, %rd1994;
	shf.l.wrap.b32 	%r9646, %r9640, %r9641, 25;
	shf.l.wrap.b32 	%r9647, %r9641, %r9640, 25;
	mov.b64 	%rd1997, {%r9647, %r9646};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	xor.b64  	%rd1999, %rd1771, %rd1721;
	xor.b64  	%rd2000, %rd1771, %rd1746;
	and.b64  	%rd2001, %rd2000, %rd1999;
	xor.b64  	%rd2002, %rd2001, %rd1771;
	add.s64 	%rd2003, %rd1992, %rd2002;
	add.s64 	%rd2004, %rd2003, %rd1998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9648,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9649}, %rd1993;
	}
	shf.r.wrap.b32 	%r9650, %r9649, %r9648, 14;
	shf.r.wrap.b32 	%r9651, %r9648, %r9649, 14;
	mov.b64 	%rd2005, {%r9651, %r9650};
	shf.r.wrap.b32 	%r9652, %r9649, %r9648, 18;
	shf.r.wrap.b32 	%r9653, %r9648, %r9649, 18;
	mov.b64 	%rd2006, {%r9653, %r9652};
	xor.b64  	%rd2007, %rd2006, %rd2005;
	shf.l.wrap.b32 	%r9654, %r9648, %r9649, 23;
	shf.l.wrap.b32 	%r9655, %r9649, %r9648, 23;
	mov.b64 	%rd2008, {%r9655, %r9654};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	xor.b64  	%rd2010, %rd1760, %rd1735;
	and.b64  	%rd2011, %rd1993, %rd2010;
	xor.b64  	%rd2012, %rd2011, %rd1735;
	add.s64 	%rd2013, %rd1797, %rd1710;
	add.s64 	%rd2015, %rd2013, %rd51;
	add.s64 	%rd2016, %rd2015, %rd2012;
	add.s64 	%rd2017, %rd2016, %rd2009;
	add.s64 	%rd2018, %rd2017, %rd1721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9656,%dummy}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9657}, %rd2004;
	}
	shf.r.wrap.b32 	%r9658, %r9657, %r9656, 28;
	shf.r.wrap.b32 	%r9659, %r9656, %r9657, 28;
	mov.b64 	%rd2019, {%r9659, %r9658};
	shf.l.wrap.b32 	%r9660, %r9656, %r9657, 30;
	shf.l.wrap.b32 	%r9661, %r9657, %r9656, 30;
	mov.b64 	%rd2020, {%r9661, %r9660};
	xor.b64  	%rd2021, %rd2020, %rd2019;
	shf.l.wrap.b32 	%r9662, %r9656, %r9657, 25;
	shf.l.wrap.b32 	%r9663, %r9657, %r9656, 25;
	mov.b64 	%rd2022, {%r9663, %r9662};
	xor.b64  	%rd2023, %rd2021, %rd2022;
	xor.b64  	%rd2024, %rd2004, %rd1746;
	xor.b64  	%rd2025, %rd2004, %rd1771;
	and.b64  	%rd2026, %rd2025, %rd2024;
	xor.b64  	%rd2027, %rd2026, %rd2004;
	add.s64 	%rd2028, %rd2017, %rd2027;
	add.s64 	%rd2029, %rd2028, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9664,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9665}, %rd2018;
	}
	shf.r.wrap.b32 	%r9666, %r9665, %r9664, 14;
	shf.r.wrap.b32 	%r9667, %r9664, %r9665, 14;
	mov.b64 	%rd2030, {%r9667, %r9666};
	shf.r.wrap.b32 	%r9668, %r9665, %r9664, 18;
	shf.r.wrap.b32 	%r9669, %r9664, %r9665, 18;
	mov.b64 	%rd2031, {%r9669, %r9668};
	xor.b64  	%rd2032, %rd2031, %rd2030;
	shf.l.wrap.b32 	%r9670, %r9664, %r9665, 23;
	shf.l.wrap.b32 	%r9671, %r9665, %r9664, 23;
	mov.b64 	%rd2033, {%r9671, %r9670};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	xor.b64  	%rd2035, %rd1993, %rd1760;
	and.b64  	%rd2036, %rd2018, %rd2035;
	xor.b64  	%rd2037, %rd2036, %rd1760;
	add.s64 	%rd2038, %rd1810, %rd1735;
	add.s64 	%rd2040, %rd2038, %rd52;
	add.s64 	%rd2041, %rd2040, %rd2037;
	add.s64 	%rd2042, %rd2041, %rd2034;
	add.s64 	%rd2043, %rd2042, %rd1746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9672,%dummy}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9673}, %rd2029;
	}
	shf.r.wrap.b32 	%r9674, %r9673, %r9672, 28;
	shf.r.wrap.b32 	%r9675, %r9672, %r9673, 28;
	mov.b64 	%rd2044, {%r9675, %r9674};
	shf.l.wrap.b32 	%r9676, %r9672, %r9673, 30;
	shf.l.wrap.b32 	%r9677, %r9673, %r9672, 30;
	mov.b64 	%rd2045, {%r9677, %r9676};
	xor.b64  	%rd2046, %rd2045, %rd2044;
	shf.l.wrap.b32 	%r9678, %r9672, %r9673, 25;
	shf.l.wrap.b32 	%r9679, %r9673, %r9672, 25;
	mov.b64 	%rd2047, {%r9679, %r9678};
	xor.b64  	%rd2048, %rd2046, %rd2047;
	xor.b64  	%rd2049, %rd2029, %rd1771;
	xor.b64  	%rd2050, %rd2029, %rd2004;
	and.b64  	%rd2051, %rd2050, %rd2049;
	xor.b64  	%rd2052, %rd2051, %rd2029;
	add.s64 	%rd2053, %rd2042, %rd2052;
	add.s64 	%rd2054, %rd2053, %rd2048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9680,%dummy}, %rd2043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9681}, %rd2043;
	}
	shf.r.wrap.b32 	%r9682, %r9681, %r9680, 14;
	shf.r.wrap.b32 	%r9683, %r9680, %r9681, 14;
	mov.b64 	%rd2055, {%r9683, %r9682};
	shf.r.wrap.b32 	%r9684, %r9681, %r9680, 18;
	shf.r.wrap.b32 	%r9685, %r9680, %r9681, 18;
	mov.b64 	%rd2056, {%r9685, %r9684};
	xor.b64  	%rd2057, %rd2056, %rd2055;
	shf.l.wrap.b32 	%r9686, %r9680, %r9681, 23;
	shf.l.wrap.b32 	%r9687, %r9681, %r9680, 23;
	mov.b64 	%rd2058, {%r9687, %r9686};
	xor.b64  	%rd2059, %rd2057, %rd2058;
	xor.b64  	%rd2060, %rd2018, %rd1993;
	and.b64  	%rd2061, %rd2043, %rd2060;
	xor.b64  	%rd2062, %rd2061, %rd1993;
	add.s64 	%rd2063, %rd1823, %rd1760;
	add.s64 	%rd2065, %rd2063, %rd53;
	add.s64 	%rd2066, %rd2065, %rd2062;
	add.s64 	%rd2067, %rd2066, %rd2059;
	add.s64 	%rd2068, %rd2067, %rd1771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9688,%dummy}, %rd2054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9689}, %rd2054;
	}
	shf.r.wrap.b32 	%r9690, %r9689, %r9688, 28;
	shf.r.wrap.b32 	%r9691, %r9688, %r9689, 28;
	mov.b64 	%rd2069, {%r9691, %r9690};
	shf.l.wrap.b32 	%r9692, %r9688, %r9689, 30;
	shf.l.wrap.b32 	%r9693, %r9689, %r9688, 30;
	mov.b64 	%rd2070, {%r9693, %r9692};
	xor.b64  	%rd2071, %rd2070, %rd2069;
	shf.l.wrap.b32 	%r9694, %r9688, %r9689, 25;
	shf.l.wrap.b32 	%r9695, %r9689, %r9688, 25;
	mov.b64 	%rd2072, {%r9695, %r9694};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	xor.b64  	%rd2074, %rd2054, %rd2004;
	xor.b64  	%rd2075, %rd2054, %rd2029;
	and.b64  	%rd2076, %rd2075, %rd2074;
	xor.b64  	%rd2077, %rd2076, %rd2054;
	add.s64 	%rd2078, %rd2067, %rd2077;
	add.s64 	%rd2079, %rd2078, %rd2073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9696,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9697}, %rd2068;
	}
	shf.r.wrap.b32 	%r9698, %r9697, %r9696, 14;
	shf.r.wrap.b32 	%r9699, %r9696, %r9697, 14;
	mov.b64 	%rd2080, {%r9699, %r9698};
	shf.r.wrap.b32 	%r9700, %r9697, %r9696, 18;
	shf.r.wrap.b32 	%r9701, %r9696, %r9697, 18;
	mov.b64 	%rd2081, {%r9701, %r9700};
	xor.b64  	%rd2082, %rd2081, %rd2080;
	shf.l.wrap.b32 	%r9702, %r9696, %r9697, 23;
	shf.l.wrap.b32 	%r9703, %r9697, %r9696, 23;
	mov.b64 	%rd2083, {%r9703, %r9702};
	xor.b64  	%rd2084, %rd2082, %rd2083;
	xor.b64  	%rd2085, %rd2043, %rd2018;
	and.b64  	%rd2086, %rd2068, %rd2085;
	xor.b64  	%rd2087, %rd2086, %rd2018;
	add.s64 	%rd2088, %rd1993, %rd1836;
	add.s64 	%rd2090, %rd2088, %rd54;
	add.s64 	%rd2091, %rd2090, %rd2087;
	add.s64 	%rd2092, %rd2091, %rd2084;
	add.s64 	%rd2093, %rd2092, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9704,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9705}, %rd2079;
	}
	shf.r.wrap.b32 	%r9706, %r9705, %r9704, 28;
	shf.r.wrap.b32 	%r9707, %r9704, %r9705, 28;
	mov.b64 	%rd2094, {%r9707, %r9706};
	shf.l.wrap.b32 	%r9708, %r9704, %r9705, 30;
	shf.l.wrap.b32 	%r9709, %r9705, %r9704, 30;
	mov.b64 	%rd2095, {%r9709, %r9708};
	xor.b64  	%rd2096, %rd2095, %rd2094;
	shf.l.wrap.b32 	%r9710, %r9704, %r9705, 25;
	shf.l.wrap.b32 	%r9711, %r9705, %r9704, 25;
	mov.b64 	%rd2097, {%r9711, %r9710};
	xor.b64  	%rd2098, %rd2096, %rd2097;
	xor.b64  	%rd2099, %rd2079, %rd2029;
	xor.b64  	%rd2100, %rd2079, %rd2054;
	and.b64  	%rd2101, %rd2100, %rd2099;
	xor.b64  	%rd2102, %rd2101, %rd2079;
	add.s64 	%rd2103, %rd2092, %rd2102;
	add.s64 	%rd2104, %rd2103, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9712,%dummy}, %rd2093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9713}, %rd2093;
	}
	shf.r.wrap.b32 	%r9714, %r9713, %r9712, 14;
	shf.r.wrap.b32 	%r9715, %r9712, %r9713, 14;
	mov.b64 	%rd2105, {%r9715, %r9714};
	shf.r.wrap.b32 	%r9716, %r9713, %r9712, 18;
	shf.r.wrap.b32 	%r9717, %r9712, %r9713, 18;
	mov.b64 	%rd2106, {%r9717, %r9716};
	xor.b64  	%rd2107, %rd2106, %rd2105;
	shf.l.wrap.b32 	%r9718, %r9712, %r9713, 23;
	shf.l.wrap.b32 	%r9719, %r9713, %r9712, 23;
	mov.b64 	%rd2108, {%r9719, %r9718};
	xor.b64  	%rd2109, %rd2107, %rd2108;
	xor.b64  	%rd2110, %rd2068, %rd2043;
	and.b64  	%rd2111, %rd2093, %rd2110;
	xor.b64  	%rd2112, %rd2111, %rd2043;
	add.s64 	%rd2113, %rd2018, %rd1849;
	add.s64 	%rd2115, %rd2113, %rd55;
	add.s64 	%rd2116, %rd2115, %rd2112;
	add.s64 	%rd2117, %rd2116, %rd2109;
	add.s64 	%rd2118, %rd2117, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9720,%dummy}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9721}, %rd2104;
	}
	shf.r.wrap.b32 	%r9722, %r9721, %r9720, 28;
	shf.r.wrap.b32 	%r9723, %r9720, %r9721, 28;
	mov.b64 	%rd2119, {%r9723, %r9722};
	shf.l.wrap.b32 	%r9724, %r9720, %r9721, 30;
	shf.l.wrap.b32 	%r9725, %r9721, %r9720, 30;
	mov.b64 	%rd2120, {%r9725, %r9724};
	xor.b64  	%rd2121, %rd2120, %rd2119;
	shf.l.wrap.b32 	%r9726, %r9720, %r9721, 25;
	shf.l.wrap.b32 	%r9727, %r9721, %r9720, 25;
	mov.b64 	%rd2122, {%r9727, %r9726};
	xor.b64  	%rd2123, %rd2121, %rd2122;
	xor.b64  	%rd2124, %rd2104, %rd2054;
	xor.b64  	%rd2125, %rd2104, %rd2079;
	and.b64  	%rd2126, %rd2125, %rd2124;
	xor.b64  	%rd2127, %rd2126, %rd2104;
	add.s64 	%rd2128, %rd2117, %rd2127;
	add.s64 	%rd2129, %rd2128, %rd2123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9728,%dummy}, %rd2118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9729}, %rd2118;
	}
	shf.r.wrap.b32 	%r9730, %r9729, %r9728, 14;
	shf.r.wrap.b32 	%r9731, %r9728, %r9729, 14;
	mov.b64 	%rd2130, {%r9731, %r9730};
	shf.r.wrap.b32 	%r9732, %r9729, %r9728, 18;
	shf.r.wrap.b32 	%r9733, %r9728, %r9729, 18;
	mov.b64 	%rd2131, {%r9733, %r9732};
	xor.b64  	%rd2132, %rd2131, %rd2130;
	shf.l.wrap.b32 	%r9734, %r9728, %r9729, 23;
	shf.l.wrap.b32 	%r9735, %r9729, %r9728, 23;
	mov.b64 	%rd2133, {%r9735, %r9734};
	xor.b64  	%rd2134, %rd2132, %rd2133;
	xor.b64  	%rd2135, %rd2093, %rd2068;
	and.b64  	%rd2136, %rd2118, %rd2135;
	xor.b64  	%rd2137, %rd2136, %rd2068;
	add.s64 	%rd2138, %rd2043, %rd1862;
	add.s64 	%rd2140, %rd2138, %rd56;
	add.s64 	%rd2141, %rd2140, %rd2137;
	add.s64 	%rd2142, %rd2141, %rd2134;
	add.s64 	%rd2143, %rd2142, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9736,%dummy}, %rd2129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9737}, %rd2129;
	}
	shf.r.wrap.b32 	%r9738, %r9737, %r9736, 28;
	shf.r.wrap.b32 	%r9739, %r9736, %r9737, 28;
	mov.b64 	%rd2144, {%r9739, %r9738};
	shf.l.wrap.b32 	%r9740, %r9736, %r9737, 30;
	shf.l.wrap.b32 	%r9741, %r9737, %r9736, 30;
	mov.b64 	%rd2145, {%r9741, %r9740};
	xor.b64  	%rd2146, %rd2145, %rd2144;
	shf.l.wrap.b32 	%r9742, %r9736, %r9737, 25;
	shf.l.wrap.b32 	%r9743, %r9737, %r9736, 25;
	mov.b64 	%rd2147, {%r9743, %r9742};
	xor.b64  	%rd2148, %rd2146, %rd2147;
	xor.b64  	%rd2149, %rd2129, %rd2079;
	xor.b64  	%rd2150, %rd2129, %rd2104;
	and.b64  	%rd2151, %rd2150, %rd2149;
	xor.b64  	%rd2152, %rd2151, %rd2129;
	add.s64 	%rd2153, %rd2142, %rd2152;
	add.s64 	%rd2154, %rd2153, %rd2148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9744,%dummy}, %rd2143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9745}, %rd2143;
	}
	shf.r.wrap.b32 	%r9746, %r9745, %r9744, 14;
	shf.r.wrap.b32 	%r9747, %r9744, %r9745, 14;
	mov.b64 	%rd2155, {%r9747, %r9746};
	shf.r.wrap.b32 	%r9748, %r9745, %r9744, 18;
	shf.r.wrap.b32 	%r9749, %r9744, %r9745, 18;
	mov.b64 	%rd2156, {%r9749, %r9748};
	xor.b64  	%rd2157, %rd2156, %rd2155;
	shf.l.wrap.b32 	%r9750, %r9744, %r9745, 23;
	shf.l.wrap.b32 	%r9751, %r9745, %r9744, 23;
	mov.b64 	%rd2158, {%r9751, %r9750};
	xor.b64  	%rd2159, %rd2157, %rd2158;
	xor.b64  	%rd2160, %rd2118, %rd2093;
	and.b64  	%rd2161, %rd2143, %rd2160;
	xor.b64  	%rd2162, %rd2161, %rd2093;
	add.s64 	%rd2163, %rd2068, %rd1875;
	add.s64 	%rd2165, %rd2163, %rd57;
	add.s64 	%rd2166, %rd2165, %rd2162;
	add.s64 	%rd2167, %rd2166, %rd2159;
	add.s64 	%rd2168, %rd2167, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9752,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9753}, %rd2154;
	}
	shf.r.wrap.b32 	%r9754, %r9753, %r9752, 28;
	shf.r.wrap.b32 	%r9755, %r9752, %r9753, 28;
	mov.b64 	%rd2169, {%r9755, %r9754};
	shf.l.wrap.b32 	%r9756, %r9752, %r9753, 30;
	shf.l.wrap.b32 	%r9757, %r9753, %r9752, 30;
	mov.b64 	%rd2170, {%r9757, %r9756};
	xor.b64  	%rd2171, %rd2170, %rd2169;
	shf.l.wrap.b32 	%r9758, %r9752, %r9753, 25;
	shf.l.wrap.b32 	%r9759, %r9753, %r9752, 25;
	mov.b64 	%rd2172, {%r9759, %r9758};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	xor.b64  	%rd2174, %rd2154, %rd2104;
	xor.b64  	%rd2175, %rd2154, %rd2129;
	and.b64  	%rd2176, %rd2175, %rd2174;
	xor.b64  	%rd2177, %rd2176, %rd2154;
	add.s64 	%rd2178, %rd2167, %rd2177;
	add.s64 	%rd2179, %rd2178, %rd2173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9760,%dummy}, %rd2168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9761}, %rd2168;
	}
	shf.r.wrap.b32 	%r9762, %r9761, %r9760, 14;
	shf.r.wrap.b32 	%r9763, %r9760, %r9761, 14;
	mov.b64 	%rd2180, {%r9763, %r9762};
	shf.r.wrap.b32 	%r9764, %r9761, %r9760, 18;
	shf.r.wrap.b32 	%r9765, %r9760, %r9761, 18;
	mov.b64 	%rd2181, {%r9765, %r9764};
	xor.b64  	%rd2182, %rd2181, %rd2180;
	shf.l.wrap.b32 	%r9766, %r9760, %r9761, 23;
	shf.l.wrap.b32 	%r9767, %r9761, %r9760, 23;
	mov.b64 	%rd2183, {%r9767, %r9766};
	xor.b64  	%rd2184, %rd2182, %rd2183;
	xor.b64  	%rd2185, %rd2143, %rd2118;
	and.b64  	%rd2186, %rd2168, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2118;
	add.s64 	%rd2188, %rd2093, %rd1888;
	add.s64 	%rd2190, %rd2188, %rd58;
	add.s64 	%rd2191, %rd2190, %rd2187;
	add.s64 	%rd2192, %rd2191, %rd2184;
	add.s64 	%rd2193, %rd2192, %rd2104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9768,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9769}, %rd2179;
	}
	shf.r.wrap.b32 	%r9770, %r9769, %r9768, 28;
	shf.r.wrap.b32 	%r9771, %r9768, %r9769, 28;
	mov.b64 	%rd2194, {%r9771, %r9770};
	shf.l.wrap.b32 	%r9772, %r9768, %r9769, 30;
	shf.l.wrap.b32 	%r9773, %r9769, %r9768, 30;
	mov.b64 	%rd2195, {%r9773, %r9772};
	xor.b64  	%rd2196, %rd2195, %rd2194;
	shf.l.wrap.b32 	%r9774, %r9768, %r9769, 25;
	shf.l.wrap.b32 	%r9775, %r9769, %r9768, 25;
	mov.b64 	%rd2197, {%r9775, %r9774};
	xor.b64  	%rd2198, %rd2196, %rd2197;
	xor.b64  	%rd2199, %rd2179, %rd2129;
	xor.b64  	%rd2200, %rd2179, %rd2154;
	and.b64  	%rd2201, %rd2200, %rd2199;
	xor.b64  	%rd2202, %rd2201, %rd2179;
	add.s64 	%rd2203, %rd2192, %rd2202;
	add.s64 	%rd2204, %rd2203, %rd2198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9776,%dummy}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9777}, %rd2193;
	}
	shf.r.wrap.b32 	%r9778, %r9777, %r9776, 14;
	shf.r.wrap.b32 	%r9779, %r9776, %r9777, 14;
	mov.b64 	%rd2205, {%r9779, %r9778};
	shf.r.wrap.b32 	%r9780, %r9777, %r9776, 18;
	shf.r.wrap.b32 	%r9781, %r9776, %r9777, 18;
	mov.b64 	%rd2206, {%r9781, %r9780};
	xor.b64  	%rd2207, %rd2206, %rd2205;
	shf.l.wrap.b32 	%r9782, %r9776, %r9777, 23;
	shf.l.wrap.b32 	%r9783, %r9777, %r9776, 23;
	mov.b64 	%rd2208, {%r9783, %r9782};
	xor.b64  	%rd2209, %rd2207, %rd2208;
	xor.b64  	%rd2210, %rd2168, %rd2143;
	and.b64  	%rd2211, %rd2193, %rd2210;
	xor.b64  	%rd2212, %rd2211, %rd2143;
	add.s64 	%rd2213, %rd2118, %rd1901;
	add.s64 	%rd2215, %rd2213, %rd59;
	add.s64 	%rd2216, %rd2215, %rd2212;
	add.s64 	%rd2217, %rd2216, %rd2209;
	add.s64 	%rd2218, %rd2217, %rd2129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9784,%dummy}, %rd2204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9785}, %rd2204;
	}
	shf.r.wrap.b32 	%r9786, %r9785, %r9784, 28;
	shf.r.wrap.b32 	%r9787, %r9784, %r9785, 28;
	mov.b64 	%rd2219, {%r9787, %r9786};
	shf.l.wrap.b32 	%r9788, %r9784, %r9785, 30;
	shf.l.wrap.b32 	%r9789, %r9785, %r9784, 30;
	mov.b64 	%rd2220, {%r9789, %r9788};
	xor.b64  	%rd2221, %rd2220, %rd2219;
	shf.l.wrap.b32 	%r9790, %r9784, %r9785, 25;
	shf.l.wrap.b32 	%r9791, %r9785, %r9784, 25;
	mov.b64 	%rd2222, {%r9791, %r9790};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	xor.b64  	%rd2224, %rd2204, %rd2154;
	xor.b64  	%rd2225, %rd2204, %rd2179;
	and.b64  	%rd2226, %rd2225, %rd2224;
	xor.b64  	%rd2227, %rd2226, %rd2204;
	add.s64 	%rd2228, %rd2217, %rd2227;
	add.s64 	%rd2229, %rd2228, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9792,%dummy}, %rd2218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9793}, %rd2218;
	}
	shf.r.wrap.b32 	%r9794, %r9793, %r9792, 14;
	shf.r.wrap.b32 	%r9795, %r9792, %r9793, 14;
	mov.b64 	%rd2230, {%r9795, %r9794};
	shf.r.wrap.b32 	%r9796, %r9793, %r9792, 18;
	shf.r.wrap.b32 	%r9797, %r9792, %r9793, 18;
	mov.b64 	%rd2231, {%r9797, %r9796};
	xor.b64  	%rd2232, %rd2231, %rd2230;
	shf.l.wrap.b32 	%r9798, %r9792, %r9793, 23;
	shf.l.wrap.b32 	%r9799, %r9793, %r9792, 23;
	mov.b64 	%rd2233, {%r9799, %r9798};
	xor.b64  	%rd2234, %rd2232, %rd2233;
	xor.b64  	%rd2235, %rd2193, %rd2168;
	and.b64  	%rd2236, %rd2218, %rd2235;
	xor.b64  	%rd2237, %rd2236, %rd2168;
	add.s64 	%rd2238, %rd2143, %rd1914;
	add.s64 	%rd2240, %rd2238, %rd60;
	add.s64 	%rd2241, %rd2240, %rd2237;
	add.s64 	%rd2242, %rd2241, %rd2234;
	add.s64 	%rd2243, %rd2242, %rd2154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9800,%dummy}, %rd2229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9801}, %rd2229;
	}
	shf.r.wrap.b32 	%r9802, %r9801, %r9800, 28;
	shf.r.wrap.b32 	%r9803, %r9800, %r9801, 28;
	mov.b64 	%rd2244, {%r9803, %r9802};
	shf.l.wrap.b32 	%r9804, %r9800, %r9801, 30;
	shf.l.wrap.b32 	%r9805, %r9801, %r9800, 30;
	mov.b64 	%rd2245, {%r9805, %r9804};
	xor.b64  	%rd2246, %rd2245, %rd2244;
	shf.l.wrap.b32 	%r9806, %r9800, %r9801, 25;
	shf.l.wrap.b32 	%r9807, %r9801, %r9800, 25;
	mov.b64 	%rd2247, {%r9807, %r9806};
	xor.b64  	%rd2248, %rd2246, %rd2247;
	xor.b64  	%rd2249, %rd2229, %rd2179;
	xor.b64  	%rd2250, %rd2229, %rd2204;
	and.b64  	%rd2251, %rd2250, %rd2249;
	xor.b64  	%rd2252, %rd2251, %rd2229;
	add.s64 	%rd2253, %rd2242, %rd2252;
	add.s64 	%rd2254, %rd2253, %rd2248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9808,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9809}, %rd2243;
	}
	shf.r.wrap.b32 	%r9810, %r9809, %r9808, 14;
	shf.r.wrap.b32 	%r9811, %r9808, %r9809, 14;
	mov.b64 	%rd2255, {%r9811, %r9810};
	shf.r.wrap.b32 	%r9812, %r9809, %r9808, 18;
	shf.r.wrap.b32 	%r9813, %r9808, %r9809, 18;
	mov.b64 	%rd2256, {%r9813, %r9812};
	xor.b64  	%rd2257, %rd2256, %rd2255;
	shf.l.wrap.b32 	%r9814, %r9808, %r9809, 23;
	shf.l.wrap.b32 	%r9815, %r9809, %r9808, 23;
	mov.b64 	%rd2258, {%r9815, %r9814};
	xor.b64  	%rd2259, %rd2257, %rd2258;
	xor.b64  	%rd2260, %rd2218, %rd2193;
	and.b64  	%rd2261, %rd2243, %rd2260;
	xor.b64  	%rd2262, %rd2261, %rd2193;
	add.s64 	%rd2263, %rd2168, %rd1927;
	add.s64 	%rd2265, %rd2263, %rd61;
	add.s64 	%rd2266, %rd2265, %rd2262;
	add.s64 	%rd2267, %rd2266, %rd2259;
	add.s64 	%rd2268, %rd2267, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9816,%dummy}, %rd2254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9817}, %rd2254;
	}
	shf.r.wrap.b32 	%r9818, %r9817, %r9816, 28;
	shf.r.wrap.b32 	%r9819, %r9816, %r9817, 28;
	mov.b64 	%rd2269, {%r9819, %r9818};
	shf.l.wrap.b32 	%r9820, %r9816, %r9817, 30;
	shf.l.wrap.b32 	%r9821, %r9817, %r9816, 30;
	mov.b64 	%rd2270, {%r9821, %r9820};
	xor.b64  	%rd2271, %rd2270, %rd2269;
	shf.l.wrap.b32 	%r9822, %r9816, %r9817, 25;
	shf.l.wrap.b32 	%r9823, %r9817, %r9816, 25;
	mov.b64 	%rd2272, {%r9823, %r9822};
	xor.b64  	%rd2273, %rd2271, %rd2272;
	xor.b64  	%rd2274, %rd2254, %rd2204;
	xor.b64  	%rd2275, %rd2254, %rd2229;
	and.b64  	%rd2276, %rd2275, %rd2274;
	xor.b64  	%rd2277, %rd2276, %rd2254;
	add.s64 	%rd2278, %rd2267, %rd2277;
	add.s64 	%rd2279, %rd2278, %rd2273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9824,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9825}, %rd2268;
	}
	shf.r.wrap.b32 	%r9826, %r9825, %r9824, 14;
	shf.r.wrap.b32 	%r9827, %r9824, %r9825, 14;
	mov.b64 	%rd2280, {%r9827, %r9826};
	shf.r.wrap.b32 	%r9828, %r9825, %r9824, 18;
	shf.r.wrap.b32 	%r9829, %r9824, %r9825, 18;
	mov.b64 	%rd2281, {%r9829, %r9828};
	xor.b64  	%rd2282, %rd2281, %rd2280;
	shf.l.wrap.b32 	%r9830, %r9824, %r9825, 23;
	shf.l.wrap.b32 	%r9831, %r9825, %r9824, 23;
	mov.b64 	%rd2283, {%r9831, %r9830};
	xor.b64  	%rd2284, %rd2282, %rd2283;
	xor.b64  	%rd2285, %rd2243, %rd2218;
	and.b64  	%rd2286, %rd2268, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2218;
	add.s64 	%rd2288, %rd2193, %rd1940;
	add.s64 	%rd2290, %rd2288, %rd62;
	add.s64 	%rd2291, %rd2290, %rd2287;
	add.s64 	%rd2292, %rd2291, %rd2284;
	add.s64 	%rd2293, %rd2292, %rd2204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9832,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9833}, %rd2279;
	}
	shf.r.wrap.b32 	%r9834, %r9833, %r9832, 28;
	shf.r.wrap.b32 	%r9835, %r9832, %r9833, 28;
	mov.b64 	%rd2294, {%r9835, %r9834};
	shf.l.wrap.b32 	%r9836, %r9832, %r9833, 30;
	shf.l.wrap.b32 	%r9837, %r9833, %r9832, 30;
	mov.b64 	%rd2295, {%r9837, %r9836};
	xor.b64  	%rd2296, %rd2295, %rd2294;
	shf.l.wrap.b32 	%r9838, %r9832, %r9833, 25;
	shf.l.wrap.b32 	%r9839, %r9833, %r9832, 25;
	mov.b64 	%rd2297, {%r9839, %r9838};
	xor.b64  	%rd2298, %rd2296, %rd2297;
	xor.b64  	%rd2299, %rd2279, %rd2229;
	xor.b64  	%rd2300, %rd2279, %rd2254;
	and.b64  	%rd2301, %rd2300, %rd2299;
	xor.b64  	%rd2302, %rd2301, %rd2279;
	add.s64 	%rd2303, %rd2292, %rd2302;
	add.s64 	%rd2304, %rd2303, %rd2298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9840,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9841}, %rd2293;
	}
	shf.r.wrap.b32 	%r9842, %r9841, %r9840, 14;
	shf.r.wrap.b32 	%r9843, %r9840, %r9841, 14;
	mov.b64 	%rd2305, {%r9843, %r9842};
	shf.r.wrap.b32 	%r9844, %r9841, %r9840, 18;
	shf.r.wrap.b32 	%r9845, %r9840, %r9841, 18;
	mov.b64 	%rd2306, {%r9845, %r9844};
	xor.b64  	%rd2307, %rd2306, %rd2305;
	shf.l.wrap.b32 	%r9846, %r9840, %r9841, 23;
	shf.l.wrap.b32 	%r9847, %r9841, %r9840, 23;
	mov.b64 	%rd2308, {%r9847, %r9846};
	xor.b64  	%rd2309, %rd2307, %rd2308;
	xor.b64  	%rd2310, %rd2268, %rd2243;
	and.b64  	%rd2311, %rd2293, %rd2310;
	xor.b64  	%rd2312, %rd2311, %rd2243;
	add.s64 	%rd2313, %rd2218, %rd1953;
	add.s64 	%rd2315, %rd2313, %rd63;
	add.s64 	%rd2316, %rd2315, %rd2312;
	add.s64 	%rd2317, %rd2316, %rd2309;
	add.s64 	%rd2318, %rd2317, %rd2229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9848,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9849}, %rd2304;
	}
	shf.r.wrap.b32 	%r9850, %r9849, %r9848, 28;
	shf.r.wrap.b32 	%r9851, %r9848, %r9849, 28;
	mov.b64 	%rd2319, {%r9851, %r9850};
	shf.l.wrap.b32 	%r9852, %r9848, %r9849, 30;
	shf.l.wrap.b32 	%r9853, %r9849, %r9848, 30;
	mov.b64 	%rd2320, {%r9853, %r9852};
	xor.b64  	%rd2321, %rd2320, %rd2319;
	shf.l.wrap.b32 	%r9854, %r9848, %r9849, 25;
	shf.l.wrap.b32 	%r9855, %r9849, %r9848, 25;
	mov.b64 	%rd2322, {%r9855, %r9854};
	xor.b64  	%rd2323, %rd2321, %rd2322;
	xor.b64  	%rd2324, %rd2304, %rd2254;
	xor.b64  	%rd2325, %rd2304, %rd2279;
	and.b64  	%rd2326, %rd2325, %rd2324;
	xor.b64  	%rd2327, %rd2326, %rd2304;
	add.s64 	%rd2328, %rd2317, %rd2327;
	add.s64 	%rd2329, %rd2328, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9856,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9857}, %rd2318;
	}
	shf.r.wrap.b32 	%r9858, %r9857, %r9856, 14;
	shf.r.wrap.b32 	%r9859, %r9856, %r9857, 14;
	mov.b64 	%rd2330, {%r9859, %r9858};
	shf.r.wrap.b32 	%r9860, %r9857, %r9856, 18;
	shf.r.wrap.b32 	%r9861, %r9856, %r9857, 18;
	mov.b64 	%rd2331, {%r9861, %r9860};
	xor.b64  	%rd2332, %rd2331, %rd2330;
	shf.l.wrap.b32 	%r9862, %r9856, %r9857, 23;
	shf.l.wrap.b32 	%r9863, %r9857, %r9856, 23;
	mov.b64 	%rd2333, {%r9863, %r9862};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	xor.b64  	%rd2335, %rd2293, %rd2268;
	and.b64  	%rd2336, %rd2318, %rd2335;
	xor.b64  	%rd2337, %rd2336, %rd2268;
	add.s64 	%rd2338, %rd2243, %rd1966;
	add.s64 	%rd2340, %rd2338, %rd64;
	add.s64 	%rd2341, %rd2340, %rd2337;
	add.s64 	%rd2342, %rd2341, %rd2334;
	add.s64 	%rd2343, %rd2342, %rd2254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9864,%dummy}, %rd2329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9865}, %rd2329;
	}
	shf.r.wrap.b32 	%r9866, %r9865, %r9864, 28;
	shf.r.wrap.b32 	%r9867, %r9864, %r9865, 28;
	mov.b64 	%rd2344, {%r9867, %r9866};
	shf.l.wrap.b32 	%r9868, %r9864, %r9865, 30;
	shf.l.wrap.b32 	%r9869, %r9865, %r9864, 30;
	mov.b64 	%rd2345, {%r9869, %r9868};
	xor.b64  	%rd2346, %rd2345, %rd2344;
	shf.l.wrap.b32 	%r9870, %r9864, %r9865, 25;
	shf.l.wrap.b32 	%r9871, %r9865, %r9864, 25;
	mov.b64 	%rd2347, {%r9871, %r9870};
	xor.b64  	%rd2348, %rd2346, %rd2347;
	xor.b64  	%rd2349, %rd2329, %rd2279;
	xor.b64  	%rd2350, %rd2329, %rd2304;
	and.b64  	%rd2351, %rd2350, %rd2349;
	xor.b64  	%rd2352, %rd2351, %rd2329;
	add.s64 	%rd2353, %rd2342, %rd2352;
	add.s64 	%rd2354, %rd2353, %rd2348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9872,%dummy}, %rd2343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9873}, %rd2343;
	}
	shf.r.wrap.b32 	%r9874, %r9873, %r9872, 14;
	shf.r.wrap.b32 	%r9875, %r9872, %r9873, 14;
	mov.b64 	%rd2355, {%r9875, %r9874};
	shf.r.wrap.b32 	%r9876, %r9873, %r9872, 18;
	shf.r.wrap.b32 	%r9877, %r9872, %r9873, 18;
	mov.b64 	%rd2356, {%r9877, %r9876};
	xor.b64  	%rd2357, %rd2356, %rd2355;
	shf.l.wrap.b32 	%r9878, %r9872, %r9873, 23;
	shf.l.wrap.b32 	%r9879, %r9873, %r9872, 23;
	mov.b64 	%rd2358, {%r9879, %r9878};
	xor.b64  	%rd2359, %rd2357, %rd2358;
	xor.b64  	%rd2360, %rd2318, %rd2293;
	and.b64  	%rd2361, %rd2343, %rd2360;
	xor.b64  	%rd2362, %rd2361, %rd2293;
	add.s64 	%rd2363, %rd2268, %rd1979;
	add.s64 	%rd2365, %rd2363, %rd65;
	add.s64 	%rd2366, %rd2365, %rd2362;
	add.s64 	%rd2367, %rd2366, %rd2359;
	add.s64 	%rd2368, %rd2367, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9880,%dummy}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9881}, %rd2354;
	}
	shf.r.wrap.b32 	%r9882, %r9881, %r9880, 28;
	shf.r.wrap.b32 	%r9883, %r9880, %r9881, 28;
	mov.b64 	%rd2369, {%r9883, %r9882};
	shf.l.wrap.b32 	%r9884, %r9880, %r9881, 30;
	shf.l.wrap.b32 	%r9885, %r9881, %r9880, 30;
	mov.b64 	%rd2370, {%r9885, %r9884};
	xor.b64  	%rd2371, %rd2370, %rd2369;
	shf.l.wrap.b32 	%r9886, %r9880, %r9881, 25;
	shf.l.wrap.b32 	%r9887, %r9881, %r9880, 25;
	mov.b64 	%rd2372, {%r9887, %r9886};
	xor.b64  	%rd2373, %rd2371, %rd2372;
	xor.b64  	%rd2374, %rd2354, %rd2304;
	xor.b64  	%rd2375, %rd2354, %rd2329;
	and.b64  	%rd2376, %rd2375, %rd2374;
	xor.b64  	%rd2377, %rd2376, %rd2354;
	add.s64 	%rd2378, %rd2367, %rd2377;
	add.s64 	%rd2379, %rd2378, %rd2373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9888,%dummy}, %rd1966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9889}, %rd1966;
	}
	shf.r.wrap.b32 	%r9890, %r9889, %r9888, 19;
	shf.r.wrap.b32 	%r9891, %r9888, %r9889, 19;
	mov.b64 	%rd2380, {%r9891, %r9890};
	shf.l.wrap.b32 	%r9892, %r9888, %r9889, 3;
	shf.l.wrap.b32 	%r9893, %r9889, %r9888, 3;
	mov.b64 	%rd2381, {%r9893, %r9892};
	shr.u64 	%rd2382, %rd1966, 6;
	xor.b64  	%rd2383, %rd2380, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2381;
	shf.r.wrap.b32 	%r9894, %r9503, %r9502, 1;
	shf.r.wrap.b32 	%r9895, %r9502, %r9503, 1;
	mov.b64 	%rd2385, {%r9895, %r9894};
	shf.r.wrap.b32 	%r9896, %r9503, %r9502, 8;
	shf.r.wrap.b32 	%r9897, %r9502, %r9503, 8;
	mov.b64 	%rd2386, {%r9897, %r9896};
	shr.u64 	%rd2387, %rd1797, 7;
	xor.b64  	%rd2388, %rd2385, %rd2387;
	xor.b64  	%rd2389, %rd2388, %rd2386;
	add.s64 	%rd2390, %rd1901, %rd1784;
	add.s64 	%rd2391, %rd2390, %rd2384;
	add.s64 	%rd2392, %rd2391, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9898,%dummy}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9899}, %rd1979;
	}
	shf.r.wrap.b32 	%r9900, %r9899, %r9898, 19;
	shf.r.wrap.b32 	%r9901, %r9898, %r9899, 19;
	mov.b64 	%rd2393, {%r9901, %r9900};
	shf.l.wrap.b32 	%r9902, %r9898, %r9899, 3;
	shf.l.wrap.b32 	%r9903, %r9899, %r9898, 3;
	mov.b64 	%rd2394, {%r9903, %r9902};
	shr.u64 	%rd2395, %rd1979, 6;
	xor.b64  	%rd2396, %rd2393, %rd2395;
	xor.b64  	%rd2397, %rd2396, %rd2394;
	shf.r.wrap.b32 	%r9904, %r9513, %r9512, 1;
	shf.r.wrap.b32 	%r9905, %r9512, %r9513, 1;
	mov.b64 	%rd2398, {%r9905, %r9904};
	shf.r.wrap.b32 	%r9906, %r9513, %r9512, 8;
	shf.r.wrap.b32 	%r9907, %r9512, %r9513, 8;
	mov.b64 	%rd2399, {%r9907, %r9906};
	shr.u64 	%rd2400, %rd1810, 7;
	xor.b64  	%rd2401, %rd2398, %rd2400;
	xor.b64  	%rd2402, %rd2401, %rd2399;
	add.s64 	%rd2403, %rd1914, %rd1797;
	add.s64 	%rd2404, %rd2403, %rd2397;
	add.s64 	%rd2405, %rd2404, %rd2402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9908,%dummy}, %rd2392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9909}, %rd2392;
	}
	shf.r.wrap.b32 	%r9910, %r9909, %r9908, 19;
	shf.r.wrap.b32 	%r9911, %r9908, %r9909, 19;
	mov.b64 	%rd2406, {%r9911, %r9910};
	shf.l.wrap.b32 	%r9912, %r9908, %r9909, 3;
	shf.l.wrap.b32 	%r9913, %r9909, %r9908, 3;
	mov.b64 	%rd2407, {%r9913, %r9912};
	shr.u64 	%rd2408, %rd2392, 6;
	xor.b64  	%rd2409, %rd2406, %rd2408;
	xor.b64  	%rd2410, %rd2409, %rd2407;
	shf.r.wrap.b32 	%r9914, %r9523, %r9522, 1;
	shf.r.wrap.b32 	%r9915, %r9522, %r9523, 1;
	mov.b64 	%rd2411, {%r9915, %r9914};
	shf.r.wrap.b32 	%r9916, %r9523, %r9522, 8;
	shf.r.wrap.b32 	%r9917, %r9522, %r9523, 8;
	mov.b64 	%rd2412, {%r9917, %r9916};
	shr.u64 	%rd2413, %rd1823, 7;
	xor.b64  	%rd2414, %rd2411, %rd2413;
	xor.b64  	%rd2415, %rd2414, %rd2412;
	add.s64 	%rd2416, %rd1927, %rd1810;
	add.s64 	%rd2417, %rd2416, %rd2410;
	add.s64 	%rd2418, %rd2417, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9918,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9919}, %rd2405;
	}
	shf.r.wrap.b32 	%r9920, %r9919, %r9918, 19;
	shf.r.wrap.b32 	%r9921, %r9918, %r9919, 19;
	mov.b64 	%rd2419, {%r9921, %r9920};
	shf.l.wrap.b32 	%r9922, %r9918, %r9919, 3;
	shf.l.wrap.b32 	%r9923, %r9919, %r9918, 3;
	mov.b64 	%rd2420, {%r9923, %r9922};
	shr.u64 	%rd2421, %rd2405, 6;
	xor.b64  	%rd2422, %rd2419, %rd2421;
	xor.b64  	%rd2423, %rd2422, %rd2420;
	shf.r.wrap.b32 	%r9924, %r9533, %r9532, 1;
	shf.r.wrap.b32 	%r9925, %r9532, %r9533, 1;
	mov.b64 	%rd2424, {%r9925, %r9924};
	shf.r.wrap.b32 	%r9926, %r9533, %r9532, 8;
	shf.r.wrap.b32 	%r9927, %r9532, %r9533, 8;
	mov.b64 	%rd2425, {%r9927, %r9926};
	shr.u64 	%rd2426, %rd1836, 7;
	xor.b64  	%rd2427, %rd2424, %rd2426;
	xor.b64  	%rd2428, %rd2427, %rd2425;
	add.s64 	%rd2429, %rd1940, %rd1823;
	add.s64 	%rd2430, %rd2429, %rd2423;
	add.s64 	%rd2431, %rd2430, %rd2428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9928,%dummy}, %rd2418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9929}, %rd2418;
	}
	shf.r.wrap.b32 	%r9930, %r9929, %r9928, 19;
	shf.r.wrap.b32 	%r9931, %r9928, %r9929, 19;
	mov.b64 	%rd2432, {%r9931, %r9930};
	shf.l.wrap.b32 	%r9932, %r9928, %r9929, 3;
	shf.l.wrap.b32 	%r9933, %r9929, %r9928, 3;
	mov.b64 	%rd2433, {%r9933, %r9932};
	shr.u64 	%rd2434, %rd2418, 6;
	xor.b64  	%rd2435, %rd2432, %rd2434;
	xor.b64  	%rd2436, %rd2435, %rd2433;
	shf.r.wrap.b32 	%r9934, %r9543, %r9542, 1;
	shf.r.wrap.b32 	%r9935, %r9542, %r9543, 1;
	mov.b64 	%rd2437, {%r9935, %r9934};
	shf.r.wrap.b32 	%r9936, %r9543, %r9542, 8;
	shf.r.wrap.b32 	%r9937, %r9542, %r9543, 8;
	mov.b64 	%rd2438, {%r9937, %r9936};
	shr.u64 	%rd2439, %rd1849, 7;
	xor.b64  	%rd2440, %rd2437, %rd2439;
	xor.b64  	%rd2441, %rd2440, %rd2438;
	add.s64 	%rd2442, %rd1953, %rd1836;
	add.s64 	%rd2443, %rd2442, %rd2436;
	add.s64 	%rd2444, %rd2443, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9938,%dummy}, %rd2431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9939}, %rd2431;
	}
	shf.r.wrap.b32 	%r9940, %r9939, %r9938, 19;
	shf.r.wrap.b32 	%r9941, %r9938, %r9939, 19;
	mov.b64 	%rd2445, {%r9941, %r9940};
	shf.l.wrap.b32 	%r9942, %r9938, %r9939, 3;
	shf.l.wrap.b32 	%r9943, %r9939, %r9938, 3;
	mov.b64 	%rd2446, {%r9943, %r9942};
	shr.u64 	%rd2447, %rd2431, 6;
	xor.b64  	%rd2448, %rd2445, %rd2447;
	xor.b64  	%rd2449, %rd2448, %rd2446;
	shf.r.wrap.b32 	%r9944, %r9553, %r9552, 1;
	shf.r.wrap.b32 	%r9945, %r9552, %r9553, 1;
	mov.b64 	%rd2450, {%r9945, %r9944};
	shf.r.wrap.b32 	%r9946, %r9553, %r9552, 8;
	shf.r.wrap.b32 	%r9947, %r9552, %r9553, 8;
	mov.b64 	%rd2451, {%r9947, %r9946};
	shr.u64 	%rd2452, %rd1862, 7;
	xor.b64  	%rd2453, %rd2450, %rd2452;
	xor.b64  	%rd2454, %rd2453, %rd2451;
	add.s64 	%rd2455, %rd1966, %rd1849;
	add.s64 	%rd2456, %rd2455, %rd2449;
	add.s64 	%rd2457, %rd2456, %rd2454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9948,%dummy}, %rd2444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9949}, %rd2444;
	}
	shf.r.wrap.b32 	%r9950, %r9949, %r9948, 19;
	shf.r.wrap.b32 	%r9951, %r9948, %r9949, 19;
	mov.b64 	%rd2458, {%r9951, %r9950};
	shf.l.wrap.b32 	%r9952, %r9948, %r9949, 3;
	shf.l.wrap.b32 	%r9953, %r9949, %r9948, 3;
	mov.b64 	%rd2459, {%r9953, %r9952};
	shr.u64 	%rd2460, %rd2444, 6;
	xor.b64  	%rd2461, %rd2458, %rd2460;
	xor.b64  	%rd2462, %rd2461, %rd2459;
	shf.r.wrap.b32 	%r9954, %r9563, %r9562, 1;
	shf.r.wrap.b32 	%r9955, %r9562, %r9563, 1;
	mov.b64 	%rd2463, {%r9955, %r9954};
	shf.r.wrap.b32 	%r9956, %r9563, %r9562, 8;
	shf.r.wrap.b32 	%r9957, %r9562, %r9563, 8;
	mov.b64 	%rd2464, {%r9957, %r9956};
	shr.u64 	%rd2465, %rd1875, 7;
	xor.b64  	%rd2466, %rd2463, %rd2465;
	xor.b64  	%rd2467, %rd2466, %rd2464;
	add.s64 	%rd2468, %rd1979, %rd1862;
	add.s64 	%rd2469, %rd2468, %rd2462;
	add.s64 	%rd2470, %rd2469, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9958,%dummy}, %rd2457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9959}, %rd2457;
	}
	shf.r.wrap.b32 	%r9960, %r9959, %r9958, 19;
	shf.r.wrap.b32 	%r9961, %r9958, %r9959, 19;
	mov.b64 	%rd2471, {%r9961, %r9960};
	shf.l.wrap.b32 	%r9962, %r9958, %r9959, 3;
	shf.l.wrap.b32 	%r9963, %r9959, %r9958, 3;
	mov.b64 	%rd2472, {%r9963, %r9962};
	shr.u64 	%rd2473, %rd2457, 6;
	xor.b64  	%rd2474, %rd2471, %rd2473;
	xor.b64  	%rd2475, %rd2474, %rd2472;
	shf.r.wrap.b32 	%r9964, %r9573, %r9572, 1;
	shf.r.wrap.b32 	%r9965, %r9572, %r9573, 1;
	mov.b64 	%rd2476, {%r9965, %r9964};
	shf.r.wrap.b32 	%r9966, %r9573, %r9572, 8;
	shf.r.wrap.b32 	%r9967, %r9572, %r9573, 8;
	mov.b64 	%rd2477, {%r9967, %r9966};
	shr.u64 	%rd2478, %rd1888, 7;
	xor.b64  	%rd2479, %rd2476, %rd2478;
	xor.b64  	%rd2480, %rd2479, %rd2477;
	add.s64 	%rd2481, %rd2392, %rd1875;
	add.s64 	%rd2482, %rd2481, %rd2475;
	add.s64 	%rd2483, %rd2482, %rd2480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9968,%dummy}, %rd2470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9969}, %rd2470;
	}
	shf.r.wrap.b32 	%r9970, %r9969, %r9968, 19;
	shf.r.wrap.b32 	%r9971, %r9968, %r9969, 19;
	mov.b64 	%rd2484, {%r9971, %r9970};
	shf.l.wrap.b32 	%r9972, %r9968, %r9969, 3;
	shf.l.wrap.b32 	%r9973, %r9969, %r9968, 3;
	mov.b64 	%rd2485, {%r9973, %r9972};
	shr.u64 	%rd2486, %rd2470, 6;
	xor.b64  	%rd2487, %rd2484, %rd2486;
	xor.b64  	%rd2488, %rd2487, %rd2485;
	shf.r.wrap.b32 	%r9974, %r9583, %r9582, 1;
	shf.r.wrap.b32 	%r9975, %r9582, %r9583, 1;
	mov.b64 	%rd2489, {%r9975, %r9974};
	shf.r.wrap.b32 	%r9976, %r9583, %r9582, 8;
	shf.r.wrap.b32 	%r9977, %r9582, %r9583, 8;
	mov.b64 	%rd2490, {%r9977, %r9976};
	shr.u64 	%rd2491, %rd1901, 7;
	xor.b64  	%rd2492, %rd2489, %rd2491;
	xor.b64  	%rd2493, %rd2492, %rd2490;
	add.s64 	%rd2494, %rd2405, %rd1888;
	add.s64 	%rd2495, %rd2494, %rd2488;
	add.s64 	%rd2496, %rd2495, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9978,%dummy}, %rd2483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9979}, %rd2483;
	}
	shf.r.wrap.b32 	%r9980, %r9979, %r9978, 19;
	shf.r.wrap.b32 	%r9981, %r9978, %r9979, 19;
	mov.b64 	%rd2497, {%r9981, %r9980};
	shf.l.wrap.b32 	%r9982, %r9978, %r9979, 3;
	shf.l.wrap.b32 	%r9983, %r9979, %r9978, 3;
	mov.b64 	%rd2498, {%r9983, %r9982};
	shr.u64 	%rd2499, %rd2483, 6;
	xor.b64  	%rd2500, %rd2497, %rd2499;
	xor.b64  	%rd2501, %rd2500, %rd2498;
	shf.r.wrap.b32 	%r9984, %r9593, %r9592, 1;
	shf.r.wrap.b32 	%r9985, %r9592, %r9593, 1;
	mov.b64 	%rd2502, {%r9985, %r9984};
	shf.r.wrap.b32 	%r9986, %r9593, %r9592, 8;
	shf.r.wrap.b32 	%r9987, %r9592, %r9593, 8;
	mov.b64 	%rd2503, {%r9987, %r9986};
	shr.u64 	%rd2504, %rd1914, 7;
	xor.b64  	%rd2505, %rd2502, %rd2504;
	xor.b64  	%rd2506, %rd2505, %rd2503;
	add.s64 	%rd2507, %rd2418, %rd1901;
	add.s64 	%rd2508, %rd2507, %rd2501;
	add.s64 	%rd2509, %rd2508, %rd2506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9988,%dummy}, %rd2496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9989}, %rd2496;
	}
	shf.r.wrap.b32 	%r9990, %r9989, %r9988, 19;
	shf.r.wrap.b32 	%r9991, %r9988, %r9989, 19;
	mov.b64 	%rd2510, {%r9991, %r9990};
	shf.l.wrap.b32 	%r9992, %r9988, %r9989, 3;
	shf.l.wrap.b32 	%r9993, %r9989, %r9988, 3;
	mov.b64 	%rd2511, {%r9993, %r9992};
	shr.u64 	%rd2512, %rd2496, 6;
	xor.b64  	%rd2513, %rd2510, %rd2512;
	xor.b64  	%rd2514, %rd2513, %rd2511;
	shf.r.wrap.b32 	%r9994, %r9603, %r9602, 1;
	shf.r.wrap.b32 	%r9995, %r9602, %r9603, 1;
	mov.b64 	%rd2515, {%r9995, %r9994};
	shf.r.wrap.b32 	%r9996, %r9603, %r9602, 8;
	shf.r.wrap.b32 	%r9997, %r9602, %r9603, 8;
	mov.b64 	%rd2516, {%r9997, %r9996};
	shr.u64 	%rd2517, %rd1927, 7;
	xor.b64  	%rd2518, %rd2515, %rd2517;
	xor.b64  	%rd2519, %rd2518, %rd2516;
	add.s64 	%rd2520, %rd2431, %rd1914;
	add.s64 	%rd2521, %rd2520, %rd2514;
	add.s64 	%rd2522, %rd2521, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9998,%dummy}, %rd2509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9999}, %rd2509;
	}
	shf.r.wrap.b32 	%r10000, %r9999, %r9998, 19;
	shf.r.wrap.b32 	%r10001, %r9998, %r9999, 19;
	mov.b64 	%rd2523, {%r10001, %r10000};
	shf.l.wrap.b32 	%r10002, %r9998, %r9999, 3;
	shf.l.wrap.b32 	%r10003, %r9999, %r9998, 3;
	mov.b64 	%rd2524, {%r10003, %r10002};
	shr.u64 	%rd2525, %rd2509, 6;
	xor.b64  	%rd2526, %rd2523, %rd2525;
	xor.b64  	%rd2527, %rd2526, %rd2524;
	shf.r.wrap.b32 	%r10004, %r9613, %r9612, 1;
	shf.r.wrap.b32 	%r10005, %r9612, %r9613, 1;
	mov.b64 	%rd2528, {%r10005, %r10004};
	shf.r.wrap.b32 	%r10006, %r9613, %r9612, 8;
	shf.r.wrap.b32 	%r10007, %r9612, %r9613, 8;
	mov.b64 	%rd2529, {%r10007, %r10006};
	shr.u64 	%rd2530, %rd1940, 7;
	xor.b64  	%rd2531, %rd2528, %rd2530;
	xor.b64  	%rd2532, %rd2531, %rd2529;
	add.s64 	%rd2533, %rd2444, %rd1927;
	add.s64 	%rd2534, %rd2533, %rd2527;
	add.s64 	%rd2535, %rd2534, %rd2532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10008,%dummy}, %rd2522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10009}, %rd2522;
	}
	shf.r.wrap.b32 	%r10010, %r10009, %r10008, 19;
	shf.r.wrap.b32 	%r10011, %r10008, %r10009, 19;
	mov.b64 	%rd2536, {%r10011, %r10010};
	shf.l.wrap.b32 	%r10012, %r10008, %r10009, 3;
	shf.l.wrap.b32 	%r10013, %r10009, %r10008, 3;
	mov.b64 	%rd2537, {%r10013, %r10012};
	shr.u64 	%rd2538, %rd2522, 6;
	xor.b64  	%rd2539, %rd2536, %rd2538;
	xor.b64  	%rd2540, %rd2539, %rd2537;
	shf.r.wrap.b32 	%r10014, %r9623, %r9622, 1;
	shf.r.wrap.b32 	%r10015, %r9622, %r9623, 1;
	mov.b64 	%rd2541, {%r10015, %r10014};
	shf.r.wrap.b32 	%r10016, %r9623, %r9622, 8;
	shf.r.wrap.b32 	%r10017, %r9622, %r9623, 8;
	mov.b64 	%rd2542, {%r10017, %r10016};
	shr.u64 	%rd2543, %rd1953, 7;
	xor.b64  	%rd2544, %rd2541, %rd2543;
	xor.b64  	%rd2545, %rd2544, %rd2542;
	add.s64 	%rd2546, %rd2457, %rd1940;
	add.s64 	%rd2547, %rd2546, %rd2540;
	add.s64 	%rd2548, %rd2547, %rd2545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10018,%dummy}, %rd2535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10019}, %rd2535;
	}
	shf.r.wrap.b32 	%r10020, %r10019, %r10018, 19;
	shf.r.wrap.b32 	%r10021, %r10018, %r10019, 19;
	mov.b64 	%rd2549, {%r10021, %r10020};
	shf.l.wrap.b32 	%r10022, %r10018, %r10019, 3;
	shf.l.wrap.b32 	%r10023, %r10019, %r10018, 3;
	mov.b64 	%rd2550, {%r10023, %r10022};
	shr.u64 	%rd2551, %rd2535, 6;
	xor.b64  	%rd2552, %rd2549, %rd2551;
	xor.b64  	%rd2553, %rd2552, %rd2550;
	shf.r.wrap.b32 	%r10024, %r9889, %r9888, 1;
	shf.r.wrap.b32 	%r10025, %r9888, %r9889, 1;
	mov.b64 	%rd2554, {%r10025, %r10024};
	shf.r.wrap.b32 	%r10026, %r9889, %r9888, 8;
	shf.r.wrap.b32 	%r10027, %r9888, %r9889, 8;
	mov.b64 	%rd2555, {%r10027, %r10026};
	shr.u64 	%rd2556, %rd1966, 7;
	xor.b64  	%rd2557, %rd2554, %rd2556;
	xor.b64  	%rd2558, %rd2557, %rd2555;
	add.s64 	%rd2559, %rd2470, %rd1953;
	add.s64 	%rd2560, %rd2559, %rd2553;
	add.s64 	%rd2561, %rd2560, %rd2558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10028,%dummy}, %rd2548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10029}, %rd2548;
	}
	shf.r.wrap.b32 	%r10030, %r10029, %r10028, 19;
	shf.r.wrap.b32 	%r10031, %r10028, %r10029, 19;
	mov.b64 	%rd2562, {%r10031, %r10030};
	shf.l.wrap.b32 	%r10032, %r10028, %r10029, 3;
	shf.l.wrap.b32 	%r10033, %r10029, %r10028, 3;
	mov.b64 	%rd2563, {%r10033, %r10032};
	shr.u64 	%rd2564, %rd2548, 6;
	xor.b64  	%rd2565, %rd2562, %rd2564;
	xor.b64  	%rd2566, %rd2565, %rd2563;
	shf.r.wrap.b32 	%r10034, %r9899, %r9898, 1;
	shf.r.wrap.b32 	%r10035, %r9898, %r9899, 1;
	mov.b64 	%rd2567, {%r10035, %r10034};
	shf.r.wrap.b32 	%r10036, %r9899, %r9898, 8;
	shf.r.wrap.b32 	%r10037, %r9898, %r9899, 8;
	mov.b64 	%rd2568, {%r10037, %r10036};
	shr.u64 	%rd2569, %rd1979, 7;
	xor.b64  	%rd2570, %rd2567, %rd2569;
	xor.b64  	%rd2571, %rd2570, %rd2568;
	add.s64 	%rd2572, %rd2483, %rd1966;
	add.s64 	%rd2573, %rd2572, %rd2566;
	add.s64 	%rd2574, %rd2573, %rd2571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10038,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10039}, %rd2561;
	}
	shf.r.wrap.b32 	%r10040, %r10039, %r10038, 19;
	shf.r.wrap.b32 	%r10041, %r10038, %r10039, 19;
	mov.b64 	%rd2575, {%r10041, %r10040};
	shf.l.wrap.b32 	%r10042, %r10038, %r10039, 3;
	shf.l.wrap.b32 	%r10043, %r10039, %r10038, 3;
	mov.b64 	%rd2576, {%r10043, %r10042};
	shr.u64 	%rd2577, %rd2561, 6;
	xor.b64  	%rd2578, %rd2575, %rd2577;
	xor.b64  	%rd2579, %rd2578, %rd2576;
	shf.r.wrap.b32 	%r10044, %r9909, %r9908, 1;
	shf.r.wrap.b32 	%r10045, %r9908, %r9909, 1;
	mov.b64 	%rd2580, {%r10045, %r10044};
	shf.r.wrap.b32 	%r10046, %r9909, %r9908, 8;
	shf.r.wrap.b32 	%r10047, %r9908, %r9909, 8;
	mov.b64 	%rd2581, {%r10047, %r10046};
	shr.u64 	%rd2582, %rd2392, 7;
	xor.b64  	%rd2583, %rd2580, %rd2582;
	xor.b64  	%rd2584, %rd2583, %rd2581;
	add.s64 	%rd2585, %rd2496, %rd1979;
	add.s64 	%rd2586, %rd2585, %rd2579;
	add.s64 	%rd2587, %rd2586, %rd2584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10048,%dummy}, %rd2368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10049}, %rd2368;
	}
	shf.r.wrap.b32 	%r10050, %r10049, %r10048, 14;
	shf.r.wrap.b32 	%r10051, %r10048, %r10049, 14;
	mov.b64 	%rd2588, {%r10051, %r10050};
	shf.r.wrap.b32 	%r10052, %r10049, %r10048, 18;
	shf.r.wrap.b32 	%r10053, %r10048, %r10049, 18;
	mov.b64 	%rd2589, {%r10053, %r10052};
	xor.b64  	%rd2590, %rd2589, %rd2588;
	shf.l.wrap.b32 	%r10054, %r10048, %r10049, 23;
	shf.l.wrap.b32 	%r10055, %r10049, %r10048, 23;
	mov.b64 	%rd2591, {%r10055, %r10054};
	xor.b64  	%rd2592, %rd2590, %rd2591;
	xor.b64  	%rd2593, %rd2343, %rd2318;
	and.b64  	%rd2594, %rd2368, %rd2593;
	xor.b64  	%rd2595, %rd2594, %rd2318;
	add.s64 	%rd2596, %rd2595, %rd2293;
	add.s64 	%rd2597, %rd2596, %rd2392;
	add.s64 	%rd2599, %rd2597, %rd66;
	add.s64 	%rd2600, %rd2599, %rd2592;
	add.s64 	%rd2601, %rd2600, %rd2304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10056,%dummy}, %rd2379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10057}, %rd2379;
	}
	shf.r.wrap.b32 	%r10058, %r10057, %r10056, 28;
	shf.r.wrap.b32 	%r10059, %r10056, %r10057, 28;
	mov.b64 	%rd2602, {%r10059, %r10058};
	shf.l.wrap.b32 	%r10060, %r10056, %r10057, 30;
	shf.l.wrap.b32 	%r10061, %r10057, %r10056, 30;
	mov.b64 	%rd2603, {%r10061, %r10060};
	xor.b64  	%rd2604, %rd2603, %rd2602;
	shf.l.wrap.b32 	%r10062, %r10056, %r10057, 25;
	shf.l.wrap.b32 	%r10063, %r10057, %r10056, 25;
	mov.b64 	%rd2605, {%r10063, %r10062};
	xor.b64  	%rd2606, %rd2604, %rd2605;
	xor.b64  	%rd2607, %rd2379, %rd2329;
	xor.b64  	%rd2608, %rd2379, %rd2354;
	and.b64  	%rd2609, %rd2608, %rd2607;
	xor.b64  	%rd2610, %rd2609, %rd2379;
	add.s64 	%rd2611, %rd2600, %rd2610;
	add.s64 	%rd2612, %rd2611, %rd2606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10064,%dummy}, %rd2601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10065}, %rd2601;
	}
	shf.r.wrap.b32 	%r10066, %r10065, %r10064, 14;
	shf.r.wrap.b32 	%r10067, %r10064, %r10065, 14;
	mov.b64 	%rd2613, {%r10067, %r10066};
	shf.r.wrap.b32 	%r10068, %r10065, %r10064, 18;
	shf.r.wrap.b32 	%r10069, %r10064, %r10065, 18;
	mov.b64 	%rd2614, {%r10069, %r10068};
	xor.b64  	%rd2615, %rd2614, %rd2613;
	shf.l.wrap.b32 	%r10070, %r10064, %r10065, 23;
	shf.l.wrap.b32 	%r10071, %r10065, %r10064, 23;
	mov.b64 	%rd2616, {%r10071, %r10070};
	xor.b64  	%rd2617, %rd2615, %rd2616;
	xor.b64  	%rd2618, %rd2368, %rd2343;
	and.b64  	%rd2619, %rd2601, %rd2618;
	xor.b64  	%rd2620, %rd2619, %rd2343;
	add.s64 	%rd2621, %rd2405, %rd2318;
	add.s64 	%rd2623, %rd2621, %rd67;
	add.s64 	%rd2624, %rd2623, %rd2620;
	add.s64 	%rd2625, %rd2624, %rd2617;
	add.s64 	%rd2626, %rd2625, %rd2329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10072,%dummy}, %rd2612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10073}, %rd2612;
	}
	shf.r.wrap.b32 	%r10074, %r10073, %r10072, 28;
	shf.r.wrap.b32 	%r10075, %r10072, %r10073, 28;
	mov.b64 	%rd2627, {%r10075, %r10074};
	shf.l.wrap.b32 	%r10076, %r10072, %r10073, 30;
	shf.l.wrap.b32 	%r10077, %r10073, %r10072, 30;
	mov.b64 	%rd2628, {%r10077, %r10076};
	xor.b64  	%rd2629, %rd2628, %rd2627;
	shf.l.wrap.b32 	%r10078, %r10072, %r10073, 25;
	shf.l.wrap.b32 	%r10079, %r10073, %r10072, 25;
	mov.b64 	%rd2630, {%r10079, %r10078};
	xor.b64  	%rd2631, %rd2629, %rd2630;
	xor.b64  	%rd2632, %rd2612, %rd2354;
	xor.b64  	%rd2633, %rd2612, %rd2379;
	and.b64  	%rd2634, %rd2633, %rd2632;
	xor.b64  	%rd2635, %rd2634, %rd2612;
	add.s64 	%rd2636, %rd2625, %rd2635;
	add.s64 	%rd2637, %rd2636, %rd2631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10080,%dummy}, %rd2626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10081}, %rd2626;
	}
	shf.r.wrap.b32 	%r10082, %r10081, %r10080, 14;
	shf.r.wrap.b32 	%r10083, %r10080, %r10081, 14;
	mov.b64 	%rd2638, {%r10083, %r10082};
	shf.r.wrap.b32 	%r10084, %r10081, %r10080, 18;
	shf.r.wrap.b32 	%r10085, %r10080, %r10081, 18;
	mov.b64 	%rd2639, {%r10085, %r10084};
	xor.b64  	%rd2640, %rd2639, %rd2638;
	shf.l.wrap.b32 	%r10086, %r10080, %r10081, 23;
	shf.l.wrap.b32 	%r10087, %r10081, %r10080, 23;
	mov.b64 	%rd2641, {%r10087, %r10086};
	xor.b64  	%rd2642, %rd2640, %rd2641;
	xor.b64  	%rd2643, %rd2601, %rd2368;
	and.b64  	%rd2644, %rd2626, %rd2643;
	xor.b64  	%rd2645, %rd2644, %rd2368;
	add.s64 	%rd2646, %rd2418, %rd2343;
	add.s64 	%rd2648, %rd2646, %rd68;
	add.s64 	%rd2649, %rd2648, %rd2645;
	add.s64 	%rd2650, %rd2649, %rd2642;
	add.s64 	%rd2651, %rd2650, %rd2354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10088,%dummy}, %rd2637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10089}, %rd2637;
	}
	shf.r.wrap.b32 	%r10090, %r10089, %r10088, 28;
	shf.r.wrap.b32 	%r10091, %r10088, %r10089, 28;
	mov.b64 	%rd2652, {%r10091, %r10090};
	shf.l.wrap.b32 	%r10092, %r10088, %r10089, 30;
	shf.l.wrap.b32 	%r10093, %r10089, %r10088, 30;
	mov.b64 	%rd2653, {%r10093, %r10092};
	xor.b64  	%rd2654, %rd2653, %rd2652;
	shf.l.wrap.b32 	%r10094, %r10088, %r10089, 25;
	shf.l.wrap.b32 	%r10095, %r10089, %r10088, 25;
	mov.b64 	%rd2655, {%r10095, %r10094};
	xor.b64  	%rd2656, %rd2654, %rd2655;
	xor.b64  	%rd2657, %rd2637, %rd2379;
	xor.b64  	%rd2658, %rd2637, %rd2612;
	and.b64  	%rd2659, %rd2658, %rd2657;
	xor.b64  	%rd2660, %rd2659, %rd2637;
	add.s64 	%rd2661, %rd2650, %rd2660;
	add.s64 	%rd2662, %rd2661, %rd2656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10096,%dummy}, %rd2651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10097}, %rd2651;
	}
	shf.r.wrap.b32 	%r10098, %r10097, %r10096, 14;
	shf.r.wrap.b32 	%r10099, %r10096, %r10097, 14;
	mov.b64 	%rd2663, {%r10099, %r10098};
	shf.r.wrap.b32 	%r10100, %r10097, %r10096, 18;
	shf.r.wrap.b32 	%r10101, %r10096, %r10097, 18;
	mov.b64 	%rd2664, {%r10101, %r10100};
	xor.b64  	%rd2665, %rd2664, %rd2663;
	shf.l.wrap.b32 	%r10102, %r10096, %r10097, 23;
	shf.l.wrap.b32 	%r10103, %r10097, %r10096, 23;
	mov.b64 	%rd2666, {%r10103, %r10102};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	xor.b64  	%rd2668, %rd2626, %rd2601;
	and.b64  	%rd2669, %rd2651, %rd2668;
	xor.b64  	%rd2670, %rd2669, %rd2601;
	add.s64 	%rd2671, %rd2431, %rd2368;
	add.s64 	%rd2673, %rd2671, %rd69;
	add.s64 	%rd2674, %rd2673, %rd2670;
	add.s64 	%rd2675, %rd2674, %rd2667;
	add.s64 	%rd2676, %rd2675, %rd2379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10104,%dummy}, %rd2662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10105}, %rd2662;
	}
	shf.r.wrap.b32 	%r10106, %r10105, %r10104, 28;
	shf.r.wrap.b32 	%r10107, %r10104, %r10105, 28;
	mov.b64 	%rd2677, {%r10107, %r10106};
	shf.l.wrap.b32 	%r10108, %r10104, %r10105, 30;
	shf.l.wrap.b32 	%r10109, %r10105, %r10104, 30;
	mov.b64 	%rd2678, {%r10109, %r10108};
	xor.b64  	%rd2679, %rd2678, %rd2677;
	shf.l.wrap.b32 	%r10110, %r10104, %r10105, 25;
	shf.l.wrap.b32 	%r10111, %r10105, %r10104, 25;
	mov.b64 	%rd2680, {%r10111, %r10110};
	xor.b64  	%rd2681, %rd2679, %rd2680;
	xor.b64  	%rd2682, %rd2662, %rd2612;
	xor.b64  	%rd2683, %rd2662, %rd2637;
	and.b64  	%rd2684, %rd2683, %rd2682;
	xor.b64  	%rd2685, %rd2684, %rd2662;
	add.s64 	%rd2686, %rd2675, %rd2685;
	add.s64 	%rd2687, %rd2686, %rd2681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10112,%dummy}, %rd2676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10113}, %rd2676;
	}
	shf.r.wrap.b32 	%r10114, %r10113, %r10112, 14;
	shf.r.wrap.b32 	%r10115, %r10112, %r10113, 14;
	mov.b64 	%rd2688, {%r10115, %r10114};
	shf.r.wrap.b32 	%r10116, %r10113, %r10112, 18;
	shf.r.wrap.b32 	%r10117, %r10112, %r10113, 18;
	mov.b64 	%rd2689, {%r10117, %r10116};
	xor.b64  	%rd2690, %rd2689, %rd2688;
	shf.l.wrap.b32 	%r10118, %r10112, %r10113, 23;
	shf.l.wrap.b32 	%r10119, %r10113, %r10112, 23;
	mov.b64 	%rd2691, {%r10119, %r10118};
	xor.b64  	%rd2692, %rd2690, %rd2691;
	xor.b64  	%rd2693, %rd2651, %rd2626;
	and.b64  	%rd2694, %rd2676, %rd2693;
	xor.b64  	%rd2695, %rd2694, %rd2626;
	add.s64 	%rd2696, %rd2601, %rd2444;
	add.s64 	%rd2698, %rd2696, %rd70;
	add.s64 	%rd2699, %rd2698, %rd2695;
	add.s64 	%rd2700, %rd2699, %rd2692;
	add.s64 	%rd2701, %rd2700, %rd2612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10120,%dummy}, %rd2687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10121}, %rd2687;
	}
	shf.r.wrap.b32 	%r10122, %r10121, %r10120, 28;
	shf.r.wrap.b32 	%r10123, %r10120, %r10121, 28;
	mov.b64 	%rd2702, {%r10123, %r10122};
	shf.l.wrap.b32 	%r10124, %r10120, %r10121, 30;
	shf.l.wrap.b32 	%r10125, %r10121, %r10120, 30;
	mov.b64 	%rd2703, {%r10125, %r10124};
	xor.b64  	%rd2704, %rd2703, %rd2702;
	shf.l.wrap.b32 	%r10126, %r10120, %r10121, 25;
	shf.l.wrap.b32 	%r10127, %r10121, %r10120, 25;
	mov.b64 	%rd2705, {%r10127, %r10126};
	xor.b64  	%rd2706, %rd2704, %rd2705;
	xor.b64  	%rd2707, %rd2687, %rd2637;
	xor.b64  	%rd2708, %rd2687, %rd2662;
	and.b64  	%rd2709, %rd2708, %rd2707;
	xor.b64  	%rd2710, %rd2709, %rd2687;
	add.s64 	%rd2711, %rd2700, %rd2710;
	add.s64 	%rd2712, %rd2711, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10128,%dummy}, %rd2701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10129}, %rd2701;
	}
	shf.r.wrap.b32 	%r10130, %r10129, %r10128, 14;
	shf.r.wrap.b32 	%r10131, %r10128, %r10129, 14;
	mov.b64 	%rd2713, {%r10131, %r10130};
	shf.r.wrap.b32 	%r10132, %r10129, %r10128, 18;
	shf.r.wrap.b32 	%r10133, %r10128, %r10129, 18;
	mov.b64 	%rd2714, {%r10133, %r10132};
	xor.b64  	%rd2715, %rd2714, %rd2713;
	shf.l.wrap.b32 	%r10134, %r10128, %r10129, 23;
	shf.l.wrap.b32 	%r10135, %r10129, %r10128, 23;
	mov.b64 	%rd2716, {%r10135, %r10134};
	xor.b64  	%rd2717, %rd2715, %rd2716;
	xor.b64  	%rd2718, %rd2676, %rd2651;
	and.b64  	%rd2719, %rd2701, %rd2718;
	xor.b64  	%rd2720, %rd2719, %rd2651;
	add.s64 	%rd2721, %rd2626, %rd2457;
	add.s64 	%rd2723, %rd2721, %rd71;
	add.s64 	%rd2724, %rd2723, %rd2720;
	add.s64 	%rd2725, %rd2724, %rd2717;
	add.s64 	%rd2726, %rd2725, %rd2637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10136,%dummy}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10137}, %rd2712;
	}
	shf.r.wrap.b32 	%r10138, %r10137, %r10136, 28;
	shf.r.wrap.b32 	%r10139, %r10136, %r10137, 28;
	mov.b64 	%rd2727, {%r10139, %r10138};
	shf.l.wrap.b32 	%r10140, %r10136, %r10137, 30;
	shf.l.wrap.b32 	%r10141, %r10137, %r10136, 30;
	mov.b64 	%rd2728, {%r10141, %r10140};
	xor.b64  	%rd2729, %rd2728, %rd2727;
	shf.l.wrap.b32 	%r10142, %r10136, %r10137, 25;
	shf.l.wrap.b32 	%r10143, %r10137, %r10136, 25;
	mov.b64 	%rd2730, {%r10143, %r10142};
	xor.b64  	%rd2731, %rd2729, %rd2730;
	xor.b64  	%rd2732, %rd2712, %rd2662;
	xor.b64  	%rd2733, %rd2712, %rd2687;
	and.b64  	%rd2734, %rd2733, %rd2732;
	xor.b64  	%rd2735, %rd2734, %rd2712;
	add.s64 	%rd2736, %rd2725, %rd2735;
	add.s64 	%rd2737, %rd2736, %rd2731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10144,%dummy}, %rd2726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10145}, %rd2726;
	}
	shf.r.wrap.b32 	%r10146, %r10145, %r10144, 14;
	shf.r.wrap.b32 	%r10147, %r10144, %r10145, 14;
	mov.b64 	%rd2738, {%r10147, %r10146};
	shf.r.wrap.b32 	%r10148, %r10145, %r10144, 18;
	shf.r.wrap.b32 	%r10149, %r10144, %r10145, 18;
	mov.b64 	%rd2739, {%r10149, %r10148};
	xor.b64  	%rd2740, %rd2739, %rd2738;
	shf.l.wrap.b32 	%r10150, %r10144, %r10145, 23;
	shf.l.wrap.b32 	%r10151, %r10145, %r10144, 23;
	mov.b64 	%rd2741, {%r10151, %r10150};
	xor.b64  	%rd2742, %rd2740, %rd2741;
	xor.b64  	%rd2743, %rd2701, %rd2676;
	and.b64  	%rd2744, %rd2726, %rd2743;
	xor.b64  	%rd2745, %rd2744, %rd2676;
	add.s64 	%rd2746, %rd2651, %rd2470;
	add.s64 	%rd2748, %rd2746, %rd72;
	add.s64 	%rd2749, %rd2748, %rd2745;
	add.s64 	%rd2750, %rd2749, %rd2742;
	add.s64 	%rd2751, %rd2750, %rd2662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10152,%dummy}, %rd2737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10153}, %rd2737;
	}
	shf.r.wrap.b32 	%r10154, %r10153, %r10152, 28;
	shf.r.wrap.b32 	%r10155, %r10152, %r10153, 28;
	mov.b64 	%rd2752, {%r10155, %r10154};
	shf.l.wrap.b32 	%r10156, %r10152, %r10153, 30;
	shf.l.wrap.b32 	%r10157, %r10153, %r10152, 30;
	mov.b64 	%rd2753, {%r10157, %r10156};
	xor.b64  	%rd2754, %rd2753, %rd2752;
	shf.l.wrap.b32 	%r10158, %r10152, %r10153, 25;
	shf.l.wrap.b32 	%r10159, %r10153, %r10152, 25;
	mov.b64 	%rd2755, {%r10159, %r10158};
	xor.b64  	%rd2756, %rd2754, %rd2755;
	xor.b64  	%rd2757, %rd2737, %rd2687;
	xor.b64  	%rd2758, %rd2737, %rd2712;
	and.b64  	%rd2759, %rd2758, %rd2757;
	xor.b64  	%rd2760, %rd2759, %rd2737;
	add.s64 	%rd2761, %rd2750, %rd2760;
	add.s64 	%rd2762, %rd2761, %rd2756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10160,%dummy}, %rd2751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10161}, %rd2751;
	}
	shf.r.wrap.b32 	%r10162, %r10161, %r10160, 14;
	shf.r.wrap.b32 	%r10163, %r10160, %r10161, 14;
	mov.b64 	%rd2763, {%r10163, %r10162};
	shf.r.wrap.b32 	%r10164, %r10161, %r10160, 18;
	shf.r.wrap.b32 	%r10165, %r10160, %r10161, 18;
	mov.b64 	%rd2764, {%r10165, %r10164};
	xor.b64  	%rd2765, %rd2764, %rd2763;
	shf.l.wrap.b32 	%r10166, %r10160, %r10161, 23;
	shf.l.wrap.b32 	%r10167, %r10161, %r10160, 23;
	mov.b64 	%rd2766, {%r10167, %r10166};
	xor.b64  	%rd2767, %rd2765, %rd2766;
	xor.b64  	%rd2768, %rd2726, %rd2701;
	and.b64  	%rd2769, %rd2751, %rd2768;
	xor.b64  	%rd2770, %rd2769, %rd2701;
	add.s64 	%rd2771, %rd2676, %rd2483;
	add.s64 	%rd2773, %rd2771, %rd73;
	add.s64 	%rd2774, %rd2773, %rd2770;
	add.s64 	%rd2775, %rd2774, %rd2767;
	add.s64 	%rd2776, %rd2775, %rd2687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10168,%dummy}, %rd2762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10169}, %rd2762;
	}
	shf.r.wrap.b32 	%r10170, %r10169, %r10168, 28;
	shf.r.wrap.b32 	%r10171, %r10168, %r10169, 28;
	mov.b64 	%rd2777, {%r10171, %r10170};
	shf.l.wrap.b32 	%r10172, %r10168, %r10169, 30;
	shf.l.wrap.b32 	%r10173, %r10169, %r10168, 30;
	mov.b64 	%rd2778, {%r10173, %r10172};
	xor.b64  	%rd2779, %rd2778, %rd2777;
	shf.l.wrap.b32 	%r10174, %r10168, %r10169, 25;
	shf.l.wrap.b32 	%r10175, %r10169, %r10168, 25;
	mov.b64 	%rd2780, {%r10175, %r10174};
	xor.b64  	%rd2781, %rd2779, %rd2780;
	xor.b64  	%rd2782, %rd2762, %rd2712;
	xor.b64  	%rd2783, %rd2762, %rd2737;
	and.b64  	%rd2784, %rd2783, %rd2782;
	xor.b64  	%rd2785, %rd2784, %rd2762;
	add.s64 	%rd2786, %rd2775, %rd2785;
	add.s64 	%rd2787, %rd2786, %rd2781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10176,%dummy}, %rd2776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10177}, %rd2776;
	}
	shf.r.wrap.b32 	%r10178, %r10177, %r10176, 14;
	shf.r.wrap.b32 	%r10179, %r10176, %r10177, 14;
	mov.b64 	%rd2788, {%r10179, %r10178};
	shf.r.wrap.b32 	%r10180, %r10177, %r10176, 18;
	shf.r.wrap.b32 	%r10181, %r10176, %r10177, 18;
	mov.b64 	%rd2789, {%r10181, %r10180};
	xor.b64  	%rd2790, %rd2789, %rd2788;
	shf.l.wrap.b32 	%r10182, %r10176, %r10177, 23;
	shf.l.wrap.b32 	%r10183, %r10177, %r10176, 23;
	mov.b64 	%rd2791, {%r10183, %r10182};
	xor.b64  	%rd2792, %rd2790, %rd2791;
	xor.b64  	%rd2793, %rd2751, %rd2726;
	and.b64  	%rd2794, %rd2776, %rd2793;
	xor.b64  	%rd2795, %rd2794, %rd2726;
	add.s64 	%rd2796, %rd2701, %rd2496;
	add.s64 	%rd2798, %rd2796, %rd74;
	add.s64 	%rd2799, %rd2798, %rd2795;
	add.s64 	%rd2800, %rd2799, %rd2792;
	add.s64 	%rd2801, %rd2800, %rd2712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10184,%dummy}, %rd2787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10185}, %rd2787;
	}
	shf.r.wrap.b32 	%r10186, %r10185, %r10184, 28;
	shf.r.wrap.b32 	%r10187, %r10184, %r10185, 28;
	mov.b64 	%rd2802, {%r10187, %r10186};
	shf.l.wrap.b32 	%r10188, %r10184, %r10185, 30;
	shf.l.wrap.b32 	%r10189, %r10185, %r10184, 30;
	mov.b64 	%rd2803, {%r10189, %r10188};
	xor.b64  	%rd2804, %rd2803, %rd2802;
	shf.l.wrap.b32 	%r10190, %r10184, %r10185, 25;
	shf.l.wrap.b32 	%r10191, %r10185, %r10184, 25;
	mov.b64 	%rd2805, {%r10191, %r10190};
	xor.b64  	%rd2806, %rd2804, %rd2805;
	xor.b64  	%rd2807, %rd2787, %rd2737;
	xor.b64  	%rd2808, %rd2787, %rd2762;
	and.b64  	%rd2809, %rd2808, %rd2807;
	xor.b64  	%rd2810, %rd2809, %rd2787;
	add.s64 	%rd2811, %rd2800, %rd2810;
	add.s64 	%rd2812, %rd2811, %rd2806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10192,%dummy}, %rd2801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10193}, %rd2801;
	}
	shf.r.wrap.b32 	%r10194, %r10193, %r10192, 14;
	shf.r.wrap.b32 	%r10195, %r10192, %r10193, 14;
	mov.b64 	%rd2813, {%r10195, %r10194};
	shf.r.wrap.b32 	%r10196, %r10193, %r10192, 18;
	shf.r.wrap.b32 	%r10197, %r10192, %r10193, 18;
	mov.b64 	%rd2814, {%r10197, %r10196};
	xor.b64  	%rd2815, %rd2814, %rd2813;
	shf.l.wrap.b32 	%r10198, %r10192, %r10193, 23;
	shf.l.wrap.b32 	%r10199, %r10193, %r10192, 23;
	mov.b64 	%rd2816, {%r10199, %r10198};
	xor.b64  	%rd2817, %rd2815, %rd2816;
	xor.b64  	%rd2818, %rd2776, %rd2751;
	and.b64  	%rd2819, %rd2801, %rd2818;
	xor.b64  	%rd2820, %rd2819, %rd2751;
	add.s64 	%rd2821, %rd2726, %rd2509;
	add.s64 	%rd2823, %rd2821, %rd75;
	add.s64 	%rd2824, %rd2823, %rd2820;
	add.s64 	%rd2825, %rd2824, %rd2817;
	add.s64 	%rd2826, %rd2825, %rd2737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10200,%dummy}, %rd2812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10201}, %rd2812;
	}
	shf.r.wrap.b32 	%r10202, %r10201, %r10200, 28;
	shf.r.wrap.b32 	%r10203, %r10200, %r10201, 28;
	mov.b64 	%rd2827, {%r10203, %r10202};
	shf.l.wrap.b32 	%r10204, %r10200, %r10201, 30;
	shf.l.wrap.b32 	%r10205, %r10201, %r10200, 30;
	mov.b64 	%rd2828, {%r10205, %r10204};
	xor.b64  	%rd2829, %rd2828, %rd2827;
	shf.l.wrap.b32 	%r10206, %r10200, %r10201, 25;
	shf.l.wrap.b32 	%r10207, %r10201, %r10200, 25;
	mov.b64 	%rd2830, {%r10207, %r10206};
	xor.b64  	%rd2831, %rd2829, %rd2830;
	xor.b64  	%rd2832, %rd2812, %rd2762;
	xor.b64  	%rd2833, %rd2812, %rd2787;
	and.b64  	%rd2834, %rd2833, %rd2832;
	xor.b64  	%rd2835, %rd2834, %rd2812;
	add.s64 	%rd2836, %rd2825, %rd2835;
	add.s64 	%rd2837, %rd2836, %rd2831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10208,%dummy}, %rd2826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10209}, %rd2826;
	}
	shf.r.wrap.b32 	%r10210, %r10209, %r10208, 14;
	shf.r.wrap.b32 	%r10211, %r10208, %r10209, 14;
	mov.b64 	%rd2838, {%r10211, %r10210};
	shf.r.wrap.b32 	%r10212, %r10209, %r10208, 18;
	shf.r.wrap.b32 	%r10213, %r10208, %r10209, 18;
	mov.b64 	%rd2839, {%r10213, %r10212};
	xor.b64  	%rd2840, %rd2839, %rd2838;
	shf.l.wrap.b32 	%r10214, %r10208, %r10209, 23;
	shf.l.wrap.b32 	%r10215, %r10209, %r10208, 23;
	mov.b64 	%rd2841, {%r10215, %r10214};
	xor.b64  	%rd2842, %rd2840, %rd2841;
	xor.b64  	%rd2843, %rd2801, %rd2776;
	and.b64  	%rd2844, %rd2826, %rd2843;
	xor.b64  	%rd2845, %rd2844, %rd2776;
	add.s64 	%rd2846, %rd2751, %rd2522;
	add.s64 	%rd2848, %rd2846, %rd76;
	add.s64 	%rd2849, %rd2848, %rd2845;
	add.s64 	%rd2850, %rd2849, %rd2842;
	add.s64 	%rd2851, %rd2850, %rd2762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10216,%dummy}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10217}, %rd2837;
	}
	shf.r.wrap.b32 	%r10218, %r10217, %r10216, 28;
	shf.r.wrap.b32 	%r10219, %r10216, %r10217, 28;
	mov.b64 	%rd2852, {%r10219, %r10218};
	shf.l.wrap.b32 	%r10220, %r10216, %r10217, 30;
	shf.l.wrap.b32 	%r10221, %r10217, %r10216, 30;
	mov.b64 	%rd2853, {%r10221, %r10220};
	xor.b64  	%rd2854, %rd2853, %rd2852;
	shf.l.wrap.b32 	%r10222, %r10216, %r10217, 25;
	shf.l.wrap.b32 	%r10223, %r10217, %r10216, 25;
	mov.b64 	%rd2855, {%r10223, %r10222};
	xor.b64  	%rd2856, %rd2854, %rd2855;
	xor.b64  	%rd2857, %rd2837, %rd2787;
	xor.b64  	%rd2858, %rd2837, %rd2812;
	and.b64  	%rd2859, %rd2858, %rd2857;
	xor.b64  	%rd2860, %rd2859, %rd2837;
	add.s64 	%rd2861, %rd2850, %rd2860;
	add.s64 	%rd2862, %rd2861, %rd2856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10224,%dummy}, %rd2851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10225}, %rd2851;
	}
	shf.r.wrap.b32 	%r10226, %r10225, %r10224, 14;
	shf.r.wrap.b32 	%r10227, %r10224, %r10225, 14;
	mov.b64 	%rd2863, {%r10227, %r10226};
	shf.r.wrap.b32 	%r10228, %r10225, %r10224, 18;
	shf.r.wrap.b32 	%r10229, %r10224, %r10225, 18;
	mov.b64 	%rd2864, {%r10229, %r10228};
	xor.b64  	%rd2865, %rd2864, %rd2863;
	shf.l.wrap.b32 	%r10230, %r10224, %r10225, 23;
	shf.l.wrap.b32 	%r10231, %r10225, %r10224, 23;
	mov.b64 	%rd2866, {%r10231, %r10230};
	xor.b64  	%rd2867, %rd2865, %rd2866;
	xor.b64  	%rd2868, %rd2826, %rd2801;
	and.b64  	%rd2869, %rd2851, %rd2868;
	xor.b64  	%rd2870, %rd2869, %rd2801;
	add.s64 	%rd2871, %rd2776, %rd2535;
	add.s64 	%rd2873, %rd2871, %rd77;
	add.s64 	%rd2874, %rd2873, %rd2870;
	add.s64 	%rd2875, %rd2874, %rd2867;
	add.s64 	%rd2876, %rd2875, %rd2787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10232,%dummy}, %rd2862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10233}, %rd2862;
	}
	shf.r.wrap.b32 	%r10234, %r10233, %r10232, 28;
	shf.r.wrap.b32 	%r10235, %r10232, %r10233, 28;
	mov.b64 	%rd2877, {%r10235, %r10234};
	shf.l.wrap.b32 	%r10236, %r10232, %r10233, 30;
	shf.l.wrap.b32 	%r10237, %r10233, %r10232, 30;
	mov.b64 	%rd2878, {%r10237, %r10236};
	xor.b64  	%rd2879, %rd2878, %rd2877;
	shf.l.wrap.b32 	%r10238, %r10232, %r10233, 25;
	shf.l.wrap.b32 	%r10239, %r10233, %r10232, 25;
	mov.b64 	%rd2880, {%r10239, %r10238};
	xor.b64  	%rd2881, %rd2879, %rd2880;
	xor.b64  	%rd2882, %rd2862, %rd2812;
	xor.b64  	%rd2883, %rd2862, %rd2837;
	and.b64  	%rd2884, %rd2883, %rd2882;
	xor.b64  	%rd2885, %rd2884, %rd2862;
	add.s64 	%rd2886, %rd2875, %rd2885;
	add.s64 	%rd2887, %rd2886, %rd2881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10240,%dummy}, %rd2876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10241}, %rd2876;
	}
	shf.r.wrap.b32 	%r10242, %r10241, %r10240, 14;
	shf.r.wrap.b32 	%r10243, %r10240, %r10241, 14;
	mov.b64 	%rd2888, {%r10243, %r10242};
	shf.r.wrap.b32 	%r10244, %r10241, %r10240, 18;
	shf.r.wrap.b32 	%r10245, %r10240, %r10241, 18;
	mov.b64 	%rd2889, {%r10245, %r10244};
	xor.b64  	%rd2890, %rd2889, %rd2888;
	shf.l.wrap.b32 	%r10246, %r10240, %r10241, 23;
	shf.l.wrap.b32 	%r10247, %r10241, %r10240, 23;
	mov.b64 	%rd2891, {%r10247, %r10246};
	xor.b64  	%rd2892, %rd2890, %rd2891;
	xor.b64  	%rd2893, %rd2851, %rd2826;
	and.b64  	%rd2894, %rd2876, %rd2893;
	xor.b64  	%rd2895, %rd2894, %rd2826;
	add.s64 	%rd2896, %rd2801, %rd2548;
	add.s64 	%rd2898, %rd2896, %rd78;
	add.s64 	%rd2899, %rd2898, %rd2895;
	add.s64 	%rd2900, %rd2899, %rd2892;
	add.s64 	%rd2901, %rd2900, %rd2812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10248,%dummy}, %rd2887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10249}, %rd2887;
	}
	shf.r.wrap.b32 	%r10250, %r10249, %r10248, 28;
	shf.r.wrap.b32 	%r10251, %r10248, %r10249, 28;
	mov.b64 	%rd2902, {%r10251, %r10250};
	shf.l.wrap.b32 	%r10252, %r10248, %r10249, 30;
	shf.l.wrap.b32 	%r10253, %r10249, %r10248, 30;
	mov.b64 	%rd2903, {%r10253, %r10252};
	xor.b64  	%rd2904, %rd2903, %rd2902;
	shf.l.wrap.b32 	%r10254, %r10248, %r10249, 25;
	shf.l.wrap.b32 	%r10255, %r10249, %r10248, 25;
	mov.b64 	%rd2905, {%r10255, %r10254};
	xor.b64  	%rd2906, %rd2904, %rd2905;
	xor.b64  	%rd2907, %rd2887, %rd2837;
	xor.b64  	%rd2908, %rd2887, %rd2862;
	and.b64  	%rd2909, %rd2908, %rd2907;
	xor.b64  	%rd2910, %rd2909, %rd2887;
	add.s64 	%rd2911, %rd2900, %rd2910;
	add.s64 	%rd2912, %rd2911, %rd2906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10256,%dummy}, %rd2901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10257}, %rd2901;
	}
	shf.r.wrap.b32 	%r10258, %r10257, %r10256, 14;
	shf.r.wrap.b32 	%r10259, %r10256, %r10257, 14;
	mov.b64 	%rd2913, {%r10259, %r10258};
	shf.r.wrap.b32 	%r10260, %r10257, %r10256, 18;
	shf.r.wrap.b32 	%r10261, %r10256, %r10257, 18;
	mov.b64 	%rd2914, {%r10261, %r10260};
	xor.b64  	%rd2915, %rd2914, %rd2913;
	shf.l.wrap.b32 	%r10262, %r10256, %r10257, 23;
	shf.l.wrap.b32 	%r10263, %r10257, %r10256, 23;
	mov.b64 	%rd2916, {%r10263, %r10262};
	xor.b64  	%rd2917, %rd2915, %rd2916;
	xor.b64  	%rd2918, %rd2876, %rd2851;
	and.b64  	%rd2919, %rd2901, %rd2918;
	xor.b64  	%rd2920, %rd2919, %rd2851;
	add.s64 	%rd2921, %rd2826, %rd2561;
	add.s64 	%rd2923, %rd2921, %rd79;
	add.s64 	%rd2924, %rd2923, %rd2920;
	add.s64 	%rd2925, %rd2924, %rd2917;
	add.s64 	%rd2926, %rd2925, %rd2837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10264,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10265}, %rd2912;
	}
	shf.r.wrap.b32 	%r10266, %r10265, %r10264, 28;
	shf.r.wrap.b32 	%r10267, %r10264, %r10265, 28;
	mov.b64 	%rd2927, {%r10267, %r10266};
	shf.l.wrap.b32 	%r10268, %r10264, %r10265, 30;
	shf.l.wrap.b32 	%r10269, %r10265, %r10264, 30;
	mov.b64 	%rd2928, {%r10269, %r10268};
	xor.b64  	%rd2929, %rd2928, %rd2927;
	shf.l.wrap.b32 	%r10270, %r10264, %r10265, 25;
	shf.l.wrap.b32 	%r10271, %r10265, %r10264, 25;
	mov.b64 	%rd2930, {%r10271, %r10270};
	xor.b64  	%rd2931, %rd2929, %rd2930;
	xor.b64  	%rd2932, %rd2912, %rd2862;
	xor.b64  	%rd2933, %rd2912, %rd2887;
	and.b64  	%rd2934, %rd2933, %rd2932;
	xor.b64  	%rd2935, %rd2934, %rd2912;
	add.s64 	%rd2936, %rd2925, %rd2935;
	add.s64 	%rd2937, %rd2936, %rd2931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10272,%dummy}, %rd2926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10273}, %rd2926;
	}
	shf.r.wrap.b32 	%r10274, %r10273, %r10272, 14;
	shf.r.wrap.b32 	%r10275, %r10272, %r10273, 14;
	mov.b64 	%rd2938, {%r10275, %r10274};
	shf.r.wrap.b32 	%r10276, %r10273, %r10272, 18;
	shf.r.wrap.b32 	%r10277, %r10272, %r10273, 18;
	mov.b64 	%rd2939, {%r10277, %r10276};
	xor.b64  	%rd2940, %rd2939, %rd2938;
	shf.l.wrap.b32 	%r10278, %r10272, %r10273, 23;
	shf.l.wrap.b32 	%r10279, %r10273, %r10272, 23;
	mov.b64 	%rd2941, {%r10279, %r10278};
	xor.b64  	%rd2942, %rd2940, %rd2941;
	xor.b64  	%rd2943, %rd2901, %rd2876;
	and.b64  	%rd2944, %rd2926, %rd2943;
	xor.b64  	%rd2945, %rd2944, %rd2876;
	add.s64 	%rd2946, %rd2574, %rd2851;
	add.s64 	%rd2948, %rd2946, %rd80;
	add.s64 	%rd2949, %rd2948, %rd2945;
	add.s64 	%rd2950, %rd2949, %rd2942;
	add.s64 	%rd2951, %rd2950, %rd2862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10280,%dummy}, %rd2937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10281}, %rd2937;
	}
	shf.r.wrap.b32 	%r10282, %r10281, %r10280, 28;
	shf.r.wrap.b32 	%r10283, %r10280, %r10281, 28;
	mov.b64 	%rd2952, {%r10283, %r10282};
	shf.l.wrap.b32 	%r10284, %r10280, %r10281, 30;
	shf.l.wrap.b32 	%r10285, %r10281, %r10280, 30;
	mov.b64 	%rd2953, {%r10285, %r10284};
	xor.b64  	%rd2954, %rd2953, %rd2952;
	shf.l.wrap.b32 	%r10286, %r10280, %r10281, 25;
	shf.l.wrap.b32 	%r10287, %r10281, %r10280, 25;
	mov.b64 	%rd2955, {%r10287, %r10286};
	xor.b64  	%rd2956, %rd2954, %rd2955;
	xor.b64  	%rd2957, %rd2937, %rd2887;
	xor.b64  	%rd2958, %rd2937, %rd2912;
	and.b64  	%rd2959, %rd2958, %rd2957;
	xor.b64  	%rd2960, %rd2959, %rd2937;
	add.s64 	%rd2961, %rd2950, %rd2960;
	add.s64 	%rd2962, %rd2961, %rd2956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10288,%dummy}, %rd2951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10289}, %rd2951;
	}
	shf.r.wrap.b32 	%r10290, %r10289, %r10288, 14;
	shf.r.wrap.b32 	%r10291, %r10288, %r10289, 14;
	mov.b64 	%rd2963, {%r10291, %r10290};
	shf.r.wrap.b32 	%r10292, %r10289, %r10288, 18;
	shf.r.wrap.b32 	%r10293, %r10288, %r10289, 18;
	mov.b64 	%rd2964, {%r10293, %r10292};
	xor.b64  	%rd2965, %rd2964, %rd2963;
	shf.l.wrap.b32 	%r10294, %r10288, %r10289, 23;
	shf.l.wrap.b32 	%r10295, %r10289, %r10288, 23;
	mov.b64 	%rd2966, {%r10295, %r10294};
	xor.b64  	%rd2967, %rd2965, %rd2966;
	xor.b64  	%rd2968, %rd2926, %rd2901;
	and.b64  	%rd2969, %rd2951, %rd2968;
	xor.b64  	%rd2970, %rd2969, %rd2901;
	add.s64 	%rd2971, %rd2587, %rd2876;
	add.s64 	%rd2973, %rd2971, %rd81;
	add.s64 	%rd2974, %rd2973, %rd2970;
	add.s64 	%rd2975, %rd2974, %rd2967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10296,%dummy}, %rd2962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10297}, %rd2962;
	}
	shf.r.wrap.b32 	%r10298, %r10297, %r10296, 28;
	shf.r.wrap.b32 	%r10299, %r10296, %r10297, 28;
	mov.b64 	%rd2976, {%r10299, %r10298};
	shf.l.wrap.b32 	%r10300, %r10296, %r10297, 30;
	shf.l.wrap.b32 	%r10301, %r10297, %r10296, 30;
	mov.b64 	%rd2977, {%r10301, %r10300};
	xor.b64  	%rd2978, %rd2977, %rd2976;
	shf.l.wrap.b32 	%r10302, %r10296, %r10297, 25;
	shf.l.wrap.b32 	%r10303, %r10297, %r10296, 25;
	mov.b64 	%rd2979, {%r10303, %r10302};
	xor.b64  	%rd2980, %rd2978, %rd2979;
	xor.b64  	%rd2981, %rd2962, %rd2912;
	xor.b64  	%rd2982, %rd2962, %rd2937;
	and.b64  	%rd2983, %rd2982, %rd2981;
	xor.b64  	%rd2984, %rd2983, %rd2962;
	add.s64 	%rd2985, %rd2984, %rd182;
	add.s64 	%rd2986, %rd2985, %rd2975;
	add.s64 	%rd2987, %rd2986, %rd2980;
	st.local.u64 	[%rd1], %rd2987;
	add.s64 	%rd2988, %rd2962, %rd190;
	st.local.u64 	[%rd1+8], %rd2988;
	add.s64 	%rd2989, %rd2937, %rd188;
	st.local.u64 	[%rd1+16], %rd2989;
	add.s64 	%rd2990, %rd2912, %rd180;
	st.local.u64 	[%rd1+24], %rd2990;
	add.s64 	%rd2991, %rd2887, %rd164;
	add.s64 	%rd2992, %rd2991, %rd2975;
	st.local.u64 	[%rd1+32], %rd2992;
	add.s64 	%rd2993, %rd2951, %rd171;
	st.local.u64 	[%rd1+40], %rd2993;
	add.s64 	%rd2994, %rd2926, %rd170;
	st.local.u64 	[%rd1+48], %rd2994;
	add.s64 	%rd2995, %rd2901, %rd175;
	st.local.u64 	[%rd1+56], %rd2995;
	st.local.v2.u32 	[%rd1+64], {%r20374, %r20373};
	st.local.v2.u32 	[%rd1+72], {%r20372, %r20371};
	st.local.v2.u32 	[%rd1+80], {%r20378, %r20377};
	st.local.v2.u32 	[%rd1+88], {%r20376, %r20375};
	st.local.v2.u32 	[%rd1+96], {%r20382, %r20381};
	st.local.v2.u32 	[%rd1+104], {%r20380, %r20379};
	st.local.v2.u32 	[%rd1+112], {%r20386, %r20385};
	st.local.v2.u32 	[%rd1+120], {%r20384, %r20383};
	st.local.v2.u32 	[%rd1+128], {%r20390, %r20389};
	st.local.v2.u32 	[%rd1+136], {%r20388, %r20387};
	st.local.v2.u32 	[%rd1+144], {%r20394, %r20393};
	st.local.v2.u32 	[%rd1+152], {%r20392, %r20391};
	st.local.v2.u32 	[%rd1+160], {%r20398, %r20397};
	st.local.v2.u32 	[%rd1+168], {%r20396, %r20395};
	st.local.v2.u32 	[%rd1+176], {%r20402, %r20401};
	st.local.u32 	[%rd1+184], %r20400;
	bra.uni 	BB2_207;

BB2_97:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_128:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_112:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_143:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_104:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_135:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_119:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_150:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_100:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_131:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_115:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_146:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_107:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_138:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_122:
	mov.u32 	%r20434, %r2941;
	bra.uni 	BB2_206;

BB2_153:
	mov.u32 	%r20434, %r2941;

BB2_206:
	ld.local.u32 	%r12912, [%rd1+64];
	or.b32  	%r12913, %r12912, %r20434;
	ld.local.u32 	%r12914, [%rd1+68];
	ld.local.u32 	%r12915, [%rd1+72];
	ld.local.u32 	%r12916, [%rd1+76];
	ld.local.u32 	%r12917, [%rd1+80];
	ld.local.u32 	%r12918, [%rd1+84];
	ld.local.u32 	%r12919, [%rd1+88];
	ld.local.u32 	%r12920, [%rd1+92];
	ld.local.u32 	%r12921, [%rd1+96];
	ld.local.u32 	%r12922, [%rd1+100];
	ld.local.u32 	%r12923, [%rd1+104];
	ld.local.u32 	%r12924, [%rd1+108];
	ld.local.u32 	%r12925, [%rd1+112];
	ld.local.u32 	%r12926, [%rd1+116];
	ld.local.u32 	%r12927, [%rd1+120];
	ld.local.u32 	%r12928, [%rd1+124];
	ld.local.u32 	%r12929, [%rd1+128];
	ld.local.u32 	%r12930, [%rd1+132];
	ld.local.u32 	%r12931, [%rd1+136];
	ld.local.u32 	%r12932, [%rd1+140];
	ld.local.u32 	%r12933, [%rd1+144];
	ld.local.u32 	%r12934, [%rd1+148];
	ld.local.u32 	%r12935, [%rd1+152];
	ld.local.u32 	%r12936, [%rd1+156];
	ld.local.u32 	%r12937, [%rd1+160];
	ld.local.u32 	%r12938, [%rd1+164];
	ld.local.u32 	%r12939, [%rd1+168];
	ld.local.u32 	%r12940, [%rd1+172];
	ld.local.u32 	%r12941, [%rd1+176];
	ld.local.u32 	%r12942, [%rd1+180];
	ld.local.u32 	%r12943, [%rd1+184];
	ld.local.u32 	%r12944, [%rd1+188];
	st.local.u32 	[%rd1+64], %r12913;
	or.b32  	%r12945, %r12914, %r2943;
	st.local.u32 	[%rd1+68], %r12945;
	or.b32  	%r12946, %r12915, %r2945;
	st.local.u32 	[%rd1+72], %r12946;
	or.b32  	%r12947, %r12916, %r2947;
	st.local.u32 	[%rd1+76], %r12947;
	or.b32  	%r12948, %r12917, %r2949;
	st.local.u32 	[%rd1+80], %r12948;
	or.b32  	%r12949, %r12918, %r2951;
	st.local.u32 	[%rd1+84], %r12949;
	or.b32  	%r12950, %r12919, %r2953;
	st.local.u32 	[%rd1+88], %r12950;
	or.b32  	%r12951, %r12920, %r2955;
	st.local.u32 	[%rd1+92], %r12951;
	or.b32  	%r12952, %r12921, %r2957;
	st.local.u32 	[%rd1+96], %r12952;
	or.b32  	%r12953, %r12922, %r2959;
	st.local.u32 	[%rd1+100], %r12953;
	or.b32  	%r12954, %r12923, %r2961;
	st.local.u32 	[%rd1+104], %r12954;
	or.b32  	%r12955, %r12924, %r2963;
	st.local.u32 	[%rd1+108], %r12955;
	or.b32  	%r12956, %r12925, %r2965;
	st.local.u32 	[%rd1+112], %r12956;
	or.b32  	%r12957, %r12926, %r2967;
	st.local.u32 	[%rd1+116], %r12957;
	or.b32  	%r12958, %r12927, %r2969;
	st.local.u32 	[%rd1+120], %r12958;
	or.b32  	%r12959, %r12928, %r2971;
	st.local.u32 	[%rd1+124], %r12959;
	or.b32  	%r12960, %r12929, %r2973;
	st.local.u32 	[%rd1+128], %r12960;
	or.b32  	%r12961, %r12930, %r2975;
	st.local.u32 	[%rd1+132], %r12961;
	or.b32  	%r12962, %r12931, %r2977;
	st.local.u32 	[%rd1+136], %r12962;
	or.b32  	%r12963, %r12932, %r2979;
	st.local.u32 	[%rd1+140], %r12963;
	or.b32  	%r12964, %r12933, %r2981;
	st.local.u32 	[%rd1+144], %r12964;
	or.b32  	%r12965, %r12934, %r2983;
	st.local.u32 	[%rd1+148], %r12965;
	or.b32  	%r12966, %r12935, %r2985;
	st.local.u32 	[%rd1+152], %r12966;
	or.b32  	%r12967, %r12936, %r2987;
	st.local.u32 	[%rd1+156], %r12967;
	or.b32  	%r12968, %r12937, %r2989;
	st.local.u32 	[%rd1+160], %r12968;
	or.b32  	%r12969, %r12938, %r2991;
	st.local.u32 	[%rd1+164], %r12969;
	or.b32  	%r12970, %r12939, %r2993;
	st.local.u32 	[%rd1+168], %r12970;
	or.b32  	%r12971, %r12940, %r2995;
	st.local.u32 	[%rd1+172], %r12971;
	or.b32  	%r12972, %r12941, %r2997;
	st.local.u32 	[%rd1+176], %r12972;
	or.b32  	%r12973, %r12942, %r2999;
	st.local.u32 	[%rd1+180], %r12973;
	or.b32  	%r12974, %r12943, %r3001;
	st.local.u32 	[%rd1+184], %r12974;
	or.b32  	%r20399, %r12944, %r3003;

BB2_207:
	st.local.u32 	[%rd1+188], %r20399;
	ret;
}

	// .globl	m11300_init
.entry m11300_init(
	.param .u64 .ptr .global .align 4 m11300_init_param_0,
	.param .u64 .ptr .global .align 4 m11300_init_param_1,
	.param .u64 .ptr .global .align 4 m11300_init_param_2,
	.param .u64 .ptr .global .align 4 m11300_init_param_3,
	.param .u64 .ptr .global .align 8 m11300_init_param_4,
	.param .u64 .ptr .global .align 1 m11300_init_param_5,
	.param .u64 .ptr .global .align 4 m11300_init_param_6,
	.param .u64 .ptr .global .align 4 m11300_init_param_7,
	.param .u64 .ptr .global .align 4 m11300_init_param_8,
	.param .u64 .ptr .global .align 4 m11300_init_param_9,
	.param .u64 .ptr .global .align 4 m11300_init_param_10,
	.param .u64 .ptr .global .align 4 m11300_init_param_11,
	.param .u64 .ptr .global .align 4 m11300_init_param_12,
	.param .u64 .ptr .global .align 4 m11300_init_param_13,
	.param .u64 .ptr .global .align 4 m11300_init_param_14,
	.param .u64 .ptr .global .align 4 m11300_init_param_15,
	.param .u64 .ptr .global .align 4 m11300_init_param_16,
	.param .u64 .ptr .global .align 4 m11300_init_param_17,
	.param .u64 .ptr .global .align 4 m11300_init_param_18,
	.param .u64 .ptr .global .align 4 m11300_init_param_19,
	.param .u64 .ptr .global .align 4 m11300_init_param_20,
	.param .u64 .ptr .global .align 4 m11300_init_param_21,
	.param .u64 .ptr .global .align 4 m11300_init_param_22,
	.param .u64 .ptr .global .align 4 m11300_init_param_23,
	.param .u32 m11300_init_param_24,
	.param .u32 m11300_init_param_25,
	.param .u32 m11300_init_param_26,
	.param .u32 m11300_init_param_27,
	.param .u32 m11300_init_param_28,
	.param .u32 m11300_init_param_29,
	.param .u32 m11300_init_param_30,
	.param .u32 m11300_init_param_31,
	.param .u32 m11300_init_param_32,
	.param .u32 m11300_init_param_33,
	.param .u64 m11300_init_param_34
)
{
	.local .align 16 .b8 	__local_depot3[336];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<242>;
	.reg .b32 	%r<12478>;
	.reg .b64 	%rd<8845>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd267, [m11300_init_param_0];
	ld.param.u64 	%rd270, [m11300_init_param_34];
	add.u64 	%rd271, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd271;
	add.u64 	%rd272, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd272;
	add.u64 	%rd273, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd273;
	add.u64 	%rd274, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd274;
	add.u64 	%rd275, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd275;
	add.u64 	%rd276, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd276;
	add.u64 	%rd277, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd277;
	add.u64 	%rd278, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd278;
	add.u64 	%rd279, %SP, 128;
	cvta.to.local.u64 	%rd9, %rd279;
	mov.u32 	%r636, %ctaid.x;
	mov.u32 	%r637, %ntid.x;
	mov.b32	%r638, %envreg3;
	mad.lo.s32 	%r639, %r636, %r637, %r638;
	mov.u32 	%r640, %tid.x;
	add.s32 	%r1, %r639, %r640;
	cvt.s64.s32	%rd280, %r1;
	setp.ge.u64	%p1, %rd280, %rd270;
	@%p1 bra 	BB3_326;

	mov.u64 	%rd281, 7640891576956012808;
	st.local.u64 	[%rd9], %rd281;
	add.s64 	%rd10, %rd9, 8;
	mov.u64 	%rd282, -4942790177534073029;
	st.local.u64 	[%rd9+8], %rd282;
	mov.u64 	%rd283, 4354685564936845355;
	st.local.u64 	[%rd9+16], %rd283;
	mov.u64 	%rd284, -6534734903238641935;
	st.local.u64 	[%rd9+24], %rd284;
	mov.u64 	%rd285, 5840696475078001361;
	st.local.u64 	[%rd9+32], %rd285;
	mov.u64 	%rd286, -7276294671716946913;
	st.local.u64 	[%rd9+40], %rd286;
	mov.u64 	%rd287, 2270897969802886507;
	st.local.u64 	[%rd9+48], %rd287;
	mov.u64 	%rd288, 6620516959819538809;
	st.local.u64 	[%rd9+56], %rd288;
	add.s64 	%rd11, %rd9, 64;
	mov.u32 	%r12413, 0;
	st.local.v2.u32 	[%rd9+64], {%r12413, %r12413};
	add.s64 	%rd12, %rd9, 72;
	st.local.v2.u32 	[%rd9+72], {%r12413, %r12413};
	add.s64 	%rd13, %rd9, 80;
	st.local.v2.u32 	[%rd9+80], {%r12413, %r12413};
	add.s64 	%rd14, %rd9, 88;
	st.local.v2.u32 	[%rd9+88], {%r12413, %r12413};
	add.s64 	%rd15, %rd9, 96;
	st.local.v2.u32 	[%rd9+96], {%r12413, %r12413};
	add.s64 	%rd16, %rd9, 104;
	st.local.v2.u32 	[%rd9+104], {%r12413, %r12413};
	add.s64 	%rd17, %rd9, 112;
	st.local.v2.u32 	[%rd9+112], {%r12413, %r12413};
	add.s64 	%rd18, %rd9, 120;
	st.local.v2.u32 	[%rd9+120], {%r12413, %r12413};
	add.s64 	%rd19, %rd9, 128;
	st.local.v2.u32 	[%rd9+128], {%r12413, %r12413};
	add.s64 	%rd20, %rd9, 136;
	st.local.v2.u32 	[%rd9+136], {%r12413, %r12413};
	add.s64 	%rd21, %rd9, 144;
	st.local.v2.u32 	[%rd9+144], {%r12413, %r12413};
	add.s64 	%rd22, %rd9, 152;
	st.local.v2.u32 	[%rd9+152], {%r12413, %r12413};
	add.s64 	%rd23, %rd9, 160;
	st.local.v2.u32 	[%rd9+160], {%r12413, %r12413};
	add.s64 	%rd24, %rd9, 168;
	st.local.v2.u32 	[%rd9+168], {%r12413, %r12413};
	add.s64 	%rd25, %rd9, 176;
	st.local.v2.u32 	[%rd9+176], {%r12413, %r12413};
	add.s64 	%rd26, %rd9, 184;
	st.local.v2.u32 	[%rd9+184], {%r12413, %r12413};
	st.local.u32 	[%rd9+192], %r12413;
	mul.wide.s32 	%rd289, %r1, 260;
	add.s64 	%rd290, %rd267, %rd289;
	ld.global.u32 	%r2, [%rd290+256];
	add.s64 	%rd27, %rd1, 4;
	add.s64 	%rd28, %rd2, 4;
	add.s64 	%rd29, %rd3, 4;
	add.s64 	%rd30, %rd4, 4;
	add.s64 	%rd31, %rd5, 4;
	add.s64 	%rd32, %rd6, 4;
	add.s64 	%rd33, %rd7, 4;
	add.s64 	%rd34, %rd8, 4;
	ld.const.u64 	%rd35, [k_sha512];
	ld.const.u64 	%rd36, [k_sha512+8];
	ld.const.u64 	%rd37, [k_sha512+16];
	ld.const.u64 	%rd38, [k_sha512+24];
	ld.const.u64 	%rd39, [k_sha512+32];
	ld.const.u64 	%rd40, [k_sha512+40];
	ld.const.u64 	%rd41, [k_sha512+48];
	ld.const.u64 	%rd42, [k_sha512+56];
	ld.const.u64 	%rd43, [k_sha512+64];
	ld.const.u64 	%rd44, [k_sha512+72];
	ld.const.u64 	%rd45, [k_sha512+80];
	ld.const.u64 	%rd46, [k_sha512+88];
	ld.const.u64 	%rd47, [k_sha512+96];
	ld.const.u64 	%rd48, [k_sha512+104];
	ld.const.u64 	%rd49, [k_sha512+112];
	ld.const.u64 	%rd50, [k_sha512+120];
	mov.u32 	%r12414, %r12413;
	bra.uni 	BB3_2;

BB3_415:
	ld.local.u32 	%r10349, [%rd10+56];
	ld.local.u32 	%r10350, [%rd11+4];
	ld.local.u32 	%r10351, [%rd27];
	ld.local.u32 	%r10352, [%rd10+64];
	ld.local.u32 	%r10353, [%rd12+4];
	ld.local.v2.u32 	{%r10354, %r10355}, [%rd27+4];
	ld.local.u32 	%r10358, [%rd10+72];
	ld.local.u32 	%r10359, [%rd2];
	ld.local.u32 	%r10360, [%rd13+4];
	ld.local.u32 	%r10361, [%rd28];
	ld.local.u32 	%r10362, [%rd10+80];
	ld.local.u32 	%r10363, [%rd14+4];
	ld.local.v2.u32 	{%r10364, %r10365}, [%rd28+4];
	ld.local.u32 	%r10368, [%rd10+88];
	ld.local.u32 	%r10369, [%rd3];
	ld.local.u32 	%r10370, [%rd15+4];
	ld.local.u32 	%r10371, [%rd29];
	ld.local.u32 	%r10372, [%rd10+96];
	ld.local.u32 	%r10373, [%rd16+4];
	ld.local.v2.u32 	{%r10374, %r10375}, [%rd29+4];
	ld.local.u32 	%r10378, [%rd10+104];
	ld.local.u32 	%r10379, [%rd4];
	ld.local.u32 	%r10380, [%rd17+4];
	ld.local.u32 	%r10381, [%rd30];
	ld.local.u32 	%r10382, [%rd10+112];
	ld.local.u32 	%r10383, [%rd18+4];
	ld.local.v2.u32 	{%r10384, %r10385}, [%rd30+4];
	ld.local.u32 	%r10388, [%rd10+120];
	ld.local.u32 	%r10389, [%rd5];
	ld.local.u32 	%r10390, [%rd19+4];
	ld.local.u32 	%r10391, [%rd31];
	ld.local.u32 	%r10392, [%rd10+128];
	ld.local.u32 	%r10393, [%rd20+4];
	ld.local.v2.u32 	{%r10394, %r10395}, [%rd31+4];
	ld.local.u32 	%r10398, [%rd10+136];
	ld.local.u32 	%r10399, [%rd6];
	ld.local.u32 	%r10400, [%rd21+4];
	ld.local.u32 	%r10401, [%rd32];
	ld.local.u32 	%r10402, [%rd10+144];
	ld.local.u32 	%r10403, [%rd22+4];
	ld.local.v2.u32 	{%r10404, %r10405}, [%rd32+4];
	ld.local.u32 	%r10408, [%rd10+152];
	ld.local.u32 	%r10409, [%rd7];
	ld.local.u32 	%r10410, [%rd23+4];
	ld.local.u32 	%r10411, [%rd33];
	ld.local.u32 	%r10412, [%rd10+160];
	ld.local.u32 	%r10413, [%rd24+4];
	ld.local.v2.u32 	{%r10414, %r10415}, [%rd33+4];
	ld.local.u32 	%r10418, [%rd10+168];
	ld.local.u32 	%r10419, [%rd8];
	ld.local.u32 	%r10420, [%rd25+4];
	ld.local.u32 	%r10421, [%rd34];
	ld.local.u32 	%r10422, [%rd10+176];
	ld.local.u32 	%r10423, [%rd26+4];
	ld.local.v2.u32 	{%r10424, %r10425}, [%rd34+4];
	or.b32  	%r10428, %r10349, %r12445;
	or.b32  	%r10429, %r10350, %r10351;
	mov.b64	%rd5914, {%r10429, %r10428};
	or.b32  	%r10430, %r10352, %r10354;
	or.b32  	%r10431, %r10353, %r10355;
	mov.b64	%rd5915, {%r10431, %r10430};
	or.b32  	%r10432, %r10358, %r10359;
	or.b32  	%r10433, %r10360, %r10361;
	mov.b64	%rd5916, {%r10433, %r10432};
	or.b32  	%r10434, %r10362, %r10364;
	or.b32  	%r10435, %r10363, %r10365;
	mov.b64	%rd5917, {%r10435, %r10434};
	or.b32  	%r10436, %r10368, %r10369;
	or.b32  	%r10437, %r10370, %r10371;
	mov.b64	%rd5918, {%r10437, %r10436};
	or.b32  	%r10438, %r10372, %r10374;
	or.b32  	%r10439, %r10373, %r10375;
	mov.b64	%rd5919, {%r10439, %r10438};
	or.b32  	%r10440, %r10378, %r10379;
	or.b32  	%r10441, %r10380, %r10381;
	mov.b64	%rd5920, {%r10441, %r10440};
	or.b32  	%r10442, %r10382, %r10384;
	or.b32  	%r10443, %r10383, %r10385;
	mov.b64	%rd5921, {%r10443, %r10442};
	or.b32  	%r10444, %r10388, %r10389;
	or.b32  	%r10445, %r10390, %r10391;
	mov.b64	%rd5922, {%r10445, %r10444};
	or.b32  	%r10446, %r10392, %r10394;
	or.b32  	%r10447, %r10393, %r10395;
	mov.b64	%rd5923, {%r10447, %r10446};
	or.b32  	%r10448, %r10398, %r10399;
	or.b32  	%r10449, %r10400, %r10401;
	mov.b64	%rd5924, {%r10449, %r10448};
	or.b32  	%r10450, %r10402, %r10404;
	or.b32  	%r10451, %r10403, %r10405;
	mov.b64	%rd5925, {%r10451, %r10450};
	or.b32  	%r10452, %r10408, %r10409;
	or.b32  	%r10453, %r10410, %r10411;
	mov.b64	%rd5926, {%r10453, %r10452};
	or.b32  	%r10454, %r10412, %r10414;
	or.b32  	%r10455, %r10413, %r10415;
	mov.b64	%rd5927, {%r10455, %r10454};
	or.b32  	%r10456, %r10418, %r10419;
	or.b32  	%r10457, %r10420, %r10421;
	mov.b64	%rd5928, {%r10457, %r10456};
	or.b32  	%r10458, %r10422, %r10424;
	or.b32  	%r10459, %r10423, %r10425;
	mov.b64	%rd5929, {%r10459, %r10458};
	ld.local.u64 	%rd5930, [%rd10+24];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10460,%dummy}, %rd5930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10461}, %rd5930;
	}
	shf.r.wrap.b32 	%r10462, %r10461, %r10460, 14;
	shf.r.wrap.b32 	%r10463, %r10460, %r10461, 14;
	mov.b64 	%rd5931, {%r10463, %r10462};
	shf.r.wrap.b32 	%r10464, %r10461, %r10460, 18;
	shf.r.wrap.b32 	%r10465, %r10460, %r10461, 18;
	mov.b64 	%rd5932, {%r10465, %r10464};
	xor.b64  	%rd5933, %rd5932, %rd5931;
	shf.l.wrap.b32 	%r10466, %r10460, %r10461, 23;
	shf.l.wrap.b32 	%r10467, %r10461, %r10460, 23;
	mov.b64 	%rd5934, {%r10467, %r10466};
	xor.b64  	%rd5935, %rd5933, %rd5934;
	ld.local.u64 	%rd5936, [%rd10+40];
	ld.local.u64 	%rd5937, [%rd10+32];
	xor.b64  	%rd5938, %rd5936, %rd5937;
	and.b64  	%rd5939, %rd5938, %rd5930;
	xor.b64  	%rd5940, %rd5939, %rd5936;
	ld.local.u64 	%rd5941, [%rd10+48];
	add.s64 	%rd5942, %rd5940, %rd5941;
	add.s64 	%rd5943, %rd5942, %rd5914;
	add.s64 	%rd5944, %rd5943, %rd35;
	add.s64 	%rd5945, %rd5944, %rd5935;
	ld.local.u64 	%rd5946, [%rd10+16];
	add.s64 	%rd5947, %rd5945, %rd5946;
	ld.local.u64 	%rd5948, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10468,%dummy}, %rd5948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10469}, %rd5948;
	}
	shf.r.wrap.b32 	%r10470, %r10469, %r10468, 28;
	shf.r.wrap.b32 	%r10471, %r10468, %r10469, 28;
	mov.b64 	%rd5949, {%r10471, %r10470};
	shf.l.wrap.b32 	%r10472, %r10468, %r10469, 30;
	shf.l.wrap.b32 	%r10473, %r10469, %r10468, 30;
	mov.b64 	%rd5950, {%r10473, %r10472};
	xor.b64  	%rd5951, %rd5950, %rd5949;
	shf.l.wrap.b32 	%r10474, %r10468, %r10469, 25;
	shf.l.wrap.b32 	%r10475, %r10469, %r10468, 25;
	mov.b64 	%rd5952, {%r10475, %r10474};
	xor.b64  	%rd5953, %rd5951, %rd5952;
	ld.local.u64 	%rd5954, [%rd10+8];
	xor.b64  	%rd5955, %rd5954, %rd5948;
	ld.local.u64 	%rd5956, [%rd10];
	xor.b64  	%rd5957, %rd5956, %rd5948;
	and.b64  	%rd5958, %rd5955, %rd5957;
	xor.b64  	%rd5959, %rd5958, %rd5948;
	add.s64 	%rd5960, %rd5945, %rd5959;
	add.s64 	%rd5961, %rd5960, %rd5953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10476,%dummy}, %rd5947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10477}, %rd5947;
	}
	shf.r.wrap.b32 	%r10478, %r10477, %r10476, 14;
	shf.r.wrap.b32 	%r10479, %r10476, %r10477, 14;
	mov.b64 	%rd5962, {%r10479, %r10478};
	shf.r.wrap.b32 	%r10480, %r10477, %r10476, 18;
	shf.r.wrap.b32 	%r10481, %r10476, %r10477, 18;
	mov.b64 	%rd5963, {%r10481, %r10480};
	xor.b64  	%rd5964, %rd5963, %rd5962;
	shf.l.wrap.b32 	%r10482, %r10476, %r10477, 23;
	shf.l.wrap.b32 	%r10483, %r10477, %r10476, 23;
	mov.b64 	%rd5965, {%r10483, %r10482};
	xor.b64  	%rd5966, %rd5964, %rd5965;
	xor.b64  	%rd5967, %rd5937, %rd5930;
	and.b64  	%rd5968, %rd5947, %rd5967;
	xor.b64  	%rd5969, %rd5968, %rd5937;
	add.s64 	%rd5970, %rd5915, %rd5936;
	add.s64 	%rd5971, %rd5970, %rd36;
	add.s64 	%rd5972, %rd5971, %rd5969;
	add.s64 	%rd5973, %rd5972, %rd5966;
	add.s64 	%rd5974, %rd5973, %rd5954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10484,%dummy}, %rd5961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10485}, %rd5961;
	}
	shf.r.wrap.b32 	%r10486, %r10485, %r10484, 28;
	shf.r.wrap.b32 	%r10487, %r10484, %r10485, 28;
	mov.b64 	%rd5975, {%r10487, %r10486};
	shf.l.wrap.b32 	%r10488, %r10484, %r10485, 30;
	shf.l.wrap.b32 	%r10489, %r10485, %r10484, 30;
	mov.b64 	%rd5976, {%r10489, %r10488};
	xor.b64  	%rd5977, %rd5976, %rd5975;
	shf.l.wrap.b32 	%r10490, %r10484, %r10485, 25;
	shf.l.wrap.b32 	%r10491, %r10485, %r10484, 25;
	mov.b64 	%rd5978, {%r10491, %r10490};
	xor.b64  	%rd5979, %rd5977, %rd5978;
	xor.b64  	%rd5980, %rd5961, %rd5956;
	xor.b64  	%rd5981, %rd5961, %rd5948;
	and.b64  	%rd5982, %rd5981, %rd5980;
	xor.b64  	%rd5983, %rd5982, %rd5961;
	add.s64 	%rd5984, %rd5973, %rd5983;
	add.s64 	%rd5985, %rd5984, %rd5979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10492,%dummy}, %rd5974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10493}, %rd5974;
	}
	shf.r.wrap.b32 	%r10494, %r10493, %r10492, 14;
	shf.r.wrap.b32 	%r10495, %r10492, %r10493, 14;
	mov.b64 	%rd5986, {%r10495, %r10494};
	shf.r.wrap.b32 	%r10496, %r10493, %r10492, 18;
	shf.r.wrap.b32 	%r10497, %r10492, %r10493, 18;
	mov.b64 	%rd5987, {%r10497, %r10496};
	xor.b64  	%rd5988, %rd5987, %rd5986;
	shf.l.wrap.b32 	%r10498, %r10492, %r10493, 23;
	shf.l.wrap.b32 	%r10499, %r10493, %r10492, 23;
	mov.b64 	%rd5989, {%r10499, %r10498};
	xor.b64  	%rd5990, %rd5988, %rd5989;
	xor.b64  	%rd5991, %rd5947, %rd5930;
	and.b64  	%rd5992, %rd5974, %rd5991;
	xor.b64  	%rd5993, %rd5992, %rd5930;
	add.s64 	%rd5994, %rd5916, %rd5937;
	add.s64 	%rd5995, %rd5994, %rd37;
	add.s64 	%rd5996, %rd5995, %rd5993;
	add.s64 	%rd5997, %rd5996, %rd5990;
	add.s64 	%rd5998, %rd5997, %rd5956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10500,%dummy}, %rd5985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10501}, %rd5985;
	}
	shf.r.wrap.b32 	%r10502, %r10501, %r10500, 28;
	shf.r.wrap.b32 	%r10503, %r10500, %r10501, 28;
	mov.b64 	%rd5999, {%r10503, %r10502};
	shf.l.wrap.b32 	%r10504, %r10500, %r10501, 30;
	shf.l.wrap.b32 	%r10505, %r10501, %r10500, 30;
	mov.b64 	%rd6000, {%r10505, %r10504};
	xor.b64  	%rd6001, %rd6000, %rd5999;
	shf.l.wrap.b32 	%r10506, %r10500, %r10501, 25;
	shf.l.wrap.b32 	%r10507, %r10501, %r10500, 25;
	mov.b64 	%rd6002, {%r10507, %r10506};
	xor.b64  	%rd6003, %rd6001, %rd6002;
	xor.b64  	%rd6004, %rd5985, %rd5948;
	xor.b64  	%rd6005, %rd5985, %rd5961;
	and.b64  	%rd6006, %rd6005, %rd6004;
	xor.b64  	%rd6007, %rd6006, %rd5985;
	add.s64 	%rd6008, %rd5997, %rd6007;
	add.s64 	%rd6009, %rd6008, %rd6003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10508,%dummy}, %rd5998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10509}, %rd5998;
	}
	shf.r.wrap.b32 	%r10510, %r10509, %r10508, 14;
	shf.r.wrap.b32 	%r10511, %r10508, %r10509, 14;
	mov.b64 	%rd6010, {%r10511, %r10510};
	shf.r.wrap.b32 	%r10512, %r10509, %r10508, 18;
	shf.r.wrap.b32 	%r10513, %r10508, %r10509, 18;
	mov.b64 	%rd6011, {%r10513, %r10512};
	xor.b64  	%rd6012, %rd6011, %rd6010;
	shf.l.wrap.b32 	%r10514, %r10508, %r10509, 23;
	shf.l.wrap.b32 	%r10515, %r10509, %r10508, 23;
	mov.b64 	%rd6013, {%r10515, %r10514};
	xor.b64  	%rd6014, %rd6012, %rd6013;
	xor.b64  	%rd6015, %rd5974, %rd5947;
	and.b64  	%rd6016, %rd5998, %rd6015;
	xor.b64  	%rd6017, %rd6016, %rd5947;
	add.s64 	%rd6018, %rd5917, %rd5930;
	add.s64 	%rd6019, %rd6018, %rd38;
	add.s64 	%rd6020, %rd6019, %rd6017;
	add.s64 	%rd6021, %rd6020, %rd6014;
	add.s64 	%rd6022, %rd6021, %rd5948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10516,%dummy}, %rd6009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10517}, %rd6009;
	}
	shf.r.wrap.b32 	%r10518, %r10517, %r10516, 28;
	shf.r.wrap.b32 	%r10519, %r10516, %r10517, 28;
	mov.b64 	%rd6023, {%r10519, %r10518};
	shf.l.wrap.b32 	%r10520, %r10516, %r10517, 30;
	shf.l.wrap.b32 	%r10521, %r10517, %r10516, 30;
	mov.b64 	%rd6024, {%r10521, %r10520};
	xor.b64  	%rd6025, %rd6024, %rd6023;
	shf.l.wrap.b32 	%r10522, %r10516, %r10517, 25;
	shf.l.wrap.b32 	%r10523, %r10517, %r10516, 25;
	mov.b64 	%rd6026, {%r10523, %r10522};
	xor.b64  	%rd6027, %rd6025, %rd6026;
	xor.b64  	%rd6028, %rd6009, %rd5961;
	xor.b64  	%rd6029, %rd6009, %rd5985;
	and.b64  	%rd6030, %rd6029, %rd6028;
	xor.b64  	%rd6031, %rd6030, %rd6009;
	add.s64 	%rd6032, %rd6021, %rd6031;
	add.s64 	%rd6033, %rd6032, %rd6027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10524,%dummy}, %rd6022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10525}, %rd6022;
	}
	shf.r.wrap.b32 	%r10526, %r10525, %r10524, 14;
	shf.r.wrap.b32 	%r10527, %r10524, %r10525, 14;
	mov.b64 	%rd6034, {%r10527, %r10526};
	shf.r.wrap.b32 	%r10528, %r10525, %r10524, 18;
	shf.r.wrap.b32 	%r10529, %r10524, %r10525, 18;
	mov.b64 	%rd6035, {%r10529, %r10528};
	xor.b64  	%rd6036, %rd6035, %rd6034;
	shf.l.wrap.b32 	%r10530, %r10524, %r10525, 23;
	shf.l.wrap.b32 	%r10531, %r10525, %r10524, 23;
	mov.b64 	%rd6037, {%r10531, %r10530};
	xor.b64  	%rd6038, %rd6036, %rd6037;
	xor.b64  	%rd6039, %rd5998, %rd5974;
	and.b64  	%rd6040, %rd6022, %rd6039;
	xor.b64  	%rd6041, %rd6040, %rd5974;
	add.s64 	%rd6042, %rd5947, %rd5918;
	add.s64 	%rd6043, %rd6042, %rd39;
	add.s64 	%rd6044, %rd6043, %rd6041;
	add.s64 	%rd6045, %rd6044, %rd6038;
	add.s64 	%rd6046, %rd6045, %rd5961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10532,%dummy}, %rd6033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10533}, %rd6033;
	}
	shf.r.wrap.b32 	%r10534, %r10533, %r10532, 28;
	shf.r.wrap.b32 	%r10535, %r10532, %r10533, 28;
	mov.b64 	%rd6047, {%r10535, %r10534};
	shf.l.wrap.b32 	%r10536, %r10532, %r10533, 30;
	shf.l.wrap.b32 	%r10537, %r10533, %r10532, 30;
	mov.b64 	%rd6048, {%r10537, %r10536};
	xor.b64  	%rd6049, %rd6048, %rd6047;
	shf.l.wrap.b32 	%r10538, %r10532, %r10533, 25;
	shf.l.wrap.b32 	%r10539, %r10533, %r10532, 25;
	mov.b64 	%rd6050, {%r10539, %r10538};
	xor.b64  	%rd6051, %rd6049, %rd6050;
	xor.b64  	%rd6052, %rd6033, %rd5985;
	xor.b64  	%rd6053, %rd6033, %rd6009;
	and.b64  	%rd6054, %rd6053, %rd6052;
	xor.b64  	%rd6055, %rd6054, %rd6033;
	add.s64 	%rd6056, %rd6045, %rd6055;
	add.s64 	%rd6057, %rd6056, %rd6051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10540,%dummy}, %rd6046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10541}, %rd6046;
	}
	shf.r.wrap.b32 	%r10542, %r10541, %r10540, 14;
	shf.r.wrap.b32 	%r10543, %r10540, %r10541, 14;
	mov.b64 	%rd6058, {%r10543, %r10542};
	shf.r.wrap.b32 	%r10544, %r10541, %r10540, 18;
	shf.r.wrap.b32 	%r10545, %r10540, %r10541, 18;
	mov.b64 	%rd6059, {%r10545, %r10544};
	xor.b64  	%rd6060, %rd6059, %rd6058;
	shf.l.wrap.b32 	%r10546, %r10540, %r10541, 23;
	shf.l.wrap.b32 	%r10547, %r10541, %r10540, 23;
	mov.b64 	%rd6061, {%r10547, %r10546};
	xor.b64  	%rd6062, %rd6060, %rd6061;
	xor.b64  	%rd6063, %rd6022, %rd5998;
	and.b64  	%rd6064, %rd6046, %rd6063;
	xor.b64  	%rd6065, %rd6064, %rd5998;
	add.s64 	%rd6066, %rd5974, %rd5919;
	add.s64 	%rd6067, %rd6066, %rd40;
	add.s64 	%rd6068, %rd6067, %rd6065;
	add.s64 	%rd6069, %rd6068, %rd6062;
	add.s64 	%rd6070, %rd6069, %rd5985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10548,%dummy}, %rd6057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10549}, %rd6057;
	}
	shf.r.wrap.b32 	%r10550, %r10549, %r10548, 28;
	shf.r.wrap.b32 	%r10551, %r10548, %r10549, 28;
	mov.b64 	%rd6071, {%r10551, %r10550};
	shf.l.wrap.b32 	%r10552, %r10548, %r10549, 30;
	shf.l.wrap.b32 	%r10553, %r10549, %r10548, 30;
	mov.b64 	%rd6072, {%r10553, %r10552};
	xor.b64  	%rd6073, %rd6072, %rd6071;
	shf.l.wrap.b32 	%r10554, %r10548, %r10549, 25;
	shf.l.wrap.b32 	%r10555, %r10549, %r10548, 25;
	mov.b64 	%rd6074, {%r10555, %r10554};
	xor.b64  	%rd6075, %rd6073, %rd6074;
	xor.b64  	%rd6076, %rd6057, %rd6009;
	xor.b64  	%rd6077, %rd6057, %rd6033;
	and.b64  	%rd6078, %rd6077, %rd6076;
	xor.b64  	%rd6079, %rd6078, %rd6057;
	add.s64 	%rd6080, %rd6069, %rd6079;
	add.s64 	%rd6081, %rd6080, %rd6075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10556,%dummy}, %rd6070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10557}, %rd6070;
	}
	shf.r.wrap.b32 	%r10558, %r10557, %r10556, 14;
	shf.r.wrap.b32 	%r10559, %r10556, %r10557, 14;
	mov.b64 	%rd6082, {%r10559, %r10558};
	shf.r.wrap.b32 	%r10560, %r10557, %r10556, 18;
	shf.r.wrap.b32 	%r10561, %r10556, %r10557, 18;
	mov.b64 	%rd6083, {%r10561, %r10560};
	xor.b64  	%rd6084, %rd6083, %rd6082;
	shf.l.wrap.b32 	%r10562, %r10556, %r10557, 23;
	shf.l.wrap.b32 	%r10563, %r10557, %r10556, 23;
	mov.b64 	%rd6085, {%r10563, %r10562};
	xor.b64  	%rd6086, %rd6084, %rd6085;
	xor.b64  	%rd6087, %rd6046, %rd6022;
	and.b64  	%rd6088, %rd6070, %rd6087;
	xor.b64  	%rd6089, %rd6088, %rd6022;
	add.s64 	%rd6090, %rd5998, %rd5920;
	add.s64 	%rd6091, %rd6090, %rd41;
	add.s64 	%rd6092, %rd6091, %rd6089;
	add.s64 	%rd6093, %rd6092, %rd6086;
	add.s64 	%rd6094, %rd6093, %rd6009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10564,%dummy}, %rd6081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10565}, %rd6081;
	}
	shf.r.wrap.b32 	%r10566, %r10565, %r10564, 28;
	shf.r.wrap.b32 	%r10567, %r10564, %r10565, 28;
	mov.b64 	%rd6095, {%r10567, %r10566};
	shf.l.wrap.b32 	%r10568, %r10564, %r10565, 30;
	shf.l.wrap.b32 	%r10569, %r10565, %r10564, 30;
	mov.b64 	%rd6096, {%r10569, %r10568};
	xor.b64  	%rd6097, %rd6096, %rd6095;
	shf.l.wrap.b32 	%r10570, %r10564, %r10565, 25;
	shf.l.wrap.b32 	%r10571, %r10565, %r10564, 25;
	mov.b64 	%rd6098, {%r10571, %r10570};
	xor.b64  	%rd6099, %rd6097, %rd6098;
	xor.b64  	%rd6100, %rd6081, %rd6033;
	xor.b64  	%rd6101, %rd6081, %rd6057;
	and.b64  	%rd6102, %rd6101, %rd6100;
	xor.b64  	%rd6103, %rd6102, %rd6081;
	add.s64 	%rd6104, %rd6093, %rd6103;
	add.s64 	%rd6105, %rd6104, %rd6099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10572,%dummy}, %rd6094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10573}, %rd6094;
	}
	shf.r.wrap.b32 	%r10574, %r10573, %r10572, 14;
	shf.r.wrap.b32 	%r10575, %r10572, %r10573, 14;
	mov.b64 	%rd6106, {%r10575, %r10574};
	shf.r.wrap.b32 	%r10576, %r10573, %r10572, 18;
	shf.r.wrap.b32 	%r10577, %r10572, %r10573, 18;
	mov.b64 	%rd6107, {%r10577, %r10576};
	xor.b64  	%rd6108, %rd6107, %rd6106;
	shf.l.wrap.b32 	%r10578, %r10572, %r10573, 23;
	shf.l.wrap.b32 	%r10579, %r10573, %r10572, 23;
	mov.b64 	%rd6109, {%r10579, %r10578};
	xor.b64  	%rd6110, %rd6108, %rd6109;
	xor.b64  	%rd6111, %rd6070, %rd6046;
	and.b64  	%rd6112, %rd6094, %rd6111;
	xor.b64  	%rd6113, %rd6112, %rd6046;
	add.s64 	%rd6114, %rd6022, %rd5921;
	add.s64 	%rd6115, %rd6114, %rd42;
	add.s64 	%rd6116, %rd6115, %rd6113;
	add.s64 	%rd6117, %rd6116, %rd6110;
	add.s64 	%rd6118, %rd6117, %rd6033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10580,%dummy}, %rd6105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10581}, %rd6105;
	}
	shf.r.wrap.b32 	%r10582, %r10581, %r10580, 28;
	shf.r.wrap.b32 	%r10583, %r10580, %r10581, 28;
	mov.b64 	%rd6119, {%r10583, %r10582};
	shf.l.wrap.b32 	%r10584, %r10580, %r10581, 30;
	shf.l.wrap.b32 	%r10585, %r10581, %r10580, 30;
	mov.b64 	%rd6120, {%r10585, %r10584};
	xor.b64  	%rd6121, %rd6120, %rd6119;
	shf.l.wrap.b32 	%r10586, %r10580, %r10581, 25;
	shf.l.wrap.b32 	%r10587, %r10581, %r10580, 25;
	mov.b64 	%rd6122, {%r10587, %r10586};
	xor.b64  	%rd6123, %rd6121, %rd6122;
	xor.b64  	%rd6124, %rd6105, %rd6057;
	xor.b64  	%rd6125, %rd6105, %rd6081;
	and.b64  	%rd6126, %rd6125, %rd6124;
	xor.b64  	%rd6127, %rd6126, %rd6105;
	add.s64 	%rd6128, %rd6117, %rd6127;
	add.s64 	%rd6129, %rd6128, %rd6123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10588,%dummy}, %rd6118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10589}, %rd6118;
	}
	shf.r.wrap.b32 	%r10590, %r10589, %r10588, 14;
	shf.r.wrap.b32 	%r10591, %r10588, %r10589, 14;
	mov.b64 	%rd6130, {%r10591, %r10590};
	shf.r.wrap.b32 	%r10592, %r10589, %r10588, 18;
	shf.r.wrap.b32 	%r10593, %r10588, %r10589, 18;
	mov.b64 	%rd6131, {%r10593, %r10592};
	xor.b64  	%rd6132, %rd6131, %rd6130;
	shf.l.wrap.b32 	%r10594, %r10588, %r10589, 23;
	shf.l.wrap.b32 	%r10595, %r10589, %r10588, 23;
	mov.b64 	%rd6133, {%r10595, %r10594};
	xor.b64  	%rd6134, %rd6132, %rd6133;
	xor.b64  	%rd6135, %rd6094, %rd6070;
	and.b64  	%rd6136, %rd6118, %rd6135;
	xor.b64  	%rd6137, %rd6136, %rd6070;
	add.s64 	%rd6138, %rd6046, %rd5922;
	add.s64 	%rd6139, %rd6138, %rd43;
	add.s64 	%rd6140, %rd6139, %rd6137;
	add.s64 	%rd6141, %rd6140, %rd6134;
	add.s64 	%rd6142, %rd6141, %rd6057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10596,%dummy}, %rd6129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10597}, %rd6129;
	}
	shf.r.wrap.b32 	%r10598, %r10597, %r10596, 28;
	shf.r.wrap.b32 	%r10599, %r10596, %r10597, 28;
	mov.b64 	%rd6143, {%r10599, %r10598};
	shf.l.wrap.b32 	%r10600, %r10596, %r10597, 30;
	shf.l.wrap.b32 	%r10601, %r10597, %r10596, 30;
	mov.b64 	%rd6144, {%r10601, %r10600};
	xor.b64  	%rd6145, %rd6144, %rd6143;
	shf.l.wrap.b32 	%r10602, %r10596, %r10597, 25;
	shf.l.wrap.b32 	%r10603, %r10597, %r10596, 25;
	mov.b64 	%rd6146, {%r10603, %r10602};
	xor.b64  	%rd6147, %rd6145, %rd6146;
	xor.b64  	%rd6148, %rd6129, %rd6081;
	xor.b64  	%rd6149, %rd6129, %rd6105;
	and.b64  	%rd6150, %rd6149, %rd6148;
	xor.b64  	%rd6151, %rd6150, %rd6129;
	add.s64 	%rd6152, %rd6141, %rd6151;
	add.s64 	%rd6153, %rd6152, %rd6147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10604,%dummy}, %rd6142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10605}, %rd6142;
	}
	shf.r.wrap.b32 	%r10606, %r10605, %r10604, 14;
	shf.r.wrap.b32 	%r10607, %r10604, %r10605, 14;
	mov.b64 	%rd6154, {%r10607, %r10606};
	shf.r.wrap.b32 	%r10608, %r10605, %r10604, 18;
	shf.r.wrap.b32 	%r10609, %r10604, %r10605, 18;
	mov.b64 	%rd6155, {%r10609, %r10608};
	xor.b64  	%rd6156, %rd6155, %rd6154;
	shf.l.wrap.b32 	%r10610, %r10604, %r10605, 23;
	shf.l.wrap.b32 	%r10611, %r10605, %r10604, 23;
	mov.b64 	%rd6157, {%r10611, %r10610};
	xor.b64  	%rd6158, %rd6156, %rd6157;
	xor.b64  	%rd6159, %rd6118, %rd6094;
	and.b64  	%rd6160, %rd6142, %rd6159;
	xor.b64  	%rd6161, %rd6160, %rd6094;
	add.s64 	%rd6162, %rd6070, %rd5923;
	add.s64 	%rd6163, %rd6162, %rd44;
	add.s64 	%rd6164, %rd6163, %rd6161;
	add.s64 	%rd6165, %rd6164, %rd6158;
	add.s64 	%rd6166, %rd6165, %rd6081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10612,%dummy}, %rd6153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10613}, %rd6153;
	}
	shf.r.wrap.b32 	%r10614, %r10613, %r10612, 28;
	shf.r.wrap.b32 	%r10615, %r10612, %r10613, 28;
	mov.b64 	%rd6167, {%r10615, %r10614};
	shf.l.wrap.b32 	%r10616, %r10612, %r10613, 30;
	shf.l.wrap.b32 	%r10617, %r10613, %r10612, 30;
	mov.b64 	%rd6168, {%r10617, %r10616};
	xor.b64  	%rd6169, %rd6168, %rd6167;
	shf.l.wrap.b32 	%r10618, %r10612, %r10613, 25;
	shf.l.wrap.b32 	%r10619, %r10613, %r10612, 25;
	mov.b64 	%rd6170, {%r10619, %r10618};
	xor.b64  	%rd6171, %rd6169, %rd6170;
	xor.b64  	%rd6172, %rd6153, %rd6105;
	xor.b64  	%rd6173, %rd6153, %rd6129;
	and.b64  	%rd6174, %rd6173, %rd6172;
	xor.b64  	%rd6175, %rd6174, %rd6153;
	add.s64 	%rd6176, %rd6165, %rd6175;
	add.s64 	%rd6177, %rd6176, %rd6171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10620,%dummy}, %rd6166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10621}, %rd6166;
	}
	shf.r.wrap.b32 	%r10622, %r10621, %r10620, 14;
	shf.r.wrap.b32 	%r10623, %r10620, %r10621, 14;
	mov.b64 	%rd6178, {%r10623, %r10622};
	shf.r.wrap.b32 	%r10624, %r10621, %r10620, 18;
	shf.r.wrap.b32 	%r10625, %r10620, %r10621, 18;
	mov.b64 	%rd6179, {%r10625, %r10624};
	xor.b64  	%rd6180, %rd6179, %rd6178;
	shf.l.wrap.b32 	%r10626, %r10620, %r10621, 23;
	shf.l.wrap.b32 	%r10627, %r10621, %r10620, 23;
	mov.b64 	%rd6181, {%r10627, %r10626};
	xor.b64  	%rd6182, %rd6180, %rd6181;
	xor.b64  	%rd6183, %rd6142, %rd6118;
	and.b64  	%rd6184, %rd6166, %rd6183;
	xor.b64  	%rd6185, %rd6184, %rd6118;
	add.s64 	%rd6186, %rd6094, %rd5924;
	add.s64 	%rd6187, %rd6186, %rd45;
	add.s64 	%rd6188, %rd6187, %rd6185;
	add.s64 	%rd6189, %rd6188, %rd6182;
	add.s64 	%rd6190, %rd6189, %rd6105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10628,%dummy}, %rd6177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10629}, %rd6177;
	}
	shf.r.wrap.b32 	%r10630, %r10629, %r10628, 28;
	shf.r.wrap.b32 	%r10631, %r10628, %r10629, 28;
	mov.b64 	%rd6191, {%r10631, %r10630};
	shf.l.wrap.b32 	%r10632, %r10628, %r10629, 30;
	shf.l.wrap.b32 	%r10633, %r10629, %r10628, 30;
	mov.b64 	%rd6192, {%r10633, %r10632};
	xor.b64  	%rd6193, %rd6192, %rd6191;
	shf.l.wrap.b32 	%r10634, %r10628, %r10629, 25;
	shf.l.wrap.b32 	%r10635, %r10629, %r10628, 25;
	mov.b64 	%rd6194, {%r10635, %r10634};
	xor.b64  	%rd6195, %rd6193, %rd6194;
	xor.b64  	%rd6196, %rd6177, %rd6129;
	xor.b64  	%rd6197, %rd6177, %rd6153;
	and.b64  	%rd6198, %rd6197, %rd6196;
	xor.b64  	%rd6199, %rd6198, %rd6177;
	add.s64 	%rd6200, %rd6189, %rd6199;
	add.s64 	%rd6201, %rd6200, %rd6195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10636,%dummy}, %rd6190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10637}, %rd6190;
	}
	shf.r.wrap.b32 	%r10638, %r10637, %r10636, 14;
	shf.r.wrap.b32 	%r10639, %r10636, %r10637, 14;
	mov.b64 	%rd6202, {%r10639, %r10638};
	shf.r.wrap.b32 	%r10640, %r10637, %r10636, 18;
	shf.r.wrap.b32 	%r10641, %r10636, %r10637, 18;
	mov.b64 	%rd6203, {%r10641, %r10640};
	xor.b64  	%rd6204, %rd6203, %rd6202;
	shf.l.wrap.b32 	%r10642, %r10636, %r10637, 23;
	shf.l.wrap.b32 	%r10643, %r10637, %r10636, 23;
	mov.b64 	%rd6205, {%r10643, %r10642};
	xor.b64  	%rd6206, %rd6204, %rd6205;
	xor.b64  	%rd6207, %rd6166, %rd6142;
	and.b64  	%rd6208, %rd6190, %rd6207;
	xor.b64  	%rd6209, %rd6208, %rd6142;
	add.s64 	%rd6210, %rd6118, %rd5925;
	add.s64 	%rd6211, %rd6210, %rd46;
	add.s64 	%rd6212, %rd6211, %rd6209;
	add.s64 	%rd6213, %rd6212, %rd6206;
	add.s64 	%rd6214, %rd6213, %rd6129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10644,%dummy}, %rd6201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10645}, %rd6201;
	}
	shf.r.wrap.b32 	%r10646, %r10645, %r10644, 28;
	shf.r.wrap.b32 	%r10647, %r10644, %r10645, 28;
	mov.b64 	%rd6215, {%r10647, %r10646};
	shf.l.wrap.b32 	%r10648, %r10644, %r10645, 30;
	shf.l.wrap.b32 	%r10649, %r10645, %r10644, 30;
	mov.b64 	%rd6216, {%r10649, %r10648};
	xor.b64  	%rd6217, %rd6216, %rd6215;
	shf.l.wrap.b32 	%r10650, %r10644, %r10645, 25;
	shf.l.wrap.b32 	%r10651, %r10645, %r10644, 25;
	mov.b64 	%rd6218, {%r10651, %r10650};
	xor.b64  	%rd6219, %rd6217, %rd6218;
	xor.b64  	%rd6220, %rd6201, %rd6153;
	xor.b64  	%rd6221, %rd6201, %rd6177;
	and.b64  	%rd6222, %rd6221, %rd6220;
	xor.b64  	%rd6223, %rd6222, %rd6201;
	add.s64 	%rd6224, %rd6213, %rd6223;
	add.s64 	%rd6225, %rd6224, %rd6219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10652,%dummy}, %rd6214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10653}, %rd6214;
	}
	shf.r.wrap.b32 	%r10654, %r10653, %r10652, 14;
	shf.r.wrap.b32 	%r10655, %r10652, %r10653, 14;
	mov.b64 	%rd6226, {%r10655, %r10654};
	shf.r.wrap.b32 	%r10656, %r10653, %r10652, 18;
	shf.r.wrap.b32 	%r10657, %r10652, %r10653, 18;
	mov.b64 	%rd6227, {%r10657, %r10656};
	xor.b64  	%rd6228, %rd6227, %rd6226;
	shf.l.wrap.b32 	%r10658, %r10652, %r10653, 23;
	shf.l.wrap.b32 	%r10659, %r10653, %r10652, 23;
	mov.b64 	%rd6229, {%r10659, %r10658};
	xor.b64  	%rd6230, %rd6228, %rd6229;
	xor.b64  	%rd6231, %rd6190, %rd6166;
	and.b64  	%rd6232, %rd6214, %rd6231;
	xor.b64  	%rd6233, %rd6232, %rd6166;
	add.s64 	%rd6234, %rd6142, %rd5926;
	add.s64 	%rd6235, %rd6234, %rd47;
	add.s64 	%rd6236, %rd6235, %rd6233;
	add.s64 	%rd6237, %rd6236, %rd6230;
	add.s64 	%rd6238, %rd6237, %rd6153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10660,%dummy}, %rd6225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10661}, %rd6225;
	}
	shf.r.wrap.b32 	%r10662, %r10661, %r10660, 28;
	shf.r.wrap.b32 	%r10663, %r10660, %r10661, 28;
	mov.b64 	%rd6239, {%r10663, %r10662};
	shf.l.wrap.b32 	%r10664, %r10660, %r10661, 30;
	shf.l.wrap.b32 	%r10665, %r10661, %r10660, 30;
	mov.b64 	%rd6240, {%r10665, %r10664};
	xor.b64  	%rd6241, %rd6240, %rd6239;
	shf.l.wrap.b32 	%r10666, %r10660, %r10661, 25;
	shf.l.wrap.b32 	%r10667, %r10661, %r10660, 25;
	mov.b64 	%rd6242, {%r10667, %r10666};
	xor.b64  	%rd6243, %rd6241, %rd6242;
	xor.b64  	%rd6244, %rd6225, %rd6177;
	xor.b64  	%rd6245, %rd6225, %rd6201;
	and.b64  	%rd6246, %rd6245, %rd6244;
	xor.b64  	%rd6247, %rd6246, %rd6225;
	add.s64 	%rd6248, %rd6237, %rd6247;
	add.s64 	%rd6249, %rd6248, %rd6243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10668,%dummy}, %rd6238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10669}, %rd6238;
	}
	shf.r.wrap.b32 	%r10670, %r10669, %r10668, 14;
	shf.r.wrap.b32 	%r10671, %r10668, %r10669, 14;
	mov.b64 	%rd6250, {%r10671, %r10670};
	shf.r.wrap.b32 	%r10672, %r10669, %r10668, 18;
	shf.r.wrap.b32 	%r10673, %r10668, %r10669, 18;
	mov.b64 	%rd6251, {%r10673, %r10672};
	xor.b64  	%rd6252, %rd6251, %rd6250;
	shf.l.wrap.b32 	%r10674, %r10668, %r10669, 23;
	shf.l.wrap.b32 	%r10675, %r10669, %r10668, 23;
	mov.b64 	%rd6253, {%r10675, %r10674};
	xor.b64  	%rd6254, %rd6252, %rd6253;
	xor.b64  	%rd6255, %rd6214, %rd6190;
	and.b64  	%rd6256, %rd6238, %rd6255;
	xor.b64  	%rd6257, %rd6256, %rd6190;
	add.s64 	%rd6258, %rd6166, %rd5927;
	add.s64 	%rd6259, %rd6258, %rd48;
	add.s64 	%rd6260, %rd6259, %rd6257;
	add.s64 	%rd6261, %rd6260, %rd6254;
	add.s64 	%rd6262, %rd6261, %rd6177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10676,%dummy}, %rd6249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10677}, %rd6249;
	}
	shf.r.wrap.b32 	%r10678, %r10677, %r10676, 28;
	shf.r.wrap.b32 	%r10679, %r10676, %r10677, 28;
	mov.b64 	%rd6263, {%r10679, %r10678};
	shf.l.wrap.b32 	%r10680, %r10676, %r10677, 30;
	shf.l.wrap.b32 	%r10681, %r10677, %r10676, 30;
	mov.b64 	%rd6264, {%r10681, %r10680};
	xor.b64  	%rd6265, %rd6264, %rd6263;
	shf.l.wrap.b32 	%r10682, %r10676, %r10677, 25;
	shf.l.wrap.b32 	%r10683, %r10677, %r10676, 25;
	mov.b64 	%rd6266, {%r10683, %r10682};
	xor.b64  	%rd6267, %rd6265, %rd6266;
	xor.b64  	%rd6268, %rd6249, %rd6201;
	xor.b64  	%rd6269, %rd6249, %rd6225;
	and.b64  	%rd6270, %rd6269, %rd6268;
	xor.b64  	%rd6271, %rd6270, %rd6249;
	add.s64 	%rd6272, %rd6261, %rd6271;
	add.s64 	%rd6273, %rd6272, %rd6267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10684,%dummy}, %rd6262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10685}, %rd6262;
	}
	shf.r.wrap.b32 	%r10686, %r10685, %r10684, 14;
	shf.r.wrap.b32 	%r10687, %r10684, %r10685, 14;
	mov.b64 	%rd6274, {%r10687, %r10686};
	shf.r.wrap.b32 	%r10688, %r10685, %r10684, 18;
	shf.r.wrap.b32 	%r10689, %r10684, %r10685, 18;
	mov.b64 	%rd6275, {%r10689, %r10688};
	xor.b64  	%rd6276, %rd6275, %rd6274;
	shf.l.wrap.b32 	%r10690, %r10684, %r10685, 23;
	shf.l.wrap.b32 	%r10691, %r10685, %r10684, 23;
	mov.b64 	%rd6277, {%r10691, %r10690};
	xor.b64  	%rd6278, %rd6276, %rd6277;
	xor.b64  	%rd6279, %rd6238, %rd6214;
	and.b64  	%rd6280, %rd6262, %rd6279;
	xor.b64  	%rd6281, %rd6280, %rd6214;
	add.s64 	%rd6282, %rd6190, %rd5928;
	add.s64 	%rd6283, %rd6282, %rd49;
	add.s64 	%rd6284, %rd6283, %rd6281;
	add.s64 	%rd6285, %rd6284, %rd6278;
	add.s64 	%rd6286, %rd6285, %rd6201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10692,%dummy}, %rd6273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10693}, %rd6273;
	}
	shf.r.wrap.b32 	%r10694, %r10693, %r10692, 28;
	shf.r.wrap.b32 	%r10695, %r10692, %r10693, 28;
	mov.b64 	%rd6287, {%r10695, %r10694};
	shf.l.wrap.b32 	%r10696, %r10692, %r10693, 30;
	shf.l.wrap.b32 	%r10697, %r10693, %r10692, 30;
	mov.b64 	%rd6288, {%r10697, %r10696};
	xor.b64  	%rd6289, %rd6288, %rd6287;
	shf.l.wrap.b32 	%r10698, %r10692, %r10693, 25;
	shf.l.wrap.b32 	%r10699, %r10693, %r10692, 25;
	mov.b64 	%rd6290, {%r10699, %r10698};
	xor.b64  	%rd6291, %rd6289, %rd6290;
	xor.b64  	%rd6292, %rd6273, %rd6225;
	xor.b64  	%rd6293, %rd6273, %rd6249;
	and.b64  	%rd6294, %rd6293, %rd6292;
	xor.b64  	%rd6295, %rd6294, %rd6273;
	add.s64 	%rd6296, %rd6285, %rd6295;
	add.s64 	%rd6297, %rd6296, %rd6291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10700,%dummy}, %rd6286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10701}, %rd6286;
	}
	shf.r.wrap.b32 	%r10702, %r10701, %r10700, 14;
	shf.r.wrap.b32 	%r10703, %r10700, %r10701, 14;
	mov.b64 	%rd6298, {%r10703, %r10702};
	shf.r.wrap.b32 	%r10704, %r10701, %r10700, 18;
	shf.r.wrap.b32 	%r10705, %r10700, %r10701, 18;
	mov.b64 	%rd6299, {%r10705, %r10704};
	xor.b64  	%rd6300, %rd6299, %rd6298;
	shf.l.wrap.b32 	%r10706, %r10700, %r10701, 23;
	shf.l.wrap.b32 	%r10707, %r10701, %r10700, 23;
	mov.b64 	%rd6301, {%r10707, %r10706};
	xor.b64  	%rd6302, %rd6300, %rd6301;
	xor.b64  	%rd6303, %rd6262, %rd6238;
	and.b64  	%rd6304, %rd6286, %rd6303;
	xor.b64  	%rd6305, %rd6304, %rd6238;
	add.s64 	%rd6306, %rd6214, %rd5929;
	add.s64 	%rd6307, %rd6306, %rd50;
	add.s64 	%rd6308, %rd6307, %rd6305;
	add.s64 	%rd6309, %rd6308, %rd6302;
	add.s64 	%rd6310, %rd6309, %rd6225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10708,%dummy}, %rd6297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10709}, %rd6297;
	}
	shf.r.wrap.b32 	%r10710, %r10709, %r10708, 28;
	shf.r.wrap.b32 	%r10711, %r10708, %r10709, 28;
	mov.b64 	%rd6311, {%r10711, %r10710};
	shf.l.wrap.b32 	%r10712, %r10708, %r10709, 30;
	shf.l.wrap.b32 	%r10713, %r10709, %r10708, 30;
	mov.b64 	%rd6312, {%r10713, %r10712};
	xor.b64  	%rd6313, %rd6312, %rd6311;
	shf.l.wrap.b32 	%r10714, %r10708, %r10709, 25;
	shf.l.wrap.b32 	%r10715, %r10709, %r10708, 25;
	mov.b64 	%rd6314, {%r10715, %r10714};
	xor.b64  	%rd6315, %rd6313, %rd6314;
	xor.b64  	%rd6316, %rd6297, %rd6249;
	xor.b64  	%rd6317, %rd6297, %rd6273;
	and.b64  	%rd6318, %rd6317, %rd6316;
	xor.b64  	%rd6319, %rd6318, %rd6297;
	add.s64 	%rd6320, %rd6309, %rd6319;
	add.s64 	%rd6321, %rd6320, %rd6315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10716,%dummy}, %rd5928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10717}, %rd5928;
	}
	shf.r.wrap.b32 	%r10718, %r10717, %r10716, 19;
	shf.r.wrap.b32 	%r10719, %r10716, %r10717, 19;
	mov.b64 	%rd6322, {%r10719, %r10718};
	shf.l.wrap.b32 	%r10720, %r10716, %r10717, 3;
	shf.l.wrap.b32 	%r10721, %r10717, %r10716, 3;
	mov.b64 	%rd6323, {%r10721, %r10720};
	shr.u64 	%rd6324, %rd5928, 6;
	xor.b64  	%rd6325, %rd6322, %rd6324;
	xor.b64  	%rd6326, %rd6325, %rd6323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10722,%dummy}, %rd5915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10723}, %rd5915;
	}
	shf.r.wrap.b32 	%r10724, %r10723, %r10722, 1;
	shf.r.wrap.b32 	%r10725, %r10722, %r10723, 1;
	mov.b64 	%rd6327, {%r10725, %r10724};
	shf.r.wrap.b32 	%r10726, %r10723, %r10722, 8;
	shf.r.wrap.b32 	%r10727, %r10722, %r10723, 8;
	mov.b64 	%rd6328, {%r10727, %r10726};
	shr.u64 	%rd6329, %rd5915, 7;
	xor.b64  	%rd6330, %rd6327, %rd6329;
	xor.b64  	%rd6331, %rd6330, %rd6328;
	add.s64 	%rd6332, %rd5923, %rd5914;
	add.s64 	%rd6333, %rd6332, %rd6326;
	add.s64 	%rd6334, %rd6333, %rd6331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10728,%dummy}, %rd5929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10729}, %rd5929;
	}
	shf.r.wrap.b32 	%r10730, %r10729, %r10728, 19;
	shf.r.wrap.b32 	%r10731, %r10728, %r10729, 19;
	mov.b64 	%rd6335, {%r10731, %r10730};
	shf.l.wrap.b32 	%r10732, %r10728, %r10729, 3;
	shf.l.wrap.b32 	%r10733, %r10729, %r10728, 3;
	mov.b64 	%rd6336, {%r10733, %r10732};
	shr.u64 	%rd6337, %rd5929, 6;
	xor.b64  	%rd6338, %rd6335, %rd6337;
	xor.b64  	%rd6339, %rd6338, %rd6336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10734,%dummy}, %rd5916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10735}, %rd5916;
	}
	shf.r.wrap.b32 	%r10736, %r10735, %r10734, 1;
	shf.r.wrap.b32 	%r10737, %r10734, %r10735, 1;
	mov.b64 	%rd6340, {%r10737, %r10736};
	shf.r.wrap.b32 	%r10738, %r10735, %r10734, 8;
	shf.r.wrap.b32 	%r10739, %r10734, %r10735, 8;
	mov.b64 	%rd6341, {%r10739, %r10738};
	shr.u64 	%rd6342, %rd5916, 7;
	xor.b64  	%rd6343, %rd6340, %rd6342;
	xor.b64  	%rd6344, %rd6343, %rd6341;
	add.s64 	%rd6345, %rd5924, %rd5915;
	add.s64 	%rd6346, %rd6345, %rd6339;
	add.s64 	%rd6347, %rd6346, %rd6344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10740,%dummy}, %rd6334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10741}, %rd6334;
	}
	shf.r.wrap.b32 	%r10742, %r10741, %r10740, 19;
	shf.r.wrap.b32 	%r10743, %r10740, %r10741, 19;
	mov.b64 	%rd6348, {%r10743, %r10742};
	shf.l.wrap.b32 	%r10744, %r10740, %r10741, 3;
	shf.l.wrap.b32 	%r10745, %r10741, %r10740, 3;
	mov.b64 	%rd6349, {%r10745, %r10744};
	shr.u64 	%rd6350, %rd6334, 6;
	xor.b64  	%rd6351, %rd6348, %rd6350;
	xor.b64  	%rd6352, %rd6351, %rd6349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10746,%dummy}, %rd5917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10747}, %rd5917;
	}
	shf.r.wrap.b32 	%r10748, %r10747, %r10746, 1;
	shf.r.wrap.b32 	%r10749, %r10746, %r10747, 1;
	mov.b64 	%rd6353, {%r10749, %r10748};
	shf.r.wrap.b32 	%r10750, %r10747, %r10746, 8;
	shf.r.wrap.b32 	%r10751, %r10746, %r10747, 8;
	mov.b64 	%rd6354, {%r10751, %r10750};
	shr.u64 	%rd6355, %rd5917, 7;
	xor.b64  	%rd6356, %rd6353, %rd6355;
	xor.b64  	%rd6357, %rd6356, %rd6354;
	add.s64 	%rd6358, %rd5925, %rd5916;
	add.s64 	%rd6359, %rd6358, %rd6352;
	add.s64 	%rd6360, %rd6359, %rd6357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10752,%dummy}, %rd6347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10753}, %rd6347;
	}
	shf.r.wrap.b32 	%r10754, %r10753, %r10752, 19;
	shf.r.wrap.b32 	%r10755, %r10752, %r10753, 19;
	mov.b64 	%rd6361, {%r10755, %r10754};
	shf.l.wrap.b32 	%r10756, %r10752, %r10753, 3;
	shf.l.wrap.b32 	%r10757, %r10753, %r10752, 3;
	mov.b64 	%rd6362, {%r10757, %r10756};
	shr.u64 	%rd6363, %rd6347, 6;
	xor.b64  	%rd6364, %rd6361, %rd6363;
	xor.b64  	%rd6365, %rd6364, %rd6362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10758,%dummy}, %rd5918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10759}, %rd5918;
	}
	shf.r.wrap.b32 	%r10760, %r10759, %r10758, 1;
	shf.r.wrap.b32 	%r10761, %r10758, %r10759, 1;
	mov.b64 	%rd6366, {%r10761, %r10760};
	shf.r.wrap.b32 	%r10762, %r10759, %r10758, 8;
	shf.r.wrap.b32 	%r10763, %r10758, %r10759, 8;
	mov.b64 	%rd6367, {%r10763, %r10762};
	shr.u64 	%rd6368, %rd5918, 7;
	xor.b64  	%rd6369, %rd6366, %rd6368;
	xor.b64  	%rd6370, %rd6369, %rd6367;
	add.s64 	%rd6371, %rd5926, %rd5917;
	add.s64 	%rd6372, %rd6371, %rd6365;
	add.s64 	%rd6373, %rd6372, %rd6370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10764,%dummy}, %rd6360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10765}, %rd6360;
	}
	shf.r.wrap.b32 	%r10766, %r10765, %r10764, 19;
	shf.r.wrap.b32 	%r10767, %r10764, %r10765, 19;
	mov.b64 	%rd6374, {%r10767, %r10766};
	shf.l.wrap.b32 	%r10768, %r10764, %r10765, 3;
	shf.l.wrap.b32 	%r10769, %r10765, %r10764, 3;
	mov.b64 	%rd6375, {%r10769, %r10768};
	shr.u64 	%rd6376, %rd6360, 6;
	xor.b64  	%rd6377, %rd6374, %rd6376;
	xor.b64  	%rd6378, %rd6377, %rd6375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10770,%dummy}, %rd5919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10771}, %rd5919;
	}
	shf.r.wrap.b32 	%r10772, %r10771, %r10770, 1;
	shf.r.wrap.b32 	%r10773, %r10770, %r10771, 1;
	mov.b64 	%rd6379, {%r10773, %r10772};
	shf.r.wrap.b32 	%r10774, %r10771, %r10770, 8;
	shf.r.wrap.b32 	%r10775, %r10770, %r10771, 8;
	mov.b64 	%rd6380, {%r10775, %r10774};
	shr.u64 	%rd6381, %rd5919, 7;
	xor.b64  	%rd6382, %rd6379, %rd6381;
	xor.b64  	%rd6383, %rd6382, %rd6380;
	add.s64 	%rd6384, %rd5927, %rd5918;
	add.s64 	%rd6385, %rd6384, %rd6378;
	add.s64 	%rd6386, %rd6385, %rd6383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10776,%dummy}, %rd6373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10777}, %rd6373;
	}
	shf.r.wrap.b32 	%r10778, %r10777, %r10776, 19;
	shf.r.wrap.b32 	%r10779, %r10776, %r10777, 19;
	mov.b64 	%rd6387, {%r10779, %r10778};
	shf.l.wrap.b32 	%r10780, %r10776, %r10777, 3;
	shf.l.wrap.b32 	%r10781, %r10777, %r10776, 3;
	mov.b64 	%rd6388, {%r10781, %r10780};
	shr.u64 	%rd6389, %rd6373, 6;
	xor.b64  	%rd6390, %rd6387, %rd6389;
	xor.b64  	%rd6391, %rd6390, %rd6388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10782,%dummy}, %rd5920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10783}, %rd5920;
	}
	shf.r.wrap.b32 	%r10784, %r10783, %r10782, 1;
	shf.r.wrap.b32 	%r10785, %r10782, %r10783, 1;
	mov.b64 	%rd6392, {%r10785, %r10784};
	shf.r.wrap.b32 	%r10786, %r10783, %r10782, 8;
	shf.r.wrap.b32 	%r10787, %r10782, %r10783, 8;
	mov.b64 	%rd6393, {%r10787, %r10786};
	shr.u64 	%rd6394, %rd5920, 7;
	xor.b64  	%rd6395, %rd6392, %rd6394;
	xor.b64  	%rd6396, %rd6395, %rd6393;
	add.s64 	%rd6397, %rd5928, %rd5919;
	add.s64 	%rd6398, %rd6397, %rd6391;
	add.s64 	%rd6399, %rd6398, %rd6396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10788,%dummy}, %rd6386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10789}, %rd6386;
	}
	shf.r.wrap.b32 	%r10790, %r10789, %r10788, 19;
	shf.r.wrap.b32 	%r10791, %r10788, %r10789, 19;
	mov.b64 	%rd6400, {%r10791, %r10790};
	shf.l.wrap.b32 	%r10792, %r10788, %r10789, 3;
	shf.l.wrap.b32 	%r10793, %r10789, %r10788, 3;
	mov.b64 	%rd6401, {%r10793, %r10792};
	shr.u64 	%rd6402, %rd6386, 6;
	xor.b64  	%rd6403, %rd6400, %rd6402;
	xor.b64  	%rd6404, %rd6403, %rd6401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10794,%dummy}, %rd5921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10795}, %rd5921;
	}
	shf.r.wrap.b32 	%r10796, %r10795, %r10794, 1;
	shf.r.wrap.b32 	%r10797, %r10794, %r10795, 1;
	mov.b64 	%rd6405, {%r10797, %r10796};
	shf.r.wrap.b32 	%r10798, %r10795, %r10794, 8;
	shf.r.wrap.b32 	%r10799, %r10794, %r10795, 8;
	mov.b64 	%rd6406, {%r10799, %r10798};
	shr.u64 	%rd6407, %rd5921, 7;
	xor.b64  	%rd6408, %rd6405, %rd6407;
	xor.b64  	%rd6409, %rd6408, %rd6406;
	add.s64 	%rd6410, %rd5929, %rd5920;
	add.s64 	%rd6411, %rd6410, %rd6404;
	add.s64 	%rd6412, %rd6411, %rd6409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10800,%dummy}, %rd6399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10801}, %rd6399;
	}
	shf.r.wrap.b32 	%r10802, %r10801, %r10800, 19;
	shf.r.wrap.b32 	%r10803, %r10800, %r10801, 19;
	mov.b64 	%rd6413, {%r10803, %r10802};
	shf.l.wrap.b32 	%r10804, %r10800, %r10801, 3;
	shf.l.wrap.b32 	%r10805, %r10801, %r10800, 3;
	mov.b64 	%rd6414, {%r10805, %r10804};
	shr.u64 	%rd6415, %rd6399, 6;
	xor.b64  	%rd6416, %rd6413, %rd6415;
	xor.b64  	%rd6417, %rd6416, %rd6414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10806,%dummy}, %rd5922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10807}, %rd5922;
	}
	shf.r.wrap.b32 	%r10808, %r10807, %r10806, 1;
	shf.r.wrap.b32 	%r10809, %r10806, %r10807, 1;
	mov.b64 	%rd6418, {%r10809, %r10808};
	shf.r.wrap.b32 	%r10810, %r10807, %r10806, 8;
	shf.r.wrap.b32 	%r10811, %r10806, %r10807, 8;
	mov.b64 	%rd6419, {%r10811, %r10810};
	shr.u64 	%rd6420, %rd5922, 7;
	xor.b64  	%rd6421, %rd6418, %rd6420;
	xor.b64  	%rd6422, %rd6421, %rd6419;
	add.s64 	%rd6423, %rd6334, %rd5921;
	add.s64 	%rd6424, %rd6423, %rd6417;
	add.s64 	%rd6425, %rd6424, %rd6422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10812,%dummy}, %rd6412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10813}, %rd6412;
	}
	shf.r.wrap.b32 	%r10814, %r10813, %r10812, 19;
	shf.r.wrap.b32 	%r10815, %r10812, %r10813, 19;
	mov.b64 	%rd6426, {%r10815, %r10814};
	shf.l.wrap.b32 	%r10816, %r10812, %r10813, 3;
	shf.l.wrap.b32 	%r10817, %r10813, %r10812, 3;
	mov.b64 	%rd6427, {%r10817, %r10816};
	shr.u64 	%rd6428, %rd6412, 6;
	xor.b64  	%rd6429, %rd6426, %rd6428;
	xor.b64  	%rd6430, %rd6429, %rd6427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10818,%dummy}, %rd5923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10819}, %rd5923;
	}
	shf.r.wrap.b32 	%r10820, %r10819, %r10818, 1;
	shf.r.wrap.b32 	%r10821, %r10818, %r10819, 1;
	mov.b64 	%rd6431, {%r10821, %r10820};
	shf.r.wrap.b32 	%r10822, %r10819, %r10818, 8;
	shf.r.wrap.b32 	%r10823, %r10818, %r10819, 8;
	mov.b64 	%rd6432, {%r10823, %r10822};
	shr.u64 	%rd6433, %rd5923, 7;
	xor.b64  	%rd6434, %rd6431, %rd6433;
	xor.b64  	%rd6435, %rd6434, %rd6432;
	add.s64 	%rd6436, %rd6347, %rd5922;
	add.s64 	%rd6437, %rd6436, %rd6430;
	add.s64 	%rd6438, %rd6437, %rd6435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10824,%dummy}, %rd6425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10825}, %rd6425;
	}
	shf.r.wrap.b32 	%r10826, %r10825, %r10824, 19;
	shf.r.wrap.b32 	%r10827, %r10824, %r10825, 19;
	mov.b64 	%rd6439, {%r10827, %r10826};
	shf.l.wrap.b32 	%r10828, %r10824, %r10825, 3;
	shf.l.wrap.b32 	%r10829, %r10825, %r10824, 3;
	mov.b64 	%rd6440, {%r10829, %r10828};
	shr.u64 	%rd6441, %rd6425, 6;
	xor.b64  	%rd6442, %rd6439, %rd6441;
	xor.b64  	%rd6443, %rd6442, %rd6440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10830,%dummy}, %rd5924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10831}, %rd5924;
	}
	shf.r.wrap.b32 	%r10832, %r10831, %r10830, 1;
	shf.r.wrap.b32 	%r10833, %r10830, %r10831, 1;
	mov.b64 	%rd6444, {%r10833, %r10832};
	shf.r.wrap.b32 	%r10834, %r10831, %r10830, 8;
	shf.r.wrap.b32 	%r10835, %r10830, %r10831, 8;
	mov.b64 	%rd6445, {%r10835, %r10834};
	shr.u64 	%rd6446, %rd5924, 7;
	xor.b64  	%rd6447, %rd6444, %rd6446;
	xor.b64  	%rd6448, %rd6447, %rd6445;
	add.s64 	%rd6449, %rd6360, %rd5923;
	add.s64 	%rd6450, %rd6449, %rd6443;
	add.s64 	%rd6451, %rd6450, %rd6448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10836,%dummy}, %rd6438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10837}, %rd6438;
	}
	shf.r.wrap.b32 	%r10838, %r10837, %r10836, 19;
	shf.r.wrap.b32 	%r10839, %r10836, %r10837, 19;
	mov.b64 	%rd6452, {%r10839, %r10838};
	shf.l.wrap.b32 	%r10840, %r10836, %r10837, 3;
	shf.l.wrap.b32 	%r10841, %r10837, %r10836, 3;
	mov.b64 	%rd6453, {%r10841, %r10840};
	shr.u64 	%rd6454, %rd6438, 6;
	xor.b64  	%rd6455, %rd6452, %rd6454;
	xor.b64  	%rd6456, %rd6455, %rd6453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10842,%dummy}, %rd5925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10843}, %rd5925;
	}
	shf.r.wrap.b32 	%r10844, %r10843, %r10842, 1;
	shf.r.wrap.b32 	%r10845, %r10842, %r10843, 1;
	mov.b64 	%rd6457, {%r10845, %r10844};
	shf.r.wrap.b32 	%r10846, %r10843, %r10842, 8;
	shf.r.wrap.b32 	%r10847, %r10842, %r10843, 8;
	mov.b64 	%rd6458, {%r10847, %r10846};
	shr.u64 	%rd6459, %rd5925, 7;
	xor.b64  	%rd6460, %rd6457, %rd6459;
	xor.b64  	%rd6461, %rd6460, %rd6458;
	add.s64 	%rd6462, %rd6373, %rd5924;
	add.s64 	%rd6463, %rd6462, %rd6456;
	add.s64 	%rd6464, %rd6463, %rd6461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10848,%dummy}, %rd6451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10849}, %rd6451;
	}
	shf.r.wrap.b32 	%r10850, %r10849, %r10848, 19;
	shf.r.wrap.b32 	%r10851, %r10848, %r10849, 19;
	mov.b64 	%rd6465, {%r10851, %r10850};
	shf.l.wrap.b32 	%r10852, %r10848, %r10849, 3;
	shf.l.wrap.b32 	%r10853, %r10849, %r10848, 3;
	mov.b64 	%rd6466, {%r10853, %r10852};
	shr.u64 	%rd6467, %rd6451, 6;
	xor.b64  	%rd6468, %rd6465, %rd6467;
	xor.b64  	%rd6469, %rd6468, %rd6466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10854,%dummy}, %rd5926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10855}, %rd5926;
	}
	shf.r.wrap.b32 	%r10856, %r10855, %r10854, 1;
	shf.r.wrap.b32 	%r10857, %r10854, %r10855, 1;
	mov.b64 	%rd6470, {%r10857, %r10856};
	shf.r.wrap.b32 	%r10858, %r10855, %r10854, 8;
	shf.r.wrap.b32 	%r10859, %r10854, %r10855, 8;
	mov.b64 	%rd6471, {%r10859, %r10858};
	shr.u64 	%rd6472, %rd5926, 7;
	xor.b64  	%rd6473, %rd6470, %rd6472;
	xor.b64  	%rd6474, %rd6473, %rd6471;
	add.s64 	%rd6475, %rd6386, %rd5925;
	add.s64 	%rd6476, %rd6475, %rd6469;
	add.s64 	%rd6477, %rd6476, %rd6474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10860,%dummy}, %rd6464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10861}, %rd6464;
	}
	shf.r.wrap.b32 	%r10862, %r10861, %r10860, 19;
	shf.r.wrap.b32 	%r10863, %r10860, %r10861, 19;
	mov.b64 	%rd6478, {%r10863, %r10862};
	shf.l.wrap.b32 	%r10864, %r10860, %r10861, 3;
	shf.l.wrap.b32 	%r10865, %r10861, %r10860, 3;
	mov.b64 	%rd6479, {%r10865, %r10864};
	shr.u64 	%rd6480, %rd6464, 6;
	xor.b64  	%rd6481, %rd6478, %rd6480;
	xor.b64  	%rd6482, %rd6481, %rd6479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10866,%dummy}, %rd5927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10867}, %rd5927;
	}
	shf.r.wrap.b32 	%r10868, %r10867, %r10866, 1;
	shf.r.wrap.b32 	%r10869, %r10866, %r10867, 1;
	mov.b64 	%rd6483, {%r10869, %r10868};
	shf.r.wrap.b32 	%r10870, %r10867, %r10866, 8;
	shf.r.wrap.b32 	%r10871, %r10866, %r10867, 8;
	mov.b64 	%rd6484, {%r10871, %r10870};
	shr.u64 	%rd6485, %rd5927, 7;
	xor.b64  	%rd6486, %rd6483, %rd6485;
	xor.b64  	%rd6487, %rd6486, %rd6484;
	add.s64 	%rd6488, %rd6399, %rd5926;
	add.s64 	%rd6489, %rd6488, %rd6482;
	add.s64 	%rd6490, %rd6489, %rd6487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10872,%dummy}, %rd6477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10873}, %rd6477;
	}
	shf.r.wrap.b32 	%r10874, %r10873, %r10872, 19;
	shf.r.wrap.b32 	%r10875, %r10872, %r10873, 19;
	mov.b64 	%rd6491, {%r10875, %r10874};
	shf.l.wrap.b32 	%r10876, %r10872, %r10873, 3;
	shf.l.wrap.b32 	%r10877, %r10873, %r10872, 3;
	mov.b64 	%rd6492, {%r10877, %r10876};
	shr.u64 	%rd6493, %rd6477, 6;
	xor.b64  	%rd6494, %rd6491, %rd6493;
	xor.b64  	%rd6495, %rd6494, %rd6492;
	shf.r.wrap.b32 	%r10878, %r10717, %r10716, 1;
	shf.r.wrap.b32 	%r10879, %r10716, %r10717, 1;
	mov.b64 	%rd6496, {%r10879, %r10878};
	shf.r.wrap.b32 	%r10880, %r10717, %r10716, 8;
	shf.r.wrap.b32 	%r10881, %r10716, %r10717, 8;
	mov.b64 	%rd6497, {%r10881, %r10880};
	shr.u64 	%rd6498, %rd5928, 7;
	xor.b64  	%rd6499, %rd6496, %rd6498;
	xor.b64  	%rd6500, %rd6499, %rd6497;
	add.s64 	%rd6501, %rd6412, %rd5927;
	add.s64 	%rd6502, %rd6501, %rd6495;
	add.s64 	%rd6503, %rd6502, %rd6500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10882,%dummy}, %rd6490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10883}, %rd6490;
	}
	shf.r.wrap.b32 	%r10884, %r10883, %r10882, 19;
	shf.r.wrap.b32 	%r10885, %r10882, %r10883, 19;
	mov.b64 	%rd6504, {%r10885, %r10884};
	shf.l.wrap.b32 	%r10886, %r10882, %r10883, 3;
	shf.l.wrap.b32 	%r10887, %r10883, %r10882, 3;
	mov.b64 	%rd6505, {%r10887, %r10886};
	shr.u64 	%rd6506, %rd6490, 6;
	xor.b64  	%rd6507, %rd6504, %rd6506;
	xor.b64  	%rd6508, %rd6507, %rd6505;
	shf.r.wrap.b32 	%r10888, %r10729, %r10728, 1;
	shf.r.wrap.b32 	%r10889, %r10728, %r10729, 1;
	mov.b64 	%rd6509, {%r10889, %r10888};
	shf.r.wrap.b32 	%r10890, %r10729, %r10728, 8;
	shf.r.wrap.b32 	%r10891, %r10728, %r10729, 8;
	mov.b64 	%rd6510, {%r10891, %r10890};
	shr.u64 	%rd6511, %rd5929, 7;
	xor.b64  	%rd6512, %rd6509, %rd6511;
	xor.b64  	%rd6513, %rd6512, %rd6510;
	add.s64 	%rd6514, %rd6425, %rd5928;
	add.s64 	%rd6515, %rd6514, %rd6508;
	add.s64 	%rd6516, %rd6515, %rd6513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10892,%dummy}, %rd6503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10893}, %rd6503;
	}
	shf.r.wrap.b32 	%r10894, %r10893, %r10892, 19;
	shf.r.wrap.b32 	%r10895, %r10892, %r10893, 19;
	mov.b64 	%rd6517, {%r10895, %r10894};
	shf.l.wrap.b32 	%r10896, %r10892, %r10893, 3;
	shf.l.wrap.b32 	%r10897, %r10893, %r10892, 3;
	mov.b64 	%rd6518, {%r10897, %r10896};
	shr.u64 	%rd6519, %rd6503, 6;
	xor.b64  	%rd6520, %rd6517, %rd6519;
	xor.b64  	%rd6521, %rd6520, %rd6518;
	shf.r.wrap.b32 	%r10898, %r10741, %r10740, 1;
	shf.r.wrap.b32 	%r10899, %r10740, %r10741, 1;
	mov.b64 	%rd6522, {%r10899, %r10898};
	shf.r.wrap.b32 	%r10900, %r10741, %r10740, 8;
	shf.r.wrap.b32 	%r10901, %r10740, %r10741, 8;
	mov.b64 	%rd6523, {%r10901, %r10900};
	shr.u64 	%rd6524, %rd6334, 7;
	xor.b64  	%rd6525, %rd6522, %rd6524;
	xor.b64  	%rd6526, %rd6525, %rd6523;
	add.s64 	%rd6527, %rd6438, %rd5929;
	add.s64 	%rd6528, %rd6527, %rd6521;
	add.s64 	%rd6529, %rd6528, %rd6526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10902,%dummy}, %rd6310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10903}, %rd6310;
	}
	shf.r.wrap.b32 	%r10904, %r10903, %r10902, 14;
	shf.r.wrap.b32 	%r10905, %r10902, %r10903, 14;
	mov.b64 	%rd6530, {%r10905, %r10904};
	shf.r.wrap.b32 	%r10906, %r10903, %r10902, 18;
	shf.r.wrap.b32 	%r10907, %r10902, %r10903, 18;
	mov.b64 	%rd6531, {%r10907, %r10906};
	xor.b64  	%rd6532, %rd6531, %rd6530;
	shf.l.wrap.b32 	%r10908, %r10902, %r10903, 23;
	shf.l.wrap.b32 	%r10909, %r10903, %r10902, 23;
	mov.b64 	%rd6533, {%r10909, %r10908};
	xor.b64  	%rd6534, %rd6532, %rd6533;
	xor.b64  	%rd6535, %rd6286, %rd6262;
	and.b64  	%rd6536, %rd6535, %rd6310;
	xor.b64  	%rd6537, %rd6536, %rd6262;
	add.s64 	%rd6538, %rd6537, %rd6238;
	add.s64 	%rd6539, %rd6538, %rd6334;
	ld.const.u64 	%rd6540, [k_sha512+128];
	add.s64 	%rd6541, %rd6539, %rd6540;
	add.s64 	%rd6542, %rd6541, %rd6534;
	add.s64 	%rd6543, %rd6542, %rd6249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10910,%dummy}, %rd6321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10911}, %rd6321;
	}
	shf.r.wrap.b32 	%r10912, %r10911, %r10910, 28;
	shf.r.wrap.b32 	%r10913, %r10910, %r10911, 28;
	mov.b64 	%rd6544, {%r10913, %r10912};
	shf.l.wrap.b32 	%r10914, %r10910, %r10911, 30;
	shf.l.wrap.b32 	%r10915, %r10911, %r10910, 30;
	mov.b64 	%rd6545, {%r10915, %r10914};
	xor.b64  	%rd6546, %rd6545, %rd6544;
	shf.l.wrap.b32 	%r10916, %r10910, %r10911, 25;
	shf.l.wrap.b32 	%r10917, %r10911, %r10910, 25;
	mov.b64 	%rd6547, {%r10917, %r10916};
	xor.b64  	%rd6548, %rd6546, %rd6547;
	xor.b64  	%rd6549, %rd6321, %rd6273;
	xor.b64  	%rd6550, %rd6321, %rd6297;
	and.b64  	%rd6551, %rd6550, %rd6549;
	xor.b64  	%rd6552, %rd6551, %rd6321;
	add.s64 	%rd6553, %rd6542, %rd6552;
	add.s64 	%rd6554, %rd6553, %rd6548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10918,%dummy}, %rd6543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10919}, %rd6543;
	}
	shf.r.wrap.b32 	%r10920, %r10919, %r10918, 14;
	shf.r.wrap.b32 	%r10921, %r10918, %r10919, 14;
	mov.b64 	%rd6555, {%r10921, %r10920};
	shf.r.wrap.b32 	%r10922, %r10919, %r10918, 18;
	shf.r.wrap.b32 	%r10923, %r10918, %r10919, 18;
	mov.b64 	%rd6556, {%r10923, %r10922};
	xor.b64  	%rd6557, %rd6556, %rd6555;
	shf.l.wrap.b32 	%r10924, %r10918, %r10919, 23;
	shf.l.wrap.b32 	%r10925, %r10919, %r10918, 23;
	mov.b64 	%rd6558, {%r10925, %r10924};
	xor.b64  	%rd6559, %rd6557, %rd6558;
	xor.b64  	%rd6560, %rd6310, %rd6286;
	and.b64  	%rd6561, %rd6543, %rd6560;
	xor.b64  	%rd6562, %rd6561, %rd6286;
	add.s64 	%rd6563, %rd6347, %rd6262;
	ld.const.u64 	%rd6564, [k_sha512+136];
	add.s64 	%rd6565, %rd6563, %rd6564;
	add.s64 	%rd6566, %rd6565, %rd6562;
	add.s64 	%rd6567, %rd6566, %rd6559;
	add.s64 	%rd6568, %rd6567, %rd6273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10926,%dummy}, %rd6554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10927}, %rd6554;
	}
	shf.r.wrap.b32 	%r10928, %r10927, %r10926, 28;
	shf.r.wrap.b32 	%r10929, %r10926, %r10927, 28;
	mov.b64 	%rd6569, {%r10929, %r10928};
	shf.l.wrap.b32 	%r10930, %r10926, %r10927, 30;
	shf.l.wrap.b32 	%r10931, %r10927, %r10926, 30;
	mov.b64 	%rd6570, {%r10931, %r10930};
	xor.b64  	%rd6571, %rd6570, %rd6569;
	shf.l.wrap.b32 	%r10932, %r10926, %r10927, 25;
	shf.l.wrap.b32 	%r10933, %r10927, %r10926, 25;
	mov.b64 	%rd6572, {%r10933, %r10932};
	xor.b64  	%rd6573, %rd6571, %rd6572;
	xor.b64  	%rd6574, %rd6554, %rd6297;
	xor.b64  	%rd6575, %rd6554, %rd6321;
	and.b64  	%rd6576, %rd6575, %rd6574;
	xor.b64  	%rd6577, %rd6576, %rd6554;
	add.s64 	%rd6578, %rd6567, %rd6577;
	add.s64 	%rd6579, %rd6578, %rd6573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10934,%dummy}, %rd6568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10935}, %rd6568;
	}
	shf.r.wrap.b32 	%r10936, %r10935, %r10934, 14;
	shf.r.wrap.b32 	%r10937, %r10934, %r10935, 14;
	mov.b64 	%rd6580, {%r10937, %r10936};
	shf.r.wrap.b32 	%r10938, %r10935, %r10934, 18;
	shf.r.wrap.b32 	%r10939, %r10934, %r10935, 18;
	mov.b64 	%rd6581, {%r10939, %r10938};
	xor.b64  	%rd6582, %rd6581, %rd6580;
	shf.l.wrap.b32 	%r10940, %r10934, %r10935, 23;
	shf.l.wrap.b32 	%r10941, %r10935, %r10934, 23;
	mov.b64 	%rd6583, {%r10941, %r10940};
	xor.b64  	%rd6584, %rd6582, %rd6583;
	xor.b64  	%rd6585, %rd6543, %rd6310;
	and.b64  	%rd6586, %rd6568, %rd6585;
	xor.b64  	%rd6587, %rd6586, %rd6310;
	add.s64 	%rd6588, %rd6360, %rd6286;
	ld.const.u64 	%rd6589, [k_sha512+144];
	add.s64 	%rd6590, %rd6588, %rd6589;
	add.s64 	%rd6591, %rd6590, %rd6587;
	add.s64 	%rd6592, %rd6591, %rd6584;
	add.s64 	%rd6593, %rd6592, %rd6297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10942,%dummy}, %rd6579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10943}, %rd6579;
	}
	shf.r.wrap.b32 	%r10944, %r10943, %r10942, 28;
	shf.r.wrap.b32 	%r10945, %r10942, %r10943, 28;
	mov.b64 	%rd6594, {%r10945, %r10944};
	shf.l.wrap.b32 	%r10946, %r10942, %r10943, 30;
	shf.l.wrap.b32 	%r10947, %r10943, %r10942, 30;
	mov.b64 	%rd6595, {%r10947, %r10946};
	xor.b64  	%rd6596, %rd6595, %rd6594;
	shf.l.wrap.b32 	%r10948, %r10942, %r10943, 25;
	shf.l.wrap.b32 	%r10949, %r10943, %r10942, 25;
	mov.b64 	%rd6597, {%r10949, %r10948};
	xor.b64  	%rd6598, %rd6596, %rd6597;
	xor.b64  	%rd6599, %rd6579, %rd6321;
	xor.b64  	%rd6600, %rd6579, %rd6554;
	and.b64  	%rd6601, %rd6600, %rd6599;
	xor.b64  	%rd6602, %rd6601, %rd6579;
	add.s64 	%rd6603, %rd6592, %rd6602;
	add.s64 	%rd6604, %rd6603, %rd6598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10950,%dummy}, %rd6593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10951}, %rd6593;
	}
	shf.r.wrap.b32 	%r10952, %r10951, %r10950, 14;
	shf.r.wrap.b32 	%r10953, %r10950, %r10951, 14;
	mov.b64 	%rd6605, {%r10953, %r10952};
	shf.r.wrap.b32 	%r10954, %r10951, %r10950, 18;
	shf.r.wrap.b32 	%r10955, %r10950, %r10951, 18;
	mov.b64 	%rd6606, {%r10955, %r10954};
	xor.b64  	%rd6607, %rd6606, %rd6605;
	shf.l.wrap.b32 	%r10956, %r10950, %r10951, 23;
	shf.l.wrap.b32 	%r10957, %r10951, %r10950, 23;
	mov.b64 	%rd6608, {%r10957, %r10956};
	xor.b64  	%rd6609, %rd6607, %rd6608;
	xor.b64  	%rd6610, %rd6568, %rd6543;
	and.b64  	%rd6611, %rd6593, %rd6610;
	xor.b64  	%rd6612, %rd6611, %rd6543;
	add.s64 	%rd6613, %rd6373, %rd6310;
	ld.const.u64 	%rd6614, [k_sha512+152];
	add.s64 	%rd6615, %rd6613, %rd6614;
	add.s64 	%rd6616, %rd6615, %rd6612;
	add.s64 	%rd6617, %rd6616, %rd6609;
	add.s64 	%rd6618, %rd6617, %rd6321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10958,%dummy}, %rd6604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10959}, %rd6604;
	}
	shf.r.wrap.b32 	%r10960, %r10959, %r10958, 28;
	shf.r.wrap.b32 	%r10961, %r10958, %r10959, 28;
	mov.b64 	%rd6619, {%r10961, %r10960};
	shf.l.wrap.b32 	%r10962, %r10958, %r10959, 30;
	shf.l.wrap.b32 	%r10963, %r10959, %r10958, 30;
	mov.b64 	%rd6620, {%r10963, %r10962};
	xor.b64  	%rd6621, %rd6620, %rd6619;
	shf.l.wrap.b32 	%r10964, %r10958, %r10959, 25;
	shf.l.wrap.b32 	%r10965, %r10959, %r10958, 25;
	mov.b64 	%rd6622, {%r10965, %r10964};
	xor.b64  	%rd6623, %rd6621, %rd6622;
	xor.b64  	%rd6624, %rd6604, %rd6554;
	xor.b64  	%rd6625, %rd6604, %rd6579;
	and.b64  	%rd6626, %rd6625, %rd6624;
	xor.b64  	%rd6627, %rd6626, %rd6604;
	add.s64 	%rd6628, %rd6617, %rd6627;
	add.s64 	%rd6629, %rd6628, %rd6623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10966,%dummy}, %rd6618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10967}, %rd6618;
	}
	shf.r.wrap.b32 	%r10968, %r10967, %r10966, 14;
	shf.r.wrap.b32 	%r10969, %r10966, %r10967, 14;
	mov.b64 	%rd6630, {%r10969, %r10968};
	shf.r.wrap.b32 	%r10970, %r10967, %r10966, 18;
	shf.r.wrap.b32 	%r10971, %r10966, %r10967, 18;
	mov.b64 	%rd6631, {%r10971, %r10970};
	xor.b64  	%rd6632, %rd6631, %rd6630;
	shf.l.wrap.b32 	%r10972, %r10966, %r10967, 23;
	shf.l.wrap.b32 	%r10973, %r10967, %r10966, 23;
	mov.b64 	%rd6633, {%r10973, %r10972};
	xor.b64  	%rd6634, %rd6632, %rd6633;
	xor.b64  	%rd6635, %rd6593, %rd6568;
	and.b64  	%rd6636, %rd6618, %rd6635;
	xor.b64  	%rd6637, %rd6636, %rd6568;
	add.s64 	%rd6638, %rd6543, %rd6386;
	ld.const.u64 	%rd6639, [k_sha512+160];
	add.s64 	%rd6640, %rd6638, %rd6639;
	add.s64 	%rd6641, %rd6640, %rd6637;
	add.s64 	%rd6642, %rd6641, %rd6634;
	add.s64 	%rd6643, %rd6642, %rd6554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10974,%dummy}, %rd6629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10975}, %rd6629;
	}
	shf.r.wrap.b32 	%r10976, %r10975, %r10974, 28;
	shf.r.wrap.b32 	%r10977, %r10974, %r10975, 28;
	mov.b64 	%rd6644, {%r10977, %r10976};
	shf.l.wrap.b32 	%r10978, %r10974, %r10975, 30;
	shf.l.wrap.b32 	%r10979, %r10975, %r10974, 30;
	mov.b64 	%rd6645, {%r10979, %r10978};
	xor.b64  	%rd6646, %rd6645, %rd6644;
	shf.l.wrap.b32 	%r10980, %r10974, %r10975, 25;
	shf.l.wrap.b32 	%r10981, %r10975, %r10974, 25;
	mov.b64 	%rd6647, {%r10981, %r10980};
	xor.b64  	%rd6648, %rd6646, %rd6647;
	xor.b64  	%rd6649, %rd6629, %rd6579;
	xor.b64  	%rd6650, %rd6629, %rd6604;
	and.b64  	%rd6651, %rd6650, %rd6649;
	xor.b64  	%rd6652, %rd6651, %rd6629;
	add.s64 	%rd6653, %rd6642, %rd6652;
	add.s64 	%rd6654, %rd6653, %rd6648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10982,%dummy}, %rd6643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10983}, %rd6643;
	}
	shf.r.wrap.b32 	%r10984, %r10983, %r10982, 14;
	shf.r.wrap.b32 	%r10985, %r10982, %r10983, 14;
	mov.b64 	%rd6655, {%r10985, %r10984};
	shf.r.wrap.b32 	%r10986, %r10983, %r10982, 18;
	shf.r.wrap.b32 	%r10987, %r10982, %r10983, 18;
	mov.b64 	%rd6656, {%r10987, %r10986};
	xor.b64  	%rd6657, %rd6656, %rd6655;
	shf.l.wrap.b32 	%r10988, %r10982, %r10983, 23;
	shf.l.wrap.b32 	%r10989, %r10983, %r10982, 23;
	mov.b64 	%rd6658, {%r10989, %r10988};
	xor.b64  	%rd6659, %rd6657, %rd6658;
	xor.b64  	%rd6660, %rd6618, %rd6593;
	and.b64  	%rd6661, %rd6643, %rd6660;
	xor.b64  	%rd6662, %rd6661, %rd6593;
	add.s64 	%rd6663, %rd6568, %rd6399;
	ld.const.u64 	%rd6664, [k_sha512+168];
	add.s64 	%rd6665, %rd6663, %rd6664;
	add.s64 	%rd6666, %rd6665, %rd6662;
	add.s64 	%rd6667, %rd6666, %rd6659;
	add.s64 	%rd6668, %rd6667, %rd6579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10990,%dummy}, %rd6654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10991}, %rd6654;
	}
	shf.r.wrap.b32 	%r10992, %r10991, %r10990, 28;
	shf.r.wrap.b32 	%r10993, %r10990, %r10991, 28;
	mov.b64 	%rd6669, {%r10993, %r10992};
	shf.l.wrap.b32 	%r10994, %r10990, %r10991, 30;
	shf.l.wrap.b32 	%r10995, %r10991, %r10990, 30;
	mov.b64 	%rd6670, {%r10995, %r10994};
	xor.b64  	%rd6671, %rd6670, %rd6669;
	shf.l.wrap.b32 	%r10996, %r10990, %r10991, 25;
	shf.l.wrap.b32 	%r10997, %r10991, %r10990, 25;
	mov.b64 	%rd6672, {%r10997, %r10996};
	xor.b64  	%rd6673, %rd6671, %rd6672;
	xor.b64  	%rd6674, %rd6654, %rd6604;
	xor.b64  	%rd6675, %rd6654, %rd6629;
	and.b64  	%rd6676, %rd6675, %rd6674;
	xor.b64  	%rd6677, %rd6676, %rd6654;
	add.s64 	%rd6678, %rd6667, %rd6677;
	add.s64 	%rd6679, %rd6678, %rd6673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10998,%dummy}, %rd6668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10999}, %rd6668;
	}
	shf.r.wrap.b32 	%r11000, %r10999, %r10998, 14;
	shf.r.wrap.b32 	%r11001, %r10998, %r10999, 14;
	mov.b64 	%rd6680, {%r11001, %r11000};
	shf.r.wrap.b32 	%r11002, %r10999, %r10998, 18;
	shf.r.wrap.b32 	%r11003, %r10998, %r10999, 18;
	mov.b64 	%rd6681, {%r11003, %r11002};
	xor.b64  	%rd6682, %rd6681, %rd6680;
	shf.l.wrap.b32 	%r11004, %r10998, %r10999, 23;
	shf.l.wrap.b32 	%r11005, %r10999, %r10998, 23;
	mov.b64 	%rd6683, {%r11005, %r11004};
	xor.b64  	%rd6684, %rd6682, %rd6683;
	xor.b64  	%rd6685, %rd6643, %rd6618;
	and.b64  	%rd6686, %rd6668, %rd6685;
	xor.b64  	%rd6687, %rd6686, %rd6618;
	add.s64 	%rd6688, %rd6593, %rd6412;
	ld.const.u64 	%rd6689, [k_sha512+176];
	add.s64 	%rd6690, %rd6688, %rd6689;
	add.s64 	%rd6691, %rd6690, %rd6687;
	add.s64 	%rd6692, %rd6691, %rd6684;
	add.s64 	%rd6693, %rd6692, %rd6604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11006,%dummy}, %rd6679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11007}, %rd6679;
	}
	shf.r.wrap.b32 	%r11008, %r11007, %r11006, 28;
	shf.r.wrap.b32 	%r11009, %r11006, %r11007, 28;
	mov.b64 	%rd6694, {%r11009, %r11008};
	shf.l.wrap.b32 	%r11010, %r11006, %r11007, 30;
	shf.l.wrap.b32 	%r11011, %r11007, %r11006, 30;
	mov.b64 	%rd6695, {%r11011, %r11010};
	xor.b64  	%rd6696, %rd6695, %rd6694;
	shf.l.wrap.b32 	%r11012, %r11006, %r11007, 25;
	shf.l.wrap.b32 	%r11013, %r11007, %r11006, 25;
	mov.b64 	%rd6697, {%r11013, %r11012};
	xor.b64  	%rd6698, %rd6696, %rd6697;
	xor.b64  	%rd6699, %rd6679, %rd6629;
	xor.b64  	%rd6700, %rd6679, %rd6654;
	and.b64  	%rd6701, %rd6700, %rd6699;
	xor.b64  	%rd6702, %rd6701, %rd6679;
	add.s64 	%rd6703, %rd6692, %rd6702;
	add.s64 	%rd6704, %rd6703, %rd6698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11014,%dummy}, %rd6693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11015}, %rd6693;
	}
	shf.r.wrap.b32 	%r11016, %r11015, %r11014, 14;
	shf.r.wrap.b32 	%r11017, %r11014, %r11015, 14;
	mov.b64 	%rd6705, {%r11017, %r11016};
	shf.r.wrap.b32 	%r11018, %r11015, %r11014, 18;
	shf.r.wrap.b32 	%r11019, %r11014, %r11015, 18;
	mov.b64 	%rd6706, {%r11019, %r11018};
	xor.b64  	%rd6707, %rd6706, %rd6705;
	shf.l.wrap.b32 	%r11020, %r11014, %r11015, 23;
	shf.l.wrap.b32 	%r11021, %r11015, %r11014, 23;
	mov.b64 	%rd6708, {%r11021, %r11020};
	xor.b64  	%rd6709, %rd6707, %rd6708;
	xor.b64  	%rd6710, %rd6668, %rd6643;
	and.b64  	%rd6711, %rd6693, %rd6710;
	xor.b64  	%rd6712, %rd6711, %rd6643;
	add.s64 	%rd6713, %rd6618, %rd6425;
	ld.const.u64 	%rd6714, [k_sha512+184];
	add.s64 	%rd6715, %rd6713, %rd6714;
	add.s64 	%rd6716, %rd6715, %rd6712;
	add.s64 	%rd6717, %rd6716, %rd6709;
	add.s64 	%rd6718, %rd6717, %rd6629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11022,%dummy}, %rd6704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11023}, %rd6704;
	}
	shf.r.wrap.b32 	%r11024, %r11023, %r11022, 28;
	shf.r.wrap.b32 	%r11025, %r11022, %r11023, 28;
	mov.b64 	%rd6719, {%r11025, %r11024};
	shf.l.wrap.b32 	%r11026, %r11022, %r11023, 30;
	shf.l.wrap.b32 	%r11027, %r11023, %r11022, 30;
	mov.b64 	%rd6720, {%r11027, %r11026};
	xor.b64  	%rd6721, %rd6720, %rd6719;
	shf.l.wrap.b32 	%r11028, %r11022, %r11023, 25;
	shf.l.wrap.b32 	%r11029, %r11023, %r11022, 25;
	mov.b64 	%rd6722, {%r11029, %r11028};
	xor.b64  	%rd6723, %rd6721, %rd6722;
	xor.b64  	%rd6724, %rd6704, %rd6654;
	xor.b64  	%rd6725, %rd6704, %rd6679;
	and.b64  	%rd6726, %rd6725, %rd6724;
	xor.b64  	%rd6727, %rd6726, %rd6704;
	add.s64 	%rd6728, %rd6717, %rd6727;
	add.s64 	%rd6729, %rd6728, %rd6723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11030,%dummy}, %rd6718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11031}, %rd6718;
	}
	shf.r.wrap.b32 	%r11032, %r11031, %r11030, 14;
	shf.r.wrap.b32 	%r11033, %r11030, %r11031, 14;
	mov.b64 	%rd6730, {%r11033, %r11032};
	shf.r.wrap.b32 	%r11034, %r11031, %r11030, 18;
	shf.r.wrap.b32 	%r11035, %r11030, %r11031, 18;
	mov.b64 	%rd6731, {%r11035, %r11034};
	xor.b64  	%rd6732, %rd6731, %rd6730;
	shf.l.wrap.b32 	%r11036, %r11030, %r11031, 23;
	shf.l.wrap.b32 	%r11037, %r11031, %r11030, 23;
	mov.b64 	%rd6733, {%r11037, %r11036};
	xor.b64  	%rd6734, %rd6732, %rd6733;
	xor.b64  	%rd6735, %rd6693, %rd6668;
	and.b64  	%rd6736, %rd6718, %rd6735;
	xor.b64  	%rd6737, %rd6736, %rd6668;
	add.s64 	%rd6738, %rd6643, %rd6438;
	ld.const.u64 	%rd6739, [k_sha512+192];
	add.s64 	%rd6740, %rd6738, %rd6739;
	add.s64 	%rd6741, %rd6740, %rd6737;
	add.s64 	%rd6742, %rd6741, %rd6734;
	add.s64 	%rd6743, %rd6742, %rd6654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11038,%dummy}, %rd6729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11039}, %rd6729;
	}
	shf.r.wrap.b32 	%r11040, %r11039, %r11038, 28;
	shf.r.wrap.b32 	%r11041, %r11038, %r11039, 28;
	mov.b64 	%rd6744, {%r11041, %r11040};
	shf.l.wrap.b32 	%r11042, %r11038, %r11039, 30;
	shf.l.wrap.b32 	%r11043, %r11039, %r11038, 30;
	mov.b64 	%rd6745, {%r11043, %r11042};
	xor.b64  	%rd6746, %rd6745, %rd6744;
	shf.l.wrap.b32 	%r11044, %r11038, %r11039, 25;
	shf.l.wrap.b32 	%r11045, %r11039, %r11038, 25;
	mov.b64 	%rd6747, {%r11045, %r11044};
	xor.b64  	%rd6748, %rd6746, %rd6747;
	xor.b64  	%rd6749, %rd6729, %rd6679;
	xor.b64  	%rd6750, %rd6729, %rd6704;
	and.b64  	%rd6751, %rd6750, %rd6749;
	xor.b64  	%rd6752, %rd6751, %rd6729;
	add.s64 	%rd6753, %rd6742, %rd6752;
	add.s64 	%rd6754, %rd6753, %rd6748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11046,%dummy}, %rd6743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11047}, %rd6743;
	}
	shf.r.wrap.b32 	%r11048, %r11047, %r11046, 14;
	shf.r.wrap.b32 	%r11049, %r11046, %r11047, 14;
	mov.b64 	%rd6755, {%r11049, %r11048};
	shf.r.wrap.b32 	%r11050, %r11047, %r11046, 18;
	shf.r.wrap.b32 	%r11051, %r11046, %r11047, 18;
	mov.b64 	%rd6756, {%r11051, %r11050};
	xor.b64  	%rd6757, %rd6756, %rd6755;
	shf.l.wrap.b32 	%r11052, %r11046, %r11047, 23;
	shf.l.wrap.b32 	%r11053, %r11047, %r11046, 23;
	mov.b64 	%rd6758, {%r11053, %r11052};
	xor.b64  	%rd6759, %rd6757, %rd6758;
	xor.b64  	%rd6760, %rd6718, %rd6693;
	and.b64  	%rd6761, %rd6743, %rd6760;
	xor.b64  	%rd6762, %rd6761, %rd6693;
	add.s64 	%rd6763, %rd6668, %rd6451;
	ld.const.u64 	%rd6764, [k_sha512+200];
	add.s64 	%rd6765, %rd6763, %rd6764;
	add.s64 	%rd6766, %rd6765, %rd6762;
	add.s64 	%rd6767, %rd6766, %rd6759;
	add.s64 	%rd6768, %rd6767, %rd6679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11054,%dummy}, %rd6754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11055}, %rd6754;
	}
	shf.r.wrap.b32 	%r11056, %r11055, %r11054, 28;
	shf.r.wrap.b32 	%r11057, %r11054, %r11055, 28;
	mov.b64 	%rd6769, {%r11057, %r11056};
	shf.l.wrap.b32 	%r11058, %r11054, %r11055, 30;
	shf.l.wrap.b32 	%r11059, %r11055, %r11054, 30;
	mov.b64 	%rd6770, {%r11059, %r11058};
	xor.b64  	%rd6771, %rd6770, %rd6769;
	shf.l.wrap.b32 	%r11060, %r11054, %r11055, 25;
	shf.l.wrap.b32 	%r11061, %r11055, %r11054, 25;
	mov.b64 	%rd6772, {%r11061, %r11060};
	xor.b64  	%rd6773, %rd6771, %rd6772;
	xor.b64  	%rd6774, %rd6754, %rd6704;
	xor.b64  	%rd6775, %rd6754, %rd6729;
	and.b64  	%rd6776, %rd6775, %rd6774;
	xor.b64  	%rd6777, %rd6776, %rd6754;
	add.s64 	%rd6778, %rd6767, %rd6777;
	add.s64 	%rd6779, %rd6778, %rd6773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11062,%dummy}, %rd6768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11063}, %rd6768;
	}
	shf.r.wrap.b32 	%r11064, %r11063, %r11062, 14;
	shf.r.wrap.b32 	%r11065, %r11062, %r11063, 14;
	mov.b64 	%rd6780, {%r11065, %r11064};
	shf.r.wrap.b32 	%r11066, %r11063, %r11062, 18;
	shf.r.wrap.b32 	%r11067, %r11062, %r11063, 18;
	mov.b64 	%rd6781, {%r11067, %r11066};
	xor.b64  	%rd6782, %rd6781, %rd6780;
	shf.l.wrap.b32 	%r11068, %r11062, %r11063, 23;
	shf.l.wrap.b32 	%r11069, %r11063, %r11062, 23;
	mov.b64 	%rd6783, {%r11069, %r11068};
	xor.b64  	%rd6784, %rd6782, %rd6783;
	xor.b64  	%rd6785, %rd6743, %rd6718;
	and.b64  	%rd6786, %rd6768, %rd6785;
	xor.b64  	%rd6787, %rd6786, %rd6718;
	add.s64 	%rd6788, %rd6693, %rd6464;
	ld.const.u64 	%rd6789, [k_sha512+208];
	add.s64 	%rd6790, %rd6788, %rd6789;
	add.s64 	%rd6791, %rd6790, %rd6787;
	add.s64 	%rd6792, %rd6791, %rd6784;
	add.s64 	%rd6793, %rd6792, %rd6704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11070,%dummy}, %rd6779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11071}, %rd6779;
	}
	shf.r.wrap.b32 	%r11072, %r11071, %r11070, 28;
	shf.r.wrap.b32 	%r11073, %r11070, %r11071, 28;
	mov.b64 	%rd6794, {%r11073, %r11072};
	shf.l.wrap.b32 	%r11074, %r11070, %r11071, 30;
	shf.l.wrap.b32 	%r11075, %r11071, %r11070, 30;
	mov.b64 	%rd6795, {%r11075, %r11074};
	xor.b64  	%rd6796, %rd6795, %rd6794;
	shf.l.wrap.b32 	%r11076, %r11070, %r11071, 25;
	shf.l.wrap.b32 	%r11077, %r11071, %r11070, 25;
	mov.b64 	%rd6797, {%r11077, %r11076};
	xor.b64  	%rd6798, %rd6796, %rd6797;
	xor.b64  	%rd6799, %rd6779, %rd6729;
	xor.b64  	%rd6800, %rd6779, %rd6754;
	and.b64  	%rd6801, %rd6800, %rd6799;
	xor.b64  	%rd6802, %rd6801, %rd6779;
	add.s64 	%rd6803, %rd6792, %rd6802;
	add.s64 	%rd6804, %rd6803, %rd6798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11078,%dummy}, %rd6793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11079}, %rd6793;
	}
	shf.r.wrap.b32 	%r11080, %r11079, %r11078, 14;
	shf.r.wrap.b32 	%r11081, %r11078, %r11079, 14;
	mov.b64 	%rd6805, {%r11081, %r11080};
	shf.r.wrap.b32 	%r11082, %r11079, %r11078, 18;
	shf.r.wrap.b32 	%r11083, %r11078, %r11079, 18;
	mov.b64 	%rd6806, {%r11083, %r11082};
	xor.b64  	%rd6807, %rd6806, %rd6805;
	shf.l.wrap.b32 	%r11084, %r11078, %r11079, 23;
	shf.l.wrap.b32 	%r11085, %r11079, %r11078, 23;
	mov.b64 	%rd6808, {%r11085, %r11084};
	xor.b64  	%rd6809, %rd6807, %rd6808;
	xor.b64  	%rd6810, %rd6768, %rd6743;
	and.b64  	%rd6811, %rd6793, %rd6810;
	xor.b64  	%rd6812, %rd6811, %rd6743;
	add.s64 	%rd6813, %rd6718, %rd6477;
	ld.const.u64 	%rd6814, [k_sha512+216];
	add.s64 	%rd6815, %rd6813, %rd6814;
	add.s64 	%rd6816, %rd6815, %rd6812;
	add.s64 	%rd6817, %rd6816, %rd6809;
	add.s64 	%rd6818, %rd6817, %rd6729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11086,%dummy}, %rd6804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11087}, %rd6804;
	}
	shf.r.wrap.b32 	%r11088, %r11087, %r11086, 28;
	shf.r.wrap.b32 	%r11089, %r11086, %r11087, 28;
	mov.b64 	%rd6819, {%r11089, %r11088};
	shf.l.wrap.b32 	%r11090, %r11086, %r11087, 30;
	shf.l.wrap.b32 	%r11091, %r11087, %r11086, 30;
	mov.b64 	%rd6820, {%r11091, %r11090};
	xor.b64  	%rd6821, %rd6820, %rd6819;
	shf.l.wrap.b32 	%r11092, %r11086, %r11087, 25;
	shf.l.wrap.b32 	%r11093, %r11087, %r11086, 25;
	mov.b64 	%rd6822, {%r11093, %r11092};
	xor.b64  	%rd6823, %rd6821, %rd6822;
	xor.b64  	%rd6824, %rd6804, %rd6754;
	xor.b64  	%rd6825, %rd6804, %rd6779;
	and.b64  	%rd6826, %rd6825, %rd6824;
	xor.b64  	%rd6827, %rd6826, %rd6804;
	add.s64 	%rd6828, %rd6817, %rd6827;
	add.s64 	%rd6829, %rd6828, %rd6823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11094,%dummy}, %rd6818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11095}, %rd6818;
	}
	shf.r.wrap.b32 	%r11096, %r11095, %r11094, 14;
	shf.r.wrap.b32 	%r11097, %r11094, %r11095, 14;
	mov.b64 	%rd6830, {%r11097, %r11096};
	shf.r.wrap.b32 	%r11098, %r11095, %r11094, 18;
	shf.r.wrap.b32 	%r11099, %r11094, %r11095, 18;
	mov.b64 	%rd6831, {%r11099, %r11098};
	xor.b64  	%rd6832, %rd6831, %rd6830;
	shf.l.wrap.b32 	%r11100, %r11094, %r11095, 23;
	shf.l.wrap.b32 	%r11101, %r11095, %r11094, 23;
	mov.b64 	%rd6833, {%r11101, %r11100};
	xor.b64  	%rd6834, %rd6832, %rd6833;
	xor.b64  	%rd6835, %rd6793, %rd6768;
	and.b64  	%rd6836, %rd6818, %rd6835;
	xor.b64  	%rd6837, %rd6836, %rd6768;
	add.s64 	%rd6838, %rd6743, %rd6490;
	ld.const.u64 	%rd6839, [k_sha512+224];
	add.s64 	%rd6840, %rd6838, %rd6839;
	add.s64 	%rd6841, %rd6840, %rd6837;
	add.s64 	%rd6842, %rd6841, %rd6834;
	add.s64 	%rd6843, %rd6842, %rd6754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11102,%dummy}, %rd6829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11103}, %rd6829;
	}
	shf.r.wrap.b32 	%r11104, %r11103, %r11102, 28;
	shf.r.wrap.b32 	%r11105, %r11102, %r11103, 28;
	mov.b64 	%rd6844, {%r11105, %r11104};
	shf.l.wrap.b32 	%r11106, %r11102, %r11103, 30;
	shf.l.wrap.b32 	%r11107, %r11103, %r11102, 30;
	mov.b64 	%rd6845, {%r11107, %r11106};
	xor.b64  	%rd6846, %rd6845, %rd6844;
	shf.l.wrap.b32 	%r11108, %r11102, %r11103, 25;
	shf.l.wrap.b32 	%r11109, %r11103, %r11102, 25;
	mov.b64 	%rd6847, {%r11109, %r11108};
	xor.b64  	%rd6848, %rd6846, %rd6847;
	xor.b64  	%rd6849, %rd6829, %rd6779;
	xor.b64  	%rd6850, %rd6829, %rd6804;
	and.b64  	%rd6851, %rd6850, %rd6849;
	xor.b64  	%rd6852, %rd6851, %rd6829;
	add.s64 	%rd6853, %rd6842, %rd6852;
	add.s64 	%rd6854, %rd6853, %rd6848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11110,%dummy}, %rd6843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11111}, %rd6843;
	}
	shf.r.wrap.b32 	%r11112, %r11111, %r11110, 14;
	shf.r.wrap.b32 	%r11113, %r11110, %r11111, 14;
	mov.b64 	%rd6855, {%r11113, %r11112};
	shf.r.wrap.b32 	%r11114, %r11111, %r11110, 18;
	shf.r.wrap.b32 	%r11115, %r11110, %r11111, 18;
	mov.b64 	%rd6856, {%r11115, %r11114};
	xor.b64  	%rd6857, %rd6856, %rd6855;
	shf.l.wrap.b32 	%r11116, %r11110, %r11111, 23;
	shf.l.wrap.b32 	%r11117, %r11111, %r11110, 23;
	mov.b64 	%rd6858, {%r11117, %r11116};
	xor.b64  	%rd6859, %rd6857, %rd6858;
	xor.b64  	%rd6860, %rd6818, %rd6793;
	and.b64  	%rd6861, %rd6843, %rd6860;
	xor.b64  	%rd6862, %rd6861, %rd6793;
	add.s64 	%rd6863, %rd6768, %rd6503;
	ld.const.u64 	%rd6864, [k_sha512+232];
	add.s64 	%rd6865, %rd6863, %rd6864;
	add.s64 	%rd6866, %rd6865, %rd6862;
	add.s64 	%rd6867, %rd6866, %rd6859;
	add.s64 	%rd6868, %rd6867, %rd6779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11118,%dummy}, %rd6854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11119}, %rd6854;
	}
	shf.r.wrap.b32 	%r11120, %r11119, %r11118, 28;
	shf.r.wrap.b32 	%r11121, %r11118, %r11119, 28;
	mov.b64 	%rd6869, {%r11121, %r11120};
	shf.l.wrap.b32 	%r11122, %r11118, %r11119, 30;
	shf.l.wrap.b32 	%r11123, %r11119, %r11118, 30;
	mov.b64 	%rd6870, {%r11123, %r11122};
	xor.b64  	%rd6871, %rd6870, %rd6869;
	shf.l.wrap.b32 	%r11124, %r11118, %r11119, 25;
	shf.l.wrap.b32 	%r11125, %r11119, %r11118, 25;
	mov.b64 	%rd6872, {%r11125, %r11124};
	xor.b64  	%rd6873, %rd6871, %rd6872;
	xor.b64  	%rd6874, %rd6854, %rd6804;
	xor.b64  	%rd6875, %rd6854, %rd6829;
	and.b64  	%rd6876, %rd6875, %rd6874;
	xor.b64  	%rd6877, %rd6876, %rd6854;
	add.s64 	%rd6878, %rd6867, %rd6877;
	add.s64 	%rd6879, %rd6878, %rd6873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11126,%dummy}, %rd6868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11127}, %rd6868;
	}
	shf.r.wrap.b32 	%r11128, %r11127, %r11126, 14;
	shf.r.wrap.b32 	%r11129, %r11126, %r11127, 14;
	mov.b64 	%rd6880, {%r11129, %r11128};
	shf.r.wrap.b32 	%r11130, %r11127, %r11126, 18;
	shf.r.wrap.b32 	%r11131, %r11126, %r11127, 18;
	mov.b64 	%rd6881, {%r11131, %r11130};
	xor.b64  	%rd6882, %rd6881, %rd6880;
	shf.l.wrap.b32 	%r11132, %r11126, %r11127, 23;
	shf.l.wrap.b32 	%r11133, %r11127, %r11126, 23;
	mov.b64 	%rd6883, {%r11133, %r11132};
	xor.b64  	%rd6884, %rd6882, %rd6883;
	xor.b64  	%rd6885, %rd6843, %rd6818;
	and.b64  	%rd6886, %rd6868, %rd6885;
	xor.b64  	%rd6887, %rd6886, %rd6818;
	add.s64 	%rd6888, %rd6793, %rd6516;
	ld.const.u64 	%rd6889, [k_sha512+240];
	add.s64 	%rd6890, %rd6888, %rd6889;
	add.s64 	%rd6891, %rd6890, %rd6887;
	add.s64 	%rd6892, %rd6891, %rd6884;
	add.s64 	%rd6893, %rd6892, %rd6804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11134,%dummy}, %rd6879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11135}, %rd6879;
	}
	shf.r.wrap.b32 	%r11136, %r11135, %r11134, 28;
	shf.r.wrap.b32 	%r11137, %r11134, %r11135, 28;
	mov.b64 	%rd6894, {%r11137, %r11136};
	shf.l.wrap.b32 	%r11138, %r11134, %r11135, 30;
	shf.l.wrap.b32 	%r11139, %r11135, %r11134, 30;
	mov.b64 	%rd6895, {%r11139, %r11138};
	xor.b64  	%rd6896, %rd6895, %rd6894;
	shf.l.wrap.b32 	%r11140, %r11134, %r11135, 25;
	shf.l.wrap.b32 	%r11141, %r11135, %r11134, 25;
	mov.b64 	%rd6897, {%r11141, %r11140};
	xor.b64  	%rd6898, %rd6896, %rd6897;
	xor.b64  	%rd6899, %rd6879, %rd6829;
	xor.b64  	%rd6900, %rd6879, %rd6854;
	and.b64  	%rd6901, %rd6900, %rd6899;
	xor.b64  	%rd6902, %rd6901, %rd6879;
	add.s64 	%rd6903, %rd6892, %rd6902;
	add.s64 	%rd6904, %rd6903, %rd6898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11142,%dummy}, %rd6893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11143}, %rd6893;
	}
	shf.r.wrap.b32 	%r11144, %r11143, %r11142, 14;
	shf.r.wrap.b32 	%r11145, %r11142, %r11143, 14;
	mov.b64 	%rd6905, {%r11145, %r11144};
	shf.r.wrap.b32 	%r11146, %r11143, %r11142, 18;
	shf.r.wrap.b32 	%r11147, %r11142, %r11143, 18;
	mov.b64 	%rd6906, {%r11147, %r11146};
	xor.b64  	%rd6907, %rd6906, %rd6905;
	shf.l.wrap.b32 	%r11148, %r11142, %r11143, 23;
	shf.l.wrap.b32 	%r11149, %r11143, %r11142, 23;
	mov.b64 	%rd6908, {%r11149, %r11148};
	xor.b64  	%rd6909, %rd6907, %rd6908;
	xor.b64  	%rd6910, %rd6868, %rd6843;
	and.b64  	%rd6911, %rd6893, %rd6910;
	xor.b64  	%rd6912, %rd6911, %rd6843;
	add.s64 	%rd6913, %rd6818, %rd6529;
	ld.const.u64 	%rd6914, [k_sha512+248];
	add.s64 	%rd6915, %rd6913, %rd6914;
	add.s64 	%rd6916, %rd6915, %rd6912;
	add.s64 	%rd6917, %rd6916, %rd6909;
	add.s64 	%rd6918, %rd6917, %rd6829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11150,%dummy}, %rd6904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11151}, %rd6904;
	}
	shf.r.wrap.b32 	%r11152, %r11151, %r11150, 28;
	shf.r.wrap.b32 	%r11153, %r11150, %r11151, 28;
	mov.b64 	%rd6919, {%r11153, %r11152};
	shf.l.wrap.b32 	%r11154, %r11150, %r11151, 30;
	shf.l.wrap.b32 	%r11155, %r11151, %r11150, 30;
	mov.b64 	%rd6920, {%r11155, %r11154};
	xor.b64  	%rd6921, %rd6920, %rd6919;
	shf.l.wrap.b32 	%r11156, %r11150, %r11151, 25;
	shf.l.wrap.b32 	%r11157, %r11151, %r11150, 25;
	mov.b64 	%rd6922, {%r11157, %r11156};
	xor.b64  	%rd6923, %rd6921, %rd6922;
	xor.b64  	%rd6924, %rd6904, %rd6854;
	xor.b64  	%rd6925, %rd6904, %rd6879;
	and.b64  	%rd6926, %rd6925, %rd6924;
	xor.b64  	%rd6927, %rd6926, %rd6904;
	add.s64 	%rd6928, %rd6917, %rd6927;
	add.s64 	%rd6929, %rd6928, %rd6923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11158,%dummy}, %rd6516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11159}, %rd6516;
	}
	shf.r.wrap.b32 	%r11160, %r11159, %r11158, 19;
	shf.r.wrap.b32 	%r11161, %r11158, %r11159, 19;
	mov.b64 	%rd6930, {%r11161, %r11160};
	shf.l.wrap.b32 	%r11162, %r11158, %r11159, 3;
	shf.l.wrap.b32 	%r11163, %r11159, %r11158, 3;
	mov.b64 	%rd6931, {%r11163, %r11162};
	shr.u64 	%rd6932, %rd6516, 6;
	xor.b64  	%rd6933, %rd6930, %rd6932;
	xor.b64  	%rd6934, %rd6933, %rd6931;
	shf.r.wrap.b32 	%r11164, %r10753, %r10752, 1;
	shf.r.wrap.b32 	%r11165, %r10752, %r10753, 1;
	mov.b64 	%rd6935, {%r11165, %r11164};
	shf.r.wrap.b32 	%r11166, %r10753, %r10752, 8;
	shf.r.wrap.b32 	%r11167, %r10752, %r10753, 8;
	mov.b64 	%rd6936, {%r11167, %r11166};
	shr.u64 	%rd6937, %rd6347, 7;
	xor.b64  	%rd6938, %rd6935, %rd6937;
	xor.b64  	%rd6939, %rd6938, %rd6936;
	add.s64 	%rd6940, %rd6451, %rd6334;
	add.s64 	%rd6941, %rd6940, %rd6934;
	add.s64 	%rd6942, %rd6941, %rd6939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11168,%dummy}, %rd6529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11169}, %rd6529;
	}
	shf.r.wrap.b32 	%r11170, %r11169, %r11168, 19;
	shf.r.wrap.b32 	%r11171, %r11168, %r11169, 19;
	mov.b64 	%rd6943, {%r11171, %r11170};
	shf.l.wrap.b32 	%r11172, %r11168, %r11169, 3;
	shf.l.wrap.b32 	%r11173, %r11169, %r11168, 3;
	mov.b64 	%rd6944, {%r11173, %r11172};
	shr.u64 	%rd6945, %rd6529, 6;
	xor.b64  	%rd6946, %rd6943, %rd6945;
	xor.b64  	%rd6947, %rd6946, %rd6944;
	shf.r.wrap.b32 	%r11174, %r10765, %r10764, 1;
	shf.r.wrap.b32 	%r11175, %r10764, %r10765, 1;
	mov.b64 	%rd6948, {%r11175, %r11174};
	shf.r.wrap.b32 	%r11176, %r10765, %r10764, 8;
	shf.r.wrap.b32 	%r11177, %r10764, %r10765, 8;
	mov.b64 	%rd6949, {%r11177, %r11176};
	shr.u64 	%rd6950, %rd6360, 7;
	xor.b64  	%rd6951, %rd6948, %rd6950;
	xor.b64  	%rd6952, %rd6951, %rd6949;
	add.s64 	%rd6953, %rd6464, %rd6347;
	add.s64 	%rd6954, %rd6953, %rd6947;
	add.s64 	%rd6955, %rd6954, %rd6952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11178,%dummy}, %rd6942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11179}, %rd6942;
	}
	shf.r.wrap.b32 	%r11180, %r11179, %r11178, 19;
	shf.r.wrap.b32 	%r11181, %r11178, %r11179, 19;
	mov.b64 	%rd6956, {%r11181, %r11180};
	shf.l.wrap.b32 	%r11182, %r11178, %r11179, 3;
	shf.l.wrap.b32 	%r11183, %r11179, %r11178, 3;
	mov.b64 	%rd6957, {%r11183, %r11182};
	shr.u64 	%rd6958, %rd6942, 6;
	xor.b64  	%rd6959, %rd6956, %rd6958;
	xor.b64  	%rd6960, %rd6959, %rd6957;
	shf.r.wrap.b32 	%r11184, %r10777, %r10776, 1;
	shf.r.wrap.b32 	%r11185, %r10776, %r10777, 1;
	mov.b64 	%rd6961, {%r11185, %r11184};
	shf.r.wrap.b32 	%r11186, %r10777, %r10776, 8;
	shf.r.wrap.b32 	%r11187, %r10776, %r10777, 8;
	mov.b64 	%rd6962, {%r11187, %r11186};
	shr.u64 	%rd6963, %rd6373, 7;
	xor.b64  	%rd6964, %rd6961, %rd6963;
	xor.b64  	%rd6965, %rd6964, %rd6962;
	add.s64 	%rd6966, %rd6477, %rd6360;
	add.s64 	%rd6967, %rd6966, %rd6960;
	add.s64 	%rd6968, %rd6967, %rd6965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11188,%dummy}, %rd6955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11189}, %rd6955;
	}
	shf.r.wrap.b32 	%r11190, %r11189, %r11188, 19;
	shf.r.wrap.b32 	%r11191, %r11188, %r11189, 19;
	mov.b64 	%rd6969, {%r11191, %r11190};
	shf.l.wrap.b32 	%r11192, %r11188, %r11189, 3;
	shf.l.wrap.b32 	%r11193, %r11189, %r11188, 3;
	mov.b64 	%rd6970, {%r11193, %r11192};
	shr.u64 	%rd6971, %rd6955, 6;
	xor.b64  	%rd6972, %rd6969, %rd6971;
	xor.b64  	%rd6973, %rd6972, %rd6970;
	shf.r.wrap.b32 	%r11194, %r10789, %r10788, 1;
	shf.r.wrap.b32 	%r11195, %r10788, %r10789, 1;
	mov.b64 	%rd6974, {%r11195, %r11194};
	shf.r.wrap.b32 	%r11196, %r10789, %r10788, 8;
	shf.r.wrap.b32 	%r11197, %r10788, %r10789, 8;
	mov.b64 	%rd6975, {%r11197, %r11196};
	shr.u64 	%rd6976, %rd6386, 7;
	xor.b64  	%rd6977, %rd6974, %rd6976;
	xor.b64  	%rd6978, %rd6977, %rd6975;
	add.s64 	%rd6979, %rd6490, %rd6373;
	add.s64 	%rd6980, %rd6979, %rd6973;
	add.s64 	%rd6981, %rd6980, %rd6978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11198,%dummy}, %rd6968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11199}, %rd6968;
	}
	shf.r.wrap.b32 	%r11200, %r11199, %r11198, 19;
	shf.r.wrap.b32 	%r11201, %r11198, %r11199, 19;
	mov.b64 	%rd6982, {%r11201, %r11200};
	shf.l.wrap.b32 	%r11202, %r11198, %r11199, 3;
	shf.l.wrap.b32 	%r11203, %r11199, %r11198, 3;
	mov.b64 	%rd6983, {%r11203, %r11202};
	shr.u64 	%rd6984, %rd6968, 6;
	xor.b64  	%rd6985, %rd6982, %rd6984;
	xor.b64  	%rd6986, %rd6985, %rd6983;
	shf.r.wrap.b32 	%r11204, %r10801, %r10800, 1;
	shf.r.wrap.b32 	%r11205, %r10800, %r10801, 1;
	mov.b64 	%rd6987, {%r11205, %r11204};
	shf.r.wrap.b32 	%r11206, %r10801, %r10800, 8;
	shf.r.wrap.b32 	%r11207, %r10800, %r10801, 8;
	mov.b64 	%rd6988, {%r11207, %r11206};
	shr.u64 	%rd6989, %rd6399, 7;
	xor.b64  	%rd6990, %rd6987, %rd6989;
	xor.b64  	%rd6991, %rd6990, %rd6988;
	add.s64 	%rd6992, %rd6503, %rd6386;
	add.s64 	%rd6993, %rd6992, %rd6986;
	add.s64 	%rd6994, %rd6993, %rd6991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11208,%dummy}, %rd6981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11209}, %rd6981;
	}
	shf.r.wrap.b32 	%r11210, %r11209, %r11208, 19;
	shf.r.wrap.b32 	%r11211, %r11208, %r11209, 19;
	mov.b64 	%rd6995, {%r11211, %r11210};
	shf.l.wrap.b32 	%r11212, %r11208, %r11209, 3;
	shf.l.wrap.b32 	%r11213, %r11209, %r11208, 3;
	mov.b64 	%rd6996, {%r11213, %r11212};
	shr.u64 	%rd6997, %rd6981, 6;
	xor.b64  	%rd6998, %rd6995, %rd6997;
	xor.b64  	%rd6999, %rd6998, %rd6996;
	shf.r.wrap.b32 	%r11214, %r10813, %r10812, 1;
	shf.r.wrap.b32 	%r11215, %r10812, %r10813, 1;
	mov.b64 	%rd7000, {%r11215, %r11214};
	shf.r.wrap.b32 	%r11216, %r10813, %r10812, 8;
	shf.r.wrap.b32 	%r11217, %r10812, %r10813, 8;
	mov.b64 	%rd7001, {%r11217, %r11216};
	shr.u64 	%rd7002, %rd6412, 7;
	xor.b64  	%rd7003, %rd7000, %rd7002;
	xor.b64  	%rd7004, %rd7003, %rd7001;
	add.s64 	%rd7005, %rd6516, %rd6399;
	add.s64 	%rd7006, %rd7005, %rd6999;
	add.s64 	%rd7007, %rd7006, %rd7004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11218,%dummy}, %rd6994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11219}, %rd6994;
	}
	shf.r.wrap.b32 	%r11220, %r11219, %r11218, 19;
	shf.r.wrap.b32 	%r11221, %r11218, %r11219, 19;
	mov.b64 	%rd7008, {%r11221, %r11220};
	shf.l.wrap.b32 	%r11222, %r11218, %r11219, 3;
	shf.l.wrap.b32 	%r11223, %r11219, %r11218, 3;
	mov.b64 	%rd7009, {%r11223, %r11222};
	shr.u64 	%rd7010, %rd6994, 6;
	xor.b64  	%rd7011, %rd7008, %rd7010;
	xor.b64  	%rd7012, %rd7011, %rd7009;
	shf.r.wrap.b32 	%r11224, %r10825, %r10824, 1;
	shf.r.wrap.b32 	%r11225, %r10824, %r10825, 1;
	mov.b64 	%rd7013, {%r11225, %r11224};
	shf.r.wrap.b32 	%r11226, %r10825, %r10824, 8;
	shf.r.wrap.b32 	%r11227, %r10824, %r10825, 8;
	mov.b64 	%rd7014, {%r11227, %r11226};
	shr.u64 	%rd7015, %rd6425, 7;
	xor.b64  	%rd7016, %rd7013, %rd7015;
	xor.b64  	%rd7017, %rd7016, %rd7014;
	add.s64 	%rd7018, %rd6529, %rd6412;
	add.s64 	%rd7019, %rd7018, %rd7012;
	add.s64 	%rd7020, %rd7019, %rd7017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11228,%dummy}, %rd7007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11229}, %rd7007;
	}
	shf.r.wrap.b32 	%r11230, %r11229, %r11228, 19;
	shf.r.wrap.b32 	%r11231, %r11228, %r11229, 19;
	mov.b64 	%rd7021, {%r11231, %r11230};
	shf.l.wrap.b32 	%r11232, %r11228, %r11229, 3;
	shf.l.wrap.b32 	%r11233, %r11229, %r11228, 3;
	mov.b64 	%rd7022, {%r11233, %r11232};
	shr.u64 	%rd7023, %rd7007, 6;
	xor.b64  	%rd7024, %rd7021, %rd7023;
	xor.b64  	%rd7025, %rd7024, %rd7022;
	shf.r.wrap.b32 	%r11234, %r10837, %r10836, 1;
	shf.r.wrap.b32 	%r11235, %r10836, %r10837, 1;
	mov.b64 	%rd7026, {%r11235, %r11234};
	shf.r.wrap.b32 	%r11236, %r10837, %r10836, 8;
	shf.r.wrap.b32 	%r11237, %r10836, %r10837, 8;
	mov.b64 	%rd7027, {%r11237, %r11236};
	shr.u64 	%rd7028, %rd6438, 7;
	xor.b64  	%rd7029, %rd7026, %rd7028;
	xor.b64  	%rd7030, %rd7029, %rd7027;
	add.s64 	%rd7031, %rd6942, %rd6425;
	add.s64 	%rd7032, %rd7031, %rd7025;
	add.s64 	%rd7033, %rd7032, %rd7030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11238,%dummy}, %rd7020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11239}, %rd7020;
	}
	shf.r.wrap.b32 	%r11240, %r11239, %r11238, 19;
	shf.r.wrap.b32 	%r11241, %r11238, %r11239, 19;
	mov.b64 	%rd7034, {%r11241, %r11240};
	shf.l.wrap.b32 	%r11242, %r11238, %r11239, 3;
	shf.l.wrap.b32 	%r11243, %r11239, %r11238, 3;
	mov.b64 	%rd7035, {%r11243, %r11242};
	shr.u64 	%rd7036, %rd7020, 6;
	xor.b64  	%rd7037, %rd7034, %rd7036;
	xor.b64  	%rd7038, %rd7037, %rd7035;
	shf.r.wrap.b32 	%r11244, %r10849, %r10848, 1;
	shf.r.wrap.b32 	%r11245, %r10848, %r10849, 1;
	mov.b64 	%rd7039, {%r11245, %r11244};
	shf.r.wrap.b32 	%r11246, %r10849, %r10848, 8;
	shf.r.wrap.b32 	%r11247, %r10848, %r10849, 8;
	mov.b64 	%rd7040, {%r11247, %r11246};
	shr.u64 	%rd7041, %rd6451, 7;
	xor.b64  	%rd7042, %rd7039, %rd7041;
	xor.b64  	%rd7043, %rd7042, %rd7040;
	add.s64 	%rd7044, %rd6955, %rd6438;
	add.s64 	%rd7045, %rd7044, %rd7038;
	add.s64 	%rd7046, %rd7045, %rd7043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11248,%dummy}, %rd7033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11249}, %rd7033;
	}
	shf.r.wrap.b32 	%r11250, %r11249, %r11248, 19;
	shf.r.wrap.b32 	%r11251, %r11248, %r11249, 19;
	mov.b64 	%rd7047, {%r11251, %r11250};
	shf.l.wrap.b32 	%r11252, %r11248, %r11249, 3;
	shf.l.wrap.b32 	%r11253, %r11249, %r11248, 3;
	mov.b64 	%rd7048, {%r11253, %r11252};
	shr.u64 	%rd7049, %rd7033, 6;
	xor.b64  	%rd7050, %rd7047, %rd7049;
	xor.b64  	%rd7051, %rd7050, %rd7048;
	shf.r.wrap.b32 	%r11254, %r10861, %r10860, 1;
	shf.r.wrap.b32 	%r11255, %r10860, %r10861, 1;
	mov.b64 	%rd7052, {%r11255, %r11254};
	shf.r.wrap.b32 	%r11256, %r10861, %r10860, 8;
	shf.r.wrap.b32 	%r11257, %r10860, %r10861, 8;
	mov.b64 	%rd7053, {%r11257, %r11256};
	shr.u64 	%rd7054, %rd6464, 7;
	xor.b64  	%rd7055, %rd7052, %rd7054;
	xor.b64  	%rd7056, %rd7055, %rd7053;
	add.s64 	%rd7057, %rd6968, %rd6451;
	add.s64 	%rd7058, %rd7057, %rd7051;
	add.s64 	%rd7059, %rd7058, %rd7056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11258,%dummy}, %rd7046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11259}, %rd7046;
	}
	shf.r.wrap.b32 	%r11260, %r11259, %r11258, 19;
	shf.r.wrap.b32 	%r11261, %r11258, %r11259, 19;
	mov.b64 	%rd7060, {%r11261, %r11260};
	shf.l.wrap.b32 	%r11262, %r11258, %r11259, 3;
	shf.l.wrap.b32 	%r11263, %r11259, %r11258, 3;
	mov.b64 	%rd7061, {%r11263, %r11262};
	shr.u64 	%rd7062, %rd7046, 6;
	xor.b64  	%rd7063, %rd7060, %rd7062;
	xor.b64  	%rd7064, %rd7063, %rd7061;
	shf.r.wrap.b32 	%r11264, %r10873, %r10872, 1;
	shf.r.wrap.b32 	%r11265, %r10872, %r10873, 1;
	mov.b64 	%rd7065, {%r11265, %r11264};
	shf.r.wrap.b32 	%r11266, %r10873, %r10872, 8;
	shf.r.wrap.b32 	%r11267, %r10872, %r10873, 8;
	mov.b64 	%rd7066, {%r11267, %r11266};
	shr.u64 	%rd7067, %rd6477, 7;
	xor.b64  	%rd7068, %rd7065, %rd7067;
	xor.b64  	%rd7069, %rd7068, %rd7066;
	add.s64 	%rd7070, %rd6981, %rd6464;
	add.s64 	%rd7071, %rd7070, %rd7064;
	add.s64 	%rd7072, %rd7071, %rd7069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11268,%dummy}, %rd7059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11269}, %rd7059;
	}
	shf.r.wrap.b32 	%r11270, %r11269, %r11268, 19;
	shf.r.wrap.b32 	%r11271, %r11268, %r11269, 19;
	mov.b64 	%rd7073, {%r11271, %r11270};
	shf.l.wrap.b32 	%r11272, %r11268, %r11269, 3;
	shf.l.wrap.b32 	%r11273, %r11269, %r11268, 3;
	mov.b64 	%rd7074, {%r11273, %r11272};
	shr.u64 	%rd7075, %rd7059, 6;
	xor.b64  	%rd7076, %rd7073, %rd7075;
	xor.b64  	%rd7077, %rd7076, %rd7074;
	shf.r.wrap.b32 	%r11274, %r10883, %r10882, 1;
	shf.r.wrap.b32 	%r11275, %r10882, %r10883, 1;
	mov.b64 	%rd7078, {%r11275, %r11274};
	shf.r.wrap.b32 	%r11276, %r10883, %r10882, 8;
	shf.r.wrap.b32 	%r11277, %r10882, %r10883, 8;
	mov.b64 	%rd7079, {%r11277, %r11276};
	shr.u64 	%rd7080, %rd6490, 7;
	xor.b64  	%rd7081, %rd7078, %rd7080;
	xor.b64  	%rd7082, %rd7081, %rd7079;
	add.s64 	%rd7083, %rd6994, %rd6477;
	add.s64 	%rd7084, %rd7083, %rd7077;
	add.s64 	%rd7085, %rd7084, %rd7082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11278,%dummy}, %rd7072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11279}, %rd7072;
	}
	shf.r.wrap.b32 	%r11280, %r11279, %r11278, 19;
	shf.r.wrap.b32 	%r11281, %r11278, %r11279, 19;
	mov.b64 	%rd7086, {%r11281, %r11280};
	shf.l.wrap.b32 	%r11282, %r11278, %r11279, 3;
	shf.l.wrap.b32 	%r11283, %r11279, %r11278, 3;
	mov.b64 	%rd7087, {%r11283, %r11282};
	shr.u64 	%rd7088, %rd7072, 6;
	xor.b64  	%rd7089, %rd7086, %rd7088;
	xor.b64  	%rd7090, %rd7089, %rd7087;
	shf.r.wrap.b32 	%r11284, %r10893, %r10892, 1;
	shf.r.wrap.b32 	%r11285, %r10892, %r10893, 1;
	mov.b64 	%rd7091, {%r11285, %r11284};
	shf.r.wrap.b32 	%r11286, %r10893, %r10892, 8;
	shf.r.wrap.b32 	%r11287, %r10892, %r10893, 8;
	mov.b64 	%rd7092, {%r11287, %r11286};
	shr.u64 	%rd7093, %rd6503, 7;
	xor.b64  	%rd7094, %rd7091, %rd7093;
	xor.b64  	%rd7095, %rd7094, %rd7092;
	add.s64 	%rd7096, %rd7007, %rd6490;
	add.s64 	%rd7097, %rd7096, %rd7090;
	add.s64 	%rd7098, %rd7097, %rd7095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11288,%dummy}, %rd7085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11289}, %rd7085;
	}
	shf.r.wrap.b32 	%r11290, %r11289, %r11288, 19;
	shf.r.wrap.b32 	%r11291, %r11288, %r11289, 19;
	mov.b64 	%rd7099, {%r11291, %r11290};
	shf.l.wrap.b32 	%r11292, %r11288, %r11289, 3;
	shf.l.wrap.b32 	%r11293, %r11289, %r11288, 3;
	mov.b64 	%rd7100, {%r11293, %r11292};
	shr.u64 	%rd7101, %rd7085, 6;
	xor.b64  	%rd7102, %rd7099, %rd7101;
	xor.b64  	%rd7103, %rd7102, %rd7100;
	shf.r.wrap.b32 	%r11294, %r11159, %r11158, 1;
	shf.r.wrap.b32 	%r11295, %r11158, %r11159, 1;
	mov.b64 	%rd7104, {%r11295, %r11294};
	shf.r.wrap.b32 	%r11296, %r11159, %r11158, 8;
	shf.r.wrap.b32 	%r11297, %r11158, %r11159, 8;
	mov.b64 	%rd7105, {%r11297, %r11296};
	shr.u64 	%rd7106, %rd6516, 7;
	xor.b64  	%rd7107, %rd7104, %rd7106;
	xor.b64  	%rd7108, %rd7107, %rd7105;
	add.s64 	%rd7109, %rd7020, %rd6503;
	add.s64 	%rd7110, %rd7109, %rd7103;
	add.s64 	%rd7111, %rd7110, %rd7108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11298,%dummy}, %rd7098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11299}, %rd7098;
	}
	shf.r.wrap.b32 	%r11300, %r11299, %r11298, 19;
	shf.r.wrap.b32 	%r11301, %r11298, %r11299, 19;
	mov.b64 	%rd7112, {%r11301, %r11300};
	shf.l.wrap.b32 	%r11302, %r11298, %r11299, 3;
	shf.l.wrap.b32 	%r11303, %r11299, %r11298, 3;
	mov.b64 	%rd7113, {%r11303, %r11302};
	shr.u64 	%rd7114, %rd7098, 6;
	xor.b64  	%rd7115, %rd7112, %rd7114;
	xor.b64  	%rd7116, %rd7115, %rd7113;
	shf.r.wrap.b32 	%r11304, %r11169, %r11168, 1;
	shf.r.wrap.b32 	%r11305, %r11168, %r11169, 1;
	mov.b64 	%rd7117, {%r11305, %r11304};
	shf.r.wrap.b32 	%r11306, %r11169, %r11168, 8;
	shf.r.wrap.b32 	%r11307, %r11168, %r11169, 8;
	mov.b64 	%rd7118, {%r11307, %r11306};
	shr.u64 	%rd7119, %rd6529, 7;
	xor.b64  	%rd7120, %rd7117, %rd7119;
	xor.b64  	%rd7121, %rd7120, %rd7118;
	add.s64 	%rd7122, %rd7033, %rd6516;
	add.s64 	%rd7123, %rd7122, %rd7116;
	add.s64 	%rd7124, %rd7123, %rd7121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11308,%dummy}, %rd7111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11309}, %rd7111;
	}
	shf.r.wrap.b32 	%r11310, %r11309, %r11308, 19;
	shf.r.wrap.b32 	%r11311, %r11308, %r11309, 19;
	mov.b64 	%rd7125, {%r11311, %r11310};
	shf.l.wrap.b32 	%r11312, %r11308, %r11309, 3;
	shf.l.wrap.b32 	%r11313, %r11309, %r11308, 3;
	mov.b64 	%rd7126, {%r11313, %r11312};
	shr.u64 	%rd7127, %rd7111, 6;
	xor.b64  	%rd7128, %rd7125, %rd7127;
	xor.b64  	%rd7129, %rd7128, %rd7126;
	shf.r.wrap.b32 	%r11314, %r11179, %r11178, 1;
	shf.r.wrap.b32 	%r11315, %r11178, %r11179, 1;
	mov.b64 	%rd7130, {%r11315, %r11314};
	shf.r.wrap.b32 	%r11316, %r11179, %r11178, 8;
	shf.r.wrap.b32 	%r11317, %r11178, %r11179, 8;
	mov.b64 	%rd7131, {%r11317, %r11316};
	shr.u64 	%rd7132, %rd6942, 7;
	xor.b64  	%rd7133, %rd7130, %rd7132;
	xor.b64  	%rd7134, %rd7133, %rd7131;
	add.s64 	%rd7135, %rd7046, %rd6529;
	add.s64 	%rd7136, %rd7135, %rd7129;
	add.s64 	%rd7137, %rd7136, %rd7134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11318,%dummy}, %rd6918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11319}, %rd6918;
	}
	shf.r.wrap.b32 	%r11320, %r11319, %r11318, 14;
	shf.r.wrap.b32 	%r11321, %r11318, %r11319, 14;
	mov.b64 	%rd7138, {%r11321, %r11320};
	shf.r.wrap.b32 	%r11322, %r11319, %r11318, 18;
	shf.r.wrap.b32 	%r11323, %r11318, %r11319, 18;
	mov.b64 	%rd7139, {%r11323, %r11322};
	xor.b64  	%rd7140, %rd7139, %rd7138;
	shf.l.wrap.b32 	%r11324, %r11318, %r11319, 23;
	shf.l.wrap.b32 	%r11325, %r11319, %r11318, 23;
	mov.b64 	%rd7141, {%r11325, %r11324};
	xor.b64  	%rd7142, %rd7140, %rd7141;
	xor.b64  	%rd7143, %rd6893, %rd6868;
	and.b64  	%rd7144, %rd7143, %rd6918;
	xor.b64  	%rd7145, %rd7144, %rd6868;
	add.s64 	%rd7146, %rd7145, %rd6843;
	add.s64 	%rd7147, %rd7146, %rd6942;
	ld.const.u64 	%rd7148, [k_sha512+256];
	add.s64 	%rd7149, %rd7147, %rd7148;
	add.s64 	%rd7150, %rd7149, %rd7142;
	add.s64 	%rd7151, %rd7150, %rd6854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11326,%dummy}, %rd6929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11327}, %rd6929;
	}
	shf.r.wrap.b32 	%r11328, %r11327, %r11326, 28;
	shf.r.wrap.b32 	%r11329, %r11326, %r11327, 28;
	mov.b64 	%rd7152, {%r11329, %r11328};
	shf.l.wrap.b32 	%r11330, %r11326, %r11327, 30;
	shf.l.wrap.b32 	%r11331, %r11327, %r11326, 30;
	mov.b64 	%rd7153, {%r11331, %r11330};
	xor.b64  	%rd7154, %rd7153, %rd7152;
	shf.l.wrap.b32 	%r11332, %r11326, %r11327, 25;
	shf.l.wrap.b32 	%r11333, %r11327, %r11326, 25;
	mov.b64 	%rd7155, {%r11333, %r11332};
	xor.b64  	%rd7156, %rd7154, %rd7155;
	xor.b64  	%rd7157, %rd6929, %rd6879;
	xor.b64  	%rd7158, %rd6929, %rd6904;
	and.b64  	%rd7159, %rd7158, %rd7157;
	xor.b64  	%rd7160, %rd7159, %rd6929;
	add.s64 	%rd7161, %rd7150, %rd7160;
	add.s64 	%rd7162, %rd7161, %rd7156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11334,%dummy}, %rd7151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11335}, %rd7151;
	}
	shf.r.wrap.b32 	%r11336, %r11335, %r11334, 14;
	shf.r.wrap.b32 	%r11337, %r11334, %r11335, 14;
	mov.b64 	%rd7163, {%r11337, %r11336};
	shf.r.wrap.b32 	%r11338, %r11335, %r11334, 18;
	shf.r.wrap.b32 	%r11339, %r11334, %r11335, 18;
	mov.b64 	%rd7164, {%r11339, %r11338};
	xor.b64  	%rd7165, %rd7164, %rd7163;
	shf.l.wrap.b32 	%r11340, %r11334, %r11335, 23;
	shf.l.wrap.b32 	%r11341, %r11335, %r11334, 23;
	mov.b64 	%rd7166, {%r11341, %r11340};
	xor.b64  	%rd7167, %rd7165, %rd7166;
	xor.b64  	%rd7168, %rd6918, %rd6893;
	and.b64  	%rd7169, %rd7151, %rd7168;
	xor.b64  	%rd7170, %rd7169, %rd6893;
	add.s64 	%rd7171, %rd6955, %rd6868;
	ld.const.u64 	%rd7172, [k_sha512+264];
	add.s64 	%rd7173, %rd7171, %rd7172;
	add.s64 	%rd7174, %rd7173, %rd7170;
	add.s64 	%rd7175, %rd7174, %rd7167;
	add.s64 	%rd7176, %rd7175, %rd6879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11342,%dummy}, %rd7162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11343}, %rd7162;
	}
	shf.r.wrap.b32 	%r11344, %r11343, %r11342, 28;
	shf.r.wrap.b32 	%r11345, %r11342, %r11343, 28;
	mov.b64 	%rd7177, {%r11345, %r11344};
	shf.l.wrap.b32 	%r11346, %r11342, %r11343, 30;
	shf.l.wrap.b32 	%r11347, %r11343, %r11342, 30;
	mov.b64 	%rd7178, {%r11347, %r11346};
	xor.b64  	%rd7179, %rd7178, %rd7177;
	shf.l.wrap.b32 	%r11348, %r11342, %r11343, 25;
	shf.l.wrap.b32 	%r11349, %r11343, %r11342, 25;
	mov.b64 	%rd7180, {%r11349, %r11348};
	xor.b64  	%rd7181, %rd7179, %rd7180;
	xor.b64  	%rd7182, %rd7162, %rd6904;
	xor.b64  	%rd7183, %rd7162, %rd6929;
	and.b64  	%rd7184, %rd7183, %rd7182;
	xor.b64  	%rd7185, %rd7184, %rd7162;
	add.s64 	%rd7186, %rd7175, %rd7185;
	add.s64 	%rd7187, %rd7186, %rd7181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11350,%dummy}, %rd7176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11351}, %rd7176;
	}
	shf.r.wrap.b32 	%r11352, %r11351, %r11350, 14;
	shf.r.wrap.b32 	%r11353, %r11350, %r11351, 14;
	mov.b64 	%rd7188, {%r11353, %r11352};
	shf.r.wrap.b32 	%r11354, %r11351, %r11350, 18;
	shf.r.wrap.b32 	%r11355, %r11350, %r11351, 18;
	mov.b64 	%rd7189, {%r11355, %r11354};
	xor.b64  	%rd7190, %rd7189, %rd7188;
	shf.l.wrap.b32 	%r11356, %r11350, %r11351, 23;
	shf.l.wrap.b32 	%r11357, %r11351, %r11350, 23;
	mov.b64 	%rd7191, {%r11357, %r11356};
	xor.b64  	%rd7192, %rd7190, %rd7191;
	xor.b64  	%rd7193, %rd7151, %rd6918;
	and.b64  	%rd7194, %rd7176, %rd7193;
	xor.b64  	%rd7195, %rd7194, %rd6918;
	add.s64 	%rd7196, %rd6968, %rd6893;
	ld.const.u64 	%rd7197, [k_sha512+272];
	add.s64 	%rd7198, %rd7196, %rd7197;
	add.s64 	%rd7199, %rd7198, %rd7195;
	add.s64 	%rd7200, %rd7199, %rd7192;
	add.s64 	%rd7201, %rd7200, %rd6904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11358,%dummy}, %rd7187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11359}, %rd7187;
	}
	shf.r.wrap.b32 	%r11360, %r11359, %r11358, 28;
	shf.r.wrap.b32 	%r11361, %r11358, %r11359, 28;
	mov.b64 	%rd7202, {%r11361, %r11360};
	shf.l.wrap.b32 	%r11362, %r11358, %r11359, 30;
	shf.l.wrap.b32 	%r11363, %r11359, %r11358, 30;
	mov.b64 	%rd7203, {%r11363, %r11362};
	xor.b64  	%rd7204, %rd7203, %rd7202;
	shf.l.wrap.b32 	%r11364, %r11358, %r11359, 25;
	shf.l.wrap.b32 	%r11365, %r11359, %r11358, 25;
	mov.b64 	%rd7205, {%r11365, %r11364};
	xor.b64  	%rd7206, %rd7204, %rd7205;
	xor.b64  	%rd7207, %rd7187, %rd6929;
	xor.b64  	%rd7208, %rd7187, %rd7162;
	and.b64  	%rd7209, %rd7208, %rd7207;
	xor.b64  	%rd7210, %rd7209, %rd7187;
	add.s64 	%rd7211, %rd7200, %rd7210;
	add.s64 	%rd7212, %rd7211, %rd7206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11366,%dummy}, %rd7201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11367}, %rd7201;
	}
	shf.r.wrap.b32 	%r11368, %r11367, %r11366, 14;
	shf.r.wrap.b32 	%r11369, %r11366, %r11367, 14;
	mov.b64 	%rd7213, {%r11369, %r11368};
	shf.r.wrap.b32 	%r11370, %r11367, %r11366, 18;
	shf.r.wrap.b32 	%r11371, %r11366, %r11367, 18;
	mov.b64 	%rd7214, {%r11371, %r11370};
	xor.b64  	%rd7215, %rd7214, %rd7213;
	shf.l.wrap.b32 	%r11372, %r11366, %r11367, 23;
	shf.l.wrap.b32 	%r11373, %r11367, %r11366, 23;
	mov.b64 	%rd7216, {%r11373, %r11372};
	xor.b64  	%rd7217, %rd7215, %rd7216;
	xor.b64  	%rd7218, %rd7176, %rd7151;
	and.b64  	%rd7219, %rd7201, %rd7218;
	xor.b64  	%rd7220, %rd7219, %rd7151;
	add.s64 	%rd7221, %rd6981, %rd6918;
	ld.const.u64 	%rd7222, [k_sha512+280];
	add.s64 	%rd7223, %rd7221, %rd7222;
	add.s64 	%rd7224, %rd7223, %rd7220;
	add.s64 	%rd7225, %rd7224, %rd7217;
	add.s64 	%rd7226, %rd7225, %rd6929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11374,%dummy}, %rd7212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11375}, %rd7212;
	}
	shf.r.wrap.b32 	%r11376, %r11375, %r11374, 28;
	shf.r.wrap.b32 	%r11377, %r11374, %r11375, 28;
	mov.b64 	%rd7227, {%r11377, %r11376};
	shf.l.wrap.b32 	%r11378, %r11374, %r11375, 30;
	shf.l.wrap.b32 	%r11379, %r11375, %r11374, 30;
	mov.b64 	%rd7228, {%r11379, %r11378};
	xor.b64  	%rd7229, %rd7228, %rd7227;
	shf.l.wrap.b32 	%r11380, %r11374, %r11375, 25;
	shf.l.wrap.b32 	%r11381, %r11375, %r11374, 25;
	mov.b64 	%rd7230, {%r11381, %r11380};
	xor.b64  	%rd7231, %rd7229, %rd7230;
	xor.b64  	%rd7232, %rd7212, %rd7162;
	xor.b64  	%rd7233, %rd7212, %rd7187;
	and.b64  	%rd7234, %rd7233, %rd7232;
	xor.b64  	%rd7235, %rd7234, %rd7212;
	add.s64 	%rd7236, %rd7225, %rd7235;
	add.s64 	%rd7237, %rd7236, %rd7231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11382,%dummy}, %rd7226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11383}, %rd7226;
	}
	shf.r.wrap.b32 	%r11384, %r11383, %r11382, 14;
	shf.r.wrap.b32 	%r11385, %r11382, %r11383, 14;
	mov.b64 	%rd7238, {%r11385, %r11384};
	shf.r.wrap.b32 	%r11386, %r11383, %r11382, 18;
	shf.r.wrap.b32 	%r11387, %r11382, %r11383, 18;
	mov.b64 	%rd7239, {%r11387, %r11386};
	xor.b64  	%rd7240, %rd7239, %rd7238;
	shf.l.wrap.b32 	%r11388, %r11382, %r11383, 23;
	shf.l.wrap.b32 	%r11389, %r11383, %r11382, 23;
	mov.b64 	%rd7241, {%r11389, %r11388};
	xor.b64  	%rd7242, %rd7240, %rd7241;
	xor.b64  	%rd7243, %rd7201, %rd7176;
	and.b64  	%rd7244, %rd7226, %rd7243;
	xor.b64  	%rd7245, %rd7244, %rd7176;
	add.s64 	%rd7246, %rd7151, %rd6994;
	ld.const.u64 	%rd7247, [k_sha512+288];
	add.s64 	%rd7248, %rd7246, %rd7247;
	add.s64 	%rd7249, %rd7248, %rd7245;
	add.s64 	%rd7250, %rd7249, %rd7242;
	add.s64 	%rd7251, %rd7250, %rd7162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11390,%dummy}, %rd7237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11391}, %rd7237;
	}
	shf.r.wrap.b32 	%r11392, %r11391, %r11390, 28;
	shf.r.wrap.b32 	%r11393, %r11390, %r11391, 28;
	mov.b64 	%rd7252, {%r11393, %r11392};
	shf.l.wrap.b32 	%r11394, %r11390, %r11391, 30;
	shf.l.wrap.b32 	%r11395, %r11391, %r11390, 30;
	mov.b64 	%rd7253, {%r11395, %r11394};
	xor.b64  	%rd7254, %rd7253, %rd7252;
	shf.l.wrap.b32 	%r11396, %r11390, %r11391, 25;
	shf.l.wrap.b32 	%r11397, %r11391, %r11390, 25;
	mov.b64 	%rd7255, {%r11397, %r11396};
	xor.b64  	%rd7256, %rd7254, %rd7255;
	xor.b64  	%rd7257, %rd7237, %rd7187;
	xor.b64  	%rd7258, %rd7237, %rd7212;
	and.b64  	%rd7259, %rd7258, %rd7257;
	xor.b64  	%rd7260, %rd7259, %rd7237;
	add.s64 	%rd7261, %rd7250, %rd7260;
	add.s64 	%rd7262, %rd7261, %rd7256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11398,%dummy}, %rd7251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11399}, %rd7251;
	}
	shf.r.wrap.b32 	%r11400, %r11399, %r11398, 14;
	shf.r.wrap.b32 	%r11401, %r11398, %r11399, 14;
	mov.b64 	%rd7263, {%r11401, %r11400};
	shf.r.wrap.b32 	%r11402, %r11399, %r11398, 18;
	shf.r.wrap.b32 	%r11403, %r11398, %r11399, 18;
	mov.b64 	%rd7264, {%r11403, %r11402};
	xor.b64  	%rd7265, %rd7264, %rd7263;
	shf.l.wrap.b32 	%r11404, %r11398, %r11399, 23;
	shf.l.wrap.b32 	%r11405, %r11399, %r11398, 23;
	mov.b64 	%rd7266, {%r11405, %r11404};
	xor.b64  	%rd7267, %rd7265, %rd7266;
	xor.b64  	%rd7268, %rd7226, %rd7201;
	and.b64  	%rd7269, %rd7251, %rd7268;
	xor.b64  	%rd7270, %rd7269, %rd7201;
	add.s64 	%rd7271, %rd7176, %rd7007;
	ld.const.u64 	%rd7272, [k_sha512+296];
	add.s64 	%rd7273, %rd7271, %rd7272;
	add.s64 	%rd7274, %rd7273, %rd7270;
	add.s64 	%rd7275, %rd7274, %rd7267;
	add.s64 	%rd7276, %rd7275, %rd7187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11406,%dummy}, %rd7262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11407}, %rd7262;
	}
	shf.r.wrap.b32 	%r11408, %r11407, %r11406, 28;
	shf.r.wrap.b32 	%r11409, %r11406, %r11407, 28;
	mov.b64 	%rd7277, {%r11409, %r11408};
	shf.l.wrap.b32 	%r11410, %r11406, %r11407, 30;
	shf.l.wrap.b32 	%r11411, %r11407, %r11406, 30;
	mov.b64 	%rd7278, {%r11411, %r11410};
	xor.b64  	%rd7279, %rd7278, %rd7277;
	shf.l.wrap.b32 	%r11412, %r11406, %r11407, 25;
	shf.l.wrap.b32 	%r11413, %r11407, %r11406, 25;
	mov.b64 	%rd7280, {%r11413, %r11412};
	xor.b64  	%rd7281, %rd7279, %rd7280;
	xor.b64  	%rd7282, %rd7262, %rd7212;
	xor.b64  	%rd7283, %rd7262, %rd7237;
	and.b64  	%rd7284, %rd7283, %rd7282;
	xor.b64  	%rd7285, %rd7284, %rd7262;
	add.s64 	%rd7286, %rd7275, %rd7285;
	add.s64 	%rd7287, %rd7286, %rd7281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11414,%dummy}, %rd7276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11415}, %rd7276;
	}
	shf.r.wrap.b32 	%r11416, %r11415, %r11414, 14;
	shf.r.wrap.b32 	%r11417, %r11414, %r11415, 14;
	mov.b64 	%rd7288, {%r11417, %r11416};
	shf.r.wrap.b32 	%r11418, %r11415, %r11414, 18;
	shf.r.wrap.b32 	%r11419, %r11414, %r11415, 18;
	mov.b64 	%rd7289, {%r11419, %r11418};
	xor.b64  	%rd7290, %rd7289, %rd7288;
	shf.l.wrap.b32 	%r11420, %r11414, %r11415, 23;
	shf.l.wrap.b32 	%r11421, %r11415, %r11414, 23;
	mov.b64 	%rd7291, {%r11421, %r11420};
	xor.b64  	%rd7292, %rd7290, %rd7291;
	xor.b64  	%rd7293, %rd7251, %rd7226;
	and.b64  	%rd7294, %rd7276, %rd7293;
	xor.b64  	%rd7295, %rd7294, %rd7226;
	add.s64 	%rd7296, %rd7201, %rd7020;
	ld.const.u64 	%rd7297, [k_sha512+304];
	add.s64 	%rd7298, %rd7296, %rd7297;
	add.s64 	%rd7299, %rd7298, %rd7295;
	add.s64 	%rd7300, %rd7299, %rd7292;
	add.s64 	%rd7301, %rd7300, %rd7212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11422,%dummy}, %rd7287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11423}, %rd7287;
	}
	shf.r.wrap.b32 	%r11424, %r11423, %r11422, 28;
	shf.r.wrap.b32 	%r11425, %r11422, %r11423, 28;
	mov.b64 	%rd7302, {%r11425, %r11424};
	shf.l.wrap.b32 	%r11426, %r11422, %r11423, 30;
	shf.l.wrap.b32 	%r11427, %r11423, %r11422, 30;
	mov.b64 	%rd7303, {%r11427, %r11426};
	xor.b64  	%rd7304, %rd7303, %rd7302;
	shf.l.wrap.b32 	%r11428, %r11422, %r11423, 25;
	shf.l.wrap.b32 	%r11429, %r11423, %r11422, 25;
	mov.b64 	%rd7305, {%r11429, %r11428};
	xor.b64  	%rd7306, %rd7304, %rd7305;
	xor.b64  	%rd7307, %rd7287, %rd7237;
	xor.b64  	%rd7308, %rd7287, %rd7262;
	and.b64  	%rd7309, %rd7308, %rd7307;
	xor.b64  	%rd7310, %rd7309, %rd7287;
	add.s64 	%rd7311, %rd7300, %rd7310;
	add.s64 	%rd7312, %rd7311, %rd7306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11430,%dummy}, %rd7301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11431}, %rd7301;
	}
	shf.r.wrap.b32 	%r11432, %r11431, %r11430, 14;
	shf.r.wrap.b32 	%r11433, %r11430, %r11431, 14;
	mov.b64 	%rd7313, {%r11433, %r11432};
	shf.r.wrap.b32 	%r11434, %r11431, %r11430, 18;
	shf.r.wrap.b32 	%r11435, %r11430, %r11431, 18;
	mov.b64 	%rd7314, {%r11435, %r11434};
	xor.b64  	%rd7315, %rd7314, %rd7313;
	shf.l.wrap.b32 	%r11436, %r11430, %r11431, 23;
	shf.l.wrap.b32 	%r11437, %r11431, %r11430, 23;
	mov.b64 	%rd7316, {%r11437, %r11436};
	xor.b64  	%rd7317, %rd7315, %rd7316;
	xor.b64  	%rd7318, %rd7276, %rd7251;
	and.b64  	%rd7319, %rd7301, %rd7318;
	xor.b64  	%rd7320, %rd7319, %rd7251;
	add.s64 	%rd7321, %rd7226, %rd7033;
	ld.const.u64 	%rd7322, [k_sha512+312];
	add.s64 	%rd7323, %rd7321, %rd7322;
	add.s64 	%rd7324, %rd7323, %rd7320;
	add.s64 	%rd7325, %rd7324, %rd7317;
	add.s64 	%rd7326, %rd7325, %rd7237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11438,%dummy}, %rd7312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11439}, %rd7312;
	}
	shf.r.wrap.b32 	%r11440, %r11439, %r11438, 28;
	shf.r.wrap.b32 	%r11441, %r11438, %r11439, 28;
	mov.b64 	%rd7327, {%r11441, %r11440};
	shf.l.wrap.b32 	%r11442, %r11438, %r11439, 30;
	shf.l.wrap.b32 	%r11443, %r11439, %r11438, 30;
	mov.b64 	%rd7328, {%r11443, %r11442};
	xor.b64  	%rd7329, %rd7328, %rd7327;
	shf.l.wrap.b32 	%r11444, %r11438, %r11439, 25;
	shf.l.wrap.b32 	%r11445, %r11439, %r11438, 25;
	mov.b64 	%rd7330, {%r11445, %r11444};
	xor.b64  	%rd7331, %rd7329, %rd7330;
	xor.b64  	%rd7332, %rd7312, %rd7262;
	xor.b64  	%rd7333, %rd7312, %rd7287;
	and.b64  	%rd7334, %rd7333, %rd7332;
	xor.b64  	%rd7335, %rd7334, %rd7312;
	add.s64 	%rd7336, %rd7325, %rd7335;
	add.s64 	%rd7337, %rd7336, %rd7331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11446,%dummy}, %rd7326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11447}, %rd7326;
	}
	shf.r.wrap.b32 	%r11448, %r11447, %r11446, 14;
	shf.r.wrap.b32 	%r11449, %r11446, %r11447, 14;
	mov.b64 	%rd7338, {%r11449, %r11448};
	shf.r.wrap.b32 	%r11450, %r11447, %r11446, 18;
	shf.r.wrap.b32 	%r11451, %r11446, %r11447, 18;
	mov.b64 	%rd7339, {%r11451, %r11450};
	xor.b64  	%rd7340, %rd7339, %rd7338;
	shf.l.wrap.b32 	%r11452, %r11446, %r11447, 23;
	shf.l.wrap.b32 	%r11453, %r11447, %r11446, 23;
	mov.b64 	%rd7341, {%r11453, %r11452};
	xor.b64  	%rd7342, %rd7340, %rd7341;
	xor.b64  	%rd7343, %rd7301, %rd7276;
	and.b64  	%rd7344, %rd7326, %rd7343;
	xor.b64  	%rd7345, %rd7344, %rd7276;
	add.s64 	%rd7346, %rd7251, %rd7046;
	ld.const.u64 	%rd7347, [k_sha512+320];
	add.s64 	%rd7348, %rd7346, %rd7347;
	add.s64 	%rd7349, %rd7348, %rd7345;
	add.s64 	%rd7350, %rd7349, %rd7342;
	add.s64 	%rd7351, %rd7350, %rd7262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11454,%dummy}, %rd7337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11455}, %rd7337;
	}
	shf.r.wrap.b32 	%r11456, %r11455, %r11454, 28;
	shf.r.wrap.b32 	%r11457, %r11454, %r11455, 28;
	mov.b64 	%rd7352, {%r11457, %r11456};
	shf.l.wrap.b32 	%r11458, %r11454, %r11455, 30;
	shf.l.wrap.b32 	%r11459, %r11455, %r11454, 30;
	mov.b64 	%rd7353, {%r11459, %r11458};
	xor.b64  	%rd7354, %rd7353, %rd7352;
	shf.l.wrap.b32 	%r11460, %r11454, %r11455, 25;
	shf.l.wrap.b32 	%r11461, %r11455, %r11454, 25;
	mov.b64 	%rd7355, {%r11461, %r11460};
	xor.b64  	%rd7356, %rd7354, %rd7355;
	xor.b64  	%rd7357, %rd7337, %rd7287;
	xor.b64  	%rd7358, %rd7337, %rd7312;
	and.b64  	%rd7359, %rd7358, %rd7357;
	xor.b64  	%rd7360, %rd7359, %rd7337;
	add.s64 	%rd7361, %rd7350, %rd7360;
	add.s64 	%rd7362, %rd7361, %rd7356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11462,%dummy}, %rd7351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11463}, %rd7351;
	}
	shf.r.wrap.b32 	%r11464, %r11463, %r11462, 14;
	shf.r.wrap.b32 	%r11465, %r11462, %r11463, 14;
	mov.b64 	%rd7363, {%r11465, %r11464};
	shf.r.wrap.b32 	%r11466, %r11463, %r11462, 18;
	shf.r.wrap.b32 	%r11467, %r11462, %r11463, 18;
	mov.b64 	%rd7364, {%r11467, %r11466};
	xor.b64  	%rd7365, %rd7364, %rd7363;
	shf.l.wrap.b32 	%r11468, %r11462, %r11463, 23;
	shf.l.wrap.b32 	%r11469, %r11463, %r11462, 23;
	mov.b64 	%rd7366, {%r11469, %r11468};
	xor.b64  	%rd7367, %rd7365, %rd7366;
	xor.b64  	%rd7368, %rd7326, %rd7301;
	and.b64  	%rd7369, %rd7351, %rd7368;
	xor.b64  	%rd7370, %rd7369, %rd7301;
	add.s64 	%rd7371, %rd7276, %rd7059;
	ld.const.u64 	%rd7372, [k_sha512+328];
	add.s64 	%rd7373, %rd7371, %rd7372;
	add.s64 	%rd7374, %rd7373, %rd7370;
	add.s64 	%rd7375, %rd7374, %rd7367;
	add.s64 	%rd7376, %rd7375, %rd7287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11470,%dummy}, %rd7362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11471}, %rd7362;
	}
	shf.r.wrap.b32 	%r11472, %r11471, %r11470, 28;
	shf.r.wrap.b32 	%r11473, %r11470, %r11471, 28;
	mov.b64 	%rd7377, {%r11473, %r11472};
	shf.l.wrap.b32 	%r11474, %r11470, %r11471, 30;
	shf.l.wrap.b32 	%r11475, %r11471, %r11470, 30;
	mov.b64 	%rd7378, {%r11475, %r11474};
	xor.b64  	%rd7379, %rd7378, %rd7377;
	shf.l.wrap.b32 	%r11476, %r11470, %r11471, 25;
	shf.l.wrap.b32 	%r11477, %r11471, %r11470, 25;
	mov.b64 	%rd7380, {%r11477, %r11476};
	xor.b64  	%rd7381, %rd7379, %rd7380;
	xor.b64  	%rd7382, %rd7362, %rd7312;
	xor.b64  	%rd7383, %rd7362, %rd7337;
	and.b64  	%rd7384, %rd7383, %rd7382;
	xor.b64  	%rd7385, %rd7384, %rd7362;
	add.s64 	%rd7386, %rd7375, %rd7385;
	add.s64 	%rd7387, %rd7386, %rd7381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11478,%dummy}, %rd7376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11479}, %rd7376;
	}
	shf.r.wrap.b32 	%r11480, %r11479, %r11478, 14;
	shf.r.wrap.b32 	%r11481, %r11478, %r11479, 14;
	mov.b64 	%rd7388, {%r11481, %r11480};
	shf.r.wrap.b32 	%r11482, %r11479, %r11478, 18;
	shf.r.wrap.b32 	%r11483, %r11478, %r11479, 18;
	mov.b64 	%rd7389, {%r11483, %r11482};
	xor.b64  	%rd7390, %rd7389, %rd7388;
	shf.l.wrap.b32 	%r11484, %r11478, %r11479, 23;
	shf.l.wrap.b32 	%r11485, %r11479, %r11478, 23;
	mov.b64 	%rd7391, {%r11485, %r11484};
	xor.b64  	%rd7392, %rd7390, %rd7391;
	xor.b64  	%rd7393, %rd7351, %rd7326;
	and.b64  	%rd7394, %rd7376, %rd7393;
	xor.b64  	%rd7395, %rd7394, %rd7326;
	add.s64 	%rd7396, %rd7301, %rd7072;
	ld.const.u64 	%rd7397, [k_sha512+336];
	add.s64 	%rd7398, %rd7396, %rd7397;
	add.s64 	%rd7399, %rd7398, %rd7395;
	add.s64 	%rd7400, %rd7399, %rd7392;
	add.s64 	%rd7401, %rd7400, %rd7312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11486,%dummy}, %rd7387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11487}, %rd7387;
	}
	shf.r.wrap.b32 	%r11488, %r11487, %r11486, 28;
	shf.r.wrap.b32 	%r11489, %r11486, %r11487, 28;
	mov.b64 	%rd7402, {%r11489, %r11488};
	shf.l.wrap.b32 	%r11490, %r11486, %r11487, 30;
	shf.l.wrap.b32 	%r11491, %r11487, %r11486, 30;
	mov.b64 	%rd7403, {%r11491, %r11490};
	xor.b64  	%rd7404, %rd7403, %rd7402;
	shf.l.wrap.b32 	%r11492, %r11486, %r11487, 25;
	shf.l.wrap.b32 	%r11493, %r11487, %r11486, 25;
	mov.b64 	%rd7405, {%r11493, %r11492};
	xor.b64  	%rd7406, %rd7404, %rd7405;
	xor.b64  	%rd7407, %rd7387, %rd7337;
	xor.b64  	%rd7408, %rd7387, %rd7362;
	and.b64  	%rd7409, %rd7408, %rd7407;
	xor.b64  	%rd7410, %rd7409, %rd7387;
	add.s64 	%rd7411, %rd7400, %rd7410;
	add.s64 	%rd7412, %rd7411, %rd7406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11494,%dummy}, %rd7401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11495}, %rd7401;
	}
	shf.r.wrap.b32 	%r11496, %r11495, %r11494, 14;
	shf.r.wrap.b32 	%r11497, %r11494, %r11495, 14;
	mov.b64 	%rd7413, {%r11497, %r11496};
	shf.r.wrap.b32 	%r11498, %r11495, %r11494, 18;
	shf.r.wrap.b32 	%r11499, %r11494, %r11495, 18;
	mov.b64 	%rd7414, {%r11499, %r11498};
	xor.b64  	%rd7415, %rd7414, %rd7413;
	shf.l.wrap.b32 	%r11500, %r11494, %r11495, 23;
	shf.l.wrap.b32 	%r11501, %r11495, %r11494, 23;
	mov.b64 	%rd7416, {%r11501, %r11500};
	xor.b64  	%rd7417, %rd7415, %rd7416;
	xor.b64  	%rd7418, %rd7376, %rd7351;
	and.b64  	%rd7419, %rd7401, %rd7418;
	xor.b64  	%rd7420, %rd7419, %rd7351;
	add.s64 	%rd7421, %rd7326, %rd7085;
	ld.const.u64 	%rd7422, [k_sha512+344];
	add.s64 	%rd7423, %rd7421, %rd7422;
	add.s64 	%rd7424, %rd7423, %rd7420;
	add.s64 	%rd7425, %rd7424, %rd7417;
	add.s64 	%rd7426, %rd7425, %rd7337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11502,%dummy}, %rd7412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11503}, %rd7412;
	}
	shf.r.wrap.b32 	%r11504, %r11503, %r11502, 28;
	shf.r.wrap.b32 	%r11505, %r11502, %r11503, 28;
	mov.b64 	%rd7427, {%r11505, %r11504};
	shf.l.wrap.b32 	%r11506, %r11502, %r11503, 30;
	shf.l.wrap.b32 	%r11507, %r11503, %r11502, 30;
	mov.b64 	%rd7428, {%r11507, %r11506};
	xor.b64  	%rd7429, %rd7428, %rd7427;
	shf.l.wrap.b32 	%r11508, %r11502, %r11503, 25;
	shf.l.wrap.b32 	%r11509, %r11503, %r11502, 25;
	mov.b64 	%rd7430, {%r11509, %r11508};
	xor.b64  	%rd7431, %rd7429, %rd7430;
	xor.b64  	%rd7432, %rd7412, %rd7362;
	xor.b64  	%rd7433, %rd7412, %rd7387;
	and.b64  	%rd7434, %rd7433, %rd7432;
	xor.b64  	%rd7435, %rd7434, %rd7412;
	add.s64 	%rd7436, %rd7425, %rd7435;
	add.s64 	%rd7437, %rd7436, %rd7431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11510,%dummy}, %rd7426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11511}, %rd7426;
	}
	shf.r.wrap.b32 	%r11512, %r11511, %r11510, 14;
	shf.r.wrap.b32 	%r11513, %r11510, %r11511, 14;
	mov.b64 	%rd7438, {%r11513, %r11512};
	shf.r.wrap.b32 	%r11514, %r11511, %r11510, 18;
	shf.r.wrap.b32 	%r11515, %r11510, %r11511, 18;
	mov.b64 	%rd7439, {%r11515, %r11514};
	xor.b64  	%rd7440, %rd7439, %rd7438;
	shf.l.wrap.b32 	%r11516, %r11510, %r11511, 23;
	shf.l.wrap.b32 	%r11517, %r11511, %r11510, 23;
	mov.b64 	%rd7441, {%r11517, %r11516};
	xor.b64  	%rd7442, %rd7440, %rd7441;
	xor.b64  	%rd7443, %rd7401, %rd7376;
	and.b64  	%rd7444, %rd7426, %rd7443;
	xor.b64  	%rd7445, %rd7444, %rd7376;
	add.s64 	%rd7446, %rd7351, %rd7098;
	ld.const.u64 	%rd7447, [k_sha512+352];
	add.s64 	%rd7448, %rd7446, %rd7447;
	add.s64 	%rd7449, %rd7448, %rd7445;
	add.s64 	%rd7450, %rd7449, %rd7442;
	add.s64 	%rd7451, %rd7450, %rd7362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11518,%dummy}, %rd7437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11519}, %rd7437;
	}
	shf.r.wrap.b32 	%r11520, %r11519, %r11518, 28;
	shf.r.wrap.b32 	%r11521, %r11518, %r11519, 28;
	mov.b64 	%rd7452, {%r11521, %r11520};
	shf.l.wrap.b32 	%r11522, %r11518, %r11519, 30;
	shf.l.wrap.b32 	%r11523, %r11519, %r11518, 30;
	mov.b64 	%rd7453, {%r11523, %r11522};
	xor.b64  	%rd7454, %rd7453, %rd7452;
	shf.l.wrap.b32 	%r11524, %r11518, %r11519, 25;
	shf.l.wrap.b32 	%r11525, %r11519, %r11518, 25;
	mov.b64 	%rd7455, {%r11525, %r11524};
	xor.b64  	%rd7456, %rd7454, %rd7455;
	xor.b64  	%rd7457, %rd7437, %rd7387;
	xor.b64  	%rd7458, %rd7437, %rd7412;
	and.b64  	%rd7459, %rd7458, %rd7457;
	xor.b64  	%rd7460, %rd7459, %rd7437;
	add.s64 	%rd7461, %rd7450, %rd7460;
	add.s64 	%rd7462, %rd7461, %rd7456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11526,%dummy}, %rd7451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11527}, %rd7451;
	}
	shf.r.wrap.b32 	%r11528, %r11527, %r11526, 14;
	shf.r.wrap.b32 	%r11529, %r11526, %r11527, 14;
	mov.b64 	%rd7463, {%r11529, %r11528};
	shf.r.wrap.b32 	%r11530, %r11527, %r11526, 18;
	shf.r.wrap.b32 	%r11531, %r11526, %r11527, 18;
	mov.b64 	%rd7464, {%r11531, %r11530};
	xor.b64  	%rd7465, %rd7464, %rd7463;
	shf.l.wrap.b32 	%r11532, %r11526, %r11527, 23;
	shf.l.wrap.b32 	%r11533, %r11527, %r11526, 23;
	mov.b64 	%rd7466, {%r11533, %r11532};
	xor.b64  	%rd7467, %rd7465, %rd7466;
	xor.b64  	%rd7468, %rd7426, %rd7401;
	and.b64  	%rd7469, %rd7451, %rd7468;
	xor.b64  	%rd7470, %rd7469, %rd7401;
	add.s64 	%rd7471, %rd7376, %rd7111;
	ld.const.u64 	%rd7472, [k_sha512+360];
	add.s64 	%rd7473, %rd7471, %rd7472;
	add.s64 	%rd7474, %rd7473, %rd7470;
	add.s64 	%rd7475, %rd7474, %rd7467;
	add.s64 	%rd7476, %rd7475, %rd7387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11534,%dummy}, %rd7462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11535}, %rd7462;
	}
	shf.r.wrap.b32 	%r11536, %r11535, %r11534, 28;
	shf.r.wrap.b32 	%r11537, %r11534, %r11535, 28;
	mov.b64 	%rd7477, {%r11537, %r11536};
	shf.l.wrap.b32 	%r11538, %r11534, %r11535, 30;
	shf.l.wrap.b32 	%r11539, %r11535, %r11534, 30;
	mov.b64 	%rd7478, {%r11539, %r11538};
	xor.b64  	%rd7479, %rd7478, %rd7477;
	shf.l.wrap.b32 	%r11540, %r11534, %r11535, 25;
	shf.l.wrap.b32 	%r11541, %r11535, %r11534, 25;
	mov.b64 	%rd7480, {%r11541, %r11540};
	xor.b64  	%rd7481, %rd7479, %rd7480;
	xor.b64  	%rd7482, %rd7462, %rd7412;
	xor.b64  	%rd7483, %rd7462, %rd7437;
	and.b64  	%rd7484, %rd7483, %rd7482;
	xor.b64  	%rd7485, %rd7484, %rd7462;
	add.s64 	%rd7486, %rd7475, %rd7485;
	add.s64 	%rd7487, %rd7486, %rd7481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11542,%dummy}, %rd7476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11543}, %rd7476;
	}
	shf.r.wrap.b32 	%r11544, %r11543, %r11542, 14;
	shf.r.wrap.b32 	%r11545, %r11542, %r11543, 14;
	mov.b64 	%rd7488, {%r11545, %r11544};
	shf.r.wrap.b32 	%r11546, %r11543, %r11542, 18;
	shf.r.wrap.b32 	%r11547, %r11542, %r11543, 18;
	mov.b64 	%rd7489, {%r11547, %r11546};
	xor.b64  	%rd7490, %rd7489, %rd7488;
	shf.l.wrap.b32 	%r11548, %r11542, %r11543, 23;
	shf.l.wrap.b32 	%r11549, %r11543, %r11542, 23;
	mov.b64 	%rd7491, {%r11549, %r11548};
	xor.b64  	%rd7492, %rd7490, %rd7491;
	xor.b64  	%rd7493, %rd7451, %rd7426;
	and.b64  	%rd7494, %rd7476, %rd7493;
	xor.b64  	%rd7495, %rd7494, %rd7426;
	add.s64 	%rd7496, %rd7401, %rd7124;
	ld.const.u64 	%rd7497, [k_sha512+368];
	add.s64 	%rd7498, %rd7496, %rd7497;
	add.s64 	%rd7499, %rd7498, %rd7495;
	add.s64 	%rd7500, %rd7499, %rd7492;
	add.s64 	%rd7501, %rd7500, %rd7412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11550,%dummy}, %rd7487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11551}, %rd7487;
	}
	shf.r.wrap.b32 	%r11552, %r11551, %r11550, 28;
	shf.r.wrap.b32 	%r11553, %r11550, %r11551, 28;
	mov.b64 	%rd7502, {%r11553, %r11552};
	shf.l.wrap.b32 	%r11554, %r11550, %r11551, 30;
	shf.l.wrap.b32 	%r11555, %r11551, %r11550, 30;
	mov.b64 	%rd7503, {%r11555, %r11554};
	xor.b64  	%rd7504, %rd7503, %rd7502;
	shf.l.wrap.b32 	%r11556, %r11550, %r11551, 25;
	shf.l.wrap.b32 	%r11557, %r11551, %r11550, 25;
	mov.b64 	%rd7505, {%r11557, %r11556};
	xor.b64  	%rd7506, %rd7504, %rd7505;
	xor.b64  	%rd7507, %rd7487, %rd7437;
	xor.b64  	%rd7508, %rd7487, %rd7462;
	and.b64  	%rd7509, %rd7508, %rd7507;
	xor.b64  	%rd7510, %rd7509, %rd7487;
	add.s64 	%rd7511, %rd7500, %rd7510;
	add.s64 	%rd7512, %rd7511, %rd7506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11558,%dummy}, %rd7501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11559}, %rd7501;
	}
	shf.r.wrap.b32 	%r11560, %r11559, %r11558, 14;
	shf.r.wrap.b32 	%r11561, %r11558, %r11559, 14;
	mov.b64 	%rd7513, {%r11561, %r11560};
	shf.r.wrap.b32 	%r11562, %r11559, %r11558, 18;
	shf.r.wrap.b32 	%r11563, %r11558, %r11559, 18;
	mov.b64 	%rd7514, {%r11563, %r11562};
	xor.b64  	%rd7515, %rd7514, %rd7513;
	shf.l.wrap.b32 	%r11564, %r11558, %r11559, 23;
	shf.l.wrap.b32 	%r11565, %r11559, %r11558, 23;
	mov.b64 	%rd7516, {%r11565, %r11564};
	xor.b64  	%rd7517, %rd7515, %rd7516;
	xor.b64  	%rd7518, %rd7476, %rd7451;
	and.b64  	%rd7519, %rd7501, %rd7518;
	xor.b64  	%rd7520, %rd7519, %rd7451;
	add.s64 	%rd7521, %rd7426, %rd7137;
	ld.const.u64 	%rd7522, [k_sha512+376];
	add.s64 	%rd7523, %rd7521, %rd7522;
	add.s64 	%rd7524, %rd7523, %rd7520;
	add.s64 	%rd7525, %rd7524, %rd7517;
	add.s64 	%rd7526, %rd7525, %rd7437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11566,%dummy}, %rd7512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11567}, %rd7512;
	}
	shf.r.wrap.b32 	%r11568, %r11567, %r11566, 28;
	shf.r.wrap.b32 	%r11569, %r11566, %r11567, 28;
	mov.b64 	%rd7527, {%r11569, %r11568};
	shf.l.wrap.b32 	%r11570, %r11566, %r11567, 30;
	shf.l.wrap.b32 	%r11571, %r11567, %r11566, 30;
	mov.b64 	%rd7528, {%r11571, %r11570};
	xor.b64  	%rd7529, %rd7528, %rd7527;
	shf.l.wrap.b32 	%r11572, %r11566, %r11567, 25;
	shf.l.wrap.b32 	%r11573, %r11567, %r11566, 25;
	mov.b64 	%rd7530, {%r11573, %r11572};
	xor.b64  	%rd7531, %rd7529, %rd7530;
	xor.b64  	%rd7532, %rd7512, %rd7462;
	xor.b64  	%rd7533, %rd7512, %rd7487;
	and.b64  	%rd7534, %rd7533, %rd7532;
	xor.b64  	%rd7535, %rd7534, %rd7512;
	add.s64 	%rd7536, %rd7525, %rd7535;
	add.s64 	%rd7537, %rd7536, %rd7531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11574,%dummy}, %rd7124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11575}, %rd7124;
	}
	shf.r.wrap.b32 	%r11576, %r11575, %r11574, 19;
	shf.r.wrap.b32 	%r11577, %r11574, %r11575, 19;
	mov.b64 	%rd7538, {%r11577, %r11576};
	shf.l.wrap.b32 	%r11578, %r11574, %r11575, 3;
	shf.l.wrap.b32 	%r11579, %r11575, %r11574, 3;
	mov.b64 	%rd7539, {%r11579, %r11578};
	shr.u64 	%rd7540, %rd7124, 6;
	xor.b64  	%rd7541, %rd7538, %rd7540;
	xor.b64  	%rd7542, %rd7541, %rd7539;
	shf.r.wrap.b32 	%r11580, %r11189, %r11188, 1;
	shf.r.wrap.b32 	%r11581, %r11188, %r11189, 1;
	mov.b64 	%rd7543, {%r11581, %r11580};
	shf.r.wrap.b32 	%r11582, %r11189, %r11188, 8;
	shf.r.wrap.b32 	%r11583, %r11188, %r11189, 8;
	mov.b64 	%rd7544, {%r11583, %r11582};
	shr.u64 	%rd7545, %rd6955, 7;
	xor.b64  	%rd7546, %rd7543, %rd7545;
	xor.b64  	%rd7547, %rd7546, %rd7544;
	add.s64 	%rd7548, %rd7059, %rd6942;
	add.s64 	%rd7549, %rd7548, %rd7542;
	add.s64 	%rd7550, %rd7549, %rd7547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11584,%dummy}, %rd7137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11585}, %rd7137;
	}
	shf.r.wrap.b32 	%r11586, %r11585, %r11584, 19;
	shf.r.wrap.b32 	%r11587, %r11584, %r11585, 19;
	mov.b64 	%rd7551, {%r11587, %r11586};
	shf.l.wrap.b32 	%r11588, %r11584, %r11585, 3;
	shf.l.wrap.b32 	%r11589, %r11585, %r11584, 3;
	mov.b64 	%rd7552, {%r11589, %r11588};
	shr.u64 	%rd7553, %rd7137, 6;
	xor.b64  	%rd7554, %rd7551, %rd7553;
	xor.b64  	%rd7555, %rd7554, %rd7552;
	shf.r.wrap.b32 	%r11590, %r11199, %r11198, 1;
	shf.r.wrap.b32 	%r11591, %r11198, %r11199, 1;
	mov.b64 	%rd7556, {%r11591, %r11590};
	shf.r.wrap.b32 	%r11592, %r11199, %r11198, 8;
	shf.r.wrap.b32 	%r11593, %r11198, %r11199, 8;
	mov.b64 	%rd7557, {%r11593, %r11592};
	shr.u64 	%rd7558, %rd6968, 7;
	xor.b64  	%rd7559, %rd7556, %rd7558;
	xor.b64  	%rd7560, %rd7559, %rd7557;
	add.s64 	%rd7561, %rd7072, %rd6955;
	add.s64 	%rd7562, %rd7561, %rd7555;
	add.s64 	%rd7563, %rd7562, %rd7560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11594,%dummy}, %rd7550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11595}, %rd7550;
	}
	shf.r.wrap.b32 	%r11596, %r11595, %r11594, 19;
	shf.r.wrap.b32 	%r11597, %r11594, %r11595, 19;
	mov.b64 	%rd7564, {%r11597, %r11596};
	shf.l.wrap.b32 	%r11598, %r11594, %r11595, 3;
	shf.l.wrap.b32 	%r11599, %r11595, %r11594, 3;
	mov.b64 	%rd7565, {%r11599, %r11598};
	shr.u64 	%rd7566, %rd7550, 6;
	xor.b64  	%rd7567, %rd7564, %rd7566;
	xor.b64  	%rd7568, %rd7567, %rd7565;
	shf.r.wrap.b32 	%r11600, %r11209, %r11208, 1;
	shf.r.wrap.b32 	%r11601, %r11208, %r11209, 1;
	mov.b64 	%rd7569, {%r11601, %r11600};
	shf.r.wrap.b32 	%r11602, %r11209, %r11208, 8;
	shf.r.wrap.b32 	%r11603, %r11208, %r11209, 8;
	mov.b64 	%rd7570, {%r11603, %r11602};
	shr.u64 	%rd7571, %rd6981, 7;
	xor.b64  	%rd7572, %rd7569, %rd7571;
	xor.b64  	%rd7573, %rd7572, %rd7570;
	add.s64 	%rd7574, %rd7085, %rd6968;
	add.s64 	%rd7575, %rd7574, %rd7568;
	add.s64 	%rd7576, %rd7575, %rd7573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11604,%dummy}, %rd7563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11605}, %rd7563;
	}
	shf.r.wrap.b32 	%r11606, %r11605, %r11604, 19;
	shf.r.wrap.b32 	%r11607, %r11604, %r11605, 19;
	mov.b64 	%rd7577, {%r11607, %r11606};
	shf.l.wrap.b32 	%r11608, %r11604, %r11605, 3;
	shf.l.wrap.b32 	%r11609, %r11605, %r11604, 3;
	mov.b64 	%rd7578, {%r11609, %r11608};
	shr.u64 	%rd7579, %rd7563, 6;
	xor.b64  	%rd7580, %rd7577, %rd7579;
	xor.b64  	%rd7581, %rd7580, %rd7578;
	shf.r.wrap.b32 	%r11610, %r11219, %r11218, 1;
	shf.r.wrap.b32 	%r11611, %r11218, %r11219, 1;
	mov.b64 	%rd7582, {%r11611, %r11610};
	shf.r.wrap.b32 	%r11612, %r11219, %r11218, 8;
	shf.r.wrap.b32 	%r11613, %r11218, %r11219, 8;
	mov.b64 	%rd7583, {%r11613, %r11612};
	shr.u64 	%rd7584, %rd6994, 7;
	xor.b64  	%rd7585, %rd7582, %rd7584;
	xor.b64  	%rd7586, %rd7585, %rd7583;
	add.s64 	%rd7587, %rd7098, %rd6981;
	add.s64 	%rd7588, %rd7587, %rd7581;
	add.s64 	%rd7589, %rd7588, %rd7586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11614,%dummy}, %rd7576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11615}, %rd7576;
	}
	shf.r.wrap.b32 	%r11616, %r11615, %r11614, 19;
	shf.r.wrap.b32 	%r11617, %r11614, %r11615, 19;
	mov.b64 	%rd7590, {%r11617, %r11616};
	shf.l.wrap.b32 	%r11618, %r11614, %r11615, 3;
	shf.l.wrap.b32 	%r11619, %r11615, %r11614, 3;
	mov.b64 	%rd7591, {%r11619, %r11618};
	shr.u64 	%rd7592, %rd7576, 6;
	xor.b64  	%rd7593, %rd7590, %rd7592;
	xor.b64  	%rd7594, %rd7593, %rd7591;
	shf.r.wrap.b32 	%r11620, %r11229, %r11228, 1;
	shf.r.wrap.b32 	%r11621, %r11228, %r11229, 1;
	mov.b64 	%rd7595, {%r11621, %r11620};
	shf.r.wrap.b32 	%r11622, %r11229, %r11228, 8;
	shf.r.wrap.b32 	%r11623, %r11228, %r11229, 8;
	mov.b64 	%rd7596, {%r11623, %r11622};
	shr.u64 	%rd7597, %rd7007, 7;
	xor.b64  	%rd7598, %rd7595, %rd7597;
	xor.b64  	%rd7599, %rd7598, %rd7596;
	add.s64 	%rd7600, %rd7111, %rd6994;
	add.s64 	%rd7601, %rd7600, %rd7594;
	add.s64 	%rd7602, %rd7601, %rd7599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11624,%dummy}, %rd7589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11625}, %rd7589;
	}
	shf.r.wrap.b32 	%r11626, %r11625, %r11624, 19;
	shf.r.wrap.b32 	%r11627, %r11624, %r11625, 19;
	mov.b64 	%rd7603, {%r11627, %r11626};
	shf.l.wrap.b32 	%r11628, %r11624, %r11625, 3;
	shf.l.wrap.b32 	%r11629, %r11625, %r11624, 3;
	mov.b64 	%rd7604, {%r11629, %r11628};
	shr.u64 	%rd7605, %rd7589, 6;
	xor.b64  	%rd7606, %rd7603, %rd7605;
	xor.b64  	%rd7607, %rd7606, %rd7604;
	shf.r.wrap.b32 	%r11630, %r11239, %r11238, 1;
	shf.r.wrap.b32 	%r11631, %r11238, %r11239, 1;
	mov.b64 	%rd7608, {%r11631, %r11630};
	shf.r.wrap.b32 	%r11632, %r11239, %r11238, 8;
	shf.r.wrap.b32 	%r11633, %r11238, %r11239, 8;
	mov.b64 	%rd7609, {%r11633, %r11632};
	shr.u64 	%rd7610, %rd7020, 7;
	xor.b64  	%rd7611, %rd7608, %rd7610;
	xor.b64  	%rd7612, %rd7611, %rd7609;
	add.s64 	%rd7613, %rd7124, %rd7007;
	add.s64 	%rd7614, %rd7613, %rd7607;
	add.s64 	%rd7615, %rd7614, %rd7612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11634,%dummy}, %rd7602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11635}, %rd7602;
	}
	shf.r.wrap.b32 	%r11636, %r11635, %r11634, 19;
	shf.r.wrap.b32 	%r11637, %r11634, %r11635, 19;
	mov.b64 	%rd7616, {%r11637, %r11636};
	shf.l.wrap.b32 	%r11638, %r11634, %r11635, 3;
	shf.l.wrap.b32 	%r11639, %r11635, %r11634, 3;
	mov.b64 	%rd7617, {%r11639, %r11638};
	shr.u64 	%rd7618, %rd7602, 6;
	xor.b64  	%rd7619, %rd7616, %rd7618;
	xor.b64  	%rd7620, %rd7619, %rd7617;
	shf.r.wrap.b32 	%r11640, %r11249, %r11248, 1;
	shf.r.wrap.b32 	%r11641, %r11248, %r11249, 1;
	mov.b64 	%rd7621, {%r11641, %r11640};
	shf.r.wrap.b32 	%r11642, %r11249, %r11248, 8;
	shf.r.wrap.b32 	%r11643, %r11248, %r11249, 8;
	mov.b64 	%rd7622, {%r11643, %r11642};
	shr.u64 	%rd7623, %rd7033, 7;
	xor.b64  	%rd7624, %rd7621, %rd7623;
	xor.b64  	%rd7625, %rd7624, %rd7622;
	add.s64 	%rd7626, %rd7137, %rd7020;
	add.s64 	%rd7627, %rd7626, %rd7620;
	add.s64 	%rd7628, %rd7627, %rd7625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11644,%dummy}, %rd7615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11645}, %rd7615;
	}
	shf.r.wrap.b32 	%r11646, %r11645, %r11644, 19;
	shf.r.wrap.b32 	%r11647, %r11644, %r11645, 19;
	mov.b64 	%rd7629, {%r11647, %r11646};
	shf.l.wrap.b32 	%r11648, %r11644, %r11645, 3;
	shf.l.wrap.b32 	%r11649, %r11645, %r11644, 3;
	mov.b64 	%rd7630, {%r11649, %r11648};
	shr.u64 	%rd7631, %rd7615, 6;
	xor.b64  	%rd7632, %rd7629, %rd7631;
	xor.b64  	%rd7633, %rd7632, %rd7630;
	shf.r.wrap.b32 	%r11650, %r11259, %r11258, 1;
	shf.r.wrap.b32 	%r11651, %r11258, %r11259, 1;
	mov.b64 	%rd7634, {%r11651, %r11650};
	shf.r.wrap.b32 	%r11652, %r11259, %r11258, 8;
	shf.r.wrap.b32 	%r11653, %r11258, %r11259, 8;
	mov.b64 	%rd7635, {%r11653, %r11652};
	shr.u64 	%rd7636, %rd7046, 7;
	xor.b64  	%rd7637, %rd7634, %rd7636;
	xor.b64  	%rd7638, %rd7637, %rd7635;
	add.s64 	%rd7639, %rd7550, %rd7033;
	add.s64 	%rd7640, %rd7639, %rd7633;
	add.s64 	%rd7641, %rd7640, %rd7638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11654,%dummy}, %rd7628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11655}, %rd7628;
	}
	shf.r.wrap.b32 	%r11656, %r11655, %r11654, 19;
	shf.r.wrap.b32 	%r11657, %r11654, %r11655, 19;
	mov.b64 	%rd7642, {%r11657, %r11656};
	shf.l.wrap.b32 	%r11658, %r11654, %r11655, 3;
	shf.l.wrap.b32 	%r11659, %r11655, %r11654, 3;
	mov.b64 	%rd7643, {%r11659, %r11658};
	shr.u64 	%rd7644, %rd7628, 6;
	xor.b64  	%rd7645, %rd7642, %rd7644;
	xor.b64  	%rd7646, %rd7645, %rd7643;
	shf.r.wrap.b32 	%r11660, %r11269, %r11268, 1;
	shf.r.wrap.b32 	%r11661, %r11268, %r11269, 1;
	mov.b64 	%rd7647, {%r11661, %r11660};
	shf.r.wrap.b32 	%r11662, %r11269, %r11268, 8;
	shf.r.wrap.b32 	%r11663, %r11268, %r11269, 8;
	mov.b64 	%rd7648, {%r11663, %r11662};
	shr.u64 	%rd7649, %rd7059, 7;
	xor.b64  	%rd7650, %rd7647, %rd7649;
	xor.b64  	%rd7651, %rd7650, %rd7648;
	add.s64 	%rd7652, %rd7563, %rd7046;
	add.s64 	%rd7653, %rd7652, %rd7646;
	add.s64 	%rd7654, %rd7653, %rd7651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11664,%dummy}, %rd7641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11665}, %rd7641;
	}
	shf.r.wrap.b32 	%r11666, %r11665, %r11664, 19;
	shf.r.wrap.b32 	%r11667, %r11664, %r11665, 19;
	mov.b64 	%rd7655, {%r11667, %r11666};
	shf.l.wrap.b32 	%r11668, %r11664, %r11665, 3;
	shf.l.wrap.b32 	%r11669, %r11665, %r11664, 3;
	mov.b64 	%rd7656, {%r11669, %r11668};
	shr.u64 	%rd7657, %rd7641, 6;
	xor.b64  	%rd7658, %rd7655, %rd7657;
	xor.b64  	%rd7659, %rd7658, %rd7656;
	shf.r.wrap.b32 	%r11670, %r11279, %r11278, 1;
	shf.r.wrap.b32 	%r11671, %r11278, %r11279, 1;
	mov.b64 	%rd7660, {%r11671, %r11670};
	shf.r.wrap.b32 	%r11672, %r11279, %r11278, 8;
	shf.r.wrap.b32 	%r11673, %r11278, %r11279, 8;
	mov.b64 	%rd7661, {%r11673, %r11672};
	shr.u64 	%rd7662, %rd7072, 7;
	xor.b64  	%rd7663, %rd7660, %rd7662;
	xor.b64  	%rd7664, %rd7663, %rd7661;
	add.s64 	%rd7665, %rd7576, %rd7059;
	add.s64 	%rd7666, %rd7665, %rd7659;
	add.s64 	%rd7667, %rd7666, %rd7664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11674,%dummy}, %rd7654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11675}, %rd7654;
	}
	shf.r.wrap.b32 	%r11676, %r11675, %r11674, 19;
	shf.r.wrap.b32 	%r11677, %r11674, %r11675, 19;
	mov.b64 	%rd7668, {%r11677, %r11676};
	shf.l.wrap.b32 	%r11678, %r11674, %r11675, 3;
	shf.l.wrap.b32 	%r11679, %r11675, %r11674, 3;
	mov.b64 	%rd7669, {%r11679, %r11678};
	shr.u64 	%rd7670, %rd7654, 6;
	xor.b64  	%rd7671, %rd7668, %rd7670;
	xor.b64  	%rd7672, %rd7671, %rd7669;
	shf.r.wrap.b32 	%r11680, %r11289, %r11288, 1;
	shf.r.wrap.b32 	%r11681, %r11288, %r11289, 1;
	mov.b64 	%rd7673, {%r11681, %r11680};
	shf.r.wrap.b32 	%r11682, %r11289, %r11288, 8;
	shf.r.wrap.b32 	%r11683, %r11288, %r11289, 8;
	mov.b64 	%rd7674, {%r11683, %r11682};
	shr.u64 	%rd7675, %rd7085, 7;
	xor.b64  	%rd7676, %rd7673, %rd7675;
	xor.b64  	%rd7677, %rd7676, %rd7674;
	add.s64 	%rd7678, %rd7589, %rd7072;
	add.s64 	%rd7679, %rd7678, %rd7672;
	add.s64 	%rd7680, %rd7679, %rd7677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11684,%dummy}, %rd7667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11685}, %rd7667;
	}
	shf.r.wrap.b32 	%r11686, %r11685, %r11684, 19;
	shf.r.wrap.b32 	%r11687, %r11684, %r11685, 19;
	mov.b64 	%rd7681, {%r11687, %r11686};
	shf.l.wrap.b32 	%r11688, %r11684, %r11685, 3;
	shf.l.wrap.b32 	%r11689, %r11685, %r11684, 3;
	mov.b64 	%rd7682, {%r11689, %r11688};
	shr.u64 	%rd7683, %rd7667, 6;
	xor.b64  	%rd7684, %rd7681, %rd7683;
	xor.b64  	%rd7685, %rd7684, %rd7682;
	shf.r.wrap.b32 	%r11690, %r11299, %r11298, 1;
	shf.r.wrap.b32 	%r11691, %r11298, %r11299, 1;
	mov.b64 	%rd7686, {%r11691, %r11690};
	shf.r.wrap.b32 	%r11692, %r11299, %r11298, 8;
	shf.r.wrap.b32 	%r11693, %r11298, %r11299, 8;
	mov.b64 	%rd7687, {%r11693, %r11692};
	shr.u64 	%rd7688, %rd7098, 7;
	xor.b64  	%rd7689, %rd7686, %rd7688;
	xor.b64  	%rd7690, %rd7689, %rd7687;
	add.s64 	%rd7691, %rd7602, %rd7085;
	add.s64 	%rd7692, %rd7691, %rd7685;
	add.s64 	%rd7693, %rd7692, %rd7690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11694,%dummy}, %rd7680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11695}, %rd7680;
	}
	shf.r.wrap.b32 	%r11696, %r11695, %r11694, 19;
	shf.r.wrap.b32 	%r11697, %r11694, %r11695, 19;
	mov.b64 	%rd7694, {%r11697, %r11696};
	shf.l.wrap.b32 	%r11698, %r11694, %r11695, 3;
	shf.l.wrap.b32 	%r11699, %r11695, %r11694, 3;
	mov.b64 	%rd7695, {%r11699, %r11698};
	shr.u64 	%rd7696, %rd7680, 6;
	xor.b64  	%rd7697, %rd7694, %rd7696;
	xor.b64  	%rd7698, %rd7697, %rd7695;
	shf.r.wrap.b32 	%r11700, %r11309, %r11308, 1;
	shf.r.wrap.b32 	%r11701, %r11308, %r11309, 1;
	mov.b64 	%rd7699, {%r11701, %r11700};
	shf.r.wrap.b32 	%r11702, %r11309, %r11308, 8;
	shf.r.wrap.b32 	%r11703, %r11308, %r11309, 8;
	mov.b64 	%rd7700, {%r11703, %r11702};
	shr.u64 	%rd7701, %rd7111, 7;
	xor.b64  	%rd7702, %rd7699, %rd7701;
	xor.b64  	%rd7703, %rd7702, %rd7700;
	add.s64 	%rd7704, %rd7615, %rd7098;
	add.s64 	%rd7705, %rd7704, %rd7698;
	add.s64 	%rd7706, %rd7705, %rd7703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11704,%dummy}, %rd7693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11705}, %rd7693;
	}
	shf.r.wrap.b32 	%r11706, %r11705, %r11704, 19;
	shf.r.wrap.b32 	%r11707, %r11704, %r11705, 19;
	mov.b64 	%rd7707, {%r11707, %r11706};
	shf.l.wrap.b32 	%r11708, %r11704, %r11705, 3;
	shf.l.wrap.b32 	%r11709, %r11705, %r11704, 3;
	mov.b64 	%rd7708, {%r11709, %r11708};
	shr.u64 	%rd7709, %rd7693, 6;
	xor.b64  	%rd7710, %rd7707, %rd7709;
	xor.b64  	%rd7711, %rd7710, %rd7708;
	shf.r.wrap.b32 	%r11710, %r11575, %r11574, 1;
	shf.r.wrap.b32 	%r11711, %r11574, %r11575, 1;
	mov.b64 	%rd7712, {%r11711, %r11710};
	shf.r.wrap.b32 	%r11712, %r11575, %r11574, 8;
	shf.r.wrap.b32 	%r11713, %r11574, %r11575, 8;
	mov.b64 	%rd7713, {%r11713, %r11712};
	shr.u64 	%rd7714, %rd7124, 7;
	xor.b64  	%rd7715, %rd7712, %rd7714;
	xor.b64  	%rd7716, %rd7715, %rd7713;
	add.s64 	%rd7717, %rd7628, %rd7111;
	add.s64 	%rd7718, %rd7717, %rd7711;
	add.s64 	%rd7719, %rd7718, %rd7716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11714,%dummy}, %rd7706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11715}, %rd7706;
	}
	shf.r.wrap.b32 	%r11716, %r11715, %r11714, 19;
	shf.r.wrap.b32 	%r11717, %r11714, %r11715, 19;
	mov.b64 	%rd7720, {%r11717, %r11716};
	shf.l.wrap.b32 	%r11718, %r11714, %r11715, 3;
	shf.l.wrap.b32 	%r11719, %r11715, %r11714, 3;
	mov.b64 	%rd7721, {%r11719, %r11718};
	shr.u64 	%rd7722, %rd7706, 6;
	xor.b64  	%rd7723, %rd7720, %rd7722;
	xor.b64  	%rd7724, %rd7723, %rd7721;
	shf.r.wrap.b32 	%r11720, %r11585, %r11584, 1;
	shf.r.wrap.b32 	%r11721, %r11584, %r11585, 1;
	mov.b64 	%rd7725, {%r11721, %r11720};
	shf.r.wrap.b32 	%r11722, %r11585, %r11584, 8;
	shf.r.wrap.b32 	%r11723, %r11584, %r11585, 8;
	mov.b64 	%rd7726, {%r11723, %r11722};
	shr.u64 	%rd7727, %rd7137, 7;
	xor.b64  	%rd7728, %rd7725, %rd7727;
	xor.b64  	%rd7729, %rd7728, %rd7726;
	add.s64 	%rd7730, %rd7641, %rd7124;
	add.s64 	%rd7731, %rd7730, %rd7724;
	add.s64 	%rd7732, %rd7731, %rd7729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11724,%dummy}, %rd7719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11725}, %rd7719;
	}
	shf.r.wrap.b32 	%r11726, %r11725, %r11724, 19;
	shf.r.wrap.b32 	%r11727, %r11724, %r11725, 19;
	mov.b64 	%rd7733, {%r11727, %r11726};
	shf.l.wrap.b32 	%r11728, %r11724, %r11725, 3;
	shf.l.wrap.b32 	%r11729, %r11725, %r11724, 3;
	mov.b64 	%rd7734, {%r11729, %r11728};
	shr.u64 	%rd7735, %rd7719, 6;
	xor.b64  	%rd7736, %rd7733, %rd7735;
	xor.b64  	%rd7737, %rd7736, %rd7734;
	shf.r.wrap.b32 	%r11730, %r11595, %r11594, 1;
	shf.r.wrap.b32 	%r11731, %r11594, %r11595, 1;
	mov.b64 	%rd7738, {%r11731, %r11730};
	shf.r.wrap.b32 	%r11732, %r11595, %r11594, 8;
	shf.r.wrap.b32 	%r11733, %r11594, %r11595, 8;
	mov.b64 	%rd7739, {%r11733, %r11732};
	shr.u64 	%rd7740, %rd7550, 7;
	xor.b64  	%rd7741, %rd7738, %rd7740;
	xor.b64  	%rd7742, %rd7741, %rd7739;
	add.s64 	%rd7743, %rd7654, %rd7137;
	add.s64 	%rd7744, %rd7743, %rd7737;
	add.s64 	%rd7745, %rd7744, %rd7742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11734,%dummy}, %rd7526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11735}, %rd7526;
	}
	shf.r.wrap.b32 	%r11736, %r11735, %r11734, 14;
	shf.r.wrap.b32 	%r11737, %r11734, %r11735, 14;
	mov.b64 	%rd7746, {%r11737, %r11736};
	shf.r.wrap.b32 	%r11738, %r11735, %r11734, 18;
	shf.r.wrap.b32 	%r11739, %r11734, %r11735, 18;
	mov.b64 	%rd7747, {%r11739, %r11738};
	xor.b64  	%rd7748, %rd7747, %rd7746;
	shf.l.wrap.b32 	%r11740, %r11734, %r11735, 23;
	shf.l.wrap.b32 	%r11741, %r11735, %r11734, 23;
	mov.b64 	%rd7749, {%r11741, %r11740};
	xor.b64  	%rd7750, %rd7748, %rd7749;
	xor.b64  	%rd7751, %rd7501, %rd7476;
	and.b64  	%rd7752, %rd7751, %rd7526;
	xor.b64  	%rd7753, %rd7752, %rd7476;
	add.s64 	%rd7754, %rd7753, %rd7451;
	add.s64 	%rd7755, %rd7754, %rd7550;
	ld.const.u64 	%rd7756, [k_sha512+384];
	add.s64 	%rd7757, %rd7755, %rd7756;
	add.s64 	%rd7758, %rd7757, %rd7750;
	add.s64 	%rd7759, %rd7758, %rd7462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11742,%dummy}, %rd7537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11743}, %rd7537;
	}
	shf.r.wrap.b32 	%r11744, %r11743, %r11742, 28;
	shf.r.wrap.b32 	%r11745, %r11742, %r11743, 28;
	mov.b64 	%rd7760, {%r11745, %r11744};
	shf.l.wrap.b32 	%r11746, %r11742, %r11743, 30;
	shf.l.wrap.b32 	%r11747, %r11743, %r11742, 30;
	mov.b64 	%rd7761, {%r11747, %r11746};
	xor.b64  	%rd7762, %rd7761, %rd7760;
	shf.l.wrap.b32 	%r11748, %r11742, %r11743, 25;
	shf.l.wrap.b32 	%r11749, %r11743, %r11742, 25;
	mov.b64 	%rd7763, {%r11749, %r11748};
	xor.b64  	%rd7764, %rd7762, %rd7763;
	xor.b64  	%rd7765, %rd7537, %rd7487;
	xor.b64  	%rd7766, %rd7537, %rd7512;
	and.b64  	%rd7767, %rd7766, %rd7765;
	xor.b64  	%rd7768, %rd7767, %rd7537;
	add.s64 	%rd7769, %rd7758, %rd7768;
	add.s64 	%rd7770, %rd7769, %rd7764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11750,%dummy}, %rd7759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11751}, %rd7759;
	}
	shf.r.wrap.b32 	%r11752, %r11751, %r11750, 14;
	shf.r.wrap.b32 	%r11753, %r11750, %r11751, 14;
	mov.b64 	%rd7771, {%r11753, %r11752};
	shf.r.wrap.b32 	%r11754, %r11751, %r11750, 18;
	shf.r.wrap.b32 	%r11755, %r11750, %r11751, 18;
	mov.b64 	%rd7772, {%r11755, %r11754};
	xor.b64  	%rd7773, %rd7772, %rd7771;
	shf.l.wrap.b32 	%r11756, %r11750, %r11751, 23;
	shf.l.wrap.b32 	%r11757, %r11751, %r11750, 23;
	mov.b64 	%rd7774, {%r11757, %r11756};
	xor.b64  	%rd7775, %rd7773, %rd7774;
	xor.b64  	%rd7776, %rd7526, %rd7501;
	and.b64  	%rd7777, %rd7759, %rd7776;
	xor.b64  	%rd7778, %rd7777, %rd7501;
	add.s64 	%rd7779, %rd7563, %rd7476;
	ld.const.u64 	%rd7780, [k_sha512+392];
	add.s64 	%rd7781, %rd7779, %rd7780;
	add.s64 	%rd7782, %rd7781, %rd7778;
	add.s64 	%rd7783, %rd7782, %rd7775;
	add.s64 	%rd7784, %rd7783, %rd7487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11758,%dummy}, %rd7770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11759}, %rd7770;
	}
	shf.r.wrap.b32 	%r11760, %r11759, %r11758, 28;
	shf.r.wrap.b32 	%r11761, %r11758, %r11759, 28;
	mov.b64 	%rd7785, {%r11761, %r11760};
	shf.l.wrap.b32 	%r11762, %r11758, %r11759, 30;
	shf.l.wrap.b32 	%r11763, %r11759, %r11758, 30;
	mov.b64 	%rd7786, {%r11763, %r11762};
	xor.b64  	%rd7787, %rd7786, %rd7785;
	shf.l.wrap.b32 	%r11764, %r11758, %r11759, 25;
	shf.l.wrap.b32 	%r11765, %r11759, %r11758, 25;
	mov.b64 	%rd7788, {%r11765, %r11764};
	xor.b64  	%rd7789, %rd7787, %rd7788;
	xor.b64  	%rd7790, %rd7770, %rd7512;
	xor.b64  	%rd7791, %rd7770, %rd7537;
	and.b64  	%rd7792, %rd7791, %rd7790;
	xor.b64  	%rd7793, %rd7792, %rd7770;
	add.s64 	%rd7794, %rd7783, %rd7793;
	add.s64 	%rd7795, %rd7794, %rd7789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11766,%dummy}, %rd7784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11767}, %rd7784;
	}
	shf.r.wrap.b32 	%r11768, %r11767, %r11766, 14;
	shf.r.wrap.b32 	%r11769, %r11766, %r11767, 14;
	mov.b64 	%rd7796, {%r11769, %r11768};
	shf.r.wrap.b32 	%r11770, %r11767, %r11766, 18;
	shf.r.wrap.b32 	%r11771, %r11766, %r11767, 18;
	mov.b64 	%rd7797, {%r11771, %r11770};
	xor.b64  	%rd7798, %rd7797, %rd7796;
	shf.l.wrap.b32 	%r11772, %r11766, %r11767, 23;
	shf.l.wrap.b32 	%r11773, %r11767, %r11766, 23;
	mov.b64 	%rd7799, {%r11773, %r11772};
	xor.b64  	%rd7800, %rd7798, %rd7799;
	xor.b64  	%rd7801, %rd7759, %rd7526;
	and.b64  	%rd7802, %rd7784, %rd7801;
	xor.b64  	%rd7803, %rd7802, %rd7526;
	add.s64 	%rd7804, %rd7576, %rd7501;
	ld.const.u64 	%rd7805, [k_sha512+400];
	add.s64 	%rd7806, %rd7804, %rd7805;
	add.s64 	%rd7807, %rd7806, %rd7803;
	add.s64 	%rd7808, %rd7807, %rd7800;
	add.s64 	%rd7809, %rd7808, %rd7512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11774,%dummy}, %rd7795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11775}, %rd7795;
	}
	shf.r.wrap.b32 	%r11776, %r11775, %r11774, 28;
	shf.r.wrap.b32 	%r11777, %r11774, %r11775, 28;
	mov.b64 	%rd7810, {%r11777, %r11776};
	shf.l.wrap.b32 	%r11778, %r11774, %r11775, 30;
	shf.l.wrap.b32 	%r11779, %r11775, %r11774, 30;
	mov.b64 	%rd7811, {%r11779, %r11778};
	xor.b64  	%rd7812, %rd7811, %rd7810;
	shf.l.wrap.b32 	%r11780, %r11774, %r11775, 25;
	shf.l.wrap.b32 	%r11781, %r11775, %r11774, 25;
	mov.b64 	%rd7813, {%r11781, %r11780};
	xor.b64  	%rd7814, %rd7812, %rd7813;
	xor.b64  	%rd7815, %rd7795, %rd7537;
	xor.b64  	%rd7816, %rd7795, %rd7770;
	and.b64  	%rd7817, %rd7816, %rd7815;
	xor.b64  	%rd7818, %rd7817, %rd7795;
	add.s64 	%rd7819, %rd7808, %rd7818;
	add.s64 	%rd7820, %rd7819, %rd7814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11782,%dummy}, %rd7809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11783}, %rd7809;
	}
	shf.r.wrap.b32 	%r11784, %r11783, %r11782, 14;
	shf.r.wrap.b32 	%r11785, %r11782, %r11783, 14;
	mov.b64 	%rd7821, {%r11785, %r11784};
	shf.r.wrap.b32 	%r11786, %r11783, %r11782, 18;
	shf.r.wrap.b32 	%r11787, %r11782, %r11783, 18;
	mov.b64 	%rd7822, {%r11787, %r11786};
	xor.b64  	%rd7823, %rd7822, %rd7821;
	shf.l.wrap.b32 	%r11788, %r11782, %r11783, 23;
	shf.l.wrap.b32 	%r11789, %r11783, %r11782, 23;
	mov.b64 	%rd7824, {%r11789, %r11788};
	xor.b64  	%rd7825, %rd7823, %rd7824;
	xor.b64  	%rd7826, %rd7784, %rd7759;
	and.b64  	%rd7827, %rd7809, %rd7826;
	xor.b64  	%rd7828, %rd7827, %rd7759;
	add.s64 	%rd7829, %rd7589, %rd7526;
	ld.const.u64 	%rd7830, [k_sha512+408];
	add.s64 	%rd7831, %rd7829, %rd7830;
	add.s64 	%rd7832, %rd7831, %rd7828;
	add.s64 	%rd7833, %rd7832, %rd7825;
	add.s64 	%rd7834, %rd7833, %rd7537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11790,%dummy}, %rd7820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11791}, %rd7820;
	}
	shf.r.wrap.b32 	%r11792, %r11791, %r11790, 28;
	shf.r.wrap.b32 	%r11793, %r11790, %r11791, 28;
	mov.b64 	%rd7835, {%r11793, %r11792};
	shf.l.wrap.b32 	%r11794, %r11790, %r11791, 30;
	shf.l.wrap.b32 	%r11795, %r11791, %r11790, 30;
	mov.b64 	%rd7836, {%r11795, %r11794};
	xor.b64  	%rd7837, %rd7836, %rd7835;
	shf.l.wrap.b32 	%r11796, %r11790, %r11791, 25;
	shf.l.wrap.b32 	%r11797, %r11791, %r11790, 25;
	mov.b64 	%rd7838, {%r11797, %r11796};
	xor.b64  	%rd7839, %rd7837, %rd7838;
	xor.b64  	%rd7840, %rd7820, %rd7770;
	xor.b64  	%rd7841, %rd7820, %rd7795;
	and.b64  	%rd7842, %rd7841, %rd7840;
	xor.b64  	%rd7843, %rd7842, %rd7820;
	add.s64 	%rd7844, %rd7833, %rd7843;
	add.s64 	%rd7845, %rd7844, %rd7839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11798,%dummy}, %rd7834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11799}, %rd7834;
	}
	shf.r.wrap.b32 	%r11800, %r11799, %r11798, 14;
	shf.r.wrap.b32 	%r11801, %r11798, %r11799, 14;
	mov.b64 	%rd7846, {%r11801, %r11800};
	shf.r.wrap.b32 	%r11802, %r11799, %r11798, 18;
	shf.r.wrap.b32 	%r11803, %r11798, %r11799, 18;
	mov.b64 	%rd7847, {%r11803, %r11802};
	xor.b64  	%rd7848, %rd7847, %rd7846;
	shf.l.wrap.b32 	%r11804, %r11798, %r11799, 23;
	shf.l.wrap.b32 	%r11805, %r11799, %r11798, 23;
	mov.b64 	%rd7849, {%r11805, %r11804};
	xor.b64  	%rd7850, %rd7848, %rd7849;
	xor.b64  	%rd7851, %rd7809, %rd7784;
	and.b64  	%rd7852, %rd7834, %rd7851;
	xor.b64  	%rd7853, %rd7852, %rd7784;
	add.s64 	%rd7854, %rd7759, %rd7602;
	ld.const.u64 	%rd7855, [k_sha512+416];
	add.s64 	%rd7856, %rd7854, %rd7855;
	add.s64 	%rd7857, %rd7856, %rd7853;
	add.s64 	%rd7858, %rd7857, %rd7850;
	add.s64 	%rd7859, %rd7858, %rd7770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11806,%dummy}, %rd7845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11807}, %rd7845;
	}
	shf.r.wrap.b32 	%r11808, %r11807, %r11806, 28;
	shf.r.wrap.b32 	%r11809, %r11806, %r11807, 28;
	mov.b64 	%rd7860, {%r11809, %r11808};
	shf.l.wrap.b32 	%r11810, %r11806, %r11807, 30;
	shf.l.wrap.b32 	%r11811, %r11807, %r11806, 30;
	mov.b64 	%rd7861, {%r11811, %r11810};
	xor.b64  	%rd7862, %rd7861, %rd7860;
	shf.l.wrap.b32 	%r11812, %r11806, %r11807, 25;
	shf.l.wrap.b32 	%r11813, %r11807, %r11806, 25;
	mov.b64 	%rd7863, {%r11813, %r11812};
	xor.b64  	%rd7864, %rd7862, %rd7863;
	xor.b64  	%rd7865, %rd7845, %rd7795;
	xor.b64  	%rd7866, %rd7845, %rd7820;
	and.b64  	%rd7867, %rd7866, %rd7865;
	xor.b64  	%rd7868, %rd7867, %rd7845;
	add.s64 	%rd7869, %rd7858, %rd7868;
	add.s64 	%rd7870, %rd7869, %rd7864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11814,%dummy}, %rd7859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11815}, %rd7859;
	}
	shf.r.wrap.b32 	%r11816, %r11815, %r11814, 14;
	shf.r.wrap.b32 	%r11817, %r11814, %r11815, 14;
	mov.b64 	%rd7871, {%r11817, %r11816};
	shf.r.wrap.b32 	%r11818, %r11815, %r11814, 18;
	shf.r.wrap.b32 	%r11819, %r11814, %r11815, 18;
	mov.b64 	%rd7872, {%r11819, %r11818};
	xor.b64  	%rd7873, %rd7872, %rd7871;
	shf.l.wrap.b32 	%r11820, %r11814, %r11815, 23;
	shf.l.wrap.b32 	%r11821, %r11815, %r11814, 23;
	mov.b64 	%rd7874, {%r11821, %r11820};
	xor.b64  	%rd7875, %rd7873, %rd7874;
	xor.b64  	%rd7876, %rd7834, %rd7809;
	and.b64  	%rd7877, %rd7859, %rd7876;
	xor.b64  	%rd7878, %rd7877, %rd7809;
	add.s64 	%rd7879, %rd7784, %rd7615;
	ld.const.u64 	%rd7880, [k_sha512+424];
	add.s64 	%rd7881, %rd7879, %rd7880;
	add.s64 	%rd7882, %rd7881, %rd7878;
	add.s64 	%rd7883, %rd7882, %rd7875;
	add.s64 	%rd7884, %rd7883, %rd7795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11822,%dummy}, %rd7870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11823}, %rd7870;
	}
	shf.r.wrap.b32 	%r11824, %r11823, %r11822, 28;
	shf.r.wrap.b32 	%r11825, %r11822, %r11823, 28;
	mov.b64 	%rd7885, {%r11825, %r11824};
	shf.l.wrap.b32 	%r11826, %r11822, %r11823, 30;
	shf.l.wrap.b32 	%r11827, %r11823, %r11822, 30;
	mov.b64 	%rd7886, {%r11827, %r11826};
	xor.b64  	%rd7887, %rd7886, %rd7885;
	shf.l.wrap.b32 	%r11828, %r11822, %r11823, 25;
	shf.l.wrap.b32 	%r11829, %r11823, %r11822, 25;
	mov.b64 	%rd7888, {%r11829, %r11828};
	xor.b64  	%rd7889, %rd7887, %rd7888;
	xor.b64  	%rd7890, %rd7870, %rd7820;
	xor.b64  	%rd7891, %rd7870, %rd7845;
	and.b64  	%rd7892, %rd7891, %rd7890;
	xor.b64  	%rd7893, %rd7892, %rd7870;
	add.s64 	%rd7894, %rd7883, %rd7893;
	add.s64 	%rd7895, %rd7894, %rd7889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11830,%dummy}, %rd7884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11831}, %rd7884;
	}
	shf.r.wrap.b32 	%r11832, %r11831, %r11830, 14;
	shf.r.wrap.b32 	%r11833, %r11830, %r11831, 14;
	mov.b64 	%rd7896, {%r11833, %r11832};
	shf.r.wrap.b32 	%r11834, %r11831, %r11830, 18;
	shf.r.wrap.b32 	%r11835, %r11830, %r11831, 18;
	mov.b64 	%rd7897, {%r11835, %r11834};
	xor.b64  	%rd7898, %rd7897, %rd7896;
	shf.l.wrap.b32 	%r11836, %r11830, %r11831, 23;
	shf.l.wrap.b32 	%r11837, %r11831, %r11830, 23;
	mov.b64 	%rd7899, {%r11837, %r11836};
	xor.b64  	%rd7900, %rd7898, %rd7899;
	xor.b64  	%rd7901, %rd7859, %rd7834;
	and.b64  	%rd7902, %rd7884, %rd7901;
	xor.b64  	%rd7903, %rd7902, %rd7834;
	add.s64 	%rd7904, %rd7809, %rd7628;
	ld.const.u64 	%rd7905, [k_sha512+432];
	add.s64 	%rd7906, %rd7904, %rd7905;
	add.s64 	%rd7907, %rd7906, %rd7903;
	add.s64 	%rd7908, %rd7907, %rd7900;
	add.s64 	%rd7909, %rd7908, %rd7820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11838,%dummy}, %rd7895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11839}, %rd7895;
	}
	shf.r.wrap.b32 	%r11840, %r11839, %r11838, 28;
	shf.r.wrap.b32 	%r11841, %r11838, %r11839, 28;
	mov.b64 	%rd7910, {%r11841, %r11840};
	shf.l.wrap.b32 	%r11842, %r11838, %r11839, 30;
	shf.l.wrap.b32 	%r11843, %r11839, %r11838, 30;
	mov.b64 	%rd7911, {%r11843, %r11842};
	xor.b64  	%rd7912, %rd7911, %rd7910;
	shf.l.wrap.b32 	%r11844, %r11838, %r11839, 25;
	shf.l.wrap.b32 	%r11845, %r11839, %r11838, 25;
	mov.b64 	%rd7913, {%r11845, %r11844};
	xor.b64  	%rd7914, %rd7912, %rd7913;
	xor.b64  	%rd7915, %rd7895, %rd7845;
	xor.b64  	%rd7916, %rd7895, %rd7870;
	and.b64  	%rd7917, %rd7916, %rd7915;
	xor.b64  	%rd7918, %rd7917, %rd7895;
	add.s64 	%rd7919, %rd7908, %rd7918;
	add.s64 	%rd7920, %rd7919, %rd7914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11846,%dummy}, %rd7909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11847}, %rd7909;
	}
	shf.r.wrap.b32 	%r11848, %r11847, %r11846, 14;
	shf.r.wrap.b32 	%r11849, %r11846, %r11847, 14;
	mov.b64 	%rd7921, {%r11849, %r11848};
	shf.r.wrap.b32 	%r11850, %r11847, %r11846, 18;
	shf.r.wrap.b32 	%r11851, %r11846, %r11847, 18;
	mov.b64 	%rd7922, {%r11851, %r11850};
	xor.b64  	%rd7923, %rd7922, %rd7921;
	shf.l.wrap.b32 	%r11852, %r11846, %r11847, 23;
	shf.l.wrap.b32 	%r11853, %r11847, %r11846, 23;
	mov.b64 	%rd7924, {%r11853, %r11852};
	xor.b64  	%rd7925, %rd7923, %rd7924;
	xor.b64  	%rd7926, %rd7884, %rd7859;
	and.b64  	%rd7927, %rd7909, %rd7926;
	xor.b64  	%rd7928, %rd7927, %rd7859;
	add.s64 	%rd7929, %rd7834, %rd7641;
	ld.const.u64 	%rd7930, [k_sha512+440];
	add.s64 	%rd7931, %rd7929, %rd7930;
	add.s64 	%rd7932, %rd7931, %rd7928;
	add.s64 	%rd7933, %rd7932, %rd7925;
	add.s64 	%rd7934, %rd7933, %rd7845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11854,%dummy}, %rd7920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11855}, %rd7920;
	}
	shf.r.wrap.b32 	%r11856, %r11855, %r11854, 28;
	shf.r.wrap.b32 	%r11857, %r11854, %r11855, 28;
	mov.b64 	%rd7935, {%r11857, %r11856};
	shf.l.wrap.b32 	%r11858, %r11854, %r11855, 30;
	shf.l.wrap.b32 	%r11859, %r11855, %r11854, 30;
	mov.b64 	%rd7936, {%r11859, %r11858};
	xor.b64  	%rd7937, %rd7936, %rd7935;
	shf.l.wrap.b32 	%r11860, %r11854, %r11855, 25;
	shf.l.wrap.b32 	%r11861, %r11855, %r11854, 25;
	mov.b64 	%rd7938, {%r11861, %r11860};
	xor.b64  	%rd7939, %rd7937, %rd7938;
	xor.b64  	%rd7940, %rd7920, %rd7870;
	xor.b64  	%rd7941, %rd7920, %rd7895;
	and.b64  	%rd7942, %rd7941, %rd7940;
	xor.b64  	%rd7943, %rd7942, %rd7920;
	add.s64 	%rd7944, %rd7933, %rd7943;
	add.s64 	%rd7945, %rd7944, %rd7939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11862,%dummy}, %rd7934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11863}, %rd7934;
	}
	shf.r.wrap.b32 	%r11864, %r11863, %r11862, 14;
	shf.r.wrap.b32 	%r11865, %r11862, %r11863, 14;
	mov.b64 	%rd7946, {%r11865, %r11864};
	shf.r.wrap.b32 	%r11866, %r11863, %r11862, 18;
	shf.r.wrap.b32 	%r11867, %r11862, %r11863, 18;
	mov.b64 	%rd7947, {%r11867, %r11866};
	xor.b64  	%rd7948, %rd7947, %rd7946;
	shf.l.wrap.b32 	%r11868, %r11862, %r11863, 23;
	shf.l.wrap.b32 	%r11869, %r11863, %r11862, 23;
	mov.b64 	%rd7949, {%r11869, %r11868};
	xor.b64  	%rd7950, %rd7948, %rd7949;
	xor.b64  	%rd7951, %rd7909, %rd7884;
	and.b64  	%rd7952, %rd7934, %rd7951;
	xor.b64  	%rd7953, %rd7952, %rd7884;
	add.s64 	%rd7954, %rd7859, %rd7654;
	ld.const.u64 	%rd7955, [k_sha512+448];
	add.s64 	%rd7956, %rd7954, %rd7955;
	add.s64 	%rd7957, %rd7956, %rd7953;
	add.s64 	%rd7958, %rd7957, %rd7950;
	add.s64 	%rd7959, %rd7958, %rd7870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11870,%dummy}, %rd7945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11871}, %rd7945;
	}
	shf.r.wrap.b32 	%r11872, %r11871, %r11870, 28;
	shf.r.wrap.b32 	%r11873, %r11870, %r11871, 28;
	mov.b64 	%rd7960, {%r11873, %r11872};
	shf.l.wrap.b32 	%r11874, %r11870, %r11871, 30;
	shf.l.wrap.b32 	%r11875, %r11871, %r11870, 30;
	mov.b64 	%rd7961, {%r11875, %r11874};
	xor.b64  	%rd7962, %rd7961, %rd7960;
	shf.l.wrap.b32 	%r11876, %r11870, %r11871, 25;
	shf.l.wrap.b32 	%r11877, %r11871, %r11870, 25;
	mov.b64 	%rd7963, {%r11877, %r11876};
	xor.b64  	%rd7964, %rd7962, %rd7963;
	xor.b64  	%rd7965, %rd7945, %rd7895;
	xor.b64  	%rd7966, %rd7945, %rd7920;
	and.b64  	%rd7967, %rd7966, %rd7965;
	xor.b64  	%rd7968, %rd7967, %rd7945;
	add.s64 	%rd7969, %rd7958, %rd7968;
	add.s64 	%rd7970, %rd7969, %rd7964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11878,%dummy}, %rd7959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11879}, %rd7959;
	}
	shf.r.wrap.b32 	%r11880, %r11879, %r11878, 14;
	shf.r.wrap.b32 	%r11881, %r11878, %r11879, 14;
	mov.b64 	%rd7971, {%r11881, %r11880};
	shf.r.wrap.b32 	%r11882, %r11879, %r11878, 18;
	shf.r.wrap.b32 	%r11883, %r11878, %r11879, 18;
	mov.b64 	%rd7972, {%r11883, %r11882};
	xor.b64  	%rd7973, %rd7972, %rd7971;
	shf.l.wrap.b32 	%r11884, %r11878, %r11879, 23;
	shf.l.wrap.b32 	%r11885, %r11879, %r11878, 23;
	mov.b64 	%rd7974, {%r11885, %r11884};
	xor.b64  	%rd7975, %rd7973, %rd7974;
	xor.b64  	%rd7976, %rd7934, %rd7909;
	and.b64  	%rd7977, %rd7959, %rd7976;
	xor.b64  	%rd7978, %rd7977, %rd7909;
	add.s64 	%rd7979, %rd7884, %rd7667;
	ld.const.u64 	%rd7980, [k_sha512+456];
	add.s64 	%rd7981, %rd7979, %rd7980;
	add.s64 	%rd7982, %rd7981, %rd7978;
	add.s64 	%rd7983, %rd7982, %rd7975;
	add.s64 	%rd7984, %rd7983, %rd7895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11886,%dummy}, %rd7970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11887}, %rd7970;
	}
	shf.r.wrap.b32 	%r11888, %r11887, %r11886, 28;
	shf.r.wrap.b32 	%r11889, %r11886, %r11887, 28;
	mov.b64 	%rd7985, {%r11889, %r11888};
	shf.l.wrap.b32 	%r11890, %r11886, %r11887, 30;
	shf.l.wrap.b32 	%r11891, %r11887, %r11886, 30;
	mov.b64 	%rd7986, {%r11891, %r11890};
	xor.b64  	%rd7987, %rd7986, %rd7985;
	shf.l.wrap.b32 	%r11892, %r11886, %r11887, 25;
	shf.l.wrap.b32 	%r11893, %r11887, %r11886, 25;
	mov.b64 	%rd7988, {%r11893, %r11892};
	xor.b64  	%rd7989, %rd7987, %rd7988;
	xor.b64  	%rd7990, %rd7970, %rd7920;
	xor.b64  	%rd7991, %rd7970, %rd7945;
	and.b64  	%rd7992, %rd7991, %rd7990;
	xor.b64  	%rd7993, %rd7992, %rd7970;
	add.s64 	%rd7994, %rd7983, %rd7993;
	add.s64 	%rd7995, %rd7994, %rd7989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11894,%dummy}, %rd7984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11895}, %rd7984;
	}
	shf.r.wrap.b32 	%r11896, %r11895, %r11894, 14;
	shf.r.wrap.b32 	%r11897, %r11894, %r11895, 14;
	mov.b64 	%rd7996, {%r11897, %r11896};
	shf.r.wrap.b32 	%r11898, %r11895, %r11894, 18;
	shf.r.wrap.b32 	%r11899, %r11894, %r11895, 18;
	mov.b64 	%rd7997, {%r11899, %r11898};
	xor.b64  	%rd7998, %rd7997, %rd7996;
	shf.l.wrap.b32 	%r11900, %r11894, %r11895, 23;
	shf.l.wrap.b32 	%r11901, %r11895, %r11894, 23;
	mov.b64 	%rd7999, {%r11901, %r11900};
	xor.b64  	%rd8000, %rd7998, %rd7999;
	xor.b64  	%rd8001, %rd7959, %rd7934;
	and.b64  	%rd8002, %rd7984, %rd8001;
	xor.b64  	%rd8003, %rd8002, %rd7934;
	add.s64 	%rd8004, %rd7909, %rd7680;
	ld.const.u64 	%rd8005, [k_sha512+464];
	add.s64 	%rd8006, %rd8004, %rd8005;
	add.s64 	%rd8007, %rd8006, %rd8003;
	add.s64 	%rd8008, %rd8007, %rd8000;
	add.s64 	%rd8009, %rd8008, %rd7920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11902,%dummy}, %rd7995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11903}, %rd7995;
	}
	shf.r.wrap.b32 	%r11904, %r11903, %r11902, 28;
	shf.r.wrap.b32 	%r11905, %r11902, %r11903, 28;
	mov.b64 	%rd8010, {%r11905, %r11904};
	shf.l.wrap.b32 	%r11906, %r11902, %r11903, 30;
	shf.l.wrap.b32 	%r11907, %r11903, %r11902, 30;
	mov.b64 	%rd8011, {%r11907, %r11906};
	xor.b64  	%rd8012, %rd8011, %rd8010;
	shf.l.wrap.b32 	%r11908, %r11902, %r11903, 25;
	shf.l.wrap.b32 	%r11909, %r11903, %r11902, 25;
	mov.b64 	%rd8013, {%r11909, %r11908};
	xor.b64  	%rd8014, %rd8012, %rd8013;
	xor.b64  	%rd8015, %rd7995, %rd7945;
	xor.b64  	%rd8016, %rd7995, %rd7970;
	and.b64  	%rd8017, %rd8016, %rd8015;
	xor.b64  	%rd8018, %rd8017, %rd7995;
	add.s64 	%rd8019, %rd8008, %rd8018;
	add.s64 	%rd8020, %rd8019, %rd8014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11910,%dummy}, %rd8009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11911}, %rd8009;
	}
	shf.r.wrap.b32 	%r11912, %r11911, %r11910, 14;
	shf.r.wrap.b32 	%r11913, %r11910, %r11911, 14;
	mov.b64 	%rd8021, {%r11913, %r11912};
	shf.r.wrap.b32 	%r11914, %r11911, %r11910, 18;
	shf.r.wrap.b32 	%r11915, %r11910, %r11911, 18;
	mov.b64 	%rd8022, {%r11915, %r11914};
	xor.b64  	%rd8023, %rd8022, %rd8021;
	shf.l.wrap.b32 	%r11916, %r11910, %r11911, 23;
	shf.l.wrap.b32 	%r11917, %r11911, %r11910, 23;
	mov.b64 	%rd8024, {%r11917, %r11916};
	xor.b64  	%rd8025, %rd8023, %rd8024;
	xor.b64  	%rd8026, %rd7984, %rd7959;
	and.b64  	%rd8027, %rd8009, %rd8026;
	xor.b64  	%rd8028, %rd8027, %rd7959;
	add.s64 	%rd8029, %rd7934, %rd7693;
	ld.const.u64 	%rd8030, [k_sha512+472];
	add.s64 	%rd8031, %rd8029, %rd8030;
	add.s64 	%rd8032, %rd8031, %rd8028;
	add.s64 	%rd8033, %rd8032, %rd8025;
	add.s64 	%rd8034, %rd8033, %rd7945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11918,%dummy}, %rd8020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11919}, %rd8020;
	}
	shf.r.wrap.b32 	%r11920, %r11919, %r11918, 28;
	shf.r.wrap.b32 	%r11921, %r11918, %r11919, 28;
	mov.b64 	%rd8035, {%r11921, %r11920};
	shf.l.wrap.b32 	%r11922, %r11918, %r11919, 30;
	shf.l.wrap.b32 	%r11923, %r11919, %r11918, 30;
	mov.b64 	%rd8036, {%r11923, %r11922};
	xor.b64  	%rd8037, %rd8036, %rd8035;
	shf.l.wrap.b32 	%r11924, %r11918, %r11919, 25;
	shf.l.wrap.b32 	%r11925, %r11919, %r11918, 25;
	mov.b64 	%rd8038, {%r11925, %r11924};
	xor.b64  	%rd8039, %rd8037, %rd8038;
	xor.b64  	%rd8040, %rd8020, %rd7970;
	xor.b64  	%rd8041, %rd8020, %rd7995;
	and.b64  	%rd8042, %rd8041, %rd8040;
	xor.b64  	%rd8043, %rd8042, %rd8020;
	add.s64 	%rd8044, %rd8033, %rd8043;
	add.s64 	%rd8045, %rd8044, %rd8039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11926,%dummy}, %rd8034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11927}, %rd8034;
	}
	shf.r.wrap.b32 	%r11928, %r11927, %r11926, 14;
	shf.r.wrap.b32 	%r11929, %r11926, %r11927, 14;
	mov.b64 	%rd8046, {%r11929, %r11928};
	shf.r.wrap.b32 	%r11930, %r11927, %r11926, 18;
	shf.r.wrap.b32 	%r11931, %r11926, %r11927, 18;
	mov.b64 	%rd8047, {%r11931, %r11930};
	xor.b64  	%rd8048, %rd8047, %rd8046;
	shf.l.wrap.b32 	%r11932, %r11926, %r11927, 23;
	shf.l.wrap.b32 	%r11933, %r11927, %r11926, 23;
	mov.b64 	%rd8049, {%r11933, %r11932};
	xor.b64  	%rd8050, %rd8048, %rd8049;
	xor.b64  	%rd8051, %rd8009, %rd7984;
	and.b64  	%rd8052, %rd8034, %rd8051;
	xor.b64  	%rd8053, %rd8052, %rd7984;
	add.s64 	%rd8054, %rd7959, %rd7706;
	ld.const.u64 	%rd8055, [k_sha512+480];
	add.s64 	%rd8056, %rd8054, %rd8055;
	add.s64 	%rd8057, %rd8056, %rd8053;
	add.s64 	%rd8058, %rd8057, %rd8050;
	add.s64 	%rd8059, %rd8058, %rd7970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11934,%dummy}, %rd8045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11935}, %rd8045;
	}
	shf.r.wrap.b32 	%r11936, %r11935, %r11934, 28;
	shf.r.wrap.b32 	%r11937, %r11934, %r11935, 28;
	mov.b64 	%rd8060, {%r11937, %r11936};
	shf.l.wrap.b32 	%r11938, %r11934, %r11935, 30;
	shf.l.wrap.b32 	%r11939, %r11935, %r11934, 30;
	mov.b64 	%rd8061, {%r11939, %r11938};
	xor.b64  	%rd8062, %rd8061, %rd8060;
	shf.l.wrap.b32 	%r11940, %r11934, %r11935, 25;
	shf.l.wrap.b32 	%r11941, %r11935, %r11934, 25;
	mov.b64 	%rd8063, {%r11941, %r11940};
	xor.b64  	%rd8064, %rd8062, %rd8063;
	xor.b64  	%rd8065, %rd8045, %rd7995;
	xor.b64  	%rd8066, %rd8045, %rd8020;
	and.b64  	%rd8067, %rd8066, %rd8065;
	xor.b64  	%rd8068, %rd8067, %rd8045;
	add.s64 	%rd8069, %rd8058, %rd8068;
	add.s64 	%rd8070, %rd8069, %rd8064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11942,%dummy}, %rd8059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11943}, %rd8059;
	}
	shf.r.wrap.b32 	%r11944, %r11943, %r11942, 14;
	shf.r.wrap.b32 	%r11945, %r11942, %r11943, 14;
	mov.b64 	%rd8071, {%r11945, %r11944};
	shf.r.wrap.b32 	%r11946, %r11943, %r11942, 18;
	shf.r.wrap.b32 	%r11947, %r11942, %r11943, 18;
	mov.b64 	%rd8072, {%r11947, %r11946};
	xor.b64  	%rd8073, %rd8072, %rd8071;
	shf.l.wrap.b32 	%r11948, %r11942, %r11943, 23;
	shf.l.wrap.b32 	%r11949, %r11943, %r11942, 23;
	mov.b64 	%rd8074, {%r11949, %r11948};
	xor.b64  	%rd8075, %rd8073, %rd8074;
	xor.b64  	%rd8076, %rd8034, %rd8009;
	and.b64  	%rd8077, %rd8059, %rd8076;
	xor.b64  	%rd8078, %rd8077, %rd8009;
	add.s64 	%rd8079, %rd7984, %rd7719;
	ld.const.u64 	%rd8080, [k_sha512+488];
	add.s64 	%rd8081, %rd8079, %rd8080;
	add.s64 	%rd8082, %rd8081, %rd8078;
	add.s64 	%rd8083, %rd8082, %rd8075;
	add.s64 	%rd8084, %rd8083, %rd7995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11950,%dummy}, %rd8070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11951}, %rd8070;
	}
	shf.r.wrap.b32 	%r11952, %r11951, %r11950, 28;
	shf.r.wrap.b32 	%r11953, %r11950, %r11951, 28;
	mov.b64 	%rd8085, {%r11953, %r11952};
	shf.l.wrap.b32 	%r11954, %r11950, %r11951, 30;
	shf.l.wrap.b32 	%r11955, %r11951, %r11950, 30;
	mov.b64 	%rd8086, {%r11955, %r11954};
	xor.b64  	%rd8087, %rd8086, %rd8085;
	shf.l.wrap.b32 	%r11956, %r11950, %r11951, 25;
	shf.l.wrap.b32 	%r11957, %r11951, %r11950, 25;
	mov.b64 	%rd8088, {%r11957, %r11956};
	xor.b64  	%rd8089, %rd8087, %rd8088;
	xor.b64  	%rd8090, %rd8070, %rd8020;
	xor.b64  	%rd8091, %rd8070, %rd8045;
	and.b64  	%rd8092, %rd8091, %rd8090;
	xor.b64  	%rd8093, %rd8092, %rd8070;
	add.s64 	%rd8094, %rd8083, %rd8093;
	add.s64 	%rd8095, %rd8094, %rd8089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11958,%dummy}, %rd8084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11959}, %rd8084;
	}
	shf.r.wrap.b32 	%r11960, %r11959, %r11958, 14;
	shf.r.wrap.b32 	%r11961, %r11958, %r11959, 14;
	mov.b64 	%rd8096, {%r11961, %r11960};
	shf.r.wrap.b32 	%r11962, %r11959, %r11958, 18;
	shf.r.wrap.b32 	%r11963, %r11958, %r11959, 18;
	mov.b64 	%rd8097, {%r11963, %r11962};
	xor.b64  	%rd8098, %rd8097, %rd8096;
	shf.l.wrap.b32 	%r11964, %r11958, %r11959, 23;
	shf.l.wrap.b32 	%r11965, %r11959, %r11958, 23;
	mov.b64 	%rd8099, {%r11965, %r11964};
	xor.b64  	%rd8100, %rd8098, %rd8099;
	xor.b64  	%rd8101, %rd8059, %rd8034;
	and.b64  	%rd8102, %rd8084, %rd8101;
	xor.b64  	%rd8103, %rd8102, %rd8034;
	add.s64 	%rd8104, %rd8009, %rd7732;
	ld.const.u64 	%rd8105, [k_sha512+496];
	add.s64 	%rd8106, %rd8104, %rd8105;
	add.s64 	%rd8107, %rd8106, %rd8103;
	add.s64 	%rd8108, %rd8107, %rd8100;
	add.s64 	%rd8109, %rd8108, %rd8020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11966,%dummy}, %rd8095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11967}, %rd8095;
	}
	shf.r.wrap.b32 	%r11968, %r11967, %r11966, 28;
	shf.r.wrap.b32 	%r11969, %r11966, %r11967, 28;
	mov.b64 	%rd8110, {%r11969, %r11968};
	shf.l.wrap.b32 	%r11970, %r11966, %r11967, 30;
	shf.l.wrap.b32 	%r11971, %r11967, %r11966, 30;
	mov.b64 	%rd8111, {%r11971, %r11970};
	xor.b64  	%rd8112, %rd8111, %rd8110;
	shf.l.wrap.b32 	%r11972, %r11966, %r11967, 25;
	shf.l.wrap.b32 	%r11973, %r11967, %r11966, 25;
	mov.b64 	%rd8113, {%r11973, %r11972};
	xor.b64  	%rd8114, %rd8112, %rd8113;
	xor.b64  	%rd8115, %rd8095, %rd8045;
	xor.b64  	%rd8116, %rd8095, %rd8070;
	and.b64  	%rd8117, %rd8116, %rd8115;
	xor.b64  	%rd8118, %rd8117, %rd8095;
	add.s64 	%rd8119, %rd8108, %rd8118;
	add.s64 	%rd8120, %rd8119, %rd8114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11974,%dummy}, %rd8109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11975}, %rd8109;
	}
	shf.r.wrap.b32 	%r11976, %r11975, %r11974, 14;
	shf.r.wrap.b32 	%r11977, %r11974, %r11975, 14;
	mov.b64 	%rd8121, {%r11977, %r11976};
	shf.r.wrap.b32 	%r11978, %r11975, %r11974, 18;
	shf.r.wrap.b32 	%r11979, %r11974, %r11975, 18;
	mov.b64 	%rd8122, {%r11979, %r11978};
	xor.b64  	%rd8123, %rd8122, %rd8121;
	shf.l.wrap.b32 	%r11980, %r11974, %r11975, 23;
	shf.l.wrap.b32 	%r11981, %r11975, %r11974, 23;
	mov.b64 	%rd8124, {%r11981, %r11980};
	xor.b64  	%rd8125, %rd8123, %rd8124;
	xor.b64  	%rd8126, %rd8084, %rd8059;
	and.b64  	%rd8127, %rd8109, %rd8126;
	xor.b64  	%rd8128, %rd8127, %rd8059;
	add.s64 	%rd8129, %rd8034, %rd7745;
	ld.const.u64 	%rd8130, [k_sha512+504];
	add.s64 	%rd8131, %rd8129, %rd8130;
	add.s64 	%rd8132, %rd8131, %rd8128;
	add.s64 	%rd8133, %rd8132, %rd8125;
	add.s64 	%rd8134, %rd8133, %rd8045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11982,%dummy}, %rd8120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11983}, %rd8120;
	}
	shf.r.wrap.b32 	%r11984, %r11983, %r11982, 28;
	shf.r.wrap.b32 	%r11985, %r11982, %r11983, 28;
	mov.b64 	%rd8135, {%r11985, %r11984};
	shf.l.wrap.b32 	%r11986, %r11982, %r11983, 30;
	shf.l.wrap.b32 	%r11987, %r11983, %r11982, 30;
	mov.b64 	%rd8136, {%r11987, %r11986};
	xor.b64  	%rd8137, %rd8136, %rd8135;
	shf.l.wrap.b32 	%r11988, %r11982, %r11983, 25;
	shf.l.wrap.b32 	%r11989, %r11983, %r11982, 25;
	mov.b64 	%rd8138, {%r11989, %r11988};
	xor.b64  	%rd8139, %rd8137, %rd8138;
	xor.b64  	%rd8140, %rd8120, %rd8070;
	xor.b64  	%rd8141, %rd8120, %rd8095;
	and.b64  	%rd8142, %rd8141, %rd8140;
	xor.b64  	%rd8143, %rd8142, %rd8120;
	add.s64 	%rd8144, %rd8133, %rd8143;
	add.s64 	%rd8145, %rd8144, %rd8139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11990,%dummy}, %rd7732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11991}, %rd7732;
	}
	shf.r.wrap.b32 	%r11992, %r11991, %r11990, 19;
	shf.r.wrap.b32 	%r11993, %r11990, %r11991, 19;
	mov.b64 	%rd8146, {%r11993, %r11992};
	shf.l.wrap.b32 	%r11994, %r11990, %r11991, 3;
	shf.l.wrap.b32 	%r11995, %r11991, %r11990, 3;
	mov.b64 	%rd8147, {%r11995, %r11994};
	shr.u64 	%rd8148, %rd7732, 6;
	xor.b64  	%rd8149, %rd8146, %rd8148;
	xor.b64  	%rd8150, %rd8149, %rd8147;
	shf.r.wrap.b32 	%r11996, %r11605, %r11604, 1;
	shf.r.wrap.b32 	%r11997, %r11604, %r11605, 1;
	mov.b64 	%rd8151, {%r11997, %r11996};
	shf.r.wrap.b32 	%r11998, %r11605, %r11604, 8;
	shf.r.wrap.b32 	%r11999, %r11604, %r11605, 8;
	mov.b64 	%rd8152, {%r11999, %r11998};
	shr.u64 	%rd8153, %rd7563, 7;
	xor.b64  	%rd8154, %rd8151, %rd8153;
	xor.b64  	%rd8155, %rd8154, %rd8152;
	add.s64 	%rd8156, %rd7667, %rd7550;
	add.s64 	%rd8157, %rd8156, %rd8150;
	add.s64 	%rd8158, %rd8157, %rd8155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12000,%dummy}, %rd7745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12001}, %rd7745;
	}
	shf.r.wrap.b32 	%r12002, %r12001, %r12000, 19;
	shf.r.wrap.b32 	%r12003, %r12000, %r12001, 19;
	mov.b64 	%rd8159, {%r12003, %r12002};
	shf.l.wrap.b32 	%r12004, %r12000, %r12001, 3;
	shf.l.wrap.b32 	%r12005, %r12001, %r12000, 3;
	mov.b64 	%rd8160, {%r12005, %r12004};
	shr.u64 	%rd8161, %rd7745, 6;
	xor.b64  	%rd8162, %rd8159, %rd8161;
	xor.b64  	%rd8163, %rd8162, %rd8160;
	shf.r.wrap.b32 	%r12006, %r11615, %r11614, 1;
	shf.r.wrap.b32 	%r12007, %r11614, %r11615, 1;
	mov.b64 	%rd8164, {%r12007, %r12006};
	shf.r.wrap.b32 	%r12008, %r11615, %r11614, 8;
	shf.r.wrap.b32 	%r12009, %r11614, %r11615, 8;
	mov.b64 	%rd8165, {%r12009, %r12008};
	shr.u64 	%rd8166, %rd7576, 7;
	xor.b64  	%rd8167, %rd8164, %rd8166;
	xor.b64  	%rd8168, %rd8167, %rd8165;
	add.s64 	%rd8169, %rd7680, %rd7563;
	add.s64 	%rd8170, %rd8169, %rd8163;
	add.s64 	%rd8171, %rd8170, %rd8168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12010,%dummy}, %rd8158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12011}, %rd8158;
	}
	shf.r.wrap.b32 	%r12012, %r12011, %r12010, 19;
	shf.r.wrap.b32 	%r12013, %r12010, %r12011, 19;
	mov.b64 	%rd8172, {%r12013, %r12012};
	shf.l.wrap.b32 	%r12014, %r12010, %r12011, 3;
	shf.l.wrap.b32 	%r12015, %r12011, %r12010, 3;
	mov.b64 	%rd8173, {%r12015, %r12014};
	shr.u64 	%rd8174, %rd8158, 6;
	xor.b64  	%rd8175, %rd8172, %rd8174;
	xor.b64  	%rd8176, %rd8175, %rd8173;
	shf.r.wrap.b32 	%r12016, %r11625, %r11624, 1;
	shf.r.wrap.b32 	%r12017, %r11624, %r11625, 1;
	mov.b64 	%rd8177, {%r12017, %r12016};
	shf.r.wrap.b32 	%r12018, %r11625, %r11624, 8;
	shf.r.wrap.b32 	%r12019, %r11624, %r11625, 8;
	mov.b64 	%rd8178, {%r12019, %r12018};
	shr.u64 	%rd8179, %rd7589, 7;
	xor.b64  	%rd8180, %rd8177, %rd8179;
	xor.b64  	%rd8181, %rd8180, %rd8178;
	add.s64 	%rd8182, %rd7693, %rd7576;
	add.s64 	%rd8183, %rd8182, %rd8176;
	add.s64 	%rd8184, %rd8183, %rd8181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12020,%dummy}, %rd8171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12021}, %rd8171;
	}
	shf.r.wrap.b32 	%r12022, %r12021, %r12020, 19;
	shf.r.wrap.b32 	%r12023, %r12020, %r12021, 19;
	mov.b64 	%rd8185, {%r12023, %r12022};
	shf.l.wrap.b32 	%r12024, %r12020, %r12021, 3;
	shf.l.wrap.b32 	%r12025, %r12021, %r12020, 3;
	mov.b64 	%rd8186, {%r12025, %r12024};
	shr.u64 	%rd8187, %rd8171, 6;
	xor.b64  	%rd8188, %rd8185, %rd8187;
	xor.b64  	%rd8189, %rd8188, %rd8186;
	shf.r.wrap.b32 	%r12026, %r11635, %r11634, 1;
	shf.r.wrap.b32 	%r12027, %r11634, %r11635, 1;
	mov.b64 	%rd8190, {%r12027, %r12026};
	shf.r.wrap.b32 	%r12028, %r11635, %r11634, 8;
	shf.r.wrap.b32 	%r12029, %r11634, %r11635, 8;
	mov.b64 	%rd8191, {%r12029, %r12028};
	shr.u64 	%rd8192, %rd7602, 7;
	xor.b64  	%rd8193, %rd8190, %rd8192;
	xor.b64  	%rd8194, %rd8193, %rd8191;
	add.s64 	%rd8195, %rd7706, %rd7589;
	add.s64 	%rd8196, %rd8195, %rd8189;
	add.s64 	%rd8197, %rd8196, %rd8194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12030,%dummy}, %rd8184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12031}, %rd8184;
	}
	shf.r.wrap.b32 	%r12032, %r12031, %r12030, 19;
	shf.r.wrap.b32 	%r12033, %r12030, %r12031, 19;
	mov.b64 	%rd8198, {%r12033, %r12032};
	shf.l.wrap.b32 	%r12034, %r12030, %r12031, 3;
	shf.l.wrap.b32 	%r12035, %r12031, %r12030, 3;
	mov.b64 	%rd8199, {%r12035, %r12034};
	shr.u64 	%rd8200, %rd8184, 6;
	xor.b64  	%rd8201, %rd8198, %rd8200;
	xor.b64  	%rd8202, %rd8201, %rd8199;
	shf.r.wrap.b32 	%r12036, %r11645, %r11644, 1;
	shf.r.wrap.b32 	%r12037, %r11644, %r11645, 1;
	mov.b64 	%rd8203, {%r12037, %r12036};
	shf.r.wrap.b32 	%r12038, %r11645, %r11644, 8;
	shf.r.wrap.b32 	%r12039, %r11644, %r11645, 8;
	mov.b64 	%rd8204, {%r12039, %r12038};
	shr.u64 	%rd8205, %rd7615, 7;
	xor.b64  	%rd8206, %rd8203, %rd8205;
	xor.b64  	%rd8207, %rd8206, %rd8204;
	add.s64 	%rd8208, %rd7719, %rd7602;
	add.s64 	%rd8209, %rd8208, %rd8202;
	add.s64 	%rd8210, %rd8209, %rd8207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12040,%dummy}, %rd8197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12041}, %rd8197;
	}
	shf.r.wrap.b32 	%r12042, %r12041, %r12040, 19;
	shf.r.wrap.b32 	%r12043, %r12040, %r12041, 19;
	mov.b64 	%rd8211, {%r12043, %r12042};
	shf.l.wrap.b32 	%r12044, %r12040, %r12041, 3;
	shf.l.wrap.b32 	%r12045, %r12041, %r12040, 3;
	mov.b64 	%rd8212, {%r12045, %r12044};
	shr.u64 	%rd8213, %rd8197, 6;
	xor.b64  	%rd8214, %rd8211, %rd8213;
	xor.b64  	%rd8215, %rd8214, %rd8212;
	shf.r.wrap.b32 	%r12046, %r11655, %r11654, 1;
	shf.r.wrap.b32 	%r12047, %r11654, %r11655, 1;
	mov.b64 	%rd8216, {%r12047, %r12046};
	shf.r.wrap.b32 	%r12048, %r11655, %r11654, 8;
	shf.r.wrap.b32 	%r12049, %r11654, %r11655, 8;
	mov.b64 	%rd8217, {%r12049, %r12048};
	shr.u64 	%rd8218, %rd7628, 7;
	xor.b64  	%rd8219, %rd8216, %rd8218;
	xor.b64  	%rd8220, %rd8219, %rd8217;
	add.s64 	%rd8221, %rd7732, %rd7615;
	add.s64 	%rd8222, %rd8221, %rd8215;
	add.s64 	%rd8223, %rd8222, %rd8220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12050,%dummy}, %rd8210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12051}, %rd8210;
	}
	shf.r.wrap.b32 	%r12052, %r12051, %r12050, 19;
	shf.r.wrap.b32 	%r12053, %r12050, %r12051, 19;
	mov.b64 	%rd8224, {%r12053, %r12052};
	shf.l.wrap.b32 	%r12054, %r12050, %r12051, 3;
	shf.l.wrap.b32 	%r12055, %r12051, %r12050, 3;
	mov.b64 	%rd8225, {%r12055, %r12054};
	shr.u64 	%rd8226, %rd8210, 6;
	xor.b64  	%rd8227, %rd8224, %rd8226;
	xor.b64  	%rd8228, %rd8227, %rd8225;
	shf.r.wrap.b32 	%r12056, %r11665, %r11664, 1;
	shf.r.wrap.b32 	%r12057, %r11664, %r11665, 1;
	mov.b64 	%rd8229, {%r12057, %r12056};
	shf.r.wrap.b32 	%r12058, %r11665, %r11664, 8;
	shf.r.wrap.b32 	%r12059, %r11664, %r11665, 8;
	mov.b64 	%rd8230, {%r12059, %r12058};
	shr.u64 	%rd8231, %rd7641, 7;
	xor.b64  	%rd8232, %rd8229, %rd8231;
	xor.b64  	%rd8233, %rd8232, %rd8230;
	add.s64 	%rd8234, %rd7745, %rd7628;
	add.s64 	%rd8235, %rd8234, %rd8228;
	add.s64 	%rd8236, %rd8235, %rd8233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12060,%dummy}, %rd8223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12061}, %rd8223;
	}
	shf.r.wrap.b32 	%r12062, %r12061, %r12060, 19;
	shf.r.wrap.b32 	%r12063, %r12060, %r12061, 19;
	mov.b64 	%rd8237, {%r12063, %r12062};
	shf.l.wrap.b32 	%r12064, %r12060, %r12061, 3;
	shf.l.wrap.b32 	%r12065, %r12061, %r12060, 3;
	mov.b64 	%rd8238, {%r12065, %r12064};
	shr.u64 	%rd8239, %rd8223, 6;
	xor.b64  	%rd8240, %rd8237, %rd8239;
	xor.b64  	%rd8241, %rd8240, %rd8238;
	shf.r.wrap.b32 	%r12066, %r11675, %r11674, 1;
	shf.r.wrap.b32 	%r12067, %r11674, %r11675, 1;
	mov.b64 	%rd8242, {%r12067, %r12066};
	shf.r.wrap.b32 	%r12068, %r11675, %r11674, 8;
	shf.r.wrap.b32 	%r12069, %r11674, %r11675, 8;
	mov.b64 	%rd8243, {%r12069, %r12068};
	shr.u64 	%rd8244, %rd7654, 7;
	xor.b64  	%rd8245, %rd8242, %rd8244;
	xor.b64  	%rd8246, %rd8245, %rd8243;
	add.s64 	%rd8247, %rd8158, %rd7641;
	add.s64 	%rd8248, %rd8247, %rd8241;
	add.s64 	%rd8249, %rd8248, %rd8246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12070,%dummy}, %rd8236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12071}, %rd8236;
	}
	shf.r.wrap.b32 	%r12072, %r12071, %r12070, 19;
	shf.r.wrap.b32 	%r12073, %r12070, %r12071, 19;
	mov.b64 	%rd8250, {%r12073, %r12072};
	shf.l.wrap.b32 	%r12074, %r12070, %r12071, 3;
	shf.l.wrap.b32 	%r12075, %r12071, %r12070, 3;
	mov.b64 	%rd8251, {%r12075, %r12074};
	shr.u64 	%rd8252, %rd8236, 6;
	xor.b64  	%rd8253, %rd8250, %rd8252;
	xor.b64  	%rd8254, %rd8253, %rd8251;
	shf.r.wrap.b32 	%r12076, %r11685, %r11684, 1;
	shf.r.wrap.b32 	%r12077, %r11684, %r11685, 1;
	mov.b64 	%rd8255, {%r12077, %r12076};
	shf.r.wrap.b32 	%r12078, %r11685, %r11684, 8;
	shf.r.wrap.b32 	%r12079, %r11684, %r11685, 8;
	mov.b64 	%rd8256, {%r12079, %r12078};
	shr.u64 	%rd8257, %rd7667, 7;
	xor.b64  	%rd8258, %rd8255, %rd8257;
	xor.b64  	%rd8259, %rd8258, %rd8256;
	add.s64 	%rd8260, %rd8171, %rd7654;
	add.s64 	%rd8261, %rd8260, %rd8254;
	add.s64 	%rd8262, %rd8261, %rd8259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12080,%dummy}, %rd8249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12081}, %rd8249;
	}
	shf.r.wrap.b32 	%r12082, %r12081, %r12080, 19;
	shf.r.wrap.b32 	%r12083, %r12080, %r12081, 19;
	mov.b64 	%rd8263, {%r12083, %r12082};
	shf.l.wrap.b32 	%r12084, %r12080, %r12081, 3;
	shf.l.wrap.b32 	%r12085, %r12081, %r12080, 3;
	mov.b64 	%rd8264, {%r12085, %r12084};
	shr.u64 	%rd8265, %rd8249, 6;
	xor.b64  	%rd8266, %rd8263, %rd8265;
	xor.b64  	%rd8267, %rd8266, %rd8264;
	shf.r.wrap.b32 	%r12086, %r11695, %r11694, 1;
	shf.r.wrap.b32 	%r12087, %r11694, %r11695, 1;
	mov.b64 	%rd8268, {%r12087, %r12086};
	shf.r.wrap.b32 	%r12088, %r11695, %r11694, 8;
	shf.r.wrap.b32 	%r12089, %r11694, %r11695, 8;
	mov.b64 	%rd8269, {%r12089, %r12088};
	shr.u64 	%rd8270, %rd7680, 7;
	xor.b64  	%rd8271, %rd8268, %rd8270;
	xor.b64  	%rd8272, %rd8271, %rd8269;
	add.s64 	%rd8273, %rd8184, %rd7667;
	add.s64 	%rd8274, %rd8273, %rd8267;
	add.s64 	%rd8275, %rd8274, %rd8272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12090,%dummy}, %rd8262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12091}, %rd8262;
	}
	shf.r.wrap.b32 	%r12092, %r12091, %r12090, 19;
	shf.r.wrap.b32 	%r12093, %r12090, %r12091, 19;
	mov.b64 	%rd8276, {%r12093, %r12092};
	shf.l.wrap.b32 	%r12094, %r12090, %r12091, 3;
	shf.l.wrap.b32 	%r12095, %r12091, %r12090, 3;
	mov.b64 	%rd8277, {%r12095, %r12094};
	shr.u64 	%rd8278, %rd8262, 6;
	xor.b64  	%rd8279, %rd8276, %rd8278;
	xor.b64  	%rd8280, %rd8279, %rd8277;
	shf.r.wrap.b32 	%r12096, %r11705, %r11704, 1;
	shf.r.wrap.b32 	%r12097, %r11704, %r11705, 1;
	mov.b64 	%rd8281, {%r12097, %r12096};
	shf.r.wrap.b32 	%r12098, %r11705, %r11704, 8;
	shf.r.wrap.b32 	%r12099, %r11704, %r11705, 8;
	mov.b64 	%rd8282, {%r12099, %r12098};
	shr.u64 	%rd8283, %rd7693, 7;
	xor.b64  	%rd8284, %rd8281, %rd8283;
	xor.b64  	%rd8285, %rd8284, %rd8282;
	add.s64 	%rd8286, %rd8197, %rd7680;
	add.s64 	%rd8287, %rd8286, %rd8280;
	add.s64 	%rd8288, %rd8287, %rd8285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12100,%dummy}, %rd8275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12101}, %rd8275;
	}
	shf.r.wrap.b32 	%r12102, %r12101, %r12100, 19;
	shf.r.wrap.b32 	%r12103, %r12100, %r12101, 19;
	mov.b64 	%rd8289, {%r12103, %r12102};
	shf.l.wrap.b32 	%r12104, %r12100, %r12101, 3;
	shf.l.wrap.b32 	%r12105, %r12101, %r12100, 3;
	mov.b64 	%rd8290, {%r12105, %r12104};
	shr.u64 	%rd8291, %rd8275, 6;
	xor.b64  	%rd8292, %rd8289, %rd8291;
	xor.b64  	%rd8293, %rd8292, %rd8290;
	shf.r.wrap.b32 	%r12106, %r11715, %r11714, 1;
	shf.r.wrap.b32 	%r12107, %r11714, %r11715, 1;
	mov.b64 	%rd8294, {%r12107, %r12106};
	shf.r.wrap.b32 	%r12108, %r11715, %r11714, 8;
	shf.r.wrap.b32 	%r12109, %r11714, %r11715, 8;
	mov.b64 	%rd8295, {%r12109, %r12108};
	shr.u64 	%rd8296, %rd7706, 7;
	xor.b64  	%rd8297, %rd8294, %rd8296;
	xor.b64  	%rd8298, %rd8297, %rd8295;
	add.s64 	%rd8299, %rd8210, %rd7693;
	add.s64 	%rd8300, %rd8299, %rd8293;
	add.s64 	%rd8301, %rd8300, %rd8298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12110,%dummy}, %rd8288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12111}, %rd8288;
	}
	shf.r.wrap.b32 	%r12112, %r12111, %r12110, 19;
	shf.r.wrap.b32 	%r12113, %r12110, %r12111, 19;
	mov.b64 	%rd8302, {%r12113, %r12112};
	shf.l.wrap.b32 	%r12114, %r12110, %r12111, 3;
	shf.l.wrap.b32 	%r12115, %r12111, %r12110, 3;
	mov.b64 	%rd8303, {%r12115, %r12114};
	shr.u64 	%rd8304, %rd8288, 6;
	xor.b64  	%rd8305, %rd8302, %rd8304;
	xor.b64  	%rd8306, %rd8305, %rd8303;
	shf.r.wrap.b32 	%r12116, %r11725, %r11724, 1;
	shf.r.wrap.b32 	%r12117, %r11724, %r11725, 1;
	mov.b64 	%rd8307, {%r12117, %r12116};
	shf.r.wrap.b32 	%r12118, %r11725, %r11724, 8;
	shf.r.wrap.b32 	%r12119, %r11724, %r11725, 8;
	mov.b64 	%rd8308, {%r12119, %r12118};
	shr.u64 	%rd8309, %rd7719, 7;
	xor.b64  	%rd8310, %rd8307, %rd8309;
	xor.b64  	%rd8311, %rd8310, %rd8308;
	add.s64 	%rd8312, %rd8223, %rd7706;
	add.s64 	%rd8313, %rd8312, %rd8306;
	add.s64 	%rd8314, %rd8313, %rd8311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12120,%dummy}, %rd8301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12121}, %rd8301;
	}
	shf.r.wrap.b32 	%r12122, %r12121, %r12120, 19;
	shf.r.wrap.b32 	%r12123, %r12120, %r12121, 19;
	mov.b64 	%rd8315, {%r12123, %r12122};
	shf.l.wrap.b32 	%r12124, %r12120, %r12121, 3;
	shf.l.wrap.b32 	%r12125, %r12121, %r12120, 3;
	mov.b64 	%rd8316, {%r12125, %r12124};
	shr.u64 	%rd8317, %rd8301, 6;
	xor.b64  	%rd8318, %rd8315, %rd8317;
	xor.b64  	%rd8319, %rd8318, %rd8316;
	shf.r.wrap.b32 	%r12126, %r11991, %r11990, 1;
	shf.r.wrap.b32 	%r12127, %r11990, %r11991, 1;
	mov.b64 	%rd8320, {%r12127, %r12126};
	shf.r.wrap.b32 	%r12128, %r11991, %r11990, 8;
	shf.r.wrap.b32 	%r12129, %r11990, %r11991, 8;
	mov.b64 	%rd8321, {%r12129, %r12128};
	shr.u64 	%rd8322, %rd7732, 7;
	xor.b64  	%rd8323, %rd8320, %rd8322;
	xor.b64  	%rd8324, %rd8323, %rd8321;
	add.s64 	%rd8325, %rd8236, %rd7719;
	add.s64 	%rd8326, %rd8325, %rd8319;
	add.s64 	%rd8327, %rd8326, %rd8324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12130,%dummy}, %rd8314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12131}, %rd8314;
	}
	shf.r.wrap.b32 	%r12132, %r12131, %r12130, 19;
	shf.r.wrap.b32 	%r12133, %r12130, %r12131, 19;
	mov.b64 	%rd8328, {%r12133, %r12132};
	shf.l.wrap.b32 	%r12134, %r12130, %r12131, 3;
	shf.l.wrap.b32 	%r12135, %r12131, %r12130, 3;
	mov.b64 	%rd8329, {%r12135, %r12134};
	shr.u64 	%rd8330, %rd8314, 6;
	xor.b64  	%rd8331, %rd8328, %rd8330;
	xor.b64  	%rd8332, %rd8331, %rd8329;
	shf.r.wrap.b32 	%r12136, %r12001, %r12000, 1;
	shf.r.wrap.b32 	%r12137, %r12000, %r12001, 1;
	mov.b64 	%rd8333, {%r12137, %r12136};
	shf.r.wrap.b32 	%r12138, %r12001, %r12000, 8;
	shf.r.wrap.b32 	%r12139, %r12000, %r12001, 8;
	mov.b64 	%rd8334, {%r12139, %r12138};
	shr.u64 	%rd8335, %rd7745, 7;
	xor.b64  	%rd8336, %rd8333, %rd8335;
	xor.b64  	%rd8337, %rd8336, %rd8334;
	add.s64 	%rd8338, %rd8249, %rd7732;
	add.s64 	%rd8339, %rd8338, %rd8332;
	add.s64 	%rd8340, %rd8339, %rd8337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12140,%dummy}, %rd8327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12141}, %rd8327;
	}
	shf.r.wrap.b32 	%r12142, %r12141, %r12140, 19;
	shf.r.wrap.b32 	%r12143, %r12140, %r12141, 19;
	mov.b64 	%rd8341, {%r12143, %r12142};
	shf.l.wrap.b32 	%r12144, %r12140, %r12141, 3;
	shf.l.wrap.b32 	%r12145, %r12141, %r12140, 3;
	mov.b64 	%rd8342, {%r12145, %r12144};
	shr.u64 	%rd8343, %rd8327, 6;
	xor.b64  	%rd8344, %rd8341, %rd8343;
	xor.b64  	%rd8345, %rd8344, %rd8342;
	shf.r.wrap.b32 	%r12146, %r12011, %r12010, 1;
	shf.r.wrap.b32 	%r12147, %r12010, %r12011, 1;
	mov.b64 	%rd8346, {%r12147, %r12146};
	shf.r.wrap.b32 	%r12148, %r12011, %r12010, 8;
	shf.r.wrap.b32 	%r12149, %r12010, %r12011, 8;
	mov.b64 	%rd8347, {%r12149, %r12148};
	shr.u64 	%rd8348, %rd8158, 7;
	xor.b64  	%rd8349, %rd8346, %rd8348;
	xor.b64  	%rd8350, %rd8349, %rd8347;
	add.s64 	%rd8351, %rd8262, %rd7745;
	add.s64 	%rd8352, %rd8351, %rd8345;
	add.s64 	%rd8353, %rd8352, %rd8350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12150,%dummy}, %rd8134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12151}, %rd8134;
	}
	shf.r.wrap.b32 	%r12152, %r12151, %r12150, 14;
	shf.r.wrap.b32 	%r12153, %r12150, %r12151, 14;
	mov.b64 	%rd8354, {%r12153, %r12152};
	shf.r.wrap.b32 	%r12154, %r12151, %r12150, 18;
	shf.r.wrap.b32 	%r12155, %r12150, %r12151, 18;
	mov.b64 	%rd8355, {%r12155, %r12154};
	xor.b64  	%rd8356, %rd8355, %rd8354;
	shf.l.wrap.b32 	%r12156, %r12150, %r12151, 23;
	shf.l.wrap.b32 	%r12157, %r12151, %r12150, 23;
	mov.b64 	%rd8357, {%r12157, %r12156};
	xor.b64  	%rd8358, %rd8356, %rd8357;
	xor.b64  	%rd8359, %rd8109, %rd8084;
	and.b64  	%rd8360, %rd8359, %rd8134;
	xor.b64  	%rd8361, %rd8360, %rd8084;
	add.s64 	%rd8362, %rd8361, %rd8059;
	add.s64 	%rd8363, %rd8362, %rd8158;
	ld.const.u64 	%rd8364, [k_sha512+512];
	add.s64 	%rd8365, %rd8363, %rd8364;
	add.s64 	%rd8366, %rd8365, %rd8358;
	add.s64 	%rd8367, %rd8366, %rd8070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12158,%dummy}, %rd8145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12159}, %rd8145;
	}
	shf.r.wrap.b32 	%r12160, %r12159, %r12158, 28;
	shf.r.wrap.b32 	%r12161, %r12158, %r12159, 28;
	mov.b64 	%rd8368, {%r12161, %r12160};
	shf.l.wrap.b32 	%r12162, %r12158, %r12159, 30;
	shf.l.wrap.b32 	%r12163, %r12159, %r12158, 30;
	mov.b64 	%rd8369, {%r12163, %r12162};
	xor.b64  	%rd8370, %rd8369, %rd8368;
	shf.l.wrap.b32 	%r12164, %r12158, %r12159, 25;
	shf.l.wrap.b32 	%r12165, %r12159, %r12158, 25;
	mov.b64 	%rd8371, {%r12165, %r12164};
	xor.b64  	%rd8372, %rd8370, %rd8371;
	xor.b64  	%rd8373, %rd8145, %rd8095;
	xor.b64  	%rd8374, %rd8145, %rd8120;
	and.b64  	%rd8375, %rd8374, %rd8373;
	xor.b64  	%rd8376, %rd8375, %rd8145;
	add.s64 	%rd8377, %rd8366, %rd8376;
	add.s64 	%rd8378, %rd8377, %rd8372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12166,%dummy}, %rd8367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12167}, %rd8367;
	}
	shf.r.wrap.b32 	%r12168, %r12167, %r12166, 14;
	shf.r.wrap.b32 	%r12169, %r12166, %r12167, 14;
	mov.b64 	%rd8379, {%r12169, %r12168};
	shf.r.wrap.b32 	%r12170, %r12167, %r12166, 18;
	shf.r.wrap.b32 	%r12171, %r12166, %r12167, 18;
	mov.b64 	%rd8380, {%r12171, %r12170};
	xor.b64  	%rd8381, %rd8380, %rd8379;
	shf.l.wrap.b32 	%r12172, %r12166, %r12167, 23;
	shf.l.wrap.b32 	%r12173, %r12167, %r12166, 23;
	mov.b64 	%rd8382, {%r12173, %r12172};
	xor.b64  	%rd8383, %rd8381, %rd8382;
	xor.b64  	%rd8384, %rd8134, %rd8109;
	and.b64  	%rd8385, %rd8367, %rd8384;
	xor.b64  	%rd8386, %rd8385, %rd8109;
	add.s64 	%rd8387, %rd8171, %rd8084;
	ld.const.u64 	%rd8388, [k_sha512+520];
	add.s64 	%rd8389, %rd8387, %rd8388;
	add.s64 	%rd8390, %rd8389, %rd8386;
	add.s64 	%rd8391, %rd8390, %rd8383;
	add.s64 	%rd8392, %rd8391, %rd8095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12174,%dummy}, %rd8378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12175}, %rd8378;
	}
	shf.r.wrap.b32 	%r12176, %r12175, %r12174, 28;
	shf.r.wrap.b32 	%r12177, %r12174, %r12175, 28;
	mov.b64 	%rd8393, {%r12177, %r12176};
	shf.l.wrap.b32 	%r12178, %r12174, %r12175, 30;
	shf.l.wrap.b32 	%r12179, %r12175, %r12174, 30;
	mov.b64 	%rd8394, {%r12179, %r12178};
	xor.b64  	%rd8395, %rd8394, %rd8393;
	shf.l.wrap.b32 	%r12180, %r12174, %r12175, 25;
	shf.l.wrap.b32 	%r12181, %r12175, %r12174, 25;
	mov.b64 	%rd8396, {%r12181, %r12180};
	xor.b64  	%rd8397, %rd8395, %rd8396;
	xor.b64  	%rd8398, %rd8378, %rd8120;
	xor.b64  	%rd8399, %rd8378, %rd8145;
	and.b64  	%rd8400, %rd8399, %rd8398;
	xor.b64  	%rd8401, %rd8400, %rd8378;
	add.s64 	%rd8402, %rd8391, %rd8401;
	add.s64 	%rd8403, %rd8402, %rd8397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12182,%dummy}, %rd8392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12183}, %rd8392;
	}
	shf.r.wrap.b32 	%r12184, %r12183, %r12182, 14;
	shf.r.wrap.b32 	%r12185, %r12182, %r12183, 14;
	mov.b64 	%rd8404, {%r12185, %r12184};
	shf.r.wrap.b32 	%r12186, %r12183, %r12182, 18;
	shf.r.wrap.b32 	%r12187, %r12182, %r12183, 18;
	mov.b64 	%rd8405, {%r12187, %r12186};
	xor.b64  	%rd8406, %rd8405, %rd8404;
	shf.l.wrap.b32 	%r12188, %r12182, %r12183, 23;
	shf.l.wrap.b32 	%r12189, %r12183, %r12182, 23;
	mov.b64 	%rd8407, {%r12189, %r12188};
	xor.b64  	%rd8408, %rd8406, %rd8407;
	xor.b64  	%rd8409, %rd8367, %rd8134;
	and.b64  	%rd8410, %rd8392, %rd8409;
	xor.b64  	%rd8411, %rd8410, %rd8134;
	add.s64 	%rd8412, %rd8184, %rd8109;
	ld.const.u64 	%rd8413, [k_sha512+528];
	add.s64 	%rd8414, %rd8412, %rd8413;
	add.s64 	%rd8415, %rd8414, %rd8411;
	add.s64 	%rd8416, %rd8415, %rd8408;
	add.s64 	%rd8417, %rd8416, %rd8120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12190,%dummy}, %rd8403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12191}, %rd8403;
	}
	shf.r.wrap.b32 	%r12192, %r12191, %r12190, 28;
	shf.r.wrap.b32 	%r12193, %r12190, %r12191, 28;
	mov.b64 	%rd8418, {%r12193, %r12192};
	shf.l.wrap.b32 	%r12194, %r12190, %r12191, 30;
	shf.l.wrap.b32 	%r12195, %r12191, %r12190, 30;
	mov.b64 	%rd8419, {%r12195, %r12194};
	xor.b64  	%rd8420, %rd8419, %rd8418;
	shf.l.wrap.b32 	%r12196, %r12190, %r12191, 25;
	shf.l.wrap.b32 	%r12197, %r12191, %r12190, 25;
	mov.b64 	%rd8421, {%r12197, %r12196};
	xor.b64  	%rd8422, %rd8420, %rd8421;
	xor.b64  	%rd8423, %rd8403, %rd8145;
	xor.b64  	%rd8424, %rd8403, %rd8378;
	and.b64  	%rd8425, %rd8424, %rd8423;
	xor.b64  	%rd8426, %rd8425, %rd8403;
	add.s64 	%rd8427, %rd8416, %rd8426;
	add.s64 	%rd8428, %rd8427, %rd8422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12198,%dummy}, %rd8417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12199}, %rd8417;
	}
	shf.r.wrap.b32 	%r12200, %r12199, %r12198, 14;
	shf.r.wrap.b32 	%r12201, %r12198, %r12199, 14;
	mov.b64 	%rd8429, {%r12201, %r12200};
	shf.r.wrap.b32 	%r12202, %r12199, %r12198, 18;
	shf.r.wrap.b32 	%r12203, %r12198, %r12199, 18;
	mov.b64 	%rd8430, {%r12203, %r12202};
	xor.b64  	%rd8431, %rd8430, %rd8429;
	shf.l.wrap.b32 	%r12204, %r12198, %r12199, 23;
	shf.l.wrap.b32 	%r12205, %r12199, %r12198, 23;
	mov.b64 	%rd8432, {%r12205, %r12204};
	xor.b64  	%rd8433, %rd8431, %rd8432;
	xor.b64  	%rd8434, %rd8392, %rd8367;
	and.b64  	%rd8435, %rd8417, %rd8434;
	xor.b64  	%rd8436, %rd8435, %rd8367;
	add.s64 	%rd8437, %rd8197, %rd8134;
	ld.const.u64 	%rd8438, [k_sha512+536];
	add.s64 	%rd8439, %rd8437, %rd8438;
	add.s64 	%rd8440, %rd8439, %rd8436;
	add.s64 	%rd8441, %rd8440, %rd8433;
	add.s64 	%rd8442, %rd8441, %rd8145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12206,%dummy}, %rd8428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12207}, %rd8428;
	}
	shf.r.wrap.b32 	%r12208, %r12207, %r12206, 28;
	shf.r.wrap.b32 	%r12209, %r12206, %r12207, 28;
	mov.b64 	%rd8443, {%r12209, %r12208};
	shf.l.wrap.b32 	%r12210, %r12206, %r12207, 30;
	shf.l.wrap.b32 	%r12211, %r12207, %r12206, 30;
	mov.b64 	%rd8444, {%r12211, %r12210};
	xor.b64  	%rd8445, %rd8444, %rd8443;
	shf.l.wrap.b32 	%r12212, %r12206, %r12207, 25;
	shf.l.wrap.b32 	%r12213, %r12207, %r12206, 25;
	mov.b64 	%rd8446, {%r12213, %r12212};
	xor.b64  	%rd8447, %rd8445, %rd8446;
	xor.b64  	%rd8448, %rd8428, %rd8378;
	xor.b64  	%rd8449, %rd8428, %rd8403;
	and.b64  	%rd8450, %rd8449, %rd8448;
	xor.b64  	%rd8451, %rd8450, %rd8428;
	add.s64 	%rd8452, %rd8441, %rd8451;
	add.s64 	%rd8453, %rd8452, %rd8447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12214,%dummy}, %rd8442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12215}, %rd8442;
	}
	shf.r.wrap.b32 	%r12216, %r12215, %r12214, 14;
	shf.r.wrap.b32 	%r12217, %r12214, %r12215, 14;
	mov.b64 	%rd8454, {%r12217, %r12216};
	shf.r.wrap.b32 	%r12218, %r12215, %r12214, 18;
	shf.r.wrap.b32 	%r12219, %r12214, %r12215, 18;
	mov.b64 	%rd8455, {%r12219, %r12218};
	xor.b64  	%rd8456, %rd8455, %rd8454;
	shf.l.wrap.b32 	%r12220, %r12214, %r12215, 23;
	shf.l.wrap.b32 	%r12221, %r12215, %r12214, 23;
	mov.b64 	%rd8457, {%r12221, %r12220};
	xor.b64  	%rd8458, %rd8456, %rd8457;
	xor.b64  	%rd8459, %rd8417, %rd8392;
	and.b64  	%rd8460, %rd8442, %rd8459;
	xor.b64  	%rd8461, %rd8460, %rd8392;
	add.s64 	%rd8462, %rd8367, %rd8210;
	ld.const.u64 	%rd8463, [k_sha512+544];
	add.s64 	%rd8464, %rd8462, %rd8463;
	add.s64 	%rd8465, %rd8464, %rd8461;
	add.s64 	%rd8466, %rd8465, %rd8458;
	add.s64 	%rd8467, %rd8466, %rd8378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12222,%dummy}, %rd8453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12223}, %rd8453;
	}
	shf.r.wrap.b32 	%r12224, %r12223, %r12222, 28;
	shf.r.wrap.b32 	%r12225, %r12222, %r12223, 28;
	mov.b64 	%rd8468, {%r12225, %r12224};
	shf.l.wrap.b32 	%r12226, %r12222, %r12223, 30;
	shf.l.wrap.b32 	%r12227, %r12223, %r12222, 30;
	mov.b64 	%rd8469, {%r12227, %r12226};
	xor.b64  	%rd8470, %rd8469, %rd8468;
	shf.l.wrap.b32 	%r12228, %r12222, %r12223, 25;
	shf.l.wrap.b32 	%r12229, %r12223, %r12222, 25;
	mov.b64 	%rd8471, {%r12229, %r12228};
	xor.b64  	%rd8472, %rd8470, %rd8471;
	xor.b64  	%rd8473, %rd8453, %rd8403;
	xor.b64  	%rd8474, %rd8453, %rd8428;
	and.b64  	%rd8475, %rd8474, %rd8473;
	xor.b64  	%rd8476, %rd8475, %rd8453;
	add.s64 	%rd8477, %rd8466, %rd8476;
	add.s64 	%rd8478, %rd8477, %rd8472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12230,%dummy}, %rd8467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12231}, %rd8467;
	}
	shf.r.wrap.b32 	%r12232, %r12231, %r12230, 14;
	shf.r.wrap.b32 	%r12233, %r12230, %r12231, 14;
	mov.b64 	%rd8479, {%r12233, %r12232};
	shf.r.wrap.b32 	%r12234, %r12231, %r12230, 18;
	shf.r.wrap.b32 	%r12235, %r12230, %r12231, 18;
	mov.b64 	%rd8480, {%r12235, %r12234};
	xor.b64  	%rd8481, %rd8480, %rd8479;
	shf.l.wrap.b32 	%r12236, %r12230, %r12231, 23;
	shf.l.wrap.b32 	%r12237, %r12231, %r12230, 23;
	mov.b64 	%rd8482, {%r12237, %r12236};
	xor.b64  	%rd8483, %rd8481, %rd8482;
	xor.b64  	%rd8484, %rd8442, %rd8417;
	and.b64  	%rd8485, %rd8467, %rd8484;
	xor.b64  	%rd8486, %rd8485, %rd8417;
	add.s64 	%rd8487, %rd8392, %rd8223;
	ld.const.u64 	%rd8488, [k_sha512+552];
	add.s64 	%rd8489, %rd8487, %rd8488;
	add.s64 	%rd8490, %rd8489, %rd8486;
	add.s64 	%rd8491, %rd8490, %rd8483;
	add.s64 	%rd8492, %rd8491, %rd8403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12238,%dummy}, %rd8478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12239}, %rd8478;
	}
	shf.r.wrap.b32 	%r12240, %r12239, %r12238, 28;
	shf.r.wrap.b32 	%r12241, %r12238, %r12239, 28;
	mov.b64 	%rd8493, {%r12241, %r12240};
	shf.l.wrap.b32 	%r12242, %r12238, %r12239, 30;
	shf.l.wrap.b32 	%r12243, %r12239, %r12238, 30;
	mov.b64 	%rd8494, {%r12243, %r12242};
	xor.b64  	%rd8495, %rd8494, %rd8493;
	shf.l.wrap.b32 	%r12244, %r12238, %r12239, 25;
	shf.l.wrap.b32 	%r12245, %r12239, %r12238, 25;
	mov.b64 	%rd8496, {%r12245, %r12244};
	xor.b64  	%rd8497, %rd8495, %rd8496;
	xor.b64  	%rd8498, %rd8478, %rd8428;
	xor.b64  	%rd8499, %rd8478, %rd8453;
	and.b64  	%rd8500, %rd8499, %rd8498;
	xor.b64  	%rd8501, %rd8500, %rd8478;
	add.s64 	%rd8502, %rd8491, %rd8501;
	add.s64 	%rd8503, %rd8502, %rd8497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12246,%dummy}, %rd8492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12247}, %rd8492;
	}
	shf.r.wrap.b32 	%r12248, %r12247, %r12246, 14;
	shf.r.wrap.b32 	%r12249, %r12246, %r12247, 14;
	mov.b64 	%rd8504, {%r12249, %r12248};
	shf.r.wrap.b32 	%r12250, %r12247, %r12246, 18;
	shf.r.wrap.b32 	%r12251, %r12246, %r12247, 18;
	mov.b64 	%rd8505, {%r12251, %r12250};
	xor.b64  	%rd8506, %rd8505, %rd8504;
	shf.l.wrap.b32 	%r12252, %r12246, %r12247, 23;
	shf.l.wrap.b32 	%r12253, %r12247, %r12246, 23;
	mov.b64 	%rd8507, {%r12253, %r12252};
	xor.b64  	%rd8508, %rd8506, %rd8507;
	xor.b64  	%rd8509, %rd8467, %rd8442;
	and.b64  	%rd8510, %rd8492, %rd8509;
	xor.b64  	%rd8511, %rd8510, %rd8442;
	add.s64 	%rd8512, %rd8417, %rd8236;
	ld.const.u64 	%rd8513, [k_sha512+560];
	add.s64 	%rd8514, %rd8512, %rd8513;
	add.s64 	%rd8515, %rd8514, %rd8511;
	add.s64 	%rd8516, %rd8515, %rd8508;
	add.s64 	%rd8517, %rd8516, %rd8428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12254,%dummy}, %rd8503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12255}, %rd8503;
	}
	shf.r.wrap.b32 	%r12256, %r12255, %r12254, 28;
	shf.r.wrap.b32 	%r12257, %r12254, %r12255, 28;
	mov.b64 	%rd8518, {%r12257, %r12256};
	shf.l.wrap.b32 	%r12258, %r12254, %r12255, 30;
	shf.l.wrap.b32 	%r12259, %r12255, %r12254, 30;
	mov.b64 	%rd8519, {%r12259, %r12258};
	xor.b64  	%rd8520, %rd8519, %rd8518;
	shf.l.wrap.b32 	%r12260, %r12254, %r12255, 25;
	shf.l.wrap.b32 	%r12261, %r12255, %r12254, 25;
	mov.b64 	%rd8521, {%r12261, %r12260};
	xor.b64  	%rd8522, %rd8520, %rd8521;
	xor.b64  	%rd8523, %rd8503, %rd8453;
	xor.b64  	%rd8524, %rd8503, %rd8478;
	and.b64  	%rd8525, %rd8524, %rd8523;
	xor.b64  	%rd8526, %rd8525, %rd8503;
	add.s64 	%rd8527, %rd8516, %rd8526;
	add.s64 	%rd8528, %rd8527, %rd8522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12262,%dummy}, %rd8517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12263}, %rd8517;
	}
	shf.r.wrap.b32 	%r12264, %r12263, %r12262, 14;
	shf.r.wrap.b32 	%r12265, %r12262, %r12263, 14;
	mov.b64 	%rd8529, {%r12265, %r12264};
	shf.r.wrap.b32 	%r12266, %r12263, %r12262, 18;
	shf.r.wrap.b32 	%r12267, %r12262, %r12263, 18;
	mov.b64 	%rd8530, {%r12267, %r12266};
	xor.b64  	%rd8531, %rd8530, %rd8529;
	shf.l.wrap.b32 	%r12268, %r12262, %r12263, 23;
	shf.l.wrap.b32 	%r12269, %r12263, %r12262, 23;
	mov.b64 	%rd8532, {%r12269, %r12268};
	xor.b64  	%rd8533, %rd8531, %rd8532;
	xor.b64  	%rd8534, %rd8492, %rd8467;
	and.b64  	%rd8535, %rd8517, %rd8534;
	xor.b64  	%rd8536, %rd8535, %rd8467;
	add.s64 	%rd8537, %rd8442, %rd8249;
	ld.const.u64 	%rd8538, [k_sha512+568];
	add.s64 	%rd8539, %rd8537, %rd8538;
	add.s64 	%rd8540, %rd8539, %rd8536;
	add.s64 	%rd8541, %rd8540, %rd8533;
	add.s64 	%rd8542, %rd8541, %rd8453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12270,%dummy}, %rd8528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12271}, %rd8528;
	}
	shf.r.wrap.b32 	%r12272, %r12271, %r12270, 28;
	shf.r.wrap.b32 	%r12273, %r12270, %r12271, 28;
	mov.b64 	%rd8543, {%r12273, %r12272};
	shf.l.wrap.b32 	%r12274, %r12270, %r12271, 30;
	shf.l.wrap.b32 	%r12275, %r12271, %r12270, 30;
	mov.b64 	%rd8544, {%r12275, %r12274};
	xor.b64  	%rd8545, %rd8544, %rd8543;
	shf.l.wrap.b32 	%r12276, %r12270, %r12271, 25;
	shf.l.wrap.b32 	%r12277, %r12271, %r12270, 25;
	mov.b64 	%rd8546, {%r12277, %r12276};
	xor.b64  	%rd8547, %rd8545, %rd8546;
	xor.b64  	%rd8548, %rd8528, %rd8478;
	xor.b64  	%rd8549, %rd8528, %rd8503;
	and.b64  	%rd8550, %rd8549, %rd8548;
	xor.b64  	%rd8551, %rd8550, %rd8528;
	add.s64 	%rd8552, %rd8541, %rd8551;
	add.s64 	%rd8553, %rd8552, %rd8547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12278,%dummy}, %rd8542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12279}, %rd8542;
	}
	shf.r.wrap.b32 	%r12280, %r12279, %r12278, 14;
	shf.r.wrap.b32 	%r12281, %r12278, %r12279, 14;
	mov.b64 	%rd8554, {%r12281, %r12280};
	shf.r.wrap.b32 	%r12282, %r12279, %r12278, 18;
	shf.r.wrap.b32 	%r12283, %r12278, %r12279, 18;
	mov.b64 	%rd8555, {%r12283, %r12282};
	xor.b64  	%rd8556, %rd8555, %rd8554;
	shf.l.wrap.b32 	%r12284, %r12278, %r12279, 23;
	shf.l.wrap.b32 	%r12285, %r12279, %r12278, 23;
	mov.b64 	%rd8557, {%r12285, %r12284};
	xor.b64  	%rd8558, %rd8556, %rd8557;
	xor.b64  	%rd8559, %rd8517, %rd8492;
	and.b64  	%rd8560, %rd8542, %rd8559;
	xor.b64  	%rd8561, %rd8560, %rd8492;
	add.s64 	%rd8562, %rd8467, %rd8262;
	ld.const.u64 	%rd8563, [k_sha512+576];
	add.s64 	%rd8564, %rd8562, %rd8563;
	add.s64 	%rd8565, %rd8564, %rd8561;
	add.s64 	%rd8566, %rd8565, %rd8558;
	add.s64 	%rd8567, %rd8566, %rd8478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12286,%dummy}, %rd8553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12287}, %rd8553;
	}
	shf.r.wrap.b32 	%r12288, %r12287, %r12286, 28;
	shf.r.wrap.b32 	%r12289, %r12286, %r12287, 28;
	mov.b64 	%rd8568, {%r12289, %r12288};
	shf.l.wrap.b32 	%r12290, %r12286, %r12287, 30;
	shf.l.wrap.b32 	%r12291, %r12287, %r12286, 30;
	mov.b64 	%rd8569, {%r12291, %r12290};
	xor.b64  	%rd8570, %rd8569, %rd8568;
	shf.l.wrap.b32 	%r12292, %r12286, %r12287, 25;
	shf.l.wrap.b32 	%r12293, %r12287, %r12286, 25;
	mov.b64 	%rd8571, {%r12293, %r12292};
	xor.b64  	%rd8572, %rd8570, %rd8571;
	xor.b64  	%rd8573, %rd8553, %rd8503;
	xor.b64  	%rd8574, %rd8553, %rd8528;
	and.b64  	%rd8575, %rd8574, %rd8573;
	xor.b64  	%rd8576, %rd8575, %rd8553;
	add.s64 	%rd8577, %rd8566, %rd8576;
	add.s64 	%rd8578, %rd8577, %rd8572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12294,%dummy}, %rd8567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12295}, %rd8567;
	}
	shf.r.wrap.b32 	%r12296, %r12295, %r12294, 14;
	shf.r.wrap.b32 	%r12297, %r12294, %r12295, 14;
	mov.b64 	%rd8579, {%r12297, %r12296};
	shf.r.wrap.b32 	%r12298, %r12295, %r12294, 18;
	shf.r.wrap.b32 	%r12299, %r12294, %r12295, 18;
	mov.b64 	%rd8580, {%r12299, %r12298};
	xor.b64  	%rd8581, %rd8580, %rd8579;
	shf.l.wrap.b32 	%r12300, %r12294, %r12295, 23;
	shf.l.wrap.b32 	%r12301, %r12295, %r12294, 23;
	mov.b64 	%rd8582, {%r12301, %r12300};
	xor.b64  	%rd8583, %rd8581, %rd8582;
	xor.b64  	%rd8584, %rd8542, %rd8517;
	and.b64  	%rd8585, %rd8567, %rd8584;
	xor.b64  	%rd8586, %rd8585, %rd8517;
	add.s64 	%rd8587, %rd8492, %rd8275;
	ld.const.u64 	%rd8588, [k_sha512+584];
	add.s64 	%rd8589, %rd8587, %rd8588;
	add.s64 	%rd8590, %rd8589, %rd8586;
	add.s64 	%rd8591, %rd8590, %rd8583;
	add.s64 	%rd8592, %rd8591, %rd8503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12302,%dummy}, %rd8578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12303}, %rd8578;
	}
	shf.r.wrap.b32 	%r12304, %r12303, %r12302, 28;
	shf.r.wrap.b32 	%r12305, %r12302, %r12303, 28;
	mov.b64 	%rd8593, {%r12305, %r12304};
	shf.l.wrap.b32 	%r12306, %r12302, %r12303, 30;
	shf.l.wrap.b32 	%r12307, %r12303, %r12302, 30;
	mov.b64 	%rd8594, {%r12307, %r12306};
	xor.b64  	%rd8595, %rd8594, %rd8593;
	shf.l.wrap.b32 	%r12308, %r12302, %r12303, 25;
	shf.l.wrap.b32 	%r12309, %r12303, %r12302, 25;
	mov.b64 	%rd8596, {%r12309, %r12308};
	xor.b64  	%rd8597, %rd8595, %rd8596;
	xor.b64  	%rd8598, %rd8578, %rd8528;
	xor.b64  	%rd8599, %rd8578, %rd8553;
	and.b64  	%rd8600, %rd8599, %rd8598;
	xor.b64  	%rd8601, %rd8600, %rd8578;
	add.s64 	%rd8602, %rd8591, %rd8601;
	add.s64 	%rd8603, %rd8602, %rd8597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12310,%dummy}, %rd8592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12311}, %rd8592;
	}
	shf.r.wrap.b32 	%r12312, %r12311, %r12310, 14;
	shf.r.wrap.b32 	%r12313, %r12310, %r12311, 14;
	mov.b64 	%rd8604, {%r12313, %r12312};
	shf.r.wrap.b32 	%r12314, %r12311, %r12310, 18;
	shf.r.wrap.b32 	%r12315, %r12310, %r12311, 18;
	mov.b64 	%rd8605, {%r12315, %r12314};
	xor.b64  	%rd8606, %rd8605, %rd8604;
	shf.l.wrap.b32 	%r12316, %r12310, %r12311, 23;
	shf.l.wrap.b32 	%r12317, %r12311, %r12310, 23;
	mov.b64 	%rd8607, {%r12317, %r12316};
	xor.b64  	%rd8608, %rd8606, %rd8607;
	xor.b64  	%rd8609, %rd8567, %rd8542;
	and.b64  	%rd8610, %rd8592, %rd8609;
	xor.b64  	%rd8611, %rd8610, %rd8542;
	add.s64 	%rd8612, %rd8517, %rd8288;
	ld.const.u64 	%rd8613, [k_sha512+592];
	add.s64 	%rd8614, %rd8612, %rd8613;
	add.s64 	%rd8615, %rd8614, %rd8611;
	add.s64 	%rd8616, %rd8615, %rd8608;
	add.s64 	%rd8617, %rd8616, %rd8528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12318,%dummy}, %rd8603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12319}, %rd8603;
	}
	shf.r.wrap.b32 	%r12320, %r12319, %r12318, 28;
	shf.r.wrap.b32 	%r12321, %r12318, %r12319, 28;
	mov.b64 	%rd8618, {%r12321, %r12320};
	shf.l.wrap.b32 	%r12322, %r12318, %r12319, 30;
	shf.l.wrap.b32 	%r12323, %r12319, %r12318, 30;
	mov.b64 	%rd8619, {%r12323, %r12322};
	xor.b64  	%rd8620, %rd8619, %rd8618;
	shf.l.wrap.b32 	%r12324, %r12318, %r12319, 25;
	shf.l.wrap.b32 	%r12325, %r12319, %r12318, 25;
	mov.b64 	%rd8621, {%r12325, %r12324};
	xor.b64  	%rd8622, %rd8620, %rd8621;
	xor.b64  	%rd8623, %rd8603, %rd8553;
	xor.b64  	%rd8624, %rd8603, %rd8578;
	and.b64  	%rd8625, %rd8624, %rd8623;
	xor.b64  	%rd8626, %rd8625, %rd8603;
	add.s64 	%rd8627, %rd8616, %rd8626;
	add.s64 	%rd8628, %rd8627, %rd8622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12326,%dummy}, %rd8617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12327}, %rd8617;
	}
	shf.r.wrap.b32 	%r12328, %r12327, %r12326, 14;
	shf.r.wrap.b32 	%r12329, %r12326, %r12327, 14;
	mov.b64 	%rd8629, {%r12329, %r12328};
	shf.r.wrap.b32 	%r12330, %r12327, %r12326, 18;
	shf.r.wrap.b32 	%r12331, %r12326, %r12327, 18;
	mov.b64 	%rd8630, {%r12331, %r12330};
	xor.b64  	%rd8631, %rd8630, %rd8629;
	shf.l.wrap.b32 	%r12332, %r12326, %r12327, 23;
	shf.l.wrap.b32 	%r12333, %r12327, %r12326, 23;
	mov.b64 	%rd8632, {%r12333, %r12332};
	xor.b64  	%rd8633, %rd8631, %rd8632;
	xor.b64  	%rd8634, %rd8592, %rd8567;
	and.b64  	%rd8635, %rd8617, %rd8634;
	xor.b64  	%rd8636, %rd8635, %rd8567;
	add.s64 	%rd8637, %rd8542, %rd8301;
	ld.const.u64 	%rd8638, [k_sha512+600];
	add.s64 	%rd8639, %rd8637, %rd8638;
	add.s64 	%rd8640, %rd8639, %rd8636;
	add.s64 	%rd8641, %rd8640, %rd8633;
	add.s64 	%rd8642, %rd8641, %rd8553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12334,%dummy}, %rd8628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12335}, %rd8628;
	}
	shf.r.wrap.b32 	%r12336, %r12335, %r12334, 28;
	shf.r.wrap.b32 	%r12337, %r12334, %r12335, 28;
	mov.b64 	%rd8643, {%r12337, %r12336};
	shf.l.wrap.b32 	%r12338, %r12334, %r12335, 30;
	shf.l.wrap.b32 	%r12339, %r12335, %r12334, 30;
	mov.b64 	%rd8644, {%r12339, %r12338};
	xor.b64  	%rd8645, %rd8644, %rd8643;
	shf.l.wrap.b32 	%r12340, %r12334, %r12335, 25;
	shf.l.wrap.b32 	%r12341, %r12335, %r12334, 25;
	mov.b64 	%rd8646, {%r12341, %r12340};
	xor.b64  	%rd8647, %rd8645, %rd8646;
	xor.b64  	%rd8648, %rd8628, %rd8578;
	xor.b64  	%rd8649, %rd8628, %rd8603;
	and.b64  	%rd8650, %rd8649, %rd8648;
	xor.b64  	%rd8651, %rd8650, %rd8628;
	add.s64 	%rd8652, %rd8641, %rd8651;
	add.s64 	%rd8653, %rd8652, %rd8647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12342,%dummy}, %rd8642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12343}, %rd8642;
	}
	shf.r.wrap.b32 	%r12344, %r12343, %r12342, 14;
	shf.r.wrap.b32 	%r12345, %r12342, %r12343, 14;
	mov.b64 	%rd8654, {%r12345, %r12344};
	shf.r.wrap.b32 	%r12346, %r12343, %r12342, 18;
	shf.r.wrap.b32 	%r12347, %r12342, %r12343, 18;
	mov.b64 	%rd8655, {%r12347, %r12346};
	xor.b64  	%rd8656, %rd8655, %rd8654;
	shf.l.wrap.b32 	%r12348, %r12342, %r12343, 23;
	shf.l.wrap.b32 	%r12349, %r12343, %r12342, 23;
	mov.b64 	%rd8657, {%r12349, %r12348};
	xor.b64  	%rd8658, %rd8656, %rd8657;
	xor.b64  	%rd8659, %rd8617, %rd8592;
	and.b64  	%rd8660, %rd8642, %rd8659;
	xor.b64  	%rd8661, %rd8660, %rd8592;
	add.s64 	%rd8662, %rd8567, %rd8314;
	ld.const.u64 	%rd8663, [k_sha512+608];
	add.s64 	%rd8664, %rd8662, %rd8663;
	add.s64 	%rd8665, %rd8664, %rd8661;
	add.s64 	%rd8666, %rd8665, %rd8658;
	add.s64 	%rd8667, %rd8666, %rd8578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12350,%dummy}, %rd8653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12351}, %rd8653;
	}
	shf.r.wrap.b32 	%r12352, %r12351, %r12350, 28;
	shf.r.wrap.b32 	%r12353, %r12350, %r12351, 28;
	mov.b64 	%rd8668, {%r12353, %r12352};
	shf.l.wrap.b32 	%r12354, %r12350, %r12351, 30;
	shf.l.wrap.b32 	%r12355, %r12351, %r12350, 30;
	mov.b64 	%rd8669, {%r12355, %r12354};
	xor.b64  	%rd8670, %rd8669, %rd8668;
	shf.l.wrap.b32 	%r12356, %r12350, %r12351, 25;
	shf.l.wrap.b32 	%r12357, %r12351, %r12350, 25;
	mov.b64 	%rd8671, {%r12357, %r12356};
	xor.b64  	%rd8672, %rd8670, %rd8671;
	xor.b64  	%rd8673, %rd8653, %rd8603;
	xor.b64  	%rd8674, %rd8653, %rd8628;
	and.b64  	%rd8675, %rd8674, %rd8673;
	xor.b64  	%rd8676, %rd8675, %rd8653;
	add.s64 	%rd8677, %rd8666, %rd8676;
	add.s64 	%rd8678, %rd8677, %rd8672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12358,%dummy}, %rd8667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12359}, %rd8667;
	}
	shf.r.wrap.b32 	%r12360, %r12359, %r12358, 14;
	shf.r.wrap.b32 	%r12361, %r12358, %r12359, 14;
	mov.b64 	%rd8679, {%r12361, %r12360};
	shf.r.wrap.b32 	%r12362, %r12359, %r12358, 18;
	shf.r.wrap.b32 	%r12363, %r12358, %r12359, 18;
	mov.b64 	%rd8680, {%r12363, %r12362};
	xor.b64  	%rd8681, %rd8680, %rd8679;
	shf.l.wrap.b32 	%r12364, %r12358, %r12359, 23;
	shf.l.wrap.b32 	%r12365, %r12359, %r12358, 23;
	mov.b64 	%rd8682, {%r12365, %r12364};
	xor.b64  	%rd8683, %rd8681, %rd8682;
	xor.b64  	%rd8684, %rd8642, %rd8617;
	and.b64  	%rd8685, %rd8667, %rd8684;
	xor.b64  	%rd8686, %rd8685, %rd8617;
	add.s64 	%rd8687, %rd8592, %rd8327;
	ld.const.u64 	%rd8688, [k_sha512+616];
	add.s64 	%rd8689, %rd8687, %rd8688;
	add.s64 	%rd8690, %rd8689, %rd8686;
	add.s64 	%rd8691, %rd8690, %rd8683;
	add.s64 	%rd8692, %rd8691, %rd8603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12366,%dummy}, %rd8678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12367}, %rd8678;
	}
	shf.r.wrap.b32 	%r12368, %r12367, %r12366, 28;
	shf.r.wrap.b32 	%r12369, %r12366, %r12367, 28;
	mov.b64 	%rd8693, {%r12369, %r12368};
	shf.l.wrap.b32 	%r12370, %r12366, %r12367, 30;
	shf.l.wrap.b32 	%r12371, %r12367, %r12366, 30;
	mov.b64 	%rd8694, {%r12371, %r12370};
	xor.b64  	%rd8695, %rd8694, %rd8693;
	shf.l.wrap.b32 	%r12372, %r12366, %r12367, 25;
	shf.l.wrap.b32 	%r12373, %r12367, %r12366, 25;
	mov.b64 	%rd8696, {%r12373, %r12372};
	xor.b64  	%rd8697, %rd8695, %rd8696;
	xor.b64  	%rd8698, %rd8678, %rd8628;
	xor.b64  	%rd8699, %rd8678, %rd8653;
	and.b64  	%rd8700, %rd8699, %rd8698;
	xor.b64  	%rd8701, %rd8700, %rd8678;
	add.s64 	%rd8702, %rd8691, %rd8701;
	add.s64 	%rd8703, %rd8702, %rd8697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12374,%dummy}, %rd8692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12375}, %rd8692;
	}
	shf.r.wrap.b32 	%r12376, %r12375, %r12374, 14;
	shf.r.wrap.b32 	%r12377, %r12374, %r12375, 14;
	mov.b64 	%rd8704, {%r12377, %r12376};
	shf.r.wrap.b32 	%r12378, %r12375, %r12374, 18;
	shf.r.wrap.b32 	%r12379, %r12374, %r12375, 18;
	mov.b64 	%rd8705, {%r12379, %r12378};
	xor.b64  	%rd8706, %rd8705, %rd8704;
	shf.l.wrap.b32 	%r12380, %r12374, %r12375, 23;
	shf.l.wrap.b32 	%r12381, %r12375, %r12374, 23;
	mov.b64 	%rd8707, {%r12381, %r12380};
	xor.b64  	%rd8708, %rd8706, %rd8707;
	xor.b64  	%rd8709, %rd8667, %rd8642;
	and.b64  	%rd8710, %rd8692, %rd8709;
	xor.b64  	%rd8711, %rd8710, %rd8642;
	add.s64 	%rd8712, %rd8617, %rd8340;
	ld.const.u64 	%rd8713, [k_sha512+624];
	add.s64 	%rd8714, %rd8712, %rd8713;
	add.s64 	%rd8715, %rd8714, %rd8711;
	add.s64 	%rd8716, %rd8715, %rd8708;
	add.s64 	%rd8717, %rd8716, %rd8628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12382,%dummy}, %rd8703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12383}, %rd8703;
	}
	shf.r.wrap.b32 	%r12384, %r12383, %r12382, 28;
	shf.r.wrap.b32 	%r12385, %r12382, %r12383, 28;
	mov.b64 	%rd8718, {%r12385, %r12384};
	shf.l.wrap.b32 	%r12386, %r12382, %r12383, 30;
	shf.l.wrap.b32 	%r12387, %r12383, %r12382, 30;
	mov.b64 	%rd8719, {%r12387, %r12386};
	xor.b64  	%rd8720, %rd8719, %rd8718;
	shf.l.wrap.b32 	%r12388, %r12382, %r12383, 25;
	shf.l.wrap.b32 	%r12389, %r12383, %r12382, 25;
	mov.b64 	%rd8721, {%r12389, %r12388};
	xor.b64  	%rd8722, %rd8720, %rd8721;
	xor.b64  	%rd8723, %rd8703, %rd8653;
	xor.b64  	%rd8724, %rd8703, %rd8678;
	and.b64  	%rd8725, %rd8724, %rd8723;
	xor.b64  	%rd8726, %rd8725, %rd8703;
	add.s64 	%rd8727, %rd8716, %rd8726;
	add.s64 	%rd8728, %rd8727, %rd8722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12390,%dummy}, %rd8717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12391}, %rd8717;
	}
	shf.r.wrap.b32 	%r12392, %r12391, %r12390, 14;
	shf.r.wrap.b32 	%r12393, %r12390, %r12391, 14;
	mov.b64 	%rd8729, {%r12393, %r12392};
	shf.r.wrap.b32 	%r12394, %r12391, %r12390, 18;
	shf.r.wrap.b32 	%r12395, %r12390, %r12391, 18;
	mov.b64 	%rd8730, {%r12395, %r12394};
	xor.b64  	%rd8731, %rd8730, %rd8729;
	shf.l.wrap.b32 	%r12396, %r12390, %r12391, 23;
	shf.l.wrap.b32 	%r12397, %r12391, %r12390, 23;
	mov.b64 	%rd8732, {%r12397, %r12396};
	xor.b64  	%rd8733, %rd8731, %rd8732;
	xor.b64  	%rd8734, %rd8692, %rd8667;
	and.b64  	%rd8735, %rd8717, %rd8734;
	xor.b64  	%rd8736, %rd8735, %rd8667;
	add.s64 	%rd8737, %rd8642, %rd8353;
	ld.const.u64 	%rd8738, [k_sha512+632];
	add.s64 	%rd8739, %rd8737, %rd8738;
	add.s64 	%rd8740, %rd8739, %rd8736;
	add.s64 	%rd8741, %rd8740, %rd8733;
	add.s64 	%rd8742, %rd8741, %rd8653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12398,%dummy}, %rd8728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12399}, %rd8728;
	}
	shf.r.wrap.b32 	%r12400, %r12399, %r12398, 28;
	shf.r.wrap.b32 	%r12401, %r12398, %r12399, 28;
	mov.b64 	%rd8743, {%r12401, %r12400};
	shf.l.wrap.b32 	%r12402, %r12398, %r12399, 30;
	shf.l.wrap.b32 	%r12403, %r12399, %r12398, 30;
	mov.b64 	%rd8744, {%r12403, %r12402};
	xor.b64  	%rd8745, %rd8744, %rd8743;
	shf.l.wrap.b32 	%r12404, %r12398, %r12399, 25;
	shf.l.wrap.b32 	%r12405, %r12399, %r12398, 25;
	mov.b64 	%rd8746, {%r12405, %r12404};
	xor.b64  	%rd8747, %rd8745, %rd8746;
	xor.b64  	%rd8748, %rd8728, %rd8678;
	xor.b64  	%rd8749, %rd8728, %rd8703;
	and.b64  	%rd8750, %rd8749, %rd8748;
	xor.b64  	%rd8751, %rd8750, %rd8728;
	add.s64 	%rd8752, %rd8741, %rd8751;
	add.s64 	%rd8753, %rd8752, %rd8747;
	add.s64 	%rd8754, %rd5948, %rd8753;
	st.local.u64 	[%rd9], %rd8754;
	add.s64 	%rd8755, %rd5956, %rd8728;
	st.local.u64 	[%rd10], %rd8755;
	add.s64 	%rd8756, %rd5954, %rd8703;
	st.local.u64 	[%rd10+8], %rd8756;
	add.s64 	%rd8757, %rd5946, %rd8678;
	st.local.u64 	[%rd10+16], %rd8757;
	add.s64 	%rd8758, %rd5930, %rd8742;
	st.local.u64 	[%rd10+24], %rd8758;
	add.s64 	%rd8759, %rd5937, %rd8717;
	st.local.u64 	[%rd10+32], %rd8759;
	add.s64 	%rd8760, %rd5936, %rd8692;
	st.local.u64 	[%rd10+40], %rd8760;
	add.s64 	%rd8761, %rd5941, %rd8667;
	st.local.u64 	[%rd10+48], %rd8761;
	st.local.u32 	[%rd10+56], %r12449;
	st.local.u32 	[%rd10+64], %r12447;
	st.local.u32 	[%rd10+72], %r12453;
	st.local.u32 	[%rd10+80], %r12451;
	st.local.u32 	[%rd10+88], %r12457;
	st.local.u32 	[%rd10+96], %r12455;
	st.local.u32 	[%rd10+104], %r12461;
	st.local.u32 	[%rd10+112], %r12459;
	st.local.u32 	[%rd10+120], %r12465;
	st.local.u32 	[%rd10+128], %r12463;
	st.local.u32 	[%rd10+136], %r12469;
	st.local.u32 	[%rd10+144], %r12467;
	st.local.u32 	[%rd10+152], %r12473;
	st.local.u32 	[%rd10+160], %r12471;
	st.local.u32 	[%rd10+168], %r12477;
	st.local.u32 	[%rd10+176], %r12475;
	st.local.u32 	[%rd11+4], %r12448;
	st.local.u32 	[%rd12+4], %r12446;
	st.local.u32 	[%rd13+4], %r12452;
	st.local.u32 	[%rd14+4], %r12450;
	st.local.u32 	[%rd15+4], %r12456;
	st.local.u32 	[%rd16+4], %r12454;
	st.local.u32 	[%rd17+4], %r12460;
	st.local.u32 	[%rd18+4], %r12458;
	st.local.u32 	[%rd19+4], %r12464;
	st.local.u32 	[%rd20+4], %r12462;
	st.local.u32 	[%rd21+4], %r12468;
	st.local.u32 	[%rd22+4], %r12466;
	st.local.u32 	[%rd23+4], %r12472;
	st.local.u32 	[%rd24+4], %r12470;
	st.local.u32 	[%rd25+4], %r12476;
	st.local.u32 	[%rd26+4], %r12474;
	add.s32 	%r12413, %r12413, 128;
	add.s32 	%r12414, %r12414, 32;

BB3_2:
	add.s32 	%r643, %r2, -128;
	setp.lt.s32	%p2, %r12413, %r643;
	mul.wide.s32 	%rd293, %r12414, 4;
	add.s64 	%rd294, %rd290, %rd293;
	ld.global.u32 	%r5, [%rd294];
	st.local.u32 	[%rd1], %r5;
	add.s32 	%r644, %r12414, 1;
	mul.wide.s32 	%rd295, %r644, 4;
	add.s64 	%rd296, %rd290, %rd295;
	ld.global.u32 	%r645, [%rd296];
	st.local.u32 	[%rd27], %r645;
	add.s32 	%r646, %r12414, 2;
	mul.wide.s32 	%rd297, %r646, 4;
	add.s64 	%rd298, %rd290, %rd297;
	ld.global.u32 	%r647, [%rd298];
	st.local.u32 	[%rd27+4], %r647;
	add.s32 	%r648, %r12414, 3;
	mul.wide.s32 	%rd299, %r648, 4;
	add.s64 	%rd300, %rd290, %rd299;
	ld.global.u32 	%r649, [%rd300];
	st.local.u32 	[%rd27+8], %r649;
	add.s32 	%r650, %r12414, 4;
	mul.wide.s32 	%rd301, %r650, 4;
	add.s64 	%rd302, %rd290, %rd301;
	ld.global.u32 	%r651, [%rd302];
	st.local.u32 	[%rd2], %r651;
	add.s32 	%r652, %r12414, 5;
	mul.wide.s32 	%rd303, %r652, 4;
	add.s64 	%rd304, %rd290, %rd303;
	ld.global.u32 	%r653, [%rd304];
	st.local.u32 	[%rd28], %r653;
	add.s32 	%r654, %r12414, 6;
	mul.wide.s32 	%rd305, %r654, 4;
	add.s64 	%rd306, %rd290, %rd305;
	ld.global.u32 	%r655, [%rd306];
	st.local.u32 	[%rd28+4], %r655;
	add.s32 	%r656, %r12414, 7;
	mul.wide.s32 	%rd307, %r656, 4;
	add.s64 	%rd308, %rd290, %rd307;
	ld.global.u32 	%r657, [%rd308];
	st.local.u32 	[%rd28+8], %r657;
	add.s32 	%r658, %r12414, 8;
	mul.wide.s32 	%rd309, %r658, 4;
	add.s64 	%rd310, %rd290, %rd309;
	ld.global.u32 	%r659, [%rd310];
	st.local.u32 	[%rd3], %r659;
	add.s32 	%r660, %r12414, 9;
	mul.wide.s32 	%rd311, %r660, 4;
	add.s64 	%rd312, %rd290, %rd311;
	ld.global.u32 	%r661, [%rd312];
	st.local.u32 	[%rd29], %r661;
	add.s32 	%r662, %r12414, 10;
	mul.wide.s32 	%rd313, %r662, 4;
	add.s64 	%rd314, %rd290, %rd313;
	ld.global.u32 	%r663, [%rd314];
	st.local.u32 	[%rd29+4], %r663;
	add.s32 	%r664, %r12414, 11;
	mul.wide.s32 	%rd315, %r664, 4;
	add.s64 	%rd316, %rd290, %rd315;
	ld.global.u32 	%r665, [%rd316];
	st.local.u32 	[%rd29+8], %r665;
	add.s32 	%r666, %r12414, 12;
	mul.wide.s32 	%rd317, %r666, 4;
	add.s64 	%rd318, %rd290, %rd317;
	ld.global.u32 	%r667, [%rd318];
	st.local.u32 	[%rd4], %r667;
	add.s32 	%r668, %r12414, 13;
	mul.wide.s32 	%rd319, %r668, 4;
	add.s64 	%rd320, %rd290, %rd319;
	ld.global.u32 	%r669, [%rd320];
	st.local.u32 	[%rd30], %r669;
	add.s32 	%r670, %r12414, 14;
	mul.wide.s32 	%rd321, %r670, 4;
	add.s64 	%rd322, %rd290, %rd321;
	ld.global.u32 	%r671, [%rd322];
	st.local.u32 	[%rd30+4], %r671;
	add.s32 	%r672, %r12414, 15;
	mul.wide.s32 	%rd323, %r672, 4;
	add.s64 	%rd324, %rd290, %rd323;
	ld.global.u32 	%r673, [%rd324];
	st.local.u32 	[%rd30+8], %r673;
	add.s32 	%r674, %r12414, 16;
	mul.wide.s32 	%rd325, %r674, 4;
	add.s64 	%rd326, %rd290, %rd325;
	ld.global.u32 	%r675, [%rd326];
	st.local.u32 	[%rd5], %r675;
	add.s32 	%r676, %r12414, 17;
	mul.wide.s32 	%rd327, %r676, 4;
	add.s64 	%rd328, %rd290, %rd327;
	ld.global.u32 	%r677, [%rd328];
	st.local.u32 	[%rd31], %r677;
	add.s32 	%r678, %r12414, 18;
	mul.wide.s32 	%rd329, %r678, 4;
	add.s64 	%rd330, %rd290, %rd329;
	ld.global.u32 	%r679, [%rd330];
	st.local.u32 	[%rd31+4], %r679;
	add.s32 	%r680, %r12414, 19;
	mul.wide.s32 	%rd331, %r680, 4;
	add.s64 	%rd332, %rd290, %rd331;
	ld.global.u32 	%r681, [%rd332];
	st.local.u32 	[%rd31+8], %r681;
	add.s32 	%r682, %r12414, 20;
	mul.wide.s32 	%rd333, %r682, 4;
	add.s64 	%rd334, %rd290, %rd333;
	ld.global.u32 	%r683, [%rd334];
	st.local.u32 	[%rd6], %r683;
	add.s32 	%r684, %r12414, 21;
	mul.wide.s32 	%rd335, %r684, 4;
	add.s64 	%rd336, %rd290, %rd335;
	ld.global.u32 	%r685, [%rd336];
	st.local.u32 	[%rd32], %r685;
	add.s32 	%r686, %r12414, 22;
	mul.wide.s32 	%rd337, %r686, 4;
	add.s64 	%rd338, %rd290, %rd337;
	ld.global.u32 	%r687, [%rd338];
	st.local.u32 	[%rd32+4], %r687;
	add.s32 	%r688, %r12414, 23;
	mul.wide.s32 	%rd339, %r688, 4;
	add.s64 	%rd340, %rd290, %rd339;
	ld.global.u32 	%r689, [%rd340];
	st.local.u32 	[%rd32+8], %r689;
	add.s32 	%r690, %r12414, 24;
	mul.wide.s32 	%rd341, %r690, 4;
	add.s64 	%rd342, %rd290, %rd341;
	ld.global.u32 	%r691, [%rd342];
	st.local.u32 	[%rd7], %r691;
	add.s32 	%r692, %r12414, 25;
	mul.wide.s32 	%rd343, %r692, 4;
	add.s64 	%rd344, %rd290, %rd343;
	ld.global.u32 	%r693, [%rd344];
	st.local.u32 	[%rd33], %r693;
	add.s32 	%r694, %r12414, 26;
	mul.wide.s32 	%rd345, %r694, 4;
	add.s64 	%rd346, %rd290, %rd345;
	ld.global.u32 	%r695, [%rd346];
	st.local.u32 	[%rd33+4], %r695;
	add.s32 	%r696, %r12414, 27;
	mul.wide.s32 	%rd347, %r696, 4;
	add.s64 	%rd348, %rd290, %rd347;
	ld.global.u32 	%r697, [%rd348];
	st.local.u32 	[%rd33+8], %r697;
	add.s32 	%r698, %r12414, 28;
	mul.wide.s32 	%rd349, %r698, 4;
	add.s64 	%rd350, %rd290, %rd349;
	ld.global.u32 	%r699, [%rd350];
	st.local.u32 	[%rd8], %r699;
	add.s32 	%r700, %r12414, 29;
	mul.wide.s32 	%rd351, %r700, 4;
	add.s64 	%rd352, %rd290, %rd351;
	ld.global.u32 	%r701, [%rd352];
	st.local.u32 	[%rd34], %r701;
	add.s32 	%r702, %r12414, 30;
	mul.wide.s32 	%rd353, %r702, 4;
	add.s64 	%rd354, %rd290, %rd353;
	ld.global.u32 	%r703, [%rd354];
	st.local.u32 	[%rd34+4], %r703;
	add.s32 	%r704, %r12414, 31;
	mul.wide.s32 	%rd355, %r704, 4;
	add.s64 	%rd356, %rd290, %rd355;
	ld.global.u32 	%r705, [%rd356];
	st.local.u32 	[%rd34+8], %r705;
	@%p2 bra 	BB3_327;
	bra.uni 	BB3_3;

BB3_327:
	// inline asm
	prmt.b32 %r4983, %r5, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1], %r4983;
	ld.local.u32 	%r4986, [%rd27];
	// inline asm
	prmt.b32 %r4985, %r4986, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd27], %r4985;
	ld.local.u32 	%r4988, [%rd27+4];
	// inline asm
	prmt.b32 %r4987, %r4988, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd27+4], %r4987;
	ld.local.u32 	%r4990, [%rd27+8];
	// inline asm
	prmt.b32 %r4989, %r4990, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd27+8], %r4989;
	ld.local.u32 	%r4992, [%rd2];
	// inline asm
	prmt.b32 %r4991, %r4992, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r4991;
	ld.local.u32 	%r4994, [%rd28];
	// inline asm
	prmt.b32 %r4993, %r4994, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28], %r4993;
	ld.local.u32 	%r4996, [%rd28+4];
	// inline asm
	prmt.b32 %r4995, %r4996, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28+4], %r4995;
	ld.local.u32 	%r4998, [%rd28+8];
	// inline asm
	prmt.b32 %r4997, %r4998, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28+8], %r4997;
	ld.local.u32 	%r5000, [%rd3];
	// inline asm
	prmt.b32 %r4999, %r5000, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r4999;
	ld.local.u32 	%r5002, [%rd29];
	// inline asm
	prmt.b32 %r5001, %r5002, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29], %r5001;
	ld.local.u32 	%r5004, [%rd29+4];
	// inline asm
	prmt.b32 %r5003, %r5004, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29+4], %r5003;
	ld.local.u32 	%r5006, [%rd29+8];
	// inline asm
	prmt.b32 %r5005, %r5006, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29+8], %r5005;
	ld.local.u32 	%r5008, [%rd4];
	// inline asm
	prmt.b32 %r5007, %r5008, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r5007;
	ld.local.u32 	%r5010, [%rd30];
	// inline asm
	prmt.b32 %r5009, %r5010, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30], %r5009;
	ld.local.u32 	%r5012, [%rd30+4];
	// inline asm
	prmt.b32 %r5011, %r5012, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30+4], %r5011;
	ld.local.u32 	%r5014, [%rd30+8];
	// inline asm
	prmt.b32 %r5013, %r5014, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30+8], %r5013;
	ld.local.u32 	%r5016, [%rd5];
	// inline asm
	prmt.b32 %r5015, %r5016, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r5015;
	ld.local.u32 	%r5018, [%rd31];
	// inline asm
	prmt.b32 %r5017, %r5018, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31], %r5017;
	ld.local.u32 	%r5020, [%rd31+4];
	// inline asm
	prmt.b32 %r5019, %r5020, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31+4], %r5019;
	ld.local.u32 	%r5022, [%rd31+8];
	// inline asm
	prmt.b32 %r5021, %r5022, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31+8], %r5021;
	ld.local.u32 	%r5024, [%rd6];
	// inline asm
	prmt.b32 %r5023, %r5024, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r5023;
	ld.local.u32 	%r5026, [%rd32];
	// inline asm
	prmt.b32 %r5025, %r5026, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32], %r5025;
	ld.local.u32 	%r5028, [%rd32+4];
	// inline asm
	prmt.b32 %r5027, %r5028, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32+4], %r5027;
	ld.local.u32 	%r5030, [%rd32+8];
	// inline asm
	prmt.b32 %r5029, %r5030, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32+8], %r5029;
	ld.local.u32 	%r5032, [%rd7];
	// inline asm
	prmt.b32 %r5031, %r5032, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r5031;
	ld.local.u32 	%r5034, [%rd33];
	// inline asm
	prmt.b32 %r5033, %r5034, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33], %r5033;
	ld.local.u32 	%r5036, [%rd33+4];
	// inline asm
	prmt.b32 %r5035, %r5036, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33+4], %r5035;
	ld.local.u32 	%r5038, [%rd33+8];
	// inline asm
	prmt.b32 %r5037, %r5038, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33+8], %r5037;
	ld.local.u32 	%r5040, [%rd8];
	// inline asm
	prmt.b32 %r5039, %r5040, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r5039;
	ld.local.u32 	%r5042, [%rd34];
	// inline asm
	prmt.b32 %r5041, %r5042, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34], %r5041;
	ld.local.u32 	%r5044, [%rd34+4];
	// inline asm
	prmt.b32 %r5043, %r5044, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34+4], %r5043;
	ld.local.u32 	%r5046, [%rd34+8];
	// inline asm
	prmt.b32 %r5045, %r5046, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34+8], %r5045;
	ld.local.u32 	%r5048, [%rd10+184];
	add.s32 	%r5049, %r5048, 128;
	st.local.u32 	[%rd10+184], %r5049;
	bfe.u32 	%r5047, %r5048, 2, 5;
	and.b32  	%r5050, %r5048, 3;
	shl.b32 	%r5051, %r5050, 2;
	mov.u32 	%r5052, 1985229328;
	shr.u32 	%r5053, %r5052, %r5051;
	and.b32  	%r69, %r5053, 65535;
	setp.gt.s32	%p195, %r5047, 15;
	@%p195 bra 	BB3_360;

	setp.gt.s32	%p219, %r5047, 7;
	@%p219 bra 	BB3_345;

	setp.gt.s32	%p231, %r5047, 3;
	@%p231 bra 	BB3_338;

	setp.gt.s32	%p237, %r5047, 1;
	@%p237 bra 	BB3_334;

	setp.eq.s32	%p240, %r5047, 0;
	@%p240 bra 	BB3_412;
	bra.uni 	BB3_332;

BB3_412:
	mov.u32 	%r12446, 0;
	// inline asm
	prmt.b32 %r12449, %r12446, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r10301, %r10302}, [%rd34+4];
	// inline asm
	prmt.b32 %r10142, %r10302, %r10301, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r10142;
	ld.local.u32 	%r10147, [%rd34+4];
	ld.local.u32 	%r10148, [%rd34];
	// inline asm
	prmt.b32 %r10146, %r10147, %r10148, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r10146;
	ld.local.u32 	%r10151, [%rd34];
	ld.local.u32 	%r10152, [%rd8];
	// inline asm
	prmt.b32 %r10150, %r10151, %r10152, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r10150;
	ld.local.u32 	%r10155, [%rd8];
	ld.local.u32 	%r10156, [%rd33+8];
	// inline asm
	prmt.b32 %r10154, %r10155, %r10156, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r10154;
	ld.local.v2.u32 	{%r10303, %r10304}, [%rd33+4];
	// inline asm
	prmt.b32 %r10158, %r10304, %r10303, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r10158;
	ld.local.u32 	%r10163, [%rd33+4];
	ld.local.u32 	%r10164, [%rd33];
	// inline asm
	prmt.b32 %r10162, %r10163, %r10164, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r10162;
	ld.local.u32 	%r10167, [%rd33];
	ld.local.u32 	%r10168, [%rd7];
	// inline asm
	prmt.b32 %r10166, %r10167, %r10168, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r10166;
	ld.local.u32 	%r10171, [%rd7];
	ld.local.u32 	%r10172, [%rd32+8];
	// inline asm
	prmt.b32 %r10170, %r10171, %r10172, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r10170;
	ld.local.v2.u32 	{%r10305, %r10306}, [%rd32+4];
	// inline asm
	prmt.b32 %r10174, %r10306, %r10305, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r10174;
	ld.local.u32 	%r10179, [%rd32+4];
	ld.local.u32 	%r10180, [%rd32];
	// inline asm
	prmt.b32 %r10178, %r10179, %r10180, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r10178;
	ld.local.u32 	%r10183, [%rd32];
	ld.local.u32 	%r10184, [%rd6];
	// inline asm
	prmt.b32 %r10182, %r10183, %r10184, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r10182;
	ld.local.u32 	%r10187, [%rd6];
	ld.local.u32 	%r10188, [%rd31+8];
	// inline asm
	prmt.b32 %r10186, %r10187, %r10188, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r10186;
	ld.local.v2.u32 	{%r10307, %r10308}, [%rd31+4];
	// inline asm
	prmt.b32 %r10190, %r10308, %r10307, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r10190;
	ld.local.u32 	%r10195, [%rd31+4];
	ld.local.u32 	%r10196, [%rd31];
	// inline asm
	prmt.b32 %r10194, %r10195, %r10196, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r10194;
	ld.local.u32 	%r10199, [%rd31];
	ld.local.u32 	%r10200, [%rd5];
	// inline asm
	prmt.b32 %r10198, %r10199, %r10200, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r10198;
	ld.local.u32 	%r10203, [%rd5];
	ld.local.u32 	%r10204, [%rd30+8];
	// inline asm
	prmt.b32 %r10202, %r10203, %r10204, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r10202;
	ld.local.v2.u32 	{%r10309, %r10310}, [%rd30+4];
	// inline asm
	prmt.b32 %r10206, %r10310, %r10309, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r10206;
	ld.local.u32 	%r10211, [%rd30+4];
	ld.local.u32 	%r10212, [%rd30];
	// inline asm
	prmt.b32 %r10210, %r10211, %r10212, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r10210;
	ld.local.u32 	%r10215, [%rd30];
	ld.local.u32 	%r10216, [%rd4];
	// inline asm
	prmt.b32 %r10214, %r10215, %r10216, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r10214;
	ld.local.u32 	%r10219, [%rd4];
	ld.local.u32 	%r10220, [%rd29+8];
	// inline asm
	prmt.b32 %r10218, %r10219, %r10220, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r10218;
	ld.local.v2.u32 	{%r10311, %r10312}, [%rd29+4];
	// inline asm
	prmt.b32 %r10222, %r10312, %r10311, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r10222;
	ld.local.u32 	%r10227, [%rd29+4];
	ld.local.u32 	%r10228, [%rd29];
	// inline asm
	prmt.b32 %r10226, %r10227, %r10228, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r10226;
	ld.local.u32 	%r10231, [%rd29];
	ld.local.u32 	%r10232, [%rd3];
	// inline asm
	prmt.b32 %r10230, %r10231, %r10232, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r10230;
	ld.local.u32 	%r10235, [%rd3];
	ld.local.u32 	%r10236, [%rd28+8];
	// inline asm
	prmt.b32 %r10234, %r10235, %r10236, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r10234;
	ld.local.v2.u32 	{%r10313, %r10314}, [%rd28+4];
	// inline asm
	prmt.b32 %r10238, %r10314, %r10313, %r69;
	// inline asm
	st.local.u32 	[%rd28+8], %r10238;
	ld.local.u32 	%r10243, [%rd28+4];
	ld.local.u32 	%r10244, [%rd28];
	// inline asm
	prmt.b32 %r10242, %r10243, %r10244, %r69;
	// inline asm
	st.local.u32 	[%rd28+4], %r10242;
	ld.local.u32 	%r10247, [%rd28];
	ld.local.u32 	%r10248, [%rd2];
	// inline asm
	prmt.b32 %r10246, %r10247, %r10248, %r69;
	// inline asm
	st.local.u32 	[%rd28], %r10246;
	ld.local.u32 	%r10251, [%rd2];
	ld.local.u32 	%r10252, [%rd27+8];
	// inline asm
	prmt.b32 %r10250, %r10251, %r10252, %r69;
	// inline asm
	st.local.u32 	[%rd2], %r10250;
	ld.local.v2.u32 	{%r10315, %r10316}, [%rd27+4];
	// inline asm
	prmt.b32 %r10254, %r10316, %r10315, %r69;
	// inline asm
	st.local.u32 	[%rd27+8], %r10254;
	ld.local.u32 	%r10259, [%rd27+4];
	ld.local.u32 	%r10260, [%rd27];
	// inline asm
	prmt.b32 %r10258, %r10259, %r10260, %r69;
	// inline asm
	st.local.u32 	[%rd27+4], %r10258;
	ld.local.u32 	%r10263, [%rd27];
	ld.local.u32 	%r10264, [%rd1];
	// inline asm
	prmt.b32 %r10262, %r10263, %r10264, %r69;
	// inline asm
	st.local.u32 	[%rd27], %r10262;
	ld.local.u32 	%r10267, [%rd1];
	// inline asm
	prmt.b32 %r12445, %r10267, %r12446, %r69;
	// inline asm
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12447, %r12446;
	mov.u32 	%r12448, %r12446;
	bra.uni 	BB3_414;

BB3_360:
	setp.gt.s32	%p196, %r5047, 23;
	@%p196 bra 	BB3_376;

	setp.gt.s32	%p208, %r5047, 19;
	@%p208 bra 	BB3_369;

	setp.gt.s32	%p214, %r5047, 17;
	@%p214 bra 	BB3_366;

	setp.eq.s32	%p217, %r5047, 16;
	@%p217 bra 	BB3_398;
	bra.uni 	BB3_364;

BB3_398:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12465, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7542, %r7543}, [%rd34+4];
	// inline asm
	prmt.b32 %r12458, %r7543, %r7542, %r69;
	// inline asm
	ld.local.u32 	%r7403, [%rd34+4];
	ld.local.u32 	%r7404, [%rd34];
	// inline asm
	prmt.b32 %r12459, %r7403, %r7404, %r69;
	// inline asm
	ld.local.u32 	%r7407, [%rd34];
	ld.local.u32 	%r7408, [%rd8];
	// inline asm
	prmt.b32 %r12460, %r7407, %r7408, %r69;
	// inline asm
	ld.local.u32 	%r7411, [%rd8];
	ld.local.u32 	%r7412, [%rd33+8];
	// inline asm
	prmt.b32 %r12461, %r7411, %r7412, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7544, %r7545}, [%rd33+4];
	// inline asm
	prmt.b32 %r12454, %r7545, %r7544, %r69;
	// inline asm
	ld.local.u32 	%r7419, [%rd33+4];
	ld.local.u32 	%r7420, [%rd33];
	// inline asm
	prmt.b32 %r12455, %r7419, %r7420, %r69;
	// inline asm
	ld.local.u32 	%r7423, [%rd33];
	ld.local.u32 	%r7424, [%rd7];
	// inline asm
	prmt.b32 %r12456, %r7423, %r7424, %r69;
	// inline asm
	ld.local.u32 	%r7427, [%rd7];
	ld.local.u32 	%r7428, [%rd32+8];
	// inline asm
	prmt.b32 %r12457, %r7427, %r7428, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7546, %r7547}, [%rd32+4];
	// inline asm
	prmt.b32 %r12450, %r7547, %r7546, %r69;
	// inline asm
	ld.local.u32 	%r7435, [%rd32+4];
	ld.local.u32 	%r7436, [%rd32];
	// inline asm
	prmt.b32 %r12451, %r7435, %r7436, %r69;
	// inline asm
	ld.local.u32 	%r7439, [%rd32];
	ld.local.u32 	%r7440, [%rd6];
	// inline asm
	prmt.b32 %r12452, %r7439, %r7440, %r69;
	// inline asm
	ld.local.u32 	%r7443, [%rd6];
	ld.local.u32 	%r7444, [%rd31+8];
	// inline asm
	prmt.b32 %r12453, %r7443, %r7444, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7548, %r7549}, [%rd31+4];
	// inline asm
	prmt.b32 %r12446, %r7549, %r7548, %r69;
	// inline asm
	ld.local.u32 	%r7451, [%rd31+4];
	ld.local.u32 	%r7452, [%rd31];
	// inline asm
	prmt.b32 %r12447, %r7451, %r7452, %r69;
	// inline asm
	ld.local.u32 	%r7455, [%rd31];
	ld.local.u32 	%r7456, [%rd5];
	// inline asm
	prmt.b32 %r12448, %r7455, %r7456, %r69;
	// inline asm
	ld.local.u32 	%r7459, [%rd5];
	ld.local.u32 	%r7460, [%rd30+8];
	// inline asm
	prmt.b32 %r12449, %r7459, %r7460, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7550, %r7551}, [%rd30+4];
	// inline asm
	prmt.b32 %r7462, %r7551, %r7550, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r7462;
	ld.local.u32 	%r7467, [%rd30+4];
	ld.local.u32 	%r7468, [%rd30];
	// inline asm
	prmt.b32 %r7466, %r7467, %r7468, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r7466;
	ld.local.u32 	%r7471, [%rd30];
	ld.local.u32 	%r7472, [%rd4];
	// inline asm
	prmt.b32 %r7470, %r7471, %r7472, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r7470;
	ld.local.u32 	%r7475, [%rd4];
	ld.local.u32 	%r7476, [%rd29+8];
	// inline asm
	prmt.b32 %r7474, %r7475, %r7476, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r7474;
	ld.local.v2.u32 	{%r7552, %r7553}, [%rd29+4];
	// inline asm
	prmt.b32 %r7478, %r7553, %r7552, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r7478;
	ld.local.u32 	%r7483, [%rd29+4];
	ld.local.u32 	%r7484, [%rd29];
	// inline asm
	prmt.b32 %r7482, %r7483, %r7484, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r7482;
	ld.local.u32 	%r7487, [%rd29];
	ld.local.u32 	%r7488, [%rd3];
	// inline asm
	prmt.b32 %r7486, %r7487, %r7488, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r7486;
	ld.local.u32 	%r7491, [%rd3];
	ld.local.u32 	%r7492, [%rd28+8];
	// inline asm
	prmt.b32 %r7490, %r7491, %r7492, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r7490;
	ld.local.v2.u32 	{%r7554, %r7555}, [%rd28+4];
	// inline asm
	prmt.b32 %r7494, %r7555, %r7554, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r7494;
	ld.local.u32 	%r7499, [%rd28+4];
	ld.local.u32 	%r7500, [%rd28];
	// inline asm
	prmt.b32 %r7498, %r7499, %r7500, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r7498;
	ld.local.u32 	%r7503, [%rd28];
	ld.local.u32 	%r7504, [%rd2];
	// inline asm
	prmt.b32 %r7502, %r7503, %r7504, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r7502;
	ld.local.u32 	%r7507, [%rd2];
	ld.local.u32 	%r7508, [%rd27+8];
	// inline asm
	prmt.b32 %r7506, %r7507, %r7508, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r7506;
	ld.local.v2.u32 	{%r7556, %r7557}, [%rd27+4];
	// inline asm
	prmt.b32 %r7510, %r7557, %r7556, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r7510;
	ld.local.u32 	%r7515, [%rd27+4];
	ld.local.u32 	%r7516, [%rd27];
	// inline asm
	prmt.b32 %r7514, %r7515, %r7516, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r7514;
	ld.local.u32 	%r7519, [%rd27];
	ld.local.u32 	%r7520, [%rd1];
	// inline asm
	prmt.b32 %r7518, %r7519, %r7520, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r7518;
	ld.local.u32 	%r7523, [%rd1];
	// inline asm
	prmt.b32 %r7522, %r7523, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r7522;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12462, %r12445;
	mov.u32 	%r12463, %r12445;
	mov.u32 	%r12464, %r12445;
	bra.uni 	BB3_408;

BB3_345:
	setp.gt.s32	%p220, %r5047, 11;
	@%p220 bra 	BB3_353;

	setp.gt.s32	%p226, %r5047, 9;
	@%p226 bra 	BB3_350;

	setp.eq.s32	%p229, %r5047, 8;
	@%p229 bra 	BB3_402;
	bra.uni 	BB3_348;

BB3_402:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12457, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8890, %r8891}, [%rd34+4];
	// inline asm
	prmt.b32 %r12450, %r8891, %r8890, %r69;
	// inline asm
	ld.local.u32 	%r8743, [%rd34+4];
	ld.local.u32 	%r8744, [%rd34];
	// inline asm
	prmt.b32 %r12451, %r8743, %r8744, %r69;
	// inline asm
	ld.local.u32 	%r8747, [%rd34];
	ld.local.u32 	%r8748, [%rd8];
	// inline asm
	prmt.b32 %r12452, %r8747, %r8748, %r69;
	// inline asm
	ld.local.u32 	%r8751, [%rd8];
	ld.local.u32 	%r8752, [%rd33+8];
	// inline asm
	prmt.b32 %r12453, %r8751, %r8752, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8892, %r8893}, [%rd33+4];
	// inline asm
	prmt.b32 %r12446, %r8893, %r8892, %r69;
	// inline asm
	ld.local.u32 	%r8759, [%rd33+4];
	ld.local.u32 	%r8760, [%rd33];
	// inline asm
	prmt.b32 %r12447, %r8759, %r8760, %r69;
	// inline asm
	ld.local.u32 	%r8763, [%rd33];
	ld.local.u32 	%r8764, [%rd7];
	// inline asm
	prmt.b32 %r12448, %r8763, %r8764, %r69;
	// inline asm
	ld.local.u32 	%r8767, [%rd7];
	ld.local.u32 	%r8768, [%rd32+8];
	// inline asm
	prmt.b32 %r12449, %r8767, %r8768, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8894, %r8895}, [%rd32+4];
	// inline asm
	prmt.b32 %r8770, %r8895, %r8894, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r8770;
	ld.local.u32 	%r8775, [%rd32+4];
	ld.local.u32 	%r8776, [%rd32];
	// inline asm
	prmt.b32 %r8774, %r8775, %r8776, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r8774;
	ld.local.u32 	%r8779, [%rd32];
	ld.local.u32 	%r8780, [%rd6];
	// inline asm
	prmt.b32 %r8778, %r8779, %r8780, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r8778;
	ld.local.u32 	%r8783, [%rd6];
	ld.local.u32 	%r8784, [%rd31+8];
	// inline asm
	prmt.b32 %r8782, %r8783, %r8784, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r8782;
	ld.local.v2.u32 	{%r8896, %r8897}, [%rd31+4];
	// inline asm
	prmt.b32 %r8786, %r8897, %r8896, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r8786;
	ld.local.u32 	%r8791, [%rd31+4];
	ld.local.u32 	%r8792, [%rd31];
	// inline asm
	prmt.b32 %r8790, %r8791, %r8792, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r8790;
	ld.local.u32 	%r8795, [%rd31];
	ld.local.u32 	%r8796, [%rd5];
	// inline asm
	prmt.b32 %r8794, %r8795, %r8796, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r8794;
	ld.local.u32 	%r8799, [%rd5];
	ld.local.u32 	%r8800, [%rd30+8];
	// inline asm
	prmt.b32 %r8798, %r8799, %r8800, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r8798;
	ld.local.v2.u32 	{%r8898, %r8899}, [%rd30+4];
	// inline asm
	prmt.b32 %r8802, %r8899, %r8898, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r8802;
	ld.local.u32 	%r8807, [%rd30+4];
	ld.local.u32 	%r8808, [%rd30];
	// inline asm
	prmt.b32 %r8806, %r8807, %r8808, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r8806;
	ld.local.u32 	%r8811, [%rd30];
	ld.local.u32 	%r8812, [%rd4];
	// inline asm
	prmt.b32 %r8810, %r8811, %r8812, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r8810;
	ld.local.u32 	%r8815, [%rd4];
	ld.local.u32 	%r8816, [%rd29+8];
	// inline asm
	prmt.b32 %r8814, %r8815, %r8816, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r8814;
	ld.local.v2.u32 	{%r8900, %r8901}, [%rd29+4];
	// inline asm
	prmt.b32 %r8818, %r8901, %r8900, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r8818;
	ld.local.u32 	%r8823, [%rd29+4];
	ld.local.u32 	%r8824, [%rd29];
	// inline asm
	prmt.b32 %r8822, %r8823, %r8824, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r8822;
	ld.local.u32 	%r8827, [%rd29];
	ld.local.u32 	%r8828, [%rd3];
	// inline asm
	prmt.b32 %r8826, %r8827, %r8828, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r8826;
	ld.local.u32 	%r8831, [%rd3];
	ld.local.u32 	%r8832, [%rd28+8];
	// inline asm
	prmt.b32 %r8830, %r8831, %r8832, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r8830;
	ld.local.v2.u32 	{%r8902, %r8903}, [%rd28+4];
	// inline asm
	prmt.b32 %r8834, %r8903, %r8902, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r8834;
	ld.local.u32 	%r8839, [%rd28+4];
	ld.local.u32 	%r8840, [%rd28];
	// inline asm
	prmt.b32 %r8838, %r8839, %r8840, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r8838;
	ld.local.u32 	%r8843, [%rd28];
	ld.local.u32 	%r8844, [%rd2];
	// inline asm
	prmt.b32 %r8842, %r8843, %r8844, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r8842;
	ld.local.u32 	%r8847, [%rd2];
	ld.local.u32 	%r8848, [%rd27+8];
	// inline asm
	prmt.b32 %r8846, %r8847, %r8848, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r8846;
	ld.local.v2.u32 	{%r8904, %r8905}, [%rd27+4];
	// inline asm
	prmt.b32 %r8850, %r8905, %r8904, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r8850;
	ld.local.u32 	%r8855, [%rd27+4];
	ld.local.u32 	%r8856, [%rd27];
	// inline asm
	prmt.b32 %r8854, %r8855, %r8856, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r8854;
	ld.local.u32 	%r8859, [%rd27];
	ld.local.u32 	%r8860, [%rd1];
	// inline asm
	prmt.b32 %r8858, %r8859, %r8860, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r8858;
	ld.local.u32 	%r8863, [%rd1];
	// inline asm
	prmt.b32 %r8862, %r8863, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r8862;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12454, %r12445;
	mov.u32 	%r12455, %r12445;
	mov.u32 	%r12456, %r12445;
	bra.uni 	BB3_406;

BB3_376:
	setp.gt.s32	%p197, %r5047, 27;
	@%p197 bra 	BB3_384;

	setp.gt.s32	%p203, %r5047, 25;
	@%p203 bra 	BB3_381;

	setp.eq.s32	%p206, %r5047, 24;
	@%p206 bra 	BB3_394;
	bra.uni 	BB3_379;

BB3_394:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12473, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6258, %r6259}, [%rd34+4];
	// inline asm
	prmt.b32 %r12466, %r6259, %r6258, %r69;
	// inline asm
	ld.local.u32 	%r6127, [%rd34+4];
	ld.local.u32 	%r6128, [%rd34];
	// inline asm
	prmt.b32 %r12467, %r6127, %r6128, %r69;
	// inline asm
	ld.local.u32 	%r6131, [%rd34];
	ld.local.u32 	%r6132, [%rd8];
	// inline asm
	prmt.b32 %r12468, %r6131, %r6132, %r69;
	// inline asm
	ld.local.u32 	%r6135, [%rd8];
	ld.local.u32 	%r6136, [%rd33+8];
	// inline asm
	prmt.b32 %r12469, %r6135, %r6136, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6260, %r6261}, [%rd33+4];
	// inline asm
	prmt.b32 %r12462, %r6261, %r6260, %r69;
	// inline asm
	ld.local.u32 	%r6143, [%rd33+4];
	ld.local.u32 	%r6144, [%rd33];
	// inline asm
	prmt.b32 %r12463, %r6143, %r6144, %r69;
	// inline asm
	ld.local.u32 	%r6147, [%rd33];
	ld.local.u32 	%r6148, [%rd7];
	// inline asm
	prmt.b32 %r12464, %r6147, %r6148, %r69;
	// inline asm
	ld.local.u32 	%r6151, [%rd7];
	ld.local.u32 	%r6152, [%rd32+8];
	// inline asm
	prmt.b32 %r12465, %r6151, %r6152, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6262, %r6263}, [%rd32+4];
	// inline asm
	prmt.b32 %r12458, %r6263, %r6262, %r69;
	// inline asm
	ld.local.u32 	%r6159, [%rd32+4];
	ld.local.u32 	%r6160, [%rd32];
	// inline asm
	prmt.b32 %r12459, %r6159, %r6160, %r69;
	// inline asm
	ld.local.u32 	%r6163, [%rd32];
	ld.local.u32 	%r6164, [%rd6];
	// inline asm
	prmt.b32 %r12460, %r6163, %r6164, %r69;
	// inline asm
	ld.local.u32 	%r6167, [%rd6];
	ld.local.u32 	%r6168, [%rd31+8];
	// inline asm
	prmt.b32 %r12461, %r6167, %r6168, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6264, %r6265}, [%rd31+4];
	// inline asm
	prmt.b32 %r12454, %r6265, %r6264, %r69;
	// inline asm
	ld.local.u32 	%r6175, [%rd31+4];
	ld.local.u32 	%r6176, [%rd31];
	// inline asm
	prmt.b32 %r12455, %r6175, %r6176, %r69;
	// inline asm
	ld.local.u32 	%r6179, [%rd31];
	ld.local.u32 	%r6180, [%rd5];
	// inline asm
	prmt.b32 %r12456, %r6179, %r6180, %r69;
	// inline asm
	ld.local.u32 	%r6183, [%rd5];
	ld.local.u32 	%r6184, [%rd30+8];
	// inline asm
	prmt.b32 %r12457, %r6183, %r6184, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6266, %r6267}, [%rd30+4];
	// inline asm
	prmt.b32 %r12450, %r6267, %r6266, %r69;
	// inline asm
	ld.local.u32 	%r6191, [%rd30+4];
	ld.local.u32 	%r6192, [%rd30];
	// inline asm
	prmt.b32 %r12451, %r6191, %r6192, %r69;
	// inline asm
	ld.local.u32 	%r6195, [%rd30];
	ld.local.u32 	%r6196, [%rd4];
	// inline asm
	prmt.b32 %r12452, %r6195, %r6196, %r69;
	// inline asm
	ld.local.u32 	%r6199, [%rd4];
	ld.local.u32 	%r6200, [%rd29+8];
	// inline asm
	prmt.b32 %r12453, %r6199, %r6200, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6268, %r6269}, [%rd29+4];
	// inline asm
	prmt.b32 %r12446, %r6269, %r6268, %r69;
	// inline asm
	ld.local.u32 	%r6207, [%rd29+4];
	ld.local.u32 	%r6208, [%rd29];
	// inline asm
	prmt.b32 %r12447, %r6207, %r6208, %r69;
	// inline asm
	ld.local.u32 	%r6211, [%rd29];
	ld.local.u32 	%r6212, [%rd3];
	// inline asm
	prmt.b32 %r12448, %r6211, %r6212, %r69;
	// inline asm
	ld.local.u32 	%r6215, [%rd3];
	ld.local.u32 	%r6216, [%rd28+8];
	// inline asm
	prmt.b32 %r12449, %r6215, %r6216, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6270, %r6271}, [%rd28+4];
	// inline asm
	prmt.b32 %r6218, %r6271, %r6270, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r6218;
	ld.local.u32 	%r6223, [%rd28+4];
	ld.local.u32 	%r6224, [%rd28];
	// inline asm
	prmt.b32 %r6222, %r6223, %r6224, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r6222;
	ld.local.u32 	%r6227, [%rd28];
	ld.local.u32 	%r6228, [%rd2];
	// inline asm
	prmt.b32 %r6226, %r6227, %r6228, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r6226;
	ld.local.u32 	%r6231, [%rd2];
	ld.local.u32 	%r6232, [%rd27+8];
	// inline asm
	prmt.b32 %r6230, %r6231, %r6232, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r6230;
	ld.local.v2.u32 	{%r6272, %r6273}, [%rd27+4];
	// inline asm
	prmt.b32 %r6234, %r6273, %r6272, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r6234;
	ld.local.u32 	%r6239, [%rd27+4];
	ld.local.u32 	%r6240, [%rd27];
	// inline asm
	prmt.b32 %r6238, %r6239, %r6240, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r6238;
	ld.local.u32 	%r6243, [%rd27];
	ld.local.u32 	%r6244, [%rd1];
	// inline asm
	prmt.b32 %r6242, %r6243, %r6244, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r6242;
	ld.local.u32 	%r6247, [%rd1];
	// inline asm
	prmt.b32 %r6246, %r6247, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r6246;
	st.local.v2.u32 	[%rd32+4], {%r12445, %r12445};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12470, %r12445;
	mov.u32 	%r12471, %r12445;
	mov.u32 	%r12472, %r12445;
	bra.uni 	BB3_410;

BB3_338:
	setp.gt.s32	%p232, %r5047, 5;
	@%p232 bra 	BB3_342;

	setp.eq.s32	%p235, %r5047, 4;
	@%p235 bra 	BB3_404;
	bra.uni 	BB3_340;

BB3_404:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12453, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9588, %r9589}, [%rd34+4];
	// inline asm
	prmt.b32 %r12446, %r9589, %r9588, %r69;
	// inline asm
	ld.local.u32 	%r9437, [%rd34+4];
	ld.local.u32 	%r9438, [%rd34];
	// inline asm
	prmt.b32 %r12447, %r9437, %r9438, %r69;
	// inline asm
	ld.local.u32 	%r9441, [%rd34];
	ld.local.u32 	%r9442, [%rd8];
	// inline asm
	prmt.b32 %r12448, %r9441, %r9442, %r69;
	// inline asm
	ld.local.u32 	%r9445, [%rd8];
	ld.local.u32 	%r9446, [%rd33+8];
	// inline asm
	prmt.b32 %r12449, %r9445, %r9446, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9590, %r9591}, [%rd33+4];
	// inline asm
	prmt.b32 %r9448, %r9591, %r9590, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r9448;
	ld.local.u32 	%r9453, [%rd33+4];
	ld.local.u32 	%r9454, [%rd33];
	// inline asm
	prmt.b32 %r9452, %r9453, %r9454, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r9452;
	ld.local.u32 	%r9457, [%rd33];
	ld.local.u32 	%r9458, [%rd7];
	// inline asm
	prmt.b32 %r9456, %r9457, %r9458, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r9456;
	ld.local.u32 	%r9461, [%rd7];
	ld.local.u32 	%r9462, [%rd32+8];
	// inline asm
	prmt.b32 %r9460, %r9461, %r9462, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r9460;
	ld.local.v2.u32 	{%r9592, %r9593}, [%rd32+4];
	// inline asm
	prmt.b32 %r9464, %r9593, %r9592, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r9464;
	ld.local.u32 	%r9469, [%rd32+4];
	ld.local.u32 	%r9470, [%rd32];
	// inline asm
	prmt.b32 %r9468, %r9469, %r9470, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r9468;
	ld.local.u32 	%r9473, [%rd32];
	ld.local.u32 	%r9474, [%rd6];
	// inline asm
	prmt.b32 %r9472, %r9473, %r9474, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r9472;
	ld.local.u32 	%r9477, [%rd6];
	ld.local.u32 	%r9478, [%rd31+8];
	// inline asm
	prmt.b32 %r9476, %r9477, %r9478, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r9476;
	ld.local.v2.u32 	{%r9594, %r9595}, [%rd31+4];
	// inline asm
	prmt.b32 %r9480, %r9595, %r9594, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r9480;
	ld.local.u32 	%r9485, [%rd31+4];
	ld.local.u32 	%r9486, [%rd31];
	// inline asm
	prmt.b32 %r9484, %r9485, %r9486, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r9484;
	ld.local.u32 	%r9489, [%rd31];
	ld.local.u32 	%r9490, [%rd5];
	// inline asm
	prmt.b32 %r9488, %r9489, %r9490, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r9488;
	ld.local.u32 	%r9493, [%rd5];
	ld.local.u32 	%r9494, [%rd30+8];
	// inline asm
	prmt.b32 %r9492, %r9493, %r9494, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r9492;
	ld.local.v2.u32 	{%r9596, %r9597}, [%rd30+4];
	// inline asm
	prmt.b32 %r9496, %r9597, %r9596, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r9496;
	ld.local.u32 	%r9501, [%rd30+4];
	ld.local.u32 	%r9502, [%rd30];
	// inline asm
	prmt.b32 %r9500, %r9501, %r9502, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r9500;
	ld.local.u32 	%r9505, [%rd30];
	ld.local.u32 	%r9506, [%rd4];
	// inline asm
	prmt.b32 %r9504, %r9505, %r9506, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r9504;
	ld.local.u32 	%r9509, [%rd4];
	ld.local.u32 	%r9510, [%rd29+8];
	// inline asm
	prmt.b32 %r9508, %r9509, %r9510, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r9508;
	ld.local.v2.u32 	{%r9598, %r9599}, [%rd29+4];
	// inline asm
	prmt.b32 %r9512, %r9599, %r9598, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r9512;
	ld.local.u32 	%r9517, [%rd29+4];
	ld.local.u32 	%r9518, [%rd29];
	// inline asm
	prmt.b32 %r9516, %r9517, %r9518, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r9516;
	ld.local.u32 	%r9521, [%rd29];
	ld.local.u32 	%r9522, [%rd3];
	// inline asm
	prmt.b32 %r9520, %r9521, %r9522, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r9520;
	ld.local.u32 	%r9525, [%rd3];
	ld.local.u32 	%r9526, [%rd28+8];
	// inline asm
	prmt.b32 %r9524, %r9525, %r9526, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r9524;
	ld.local.v2.u32 	{%r9600, %r9601}, [%rd28+4];
	// inline asm
	prmt.b32 %r9528, %r9601, %r9600, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r9528;
	ld.local.u32 	%r9533, [%rd28+4];
	ld.local.u32 	%r9534, [%rd28];
	// inline asm
	prmt.b32 %r9532, %r9533, %r9534, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r9532;
	ld.local.u32 	%r9537, [%rd28];
	ld.local.u32 	%r9538, [%rd2];
	// inline asm
	prmt.b32 %r9536, %r9537, %r9538, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r9536;
	ld.local.u32 	%r9541, [%rd2];
	ld.local.u32 	%r9542, [%rd27+8];
	// inline asm
	prmt.b32 %r9540, %r9541, %r9542, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r9540;
	ld.local.v2.u32 	{%r9602, %r9603}, [%rd27+4];
	// inline asm
	prmt.b32 %r9544, %r9603, %r9602, %r69;
	// inline asm
	st.local.u32 	[%rd28+8], %r9544;
	ld.local.u32 	%r9549, [%rd27+4];
	ld.local.u32 	%r9550, [%rd27];
	// inline asm
	prmt.b32 %r9548, %r9549, %r9550, %r69;
	// inline asm
	st.local.u32 	[%rd28+4], %r9548;
	ld.local.u32 	%r9553, [%rd27];
	ld.local.u32 	%r9554, [%rd1];
	// inline asm
	prmt.b32 %r9552, %r9553, %r9554, %r69;
	// inline asm
	st.local.u32 	[%rd28], %r9552;
	ld.local.u32 	%r9557, [%rd1];
	// inline asm
	prmt.b32 %r9556, %r9557, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd2], %r9556;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12450, %r12445;
	mov.u32 	%r12451, %r12445;
	mov.u32 	%r12452, %r12445;
	bra.uni 	BB3_405;

BB3_369:
	setp.gt.s32	%p209, %r5047, 21;
	@%p209 bra 	BB3_373;

	setp.eq.s32	%p212, %r5047, 20;
	@%p212 bra 	BB3_396;
	bra.uni 	BB3_371;

BB3_396:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12469, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6892, %r6893}, [%rd34+4];
	// inline asm
	prmt.b32 %r12462, %r6893, %r6892, %r69;
	// inline asm
	ld.local.u32 	%r6757, [%rd34+4];
	ld.local.u32 	%r6758, [%rd34];
	// inline asm
	prmt.b32 %r12463, %r6757, %r6758, %r69;
	// inline asm
	ld.local.u32 	%r6761, [%rd34];
	ld.local.u32 	%r6762, [%rd8];
	// inline asm
	prmt.b32 %r12464, %r6761, %r6762, %r69;
	// inline asm
	ld.local.u32 	%r6765, [%rd8];
	ld.local.u32 	%r6766, [%rd33+8];
	// inline asm
	prmt.b32 %r12465, %r6765, %r6766, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6894, %r6895}, [%rd33+4];
	// inline asm
	prmt.b32 %r12458, %r6895, %r6894, %r69;
	// inline asm
	ld.local.u32 	%r6773, [%rd33+4];
	ld.local.u32 	%r6774, [%rd33];
	// inline asm
	prmt.b32 %r12459, %r6773, %r6774, %r69;
	// inline asm
	ld.local.u32 	%r6777, [%rd33];
	ld.local.u32 	%r6778, [%rd7];
	// inline asm
	prmt.b32 %r12460, %r6777, %r6778, %r69;
	// inline asm
	ld.local.u32 	%r6781, [%rd7];
	ld.local.u32 	%r6782, [%rd32+8];
	// inline asm
	prmt.b32 %r12461, %r6781, %r6782, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6896, %r6897}, [%rd32+4];
	// inline asm
	prmt.b32 %r12454, %r6897, %r6896, %r69;
	// inline asm
	ld.local.u32 	%r6789, [%rd32+4];
	ld.local.u32 	%r6790, [%rd32];
	// inline asm
	prmt.b32 %r12455, %r6789, %r6790, %r69;
	// inline asm
	ld.local.u32 	%r6793, [%rd32];
	ld.local.u32 	%r6794, [%rd6];
	// inline asm
	prmt.b32 %r12456, %r6793, %r6794, %r69;
	// inline asm
	ld.local.u32 	%r6797, [%rd6];
	ld.local.u32 	%r6798, [%rd31+8];
	// inline asm
	prmt.b32 %r12457, %r6797, %r6798, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6898, %r6899}, [%rd31+4];
	// inline asm
	prmt.b32 %r12450, %r6899, %r6898, %r69;
	// inline asm
	ld.local.u32 	%r6805, [%rd31+4];
	ld.local.u32 	%r6806, [%rd31];
	// inline asm
	prmt.b32 %r12451, %r6805, %r6806, %r69;
	// inline asm
	ld.local.u32 	%r6809, [%rd31];
	ld.local.u32 	%r6810, [%rd5];
	// inline asm
	prmt.b32 %r12452, %r6809, %r6810, %r69;
	// inline asm
	ld.local.u32 	%r6813, [%rd5];
	ld.local.u32 	%r6814, [%rd30+8];
	// inline asm
	prmt.b32 %r12453, %r6813, %r6814, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6900, %r6901}, [%rd30+4];
	// inline asm
	prmt.b32 %r12446, %r6901, %r6900, %r69;
	// inline asm
	ld.local.u32 	%r6821, [%rd30+4];
	ld.local.u32 	%r6822, [%rd30];
	// inline asm
	prmt.b32 %r12447, %r6821, %r6822, %r69;
	// inline asm
	ld.local.u32 	%r6825, [%rd30];
	ld.local.u32 	%r6826, [%rd4];
	// inline asm
	prmt.b32 %r12448, %r6825, %r6826, %r69;
	// inline asm
	ld.local.u32 	%r6829, [%rd4];
	ld.local.u32 	%r6830, [%rd29+8];
	// inline asm
	prmt.b32 %r12449, %r6829, %r6830, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6902, %r6903}, [%rd29+4];
	// inline asm
	prmt.b32 %r6832, %r6903, %r6902, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r6832;
	ld.local.u32 	%r6837, [%rd29+4];
	ld.local.u32 	%r6838, [%rd29];
	// inline asm
	prmt.b32 %r6836, %r6837, %r6838, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r6836;
	ld.local.u32 	%r6841, [%rd29];
	ld.local.u32 	%r6842, [%rd3];
	// inline asm
	prmt.b32 %r6840, %r6841, %r6842, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r6840;
	ld.local.u32 	%r6845, [%rd3];
	ld.local.u32 	%r6846, [%rd28+8];
	// inline asm
	prmt.b32 %r6844, %r6845, %r6846, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r6844;
	ld.local.v2.u32 	{%r6904, %r6905}, [%rd28+4];
	// inline asm
	prmt.b32 %r6848, %r6905, %r6904, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r6848;
	ld.local.u32 	%r6853, [%rd28+4];
	ld.local.u32 	%r6854, [%rd28];
	// inline asm
	prmt.b32 %r6852, %r6853, %r6854, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r6852;
	ld.local.u32 	%r6857, [%rd28];
	ld.local.u32 	%r6858, [%rd2];
	// inline asm
	prmt.b32 %r6856, %r6857, %r6858, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r6856;
	ld.local.u32 	%r6861, [%rd2];
	ld.local.u32 	%r6862, [%rd27+8];
	// inline asm
	prmt.b32 %r6860, %r6861, %r6862, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r6860;
	ld.local.v2.u32 	{%r6906, %r6907}, [%rd27+4];
	// inline asm
	prmt.b32 %r6864, %r6907, %r6906, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r6864;
	ld.local.u32 	%r6869, [%rd27+4];
	ld.local.u32 	%r6870, [%rd27];
	// inline asm
	prmt.b32 %r6868, %r6869, %r6870, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r6868;
	ld.local.u32 	%r6873, [%rd27];
	ld.local.u32 	%r6874, [%rd1];
	// inline asm
	prmt.b32 %r6872, %r6873, %r6874, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r6872;
	ld.local.u32 	%r6877, [%rd1];
	// inline asm
	prmt.b32 %r6876, %r6877, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r6876;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12466, %r12445;
	mov.u32 	%r12467, %r12445;
	mov.u32 	%r12468, %r12445;
	bra.uni 	BB3_409;

BB3_353:
	setp.gt.s32	%p221, %r5047, 13;
	@%p221 bra 	BB3_357;

	setp.eq.s32	%p224, %r5047, 12;
	@%p224 bra 	BB3_400;
	bra.uni 	BB3_355;

BB3_400:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12461, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8208, %r8209}, [%rd34+4];
	// inline asm
	prmt.b32 %r12454, %r8209, %r8208, %r69;
	// inline asm
	ld.local.u32 	%r8065, [%rd34+4];
	ld.local.u32 	%r8066, [%rd34];
	// inline asm
	prmt.b32 %r12455, %r8065, %r8066, %r69;
	// inline asm
	ld.local.u32 	%r8069, [%rd34];
	ld.local.u32 	%r8070, [%rd8];
	// inline asm
	prmt.b32 %r12456, %r8069, %r8070, %r69;
	// inline asm
	ld.local.u32 	%r8073, [%rd8];
	ld.local.u32 	%r8074, [%rd33+8];
	// inline asm
	prmt.b32 %r12457, %r8073, %r8074, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8210, %r8211}, [%rd33+4];
	// inline asm
	prmt.b32 %r12450, %r8211, %r8210, %r69;
	// inline asm
	ld.local.u32 	%r8081, [%rd33+4];
	ld.local.u32 	%r8082, [%rd33];
	// inline asm
	prmt.b32 %r12451, %r8081, %r8082, %r69;
	// inline asm
	ld.local.u32 	%r8085, [%rd33];
	ld.local.u32 	%r8086, [%rd7];
	// inline asm
	prmt.b32 %r12452, %r8085, %r8086, %r69;
	// inline asm
	ld.local.u32 	%r8089, [%rd7];
	ld.local.u32 	%r8090, [%rd32+8];
	// inline asm
	prmt.b32 %r12453, %r8089, %r8090, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8212, %r8213}, [%rd32+4];
	// inline asm
	prmt.b32 %r12446, %r8213, %r8212, %r69;
	// inline asm
	ld.local.u32 	%r8097, [%rd32+4];
	ld.local.u32 	%r8098, [%rd32];
	// inline asm
	prmt.b32 %r12447, %r8097, %r8098, %r69;
	// inline asm
	ld.local.u32 	%r8101, [%rd32];
	ld.local.u32 	%r8102, [%rd6];
	// inline asm
	prmt.b32 %r12448, %r8101, %r8102, %r69;
	// inline asm
	ld.local.u32 	%r8105, [%rd6];
	ld.local.u32 	%r8106, [%rd31+8];
	// inline asm
	prmt.b32 %r12449, %r8105, %r8106, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8214, %r8215}, [%rd31+4];
	// inline asm
	prmt.b32 %r8108, %r8215, %r8214, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r8108;
	ld.local.u32 	%r8113, [%rd31+4];
	ld.local.u32 	%r8114, [%rd31];
	// inline asm
	prmt.b32 %r8112, %r8113, %r8114, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r8112;
	ld.local.u32 	%r8117, [%rd31];
	ld.local.u32 	%r8118, [%rd5];
	// inline asm
	prmt.b32 %r8116, %r8117, %r8118, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r8116;
	ld.local.u32 	%r8121, [%rd5];
	ld.local.u32 	%r8122, [%rd30+8];
	// inline asm
	prmt.b32 %r8120, %r8121, %r8122, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r8120;
	ld.local.v2.u32 	{%r8216, %r8217}, [%rd30+4];
	// inline asm
	prmt.b32 %r8124, %r8217, %r8216, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r8124;
	ld.local.u32 	%r8129, [%rd30+4];
	ld.local.u32 	%r8130, [%rd30];
	// inline asm
	prmt.b32 %r8128, %r8129, %r8130, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r8128;
	ld.local.u32 	%r8133, [%rd30];
	ld.local.u32 	%r8134, [%rd4];
	// inline asm
	prmt.b32 %r8132, %r8133, %r8134, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r8132;
	ld.local.u32 	%r8137, [%rd4];
	ld.local.u32 	%r8138, [%rd29+8];
	// inline asm
	prmt.b32 %r8136, %r8137, %r8138, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r8136;
	ld.local.v2.u32 	{%r8218, %r8219}, [%rd29+4];
	// inline asm
	prmt.b32 %r8140, %r8219, %r8218, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r8140;
	ld.local.u32 	%r8145, [%rd29+4];
	ld.local.u32 	%r8146, [%rd29];
	// inline asm
	prmt.b32 %r8144, %r8145, %r8146, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r8144;
	ld.local.u32 	%r8149, [%rd29];
	ld.local.u32 	%r8150, [%rd3];
	// inline asm
	prmt.b32 %r8148, %r8149, %r8150, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r8148;
	ld.local.u32 	%r8153, [%rd3];
	ld.local.u32 	%r8154, [%rd28+8];
	// inline asm
	prmt.b32 %r8152, %r8153, %r8154, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r8152;
	ld.local.v2.u32 	{%r8220, %r8221}, [%rd28+4];
	// inline asm
	prmt.b32 %r8156, %r8221, %r8220, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r8156;
	ld.local.u32 	%r8161, [%rd28+4];
	ld.local.u32 	%r8162, [%rd28];
	// inline asm
	prmt.b32 %r8160, %r8161, %r8162, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r8160;
	ld.local.u32 	%r8165, [%rd28];
	ld.local.u32 	%r8166, [%rd2];
	// inline asm
	prmt.b32 %r8164, %r8165, %r8166, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r8164;
	ld.local.u32 	%r8169, [%rd2];
	ld.local.u32 	%r8170, [%rd27+8];
	// inline asm
	prmt.b32 %r8168, %r8169, %r8170, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r8168;
	ld.local.v2.u32 	{%r8222, %r8223}, [%rd27+4];
	// inline asm
	prmt.b32 %r8172, %r8223, %r8222, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r8172;
	ld.local.u32 	%r8177, [%rd27+4];
	ld.local.u32 	%r8178, [%rd27];
	// inline asm
	prmt.b32 %r8176, %r8177, %r8178, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r8176;
	ld.local.u32 	%r8181, [%rd27];
	ld.local.u32 	%r8182, [%rd1];
	// inline asm
	prmt.b32 %r8180, %r8181, %r8182, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r8180;
	ld.local.u32 	%r8185, [%rd1];
	// inline asm
	prmt.b32 %r8184, %r8185, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r8184;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12458, %r12445;
	mov.u32 	%r12459, %r12445;
	mov.u32 	%r12460, %r12445;
	bra.uni 	BB3_407;

BB3_384:
	setp.gt.s32	%p198, %r5047, 29;
	@%p198 bra 	BB3_388;

	setp.eq.s32	%p201, %r5047, 28;
	@%p201 bra 	BB3_392;
	bra.uni 	BB3_386;

BB3_392:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12477, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5640, %r5641}, [%rd34+4];
	// inline asm
	prmt.b32 %r12470, %r5641, %r5640, %r69;
	// inline asm
	ld.local.u32 	%r5513, [%rd34+4];
	ld.local.u32 	%r5514, [%rd34];
	// inline asm
	prmt.b32 %r12471, %r5513, %r5514, %r69;
	// inline asm
	ld.local.u32 	%r5517, [%rd34];
	ld.local.u32 	%r5518, [%rd8];
	// inline asm
	prmt.b32 %r12472, %r5517, %r5518, %r69;
	// inline asm
	ld.local.u32 	%r5521, [%rd8];
	ld.local.u32 	%r5522, [%rd33+8];
	// inline asm
	prmt.b32 %r12473, %r5521, %r5522, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5642, %r5643}, [%rd33+4];
	// inline asm
	prmt.b32 %r12466, %r5643, %r5642, %r69;
	// inline asm
	ld.local.u32 	%r5529, [%rd33+4];
	ld.local.u32 	%r5530, [%rd33];
	// inline asm
	prmt.b32 %r12467, %r5529, %r5530, %r69;
	// inline asm
	ld.local.u32 	%r5533, [%rd33];
	ld.local.u32 	%r5534, [%rd7];
	// inline asm
	prmt.b32 %r12468, %r5533, %r5534, %r69;
	// inline asm
	ld.local.u32 	%r5537, [%rd7];
	ld.local.u32 	%r5538, [%rd32+8];
	// inline asm
	prmt.b32 %r12469, %r5537, %r5538, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5644, %r5645}, [%rd32+4];
	// inline asm
	prmt.b32 %r12462, %r5645, %r5644, %r69;
	// inline asm
	ld.local.u32 	%r5545, [%rd32+4];
	ld.local.u32 	%r5546, [%rd32];
	// inline asm
	prmt.b32 %r12463, %r5545, %r5546, %r69;
	// inline asm
	ld.local.u32 	%r5549, [%rd32];
	ld.local.u32 	%r5550, [%rd6];
	// inline asm
	prmt.b32 %r12464, %r5549, %r5550, %r69;
	// inline asm
	ld.local.u32 	%r5553, [%rd6];
	ld.local.u32 	%r5554, [%rd31+8];
	// inline asm
	prmt.b32 %r12465, %r5553, %r5554, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5646, %r5647}, [%rd31+4];
	// inline asm
	prmt.b32 %r12458, %r5647, %r5646, %r69;
	// inline asm
	ld.local.u32 	%r5561, [%rd31+4];
	ld.local.u32 	%r5562, [%rd31];
	// inline asm
	prmt.b32 %r12459, %r5561, %r5562, %r69;
	// inline asm
	ld.local.u32 	%r5565, [%rd31];
	ld.local.u32 	%r5566, [%rd5];
	// inline asm
	prmt.b32 %r12460, %r5565, %r5566, %r69;
	// inline asm
	ld.local.u32 	%r5569, [%rd5];
	ld.local.u32 	%r5570, [%rd30+8];
	// inline asm
	prmt.b32 %r12461, %r5569, %r5570, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5648, %r5649}, [%rd30+4];
	// inline asm
	prmt.b32 %r12454, %r5649, %r5648, %r69;
	// inline asm
	ld.local.u32 	%r5577, [%rd30+4];
	ld.local.u32 	%r5578, [%rd30];
	// inline asm
	prmt.b32 %r12455, %r5577, %r5578, %r69;
	// inline asm
	ld.local.u32 	%r5581, [%rd30];
	ld.local.u32 	%r5582, [%rd4];
	// inline asm
	prmt.b32 %r12456, %r5581, %r5582, %r69;
	// inline asm
	ld.local.u32 	%r5585, [%rd4];
	ld.local.u32 	%r5586, [%rd29+8];
	// inline asm
	prmt.b32 %r12457, %r5585, %r5586, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5650, %r5651}, [%rd29+4];
	// inline asm
	prmt.b32 %r12450, %r5651, %r5650, %r69;
	// inline asm
	ld.local.u32 	%r5593, [%rd29+4];
	ld.local.u32 	%r5594, [%rd29];
	// inline asm
	prmt.b32 %r12451, %r5593, %r5594, %r69;
	// inline asm
	ld.local.u32 	%r5597, [%rd29];
	ld.local.u32 	%r5598, [%rd3];
	// inline asm
	prmt.b32 %r12452, %r5597, %r5598, %r69;
	// inline asm
	ld.local.u32 	%r5601, [%rd3];
	ld.local.u32 	%r5602, [%rd28+8];
	// inline asm
	prmt.b32 %r12453, %r5601, %r5602, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5652, %r5653}, [%rd28+4];
	// inline asm
	prmt.b32 %r12446, %r5653, %r5652, %r69;
	// inline asm
	ld.local.u32 	%r5609, [%rd28+4];
	ld.local.u32 	%r5610, [%rd28];
	// inline asm
	prmt.b32 %r12447, %r5609, %r5610, %r69;
	// inline asm
	ld.local.u32 	%r5613, [%rd28];
	ld.local.u32 	%r5614, [%rd2];
	// inline asm
	prmt.b32 %r12448, %r5613, %r5614, %r69;
	// inline asm
	ld.local.u32 	%r5617, [%rd2];
	ld.local.u32 	%r5618, [%rd27+8];
	// inline asm
	prmt.b32 %r12449, %r5617, %r5618, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5654, %r5655}, [%rd27+4];
	// inline asm
	prmt.b32 %r5620, %r5655, %r5654, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r5620;
	ld.local.u32 	%r5625, [%rd27+4];
	ld.local.u32 	%r5626, [%rd27];
	// inline asm
	prmt.b32 %r5624, %r5625, %r5626, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r5624;
	ld.local.u32 	%r5629, [%rd27];
	ld.local.u32 	%r5630, [%rd1];
	// inline asm
	prmt.b32 %r5628, %r5629, %r5630, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r5628;
	ld.local.u32 	%r5633, [%rd1];
	// inline asm
	prmt.b32 %r5632, %r5633, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r5632;
	st.local.v2.u32 	[%rd33+4], {%r12445, %r12445};
	st.local.u32 	[%rd33], %r12445;
	st.local.u32 	[%rd7], %r12445;
	st.local.v2.u32 	[%rd32+4], {%r12445, %r12445};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12474, %r12445;
	mov.u32 	%r12475, %r12445;
	mov.u32 	%r12476, %r12445;
	bra.uni 	BB3_415;

BB3_334:
	setp.eq.s32	%p238, %r5047, 2;
	@%p238 bra 	BB3_411;
	bra.uni 	BB3_335;

BB3_411:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12447, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9943, %r9944}, [%rd34+4];
	// inline asm
	prmt.b32 %r12448, %r9944, %r9943, %r69;
	// inline asm
	ld.local.u32 	%r9790, [%rd34+4];
	ld.local.u32 	%r9791, [%rd34];
	// inline asm
	prmt.b32 %r12449, %r9790, %r9791, %r69;
	// inline asm
	ld.local.u32 	%r9794, [%rd34];
	ld.local.u32 	%r9795, [%rd8];
	// inline asm
	prmt.b32 %r9793, %r9794, %r9795, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r9793;
	ld.local.u32 	%r9798, [%rd8];
	ld.local.u32 	%r9799, [%rd33+8];
	// inline asm
	prmt.b32 %r9797, %r9798, %r9799, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r9797;
	ld.local.v2.u32 	{%r9945, %r9946}, [%rd33+4];
	// inline asm
	prmt.b32 %r9801, %r9946, %r9945, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r9801;
	ld.local.u32 	%r9806, [%rd33+4];
	ld.local.u32 	%r9807, [%rd33];
	// inline asm
	prmt.b32 %r9805, %r9806, %r9807, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r9805;
	ld.local.u32 	%r9810, [%rd33];
	ld.local.u32 	%r9811, [%rd7];
	// inline asm
	prmt.b32 %r9809, %r9810, %r9811, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r9809;
	ld.local.u32 	%r9814, [%rd7];
	ld.local.u32 	%r9815, [%rd32+8];
	// inline asm
	prmt.b32 %r9813, %r9814, %r9815, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r9813;
	ld.local.v2.u32 	{%r9947, %r9948}, [%rd32+4];
	// inline asm
	prmt.b32 %r9817, %r9948, %r9947, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r9817;
	ld.local.u32 	%r9822, [%rd32+4];
	ld.local.u32 	%r9823, [%rd32];
	// inline asm
	prmt.b32 %r9821, %r9822, %r9823, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r9821;
	ld.local.u32 	%r9826, [%rd32];
	ld.local.u32 	%r9827, [%rd6];
	// inline asm
	prmt.b32 %r9825, %r9826, %r9827, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r9825;
	ld.local.u32 	%r9830, [%rd6];
	ld.local.u32 	%r9831, [%rd31+8];
	// inline asm
	prmt.b32 %r9829, %r9830, %r9831, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r9829;
	ld.local.v2.u32 	{%r9949, %r9950}, [%rd31+4];
	// inline asm
	prmt.b32 %r9833, %r9950, %r9949, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r9833;
	ld.local.u32 	%r9838, [%rd31+4];
	ld.local.u32 	%r9839, [%rd31];
	// inline asm
	prmt.b32 %r9837, %r9838, %r9839, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r9837;
	ld.local.u32 	%r9842, [%rd31];
	ld.local.u32 	%r9843, [%rd5];
	// inline asm
	prmt.b32 %r9841, %r9842, %r9843, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r9841;
	ld.local.u32 	%r9846, [%rd5];
	ld.local.u32 	%r9847, [%rd30+8];
	// inline asm
	prmt.b32 %r9845, %r9846, %r9847, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r9845;
	ld.local.v2.u32 	{%r9951, %r9952}, [%rd30+4];
	// inline asm
	prmt.b32 %r9849, %r9952, %r9951, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r9849;
	ld.local.u32 	%r9854, [%rd30+4];
	ld.local.u32 	%r9855, [%rd30];
	// inline asm
	prmt.b32 %r9853, %r9854, %r9855, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r9853;
	ld.local.u32 	%r9858, [%rd30];
	ld.local.u32 	%r9859, [%rd4];
	// inline asm
	prmt.b32 %r9857, %r9858, %r9859, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r9857;
	ld.local.u32 	%r9862, [%rd4];
	ld.local.u32 	%r9863, [%rd29+8];
	// inline asm
	prmt.b32 %r9861, %r9862, %r9863, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r9861;
	ld.local.v2.u32 	{%r9953, %r9954}, [%rd29+4];
	// inline asm
	prmt.b32 %r9865, %r9954, %r9953, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r9865;
	ld.local.u32 	%r9870, [%rd29+4];
	ld.local.u32 	%r9871, [%rd29];
	// inline asm
	prmt.b32 %r9869, %r9870, %r9871, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r9869;
	ld.local.u32 	%r9874, [%rd29];
	ld.local.u32 	%r9875, [%rd3];
	// inline asm
	prmt.b32 %r9873, %r9874, %r9875, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r9873;
	ld.local.u32 	%r9878, [%rd3];
	ld.local.u32 	%r9879, [%rd28+8];
	// inline asm
	prmt.b32 %r9877, %r9878, %r9879, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r9877;
	ld.local.v2.u32 	{%r9955, %r9956}, [%rd28+4];
	// inline asm
	prmt.b32 %r9881, %r9956, %r9955, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r9881;
	ld.local.u32 	%r9886, [%rd28+4];
	ld.local.u32 	%r9887, [%rd28];
	// inline asm
	prmt.b32 %r9885, %r9886, %r9887, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r9885;
	ld.local.u32 	%r9890, [%rd28];
	ld.local.u32 	%r9891, [%rd2];
	// inline asm
	prmt.b32 %r9889, %r9890, %r9891, %r69;
	// inline asm
	st.local.u32 	[%rd28+8], %r9889;
	ld.local.u32 	%r9894, [%rd2];
	ld.local.u32 	%r9895, [%rd27+8];
	// inline asm
	prmt.b32 %r9893, %r9894, %r9895, %r69;
	// inline asm
	st.local.u32 	[%rd28+4], %r9893;
	ld.local.v2.u32 	{%r9957, %r9958}, [%rd27+4];
	// inline asm
	prmt.b32 %r9897, %r9958, %r9957, %r69;
	// inline asm
	st.local.u32 	[%rd28], %r9897;
	ld.local.u32 	%r9902, [%rd27+4];
	ld.local.u32 	%r9903, [%rd27];
	// inline asm
	prmt.b32 %r9901, %r9902, %r9903, %r69;
	// inline asm
	st.local.u32 	[%rd2], %r9901;
	ld.local.u32 	%r9906, [%rd27];
	ld.local.u32 	%r9907, [%rd1];
	// inline asm
	prmt.b32 %r9905, %r9906, %r9907, %r69;
	// inline asm
	st.local.u32 	[%rd27+8], %r9905;
	ld.local.u32 	%r9910, [%rd1];
	// inline asm
	prmt.b32 %r9909, %r9910, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd27+4], %r9909;
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12446, %r12445;
	bra.uni 	BB3_337;

BB3_366:
	setp.eq.s32	%p215, %r5047, 18;
	@%p215 bra 	BB3_397;
	bra.uni 	BB3_367;

BB3_397:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12463, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7215, %r7216}, [%rd34+4];
	// inline asm
	prmt.b32 %r12464, %r7216, %r7215, %r69;
	// inline asm
	ld.local.u32 	%r7078, [%rd34+4];
	ld.local.u32 	%r7079, [%rd34];
	// inline asm
	prmt.b32 %r12465, %r7078, %r7079, %r69;
	// inline asm
	ld.local.u32 	%r7082, [%rd34];
	ld.local.u32 	%r7083, [%rd8];
	// inline asm
	prmt.b32 %r12458, %r7082, %r7083, %r69;
	// inline asm
	ld.local.u32 	%r7086, [%rd8];
	ld.local.u32 	%r7087, [%rd33+8];
	// inline asm
	prmt.b32 %r12459, %r7086, %r7087, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7217, %r7218}, [%rd33+4];
	// inline asm
	prmt.b32 %r12460, %r7218, %r7217, %r69;
	// inline asm
	ld.local.u32 	%r7094, [%rd33+4];
	ld.local.u32 	%r7095, [%rd33];
	// inline asm
	prmt.b32 %r12461, %r7094, %r7095, %r69;
	// inline asm
	ld.local.u32 	%r7098, [%rd33];
	ld.local.u32 	%r7099, [%rd7];
	// inline asm
	prmt.b32 %r12454, %r7098, %r7099, %r69;
	// inline asm
	ld.local.u32 	%r7102, [%rd7];
	ld.local.u32 	%r7103, [%rd32+8];
	// inline asm
	prmt.b32 %r12455, %r7102, %r7103, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7219, %r7220}, [%rd32+4];
	// inline asm
	prmt.b32 %r12456, %r7220, %r7219, %r69;
	// inline asm
	ld.local.u32 	%r7110, [%rd32+4];
	ld.local.u32 	%r7111, [%rd32];
	// inline asm
	prmt.b32 %r12457, %r7110, %r7111, %r69;
	// inline asm
	ld.local.u32 	%r7114, [%rd32];
	ld.local.u32 	%r7115, [%rd6];
	// inline asm
	prmt.b32 %r12450, %r7114, %r7115, %r69;
	// inline asm
	ld.local.u32 	%r7118, [%rd6];
	ld.local.u32 	%r7119, [%rd31+8];
	// inline asm
	prmt.b32 %r12451, %r7118, %r7119, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7221, %r7222}, [%rd31+4];
	// inline asm
	prmt.b32 %r12452, %r7222, %r7221, %r69;
	// inline asm
	ld.local.u32 	%r7126, [%rd31+4];
	ld.local.u32 	%r7127, [%rd31];
	// inline asm
	prmt.b32 %r12453, %r7126, %r7127, %r69;
	// inline asm
	ld.local.u32 	%r7130, [%rd31];
	ld.local.u32 	%r7131, [%rd5];
	// inline asm
	prmt.b32 %r12446, %r7130, %r7131, %r69;
	// inline asm
	ld.local.u32 	%r7134, [%rd5];
	ld.local.u32 	%r7135, [%rd30+8];
	// inline asm
	prmt.b32 %r12447, %r7134, %r7135, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7223, %r7224}, [%rd30+4];
	// inline asm
	prmt.b32 %r12448, %r7224, %r7223, %r69;
	// inline asm
	ld.local.u32 	%r7142, [%rd30+4];
	ld.local.u32 	%r7143, [%rd30];
	// inline asm
	prmt.b32 %r12449, %r7142, %r7143, %r69;
	// inline asm
	ld.local.u32 	%r7146, [%rd30];
	ld.local.u32 	%r7147, [%rd4];
	// inline asm
	prmt.b32 %r7145, %r7146, %r7147, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r7145;
	ld.local.u32 	%r7150, [%rd4];
	ld.local.u32 	%r7151, [%rd29+8];
	// inline asm
	prmt.b32 %r7149, %r7150, %r7151, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r7149;
	ld.local.v2.u32 	{%r7225, %r7226}, [%rd29+4];
	// inline asm
	prmt.b32 %r7153, %r7226, %r7225, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r7153;
	ld.local.u32 	%r7158, [%rd29+4];
	ld.local.u32 	%r7159, [%rd29];
	// inline asm
	prmt.b32 %r7157, %r7158, %r7159, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r7157;
	ld.local.u32 	%r7162, [%rd29];
	ld.local.u32 	%r7163, [%rd3];
	// inline asm
	prmt.b32 %r7161, %r7162, %r7163, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r7161;
	ld.local.u32 	%r7166, [%rd3];
	ld.local.u32 	%r7167, [%rd28+8];
	// inline asm
	prmt.b32 %r7165, %r7166, %r7167, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r7165;
	ld.local.v2.u32 	{%r7227, %r7228}, [%rd28+4];
	// inline asm
	prmt.b32 %r7169, %r7228, %r7227, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r7169;
	ld.local.u32 	%r7174, [%rd28+4];
	ld.local.u32 	%r7175, [%rd28];
	// inline asm
	prmt.b32 %r7173, %r7174, %r7175, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r7173;
	ld.local.u32 	%r7178, [%rd28];
	ld.local.u32 	%r7179, [%rd2];
	// inline asm
	prmt.b32 %r7177, %r7178, %r7179, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r7177;
	ld.local.u32 	%r7182, [%rd2];
	ld.local.u32 	%r7183, [%rd27+8];
	// inline asm
	prmt.b32 %r7181, %r7182, %r7183, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r7181;
	ld.local.v2.u32 	{%r7229, %r7230}, [%rd27+4];
	// inline asm
	prmt.b32 %r7185, %r7230, %r7229, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r7185;
	ld.local.u32 	%r7190, [%rd27+4];
	ld.local.u32 	%r7191, [%rd27];
	// inline asm
	prmt.b32 %r7189, %r7190, %r7191, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r7189;
	ld.local.u32 	%r7194, [%rd27];
	ld.local.u32 	%r7195, [%rd1];
	// inline asm
	prmt.b32 %r7193, %r7194, %r7195, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r7193;
	ld.local.u32 	%r7198, [%rd1];
	// inline asm
	prmt.b32 %r7197, %r7198, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r7197;
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12462, %r12445;
	bra.uni 	BB3_408;

BB3_350:
	setp.eq.s32	%p227, %r5047, 10;
	@%p227 bra 	BB3_401;
	bra.uni 	BB3_351;

BB3_401:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12455, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8547, %r8548}, [%rd34+4];
	// inline asm
	prmt.b32 %r12456, %r8548, %r8547, %r69;
	// inline asm
	ld.local.u32 	%r8402, [%rd34+4];
	ld.local.u32 	%r8403, [%rd34];
	// inline asm
	prmt.b32 %r12457, %r8402, %r8403, %r69;
	// inline asm
	ld.local.u32 	%r8406, [%rd34];
	ld.local.u32 	%r8407, [%rd8];
	// inline asm
	prmt.b32 %r12450, %r8406, %r8407, %r69;
	// inline asm
	ld.local.u32 	%r8410, [%rd8];
	ld.local.u32 	%r8411, [%rd33+8];
	// inline asm
	prmt.b32 %r12451, %r8410, %r8411, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8549, %r8550}, [%rd33+4];
	// inline asm
	prmt.b32 %r12452, %r8550, %r8549, %r69;
	// inline asm
	ld.local.u32 	%r8418, [%rd33+4];
	ld.local.u32 	%r8419, [%rd33];
	// inline asm
	prmt.b32 %r12453, %r8418, %r8419, %r69;
	// inline asm
	ld.local.u32 	%r8422, [%rd33];
	ld.local.u32 	%r8423, [%rd7];
	// inline asm
	prmt.b32 %r12446, %r8422, %r8423, %r69;
	// inline asm
	ld.local.u32 	%r8426, [%rd7];
	ld.local.u32 	%r8427, [%rd32+8];
	// inline asm
	prmt.b32 %r12447, %r8426, %r8427, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8551, %r8552}, [%rd32+4];
	// inline asm
	prmt.b32 %r12448, %r8552, %r8551, %r69;
	// inline asm
	ld.local.u32 	%r8434, [%rd32+4];
	ld.local.u32 	%r8435, [%rd32];
	// inline asm
	prmt.b32 %r12449, %r8434, %r8435, %r69;
	// inline asm
	ld.local.u32 	%r8438, [%rd32];
	ld.local.u32 	%r8439, [%rd6];
	// inline asm
	prmt.b32 %r8437, %r8438, %r8439, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r8437;
	ld.local.u32 	%r8442, [%rd6];
	ld.local.u32 	%r8443, [%rd31+8];
	// inline asm
	prmt.b32 %r8441, %r8442, %r8443, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r8441;
	ld.local.v2.u32 	{%r8553, %r8554}, [%rd31+4];
	// inline asm
	prmt.b32 %r8445, %r8554, %r8553, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r8445;
	ld.local.u32 	%r8450, [%rd31+4];
	ld.local.u32 	%r8451, [%rd31];
	// inline asm
	prmt.b32 %r8449, %r8450, %r8451, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r8449;
	ld.local.u32 	%r8454, [%rd31];
	ld.local.u32 	%r8455, [%rd5];
	// inline asm
	prmt.b32 %r8453, %r8454, %r8455, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r8453;
	ld.local.u32 	%r8458, [%rd5];
	ld.local.u32 	%r8459, [%rd30+8];
	// inline asm
	prmt.b32 %r8457, %r8458, %r8459, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r8457;
	ld.local.v2.u32 	{%r8555, %r8556}, [%rd30+4];
	// inline asm
	prmt.b32 %r8461, %r8556, %r8555, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r8461;
	ld.local.u32 	%r8466, [%rd30+4];
	ld.local.u32 	%r8467, [%rd30];
	// inline asm
	prmt.b32 %r8465, %r8466, %r8467, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r8465;
	ld.local.u32 	%r8470, [%rd30];
	ld.local.u32 	%r8471, [%rd4];
	// inline asm
	prmt.b32 %r8469, %r8470, %r8471, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r8469;
	ld.local.u32 	%r8474, [%rd4];
	ld.local.u32 	%r8475, [%rd29+8];
	// inline asm
	prmt.b32 %r8473, %r8474, %r8475, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r8473;
	ld.local.v2.u32 	{%r8557, %r8558}, [%rd29+4];
	// inline asm
	prmt.b32 %r8477, %r8558, %r8557, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r8477;
	ld.local.u32 	%r8482, [%rd29+4];
	ld.local.u32 	%r8483, [%rd29];
	// inline asm
	prmt.b32 %r8481, %r8482, %r8483, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r8481;
	ld.local.u32 	%r8486, [%rd29];
	ld.local.u32 	%r8487, [%rd3];
	// inline asm
	prmt.b32 %r8485, %r8486, %r8487, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r8485;
	ld.local.u32 	%r8490, [%rd3];
	ld.local.u32 	%r8491, [%rd28+8];
	// inline asm
	prmt.b32 %r8489, %r8490, %r8491, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r8489;
	ld.local.v2.u32 	{%r8559, %r8560}, [%rd28+4];
	// inline asm
	prmt.b32 %r8493, %r8560, %r8559, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r8493;
	ld.local.u32 	%r8498, [%rd28+4];
	ld.local.u32 	%r8499, [%rd28];
	// inline asm
	prmt.b32 %r8497, %r8498, %r8499, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r8497;
	ld.local.u32 	%r8502, [%rd28];
	ld.local.u32 	%r8503, [%rd2];
	// inline asm
	prmt.b32 %r8501, %r8502, %r8503, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r8501;
	ld.local.u32 	%r8506, [%rd2];
	ld.local.u32 	%r8507, [%rd27+8];
	// inline asm
	prmt.b32 %r8505, %r8506, %r8507, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r8505;
	ld.local.v2.u32 	{%r8561, %r8562}, [%rd27+4];
	// inline asm
	prmt.b32 %r8509, %r8562, %r8561, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r8509;
	ld.local.u32 	%r8514, [%rd27+4];
	ld.local.u32 	%r8515, [%rd27];
	// inline asm
	prmt.b32 %r8513, %r8514, %r8515, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r8513;
	ld.local.u32 	%r8518, [%rd27];
	ld.local.u32 	%r8519, [%rd1];
	// inline asm
	prmt.b32 %r8517, %r8518, %r8519, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r8517;
	ld.local.u32 	%r8522, [%rd1];
	// inline asm
	prmt.b32 %r8521, %r8522, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r8521;
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12454, %r12445;
	bra.uni 	BB3_406;

BB3_381:
	setp.eq.s32	%p204, %r5047, 26;
	@%p204 bra 	BB3_393;
	bra.uni 	BB3_382;

BB3_393:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12471, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5947, %r5948}, [%rd34+4];
	// inline asm
	prmt.b32 %r12472, %r5948, %r5947, %r69;
	// inline asm
	ld.local.u32 	%r5818, [%rd34+4];
	ld.local.u32 	%r5819, [%rd34];
	// inline asm
	prmt.b32 %r12473, %r5818, %r5819, %r69;
	// inline asm
	ld.local.u32 	%r5822, [%rd34];
	ld.local.u32 	%r5823, [%rd8];
	// inline asm
	prmt.b32 %r12466, %r5822, %r5823, %r69;
	// inline asm
	ld.local.u32 	%r5826, [%rd8];
	ld.local.u32 	%r5827, [%rd33+8];
	// inline asm
	prmt.b32 %r12467, %r5826, %r5827, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5949, %r5950}, [%rd33+4];
	// inline asm
	prmt.b32 %r12468, %r5950, %r5949, %r69;
	// inline asm
	ld.local.u32 	%r5834, [%rd33+4];
	ld.local.u32 	%r5835, [%rd33];
	// inline asm
	prmt.b32 %r12469, %r5834, %r5835, %r69;
	// inline asm
	ld.local.u32 	%r5838, [%rd33];
	ld.local.u32 	%r5839, [%rd7];
	// inline asm
	prmt.b32 %r12462, %r5838, %r5839, %r69;
	// inline asm
	ld.local.u32 	%r5842, [%rd7];
	ld.local.u32 	%r5843, [%rd32+8];
	// inline asm
	prmt.b32 %r12463, %r5842, %r5843, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5951, %r5952}, [%rd32+4];
	// inline asm
	prmt.b32 %r12464, %r5952, %r5951, %r69;
	// inline asm
	ld.local.u32 	%r5850, [%rd32+4];
	ld.local.u32 	%r5851, [%rd32];
	// inline asm
	prmt.b32 %r12465, %r5850, %r5851, %r69;
	// inline asm
	ld.local.u32 	%r5854, [%rd32];
	ld.local.u32 	%r5855, [%rd6];
	// inline asm
	prmt.b32 %r12458, %r5854, %r5855, %r69;
	// inline asm
	ld.local.u32 	%r5858, [%rd6];
	ld.local.u32 	%r5859, [%rd31+8];
	// inline asm
	prmt.b32 %r12459, %r5858, %r5859, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5953, %r5954}, [%rd31+4];
	// inline asm
	prmt.b32 %r12460, %r5954, %r5953, %r69;
	// inline asm
	ld.local.u32 	%r5866, [%rd31+4];
	ld.local.u32 	%r5867, [%rd31];
	// inline asm
	prmt.b32 %r12461, %r5866, %r5867, %r69;
	// inline asm
	ld.local.u32 	%r5870, [%rd31];
	ld.local.u32 	%r5871, [%rd5];
	// inline asm
	prmt.b32 %r12454, %r5870, %r5871, %r69;
	// inline asm
	ld.local.u32 	%r5874, [%rd5];
	ld.local.u32 	%r5875, [%rd30+8];
	// inline asm
	prmt.b32 %r12455, %r5874, %r5875, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5955, %r5956}, [%rd30+4];
	// inline asm
	prmt.b32 %r12456, %r5956, %r5955, %r69;
	// inline asm
	ld.local.u32 	%r5882, [%rd30+4];
	ld.local.u32 	%r5883, [%rd30];
	// inline asm
	prmt.b32 %r12457, %r5882, %r5883, %r69;
	// inline asm
	ld.local.u32 	%r5886, [%rd30];
	ld.local.u32 	%r5887, [%rd4];
	// inline asm
	prmt.b32 %r12450, %r5886, %r5887, %r69;
	// inline asm
	ld.local.u32 	%r5890, [%rd4];
	ld.local.u32 	%r5891, [%rd29+8];
	// inline asm
	prmt.b32 %r12451, %r5890, %r5891, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5957, %r5958}, [%rd29+4];
	// inline asm
	prmt.b32 %r12452, %r5958, %r5957, %r69;
	// inline asm
	ld.local.u32 	%r5898, [%rd29+4];
	ld.local.u32 	%r5899, [%rd29];
	// inline asm
	prmt.b32 %r12453, %r5898, %r5899, %r69;
	// inline asm
	ld.local.u32 	%r5902, [%rd29];
	ld.local.u32 	%r5903, [%rd3];
	// inline asm
	prmt.b32 %r12446, %r5902, %r5903, %r69;
	// inline asm
	ld.local.u32 	%r5906, [%rd3];
	ld.local.u32 	%r5907, [%rd28+8];
	// inline asm
	prmt.b32 %r12447, %r5906, %r5907, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5959, %r5960}, [%rd28+4];
	// inline asm
	prmt.b32 %r12448, %r5960, %r5959, %r69;
	// inline asm
	ld.local.u32 	%r5914, [%rd28+4];
	ld.local.u32 	%r5915, [%rd28];
	// inline asm
	prmt.b32 %r12449, %r5914, %r5915, %r69;
	// inline asm
	ld.local.u32 	%r5918, [%rd28];
	ld.local.u32 	%r5919, [%rd2];
	// inline asm
	prmt.b32 %r5917, %r5918, %r5919, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r5917;
	ld.local.u32 	%r5922, [%rd2];
	ld.local.u32 	%r5923, [%rd27+8];
	// inline asm
	prmt.b32 %r5921, %r5922, %r5923, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r5921;
	ld.local.v2.u32 	{%r5961, %r5962}, [%rd27+4];
	// inline asm
	prmt.b32 %r5925, %r5962, %r5961, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r5925;
	ld.local.u32 	%r5930, [%rd27+4];
	ld.local.u32 	%r5931, [%rd27];
	// inline asm
	prmt.b32 %r5929, %r5930, %r5931, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r5929;
	ld.local.u32 	%r5934, [%rd27];
	ld.local.u32 	%r5935, [%rd1];
	// inline asm
	prmt.b32 %r5933, %r5934, %r5935, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r5933;
	ld.local.u32 	%r5938, [%rd1];
	// inline asm
	prmt.b32 %r5937, %r5938, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r5937;
	st.local.u32 	[%rd33], %r12445;
	st.local.u32 	[%rd7], %r12445;
	st.local.v2.u32 	[%rd32+4], {%r12445, %r12445};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12470, %r12445;
	bra.uni 	BB3_410;

BB3_342:
	setp.eq.s32	%p233, %r5047, 6;
	@%p233 bra 	BB3_403;
	bra.uni 	BB3_343;

BB3_403:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12451, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9237, %r9238}, [%rd34+4];
	// inline asm
	prmt.b32 %r12452, %r9238, %r9237, %r69;
	// inline asm
	ld.local.u32 	%r9088, [%rd34+4];
	ld.local.u32 	%r9089, [%rd34];
	// inline asm
	prmt.b32 %r12453, %r9088, %r9089, %r69;
	// inline asm
	ld.local.u32 	%r9092, [%rd34];
	ld.local.u32 	%r9093, [%rd8];
	// inline asm
	prmt.b32 %r12446, %r9092, %r9093, %r69;
	// inline asm
	ld.local.u32 	%r9096, [%rd8];
	ld.local.u32 	%r9097, [%rd33+8];
	// inline asm
	prmt.b32 %r12447, %r9096, %r9097, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9239, %r9240}, [%rd33+4];
	// inline asm
	prmt.b32 %r12448, %r9240, %r9239, %r69;
	// inline asm
	ld.local.u32 	%r9104, [%rd33+4];
	ld.local.u32 	%r9105, [%rd33];
	// inline asm
	prmt.b32 %r12449, %r9104, %r9105, %r69;
	// inline asm
	ld.local.u32 	%r9108, [%rd33];
	ld.local.u32 	%r9109, [%rd7];
	// inline asm
	prmt.b32 %r9107, %r9108, %r9109, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r9107;
	ld.local.u32 	%r9112, [%rd7];
	ld.local.u32 	%r9113, [%rd32+8];
	// inline asm
	prmt.b32 %r9111, %r9112, %r9113, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r9111;
	ld.local.v2.u32 	{%r9241, %r9242}, [%rd32+4];
	// inline asm
	prmt.b32 %r9115, %r9242, %r9241, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r9115;
	ld.local.u32 	%r9120, [%rd32+4];
	ld.local.u32 	%r9121, [%rd32];
	// inline asm
	prmt.b32 %r9119, %r9120, %r9121, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r9119;
	ld.local.u32 	%r9124, [%rd32];
	ld.local.u32 	%r9125, [%rd6];
	// inline asm
	prmt.b32 %r9123, %r9124, %r9125, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r9123;
	ld.local.u32 	%r9128, [%rd6];
	ld.local.u32 	%r9129, [%rd31+8];
	// inline asm
	prmt.b32 %r9127, %r9128, %r9129, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r9127;
	ld.local.v2.u32 	{%r9243, %r9244}, [%rd31+4];
	// inline asm
	prmt.b32 %r9131, %r9244, %r9243, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r9131;
	ld.local.u32 	%r9136, [%rd31+4];
	ld.local.u32 	%r9137, [%rd31];
	// inline asm
	prmt.b32 %r9135, %r9136, %r9137, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r9135;
	ld.local.u32 	%r9140, [%rd31];
	ld.local.u32 	%r9141, [%rd5];
	// inline asm
	prmt.b32 %r9139, %r9140, %r9141, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r9139;
	ld.local.u32 	%r9144, [%rd5];
	ld.local.u32 	%r9145, [%rd30+8];
	// inline asm
	prmt.b32 %r9143, %r9144, %r9145, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r9143;
	ld.local.v2.u32 	{%r9245, %r9246}, [%rd30+4];
	// inline asm
	prmt.b32 %r9147, %r9246, %r9245, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r9147;
	ld.local.u32 	%r9152, [%rd30+4];
	ld.local.u32 	%r9153, [%rd30];
	// inline asm
	prmt.b32 %r9151, %r9152, %r9153, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r9151;
	ld.local.u32 	%r9156, [%rd30];
	ld.local.u32 	%r9157, [%rd4];
	// inline asm
	prmt.b32 %r9155, %r9156, %r9157, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r9155;
	ld.local.u32 	%r9160, [%rd4];
	ld.local.u32 	%r9161, [%rd29+8];
	// inline asm
	prmt.b32 %r9159, %r9160, %r9161, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r9159;
	ld.local.v2.u32 	{%r9247, %r9248}, [%rd29+4];
	// inline asm
	prmt.b32 %r9163, %r9248, %r9247, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r9163;
	ld.local.u32 	%r9168, [%rd29+4];
	ld.local.u32 	%r9169, [%rd29];
	// inline asm
	prmt.b32 %r9167, %r9168, %r9169, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r9167;
	ld.local.u32 	%r9172, [%rd29];
	ld.local.u32 	%r9173, [%rd3];
	// inline asm
	prmt.b32 %r9171, %r9172, %r9173, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r9171;
	ld.local.u32 	%r9176, [%rd3];
	ld.local.u32 	%r9177, [%rd28+8];
	// inline asm
	prmt.b32 %r9175, %r9176, %r9177, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r9175;
	ld.local.v2.u32 	{%r9249, %r9250}, [%rd28+4];
	// inline asm
	prmt.b32 %r9179, %r9250, %r9249, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r9179;
	ld.local.u32 	%r9184, [%rd28+4];
	ld.local.u32 	%r9185, [%rd28];
	// inline asm
	prmt.b32 %r9183, %r9184, %r9185, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r9183;
	ld.local.u32 	%r9188, [%rd28];
	ld.local.u32 	%r9189, [%rd2];
	// inline asm
	prmt.b32 %r9187, %r9188, %r9189, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r9187;
	ld.local.u32 	%r9192, [%rd2];
	ld.local.u32 	%r9193, [%rd27+8];
	// inline asm
	prmt.b32 %r9191, %r9192, %r9193, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r9191;
	ld.local.v2.u32 	{%r9251, %r9252}, [%rd27+4];
	// inline asm
	prmt.b32 %r9195, %r9252, %r9251, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r9195;
	ld.local.u32 	%r9200, [%rd27+4];
	ld.local.u32 	%r9201, [%rd27];
	// inline asm
	prmt.b32 %r9199, %r9200, %r9201, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r9199;
	ld.local.u32 	%r9204, [%rd27];
	ld.local.u32 	%r9205, [%rd1];
	// inline asm
	prmt.b32 %r9203, %r9204, %r9205, %r69;
	// inline asm
	st.local.u32 	[%rd28+8], %r9203;
	ld.local.u32 	%r9208, [%rd1];
	// inline asm
	prmt.b32 %r9207, %r9208, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd28+4], %r9207;
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12450, %r12445;
	bra.uni 	BB3_405;

BB3_373:
	setp.eq.s32	%p210, %r5047, 22;
	@%p210 bra 	BB3_395;
	bra.uni 	BB3_374;

BB3_395:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12467, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6573, %r6574}, [%rd34+4];
	// inline asm
	prmt.b32 %r12468, %r6574, %r6573, %r69;
	// inline asm
	ld.local.u32 	%r6440, [%rd34+4];
	ld.local.u32 	%r6441, [%rd34];
	// inline asm
	prmt.b32 %r12469, %r6440, %r6441, %r69;
	// inline asm
	ld.local.u32 	%r6444, [%rd34];
	ld.local.u32 	%r6445, [%rd8];
	// inline asm
	prmt.b32 %r12462, %r6444, %r6445, %r69;
	// inline asm
	ld.local.u32 	%r6448, [%rd8];
	ld.local.u32 	%r6449, [%rd33+8];
	// inline asm
	prmt.b32 %r12463, %r6448, %r6449, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6575, %r6576}, [%rd33+4];
	// inline asm
	prmt.b32 %r12464, %r6576, %r6575, %r69;
	// inline asm
	ld.local.u32 	%r6456, [%rd33+4];
	ld.local.u32 	%r6457, [%rd33];
	// inline asm
	prmt.b32 %r12465, %r6456, %r6457, %r69;
	// inline asm
	ld.local.u32 	%r6460, [%rd33];
	ld.local.u32 	%r6461, [%rd7];
	// inline asm
	prmt.b32 %r12458, %r6460, %r6461, %r69;
	// inline asm
	ld.local.u32 	%r6464, [%rd7];
	ld.local.u32 	%r6465, [%rd32+8];
	// inline asm
	prmt.b32 %r12459, %r6464, %r6465, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6577, %r6578}, [%rd32+4];
	// inline asm
	prmt.b32 %r12460, %r6578, %r6577, %r69;
	// inline asm
	ld.local.u32 	%r6472, [%rd32+4];
	ld.local.u32 	%r6473, [%rd32];
	// inline asm
	prmt.b32 %r12461, %r6472, %r6473, %r69;
	// inline asm
	ld.local.u32 	%r6476, [%rd32];
	ld.local.u32 	%r6477, [%rd6];
	// inline asm
	prmt.b32 %r12454, %r6476, %r6477, %r69;
	// inline asm
	ld.local.u32 	%r6480, [%rd6];
	ld.local.u32 	%r6481, [%rd31+8];
	// inline asm
	prmt.b32 %r12455, %r6480, %r6481, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6579, %r6580}, [%rd31+4];
	// inline asm
	prmt.b32 %r12456, %r6580, %r6579, %r69;
	// inline asm
	ld.local.u32 	%r6488, [%rd31+4];
	ld.local.u32 	%r6489, [%rd31];
	// inline asm
	prmt.b32 %r12457, %r6488, %r6489, %r69;
	// inline asm
	ld.local.u32 	%r6492, [%rd31];
	ld.local.u32 	%r6493, [%rd5];
	// inline asm
	prmt.b32 %r12450, %r6492, %r6493, %r69;
	// inline asm
	ld.local.u32 	%r6496, [%rd5];
	ld.local.u32 	%r6497, [%rd30+8];
	// inline asm
	prmt.b32 %r12451, %r6496, %r6497, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6581, %r6582}, [%rd30+4];
	// inline asm
	prmt.b32 %r12452, %r6582, %r6581, %r69;
	// inline asm
	ld.local.u32 	%r6504, [%rd30+4];
	ld.local.u32 	%r6505, [%rd30];
	// inline asm
	prmt.b32 %r12453, %r6504, %r6505, %r69;
	// inline asm
	ld.local.u32 	%r6508, [%rd30];
	ld.local.u32 	%r6509, [%rd4];
	// inline asm
	prmt.b32 %r12446, %r6508, %r6509, %r69;
	// inline asm
	ld.local.u32 	%r6512, [%rd4];
	ld.local.u32 	%r6513, [%rd29+8];
	// inline asm
	prmt.b32 %r12447, %r6512, %r6513, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6583, %r6584}, [%rd29+4];
	// inline asm
	prmt.b32 %r12448, %r6584, %r6583, %r69;
	// inline asm
	ld.local.u32 	%r6520, [%rd29+4];
	ld.local.u32 	%r6521, [%rd29];
	// inline asm
	prmt.b32 %r12449, %r6520, %r6521, %r69;
	// inline asm
	ld.local.u32 	%r6524, [%rd29];
	ld.local.u32 	%r6525, [%rd3];
	// inline asm
	prmt.b32 %r6523, %r6524, %r6525, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r6523;
	ld.local.u32 	%r6528, [%rd3];
	ld.local.u32 	%r6529, [%rd28+8];
	// inline asm
	prmt.b32 %r6527, %r6528, %r6529, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r6527;
	ld.local.v2.u32 	{%r6585, %r6586}, [%rd28+4];
	// inline asm
	prmt.b32 %r6531, %r6586, %r6585, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r6531;
	ld.local.u32 	%r6536, [%rd28+4];
	ld.local.u32 	%r6537, [%rd28];
	// inline asm
	prmt.b32 %r6535, %r6536, %r6537, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r6535;
	ld.local.u32 	%r6540, [%rd28];
	ld.local.u32 	%r6541, [%rd2];
	// inline asm
	prmt.b32 %r6539, %r6540, %r6541, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r6539;
	ld.local.u32 	%r6544, [%rd2];
	ld.local.u32 	%r6545, [%rd27+8];
	// inline asm
	prmt.b32 %r6543, %r6544, %r6545, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r6543;
	ld.local.v2.u32 	{%r6587, %r6588}, [%rd27+4];
	// inline asm
	prmt.b32 %r6547, %r6588, %r6587, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r6547;
	ld.local.u32 	%r6552, [%rd27+4];
	ld.local.u32 	%r6553, [%rd27];
	// inline asm
	prmt.b32 %r6551, %r6552, %r6553, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r6551;
	ld.local.u32 	%r6556, [%rd27];
	ld.local.u32 	%r6557, [%rd1];
	// inline asm
	prmt.b32 %r6555, %r6556, %r6557, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r6555;
	ld.local.u32 	%r6560, [%rd1];
	// inline asm
	prmt.b32 %r6559, %r6560, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r6559;
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12466, %r12445;
	bra.uni 	BB3_409;

BB3_357:
	setp.eq.s32	%p222, %r5047, 14;
	@%p222 bra 	BB3_399;
	bra.uni 	BB3_358;

BB3_399:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12459, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7873, %r7874}, [%rd34+4];
	// inline asm
	prmt.b32 %r12460, %r7874, %r7873, %r69;
	// inline asm
	ld.local.u32 	%r7732, [%rd34+4];
	ld.local.u32 	%r7733, [%rd34];
	// inline asm
	prmt.b32 %r12461, %r7732, %r7733, %r69;
	// inline asm
	ld.local.u32 	%r7736, [%rd34];
	ld.local.u32 	%r7737, [%rd8];
	// inline asm
	prmt.b32 %r12454, %r7736, %r7737, %r69;
	// inline asm
	ld.local.u32 	%r7740, [%rd8];
	ld.local.u32 	%r7741, [%rd33+8];
	// inline asm
	prmt.b32 %r12455, %r7740, %r7741, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7875, %r7876}, [%rd33+4];
	// inline asm
	prmt.b32 %r12456, %r7876, %r7875, %r69;
	// inline asm
	ld.local.u32 	%r7748, [%rd33+4];
	ld.local.u32 	%r7749, [%rd33];
	// inline asm
	prmt.b32 %r12457, %r7748, %r7749, %r69;
	// inline asm
	ld.local.u32 	%r7752, [%rd33];
	ld.local.u32 	%r7753, [%rd7];
	// inline asm
	prmt.b32 %r12450, %r7752, %r7753, %r69;
	// inline asm
	ld.local.u32 	%r7756, [%rd7];
	ld.local.u32 	%r7757, [%rd32+8];
	// inline asm
	prmt.b32 %r12451, %r7756, %r7757, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7877, %r7878}, [%rd32+4];
	// inline asm
	prmt.b32 %r12452, %r7878, %r7877, %r69;
	// inline asm
	ld.local.u32 	%r7764, [%rd32+4];
	ld.local.u32 	%r7765, [%rd32];
	// inline asm
	prmt.b32 %r12453, %r7764, %r7765, %r69;
	// inline asm
	ld.local.u32 	%r7768, [%rd32];
	ld.local.u32 	%r7769, [%rd6];
	// inline asm
	prmt.b32 %r12446, %r7768, %r7769, %r69;
	// inline asm
	ld.local.u32 	%r7772, [%rd6];
	ld.local.u32 	%r7773, [%rd31+8];
	// inline asm
	prmt.b32 %r12447, %r7772, %r7773, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7879, %r7880}, [%rd31+4];
	// inline asm
	prmt.b32 %r12448, %r7880, %r7879, %r69;
	// inline asm
	ld.local.u32 	%r7780, [%rd31+4];
	ld.local.u32 	%r7781, [%rd31];
	// inline asm
	prmt.b32 %r12449, %r7780, %r7781, %r69;
	// inline asm
	ld.local.u32 	%r7784, [%rd31];
	ld.local.u32 	%r7785, [%rd5];
	// inline asm
	prmt.b32 %r7783, %r7784, %r7785, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r7783;
	ld.local.u32 	%r7788, [%rd5];
	ld.local.u32 	%r7789, [%rd30+8];
	// inline asm
	prmt.b32 %r7787, %r7788, %r7789, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r7787;
	ld.local.v2.u32 	{%r7881, %r7882}, [%rd30+4];
	// inline asm
	prmt.b32 %r7791, %r7882, %r7881, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r7791;
	ld.local.u32 	%r7796, [%rd30+4];
	ld.local.u32 	%r7797, [%rd30];
	// inline asm
	prmt.b32 %r7795, %r7796, %r7797, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r7795;
	ld.local.u32 	%r7800, [%rd30];
	ld.local.u32 	%r7801, [%rd4];
	// inline asm
	prmt.b32 %r7799, %r7800, %r7801, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r7799;
	ld.local.u32 	%r7804, [%rd4];
	ld.local.u32 	%r7805, [%rd29+8];
	// inline asm
	prmt.b32 %r7803, %r7804, %r7805, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r7803;
	ld.local.v2.u32 	{%r7883, %r7884}, [%rd29+4];
	// inline asm
	prmt.b32 %r7807, %r7884, %r7883, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r7807;
	ld.local.u32 	%r7812, [%rd29+4];
	ld.local.u32 	%r7813, [%rd29];
	// inline asm
	prmt.b32 %r7811, %r7812, %r7813, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r7811;
	ld.local.u32 	%r7816, [%rd29];
	ld.local.u32 	%r7817, [%rd3];
	// inline asm
	prmt.b32 %r7815, %r7816, %r7817, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r7815;
	ld.local.u32 	%r7820, [%rd3];
	ld.local.u32 	%r7821, [%rd28+8];
	// inline asm
	prmt.b32 %r7819, %r7820, %r7821, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r7819;
	ld.local.v2.u32 	{%r7885, %r7886}, [%rd28+4];
	// inline asm
	prmt.b32 %r7823, %r7886, %r7885, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r7823;
	ld.local.u32 	%r7828, [%rd28+4];
	ld.local.u32 	%r7829, [%rd28];
	// inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r7827;
	ld.local.u32 	%r7832, [%rd28];
	ld.local.u32 	%r7833, [%rd2];
	// inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r7831;
	ld.local.u32 	%r7836, [%rd2];
	ld.local.u32 	%r7837, [%rd27+8];
	// inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r7835;
	ld.local.v2.u32 	{%r7887, %r7888}, [%rd27+4];
	// inline asm
	prmt.b32 %r7839, %r7888, %r7887, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r7839;
	ld.local.u32 	%r7844, [%rd27+4];
	ld.local.u32 	%r7845, [%rd27];
	// inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r7843;
	ld.local.u32 	%r7848, [%rd27];
	ld.local.u32 	%r7849, [%rd1];
	// inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r7847;
	ld.local.u32 	%r7852, [%rd1];
	// inline asm
	prmt.b32 %r7851, %r7852, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r7851;
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12458, %r12445;
	bra.uni 	BB3_407;

BB3_388:
	setp.eq.s32	%p199, %r5047, 30;
	@%p199 bra 	BB3_391;
	bra.uni 	BB3_389;

BB3_391:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12475, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5337, %r5338}, [%rd34+4];
	// inline asm
	prmt.b32 %r12476, %r5338, %r5337, %r69;
	// inline asm
	ld.local.u32 	%r5212, [%rd34+4];
	ld.local.u32 	%r5213, [%rd34];
	// inline asm
	prmt.b32 %r12477, %r5212, %r5213, %r69;
	// inline asm
	ld.local.u32 	%r5216, [%rd34];
	ld.local.u32 	%r5217, [%rd8];
	// inline asm
	prmt.b32 %r12470, %r5216, %r5217, %r69;
	// inline asm
	ld.local.u32 	%r5220, [%rd8];
	ld.local.u32 	%r5221, [%rd33+8];
	// inline asm
	prmt.b32 %r12471, %r5220, %r5221, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5339, %r5340}, [%rd33+4];
	// inline asm
	prmt.b32 %r12472, %r5340, %r5339, %r69;
	// inline asm
	ld.local.u32 	%r5228, [%rd33+4];
	ld.local.u32 	%r5229, [%rd33];
	// inline asm
	prmt.b32 %r12473, %r5228, %r5229, %r69;
	// inline asm
	ld.local.u32 	%r5232, [%rd33];
	ld.local.u32 	%r5233, [%rd7];
	// inline asm
	prmt.b32 %r12466, %r5232, %r5233, %r69;
	// inline asm
	ld.local.u32 	%r5236, [%rd7];
	ld.local.u32 	%r5237, [%rd32+8];
	// inline asm
	prmt.b32 %r12467, %r5236, %r5237, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5341, %r5342}, [%rd32+4];
	// inline asm
	prmt.b32 %r12468, %r5342, %r5341, %r69;
	// inline asm
	ld.local.u32 	%r5244, [%rd32+4];
	ld.local.u32 	%r5245, [%rd32];
	// inline asm
	prmt.b32 %r12469, %r5244, %r5245, %r69;
	// inline asm
	ld.local.u32 	%r5248, [%rd32];
	ld.local.u32 	%r5249, [%rd6];
	// inline asm
	prmt.b32 %r12462, %r5248, %r5249, %r69;
	// inline asm
	ld.local.u32 	%r5252, [%rd6];
	ld.local.u32 	%r5253, [%rd31+8];
	// inline asm
	prmt.b32 %r12463, %r5252, %r5253, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5343, %r5344}, [%rd31+4];
	// inline asm
	prmt.b32 %r12464, %r5344, %r5343, %r69;
	// inline asm
	ld.local.u32 	%r5260, [%rd31+4];
	ld.local.u32 	%r5261, [%rd31];
	// inline asm
	prmt.b32 %r12465, %r5260, %r5261, %r69;
	// inline asm
	ld.local.u32 	%r5264, [%rd31];
	ld.local.u32 	%r5265, [%rd5];
	// inline asm
	prmt.b32 %r12458, %r5264, %r5265, %r69;
	// inline asm
	ld.local.u32 	%r5268, [%rd5];
	ld.local.u32 	%r5269, [%rd30+8];
	// inline asm
	prmt.b32 %r12459, %r5268, %r5269, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5345, %r5346}, [%rd30+4];
	// inline asm
	prmt.b32 %r12460, %r5346, %r5345, %r69;
	// inline asm
	ld.local.u32 	%r5276, [%rd30+4];
	ld.local.u32 	%r5277, [%rd30];
	// inline asm
	prmt.b32 %r12461, %r5276, %r5277, %r69;
	// inline asm
	ld.local.u32 	%r5280, [%rd30];
	ld.local.u32 	%r5281, [%rd4];
	// inline asm
	prmt.b32 %r12454, %r5280, %r5281, %r69;
	// inline asm
	ld.local.u32 	%r5284, [%rd4];
	ld.local.u32 	%r5285, [%rd29+8];
	// inline asm
	prmt.b32 %r12455, %r5284, %r5285, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5347, %r5348}, [%rd29+4];
	// inline asm
	prmt.b32 %r12456, %r5348, %r5347, %r69;
	// inline asm
	ld.local.u32 	%r5292, [%rd29+4];
	ld.local.u32 	%r5293, [%rd29];
	// inline asm
	prmt.b32 %r12457, %r5292, %r5293, %r69;
	// inline asm
	ld.local.u32 	%r5296, [%rd29];
	ld.local.u32 	%r5297, [%rd3];
	// inline asm
	prmt.b32 %r12450, %r5296, %r5297, %r69;
	// inline asm
	ld.local.u32 	%r5300, [%rd3];
	ld.local.u32 	%r5301, [%rd28+8];
	// inline asm
	prmt.b32 %r12451, %r5300, %r5301, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5349, %r5350}, [%rd28+4];
	// inline asm
	prmt.b32 %r12452, %r5350, %r5349, %r69;
	// inline asm
	ld.local.u32 	%r5308, [%rd28+4];
	ld.local.u32 	%r5309, [%rd28];
	// inline asm
	prmt.b32 %r12453, %r5308, %r5309, %r69;
	// inline asm
	ld.local.u32 	%r5312, [%rd28];
	ld.local.u32 	%r5313, [%rd2];
	// inline asm
	prmt.b32 %r12446, %r5312, %r5313, %r69;
	// inline asm
	ld.local.u32 	%r5316, [%rd2];
	ld.local.u32 	%r5317, [%rd27+8];
	// inline asm
	prmt.b32 %r12447, %r5316, %r5317, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5351, %r5352}, [%rd27+4];
	// inline asm
	prmt.b32 %r12448, %r5352, %r5351, %r69;
	// inline asm
	ld.local.u32 	%r5324, [%rd27+4];
	ld.local.u32 	%r5325, [%rd27];
	// inline asm
	prmt.b32 %r12449, %r5324, %r5325, %r69;
	// inline asm
	ld.local.u32 	%r5328, [%rd27];
	ld.local.u32 	%r5329, [%rd1];
	// inline asm
	prmt.b32 %r5327, %r5328, %r5329, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r5327;
	ld.local.u32 	%r5332, [%rd1];
	// inline asm
	prmt.b32 %r5331, %r5332, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r5331;
	st.local.u32 	[%rd34], %r12445;
	st.local.u32 	[%rd8], %r12445;
	st.local.v2.u32 	[%rd33+4], {%r12445, %r12445};
	st.local.u32 	[%rd33], %r12445;
	st.local.u32 	[%rd7], %r12445;
	st.local.v2.u32 	[%rd32+4], {%r12445, %r12445};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12474, %r12445;
	bra.uni 	BB3_415;

BB3_332:
	setp.eq.s32	%p241, %r5047, 1;
	@%p241 bra 	BB3_333;
	bra.uni 	BB3_413;

BB3_333:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12448, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r10122, %r10123}, [%rd34+4];
	// inline asm
	prmt.b32 %r12449, %r10123, %r10122, %r69;
	// inline asm
	ld.local.u32 	%r9968, [%rd34+4];
	ld.local.u32 	%r9969, [%rd34];
	// inline asm
	prmt.b32 %r9967, %r9968, %r9969, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r9967;
	ld.local.u32 	%r9972, [%rd34];
	ld.local.u32 	%r9973, [%rd8];
	// inline asm
	prmt.b32 %r9971, %r9972, %r9973, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r9971;
	ld.local.u32 	%r9976, [%rd8];
	ld.local.u32 	%r9977, [%rd33+8];
	// inline asm
	prmt.b32 %r9975, %r9976, %r9977, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r9975;
	ld.local.v2.u32 	{%r10124, %r10125}, [%rd33+4];
	// inline asm
	prmt.b32 %r9979, %r10125, %r10124, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r9979;
	ld.local.u32 	%r9984, [%rd33+4];
	ld.local.u32 	%r9985, [%rd33];
	// inline asm
	prmt.b32 %r9983, %r9984, %r9985, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r9983;
	ld.local.u32 	%r9988, [%rd33];
	ld.local.u32 	%r9989, [%rd7];
	// inline asm
	prmt.b32 %r9987, %r9988, %r9989, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r9987;
	ld.local.u32 	%r9992, [%rd7];
	ld.local.u32 	%r9993, [%rd32+8];
	// inline asm
	prmt.b32 %r9991, %r9992, %r9993, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r9991;
	ld.local.v2.u32 	{%r10126, %r10127}, [%rd32+4];
	// inline asm
	prmt.b32 %r9995, %r10127, %r10126, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r9995;
	ld.local.u32 	%r10000, [%rd32+4];
	ld.local.u32 	%r10001, [%rd32];
	// inline asm
	prmt.b32 %r9999, %r10000, %r10001, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r9999;
	ld.local.u32 	%r10004, [%rd32];
	ld.local.u32 	%r10005, [%rd6];
	// inline asm
	prmt.b32 %r10003, %r10004, %r10005, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r10003;
	ld.local.u32 	%r10008, [%rd6];
	ld.local.u32 	%r10009, [%rd31+8];
	// inline asm
	prmt.b32 %r10007, %r10008, %r10009, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r10007;
	ld.local.v2.u32 	{%r10128, %r10129}, [%rd31+4];
	// inline asm
	prmt.b32 %r10011, %r10129, %r10128, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r10011;
	ld.local.u32 	%r10016, [%rd31+4];
	ld.local.u32 	%r10017, [%rd31];
	// inline asm
	prmt.b32 %r10015, %r10016, %r10017, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r10015;
	ld.local.u32 	%r10020, [%rd31];
	ld.local.u32 	%r10021, [%rd5];
	// inline asm
	prmt.b32 %r10019, %r10020, %r10021, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r10019;
	ld.local.u32 	%r10024, [%rd5];
	ld.local.u32 	%r10025, [%rd30+8];
	// inline asm
	prmt.b32 %r10023, %r10024, %r10025, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r10023;
	ld.local.v2.u32 	{%r10130, %r10131}, [%rd30+4];
	// inline asm
	prmt.b32 %r10027, %r10131, %r10130, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r10027;
	ld.local.u32 	%r10032, [%rd30+4];
	ld.local.u32 	%r10033, [%rd30];
	// inline asm
	prmt.b32 %r10031, %r10032, %r10033, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r10031;
	ld.local.u32 	%r10036, [%rd30];
	ld.local.u32 	%r10037, [%rd4];
	// inline asm
	prmt.b32 %r10035, %r10036, %r10037, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r10035;
	ld.local.u32 	%r10040, [%rd4];
	ld.local.u32 	%r10041, [%rd29+8];
	// inline asm
	prmt.b32 %r10039, %r10040, %r10041, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r10039;
	ld.local.v2.u32 	{%r10132, %r10133}, [%rd29+4];
	// inline asm
	prmt.b32 %r10043, %r10133, %r10132, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r10043;
	ld.local.u32 	%r10048, [%rd29+4];
	ld.local.u32 	%r10049, [%rd29];
	// inline asm
	prmt.b32 %r10047, %r10048, %r10049, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r10047;
	ld.local.u32 	%r10052, [%rd29];
	ld.local.u32 	%r10053, [%rd3];
	// inline asm
	prmt.b32 %r10051, %r10052, %r10053, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r10051;
	ld.local.u32 	%r10056, [%rd3];
	ld.local.u32 	%r10057, [%rd28+8];
	// inline asm
	prmt.b32 %r10055, %r10056, %r10057, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r10055;
	ld.local.v2.u32 	{%r10134, %r10135}, [%rd28+4];
	// inline asm
	prmt.b32 %r10059, %r10135, %r10134, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r10059;
	ld.local.u32 	%r10064, [%rd28+4];
	ld.local.u32 	%r10065, [%rd28];
	// inline asm
	prmt.b32 %r10063, %r10064, %r10065, %r69;
	// inline asm
	st.local.u32 	[%rd28+8], %r10063;
	ld.local.u32 	%r10068, [%rd28];
	ld.local.u32 	%r10069, [%rd2];
	// inline asm
	prmt.b32 %r10067, %r10068, %r10069, %r69;
	// inline asm
	st.local.u32 	[%rd28+4], %r10067;
	ld.local.u32 	%r10072, [%rd2];
	ld.local.u32 	%r10073, [%rd27+8];
	// inline asm
	prmt.b32 %r10071, %r10072, %r10073, %r69;
	// inline asm
	st.local.u32 	[%rd28], %r10071;
	ld.local.v2.u32 	{%r10136, %r10137}, [%rd27+4];
	// inline asm
	prmt.b32 %r10075, %r10137, %r10136, %r69;
	// inline asm
	st.local.u32 	[%rd2], %r10075;
	ld.local.u32 	%r10080, [%rd27+4];
	ld.local.u32 	%r10081, [%rd27];
	// inline asm
	prmt.b32 %r10079, %r10080, %r10081, %r69;
	// inline asm
	st.local.u32 	[%rd27+8], %r10079;
	ld.local.u32 	%r10084, [%rd27];
	ld.local.u32 	%r10085, [%rd1];
	// inline asm
	prmt.b32 %r10083, %r10084, %r10085, %r69;
	// inline asm
	st.local.u32 	[%rd27+4], %r10083;
	ld.local.u32 	%r10088, [%rd1];
	// inline asm
	prmt.b32 %r10087, %r10088, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd27], %r10087;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12446, %r12445;
	mov.u32 	%r12447, %r12445;
	bra.uni 	BB3_337;

BB3_364:
	setp.eq.s32	%p218, %r5047, 17;
	@%p218 bra 	BB3_365;
	bra.uni 	BB3_413;

BB3_365:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12464, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7378, %r7379}, [%rd34+4];
	// inline asm
	prmt.b32 %r12465, %r7379, %r7378, %r69;
	// inline asm
	ld.local.u32 	%r7240, [%rd34+4];
	ld.local.u32 	%r7241, [%rd34];
	// inline asm
	prmt.b32 %r12458, %r7240, %r7241, %r69;
	// inline asm
	ld.local.u32 	%r7244, [%rd34];
	ld.local.u32 	%r7245, [%rd8];
	// inline asm
	prmt.b32 %r12459, %r7244, %r7245, %r69;
	// inline asm
	ld.local.u32 	%r7248, [%rd8];
	ld.local.u32 	%r7249, [%rd33+8];
	// inline asm
	prmt.b32 %r12460, %r7248, %r7249, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7380, %r7381}, [%rd33+4];
	// inline asm
	prmt.b32 %r12461, %r7381, %r7380, %r69;
	// inline asm
	ld.local.u32 	%r7256, [%rd33+4];
	ld.local.u32 	%r7257, [%rd33];
	// inline asm
	prmt.b32 %r12454, %r7256, %r7257, %r69;
	// inline asm
	ld.local.u32 	%r7260, [%rd33];
	ld.local.u32 	%r7261, [%rd7];
	// inline asm
	prmt.b32 %r12455, %r7260, %r7261, %r69;
	// inline asm
	ld.local.u32 	%r7264, [%rd7];
	ld.local.u32 	%r7265, [%rd32+8];
	// inline asm
	prmt.b32 %r12456, %r7264, %r7265, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7382, %r7383}, [%rd32+4];
	// inline asm
	prmt.b32 %r12457, %r7383, %r7382, %r69;
	// inline asm
	ld.local.u32 	%r7272, [%rd32+4];
	ld.local.u32 	%r7273, [%rd32];
	// inline asm
	prmt.b32 %r12450, %r7272, %r7273, %r69;
	// inline asm
	ld.local.u32 	%r7276, [%rd32];
	ld.local.u32 	%r7277, [%rd6];
	// inline asm
	prmt.b32 %r12451, %r7276, %r7277, %r69;
	// inline asm
	ld.local.u32 	%r7280, [%rd6];
	ld.local.u32 	%r7281, [%rd31+8];
	// inline asm
	prmt.b32 %r12452, %r7280, %r7281, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7384, %r7385}, [%rd31+4];
	// inline asm
	prmt.b32 %r12453, %r7385, %r7384, %r69;
	// inline asm
	ld.local.u32 	%r7288, [%rd31+4];
	ld.local.u32 	%r7289, [%rd31];
	// inline asm
	prmt.b32 %r12446, %r7288, %r7289, %r69;
	// inline asm
	ld.local.u32 	%r7292, [%rd31];
	ld.local.u32 	%r7293, [%rd5];
	// inline asm
	prmt.b32 %r12447, %r7292, %r7293, %r69;
	// inline asm
	ld.local.u32 	%r7296, [%rd5];
	ld.local.u32 	%r7297, [%rd30+8];
	// inline asm
	prmt.b32 %r12448, %r7296, %r7297, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7386, %r7387}, [%rd30+4];
	// inline asm
	prmt.b32 %r12449, %r7387, %r7386, %r69;
	// inline asm
	ld.local.u32 	%r7304, [%rd30+4];
	ld.local.u32 	%r7305, [%rd30];
	// inline asm
	prmt.b32 %r7303, %r7304, %r7305, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r7303;
	ld.local.u32 	%r7308, [%rd30];
	ld.local.u32 	%r7309, [%rd4];
	// inline asm
	prmt.b32 %r7307, %r7308, %r7309, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r7307;
	ld.local.u32 	%r7312, [%rd4];
	ld.local.u32 	%r7313, [%rd29+8];
	// inline asm
	prmt.b32 %r7311, %r7312, %r7313, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r7311;
	ld.local.v2.u32 	{%r7388, %r7389}, [%rd29+4];
	// inline asm
	prmt.b32 %r7315, %r7389, %r7388, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r7315;
	ld.local.u32 	%r7320, [%rd29+4];
	ld.local.u32 	%r7321, [%rd29];
	// inline asm
	prmt.b32 %r7319, %r7320, %r7321, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r7319;
	ld.local.u32 	%r7324, [%rd29];
	ld.local.u32 	%r7325, [%rd3];
	// inline asm
	prmt.b32 %r7323, %r7324, %r7325, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r7323;
	ld.local.u32 	%r7328, [%rd3];
	ld.local.u32 	%r7329, [%rd28+8];
	// inline asm
	prmt.b32 %r7327, %r7328, %r7329, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r7327;
	ld.local.v2.u32 	{%r7390, %r7391}, [%rd28+4];
	// inline asm
	prmt.b32 %r7331, %r7391, %r7390, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r7331;
	ld.local.u32 	%r7336, [%rd28+4];
	ld.local.u32 	%r7337, [%rd28];
	// inline asm
	prmt.b32 %r7335, %r7336, %r7337, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r7335;
	ld.local.u32 	%r7340, [%rd28];
	ld.local.u32 	%r7341, [%rd2];
	// inline asm
	prmt.b32 %r7339, %r7340, %r7341, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r7339;
	ld.local.u32 	%r7344, [%rd2];
	ld.local.u32 	%r7345, [%rd27+8];
	// inline asm
	prmt.b32 %r7343, %r7344, %r7345, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r7343;
	ld.local.v2.u32 	{%r7392, %r7393}, [%rd27+4];
	// inline asm
	prmt.b32 %r7347, %r7393, %r7392, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r7347;
	ld.local.u32 	%r7352, [%rd27+4];
	ld.local.u32 	%r7353, [%rd27];
	// inline asm
	prmt.b32 %r7351, %r7352, %r7353, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r7351;
	ld.local.u32 	%r7356, [%rd27];
	ld.local.u32 	%r7357, [%rd1];
	// inline asm
	prmt.b32 %r7355, %r7356, %r7357, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r7355;
	ld.local.u32 	%r7360, [%rd1];
	// inline asm
	prmt.b32 %r7359, %r7360, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r7359;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12462, %r12445;
	mov.u32 	%r12463, %r12445;
	bra.uni 	BB3_408;

BB3_348:
	setp.eq.s32	%p230, %r5047, 9;
	@%p230 bra 	BB3_349;
	bra.uni 	BB3_413;

BB3_349:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12456, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8718, %r8719}, [%rd34+4];
	// inline asm
	prmt.b32 %r12457, %r8719, %r8718, %r69;
	// inline asm
	ld.local.u32 	%r8572, [%rd34+4];
	ld.local.u32 	%r8573, [%rd34];
	// inline asm
	prmt.b32 %r12450, %r8572, %r8573, %r69;
	// inline asm
	ld.local.u32 	%r8576, [%rd34];
	ld.local.u32 	%r8577, [%rd8];
	// inline asm
	prmt.b32 %r12451, %r8576, %r8577, %r69;
	// inline asm
	ld.local.u32 	%r8580, [%rd8];
	ld.local.u32 	%r8581, [%rd33+8];
	// inline asm
	prmt.b32 %r12452, %r8580, %r8581, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8720, %r8721}, [%rd33+4];
	// inline asm
	prmt.b32 %r12453, %r8721, %r8720, %r69;
	// inline asm
	ld.local.u32 	%r8588, [%rd33+4];
	ld.local.u32 	%r8589, [%rd33];
	// inline asm
	prmt.b32 %r12446, %r8588, %r8589, %r69;
	// inline asm
	ld.local.u32 	%r8592, [%rd33];
	ld.local.u32 	%r8593, [%rd7];
	// inline asm
	prmt.b32 %r12447, %r8592, %r8593, %r69;
	// inline asm
	ld.local.u32 	%r8596, [%rd7];
	ld.local.u32 	%r8597, [%rd32+8];
	// inline asm
	prmt.b32 %r12448, %r8596, %r8597, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8722, %r8723}, [%rd32+4];
	// inline asm
	prmt.b32 %r12449, %r8723, %r8722, %r69;
	// inline asm
	ld.local.u32 	%r8604, [%rd32+4];
	ld.local.u32 	%r8605, [%rd32];
	// inline asm
	prmt.b32 %r8603, %r8604, %r8605, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r8603;
	ld.local.u32 	%r8608, [%rd32];
	ld.local.u32 	%r8609, [%rd6];
	// inline asm
	prmt.b32 %r8607, %r8608, %r8609, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r8607;
	ld.local.u32 	%r8612, [%rd6];
	ld.local.u32 	%r8613, [%rd31+8];
	// inline asm
	prmt.b32 %r8611, %r8612, %r8613, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r8611;
	ld.local.v2.u32 	{%r8724, %r8725}, [%rd31+4];
	// inline asm
	prmt.b32 %r8615, %r8725, %r8724, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r8615;
	ld.local.u32 	%r8620, [%rd31+4];
	ld.local.u32 	%r8621, [%rd31];
	// inline asm
	prmt.b32 %r8619, %r8620, %r8621, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r8619;
	ld.local.u32 	%r8624, [%rd31];
	ld.local.u32 	%r8625, [%rd5];
	// inline asm
	prmt.b32 %r8623, %r8624, %r8625, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r8623;
	ld.local.u32 	%r8628, [%rd5];
	ld.local.u32 	%r8629, [%rd30+8];
	// inline asm
	prmt.b32 %r8627, %r8628, %r8629, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r8627;
	ld.local.v2.u32 	{%r8726, %r8727}, [%rd30+4];
	// inline asm
	prmt.b32 %r8631, %r8727, %r8726, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r8631;
	ld.local.u32 	%r8636, [%rd30+4];
	ld.local.u32 	%r8637, [%rd30];
	// inline asm
	prmt.b32 %r8635, %r8636, %r8637, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r8635;
	ld.local.u32 	%r8640, [%rd30];
	ld.local.u32 	%r8641, [%rd4];
	// inline asm
	prmt.b32 %r8639, %r8640, %r8641, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r8639;
	ld.local.u32 	%r8644, [%rd4];
	ld.local.u32 	%r8645, [%rd29+8];
	// inline asm
	prmt.b32 %r8643, %r8644, %r8645, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r8643;
	ld.local.v2.u32 	{%r8728, %r8729}, [%rd29+4];
	// inline asm
	prmt.b32 %r8647, %r8729, %r8728, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r8647;
	ld.local.u32 	%r8652, [%rd29+4];
	ld.local.u32 	%r8653, [%rd29];
	// inline asm
	prmt.b32 %r8651, %r8652, %r8653, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r8651;
	ld.local.u32 	%r8656, [%rd29];
	ld.local.u32 	%r8657, [%rd3];
	// inline asm
	prmt.b32 %r8655, %r8656, %r8657, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r8655;
	ld.local.u32 	%r8660, [%rd3];
	ld.local.u32 	%r8661, [%rd28+8];
	// inline asm
	prmt.b32 %r8659, %r8660, %r8661, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r8659;
	ld.local.v2.u32 	{%r8730, %r8731}, [%rd28+4];
	// inline asm
	prmt.b32 %r8663, %r8731, %r8730, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r8663;
	ld.local.u32 	%r8668, [%rd28+4];
	ld.local.u32 	%r8669, [%rd28];
	// inline asm
	prmt.b32 %r8667, %r8668, %r8669, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r8667;
	ld.local.u32 	%r8672, [%rd28];
	ld.local.u32 	%r8673, [%rd2];
	// inline asm
	prmt.b32 %r8671, %r8672, %r8673, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r8671;
	ld.local.u32 	%r8676, [%rd2];
	ld.local.u32 	%r8677, [%rd27+8];
	// inline asm
	prmt.b32 %r8675, %r8676, %r8677, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r8675;
	ld.local.v2.u32 	{%r8732, %r8733}, [%rd27+4];
	// inline asm
	prmt.b32 %r8679, %r8733, %r8732, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r8679;
	ld.local.u32 	%r8684, [%rd27+4];
	ld.local.u32 	%r8685, [%rd27];
	// inline asm
	prmt.b32 %r8683, %r8684, %r8685, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r8683;
	ld.local.u32 	%r8688, [%rd27];
	ld.local.u32 	%r8689, [%rd1];
	// inline asm
	prmt.b32 %r8687, %r8688, %r8689, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r8687;
	ld.local.u32 	%r8692, [%rd1];
	// inline asm
	prmt.b32 %r8691, %r8692, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r8691;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12454, %r12445;
	mov.u32 	%r12455, %r12445;
	bra.uni 	BB3_406;

BB3_379:
	setp.eq.s32	%p207, %r5047, 25;
	@%p207 bra 	BB3_380;
	bra.uni 	BB3_413;

BB3_380:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12472, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6102, %r6103}, [%rd34+4];
	// inline asm
	prmt.b32 %r12473, %r6103, %r6102, %r69;
	// inline asm
	ld.local.u32 	%r5972, [%rd34+4];
	ld.local.u32 	%r5973, [%rd34];
	// inline asm
	prmt.b32 %r12466, %r5972, %r5973, %r69;
	// inline asm
	ld.local.u32 	%r5976, [%rd34];
	ld.local.u32 	%r5977, [%rd8];
	// inline asm
	prmt.b32 %r12467, %r5976, %r5977, %r69;
	// inline asm
	ld.local.u32 	%r5980, [%rd8];
	ld.local.u32 	%r5981, [%rd33+8];
	// inline asm
	prmt.b32 %r12468, %r5980, %r5981, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6104, %r6105}, [%rd33+4];
	// inline asm
	prmt.b32 %r12469, %r6105, %r6104, %r69;
	// inline asm
	ld.local.u32 	%r5988, [%rd33+4];
	ld.local.u32 	%r5989, [%rd33];
	// inline asm
	prmt.b32 %r12462, %r5988, %r5989, %r69;
	// inline asm
	ld.local.u32 	%r5992, [%rd33];
	ld.local.u32 	%r5993, [%rd7];
	// inline asm
	prmt.b32 %r12463, %r5992, %r5993, %r69;
	// inline asm
	ld.local.u32 	%r5996, [%rd7];
	ld.local.u32 	%r5997, [%rd32+8];
	// inline asm
	prmt.b32 %r12464, %r5996, %r5997, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6106, %r6107}, [%rd32+4];
	// inline asm
	prmt.b32 %r12465, %r6107, %r6106, %r69;
	// inline asm
	ld.local.u32 	%r6004, [%rd32+4];
	ld.local.u32 	%r6005, [%rd32];
	// inline asm
	prmt.b32 %r12458, %r6004, %r6005, %r69;
	// inline asm
	ld.local.u32 	%r6008, [%rd32];
	ld.local.u32 	%r6009, [%rd6];
	// inline asm
	prmt.b32 %r12459, %r6008, %r6009, %r69;
	// inline asm
	ld.local.u32 	%r6012, [%rd6];
	ld.local.u32 	%r6013, [%rd31+8];
	// inline asm
	prmt.b32 %r12460, %r6012, %r6013, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6108, %r6109}, [%rd31+4];
	// inline asm
	prmt.b32 %r12461, %r6109, %r6108, %r69;
	// inline asm
	ld.local.u32 	%r6020, [%rd31+4];
	ld.local.u32 	%r6021, [%rd31];
	// inline asm
	prmt.b32 %r12454, %r6020, %r6021, %r69;
	// inline asm
	ld.local.u32 	%r6024, [%rd31];
	ld.local.u32 	%r6025, [%rd5];
	// inline asm
	prmt.b32 %r12455, %r6024, %r6025, %r69;
	// inline asm
	ld.local.u32 	%r6028, [%rd5];
	ld.local.u32 	%r6029, [%rd30+8];
	// inline asm
	prmt.b32 %r12456, %r6028, %r6029, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6110, %r6111}, [%rd30+4];
	// inline asm
	prmt.b32 %r12457, %r6111, %r6110, %r69;
	// inline asm
	ld.local.u32 	%r6036, [%rd30+4];
	ld.local.u32 	%r6037, [%rd30];
	// inline asm
	prmt.b32 %r12450, %r6036, %r6037, %r69;
	// inline asm
	ld.local.u32 	%r6040, [%rd30];
	ld.local.u32 	%r6041, [%rd4];
	// inline asm
	prmt.b32 %r12451, %r6040, %r6041, %r69;
	// inline asm
	ld.local.u32 	%r6044, [%rd4];
	ld.local.u32 	%r6045, [%rd29+8];
	// inline asm
	prmt.b32 %r12452, %r6044, %r6045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6112, %r6113}, [%rd29+4];
	// inline asm
	prmt.b32 %r12453, %r6113, %r6112, %r69;
	// inline asm
	ld.local.u32 	%r6052, [%rd29+4];
	ld.local.u32 	%r6053, [%rd29];
	// inline asm
	prmt.b32 %r12446, %r6052, %r6053, %r69;
	// inline asm
	ld.local.u32 	%r6056, [%rd29];
	ld.local.u32 	%r6057, [%rd3];
	// inline asm
	prmt.b32 %r12447, %r6056, %r6057, %r69;
	// inline asm
	ld.local.u32 	%r6060, [%rd3];
	ld.local.u32 	%r6061, [%rd28+8];
	// inline asm
	prmt.b32 %r12448, %r6060, %r6061, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6114, %r6115}, [%rd28+4];
	// inline asm
	prmt.b32 %r12449, %r6115, %r6114, %r69;
	// inline asm
	ld.local.u32 	%r6068, [%rd28+4];
	ld.local.u32 	%r6069, [%rd28];
	// inline asm
	prmt.b32 %r6067, %r6068, %r6069, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r6067;
	ld.local.u32 	%r6072, [%rd28];
	ld.local.u32 	%r6073, [%rd2];
	// inline asm
	prmt.b32 %r6071, %r6072, %r6073, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r6071;
	ld.local.u32 	%r6076, [%rd2];
	ld.local.u32 	%r6077, [%rd27+8];
	// inline asm
	prmt.b32 %r6075, %r6076, %r6077, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r6075;
	ld.local.v2.u32 	{%r6116, %r6117}, [%rd27+4];
	// inline asm
	prmt.b32 %r6079, %r6117, %r6116, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r6079;
	ld.local.u32 	%r6084, [%rd27+4];
	ld.local.u32 	%r6085, [%rd27];
	// inline asm
	prmt.b32 %r6083, %r6084, %r6085, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r6083;
	ld.local.u32 	%r6088, [%rd27];
	ld.local.u32 	%r6089, [%rd1];
	// inline asm
	prmt.b32 %r6087, %r6088, %r6089, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r6087;
	ld.local.u32 	%r6092, [%rd1];
	// inline asm
	prmt.b32 %r6091, %r6092, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r6091;
	st.local.u32 	[%rd7], %r12445;
	st.local.v2.u32 	[%rd32+4], {%r12445, %r12445};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12470, %r12445;
	mov.u32 	%r12471, %r12445;
	bra.uni 	BB3_410;

BB3_340:
	setp.eq.s32	%p236, %r5047, 5;
	@%p236 bra 	BB3_341;
	bra.uni 	BB3_413;

BB3_341:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12452, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9412, %r9413}, [%rd34+4];
	// inline asm
	prmt.b32 %r12453, %r9413, %r9412, %r69;
	// inline asm
	ld.local.u32 	%r9262, [%rd34+4];
	ld.local.u32 	%r9263, [%rd34];
	// inline asm
	prmt.b32 %r12446, %r9262, %r9263, %r69;
	// inline asm
	ld.local.u32 	%r9266, [%rd34];
	ld.local.u32 	%r9267, [%rd8];
	// inline asm
	prmt.b32 %r12447, %r9266, %r9267, %r69;
	// inline asm
	ld.local.u32 	%r9270, [%rd8];
	ld.local.u32 	%r9271, [%rd33+8];
	// inline asm
	prmt.b32 %r12448, %r9270, %r9271, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9414, %r9415}, [%rd33+4];
	// inline asm
	prmt.b32 %r12449, %r9415, %r9414, %r69;
	// inline asm
	ld.local.u32 	%r9278, [%rd33+4];
	ld.local.u32 	%r9279, [%rd33];
	// inline asm
	prmt.b32 %r9277, %r9278, %r9279, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r9277;
	ld.local.u32 	%r9282, [%rd33];
	ld.local.u32 	%r9283, [%rd7];
	// inline asm
	prmt.b32 %r9281, %r9282, %r9283, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r9281;
	ld.local.u32 	%r9286, [%rd7];
	ld.local.u32 	%r9287, [%rd32+8];
	// inline asm
	prmt.b32 %r9285, %r9286, %r9287, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r9285;
	ld.local.v2.u32 	{%r9416, %r9417}, [%rd32+4];
	// inline asm
	prmt.b32 %r9289, %r9417, %r9416, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r9289;
	ld.local.u32 	%r9294, [%rd32+4];
	ld.local.u32 	%r9295, [%rd32];
	// inline asm
	prmt.b32 %r9293, %r9294, %r9295, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r9293;
	ld.local.u32 	%r9298, [%rd32];
	ld.local.u32 	%r9299, [%rd6];
	// inline asm
	prmt.b32 %r9297, %r9298, %r9299, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r9297;
	ld.local.u32 	%r9302, [%rd6];
	ld.local.u32 	%r9303, [%rd31+8];
	// inline asm
	prmt.b32 %r9301, %r9302, %r9303, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r9301;
	ld.local.v2.u32 	{%r9418, %r9419}, [%rd31+4];
	// inline asm
	prmt.b32 %r9305, %r9419, %r9418, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r9305;
	ld.local.u32 	%r9310, [%rd31+4];
	ld.local.u32 	%r9311, [%rd31];
	// inline asm
	prmt.b32 %r9309, %r9310, %r9311, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r9309;
	ld.local.u32 	%r9314, [%rd31];
	ld.local.u32 	%r9315, [%rd5];
	// inline asm
	prmt.b32 %r9313, %r9314, %r9315, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r9313;
	ld.local.u32 	%r9318, [%rd5];
	ld.local.u32 	%r9319, [%rd30+8];
	// inline asm
	prmt.b32 %r9317, %r9318, %r9319, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r9317;
	ld.local.v2.u32 	{%r9420, %r9421}, [%rd30+4];
	// inline asm
	prmt.b32 %r9321, %r9421, %r9420, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r9321;
	ld.local.u32 	%r9326, [%rd30+4];
	ld.local.u32 	%r9327, [%rd30];
	// inline asm
	prmt.b32 %r9325, %r9326, %r9327, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r9325;
	ld.local.u32 	%r9330, [%rd30];
	ld.local.u32 	%r9331, [%rd4];
	// inline asm
	prmt.b32 %r9329, %r9330, %r9331, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r9329;
	ld.local.u32 	%r9334, [%rd4];
	ld.local.u32 	%r9335, [%rd29+8];
	// inline asm
	prmt.b32 %r9333, %r9334, %r9335, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r9333;
	ld.local.v2.u32 	{%r9422, %r9423}, [%rd29+4];
	// inline asm
	prmt.b32 %r9337, %r9423, %r9422, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r9337;
	ld.local.u32 	%r9342, [%rd29+4];
	ld.local.u32 	%r9343, [%rd29];
	// inline asm
	prmt.b32 %r9341, %r9342, %r9343, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r9341;
	ld.local.u32 	%r9346, [%rd29];
	ld.local.u32 	%r9347, [%rd3];
	// inline asm
	prmt.b32 %r9345, %r9346, %r9347, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r9345;
	ld.local.u32 	%r9350, [%rd3];
	ld.local.u32 	%r9351, [%rd28+8];
	// inline asm
	prmt.b32 %r9349, %r9350, %r9351, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r9349;
	ld.local.v2.u32 	{%r9424, %r9425}, [%rd28+4];
	// inline asm
	prmt.b32 %r9353, %r9425, %r9424, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r9353;
	ld.local.u32 	%r9358, [%rd28+4];
	ld.local.u32 	%r9359, [%rd28];
	// inline asm
	prmt.b32 %r9357, %r9358, %r9359, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r9357;
	ld.local.u32 	%r9362, [%rd28];
	ld.local.u32 	%r9363, [%rd2];
	// inline asm
	prmt.b32 %r9361, %r9362, %r9363, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r9361;
	ld.local.u32 	%r9366, [%rd2];
	ld.local.u32 	%r9367, [%rd27+8];
	// inline asm
	prmt.b32 %r9365, %r9366, %r9367, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r9365;
	ld.local.v2.u32 	{%r9426, %r9427}, [%rd27+4];
	// inline asm
	prmt.b32 %r9369, %r9427, %r9426, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r9369;
	ld.local.u32 	%r9374, [%rd27+4];
	ld.local.u32 	%r9375, [%rd27];
	// inline asm
	prmt.b32 %r9373, %r9374, %r9375, %r69;
	// inline asm
	st.local.u32 	[%rd28+8], %r9373;
	ld.local.u32 	%r9378, [%rd27];
	ld.local.u32 	%r9379, [%rd1];
	// inline asm
	prmt.b32 %r9377, %r9378, %r9379, %r69;
	// inline asm
	st.local.u32 	[%rd28+4], %r9377;
	ld.local.u32 	%r9382, [%rd1];
	// inline asm
	prmt.b32 %r9381, %r9382, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd28], %r9381;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12450, %r12445;
	mov.u32 	%r12451, %r12445;
	bra.uni 	BB3_405;

BB3_371:
	setp.eq.s32	%p213, %r5047, 21;
	@%p213 bra 	BB3_372;
	bra.uni 	BB3_413;

BB3_372:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12468, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6732, %r6733}, [%rd34+4];
	// inline asm
	prmt.b32 %r12469, %r6733, %r6732, %r69;
	// inline asm
	ld.local.u32 	%r6598, [%rd34+4];
	ld.local.u32 	%r6599, [%rd34];
	// inline asm
	prmt.b32 %r12462, %r6598, %r6599, %r69;
	// inline asm
	ld.local.u32 	%r6602, [%rd34];
	ld.local.u32 	%r6603, [%rd8];
	// inline asm
	prmt.b32 %r12463, %r6602, %r6603, %r69;
	// inline asm
	ld.local.u32 	%r6606, [%rd8];
	ld.local.u32 	%r6607, [%rd33+8];
	// inline asm
	prmt.b32 %r12464, %r6606, %r6607, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6734, %r6735}, [%rd33+4];
	// inline asm
	prmt.b32 %r12465, %r6735, %r6734, %r69;
	// inline asm
	ld.local.u32 	%r6614, [%rd33+4];
	ld.local.u32 	%r6615, [%rd33];
	// inline asm
	prmt.b32 %r12458, %r6614, %r6615, %r69;
	// inline asm
	ld.local.u32 	%r6618, [%rd33];
	ld.local.u32 	%r6619, [%rd7];
	// inline asm
	prmt.b32 %r12459, %r6618, %r6619, %r69;
	// inline asm
	ld.local.u32 	%r6622, [%rd7];
	ld.local.u32 	%r6623, [%rd32+8];
	// inline asm
	prmt.b32 %r12460, %r6622, %r6623, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6736, %r6737}, [%rd32+4];
	// inline asm
	prmt.b32 %r12461, %r6737, %r6736, %r69;
	// inline asm
	ld.local.u32 	%r6630, [%rd32+4];
	ld.local.u32 	%r6631, [%rd32];
	// inline asm
	prmt.b32 %r12454, %r6630, %r6631, %r69;
	// inline asm
	ld.local.u32 	%r6634, [%rd32];
	ld.local.u32 	%r6635, [%rd6];
	// inline asm
	prmt.b32 %r12455, %r6634, %r6635, %r69;
	// inline asm
	ld.local.u32 	%r6638, [%rd6];
	ld.local.u32 	%r6639, [%rd31+8];
	// inline asm
	prmt.b32 %r12456, %r6638, %r6639, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6738, %r6739}, [%rd31+4];
	// inline asm
	prmt.b32 %r12457, %r6739, %r6738, %r69;
	// inline asm
	ld.local.u32 	%r6646, [%rd31+4];
	ld.local.u32 	%r6647, [%rd31];
	// inline asm
	prmt.b32 %r12450, %r6646, %r6647, %r69;
	// inline asm
	ld.local.u32 	%r6650, [%rd31];
	ld.local.u32 	%r6651, [%rd5];
	// inline asm
	prmt.b32 %r12451, %r6650, %r6651, %r69;
	// inline asm
	ld.local.u32 	%r6654, [%rd5];
	ld.local.u32 	%r6655, [%rd30+8];
	// inline asm
	prmt.b32 %r12452, %r6654, %r6655, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6740, %r6741}, [%rd30+4];
	// inline asm
	prmt.b32 %r12453, %r6741, %r6740, %r69;
	// inline asm
	ld.local.u32 	%r6662, [%rd30+4];
	ld.local.u32 	%r6663, [%rd30];
	// inline asm
	prmt.b32 %r12446, %r6662, %r6663, %r69;
	// inline asm
	ld.local.u32 	%r6666, [%rd30];
	ld.local.u32 	%r6667, [%rd4];
	// inline asm
	prmt.b32 %r12447, %r6666, %r6667, %r69;
	// inline asm
	ld.local.u32 	%r6670, [%rd4];
	ld.local.u32 	%r6671, [%rd29+8];
	// inline asm
	prmt.b32 %r12448, %r6670, %r6671, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6742, %r6743}, [%rd29+4];
	// inline asm
	prmt.b32 %r12449, %r6743, %r6742, %r69;
	// inline asm
	ld.local.u32 	%r6678, [%rd29+4];
	ld.local.u32 	%r6679, [%rd29];
	// inline asm
	prmt.b32 %r6677, %r6678, %r6679, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r6677;
	ld.local.u32 	%r6682, [%rd29];
	ld.local.u32 	%r6683, [%rd3];
	// inline asm
	prmt.b32 %r6681, %r6682, %r6683, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r6681;
	ld.local.u32 	%r6686, [%rd3];
	ld.local.u32 	%r6687, [%rd28+8];
	// inline asm
	prmt.b32 %r6685, %r6686, %r6687, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r6685;
	ld.local.v2.u32 	{%r6744, %r6745}, [%rd28+4];
	// inline asm
	prmt.b32 %r6689, %r6745, %r6744, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r6689;
	ld.local.u32 	%r6694, [%rd28+4];
	ld.local.u32 	%r6695, [%rd28];
	// inline asm
	prmt.b32 %r6693, %r6694, %r6695, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r6693;
	ld.local.u32 	%r6698, [%rd28];
	ld.local.u32 	%r6699, [%rd2];
	// inline asm
	prmt.b32 %r6697, %r6698, %r6699, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r6697;
	ld.local.u32 	%r6702, [%rd2];
	ld.local.u32 	%r6703, [%rd27+8];
	// inline asm
	prmt.b32 %r6701, %r6702, %r6703, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r6701;
	ld.local.v2.u32 	{%r6746, %r6747}, [%rd27+4];
	// inline asm
	prmt.b32 %r6705, %r6747, %r6746, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r6705;
	ld.local.u32 	%r6710, [%rd27+4];
	ld.local.u32 	%r6711, [%rd27];
	// inline asm
	prmt.b32 %r6709, %r6710, %r6711, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r6709;
	ld.local.u32 	%r6714, [%rd27];
	ld.local.u32 	%r6715, [%rd1];
	// inline asm
	prmt.b32 %r6713, %r6714, %r6715, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r6713;
	ld.local.u32 	%r6718, [%rd1];
	// inline asm
	prmt.b32 %r6717, %r6718, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r6717;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12466, %r12445;
	mov.u32 	%r12467, %r12445;
	bra.uni 	BB3_409;

BB3_355:
	setp.eq.s32	%p225, %r5047, 13;
	@%p225 bra 	BB3_356;
	bra.uni 	BB3_413;

BB3_356:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12460, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8040, %r8041}, [%rd34+4];
	// inline asm
	prmt.b32 %r12461, %r8041, %r8040, %r69;
	// inline asm
	ld.local.u32 	%r7898, [%rd34+4];
	ld.local.u32 	%r7899, [%rd34];
	// inline asm
	prmt.b32 %r12454, %r7898, %r7899, %r69;
	// inline asm
	ld.local.u32 	%r7902, [%rd34];
	ld.local.u32 	%r7903, [%rd8];
	// inline asm
	prmt.b32 %r12455, %r7902, %r7903, %r69;
	// inline asm
	ld.local.u32 	%r7906, [%rd8];
	ld.local.u32 	%r7907, [%rd33+8];
	// inline asm
	prmt.b32 %r12456, %r7906, %r7907, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8042, %r8043}, [%rd33+4];
	// inline asm
	prmt.b32 %r12457, %r8043, %r8042, %r69;
	// inline asm
	ld.local.u32 	%r7914, [%rd33+4];
	ld.local.u32 	%r7915, [%rd33];
	// inline asm
	prmt.b32 %r12450, %r7914, %r7915, %r69;
	// inline asm
	ld.local.u32 	%r7918, [%rd33];
	ld.local.u32 	%r7919, [%rd7];
	// inline asm
	prmt.b32 %r12451, %r7918, %r7919, %r69;
	// inline asm
	ld.local.u32 	%r7922, [%rd7];
	ld.local.u32 	%r7923, [%rd32+8];
	// inline asm
	prmt.b32 %r12452, %r7922, %r7923, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8044, %r8045}, [%rd32+4];
	// inline asm
	prmt.b32 %r12453, %r8045, %r8044, %r69;
	// inline asm
	ld.local.u32 	%r7930, [%rd32+4];
	ld.local.u32 	%r7931, [%rd32];
	// inline asm
	prmt.b32 %r12446, %r7930, %r7931, %r69;
	// inline asm
	ld.local.u32 	%r7934, [%rd32];
	ld.local.u32 	%r7935, [%rd6];
	// inline asm
	prmt.b32 %r12447, %r7934, %r7935, %r69;
	// inline asm
	ld.local.u32 	%r7938, [%rd6];
	ld.local.u32 	%r7939, [%rd31+8];
	// inline asm
	prmt.b32 %r12448, %r7938, %r7939, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8046, %r8047}, [%rd31+4];
	// inline asm
	prmt.b32 %r12449, %r8047, %r8046, %r69;
	// inline asm
	ld.local.u32 	%r7946, [%rd31+4];
	ld.local.u32 	%r7947, [%rd31];
	// inline asm
	prmt.b32 %r7945, %r7946, %r7947, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r7945;
	ld.local.u32 	%r7950, [%rd31];
	ld.local.u32 	%r7951, [%rd5];
	// inline asm
	prmt.b32 %r7949, %r7950, %r7951, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r7949;
	ld.local.u32 	%r7954, [%rd5];
	ld.local.u32 	%r7955, [%rd30+8];
	// inline asm
	prmt.b32 %r7953, %r7954, %r7955, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r7953;
	ld.local.v2.u32 	{%r8048, %r8049}, [%rd30+4];
	// inline asm
	prmt.b32 %r7957, %r8049, %r8048, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r7957;
	ld.local.u32 	%r7962, [%rd30+4];
	ld.local.u32 	%r7963, [%rd30];
	// inline asm
	prmt.b32 %r7961, %r7962, %r7963, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r7961;
	ld.local.u32 	%r7966, [%rd30];
	ld.local.u32 	%r7967, [%rd4];
	// inline asm
	prmt.b32 %r7965, %r7966, %r7967, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r7965;
	ld.local.u32 	%r7970, [%rd4];
	ld.local.u32 	%r7971, [%rd29+8];
	// inline asm
	prmt.b32 %r7969, %r7970, %r7971, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r7969;
	ld.local.v2.u32 	{%r8050, %r8051}, [%rd29+4];
	// inline asm
	prmt.b32 %r7973, %r8051, %r8050, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r7973;
	ld.local.u32 	%r7978, [%rd29+4];
	ld.local.u32 	%r7979, [%rd29];
	// inline asm
	prmt.b32 %r7977, %r7978, %r7979, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r7977;
	ld.local.u32 	%r7982, [%rd29];
	ld.local.u32 	%r7983, [%rd3];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r7981;
	ld.local.u32 	%r7986, [%rd3];
	ld.local.u32 	%r7987, [%rd28+8];
	// inline asm
	prmt.b32 %r7985, %r7986, %r7987, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r7985;
	ld.local.v2.u32 	{%r8052, %r8053}, [%rd28+4];
	// inline asm
	prmt.b32 %r7989, %r8053, %r8052, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r7989;
	ld.local.u32 	%r7994, [%rd28+4];
	ld.local.u32 	%r7995, [%rd28];
	// inline asm
	prmt.b32 %r7993, %r7994, %r7995, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r7993;
	ld.local.u32 	%r7998, [%rd28];
	ld.local.u32 	%r7999, [%rd2];
	// inline asm
	prmt.b32 %r7997, %r7998, %r7999, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r7997;
	ld.local.u32 	%r8002, [%rd2];
	ld.local.u32 	%r8003, [%rd27+8];
	// inline asm
	prmt.b32 %r8001, %r8002, %r8003, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r8001;
	ld.local.v2.u32 	{%r8054, %r8055}, [%rd27+4];
	// inline asm
	prmt.b32 %r8005, %r8055, %r8054, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r8005;
	ld.local.u32 	%r8010, [%rd27+4];
	ld.local.u32 	%r8011, [%rd27];
	// inline asm
	prmt.b32 %r8009, %r8010, %r8011, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r8009;
	ld.local.u32 	%r8014, [%rd27];
	ld.local.u32 	%r8015, [%rd1];
	// inline asm
	prmt.b32 %r8013, %r8014, %r8015, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r8013;
	ld.local.u32 	%r8018, [%rd1];
	// inline asm
	prmt.b32 %r8017, %r8018, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r8017;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12458, %r12445;
	mov.u32 	%r12459, %r12445;
	bra.uni 	BB3_407;

BB3_386:
	setp.eq.s32	%p202, %r5047, 29;
	@%p202 bra 	BB3_387;
	bra.uni 	BB3_413;

BB3_387:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12476, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5488, %r5489}, [%rd34+4];
	// inline asm
	prmt.b32 %r12477, %r5489, %r5488, %r69;
	// inline asm
	ld.local.u32 	%r5362, [%rd34+4];
	ld.local.u32 	%r5363, [%rd34];
	// inline asm
	prmt.b32 %r12470, %r5362, %r5363, %r69;
	// inline asm
	ld.local.u32 	%r5366, [%rd34];
	ld.local.u32 	%r5367, [%rd8];
	// inline asm
	prmt.b32 %r12471, %r5366, %r5367, %r69;
	// inline asm
	ld.local.u32 	%r5370, [%rd8];
	ld.local.u32 	%r5371, [%rd33+8];
	// inline asm
	prmt.b32 %r12472, %r5370, %r5371, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5490, %r5491}, [%rd33+4];
	// inline asm
	prmt.b32 %r12473, %r5491, %r5490, %r69;
	// inline asm
	ld.local.u32 	%r5378, [%rd33+4];
	ld.local.u32 	%r5379, [%rd33];
	// inline asm
	prmt.b32 %r12466, %r5378, %r5379, %r69;
	// inline asm
	ld.local.u32 	%r5382, [%rd33];
	ld.local.u32 	%r5383, [%rd7];
	// inline asm
	prmt.b32 %r12467, %r5382, %r5383, %r69;
	// inline asm
	ld.local.u32 	%r5386, [%rd7];
	ld.local.u32 	%r5387, [%rd32+8];
	// inline asm
	prmt.b32 %r12468, %r5386, %r5387, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5492, %r5493}, [%rd32+4];
	// inline asm
	prmt.b32 %r12469, %r5493, %r5492, %r69;
	// inline asm
	ld.local.u32 	%r5394, [%rd32+4];
	ld.local.u32 	%r5395, [%rd32];
	// inline asm
	prmt.b32 %r12462, %r5394, %r5395, %r69;
	// inline asm
	ld.local.u32 	%r5398, [%rd32];
	ld.local.u32 	%r5399, [%rd6];
	// inline asm
	prmt.b32 %r12463, %r5398, %r5399, %r69;
	// inline asm
	ld.local.u32 	%r5402, [%rd6];
	ld.local.u32 	%r5403, [%rd31+8];
	// inline asm
	prmt.b32 %r12464, %r5402, %r5403, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5494, %r5495}, [%rd31+4];
	// inline asm
	prmt.b32 %r12465, %r5495, %r5494, %r69;
	// inline asm
	ld.local.u32 	%r5410, [%rd31+4];
	ld.local.u32 	%r5411, [%rd31];
	// inline asm
	prmt.b32 %r12458, %r5410, %r5411, %r69;
	// inline asm
	ld.local.u32 	%r5414, [%rd31];
	ld.local.u32 	%r5415, [%rd5];
	// inline asm
	prmt.b32 %r12459, %r5414, %r5415, %r69;
	// inline asm
	ld.local.u32 	%r5418, [%rd5];
	ld.local.u32 	%r5419, [%rd30+8];
	// inline asm
	prmt.b32 %r12460, %r5418, %r5419, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5496, %r5497}, [%rd30+4];
	// inline asm
	prmt.b32 %r12461, %r5497, %r5496, %r69;
	// inline asm
	ld.local.u32 	%r5426, [%rd30+4];
	ld.local.u32 	%r5427, [%rd30];
	// inline asm
	prmt.b32 %r12454, %r5426, %r5427, %r69;
	// inline asm
	ld.local.u32 	%r5430, [%rd30];
	ld.local.u32 	%r5431, [%rd4];
	// inline asm
	prmt.b32 %r12455, %r5430, %r5431, %r69;
	// inline asm
	ld.local.u32 	%r5434, [%rd4];
	ld.local.u32 	%r5435, [%rd29+8];
	// inline asm
	prmt.b32 %r12456, %r5434, %r5435, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5498, %r5499}, [%rd29+4];
	// inline asm
	prmt.b32 %r12457, %r5499, %r5498, %r69;
	// inline asm
	ld.local.u32 	%r5442, [%rd29+4];
	ld.local.u32 	%r5443, [%rd29];
	// inline asm
	prmt.b32 %r12450, %r5442, %r5443, %r69;
	// inline asm
	ld.local.u32 	%r5446, [%rd29];
	ld.local.u32 	%r5447, [%rd3];
	// inline asm
	prmt.b32 %r12451, %r5446, %r5447, %r69;
	// inline asm
	ld.local.u32 	%r5450, [%rd3];
	ld.local.u32 	%r5451, [%rd28+8];
	// inline asm
	prmt.b32 %r12452, %r5450, %r5451, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5500, %r5501}, [%rd28+4];
	// inline asm
	prmt.b32 %r12453, %r5501, %r5500, %r69;
	// inline asm
	ld.local.u32 	%r5458, [%rd28+4];
	ld.local.u32 	%r5459, [%rd28];
	// inline asm
	prmt.b32 %r12446, %r5458, %r5459, %r69;
	// inline asm
	ld.local.u32 	%r5462, [%rd28];
	ld.local.u32 	%r5463, [%rd2];
	// inline asm
	prmt.b32 %r12447, %r5462, %r5463, %r69;
	// inline asm
	ld.local.u32 	%r5466, [%rd2];
	ld.local.u32 	%r5467, [%rd27+8];
	// inline asm
	prmt.b32 %r12448, %r5466, %r5467, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5502, %r5503}, [%rd27+4];
	// inline asm
	prmt.b32 %r12449, %r5503, %r5502, %r69;
	// inline asm
	ld.local.u32 	%r5474, [%rd27+4];
	ld.local.u32 	%r5475, [%rd27];
	// inline asm
	prmt.b32 %r5473, %r5474, %r5475, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r5473;
	ld.local.u32 	%r5478, [%rd27];
	ld.local.u32 	%r5479, [%rd1];
	// inline asm
	prmt.b32 %r5477, %r5478, %r5479, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r5477;
	ld.local.u32 	%r5482, [%rd1];
	// inline asm
	prmt.b32 %r5481, %r5482, %r12445, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r5481;
	st.local.u32 	[%rd8], %r12445;
	st.local.v2.u32 	[%rd33+4], {%r12445, %r12445};
	st.local.u32 	[%rd33], %r12445;
	st.local.u32 	[%rd7], %r12445;
	st.local.v2.u32 	[%rd32+4], {%r12445, %r12445};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	mov.u32 	%r12474, %r12445;
	mov.u32 	%r12475, %r12445;
	bra.uni 	BB3_415;

BB3_335:
	setp.eq.s32	%p239, %r5047, 3;
	@%p239 bra 	BB3_336;
	bra.uni 	BB3_413;

BB3_336:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12446, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9765, %r9766}, [%rd34+4];
	// inline asm
	prmt.b32 %r12447, %r9766, %r9765, %r69;
	// inline asm
	ld.local.u32 	%r9613, [%rd34+4];
	ld.local.u32 	%r9614, [%rd34];
	// inline asm
	prmt.b32 %r12448, %r9613, %r9614, %r69;
	// inline asm
	ld.local.u32 	%r9617, [%rd34];
	ld.local.u32 	%r9618, [%rd8];
	// inline asm
	prmt.b32 %r12449, %r9617, %r9618, %r69;
	// inline asm
	ld.local.u32 	%r9621, [%rd8];
	ld.local.u32 	%r9622, [%rd33+8];
	// inline asm
	prmt.b32 %r9620, %r9621, %r9622, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r9620;
	ld.local.v2.u32 	{%r9767, %r9768}, [%rd33+4];
	// inline asm
	prmt.b32 %r9624, %r9768, %r9767, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r9624;
	ld.local.u32 	%r9629, [%rd33+4];
	ld.local.u32 	%r9630, [%rd33];
	// inline asm
	prmt.b32 %r9628, %r9629, %r9630, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r9628;
	ld.local.u32 	%r9633, [%rd33];
	ld.local.u32 	%r9634, [%rd7];
	// inline asm
	prmt.b32 %r9632, %r9633, %r9634, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r9632;
	ld.local.u32 	%r9637, [%rd7];
	ld.local.u32 	%r9638, [%rd32+8];
	// inline asm
	prmt.b32 %r9636, %r9637, %r9638, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r9636;
	ld.local.v2.u32 	{%r9769, %r9770}, [%rd32+4];
	// inline asm
	prmt.b32 %r9640, %r9770, %r9769, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r9640;
	ld.local.u32 	%r9645, [%rd32+4];
	ld.local.u32 	%r9646, [%rd32];
	// inline asm
	prmt.b32 %r9644, %r9645, %r9646, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r9644;
	ld.local.u32 	%r9649, [%rd32];
	ld.local.u32 	%r9650, [%rd6];
	// inline asm
	prmt.b32 %r9648, %r9649, %r9650, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r9648;
	ld.local.u32 	%r9653, [%rd6];
	ld.local.u32 	%r9654, [%rd31+8];
	// inline asm
	prmt.b32 %r9652, %r9653, %r9654, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r9652;
	ld.local.v2.u32 	{%r9771, %r9772}, [%rd31+4];
	// inline asm
	prmt.b32 %r9656, %r9772, %r9771, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r9656;
	ld.local.u32 	%r9661, [%rd31+4];
	ld.local.u32 	%r9662, [%rd31];
	// inline asm
	prmt.b32 %r9660, %r9661, %r9662, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r9660;
	ld.local.u32 	%r9665, [%rd31];
	ld.local.u32 	%r9666, [%rd5];
	// inline asm
	prmt.b32 %r9664, %r9665, %r9666, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r9664;
	ld.local.u32 	%r9669, [%rd5];
	ld.local.u32 	%r9670, [%rd30+8];
	// inline asm
	prmt.b32 %r9668, %r9669, %r9670, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r9668;
	ld.local.v2.u32 	{%r9773, %r9774}, [%rd30+4];
	// inline asm
	prmt.b32 %r9672, %r9774, %r9773, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r9672;
	ld.local.u32 	%r9677, [%rd30+4];
	ld.local.u32 	%r9678, [%rd30];
	// inline asm
	prmt.b32 %r9676, %r9677, %r9678, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r9676;
	ld.local.u32 	%r9681, [%rd30];
	ld.local.u32 	%r9682, [%rd4];
	// inline asm
	prmt.b32 %r9680, %r9681, %r9682, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r9680;
	ld.local.u32 	%r9685, [%rd4];
	ld.local.u32 	%r9686, [%rd29+8];
	// inline asm
	prmt.b32 %r9684, %r9685, %r9686, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r9684;
	ld.local.v2.u32 	{%r9775, %r9776}, [%rd29+4];
	// inline asm
	prmt.b32 %r9688, %r9776, %r9775, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r9688;
	ld.local.u32 	%r9693, [%rd29+4];
	ld.local.u32 	%r9694, [%rd29];
	// inline asm
	prmt.b32 %r9692, %r9693, %r9694, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r9692;
	ld.local.u32 	%r9697, [%rd29];
	ld.local.u32 	%r9698, [%rd3];
	// inline asm
	prmt.b32 %r9696, %r9697, %r9698, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r9696;
	ld.local.u32 	%r9701, [%rd3];
	ld.local.u32 	%r9702, [%rd28+8];
	// inline asm
	prmt.b32 %r9700, %r9701, %r9702, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r9700;
	ld.local.v2.u32 	{%r9777, %r9778}, [%rd28+4];
	// inline asm
	prmt.b32 %r9704, %r9778, %r9777, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r9704;
	ld.local.u32 	%r9709, [%rd28+4];
	ld.local.u32 	%r9710, [%rd28];
	// inline asm
	prmt.b32 %r9708, %r9709, %r9710, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r9708;
	ld.local.u32 	%r9713, [%rd28];
	ld.local.u32 	%r9714, [%rd2];
	// inline asm
	prmt.b32 %r9712, %r9713, %r9714, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r9712;
	ld.local.u32 	%r9717, [%rd2];
	ld.local.u32 	%r9718, [%rd27+8];
	// inline asm
	prmt.b32 %r9716, %r9717, %r9718, %r69;
	// inline asm
	st.local.u32 	[%rd28+8], %r9716;
	ld.local.v2.u32 	{%r9779, %r9780}, [%rd27+4];
	// inline asm
	prmt.b32 %r9720, %r9780, %r9779, %r69;
	// inline asm
	st.local.u32 	[%rd28+4], %r9720;
	ld.local.u32 	%r9725, [%rd27+4];
	ld.local.u32 	%r9726, [%rd27];
	// inline asm
	prmt.b32 %r9724, %r9725, %r9726, %r69;
	// inline asm
	st.local.u32 	[%rd28], %r9724;
	ld.local.u32 	%r9729, [%rd27];
	ld.local.u32 	%r9730, [%rd1];
	// inline asm
	prmt.b32 %r9728, %r9729, %r9730, %r69;
	// inline asm
	st.local.u32 	[%rd2], %r9728;
	ld.local.u32 	%r9733, [%rd1];
	// inline asm
	prmt.b32 %r9732, %r9733, %r12445, %r69;
	// inline asm
	st.local.v2.u32 	[%rd27+4], {%r12445, %r9732};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;

BB3_337:
	mov.u32 	%r12450, %r12445;
	mov.u32 	%r12451, %r12445;
	mov.u32 	%r12452, %r12445;
	mov.u32 	%r12453, %r12445;
	bra.uni 	BB3_405;

BB3_367:
	setp.eq.s32	%p216, %r5047, 19;
	@%p216 bra 	BB3_368;
	bra.uni 	BB3_413;

BB3_368:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12462, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7053, %r7054}, [%rd34+4];
	// inline asm
	prmt.b32 %r12463, %r7054, %r7053, %r69;
	// inline asm
	ld.local.u32 	%r6917, [%rd34+4];
	ld.local.u32 	%r6918, [%rd34];
	// inline asm
	prmt.b32 %r12464, %r6917, %r6918, %r69;
	// inline asm
	ld.local.u32 	%r6921, [%rd34];
	ld.local.u32 	%r6922, [%rd8];
	// inline asm
	prmt.b32 %r12465, %r6921, %r6922, %r69;
	// inline asm
	ld.local.u32 	%r6925, [%rd8];
	ld.local.u32 	%r6926, [%rd33+8];
	// inline asm
	prmt.b32 %r12458, %r6925, %r6926, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7055, %r7056}, [%rd33+4];
	// inline asm
	prmt.b32 %r12459, %r7056, %r7055, %r69;
	// inline asm
	ld.local.u32 	%r6933, [%rd33+4];
	ld.local.u32 	%r6934, [%rd33];
	// inline asm
	prmt.b32 %r12460, %r6933, %r6934, %r69;
	// inline asm
	ld.local.u32 	%r6937, [%rd33];
	ld.local.u32 	%r6938, [%rd7];
	// inline asm
	prmt.b32 %r12461, %r6937, %r6938, %r69;
	// inline asm
	ld.local.u32 	%r6941, [%rd7];
	ld.local.u32 	%r6942, [%rd32+8];
	// inline asm
	prmt.b32 %r12454, %r6941, %r6942, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7057, %r7058}, [%rd32+4];
	// inline asm
	prmt.b32 %r12455, %r7058, %r7057, %r69;
	// inline asm
	ld.local.u32 	%r6949, [%rd32+4];
	ld.local.u32 	%r6950, [%rd32];
	// inline asm
	prmt.b32 %r12456, %r6949, %r6950, %r69;
	// inline asm
	ld.local.u32 	%r6953, [%rd32];
	ld.local.u32 	%r6954, [%rd6];
	// inline asm
	prmt.b32 %r12457, %r6953, %r6954, %r69;
	// inline asm
	ld.local.u32 	%r6957, [%rd6];
	ld.local.u32 	%r6958, [%rd31+8];
	// inline asm
	prmt.b32 %r12450, %r6957, %r6958, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7059, %r7060}, [%rd31+4];
	// inline asm
	prmt.b32 %r12451, %r7060, %r7059, %r69;
	// inline asm
	ld.local.u32 	%r6965, [%rd31+4];
	ld.local.u32 	%r6966, [%rd31];
	// inline asm
	prmt.b32 %r12452, %r6965, %r6966, %r69;
	// inline asm
	ld.local.u32 	%r6969, [%rd31];
	ld.local.u32 	%r6970, [%rd5];
	// inline asm
	prmt.b32 %r12453, %r6969, %r6970, %r69;
	// inline asm
	ld.local.u32 	%r6973, [%rd5];
	ld.local.u32 	%r6974, [%rd30+8];
	// inline asm
	prmt.b32 %r12446, %r6973, %r6974, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7061, %r7062}, [%rd30+4];
	// inline asm
	prmt.b32 %r12447, %r7062, %r7061, %r69;
	// inline asm
	ld.local.u32 	%r6981, [%rd30+4];
	ld.local.u32 	%r6982, [%rd30];
	// inline asm
	prmt.b32 %r12448, %r6981, %r6982, %r69;
	// inline asm
	ld.local.u32 	%r6985, [%rd30];
	ld.local.u32 	%r6986, [%rd4];
	// inline asm
	prmt.b32 %r12449, %r6985, %r6986, %r69;
	// inline asm
	ld.local.u32 	%r6989, [%rd4];
	ld.local.u32 	%r6990, [%rd29+8];
	// inline asm
	prmt.b32 %r6988, %r6989, %r6990, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r6988;
	ld.local.v2.u32 	{%r7063, %r7064}, [%rd29+4];
	// inline asm
	prmt.b32 %r6992, %r7064, %r7063, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r6992;
	ld.local.u32 	%r6997, [%rd29+4];
	ld.local.u32 	%r6998, [%rd29];
	// inline asm
	prmt.b32 %r6996, %r6997, %r6998, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r6996;
	ld.local.u32 	%r7001, [%rd29];
	ld.local.u32 	%r7002, [%rd3];
	// inline asm
	prmt.b32 %r7000, %r7001, %r7002, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r7000;
	ld.local.u32 	%r7005, [%rd3];
	ld.local.u32 	%r7006, [%rd28+8];
	// inline asm
	prmt.b32 %r7004, %r7005, %r7006, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r7004;
	ld.local.v2.u32 	{%r7065, %r7066}, [%rd28+4];
	// inline asm
	prmt.b32 %r7008, %r7066, %r7065, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r7008;
	ld.local.u32 	%r7013, [%rd28+4];
	ld.local.u32 	%r7014, [%rd28];
	// inline asm
	prmt.b32 %r7012, %r7013, %r7014, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r7012;
	ld.local.u32 	%r7017, [%rd28];
	ld.local.u32 	%r7018, [%rd2];
	// inline asm
	prmt.b32 %r7016, %r7017, %r7018, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r7016;
	ld.local.u32 	%r7021, [%rd2];
	ld.local.u32 	%r7022, [%rd27+8];
	// inline asm
	prmt.b32 %r7020, %r7021, %r7022, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r7020;
	ld.local.v2.u32 	{%r7067, %r7068}, [%rd27+4];
	// inline asm
	prmt.b32 %r7024, %r7068, %r7067, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r7024;
	ld.local.u32 	%r7029, [%rd27+4];
	ld.local.u32 	%r7030, [%rd27];
	// inline asm
	prmt.b32 %r7028, %r7029, %r7030, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r7028;
	ld.local.u32 	%r7033, [%rd27];
	ld.local.u32 	%r7034, [%rd1];
	// inline asm
	prmt.b32 %r7032, %r7033, %r7034, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r7032;
	ld.local.u32 	%r7037, [%rd1];
	// inline asm
	prmt.b32 %r7036, %r7037, %r12445, %r69;
	// inline asm
	st.local.v2.u32 	[%rd31+4], {%r12445, %r7036};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	bra.uni 	BB3_408;

BB3_351:
	setp.eq.s32	%p228, %r5047, 11;
	@%p228 bra 	BB3_352;
	bra.uni 	BB3_413;

BB3_352:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12454, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8377, %r8378}, [%rd34+4];
	// inline asm
	prmt.b32 %r12455, %r8378, %r8377, %r69;
	// inline asm
	ld.local.u32 	%r8233, [%rd34+4];
	ld.local.u32 	%r8234, [%rd34];
	// inline asm
	prmt.b32 %r12456, %r8233, %r8234, %r69;
	// inline asm
	ld.local.u32 	%r8237, [%rd34];
	ld.local.u32 	%r8238, [%rd8];
	// inline asm
	prmt.b32 %r12457, %r8237, %r8238, %r69;
	// inline asm
	ld.local.u32 	%r8241, [%rd8];
	ld.local.u32 	%r8242, [%rd33+8];
	// inline asm
	prmt.b32 %r12450, %r8241, %r8242, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8379, %r8380}, [%rd33+4];
	// inline asm
	prmt.b32 %r12451, %r8380, %r8379, %r69;
	// inline asm
	ld.local.u32 	%r8249, [%rd33+4];
	ld.local.u32 	%r8250, [%rd33];
	// inline asm
	prmt.b32 %r12452, %r8249, %r8250, %r69;
	// inline asm
	ld.local.u32 	%r8253, [%rd33];
	ld.local.u32 	%r8254, [%rd7];
	// inline asm
	prmt.b32 %r12453, %r8253, %r8254, %r69;
	// inline asm
	ld.local.u32 	%r8257, [%rd7];
	ld.local.u32 	%r8258, [%rd32+8];
	// inline asm
	prmt.b32 %r12446, %r8257, %r8258, %r69;
	// inline asm
	ld.local.v2.u32 	{%r8381, %r8382}, [%rd32+4];
	// inline asm
	prmt.b32 %r12447, %r8382, %r8381, %r69;
	// inline asm
	ld.local.u32 	%r8265, [%rd32+4];
	ld.local.u32 	%r8266, [%rd32];
	// inline asm
	prmt.b32 %r12448, %r8265, %r8266, %r69;
	// inline asm
	ld.local.u32 	%r8269, [%rd32];
	ld.local.u32 	%r8270, [%rd6];
	// inline asm
	prmt.b32 %r12449, %r8269, %r8270, %r69;
	// inline asm
	ld.local.u32 	%r8273, [%rd6];
	ld.local.u32 	%r8274, [%rd31+8];
	// inline asm
	prmt.b32 %r8272, %r8273, %r8274, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r8272;
	ld.local.v2.u32 	{%r8383, %r8384}, [%rd31+4];
	// inline asm
	prmt.b32 %r8276, %r8384, %r8383, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r8276;
	ld.local.u32 	%r8281, [%rd31+4];
	ld.local.u32 	%r8282, [%rd31];
	// inline asm
	prmt.b32 %r8280, %r8281, %r8282, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r8280;
	ld.local.u32 	%r8285, [%rd31];
	ld.local.u32 	%r8286, [%rd5];
	// inline asm
	prmt.b32 %r8284, %r8285, %r8286, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r8284;
	ld.local.u32 	%r8289, [%rd5];
	ld.local.u32 	%r8290, [%rd30+8];
	// inline asm
	prmt.b32 %r8288, %r8289, %r8290, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r8288;
	ld.local.v2.u32 	{%r8385, %r8386}, [%rd30+4];
	// inline asm
	prmt.b32 %r8292, %r8386, %r8385, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r8292;
	ld.local.u32 	%r8297, [%rd30+4];
	ld.local.u32 	%r8298, [%rd30];
	// inline asm
	prmt.b32 %r8296, %r8297, %r8298, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r8296;
	ld.local.u32 	%r8301, [%rd30];
	ld.local.u32 	%r8302, [%rd4];
	// inline asm
	prmt.b32 %r8300, %r8301, %r8302, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r8300;
	ld.local.u32 	%r8305, [%rd4];
	ld.local.u32 	%r8306, [%rd29+8];
	// inline asm
	prmt.b32 %r8304, %r8305, %r8306, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r8304;
	ld.local.v2.u32 	{%r8387, %r8388}, [%rd29+4];
	// inline asm
	prmt.b32 %r8308, %r8388, %r8387, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r8308;
	ld.local.u32 	%r8313, [%rd29+4];
	ld.local.u32 	%r8314, [%rd29];
	// inline asm
	prmt.b32 %r8312, %r8313, %r8314, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r8312;
	ld.local.u32 	%r8317, [%rd29];
	ld.local.u32 	%r8318, [%rd3];
	// inline asm
	prmt.b32 %r8316, %r8317, %r8318, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r8316;
	ld.local.u32 	%r8321, [%rd3];
	ld.local.u32 	%r8322, [%rd28+8];
	// inline asm
	prmt.b32 %r8320, %r8321, %r8322, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r8320;
	ld.local.v2.u32 	{%r8389, %r8390}, [%rd28+4];
	// inline asm
	prmt.b32 %r8324, %r8390, %r8389, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r8324;
	ld.local.u32 	%r8329, [%rd28+4];
	ld.local.u32 	%r8330, [%rd28];
	// inline asm
	prmt.b32 %r8328, %r8329, %r8330, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r8328;
	ld.local.u32 	%r8333, [%rd28];
	ld.local.u32 	%r8334, [%rd2];
	// inline asm
	prmt.b32 %r8332, %r8333, %r8334, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r8332;
	ld.local.u32 	%r8337, [%rd2];
	ld.local.u32 	%r8338, [%rd27+8];
	// inline asm
	prmt.b32 %r8336, %r8337, %r8338, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r8336;
	ld.local.v2.u32 	{%r8391, %r8392}, [%rd27+4];
	// inline asm
	prmt.b32 %r8340, %r8392, %r8391, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r8340;
	ld.local.u32 	%r8345, [%rd27+4];
	ld.local.u32 	%r8346, [%rd27];
	// inline asm
	prmt.b32 %r8344, %r8345, %r8346, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r8344;
	ld.local.u32 	%r8349, [%rd27];
	ld.local.u32 	%r8350, [%rd1];
	// inline asm
	prmt.b32 %r8348, %r8349, %r8350, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r8348;
	ld.local.u32 	%r8353, [%rd1];
	// inline asm
	prmt.b32 %r8352, %r8353, %r12445, %r69;
	// inline asm
	st.local.v2.u32 	[%rd29+4], {%r12445, %r8352};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	bra.uni 	BB3_406;

BB3_382:
	setp.eq.s32	%p205, %r5047, 27;
	@%p205 bra 	BB3_383;
	bra.uni 	BB3_413;

BB3_383:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12470, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5793, %r5794}, [%rd34+4];
	// inline asm
	prmt.b32 %r12471, %r5794, %r5793, %r69;
	// inline asm
	ld.local.u32 	%r5665, [%rd34+4];
	ld.local.u32 	%r5666, [%rd34];
	// inline asm
	prmt.b32 %r12472, %r5665, %r5666, %r69;
	// inline asm
	ld.local.u32 	%r5669, [%rd34];
	ld.local.u32 	%r5670, [%rd8];
	// inline asm
	prmt.b32 %r12473, %r5669, %r5670, %r69;
	// inline asm
	ld.local.u32 	%r5673, [%rd8];
	ld.local.u32 	%r5674, [%rd33+8];
	// inline asm
	prmt.b32 %r12466, %r5673, %r5674, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5795, %r5796}, [%rd33+4];
	// inline asm
	prmt.b32 %r12467, %r5796, %r5795, %r69;
	// inline asm
	ld.local.u32 	%r5681, [%rd33+4];
	ld.local.u32 	%r5682, [%rd33];
	// inline asm
	prmt.b32 %r12468, %r5681, %r5682, %r69;
	// inline asm
	ld.local.u32 	%r5685, [%rd33];
	ld.local.u32 	%r5686, [%rd7];
	// inline asm
	prmt.b32 %r12469, %r5685, %r5686, %r69;
	// inline asm
	ld.local.u32 	%r5689, [%rd7];
	ld.local.u32 	%r5690, [%rd32+8];
	// inline asm
	prmt.b32 %r12462, %r5689, %r5690, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5797, %r5798}, [%rd32+4];
	// inline asm
	prmt.b32 %r12463, %r5798, %r5797, %r69;
	// inline asm
	ld.local.u32 	%r5697, [%rd32+4];
	ld.local.u32 	%r5698, [%rd32];
	// inline asm
	prmt.b32 %r12464, %r5697, %r5698, %r69;
	// inline asm
	ld.local.u32 	%r5701, [%rd32];
	ld.local.u32 	%r5702, [%rd6];
	// inline asm
	prmt.b32 %r12465, %r5701, %r5702, %r69;
	// inline asm
	ld.local.u32 	%r5705, [%rd6];
	ld.local.u32 	%r5706, [%rd31+8];
	// inline asm
	prmt.b32 %r12458, %r5705, %r5706, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5799, %r5800}, [%rd31+4];
	// inline asm
	prmt.b32 %r12459, %r5800, %r5799, %r69;
	// inline asm
	ld.local.u32 	%r5713, [%rd31+4];
	ld.local.u32 	%r5714, [%rd31];
	// inline asm
	prmt.b32 %r12460, %r5713, %r5714, %r69;
	// inline asm
	ld.local.u32 	%r5717, [%rd31];
	ld.local.u32 	%r5718, [%rd5];
	// inline asm
	prmt.b32 %r12461, %r5717, %r5718, %r69;
	// inline asm
	ld.local.u32 	%r5721, [%rd5];
	ld.local.u32 	%r5722, [%rd30+8];
	// inline asm
	prmt.b32 %r12454, %r5721, %r5722, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5801, %r5802}, [%rd30+4];
	// inline asm
	prmt.b32 %r12455, %r5802, %r5801, %r69;
	// inline asm
	ld.local.u32 	%r5729, [%rd30+4];
	ld.local.u32 	%r5730, [%rd30];
	// inline asm
	prmt.b32 %r12456, %r5729, %r5730, %r69;
	// inline asm
	ld.local.u32 	%r5733, [%rd30];
	ld.local.u32 	%r5734, [%rd4];
	// inline asm
	prmt.b32 %r12457, %r5733, %r5734, %r69;
	// inline asm
	ld.local.u32 	%r5737, [%rd4];
	ld.local.u32 	%r5738, [%rd29+8];
	// inline asm
	prmt.b32 %r12450, %r5737, %r5738, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5803, %r5804}, [%rd29+4];
	// inline asm
	prmt.b32 %r12451, %r5804, %r5803, %r69;
	// inline asm
	ld.local.u32 	%r5745, [%rd29+4];
	ld.local.u32 	%r5746, [%rd29];
	// inline asm
	prmt.b32 %r12452, %r5745, %r5746, %r69;
	// inline asm
	ld.local.u32 	%r5749, [%rd29];
	ld.local.u32 	%r5750, [%rd3];
	// inline asm
	prmt.b32 %r12453, %r5749, %r5750, %r69;
	// inline asm
	ld.local.u32 	%r5753, [%rd3];
	ld.local.u32 	%r5754, [%rd28+8];
	// inline asm
	prmt.b32 %r12446, %r5753, %r5754, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5805, %r5806}, [%rd28+4];
	// inline asm
	prmt.b32 %r12447, %r5806, %r5805, %r69;
	// inline asm
	ld.local.u32 	%r5761, [%rd28+4];
	ld.local.u32 	%r5762, [%rd28];
	// inline asm
	prmt.b32 %r12448, %r5761, %r5762, %r69;
	// inline asm
	ld.local.u32 	%r5765, [%rd28];
	ld.local.u32 	%r5766, [%rd2];
	// inline asm
	prmt.b32 %r12449, %r5765, %r5766, %r69;
	// inline asm
	ld.local.u32 	%r5769, [%rd2];
	ld.local.u32 	%r5770, [%rd27+8];
	// inline asm
	prmt.b32 %r5768, %r5769, %r5770, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r5768;
	ld.local.v2.u32 	{%r5807, %r5808}, [%rd27+4];
	// inline asm
	prmt.b32 %r5772, %r5808, %r5807, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r5772;
	ld.local.u32 	%r5777, [%rd27+4];
	ld.local.u32 	%r5778, [%rd27];
	// inline asm
	prmt.b32 %r5776, %r5777, %r5778, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r5776;
	ld.local.u32 	%r5781, [%rd27];
	ld.local.u32 	%r5782, [%rd1];
	// inline asm
	prmt.b32 %r5780, %r5781, %r5782, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r5780;
	ld.local.u32 	%r5785, [%rd1];
	// inline asm
	prmt.b32 %r5784, %r5785, %r12445, %r69;
	// inline asm
	st.local.v2.u32 	[%rd33+4], {%r12445, %r5784};
	st.local.u32 	[%rd33], %r12445;
	st.local.u32 	[%rd7], %r12445;
	st.local.v2.u32 	[%rd32+4], {%r12445, %r12445};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	bra.uni 	BB3_410;

BB3_343:
	setp.eq.s32	%p234, %r5047, 7;
	@%p234 bra 	BB3_344;
	bra.uni 	BB3_413;

BB3_344:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12450, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9063, %r9064}, [%rd34+4];
	// inline asm
	prmt.b32 %r12451, %r9064, %r9063, %r69;
	// inline asm
	ld.local.u32 	%r8915, [%rd34+4];
	ld.local.u32 	%r8916, [%rd34];
	// inline asm
	prmt.b32 %r12452, %r8915, %r8916, %r69;
	// inline asm
	ld.local.u32 	%r8919, [%rd34];
	ld.local.u32 	%r8920, [%rd8];
	// inline asm
	prmt.b32 %r12453, %r8919, %r8920, %r69;
	// inline asm
	ld.local.u32 	%r8923, [%rd8];
	ld.local.u32 	%r8924, [%rd33+8];
	// inline asm
	prmt.b32 %r12446, %r8923, %r8924, %r69;
	// inline asm
	ld.local.v2.u32 	{%r9065, %r9066}, [%rd33+4];
	// inline asm
	prmt.b32 %r12447, %r9066, %r9065, %r69;
	// inline asm
	ld.local.u32 	%r8931, [%rd33+4];
	ld.local.u32 	%r8932, [%rd33];
	// inline asm
	prmt.b32 %r12448, %r8931, %r8932, %r69;
	// inline asm
	ld.local.u32 	%r8935, [%rd33];
	ld.local.u32 	%r8936, [%rd7];
	// inline asm
	prmt.b32 %r12449, %r8935, %r8936, %r69;
	// inline asm
	ld.local.u32 	%r8939, [%rd7];
	ld.local.u32 	%r8940, [%rd32+8];
	// inline asm
	prmt.b32 %r8938, %r8939, %r8940, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r8938;
	ld.local.v2.u32 	{%r9067, %r9068}, [%rd32+4];
	// inline asm
	prmt.b32 %r8942, %r9068, %r9067, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r8942;
	ld.local.u32 	%r8947, [%rd32+4];
	ld.local.u32 	%r8948, [%rd32];
	// inline asm
	prmt.b32 %r8946, %r8947, %r8948, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r8946;
	ld.local.u32 	%r8951, [%rd32];
	ld.local.u32 	%r8952, [%rd6];
	// inline asm
	prmt.b32 %r8950, %r8951, %r8952, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r8950;
	ld.local.u32 	%r8955, [%rd6];
	ld.local.u32 	%r8956, [%rd31+8];
	// inline asm
	prmt.b32 %r8954, %r8955, %r8956, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r8954;
	ld.local.v2.u32 	{%r9069, %r9070}, [%rd31+4];
	// inline asm
	prmt.b32 %r8958, %r9070, %r9069, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r8958;
	ld.local.u32 	%r8963, [%rd31+4];
	ld.local.u32 	%r8964, [%rd31];
	// inline asm
	prmt.b32 %r8962, %r8963, %r8964, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r8962;
	ld.local.u32 	%r8967, [%rd31];
	ld.local.u32 	%r8968, [%rd5];
	// inline asm
	prmt.b32 %r8966, %r8967, %r8968, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r8966;
	ld.local.u32 	%r8971, [%rd5];
	ld.local.u32 	%r8972, [%rd30+8];
	// inline asm
	prmt.b32 %r8970, %r8971, %r8972, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r8970;
	ld.local.v2.u32 	{%r9071, %r9072}, [%rd30+4];
	// inline asm
	prmt.b32 %r8974, %r9072, %r9071, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r8974;
	ld.local.u32 	%r8979, [%rd30+4];
	ld.local.u32 	%r8980, [%rd30];
	// inline asm
	prmt.b32 %r8978, %r8979, %r8980, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r8978;
	ld.local.u32 	%r8983, [%rd30];
	ld.local.u32 	%r8984, [%rd4];
	// inline asm
	prmt.b32 %r8982, %r8983, %r8984, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r8982;
	ld.local.u32 	%r8987, [%rd4];
	ld.local.u32 	%r8988, [%rd29+8];
	// inline asm
	prmt.b32 %r8986, %r8987, %r8988, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r8986;
	ld.local.v2.u32 	{%r9073, %r9074}, [%rd29+4];
	// inline asm
	prmt.b32 %r8990, %r9074, %r9073, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r8990;
	ld.local.u32 	%r8995, [%rd29+4];
	ld.local.u32 	%r8996, [%rd29];
	// inline asm
	prmt.b32 %r8994, %r8995, %r8996, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r8994;
	ld.local.u32 	%r8999, [%rd29];
	ld.local.u32 	%r9000, [%rd3];
	// inline asm
	prmt.b32 %r8998, %r8999, %r9000, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r8998;
	ld.local.u32 	%r9003, [%rd3];
	ld.local.u32 	%r9004, [%rd28+8];
	// inline asm
	prmt.b32 %r9002, %r9003, %r9004, %r69;
	// inline asm
	st.local.u32 	[%rd30+8], %r9002;
	ld.local.v2.u32 	{%r9075, %r9076}, [%rd28+4];
	// inline asm
	prmt.b32 %r9006, %r9076, %r9075, %r69;
	// inline asm
	st.local.u32 	[%rd30+4], %r9006;
	ld.local.u32 	%r9011, [%rd28+4];
	ld.local.u32 	%r9012, [%rd28];
	// inline asm
	prmt.b32 %r9010, %r9011, %r9012, %r69;
	// inline asm
	st.local.u32 	[%rd30], %r9010;
	ld.local.u32 	%r9015, [%rd28];
	ld.local.u32 	%r9016, [%rd2];
	// inline asm
	prmt.b32 %r9014, %r9015, %r9016, %r69;
	// inline asm
	st.local.u32 	[%rd4], %r9014;
	ld.local.u32 	%r9019, [%rd2];
	ld.local.u32 	%r9020, [%rd27+8];
	// inline asm
	prmt.b32 %r9018, %r9019, %r9020, %r69;
	// inline asm
	st.local.u32 	[%rd29+8], %r9018;
	ld.local.v2.u32 	{%r9077, %r9078}, [%rd27+4];
	// inline asm
	prmt.b32 %r9022, %r9078, %r9077, %r69;
	// inline asm
	st.local.u32 	[%rd29+4], %r9022;
	ld.local.u32 	%r9027, [%rd27+4];
	ld.local.u32 	%r9028, [%rd27];
	// inline asm
	prmt.b32 %r9026, %r9027, %r9028, %r69;
	// inline asm
	st.local.u32 	[%rd29], %r9026;
	ld.local.u32 	%r9031, [%rd27];
	ld.local.u32 	%r9032, [%rd1];
	// inline asm
	prmt.b32 %r9030, %r9031, %r9032, %r69;
	// inline asm
	st.local.u32 	[%rd3], %r9030;
	ld.local.u32 	%r9035, [%rd1];
	// inline asm
	prmt.b32 %r9034, %r9035, %r12445, %r69;
	// inline asm
	st.local.v2.u32 	[%rd28+4], {%r12445, %r9034};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;

BB3_405:
	mov.u32 	%r12454, %r12445;
	mov.u32 	%r12455, %r12445;
	mov.u32 	%r12456, %r12445;
	mov.u32 	%r12457, %r12445;

BB3_406:
	mov.u32 	%r12458, %r12445;
	mov.u32 	%r12459, %r12445;
	mov.u32 	%r12460, %r12445;
	mov.u32 	%r12461, %r12445;

BB3_407:
	mov.u32 	%r12462, %r12445;
	mov.u32 	%r12463, %r12445;
	mov.u32 	%r12464, %r12445;
	mov.u32 	%r12465, %r12445;

BB3_408:
	mov.u32 	%r12466, %r12445;
	mov.u32 	%r12467, %r12445;
	mov.u32 	%r12468, %r12445;
	mov.u32 	%r12469, %r12445;

BB3_409:
	mov.u32 	%r12470, %r12445;
	mov.u32 	%r12471, %r12445;
	mov.u32 	%r12472, %r12445;
	mov.u32 	%r12473, %r12445;

BB3_410:
	mov.u32 	%r12474, %r12445;
	mov.u32 	%r12475, %r12445;
	mov.u32 	%r12476, %r12445;
	mov.u32 	%r12477, %r12445;
	bra.uni 	BB3_415;

BB3_374:
	setp.eq.s32	%p211, %r5047, 23;
	@%p211 bra 	BB3_375;
	bra.uni 	BB3_413;

BB3_375:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12466, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6415, %r6416}, [%rd34+4];
	// inline asm
	prmt.b32 %r12467, %r6416, %r6415, %r69;
	// inline asm
	ld.local.u32 	%r6283, [%rd34+4];
	ld.local.u32 	%r6284, [%rd34];
	// inline asm
	prmt.b32 %r12468, %r6283, %r6284, %r69;
	// inline asm
	ld.local.u32 	%r6287, [%rd34];
	ld.local.u32 	%r6288, [%rd8];
	// inline asm
	prmt.b32 %r12469, %r6287, %r6288, %r69;
	// inline asm
	ld.local.u32 	%r6291, [%rd8];
	ld.local.u32 	%r6292, [%rd33+8];
	// inline asm
	prmt.b32 %r12462, %r6291, %r6292, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6417, %r6418}, [%rd33+4];
	// inline asm
	prmt.b32 %r12463, %r6418, %r6417, %r69;
	// inline asm
	ld.local.u32 	%r6299, [%rd33+4];
	ld.local.u32 	%r6300, [%rd33];
	// inline asm
	prmt.b32 %r12464, %r6299, %r6300, %r69;
	// inline asm
	ld.local.u32 	%r6303, [%rd33];
	ld.local.u32 	%r6304, [%rd7];
	// inline asm
	prmt.b32 %r12465, %r6303, %r6304, %r69;
	// inline asm
	ld.local.u32 	%r6307, [%rd7];
	ld.local.u32 	%r6308, [%rd32+8];
	// inline asm
	prmt.b32 %r12458, %r6307, %r6308, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6419, %r6420}, [%rd32+4];
	// inline asm
	prmt.b32 %r12459, %r6420, %r6419, %r69;
	// inline asm
	ld.local.u32 	%r6315, [%rd32+4];
	ld.local.u32 	%r6316, [%rd32];
	// inline asm
	prmt.b32 %r12460, %r6315, %r6316, %r69;
	// inline asm
	ld.local.u32 	%r6319, [%rd32];
	ld.local.u32 	%r6320, [%rd6];
	// inline asm
	prmt.b32 %r12461, %r6319, %r6320, %r69;
	// inline asm
	ld.local.u32 	%r6323, [%rd6];
	ld.local.u32 	%r6324, [%rd31+8];
	// inline asm
	prmt.b32 %r12454, %r6323, %r6324, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6421, %r6422}, [%rd31+4];
	// inline asm
	prmt.b32 %r12455, %r6422, %r6421, %r69;
	// inline asm
	ld.local.u32 	%r6331, [%rd31+4];
	ld.local.u32 	%r6332, [%rd31];
	// inline asm
	prmt.b32 %r12456, %r6331, %r6332, %r69;
	// inline asm
	ld.local.u32 	%r6335, [%rd31];
	ld.local.u32 	%r6336, [%rd5];
	// inline asm
	prmt.b32 %r12457, %r6335, %r6336, %r69;
	// inline asm
	ld.local.u32 	%r6339, [%rd5];
	ld.local.u32 	%r6340, [%rd30+8];
	// inline asm
	prmt.b32 %r12450, %r6339, %r6340, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6423, %r6424}, [%rd30+4];
	// inline asm
	prmt.b32 %r12451, %r6424, %r6423, %r69;
	// inline asm
	ld.local.u32 	%r6347, [%rd30+4];
	ld.local.u32 	%r6348, [%rd30];
	// inline asm
	prmt.b32 %r12452, %r6347, %r6348, %r69;
	// inline asm
	ld.local.u32 	%r6351, [%rd30];
	ld.local.u32 	%r6352, [%rd4];
	// inline asm
	prmt.b32 %r12453, %r6351, %r6352, %r69;
	// inline asm
	ld.local.u32 	%r6355, [%rd4];
	ld.local.u32 	%r6356, [%rd29+8];
	// inline asm
	prmt.b32 %r12446, %r6355, %r6356, %r69;
	// inline asm
	ld.local.v2.u32 	{%r6425, %r6426}, [%rd29+4];
	// inline asm
	prmt.b32 %r12447, %r6426, %r6425, %r69;
	// inline asm
	ld.local.u32 	%r6363, [%rd29+4];
	ld.local.u32 	%r6364, [%rd29];
	// inline asm
	prmt.b32 %r12448, %r6363, %r6364, %r69;
	// inline asm
	ld.local.u32 	%r6367, [%rd29];
	ld.local.u32 	%r6368, [%rd3];
	// inline asm
	prmt.b32 %r12449, %r6367, %r6368, %r69;
	// inline asm
	ld.local.u32 	%r6371, [%rd3];
	ld.local.u32 	%r6372, [%rd28+8];
	// inline asm
	prmt.b32 %r6370, %r6371, %r6372, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r6370;
	ld.local.v2.u32 	{%r6427, %r6428}, [%rd28+4];
	// inline asm
	prmt.b32 %r6374, %r6428, %r6427, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r6374;
	ld.local.u32 	%r6379, [%rd28+4];
	ld.local.u32 	%r6380, [%rd28];
	// inline asm
	prmt.b32 %r6378, %r6379, %r6380, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r6378;
	ld.local.u32 	%r6383, [%rd28];
	ld.local.u32 	%r6384, [%rd2];
	// inline asm
	prmt.b32 %r6382, %r6383, %r6384, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r6382;
	ld.local.u32 	%r6387, [%rd2];
	ld.local.u32 	%r6388, [%rd27+8];
	// inline asm
	prmt.b32 %r6386, %r6387, %r6388, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r6386;
	ld.local.v2.u32 	{%r6429, %r6430}, [%rd27+4];
	// inline asm
	prmt.b32 %r6390, %r6430, %r6429, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r6390;
	ld.local.u32 	%r6395, [%rd27+4];
	ld.local.u32 	%r6396, [%rd27];
	// inline asm
	prmt.b32 %r6394, %r6395, %r6396, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r6394;
	ld.local.u32 	%r6399, [%rd27];
	ld.local.u32 	%r6400, [%rd1];
	// inline asm
	prmt.b32 %r6398, %r6399, %r6400, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r6398;
	ld.local.u32 	%r6403, [%rd1];
	// inline asm
	prmt.b32 %r6402, %r6403, %r12445, %r69;
	// inline asm
	st.local.v2.u32 	[%rd32+4], {%r12445, %r6402};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	bra.uni 	BB3_409;

BB3_358:
	setp.eq.s32	%p223, %r5047, 15;
	@%p223 bra 	BB3_359;
	bra.uni 	BB3_413;

BB3_359:
	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12458, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7707, %r7708}, [%rd34+4];
	// inline asm
	prmt.b32 %r12459, %r7708, %r7707, %r69;
	// inline asm
	ld.local.u32 	%r7567, [%rd34+4];
	ld.local.u32 	%r7568, [%rd34];
	// inline asm
	prmt.b32 %r12460, %r7567, %r7568, %r69;
	// inline asm
	ld.local.u32 	%r7571, [%rd34];
	ld.local.u32 	%r7572, [%rd8];
	// inline asm
	prmt.b32 %r12461, %r7571, %r7572, %r69;
	// inline asm
	ld.local.u32 	%r7575, [%rd8];
	ld.local.u32 	%r7576, [%rd33+8];
	// inline asm
	prmt.b32 %r12454, %r7575, %r7576, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7709, %r7710}, [%rd33+4];
	// inline asm
	prmt.b32 %r12455, %r7710, %r7709, %r69;
	// inline asm
	ld.local.u32 	%r7583, [%rd33+4];
	ld.local.u32 	%r7584, [%rd33];
	// inline asm
	prmt.b32 %r12456, %r7583, %r7584, %r69;
	// inline asm
	ld.local.u32 	%r7587, [%rd33];
	ld.local.u32 	%r7588, [%rd7];
	// inline asm
	prmt.b32 %r12457, %r7587, %r7588, %r69;
	// inline asm
	ld.local.u32 	%r7591, [%rd7];
	ld.local.u32 	%r7592, [%rd32+8];
	// inline asm
	prmt.b32 %r12450, %r7591, %r7592, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7711, %r7712}, [%rd32+4];
	// inline asm
	prmt.b32 %r12451, %r7712, %r7711, %r69;
	// inline asm
	ld.local.u32 	%r7599, [%rd32+4];
	ld.local.u32 	%r7600, [%rd32];
	// inline asm
	prmt.b32 %r12452, %r7599, %r7600, %r69;
	// inline asm
	ld.local.u32 	%r7603, [%rd32];
	ld.local.u32 	%r7604, [%rd6];
	// inline asm
	prmt.b32 %r12453, %r7603, %r7604, %r69;
	// inline asm
	ld.local.u32 	%r7607, [%rd6];
	ld.local.u32 	%r7608, [%rd31+8];
	// inline asm
	prmt.b32 %r12446, %r7607, %r7608, %r69;
	// inline asm
	ld.local.v2.u32 	{%r7713, %r7714}, [%rd31+4];
	// inline asm
	prmt.b32 %r12447, %r7714, %r7713, %r69;
	// inline asm
	ld.local.u32 	%r7615, [%rd31+4];
	ld.local.u32 	%r7616, [%rd31];
	// inline asm
	prmt.b32 %r12448, %r7615, %r7616, %r69;
	// inline asm
	ld.local.u32 	%r7619, [%rd31];
	ld.local.u32 	%r7620, [%rd5];
	// inline asm
	prmt.b32 %r12449, %r7619, %r7620, %r69;
	// inline asm
	ld.local.u32 	%r7623, [%rd5];
	ld.local.u32 	%r7624, [%rd30+8];
	// inline asm
	prmt.b32 %r7622, %r7623, %r7624, %r69;
	// inline asm
	st.local.u32 	[%rd34+8], %r7622;
	ld.local.v2.u32 	{%r7715, %r7716}, [%rd30+4];
	// inline asm
	prmt.b32 %r7626, %r7716, %r7715, %r69;
	// inline asm
	st.local.u32 	[%rd34+4], %r7626;
	ld.local.u32 	%r7631, [%rd30+4];
	ld.local.u32 	%r7632, [%rd30];
	// inline asm
	prmt.b32 %r7630, %r7631, %r7632, %r69;
	// inline asm
	st.local.u32 	[%rd34], %r7630;
	ld.local.u32 	%r7635, [%rd30];
	ld.local.u32 	%r7636, [%rd4];
	// inline asm
	prmt.b32 %r7634, %r7635, %r7636, %r69;
	// inline asm
	st.local.u32 	[%rd8], %r7634;
	ld.local.u32 	%r7639, [%rd4];
	ld.local.u32 	%r7640, [%rd29+8];
	// inline asm
	prmt.b32 %r7638, %r7639, %r7640, %r69;
	// inline asm
	st.local.u32 	[%rd33+8], %r7638;
	ld.local.v2.u32 	{%r7717, %r7718}, [%rd29+4];
	// inline asm
	prmt.b32 %r7642, %r7718, %r7717, %r69;
	// inline asm
	st.local.u32 	[%rd33+4], %r7642;
	ld.local.u32 	%r7647, [%rd29+4];
	ld.local.u32 	%r7648, [%rd29];
	// inline asm
	prmt.b32 %r7646, %r7647, %r7648, %r69;
	// inline asm
	st.local.u32 	[%rd33], %r7646;
	ld.local.u32 	%r7651, [%rd29];
	ld.local.u32 	%r7652, [%rd3];
	// inline asm
	prmt.b32 %r7650, %r7651, %r7652, %r69;
	// inline asm
	st.local.u32 	[%rd7], %r7650;
	ld.local.u32 	%r7655, [%rd3];
	ld.local.u32 	%r7656, [%rd28+8];
	// inline asm
	prmt.b32 %r7654, %r7655, %r7656, %r69;
	// inline asm
	st.local.u32 	[%rd32+8], %r7654;
	ld.local.v2.u32 	{%r7719, %r7720}, [%rd28+4];
	// inline asm
	prmt.b32 %r7658, %r7720, %r7719, %r69;
	// inline asm
	st.local.u32 	[%rd32+4], %r7658;
	ld.local.u32 	%r7663, [%rd28+4];
	ld.local.u32 	%r7664, [%rd28];
	// inline asm
	prmt.b32 %r7662, %r7663, %r7664, %r69;
	// inline asm
	st.local.u32 	[%rd32], %r7662;
	ld.local.u32 	%r7667, [%rd28];
	ld.local.u32 	%r7668, [%rd2];
	// inline asm
	prmt.b32 %r7666, %r7667, %r7668, %r69;
	// inline asm
	st.local.u32 	[%rd6], %r7666;
	ld.local.u32 	%r7671, [%rd2];
	ld.local.u32 	%r7672, [%rd27+8];
	// inline asm
	prmt.b32 %r7670, %r7671, %r7672, %r69;
	// inline asm
	st.local.u32 	[%rd31+8], %r7670;
	ld.local.v2.u32 	{%r7721, %r7722}, [%rd27+4];
	// inline asm
	prmt.b32 %r7674, %r7722, %r7721, %r69;
	// inline asm
	st.local.u32 	[%rd31+4], %r7674;
	ld.local.u32 	%r7679, [%rd27+4];
	ld.local.u32 	%r7680, [%rd27];
	// inline asm
	prmt.b32 %r7678, %r7679, %r7680, %r69;
	// inline asm
	st.local.u32 	[%rd31], %r7678;
	ld.local.u32 	%r7683, [%rd27];
	ld.local.u32 	%r7684, [%rd1];
	// inline asm
	prmt.b32 %r7682, %r7683, %r7684, %r69;
	// inline asm
	st.local.u32 	[%rd5], %r7682;
	ld.local.u32 	%r7687, [%rd1];
	// inline asm
	prmt.b32 %r7686, %r7687, %r12445, %r69;
	// inline asm
	st.local.v2.u32 	[%rd30+4], {%r12445, %r7686};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	bra.uni 	BB3_407;

BB3_389:
	setp.ne.s32	%p200, %r5047, 31;
	@%p200 bra 	BB3_413;

	mov.u32 	%r12445, 0;
	// inline asm
	prmt.b32 %r12474, %r12445, %r5045, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5187, %r5188}, [%rd34+4];
	// inline asm
	prmt.b32 %r12475, %r5188, %r5187, %r69;
	// inline asm
	ld.local.u32 	%r5063, [%rd34+4];
	ld.local.u32 	%r5064, [%rd34];
	// inline asm
	prmt.b32 %r12476, %r5063, %r5064, %r69;
	// inline asm
	ld.local.u32 	%r5067, [%rd34];
	ld.local.u32 	%r5068, [%rd8];
	// inline asm
	prmt.b32 %r12477, %r5067, %r5068, %r69;
	// inline asm
	ld.local.u32 	%r5071, [%rd8];
	ld.local.u32 	%r5072, [%rd33+8];
	// inline asm
	prmt.b32 %r12470, %r5071, %r5072, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5189, %r5190}, [%rd33+4];
	// inline asm
	prmt.b32 %r12471, %r5190, %r5189, %r69;
	// inline asm
	ld.local.u32 	%r5079, [%rd33+4];
	ld.local.u32 	%r5080, [%rd33];
	// inline asm
	prmt.b32 %r12472, %r5079, %r5080, %r69;
	// inline asm
	ld.local.u32 	%r5083, [%rd33];
	ld.local.u32 	%r5084, [%rd7];
	// inline asm
	prmt.b32 %r12473, %r5083, %r5084, %r69;
	// inline asm
	ld.local.u32 	%r5087, [%rd7];
	ld.local.u32 	%r5088, [%rd32+8];
	// inline asm
	prmt.b32 %r12466, %r5087, %r5088, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5191, %r5192}, [%rd32+4];
	// inline asm
	prmt.b32 %r12467, %r5192, %r5191, %r69;
	// inline asm
	ld.local.u32 	%r5095, [%rd32+4];
	ld.local.u32 	%r5096, [%rd32];
	// inline asm
	prmt.b32 %r12468, %r5095, %r5096, %r69;
	// inline asm
	ld.local.u32 	%r5099, [%rd32];
	ld.local.u32 	%r5100, [%rd6];
	// inline asm
	prmt.b32 %r12469, %r5099, %r5100, %r69;
	// inline asm
	ld.local.u32 	%r5103, [%rd6];
	ld.local.u32 	%r5104, [%rd31+8];
	// inline asm
	prmt.b32 %r12462, %r5103, %r5104, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5193, %r5194}, [%rd31+4];
	// inline asm
	prmt.b32 %r12463, %r5194, %r5193, %r69;
	// inline asm
	ld.local.u32 	%r5111, [%rd31+4];
	ld.local.u32 	%r5112, [%rd31];
	// inline asm
	prmt.b32 %r12464, %r5111, %r5112, %r69;
	// inline asm
	ld.local.u32 	%r5115, [%rd31];
	ld.local.u32 	%r5116, [%rd5];
	// inline asm
	prmt.b32 %r12465, %r5115, %r5116, %r69;
	// inline asm
	ld.local.u32 	%r5119, [%rd5];
	ld.local.u32 	%r5120, [%rd30+8];
	// inline asm
	prmt.b32 %r12458, %r5119, %r5120, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5195, %r5196}, [%rd30+4];
	// inline asm
	prmt.b32 %r12459, %r5196, %r5195, %r69;
	// inline asm
	ld.local.u32 	%r5127, [%rd30+4];
	ld.local.u32 	%r5128, [%rd30];
	// inline asm
	prmt.b32 %r12460, %r5127, %r5128, %r69;
	// inline asm
	ld.local.u32 	%r5131, [%rd30];
	ld.local.u32 	%r5132, [%rd4];
	// inline asm
	prmt.b32 %r12461, %r5131, %r5132, %r69;
	// inline asm
	ld.local.u32 	%r5135, [%rd4];
	ld.local.u32 	%r5136, [%rd29+8];
	// inline asm
	prmt.b32 %r12454, %r5135, %r5136, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5197, %r5198}, [%rd29+4];
	// inline asm
	prmt.b32 %r12455, %r5198, %r5197, %r69;
	// inline asm
	ld.local.u32 	%r5143, [%rd29+4];
	ld.local.u32 	%r5144, [%rd29];
	// inline asm
	prmt.b32 %r12456, %r5143, %r5144, %r69;
	// inline asm
	ld.local.u32 	%r5147, [%rd29];
	ld.local.u32 	%r5148, [%rd3];
	// inline asm
	prmt.b32 %r12457, %r5147, %r5148, %r69;
	// inline asm
	ld.local.u32 	%r5151, [%rd3];
	ld.local.u32 	%r5152, [%rd28+8];
	// inline asm
	prmt.b32 %r12450, %r5151, %r5152, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5199, %r5200}, [%rd28+4];
	// inline asm
	prmt.b32 %r12451, %r5200, %r5199, %r69;
	// inline asm
	ld.local.u32 	%r5159, [%rd28+4];
	ld.local.u32 	%r5160, [%rd28];
	// inline asm
	prmt.b32 %r12452, %r5159, %r5160, %r69;
	// inline asm
	ld.local.u32 	%r5163, [%rd28];
	ld.local.u32 	%r5164, [%rd2];
	// inline asm
	prmt.b32 %r12453, %r5163, %r5164, %r69;
	// inline asm
	ld.local.u32 	%r5167, [%rd2];
	ld.local.u32 	%r5168, [%rd27+8];
	// inline asm
	prmt.b32 %r12446, %r5167, %r5168, %r69;
	// inline asm
	ld.local.v2.u32 	{%r5201, %r5202}, [%rd27+4];
	// inline asm
	prmt.b32 %r12447, %r5202, %r5201, %r69;
	// inline asm
	ld.local.u32 	%r5175, [%rd27+4];
	ld.local.u32 	%r5176, [%rd27];
	// inline asm
	prmt.b32 %r12448, %r5175, %r5176, %r69;
	// inline asm
	ld.local.u32 	%r5179, [%rd27];
	ld.local.u32 	%r5180, [%rd1];
	// inline asm
	prmt.b32 %r12449, %r5179, %r5180, %r69;
	// inline asm
	ld.local.u32 	%r5183, [%rd1];
	// inline asm
	prmt.b32 %r5182, %r5183, %r12445, %r69;
	// inline asm
	st.local.v2.u32 	[%rd34+4], {%r12445, %r5182};
	st.local.u32 	[%rd34], %r12445;
	st.local.u32 	[%rd8], %r12445;
	st.local.v2.u32 	[%rd33+4], {%r12445, %r12445};
	st.local.u32 	[%rd33], %r12445;
	st.local.u32 	[%rd7], %r12445;
	st.local.v2.u32 	[%rd32+4], {%r12445, %r12445};
	st.local.u32 	[%rd32], %r12445;
	st.local.u32 	[%rd6], %r12445;
	st.local.v2.u32 	[%rd31+4], {%r12445, %r12445};
	st.local.u32 	[%rd31], %r12445;
	st.local.u32 	[%rd5], %r12445;
	st.local.v2.u32 	[%rd30+4], {%r12445, %r12445};
	st.local.u32 	[%rd30], %r12445;
	st.local.u32 	[%rd4], %r12445;
	st.local.v2.u32 	[%rd29+4], {%r12445, %r12445};
	st.local.u32 	[%rd29], %r12445;
	st.local.u32 	[%rd3], %r12445;
	st.local.v2.u32 	[%rd28+4], {%r12445, %r12445};
	st.local.u32 	[%rd28], %r12445;
	st.local.u32 	[%rd2], %r12445;
	st.local.v2.u32 	[%rd27+4], {%r12445, %r12445};
	st.local.u32 	[%rd27], %r12445;
	st.local.u32 	[%rd1], %r12445;
	bra.uni 	BB3_415;

BB3_413:
	ld.local.u32 	%r12445, [%rd1];
	mov.u32 	%r12446, 0;
	mov.u32 	%r12447, %r12446;
	mov.u32 	%r12448, %r12446;
	mov.u32 	%r12449, %r12446;

BB3_414:
	mov.u32 	%r12450, %r12446;
	mov.u32 	%r12451, %r12446;
	mov.u32 	%r12452, %r12446;
	mov.u32 	%r12453, %r12446;
	mov.u32 	%r12454, %r12446;
	mov.u32 	%r12455, %r12446;
	mov.u32 	%r12456, %r12446;
	mov.u32 	%r12457, %r12446;
	mov.u32 	%r12458, %r12446;
	mov.u32 	%r12459, %r12446;
	mov.u32 	%r12460, %r12446;
	mov.u32 	%r12461, %r12446;
	mov.u32 	%r12462, %r12446;
	mov.u32 	%r12463, %r12446;
	mov.u32 	%r12464, %r12446;
	mov.u32 	%r12465, %r12446;
	mov.u32 	%r12466, %r12446;
	mov.u32 	%r12467, %r12446;
	mov.u32 	%r12468, %r12446;
	mov.u32 	%r12469, %r12446;
	mov.u32 	%r12470, %r12446;
	mov.u32 	%r12471, %r12446;
	mov.u32 	%r12472, %r12446;
	mov.u32 	%r12473, %r12446;
	mov.u32 	%r12474, %r12446;
	mov.u32 	%r12475, %r12446;
	mov.u32 	%r12476, %r12446;
	mov.u32 	%r12477, %r12446;
	bra.uni 	BB3_415;

BB3_3:
	ld.param.u64 	%rd8771, [m11300_init_param_17];
	ld.param.u32 	%r12406, [m11300_init_param_27];
	add.u64 	%rd8770, %SP, 112;
	add.u64 	%rd8769, %SP, 96;
	add.u64 	%rd8768, %SP, 80;
	add.u64 	%rd8767, %SP, 64;
	add.u64 	%rd8766, %SP, 48;
	add.u64 	%rd8765, %SP, 32;
	add.u64 	%rd8764, %SP, 16;
	add.u64 	%rd8763, %SP, 0;
	add.u64 	%rd8762, %SP, 128;
	// inline asm
	prmt.b32 %r706, %r5, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1], %r706;
	ld.local.u32 	%r709, [%rd27];
	// inline asm
	prmt.b32 %r708, %r709, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd27], %r708;
	ld.local.u32 	%r711, [%rd27+4];
	// inline asm
	prmt.b32 %r710, %r711, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd27+4], %r710;
	ld.local.u32 	%r713, [%rd27+8];
	// inline asm
	prmt.b32 %r712, %r713, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd27+8], %r712;
	ld.local.u32 	%r715, [%rd2];
	// inline asm
	prmt.b32 %r714, %r715, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r714;
	ld.local.u32 	%r717, [%rd28];
	// inline asm
	prmt.b32 %r716, %r717, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28], %r716;
	ld.local.u32 	%r719, [%rd28+4];
	// inline asm
	prmt.b32 %r718, %r719, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28+4], %r718;
	ld.local.u32 	%r721, [%rd28+8];
	// inline asm
	prmt.b32 %r720, %r721, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28+8], %r720;
	ld.local.u32 	%r723, [%rd3];
	// inline asm
	prmt.b32 %r722, %r723, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r722;
	ld.local.u32 	%r725, [%rd29];
	// inline asm
	prmt.b32 %r724, %r725, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29], %r724;
	ld.local.u32 	%r727, [%rd29+4];
	// inline asm
	prmt.b32 %r726, %r727, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29+4], %r726;
	ld.local.u32 	%r729, [%rd29+8];
	// inline asm
	prmt.b32 %r728, %r729, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29+8], %r728;
	ld.local.u32 	%r731, [%rd4];
	// inline asm
	prmt.b32 %r730, %r731, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r730;
	ld.local.u32 	%r733, [%rd30];
	// inline asm
	prmt.b32 %r732, %r733, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30], %r732;
	ld.local.u32 	%r735, [%rd30+4];
	// inline asm
	prmt.b32 %r734, %r735, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30+4], %r734;
	ld.local.u32 	%r737, [%rd30+8];
	// inline asm
	prmt.b32 %r736, %r737, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30+8], %r736;
	ld.local.u32 	%r739, [%rd5];
	// inline asm
	prmt.b32 %r738, %r739, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r738;
	ld.local.u32 	%r741, [%rd31];
	// inline asm
	prmt.b32 %r740, %r741, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31], %r740;
	ld.local.u32 	%r743, [%rd31+4];
	// inline asm
	prmt.b32 %r742, %r743, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31+4], %r742;
	ld.local.u32 	%r745, [%rd31+8];
	// inline asm
	prmt.b32 %r744, %r745, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31+8], %r744;
	ld.local.u32 	%r747, [%rd6];
	// inline asm
	prmt.b32 %r746, %r747, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r746;
	ld.local.u32 	%r749, [%rd32];
	// inline asm
	prmt.b32 %r748, %r749, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32], %r748;
	ld.local.u32 	%r751, [%rd32+4];
	// inline asm
	prmt.b32 %r750, %r751, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32+4], %r750;
	ld.local.u32 	%r753, [%rd32+8];
	// inline asm
	prmt.b32 %r752, %r753, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32+8], %r752;
	ld.local.u32 	%r755, [%rd7];
	// inline asm
	prmt.b32 %r754, %r755, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r754;
	ld.local.u32 	%r757, [%rd33];
	// inline asm
	prmt.b32 %r756, %r757, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33], %r756;
	ld.local.u32 	%r759, [%rd33+4];
	// inline asm
	prmt.b32 %r758, %r759, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33+4], %r758;
	ld.local.u32 	%r761, [%rd33+8];
	// inline asm
	prmt.b32 %r760, %r761, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33+8], %r760;
	ld.local.u32 	%r763, [%rd8];
	// inline asm
	prmt.b32 %r762, %r763, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r762;
	ld.local.u32 	%r765, [%rd34];
	// inline asm
	prmt.b32 %r764, %r765, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34], %r764;
	ld.local.u32 	%r767, [%rd34+4];
	// inline asm
	prmt.b32 %r766, %r767, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34+4], %r766;
	ld.local.u32 	%r769, [%rd34+8];
	// inline asm
	prmt.b32 %r768, %r769, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34+8], %r768;
	sub.s32 	%r771, %r2, %r12413;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8762;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8763;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd8764;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8765;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8766;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd8767;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd8768;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd8769;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd8770;
	.param .b32 param9;
	st.param.b32	[param9+0], %r771;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 0
	mul.wide.u32 	%rd366, %r12406, 564;
	add.s64 	%rd367, %rd8771, %rd366;
	ld.global.u32 	%r772, [%rd367+512];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8762;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd367;
	.param .b32 param2;
	st.param.b32	[param2+0], %r772;
	call.uni 
	sha512_update_global_swap, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 1
	ld.local.u32 	%r6, [%rd10+184];
	and.b32  	%r7, %r6, 127;
	xor.b32  	%r770, %r7, 3;
	setp.gt.s32	%p3, %r770, 63;
	@%p3 bra 	BB3_131;

	setp.gt.s32	%p99, %r770, 31;
	@%p99 bra 	BB3_68;

	setp.gt.s32	%p147, %r770, 15;
	@%p147 bra 	BB3_37;

	setp.gt.s32	%p171, %r770, 7;
	@%p171 bra 	BB3_22;

	setp.gt.s32	%p183, %r770, 3;
	@%p183 bra 	BB3_15;

	setp.gt.s32	%p189, %r770, 1;
	@%p189 bra 	BB3_12;

	setp.eq.s32	%p192, %r770, 0;
	@%p192 bra 	BB3_321;
	bra.uni 	BB3_10;

BB3_321:
	ld.local.u32 	%r1027, [%rd10+56];
	or.b32  	%r1028, %r1027, 128;
	st.local.u32 	[%rd10+56], %r1028;
	bra.uni 	BB3_322;

BB3_131:
	setp.gt.s32	%p4, %r770, 95;
	@%p4 bra 	BB3_195;

	setp.gt.s32	%p52, %r770, 79;
	@%p52 bra 	BB3_164;

	setp.gt.s32	%p76, %r770, 71;
	@%p76 bra 	BB3_149;

	setp.gt.s32	%p88, %r770, 67;
	@%p88 bra 	BB3_142;

	setp.gt.s32	%p94, %r770, 65;
	@%p94 bra 	BB3_139;

	setp.eq.s32	%p97, %r770, 64;
	@%p97 bra 	BB3_289;
	bra.uni 	BB3_137;

BB3_289:
	ld.local.u32 	%r899, [%rd10+120];
	or.b32  	%r900, %r899, 128;
	st.local.u32 	[%rd10+120], %r900;
	bra.uni 	BB3_322;

BB3_68:
	setp.gt.s32	%p100, %r770, 47;
	@%p100 bra 	BB3_100;

	setp.gt.s32	%p124, %r770, 39;
	@%p124 bra 	BB3_85;

	setp.gt.s32	%p136, %r770, 35;
	@%p136 bra 	BB3_78;

	setp.gt.s32	%p142, %r770, 33;
	@%p142 bra 	BB3_75;

	setp.eq.s32	%p145, %r770, 32;
	@%p145 bra 	BB3_305;
	bra.uni 	BB3_73;

BB3_305:
	ld.local.u32 	%r963, [%rd10+88];
	or.b32  	%r964, %r963, 128;
	st.local.u32 	[%rd10+88], %r964;
	bra.uni 	BB3_322;

BB3_195:
	setp.gt.s32	%p5, %r770, 111;
	@%p5 bra 	BB3_227;

	setp.gt.s32	%p29, %r770, 103;
	@%p29 bra 	BB3_212;

	setp.gt.s32	%p41, %r770, 99;
	@%p41 bra 	BB3_205;

	setp.gt.s32	%p47, %r770, 97;
	@%p47 bra 	BB3_202;

	setp.eq.s32	%p50, %r770, 96;
	@%p50 bra 	BB3_273;
	bra.uni 	BB3_200;

BB3_273:
	ld.local.u32 	%r835, [%rd10+152];
	or.b32  	%r836, %r835, 128;
	st.local.u32 	[%rd10+152], %r836;
	bra.uni 	BB3_322;

BB3_37:
	setp.gt.s32	%p148, %r770, 23;
	@%p148 bra 	BB3_53;

	setp.gt.s32	%p160, %r770, 19;
	@%p160 bra 	BB3_46;

	setp.gt.s32	%p166, %r770, 17;
	@%p166 bra 	BB3_43;

	setp.eq.s32	%p169, %r770, 16;
	@%p169 bra 	BB3_313;
	bra.uni 	BB3_41;

BB3_313:
	ld.local.u32 	%r995, [%rd10+72];
	or.b32  	%r996, %r995, 128;
	st.local.u32 	[%rd10+72], %r996;
	bra.uni 	BB3_322;

BB3_164:
	setp.gt.s32	%p53, %r770, 87;
	@%p53 bra 	BB3_180;

	setp.gt.s32	%p65, %r770, 83;
	@%p65 bra 	BB3_173;

	setp.gt.s32	%p71, %r770, 81;
	@%p71 bra 	BB3_170;

	setp.eq.s32	%p74, %r770, 80;
	@%p74 bra 	BB3_281;
	bra.uni 	BB3_168;

BB3_281:
	ld.local.u32 	%r867, [%rd10+136];
	or.b32  	%r868, %r867, 128;
	st.local.u32 	[%rd10+136], %r868;
	bra.uni 	BB3_322;

BB3_100:
	setp.gt.s32	%p101, %r770, 55;
	@%p101 bra 	BB3_116;

	setp.gt.s32	%p113, %r770, 51;
	@%p113 bra 	BB3_109;

	setp.gt.s32	%p119, %r770, 49;
	@%p119 bra 	BB3_106;

	setp.eq.s32	%p122, %r770, 48;
	@%p122 bra 	BB3_297;
	bra.uni 	BB3_104;

BB3_297:
	ld.local.u32 	%r931, [%rd10+104];
	or.b32  	%r932, %r931, 128;
	st.local.u32 	[%rd10+104], %r932;
	bra.uni 	BB3_322;

BB3_227:
	setp.gt.s32	%p6, %r770, 119;
	@%p6 bra 	BB3_243;

	setp.gt.s32	%p18, %r770, 115;
	@%p18 bra 	BB3_236;

	setp.gt.s32	%p24, %r770, 113;
	@%p24 bra 	BB3_233;

	setp.eq.s32	%p27, %r770, 112;
	@%p27 bra 	BB3_265;
	bra.uni 	BB3_231;

BB3_265:
	ld.local.u32 	%r803, [%rd10+168];
	or.b32  	%r804, %r803, 128;
	st.local.u32 	[%rd10+168], %r804;
	bra.uni 	BB3_322;

BB3_22:
	setp.gt.s32	%p172, %r770, 11;
	@%p172 bra 	BB3_30;

	setp.gt.s32	%p178, %r770, 9;
	@%p178 bra 	BB3_27;

	setp.eq.s32	%p181, %r770, 8;
	@%p181 bra 	BB3_317;
	bra.uni 	BB3_25;

BB3_317:
	ld.local.u32 	%r1011, [%rd10+64];
	or.b32  	%r1012, %r1011, 128;
	st.local.u32 	[%rd10+64], %r1012;
	bra.uni 	BB3_322;

BB3_149:
	setp.gt.s32	%p77, %r770, 75;
	@%p77 bra 	BB3_157;

	setp.gt.s32	%p83, %r770, 73;
	@%p83 bra 	BB3_154;

	setp.eq.s32	%p86, %r770, 72;
	@%p86 bra 	BB3_285;
	bra.uni 	BB3_152;

BB3_285:
	ld.local.u32 	%r883, [%rd10+128];
	or.b32  	%r884, %r883, 128;
	st.local.u32 	[%rd10+128], %r884;
	bra.uni 	BB3_322;

BB3_85:
	setp.gt.s32	%p125, %r770, 43;
	@%p125 bra 	BB3_93;

	setp.gt.s32	%p131, %r770, 41;
	@%p131 bra 	BB3_90;

	setp.eq.s32	%p134, %r770, 40;
	@%p134 bra 	BB3_301;
	bra.uni 	BB3_88;

BB3_301:
	ld.local.u32 	%r947, [%rd10+96];
	or.b32  	%r948, %r947, 128;
	st.local.u32 	[%rd10+96], %r948;
	bra.uni 	BB3_322;

BB3_212:
	setp.gt.s32	%p30, %r770, 107;
	@%p30 bra 	BB3_220;

	setp.gt.s32	%p36, %r770, 105;
	@%p36 bra 	BB3_217;

	setp.eq.s32	%p39, %r770, 104;
	@%p39 bra 	BB3_269;
	bra.uni 	BB3_215;

BB3_269:
	ld.local.u32 	%r819, [%rd10+160];
	or.b32  	%r820, %r819, 128;
	st.local.u32 	[%rd10+160], %r820;
	bra.uni 	BB3_322;

BB3_53:
	setp.gt.s32	%p149, %r770, 27;
	@%p149 bra 	BB3_61;

	setp.gt.s32	%p155, %r770, 25;
	@%p155 bra 	BB3_58;

	setp.eq.s32	%p158, %r770, 24;
	@%p158 bra 	BB3_309;
	bra.uni 	BB3_56;

BB3_309:
	ld.local.u32 	%r979, [%rd10+80];
	or.b32  	%r980, %r979, 128;
	st.local.u32 	[%rd10+80], %r980;
	bra.uni 	BB3_322;

BB3_180:
	setp.gt.s32	%p54, %r770, 91;
	@%p54 bra 	BB3_188;

	setp.gt.s32	%p60, %r770, 89;
	@%p60 bra 	BB3_185;

	setp.eq.s32	%p63, %r770, 88;
	@%p63 bra 	BB3_277;
	bra.uni 	BB3_183;

BB3_277:
	ld.local.u32 	%r851, [%rd10+144];
	or.b32  	%r852, %r851, 128;
	st.local.u32 	[%rd10+144], %r852;
	bra.uni 	BB3_322;

BB3_116:
	setp.gt.s32	%p102, %r770, 59;
	@%p102 bra 	BB3_124;

	setp.gt.s32	%p108, %r770, 57;
	@%p108 bra 	BB3_121;

	setp.eq.s32	%p111, %r770, 56;
	@%p111 bra 	BB3_293;
	bra.uni 	BB3_119;

BB3_293:
	ld.local.u32 	%r915, [%rd10+112];
	or.b32  	%r916, %r915, 128;
	st.local.u32 	[%rd10+112], %r916;
	bra.uni 	BB3_322;

BB3_243:
	setp.gt.s32	%p7, %r770, 123;
	@%p7 bra 	BB3_251;

	setp.gt.s32	%p13, %r770, 121;
	@%p13 bra 	BB3_248;

	setp.eq.s32	%p16, %r770, 120;
	@%p16 bra 	BB3_261;
	bra.uni 	BB3_246;

BB3_261:
	ld.local.u32 	%r787, [%rd10+176];
	or.b32  	%r788, %r787, 128;
	st.local.u32 	[%rd10+176], %r788;
	bra.uni 	BB3_322;

BB3_15:
	setp.gt.s32	%p184, %r770, 5;
	@%p184 bra 	BB3_19;

	setp.eq.s32	%p187, %r770, 4;
	@%p187 bra 	BB3_319;
	bra.uni 	BB3_17;

BB3_319:
	ld.local.u32 	%r1019, [%rd11+4];
	or.b32  	%r1020, %r1019, 128;
	st.local.u32 	[%rd11+4], %r1020;
	bra.uni 	BB3_322;

BB3_142:
	setp.gt.s32	%p89, %r770, 69;
	@%p89 bra 	BB3_146;

	setp.eq.s32	%p92, %r770, 68;
	@%p92 bra 	BB3_287;
	bra.uni 	BB3_144;

BB3_287:
	ld.local.u32 	%r891, [%rd19+4];
	or.b32  	%r892, %r891, 128;
	st.local.u32 	[%rd19+4], %r892;
	bra.uni 	BB3_322;

BB3_78:
	setp.gt.s32	%p137, %r770, 37;
	@%p137 bra 	BB3_82;

	setp.eq.s32	%p140, %r770, 36;
	@%p140 bra 	BB3_303;
	bra.uni 	BB3_80;

BB3_303:
	ld.local.u32 	%r955, [%rd15+4];
	or.b32  	%r956, %r955, 128;
	st.local.u32 	[%rd15+4], %r956;
	bra.uni 	BB3_322;

BB3_205:
	setp.gt.s32	%p42, %r770, 101;
	@%p42 bra 	BB3_209;

	setp.eq.s32	%p45, %r770, 100;
	@%p45 bra 	BB3_271;
	bra.uni 	BB3_207;

BB3_271:
	ld.local.u32 	%r827, [%rd23+4];
	or.b32  	%r828, %r827, 128;
	st.local.u32 	[%rd23+4], %r828;
	bra.uni 	BB3_322;

BB3_46:
	setp.gt.s32	%p161, %r770, 21;
	@%p161 bra 	BB3_50;

	setp.eq.s32	%p164, %r770, 20;
	@%p164 bra 	BB3_311;
	bra.uni 	BB3_48;

BB3_311:
	ld.local.u32 	%r987, [%rd13+4];
	or.b32  	%r988, %r987, 128;
	st.local.u32 	[%rd13+4], %r988;
	bra.uni 	BB3_322;

BB3_173:
	setp.gt.s32	%p66, %r770, 85;
	@%p66 bra 	BB3_177;

	setp.eq.s32	%p69, %r770, 84;
	@%p69 bra 	BB3_279;
	bra.uni 	BB3_175;

BB3_279:
	ld.local.u32 	%r859, [%rd21+4];
	or.b32  	%r860, %r859, 128;
	st.local.u32 	[%rd21+4], %r860;
	bra.uni 	BB3_322;

BB3_109:
	setp.gt.s32	%p114, %r770, 53;
	@%p114 bra 	BB3_113;

	setp.eq.s32	%p117, %r770, 52;
	@%p117 bra 	BB3_295;
	bra.uni 	BB3_111;

BB3_295:
	ld.local.u32 	%r923, [%rd17+4];
	or.b32  	%r924, %r923, 128;
	st.local.u32 	[%rd17+4], %r924;
	bra.uni 	BB3_322;

BB3_236:
	setp.gt.s32	%p19, %r770, 117;
	@%p19 bra 	BB3_240;

	setp.eq.s32	%p22, %r770, 116;
	@%p22 bra 	BB3_263;
	bra.uni 	BB3_238;

BB3_263:
	ld.local.u32 	%r795, [%rd25+4];
	or.b32  	%r796, %r795, 128;
	st.local.u32 	[%rd25+4], %r796;
	bra.uni 	BB3_322;

BB3_30:
	setp.gt.s32	%p173, %r770, 13;
	@%p173 bra 	BB3_34;

	setp.eq.s32	%p176, %r770, 12;
	@%p176 bra 	BB3_315;
	bra.uni 	BB3_32;

BB3_315:
	ld.local.u32 	%r1003, [%rd12+4];
	or.b32  	%r1004, %r1003, 128;
	st.local.u32 	[%rd12+4], %r1004;
	bra.uni 	BB3_322;

BB3_157:
	setp.gt.s32	%p78, %r770, 77;
	@%p78 bra 	BB3_161;

	setp.eq.s32	%p81, %r770, 76;
	@%p81 bra 	BB3_283;
	bra.uni 	BB3_159;

BB3_283:
	ld.local.u32 	%r875, [%rd20+4];
	or.b32  	%r876, %r875, 128;
	st.local.u32 	[%rd20+4], %r876;
	bra.uni 	BB3_322;

BB3_93:
	setp.gt.s32	%p126, %r770, 45;
	@%p126 bra 	BB3_97;

	setp.eq.s32	%p129, %r770, 44;
	@%p129 bra 	BB3_299;
	bra.uni 	BB3_95;

BB3_299:
	ld.local.u32 	%r939, [%rd16+4];
	or.b32  	%r940, %r939, 128;
	st.local.u32 	[%rd16+4], %r940;
	bra.uni 	BB3_322;

BB3_220:
	setp.gt.s32	%p31, %r770, 109;
	@%p31 bra 	BB3_224;

	setp.eq.s32	%p34, %r770, 108;
	@%p34 bra 	BB3_267;
	bra.uni 	BB3_222;

BB3_267:
	ld.local.u32 	%r811, [%rd24+4];
	or.b32  	%r812, %r811, 128;
	st.local.u32 	[%rd24+4], %r812;
	bra.uni 	BB3_322;

BB3_61:
	setp.gt.s32	%p150, %r770, 29;
	@%p150 bra 	BB3_65;

	setp.eq.s32	%p153, %r770, 28;
	@%p153 bra 	BB3_307;
	bra.uni 	BB3_63;

BB3_307:
	ld.local.u32 	%r971, [%rd14+4];
	or.b32  	%r972, %r971, 128;
	st.local.u32 	[%rd14+4], %r972;
	bra.uni 	BB3_322;

BB3_188:
	setp.gt.s32	%p55, %r770, 93;
	@%p55 bra 	BB3_192;

	setp.eq.s32	%p58, %r770, 92;
	@%p58 bra 	BB3_275;
	bra.uni 	BB3_190;

BB3_275:
	ld.local.u32 	%r843, [%rd22+4];
	or.b32  	%r844, %r843, 128;
	st.local.u32 	[%rd22+4], %r844;
	bra.uni 	BB3_322;

BB3_124:
	setp.gt.s32	%p103, %r770, 61;
	@%p103 bra 	BB3_128;

	setp.eq.s32	%p106, %r770, 60;
	@%p106 bra 	BB3_291;
	bra.uni 	BB3_126;

BB3_291:
	ld.local.u32 	%r907, [%rd18+4];
	or.b32  	%r908, %r907, 128;
	st.local.u32 	[%rd18+4], %r908;
	bra.uni 	BB3_322;

BB3_251:
	setp.gt.s32	%p8, %r770, 125;
	@%p8 bra 	BB3_255;

	setp.eq.s32	%p11, %r770, 124;
	@%p11 bra 	BB3_259;
	bra.uni 	BB3_253;

BB3_259:
	ld.local.u32 	%r779, [%rd26+4];
	or.b32  	%r780, %r779, 128;
	st.local.u32 	[%rd26+4], %r780;
	bra.uni 	BB3_322;

BB3_12:
	setp.eq.s32	%p190, %r770, 2;
	@%p190 bra 	BB3_320;
	bra.uni 	BB3_13;

BB3_320:
	ld.local.u32 	%r1023, [%rd10+56];
	or.b32  	%r1024, %r1023, 8388608;
	st.local.u32 	[%rd10+56], %r1024;
	bra.uni 	BB3_322;

BB3_139:
	setp.eq.s32	%p95, %r770, 66;
	@%p95 bra 	BB3_288;
	bra.uni 	BB3_140;

BB3_288:
	ld.local.u32 	%r895, [%rd10+120];
	or.b32  	%r896, %r895, 8388608;
	st.local.u32 	[%rd10+120], %r896;
	bra.uni 	BB3_322;

BB3_75:
	setp.eq.s32	%p143, %r770, 34;
	@%p143 bra 	BB3_304;
	bra.uni 	BB3_76;

BB3_304:
	ld.local.u32 	%r959, [%rd10+88];
	or.b32  	%r960, %r959, 8388608;
	st.local.u32 	[%rd10+88], %r960;
	bra.uni 	BB3_322;

BB3_202:
	setp.eq.s32	%p48, %r770, 98;
	@%p48 bra 	BB3_272;
	bra.uni 	BB3_203;

BB3_272:
	ld.local.u32 	%r831, [%rd10+152];
	or.b32  	%r832, %r831, 8388608;
	st.local.u32 	[%rd10+152], %r832;
	bra.uni 	BB3_322;

BB3_43:
	setp.eq.s32	%p167, %r770, 18;
	@%p167 bra 	BB3_312;
	bra.uni 	BB3_44;

BB3_312:
	ld.local.u32 	%r991, [%rd10+72];
	or.b32  	%r992, %r991, 8388608;
	st.local.u32 	[%rd10+72], %r992;
	bra.uni 	BB3_322;

BB3_170:
	setp.eq.s32	%p72, %r770, 82;
	@%p72 bra 	BB3_280;
	bra.uni 	BB3_171;

BB3_280:
	ld.local.u32 	%r863, [%rd10+136];
	or.b32  	%r864, %r863, 8388608;
	st.local.u32 	[%rd10+136], %r864;
	bra.uni 	BB3_322;

BB3_106:
	setp.eq.s32	%p120, %r770, 50;
	@%p120 bra 	BB3_296;
	bra.uni 	BB3_107;

BB3_296:
	ld.local.u32 	%r927, [%rd10+104];
	or.b32  	%r928, %r927, 8388608;
	st.local.u32 	[%rd10+104], %r928;
	bra.uni 	BB3_322;

BB3_233:
	setp.eq.s32	%p25, %r770, 114;
	@%p25 bra 	BB3_264;
	bra.uni 	BB3_234;

BB3_264:
	ld.local.u32 	%r799, [%rd10+168];
	or.b32  	%r800, %r799, 8388608;
	st.local.u32 	[%rd10+168], %r800;
	bra.uni 	BB3_322;

BB3_27:
	setp.eq.s32	%p179, %r770, 10;
	@%p179 bra 	BB3_316;
	bra.uni 	BB3_28;

BB3_316:
	ld.local.u32 	%r1007, [%rd10+64];
	or.b32  	%r1008, %r1007, 8388608;
	st.local.u32 	[%rd10+64], %r1008;
	bra.uni 	BB3_322;

BB3_154:
	setp.eq.s32	%p84, %r770, 74;
	@%p84 bra 	BB3_284;
	bra.uni 	BB3_155;

BB3_284:
	ld.local.u32 	%r879, [%rd10+128];
	or.b32  	%r880, %r879, 8388608;
	st.local.u32 	[%rd10+128], %r880;
	bra.uni 	BB3_322;

BB3_90:
	setp.eq.s32	%p132, %r770, 42;
	@%p132 bra 	BB3_300;
	bra.uni 	BB3_91;

BB3_300:
	ld.local.u32 	%r943, [%rd10+96];
	or.b32  	%r944, %r943, 8388608;
	st.local.u32 	[%rd10+96], %r944;
	bra.uni 	BB3_322;

BB3_217:
	setp.eq.s32	%p37, %r770, 106;
	@%p37 bra 	BB3_268;
	bra.uni 	BB3_218;

BB3_268:
	ld.local.u32 	%r815, [%rd10+160];
	or.b32  	%r816, %r815, 8388608;
	st.local.u32 	[%rd10+160], %r816;
	bra.uni 	BB3_322;

BB3_58:
	setp.eq.s32	%p156, %r770, 26;
	@%p156 bra 	BB3_308;
	bra.uni 	BB3_59;

BB3_308:
	ld.local.u32 	%r975, [%rd10+80];
	or.b32  	%r976, %r975, 8388608;
	st.local.u32 	[%rd10+80], %r976;
	bra.uni 	BB3_322;

BB3_185:
	setp.eq.s32	%p61, %r770, 90;
	@%p61 bra 	BB3_276;
	bra.uni 	BB3_186;

BB3_276:
	ld.local.u32 	%r847, [%rd10+144];
	or.b32  	%r848, %r847, 8388608;
	st.local.u32 	[%rd10+144], %r848;
	bra.uni 	BB3_322;

BB3_121:
	setp.eq.s32	%p109, %r770, 58;
	@%p109 bra 	BB3_292;
	bra.uni 	BB3_122;

BB3_292:
	ld.local.u32 	%r911, [%rd10+112];
	or.b32  	%r912, %r911, 8388608;
	st.local.u32 	[%rd10+112], %r912;
	bra.uni 	BB3_322;

BB3_248:
	setp.eq.s32	%p14, %r770, 122;
	@%p14 bra 	BB3_260;
	bra.uni 	BB3_249;

BB3_260:
	ld.local.u32 	%r783, [%rd10+176];
	or.b32  	%r784, %r783, 8388608;
	st.local.u32 	[%rd10+176], %r784;
	bra.uni 	BB3_322;

BB3_19:
	setp.eq.s32	%p185, %r770, 6;
	@%p185 bra 	BB3_318;
	bra.uni 	BB3_20;

BB3_318:
	ld.local.u32 	%r1015, [%rd11+4];
	or.b32  	%r1016, %r1015, 8388608;
	st.local.u32 	[%rd11+4], %r1016;
	bra.uni 	BB3_322;

BB3_146:
	setp.eq.s32	%p90, %r770, 70;
	@%p90 bra 	BB3_286;
	bra.uni 	BB3_147;

BB3_286:
	ld.local.u32 	%r887, [%rd19+4];
	or.b32  	%r888, %r887, 8388608;
	st.local.u32 	[%rd19+4], %r888;
	bra.uni 	BB3_322;

BB3_82:
	setp.eq.s32	%p138, %r770, 38;
	@%p138 bra 	BB3_302;
	bra.uni 	BB3_83;

BB3_302:
	ld.local.u32 	%r951, [%rd15+4];
	or.b32  	%r952, %r951, 8388608;
	st.local.u32 	[%rd15+4], %r952;
	bra.uni 	BB3_322;

BB3_209:
	setp.eq.s32	%p43, %r770, 102;
	@%p43 bra 	BB3_270;
	bra.uni 	BB3_210;

BB3_270:
	ld.local.u32 	%r823, [%rd23+4];
	or.b32  	%r824, %r823, 8388608;
	st.local.u32 	[%rd23+4], %r824;
	bra.uni 	BB3_322;

BB3_50:
	setp.eq.s32	%p162, %r770, 22;
	@%p162 bra 	BB3_310;
	bra.uni 	BB3_51;

BB3_310:
	ld.local.u32 	%r983, [%rd13+4];
	or.b32  	%r984, %r983, 8388608;
	st.local.u32 	[%rd13+4], %r984;
	bra.uni 	BB3_322;

BB3_177:
	setp.eq.s32	%p67, %r770, 86;
	@%p67 bra 	BB3_278;
	bra.uni 	BB3_178;

BB3_278:
	ld.local.u32 	%r855, [%rd21+4];
	or.b32  	%r856, %r855, 8388608;
	st.local.u32 	[%rd21+4], %r856;
	bra.uni 	BB3_322;

BB3_113:
	setp.eq.s32	%p115, %r770, 54;
	@%p115 bra 	BB3_294;
	bra.uni 	BB3_114;

BB3_294:
	ld.local.u32 	%r919, [%rd17+4];
	or.b32  	%r920, %r919, 8388608;
	st.local.u32 	[%rd17+4], %r920;
	bra.uni 	BB3_322;

BB3_240:
	setp.eq.s32	%p20, %r770, 118;
	@%p20 bra 	BB3_262;
	bra.uni 	BB3_241;

BB3_262:
	ld.local.u32 	%r791, [%rd25+4];
	or.b32  	%r792, %r791, 8388608;
	st.local.u32 	[%rd25+4], %r792;
	bra.uni 	BB3_322;

BB3_34:
	setp.eq.s32	%p174, %r770, 14;
	@%p174 bra 	BB3_314;
	bra.uni 	BB3_35;

BB3_314:
	ld.local.u32 	%r999, [%rd12+4];
	or.b32  	%r1000, %r999, 8388608;
	st.local.u32 	[%rd12+4], %r1000;
	bra.uni 	BB3_322;

BB3_161:
	setp.eq.s32	%p79, %r770, 78;
	@%p79 bra 	BB3_282;
	bra.uni 	BB3_162;

BB3_282:
	ld.local.u32 	%r871, [%rd20+4];
	or.b32  	%r872, %r871, 8388608;
	st.local.u32 	[%rd20+4], %r872;
	bra.uni 	BB3_322;

BB3_97:
	setp.eq.s32	%p127, %r770, 46;
	@%p127 bra 	BB3_298;
	bra.uni 	BB3_98;

BB3_298:
	ld.local.u32 	%r935, [%rd16+4];
	or.b32  	%r936, %r935, 8388608;
	st.local.u32 	[%rd16+4], %r936;
	bra.uni 	BB3_322;

BB3_224:
	setp.eq.s32	%p32, %r770, 110;
	@%p32 bra 	BB3_266;
	bra.uni 	BB3_225;

BB3_266:
	ld.local.u32 	%r807, [%rd24+4];
	or.b32  	%r808, %r807, 8388608;
	st.local.u32 	[%rd24+4], %r808;
	bra.uni 	BB3_322;

BB3_65:
	setp.eq.s32	%p151, %r770, 30;
	@%p151 bra 	BB3_306;
	bra.uni 	BB3_66;

BB3_306:
	ld.local.u32 	%r967, [%rd14+4];
	or.b32  	%r968, %r967, 8388608;
	st.local.u32 	[%rd14+4], %r968;
	bra.uni 	BB3_322;

BB3_192:
	setp.eq.s32	%p56, %r770, 94;
	@%p56 bra 	BB3_274;
	bra.uni 	BB3_193;

BB3_274:
	ld.local.u32 	%r839, [%rd22+4];
	or.b32  	%r840, %r839, 8388608;
	st.local.u32 	[%rd22+4], %r840;
	bra.uni 	BB3_322;

BB3_128:
	setp.eq.s32	%p104, %r770, 62;
	@%p104 bra 	BB3_290;
	bra.uni 	BB3_129;

BB3_290:
	ld.local.u32 	%r903, [%rd18+4];
	or.b32  	%r904, %r903, 8388608;
	st.local.u32 	[%rd18+4], %r904;
	bra.uni 	BB3_322;

BB3_255:
	setp.eq.s32	%p9, %r770, 126;
	@%p9 bra 	BB3_258;
	bra.uni 	BB3_256;

BB3_258:
	ld.local.u32 	%r775, [%rd26+4];
	or.b32  	%r776, %r775, 8388608;
	st.local.u32 	[%rd26+4], %r776;
	bra.uni 	BB3_322;

BB3_10:
	setp.eq.s32	%p193, %r770, 1;
	@%p193 bra 	BB3_11;
	bra.uni 	BB3_322;

BB3_11:
	ld.local.u32 	%r1025, [%rd10+56];
	or.b32  	%r1026, %r1025, 32768;
	st.local.u32 	[%rd10+56], %r1026;
	bra.uni 	BB3_322;

BB3_137:
	setp.eq.s32	%p98, %r770, 65;
	@%p98 bra 	BB3_138;
	bra.uni 	BB3_322;

BB3_138:
	ld.local.u32 	%r897, [%rd10+120];
	or.b32  	%r898, %r897, 32768;
	st.local.u32 	[%rd10+120], %r898;
	bra.uni 	BB3_322;

BB3_73:
	setp.eq.s32	%p146, %r770, 33;
	@%p146 bra 	BB3_74;
	bra.uni 	BB3_322;

BB3_74:
	ld.local.u32 	%r961, [%rd10+88];
	or.b32  	%r962, %r961, 32768;
	st.local.u32 	[%rd10+88], %r962;
	bra.uni 	BB3_322;

BB3_200:
	setp.eq.s32	%p51, %r770, 97;
	@%p51 bra 	BB3_201;
	bra.uni 	BB3_322;

BB3_201:
	ld.local.u32 	%r833, [%rd10+152];
	or.b32  	%r834, %r833, 32768;
	st.local.u32 	[%rd10+152], %r834;
	bra.uni 	BB3_322;

BB3_41:
	setp.eq.s32	%p170, %r770, 17;
	@%p170 bra 	BB3_42;
	bra.uni 	BB3_322;

BB3_42:
	ld.local.u32 	%r993, [%rd10+72];
	or.b32  	%r994, %r993, 32768;
	st.local.u32 	[%rd10+72], %r994;
	bra.uni 	BB3_322;

BB3_168:
	setp.eq.s32	%p75, %r770, 81;
	@%p75 bra 	BB3_169;
	bra.uni 	BB3_322;

BB3_169:
	ld.local.u32 	%r865, [%rd10+136];
	or.b32  	%r866, %r865, 32768;
	st.local.u32 	[%rd10+136], %r866;
	bra.uni 	BB3_322;

BB3_104:
	setp.eq.s32	%p123, %r770, 49;
	@%p123 bra 	BB3_105;
	bra.uni 	BB3_322;

BB3_105:
	ld.local.u32 	%r929, [%rd10+104];
	or.b32  	%r930, %r929, 32768;
	st.local.u32 	[%rd10+104], %r930;
	bra.uni 	BB3_322;

BB3_231:
	setp.eq.s32	%p28, %r770, 113;
	@%p28 bra 	BB3_232;
	bra.uni 	BB3_322;

BB3_232:
	ld.local.u32 	%r801, [%rd10+168];
	or.b32  	%r802, %r801, 32768;
	st.local.u32 	[%rd10+168], %r802;
	bra.uni 	BB3_322;

BB3_25:
	setp.eq.s32	%p182, %r770, 9;
	@%p182 bra 	BB3_26;
	bra.uni 	BB3_322;

BB3_26:
	ld.local.u32 	%r1009, [%rd10+64];
	or.b32  	%r1010, %r1009, 32768;
	st.local.u32 	[%rd10+64], %r1010;
	bra.uni 	BB3_322;

BB3_152:
	setp.eq.s32	%p87, %r770, 73;
	@%p87 bra 	BB3_153;
	bra.uni 	BB3_322;

BB3_153:
	ld.local.u32 	%r881, [%rd10+128];
	or.b32  	%r882, %r881, 32768;
	st.local.u32 	[%rd10+128], %r882;
	bra.uni 	BB3_322;

BB3_88:
	setp.eq.s32	%p135, %r770, 41;
	@%p135 bra 	BB3_89;
	bra.uni 	BB3_322;

BB3_89:
	ld.local.u32 	%r945, [%rd10+96];
	or.b32  	%r946, %r945, 32768;
	st.local.u32 	[%rd10+96], %r946;
	bra.uni 	BB3_322;

BB3_215:
	setp.eq.s32	%p40, %r770, 105;
	@%p40 bra 	BB3_216;
	bra.uni 	BB3_322;

BB3_216:
	ld.local.u32 	%r817, [%rd10+160];
	or.b32  	%r818, %r817, 32768;
	st.local.u32 	[%rd10+160], %r818;
	bra.uni 	BB3_322;

BB3_56:
	setp.eq.s32	%p159, %r770, 25;
	@%p159 bra 	BB3_57;
	bra.uni 	BB3_322;

BB3_57:
	ld.local.u32 	%r977, [%rd10+80];
	or.b32  	%r978, %r977, 32768;
	st.local.u32 	[%rd10+80], %r978;
	bra.uni 	BB3_322;

BB3_183:
	setp.eq.s32	%p64, %r770, 89;
	@%p64 bra 	BB3_184;
	bra.uni 	BB3_322;

BB3_184:
	ld.local.u32 	%r849, [%rd10+144];
	or.b32  	%r850, %r849, 32768;
	st.local.u32 	[%rd10+144], %r850;
	bra.uni 	BB3_322;

BB3_119:
	setp.eq.s32	%p112, %r770, 57;
	@%p112 bra 	BB3_120;
	bra.uni 	BB3_322;

BB3_120:
	ld.local.u32 	%r913, [%rd10+112];
	or.b32  	%r914, %r913, 32768;
	st.local.u32 	[%rd10+112], %r914;
	bra.uni 	BB3_322;

BB3_246:
	setp.eq.s32	%p17, %r770, 121;
	@%p17 bra 	BB3_247;
	bra.uni 	BB3_322;

BB3_247:
	ld.local.u32 	%r785, [%rd10+176];
	or.b32  	%r786, %r785, 32768;
	st.local.u32 	[%rd10+176], %r786;
	bra.uni 	BB3_322;

BB3_17:
	setp.eq.s32	%p188, %r770, 5;
	@%p188 bra 	BB3_18;
	bra.uni 	BB3_322;

BB3_18:
	ld.local.u32 	%r1017, [%rd11+4];
	or.b32  	%r1018, %r1017, 32768;
	st.local.u32 	[%rd11+4], %r1018;
	bra.uni 	BB3_322;

BB3_144:
	setp.eq.s32	%p93, %r770, 69;
	@%p93 bra 	BB3_145;
	bra.uni 	BB3_322;

BB3_145:
	ld.local.u32 	%r889, [%rd19+4];
	or.b32  	%r890, %r889, 32768;
	st.local.u32 	[%rd19+4], %r890;
	bra.uni 	BB3_322;

BB3_80:
	setp.eq.s32	%p141, %r770, 37;
	@%p141 bra 	BB3_81;
	bra.uni 	BB3_322;

BB3_81:
	ld.local.u32 	%r953, [%rd15+4];
	or.b32  	%r954, %r953, 32768;
	st.local.u32 	[%rd15+4], %r954;
	bra.uni 	BB3_322;

BB3_207:
	setp.eq.s32	%p46, %r770, 101;
	@%p46 bra 	BB3_208;
	bra.uni 	BB3_322;

BB3_208:
	ld.local.u32 	%r825, [%rd23+4];
	or.b32  	%r826, %r825, 32768;
	st.local.u32 	[%rd23+4], %r826;
	bra.uni 	BB3_322;

BB3_48:
	setp.eq.s32	%p165, %r770, 21;
	@%p165 bra 	BB3_49;
	bra.uni 	BB3_322;

BB3_49:
	ld.local.u32 	%r985, [%rd13+4];
	or.b32  	%r986, %r985, 32768;
	st.local.u32 	[%rd13+4], %r986;
	bra.uni 	BB3_322;

BB3_175:
	setp.eq.s32	%p70, %r770, 85;
	@%p70 bra 	BB3_176;
	bra.uni 	BB3_322;

BB3_176:
	ld.local.u32 	%r857, [%rd21+4];
	or.b32  	%r858, %r857, 32768;
	st.local.u32 	[%rd21+4], %r858;
	bra.uni 	BB3_322;

BB3_111:
	setp.eq.s32	%p118, %r770, 53;
	@%p118 bra 	BB3_112;
	bra.uni 	BB3_322;

BB3_112:
	ld.local.u32 	%r921, [%rd17+4];
	or.b32  	%r922, %r921, 32768;
	st.local.u32 	[%rd17+4], %r922;
	bra.uni 	BB3_322;

BB3_238:
	setp.eq.s32	%p23, %r770, 117;
	@%p23 bra 	BB3_239;
	bra.uni 	BB3_322;

BB3_239:
	ld.local.u32 	%r793, [%rd25+4];
	or.b32  	%r794, %r793, 32768;
	st.local.u32 	[%rd25+4], %r794;
	bra.uni 	BB3_322;

BB3_32:
	setp.eq.s32	%p177, %r770, 13;
	@%p177 bra 	BB3_33;
	bra.uni 	BB3_322;

BB3_33:
	ld.local.u32 	%r1001, [%rd12+4];
	or.b32  	%r1002, %r1001, 32768;
	st.local.u32 	[%rd12+4], %r1002;
	bra.uni 	BB3_322;

BB3_159:
	setp.eq.s32	%p82, %r770, 77;
	@%p82 bra 	BB3_160;
	bra.uni 	BB3_322;

BB3_160:
	ld.local.u32 	%r873, [%rd20+4];
	or.b32  	%r874, %r873, 32768;
	st.local.u32 	[%rd20+4], %r874;
	bra.uni 	BB3_322;

BB3_95:
	setp.eq.s32	%p130, %r770, 45;
	@%p130 bra 	BB3_96;
	bra.uni 	BB3_322;

BB3_96:
	ld.local.u32 	%r937, [%rd16+4];
	or.b32  	%r938, %r937, 32768;
	st.local.u32 	[%rd16+4], %r938;
	bra.uni 	BB3_322;

BB3_222:
	setp.eq.s32	%p35, %r770, 109;
	@%p35 bra 	BB3_223;
	bra.uni 	BB3_322;

BB3_223:
	ld.local.u32 	%r809, [%rd24+4];
	or.b32  	%r810, %r809, 32768;
	st.local.u32 	[%rd24+4], %r810;
	bra.uni 	BB3_322;

BB3_63:
	setp.eq.s32	%p154, %r770, 29;
	@%p154 bra 	BB3_64;
	bra.uni 	BB3_322;

BB3_64:
	ld.local.u32 	%r969, [%rd14+4];
	or.b32  	%r970, %r969, 32768;
	st.local.u32 	[%rd14+4], %r970;
	bra.uni 	BB3_322;

BB3_190:
	setp.eq.s32	%p59, %r770, 93;
	@%p59 bra 	BB3_191;
	bra.uni 	BB3_322;

BB3_191:
	ld.local.u32 	%r841, [%rd22+4];
	or.b32  	%r842, %r841, 32768;
	st.local.u32 	[%rd22+4], %r842;
	bra.uni 	BB3_322;

BB3_126:
	setp.eq.s32	%p107, %r770, 61;
	@%p107 bra 	BB3_127;
	bra.uni 	BB3_322;

BB3_127:
	ld.local.u32 	%r905, [%rd18+4];
	or.b32  	%r906, %r905, 32768;
	st.local.u32 	[%rd18+4], %r906;
	bra.uni 	BB3_322;

BB3_253:
	setp.eq.s32	%p12, %r770, 125;
	@%p12 bra 	BB3_254;
	bra.uni 	BB3_322;

BB3_254:
	ld.local.u32 	%r777, [%rd26+4];
	or.b32  	%r778, %r777, 32768;
	st.local.u32 	[%rd26+4], %r778;
	bra.uni 	BB3_322;

BB3_13:
	setp.eq.s32	%p191, %r770, 3;
	@%p191 bra 	BB3_14;
	bra.uni 	BB3_322;

BB3_14:
	ld.local.u32 	%r1021, [%rd10+56];
	or.b32  	%r1022, %r1021, -2147483648;
	st.local.u32 	[%rd10+56], %r1022;
	bra.uni 	BB3_322;

BB3_140:
	setp.eq.s32	%p96, %r770, 67;
	@%p96 bra 	BB3_141;
	bra.uni 	BB3_322;

BB3_141:
	ld.local.u32 	%r893, [%rd10+120];
	or.b32  	%r894, %r893, -2147483648;
	st.local.u32 	[%rd10+120], %r894;
	bra.uni 	BB3_322;

BB3_76:
	setp.eq.s32	%p144, %r770, 35;
	@%p144 bra 	BB3_77;
	bra.uni 	BB3_322;

BB3_77:
	ld.local.u32 	%r957, [%rd10+88];
	or.b32  	%r958, %r957, -2147483648;
	st.local.u32 	[%rd10+88], %r958;
	bra.uni 	BB3_322;

BB3_203:
	setp.eq.s32	%p49, %r770, 99;
	@%p49 bra 	BB3_204;
	bra.uni 	BB3_322;

BB3_204:
	ld.local.u32 	%r829, [%rd10+152];
	or.b32  	%r830, %r829, -2147483648;
	st.local.u32 	[%rd10+152], %r830;
	bra.uni 	BB3_322;

BB3_44:
	setp.eq.s32	%p168, %r770, 19;
	@%p168 bra 	BB3_45;
	bra.uni 	BB3_322;

BB3_45:
	ld.local.u32 	%r989, [%rd10+72];
	or.b32  	%r990, %r989, -2147483648;
	st.local.u32 	[%rd10+72], %r990;
	bra.uni 	BB3_322;

BB3_171:
	setp.eq.s32	%p73, %r770, 83;
	@%p73 bra 	BB3_172;
	bra.uni 	BB3_322;

BB3_172:
	ld.local.u32 	%r861, [%rd10+136];
	or.b32  	%r862, %r861, -2147483648;
	st.local.u32 	[%rd10+136], %r862;
	bra.uni 	BB3_322;

BB3_107:
	setp.eq.s32	%p121, %r770, 51;
	@%p121 bra 	BB3_108;
	bra.uni 	BB3_322;

BB3_108:
	ld.local.u32 	%r925, [%rd10+104];
	or.b32  	%r926, %r925, -2147483648;
	st.local.u32 	[%rd10+104], %r926;
	bra.uni 	BB3_322;

BB3_234:
	setp.eq.s32	%p26, %r770, 115;
	@%p26 bra 	BB3_235;
	bra.uni 	BB3_322;

BB3_235:
	ld.local.u32 	%r797, [%rd10+168];
	or.b32  	%r798, %r797, -2147483648;
	st.local.u32 	[%rd10+168], %r798;
	bra.uni 	BB3_322;

BB3_28:
	setp.eq.s32	%p180, %r770, 11;
	@%p180 bra 	BB3_29;
	bra.uni 	BB3_322;

BB3_29:
	ld.local.u32 	%r1005, [%rd10+64];
	or.b32  	%r1006, %r1005, -2147483648;
	st.local.u32 	[%rd10+64], %r1006;
	bra.uni 	BB3_322;

BB3_155:
	setp.eq.s32	%p85, %r770, 75;
	@%p85 bra 	BB3_156;
	bra.uni 	BB3_322;

BB3_156:
	ld.local.u32 	%r877, [%rd10+128];
	or.b32  	%r878, %r877, -2147483648;
	st.local.u32 	[%rd10+128], %r878;
	bra.uni 	BB3_322;

BB3_91:
	setp.eq.s32	%p133, %r770, 43;
	@%p133 bra 	BB3_92;
	bra.uni 	BB3_322;

BB3_92:
	ld.local.u32 	%r941, [%rd10+96];
	or.b32  	%r942, %r941, -2147483648;
	st.local.u32 	[%rd10+96], %r942;
	bra.uni 	BB3_322;

BB3_218:
	setp.eq.s32	%p38, %r770, 107;
	@%p38 bra 	BB3_219;
	bra.uni 	BB3_322;

BB3_219:
	ld.local.u32 	%r813, [%rd10+160];
	or.b32  	%r814, %r813, -2147483648;
	st.local.u32 	[%rd10+160], %r814;
	bra.uni 	BB3_322;

BB3_59:
	setp.eq.s32	%p157, %r770, 27;
	@%p157 bra 	BB3_60;
	bra.uni 	BB3_322;

BB3_60:
	ld.local.u32 	%r973, [%rd10+80];
	or.b32  	%r974, %r973, -2147483648;
	st.local.u32 	[%rd10+80], %r974;
	bra.uni 	BB3_322;

BB3_186:
	setp.eq.s32	%p62, %r770, 91;
	@%p62 bra 	BB3_187;
	bra.uni 	BB3_322;

BB3_187:
	ld.local.u32 	%r845, [%rd10+144];
	or.b32  	%r846, %r845, -2147483648;
	st.local.u32 	[%rd10+144], %r846;
	bra.uni 	BB3_322;

BB3_122:
	setp.eq.s32	%p110, %r770, 59;
	@%p110 bra 	BB3_123;
	bra.uni 	BB3_322;

BB3_123:
	ld.local.u32 	%r909, [%rd10+112];
	or.b32  	%r910, %r909, -2147483648;
	st.local.u32 	[%rd10+112], %r910;
	bra.uni 	BB3_322;

BB3_249:
	setp.eq.s32	%p15, %r770, 123;
	@%p15 bra 	BB3_250;
	bra.uni 	BB3_322;

BB3_250:
	ld.local.u32 	%r781, [%rd10+176];
	or.b32  	%r782, %r781, -2147483648;
	st.local.u32 	[%rd10+176], %r782;
	bra.uni 	BB3_322;

BB3_20:
	setp.eq.s32	%p186, %r770, 7;
	@%p186 bra 	BB3_21;
	bra.uni 	BB3_322;

BB3_21:
	ld.local.u32 	%r1013, [%rd11+4];
	or.b32  	%r1014, %r1013, -2147483648;
	st.local.u32 	[%rd11+4], %r1014;
	bra.uni 	BB3_322;

BB3_147:
	setp.eq.s32	%p91, %r770, 71;
	@%p91 bra 	BB3_148;
	bra.uni 	BB3_322;

BB3_148:
	ld.local.u32 	%r885, [%rd19+4];
	or.b32  	%r886, %r885, -2147483648;
	st.local.u32 	[%rd19+4], %r886;
	bra.uni 	BB3_322;

BB3_83:
	setp.eq.s32	%p139, %r770, 39;
	@%p139 bra 	BB3_84;
	bra.uni 	BB3_322;

BB3_84:
	ld.local.u32 	%r949, [%rd15+4];
	or.b32  	%r950, %r949, -2147483648;
	st.local.u32 	[%rd15+4], %r950;
	bra.uni 	BB3_322;

BB3_210:
	setp.eq.s32	%p44, %r770, 103;
	@%p44 bra 	BB3_211;
	bra.uni 	BB3_322;

BB3_211:
	ld.local.u32 	%r821, [%rd23+4];
	or.b32  	%r822, %r821, -2147483648;
	st.local.u32 	[%rd23+4], %r822;
	bra.uni 	BB3_322;

BB3_51:
	setp.eq.s32	%p163, %r770, 23;
	@%p163 bra 	BB3_52;
	bra.uni 	BB3_322;

BB3_52:
	ld.local.u32 	%r981, [%rd13+4];
	or.b32  	%r982, %r981, -2147483648;
	st.local.u32 	[%rd13+4], %r982;
	bra.uni 	BB3_322;

BB3_178:
	setp.eq.s32	%p68, %r770, 87;
	@%p68 bra 	BB3_179;
	bra.uni 	BB3_322;

BB3_179:
	ld.local.u32 	%r853, [%rd21+4];
	or.b32  	%r854, %r853, -2147483648;
	st.local.u32 	[%rd21+4], %r854;
	bra.uni 	BB3_322;

BB3_114:
	setp.eq.s32	%p116, %r770, 55;
	@%p116 bra 	BB3_115;
	bra.uni 	BB3_322;

BB3_115:
	ld.local.u32 	%r917, [%rd17+4];
	or.b32  	%r918, %r917, -2147483648;
	st.local.u32 	[%rd17+4], %r918;
	bra.uni 	BB3_322;

BB3_241:
	setp.eq.s32	%p21, %r770, 119;
	@%p21 bra 	BB3_242;
	bra.uni 	BB3_322;

BB3_242:
	ld.local.u32 	%r789, [%rd25+4];
	or.b32  	%r790, %r789, -2147483648;
	st.local.u32 	[%rd25+4], %r790;
	bra.uni 	BB3_322;

BB3_35:
	setp.eq.s32	%p175, %r770, 15;
	@%p175 bra 	BB3_36;
	bra.uni 	BB3_322;

BB3_36:
	ld.local.u32 	%r997, [%rd12+4];
	or.b32  	%r998, %r997, -2147483648;
	st.local.u32 	[%rd12+4], %r998;
	bra.uni 	BB3_322;

BB3_162:
	setp.eq.s32	%p80, %r770, 79;
	@%p80 bra 	BB3_163;
	bra.uni 	BB3_322;

BB3_163:
	ld.local.u32 	%r869, [%rd20+4];
	or.b32  	%r870, %r869, -2147483648;
	st.local.u32 	[%rd20+4], %r870;
	bra.uni 	BB3_322;

BB3_98:
	setp.eq.s32	%p128, %r770, 47;
	@%p128 bra 	BB3_99;
	bra.uni 	BB3_322;

BB3_99:
	ld.local.u32 	%r933, [%rd16+4];
	or.b32  	%r934, %r933, -2147483648;
	st.local.u32 	[%rd16+4], %r934;
	bra.uni 	BB3_322;

BB3_225:
	setp.eq.s32	%p33, %r770, 111;
	@%p33 bra 	BB3_226;
	bra.uni 	BB3_322;

BB3_226:
	ld.local.u32 	%r805, [%rd24+4];
	or.b32  	%r806, %r805, -2147483648;
	st.local.u32 	[%rd24+4], %r806;
	bra.uni 	BB3_322;

BB3_66:
	setp.eq.s32	%p152, %r770, 31;
	@%p152 bra 	BB3_67;
	bra.uni 	BB3_322;

BB3_67:
	ld.local.u32 	%r965, [%rd14+4];
	or.b32  	%r966, %r965, -2147483648;
	st.local.u32 	[%rd14+4], %r966;
	bra.uni 	BB3_322;

BB3_193:
	setp.eq.s32	%p57, %r770, 95;
	@%p57 bra 	BB3_194;
	bra.uni 	BB3_322;

BB3_194:
	ld.local.u32 	%r837, [%rd22+4];
	or.b32  	%r838, %r837, -2147483648;
	st.local.u32 	[%rd22+4], %r838;
	bra.uni 	BB3_322;

BB3_129:
	setp.eq.s32	%p105, %r770, 63;
	@%p105 bra 	BB3_130;
	bra.uni 	BB3_322;

BB3_130:
	ld.local.u32 	%r901, [%rd18+4];
	or.b32  	%r902, %r901, -2147483648;
	st.local.u32 	[%rd18+4], %r902;
	bra.uni 	BB3_322;

BB3_256:
	setp.ne.s32	%p10, %r770, 127;
	@%p10 bra 	BB3_322;

	ld.local.u32 	%r773, [%rd26+4];
	or.b32  	%r774, %r773, -2147483648;
	st.local.u32 	[%rd26+4], %r774;

BB3_322:
	ld.local.u64 	%rd8844, [%rd9];
	ld.local.u64 	%rd8843, [%rd10];
	ld.local.u64 	%rd8842, [%rd10+8];
	ld.local.u64 	%rd8841, [%rd10+16];
	ld.local.u64 	%rd8840, [%rd10+24];
	ld.local.u64 	%rd8839, [%rd10+32];
	ld.local.u64 	%rd8838, [%rd10+40];
	ld.local.u64 	%rd8837, [%rd10+48];
	ld.local.u32 	%r12444, [%rd10+56];
	ld.local.u32 	%r12443, [%rd11+4];
	setp.gt.u32	%p194, %r7, 111;
	@%p194 bra 	BB3_324;
	bra.uni 	BB3_323;

BB3_324:
	mov.b64	%rd368, {%r12443, %r12444};
	ld.local.u32 	%r1059, [%rd10+64];
	ld.local.u32 	%r1060, [%rd12+4];
	mov.b64	%rd369, {%r1060, %r1059};
	ld.local.u32 	%r1061, [%rd10+72];
	ld.local.u32 	%r1062, [%rd13+4];
	mov.b64	%rd370, {%r1062, %r1061};
	ld.local.u32 	%r1063, [%rd10+80];
	ld.local.u32 	%r1064, [%rd14+4];
	mov.b64	%rd371, {%r1064, %r1063};
	ld.local.u32 	%r1065, [%rd10+88];
	ld.local.u32 	%r1066, [%rd15+4];
	mov.b64	%rd372, {%r1066, %r1065};
	ld.local.u32 	%r1067, [%rd10+96];
	ld.local.u32 	%r1068, [%rd16+4];
	mov.b64	%rd373, {%r1068, %r1067};
	ld.local.u32 	%r1069, [%rd10+104];
	ld.local.u32 	%r1070, [%rd17+4];
	mov.b64	%rd374, {%r1070, %r1069};
	ld.local.u32 	%r1071, [%rd10+112];
	ld.local.u32 	%r1072, [%rd18+4];
	mov.b64	%rd375, {%r1072, %r1071};
	ld.local.u32 	%r1073, [%rd10+120];
	ld.local.u32 	%r1074, [%rd19+4];
	mov.b64	%rd376, {%r1074, %r1073};
	ld.local.u32 	%r1075, [%rd10+128];
	ld.local.u32 	%r1076, [%rd20+4];
	mov.b64	%rd377, {%r1076, %r1075};
	ld.local.u32 	%r1077, [%rd10+136];
	ld.local.u32 	%r1078, [%rd21+4];
	mov.b64	%rd378, {%r1078, %r1077};
	ld.local.u32 	%r1079, [%rd10+144];
	ld.local.u32 	%r1080, [%rd22+4];
	mov.b64	%rd379, {%r1080, %r1079};
	ld.local.u32 	%r1081, [%rd10+152];
	ld.local.u32 	%r1082, [%rd23+4];
	mov.b64	%rd380, {%r1082, %r1081};
	ld.local.u32 	%r1083, [%rd10+160];
	ld.local.u32 	%r1084, [%rd24+4];
	mov.b64	%rd381, {%r1084, %r1083};
	ld.local.u32 	%r1085, [%rd10+168];
	ld.local.u32 	%r1086, [%rd25+4];
	mov.b64	%rd382, {%r1086, %r1085};
	ld.local.u32 	%r1087, [%rd10+176];
	ld.local.u32 	%r1088, [%rd26+4];
	mov.b64	%rd383, {%r1088, %r1087};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd8840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd8840;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 18;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 18;
	mov.b64 	%rd384, {%r1092, %r1091};
	shf.r.wrap.b32 	%r1093, %r1090, %r1089, 14;
	shf.r.wrap.b32 	%r1094, %r1089, %r1090, 14;
	mov.b64 	%rd385, {%r1094, %r1093};
	xor.b64  	%rd386, %rd384, %rd385;
	shf.l.wrap.b32 	%r1095, %r1089, %r1090, 23;
	shf.l.wrap.b32 	%r1096, %r1090, %r1089, 23;
	mov.b64 	%rd387, {%r1096, %r1095};
	xor.b64  	%rd388, %rd386, %rd387;
	xor.b64  	%rd389, %rd8838, %rd8839;
	and.b64  	%rd390, %rd389, %rd8840;
	xor.b64  	%rd391, %rd390, %rd8838;
	add.s64 	%rd392, %rd391, %rd8837;
	add.s64 	%rd393, %rd392, %rd368;
	add.s64 	%rd394, %rd393, %rd35;
	add.s64 	%rd395, %rd394, %rd388;
	add.s64 	%rd396, %rd395, %rd8841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1097}, %rd8844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd8844;
	}
	shf.l.wrap.b32 	%r1099, %r1098, %r1097, 30;
	shf.l.wrap.b32 	%r1100, %r1097, %r1098, 30;
	mov.b64 	%rd397, {%r1100, %r1099};
	shf.r.wrap.b32 	%r1101, %r1097, %r1098, 28;
	shf.r.wrap.b32 	%r1102, %r1098, %r1097, 28;
	mov.b64 	%rd398, {%r1102, %r1101};
	xor.b64  	%rd399, %rd397, %rd398;
	shf.l.wrap.b32 	%r1103, %r1098, %r1097, 25;
	shf.l.wrap.b32 	%r1104, %r1097, %r1098, 25;
	mov.b64 	%rd400, {%r1104, %r1103};
	xor.b64  	%rd401, %rd399, %rd400;
	xor.b64  	%rd402, %rd8843, %rd8844;
	xor.b64  	%rd403, %rd8842, %rd8844;
	and.b64  	%rd404, %rd403, %rd402;
	xor.b64  	%rd405, %rd404, %rd8844;
	add.s64 	%rd406, %rd395, %rd405;
	add.s64 	%rd407, %rd406, %rd401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd396;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 14;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 14;
	mov.b64 	%rd408, {%r1108, %r1107};
	shf.r.wrap.b32 	%r1109, %r1106, %r1105, 18;
	shf.r.wrap.b32 	%r1110, %r1105, %r1106, 18;
	mov.b64 	%rd409, {%r1110, %r1109};
	xor.b64  	%rd410, %rd409, %rd408;
	shf.l.wrap.b32 	%r1111, %r1105, %r1106, 23;
	shf.l.wrap.b32 	%r1112, %r1106, %r1105, 23;
	mov.b64 	%rd411, {%r1112, %r1111};
	xor.b64  	%rd412, %rd410, %rd411;
	xor.b64  	%rd413, %rd8839, %rd8840;
	and.b64  	%rd414, %rd396, %rd413;
	xor.b64  	%rd415, %rd414, %rd8839;
	add.s64 	%rd416, %rd369, %rd8838;
	add.s64 	%rd417, %rd416, %rd36;
	add.s64 	%rd418, %rd417, %rd415;
	add.s64 	%rd419, %rd418, %rd412;
	add.s64 	%rd420, %rd419, %rd8842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd407;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 28;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 28;
	mov.b64 	%rd421, {%r1116, %r1115};
	shf.l.wrap.b32 	%r1117, %r1113, %r1114, 30;
	shf.l.wrap.b32 	%r1118, %r1114, %r1113, 30;
	mov.b64 	%rd422, {%r1118, %r1117};
	xor.b64  	%rd423, %rd422, %rd421;
	shf.l.wrap.b32 	%r1119, %r1113, %r1114, 25;
	shf.l.wrap.b32 	%r1120, %r1114, %r1113, 25;
	mov.b64 	%rd424, {%r1120, %r1119};
	xor.b64  	%rd425, %rd423, %rd424;
	xor.b64  	%rd426, %rd407, %rd8843;
	xor.b64  	%rd427, %rd407, %rd8844;
	and.b64  	%rd428, %rd427, %rd426;
	xor.b64  	%rd429, %rd428, %rd407;
	add.s64 	%rd430, %rd419, %rd429;
	add.s64 	%rd431, %rd430, %rd425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd420;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 14;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 14;
	mov.b64 	%rd432, {%r1124, %r1123};
	shf.r.wrap.b32 	%r1125, %r1122, %r1121, 18;
	shf.r.wrap.b32 	%r1126, %r1121, %r1122, 18;
	mov.b64 	%rd433, {%r1126, %r1125};
	xor.b64  	%rd434, %rd433, %rd432;
	shf.l.wrap.b32 	%r1127, %r1121, %r1122, 23;
	shf.l.wrap.b32 	%r1128, %r1122, %r1121, 23;
	mov.b64 	%rd435, {%r1128, %r1127};
	xor.b64  	%rd436, %rd434, %rd435;
	xor.b64  	%rd437, %rd396, %rd8840;
	and.b64  	%rd438, %rd420, %rd437;
	xor.b64  	%rd439, %rd438, %rd8840;
	add.s64 	%rd440, %rd370, %rd8839;
	add.s64 	%rd441, %rd440, %rd37;
	add.s64 	%rd442, %rd441, %rd439;
	add.s64 	%rd443, %rd442, %rd436;
	add.s64 	%rd444, %rd443, %rd8843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd431;
	}
	shf.r.wrap.b32 	%r1131, %r1130, %r1129, 28;
	shf.r.wrap.b32 	%r1132, %r1129, %r1130, 28;
	mov.b64 	%rd445, {%r1132, %r1131};
	shf.l.wrap.b32 	%r1133, %r1129, %r1130, 30;
	shf.l.wrap.b32 	%r1134, %r1130, %r1129, 30;
	mov.b64 	%rd446, {%r1134, %r1133};
	xor.b64  	%rd447, %rd446, %rd445;
	shf.l.wrap.b32 	%r1135, %r1129, %r1130, 25;
	shf.l.wrap.b32 	%r1136, %r1130, %r1129, 25;
	mov.b64 	%rd448, {%r1136, %r1135};
	xor.b64  	%rd449, %rd447, %rd448;
	xor.b64  	%rd450, %rd431, %rd8844;
	xor.b64  	%rd451, %rd431, %rd407;
	and.b64  	%rd452, %rd451, %rd450;
	xor.b64  	%rd453, %rd452, %rd431;
	add.s64 	%rd454, %rd443, %rd453;
	add.s64 	%rd455, %rd454, %rd449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1137,%dummy}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1138}, %rd444;
	}
	shf.r.wrap.b32 	%r1139, %r1138, %r1137, 14;
	shf.r.wrap.b32 	%r1140, %r1137, %r1138, 14;
	mov.b64 	%rd456, {%r1140, %r1139};
	shf.r.wrap.b32 	%r1141, %r1138, %r1137, 18;
	shf.r.wrap.b32 	%r1142, %r1137, %r1138, 18;
	mov.b64 	%rd457, {%r1142, %r1141};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.l.wrap.b32 	%r1143, %r1137, %r1138, 23;
	shf.l.wrap.b32 	%r1144, %r1138, %r1137, 23;
	mov.b64 	%rd459, {%r1144, %r1143};
	xor.b64  	%rd460, %rd458, %rd459;
	xor.b64  	%rd461, %rd420, %rd396;
	and.b64  	%rd462, %rd444, %rd461;
	xor.b64  	%rd463, %rd462, %rd396;
	add.s64 	%rd464, %rd371, %rd8840;
	add.s64 	%rd465, %rd464, %rd38;
	add.s64 	%rd466, %rd465, %rd463;
	add.s64 	%rd467, %rd466, %rd460;
	add.s64 	%rd468, %rd467, %rd8844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1146}, %rd455;
	}
	shf.r.wrap.b32 	%r1147, %r1146, %r1145, 28;
	shf.r.wrap.b32 	%r1148, %r1145, %r1146, 28;
	mov.b64 	%rd469, {%r1148, %r1147};
	shf.l.wrap.b32 	%r1149, %r1145, %r1146, 30;
	shf.l.wrap.b32 	%r1150, %r1146, %r1145, 30;
	mov.b64 	%rd470, {%r1150, %r1149};
	xor.b64  	%rd471, %rd470, %rd469;
	shf.l.wrap.b32 	%r1151, %r1145, %r1146, 25;
	shf.l.wrap.b32 	%r1152, %r1146, %r1145, 25;
	mov.b64 	%rd472, {%r1152, %r1151};
	xor.b64  	%rd473, %rd471, %rd472;
	xor.b64  	%rd474, %rd455, %rd407;
	xor.b64  	%rd475, %rd455, %rd431;
	and.b64  	%rd476, %rd475, %rd474;
	xor.b64  	%rd477, %rd476, %rd455;
	add.s64 	%rd478, %rd467, %rd477;
	add.s64 	%rd479, %rd478, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd468;
	}
	shf.r.wrap.b32 	%r1155, %r1154, %r1153, 14;
	shf.r.wrap.b32 	%r1156, %r1153, %r1154, 14;
	mov.b64 	%rd480, {%r1156, %r1155};
	shf.r.wrap.b32 	%r1157, %r1154, %r1153, 18;
	shf.r.wrap.b32 	%r1158, %r1153, %r1154, 18;
	mov.b64 	%rd481, {%r1158, %r1157};
	xor.b64  	%rd482, %rd481, %rd480;
	shf.l.wrap.b32 	%r1159, %r1153, %r1154, 23;
	shf.l.wrap.b32 	%r1160, %r1154, %r1153, 23;
	mov.b64 	%rd483, {%r1160, %r1159};
	xor.b64  	%rd484, %rd482, %rd483;
	xor.b64  	%rd485, %rd444, %rd420;
	and.b64  	%rd486, %rd468, %rd485;
	xor.b64  	%rd487, %rd486, %rd420;
	add.s64 	%rd488, %rd396, %rd372;
	add.s64 	%rd489, %rd488, %rd39;
	add.s64 	%rd490, %rd489, %rd487;
	add.s64 	%rd491, %rd490, %rd484;
	add.s64 	%rd492, %rd491, %rd407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1161,%dummy}, %rd479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1162}, %rd479;
	}
	shf.r.wrap.b32 	%r1163, %r1162, %r1161, 28;
	shf.r.wrap.b32 	%r1164, %r1161, %r1162, 28;
	mov.b64 	%rd493, {%r1164, %r1163};
	shf.l.wrap.b32 	%r1165, %r1161, %r1162, 30;
	shf.l.wrap.b32 	%r1166, %r1162, %r1161, 30;
	mov.b64 	%rd494, {%r1166, %r1165};
	xor.b64  	%rd495, %rd494, %rd493;
	shf.l.wrap.b32 	%r1167, %r1161, %r1162, 25;
	shf.l.wrap.b32 	%r1168, %r1162, %r1161, 25;
	mov.b64 	%rd496, {%r1168, %r1167};
	xor.b64  	%rd497, %rd495, %rd496;
	xor.b64  	%rd498, %rd479, %rd431;
	xor.b64  	%rd499, %rd479, %rd455;
	and.b64  	%rd500, %rd499, %rd498;
	xor.b64  	%rd501, %rd500, %rd479;
	add.s64 	%rd502, %rd491, %rd501;
	add.s64 	%rd503, %rd502, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1169,%dummy}, %rd492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1170}, %rd492;
	}
	shf.r.wrap.b32 	%r1171, %r1170, %r1169, 14;
	shf.r.wrap.b32 	%r1172, %r1169, %r1170, 14;
	mov.b64 	%rd504, {%r1172, %r1171};
	shf.r.wrap.b32 	%r1173, %r1170, %r1169, 18;
	shf.r.wrap.b32 	%r1174, %r1169, %r1170, 18;
	mov.b64 	%rd505, {%r1174, %r1173};
	xor.b64  	%rd506, %rd505, %rd504;
	shf.l.wrap.b32 	%r1175, %r1169, %r1170, 23;
	shf.l.wrap.b32 	%r1176, %r1170, %r1169, 23;
	mov.b64 	%rd507, {%r1176, %r1175};
	xor.b64  	%rd508, %rd506, %rd507;
	xor.b64  	%rd509, %rd468, %rd444;
	and.b64  	%rd510, %rd492, %rd509;
	xor.b64  	%rd511, %rd510, %rd444;
	add.s64 	%rd512, %rd420, %rd373;
	add.s64 	%rd513, %rd512, %rd40;
	add.s64 	%rd514, %rd513, %rd511;
	add.s64 	%rd515, %rd514, %rd508;
	add.s64 	%rd516, %rd515, %rd431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1177,%dummy}, %rd503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1178}, %rd503;
	}
	shf.r.wrap.b32 	%r1179, %r1178, %r1177, 28;
	shf.r.wrap.b32 	%r1180, %r1177, %r1178, 28;
	mov.b64 	%rd517, {%r1180, %r1179};
	shf.l.wrap.b32 	%r1181, %r1177, %r1178, 30;
	shf.l.wrap.b32 	%r1182, %r1178, %r1177, 30;
	mov.b64 	%rd518, {%r1182, %r1181};
	xor.b64  	%rd519, %rd518, %rd517;
	shf.l.wrap.b32 	%r1183, %r1177, %r1178, 25;
	shf.l.wrap.b32 	%r1184, %r1178, %r1177, 25;
	mov.b64 	%rd520, {%r1184, %r1183};
	xor.b64  	%rd521, %rd519, %rd520;
	xor.b64  	%rd522, %rd503, %rd455;
	xor.b64  	%rd523, %rd503, %rd479;
	and.b64  	%rd524, %rd523, %rd522;
	xor.b64  	%rd525, %rd524, %rd503;
	add.s64 	%rd526, %rd515, %rd525;
	add.s64 	%rd527, %rd526, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd516;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 14;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 14;
	mov.b64 	%rd528, {%r1188, %r1187};
	shf.r.wrap.b32 	%r1189, %r1186, %r1185, 18;
	shf.r.wrap.b32 	%r1190, %r1185, %r1186, 18;
	mov.b64 	%rd529, {%r1190, %r1189};
	xor.b64  	%rd530, %rd529, %rd528;
	shf.l.wrap.b32 	%r1191, %r1185, %r1186, 23;
	shf.l.wrap.b32 	%r1192, %r1186, %r1185, 23;
	mov.b64 	%rd531, {%r1192, %r1191};
	xor.b64  	%rd532, %rd530, %rd531;
	xor.b64  	%rd533, %rd492, %rd468;
	and.b64  	%rd534, %rd516, %rd533;
	xor.b64  	%rd535, %rd534, %rd468;
	add.s64 	%rd536, %rd444, %rd374;
	add.s64 	%rd537, %rd536, %rd41;
	add.s64 	%rd538, %rd537, %rd535;
	add.s64 	%rd539, %rd538, %rd532;
	add.s64 	%rd540, %rd539, %rd455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1193,%dummy}, %rd527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1194}, %rd527;
	}
	shf.r.wrap.b32 	%r1195, %r1194, %r1193, 28;
	shf.r.wrap.b32 	%r1196, %r1193, %r1194, 28;
	mov.b64 	%rd541, {%r1196, %r1195};
	shf.l.wrap.b32 	%r1197, %r1193, %r1194, 30;
	shf.l.wrap.b32 	%r1198, %r1194, %r1193, 30;
	mov.b64 	%rd542, {%r1198, %r1197};
	xor.b64  	%rd543, %rd542, %rd541;
	shf.l.wrap.b32 	%r1199, %r1193, %r1194, 25;
	shf.l.wrap.b32 	%r1200, %r1194, %r1193, 25;
	mov.b64 	%rd544, {%r1200, %r1199};
	xor.b64  	%rd545, %rd543, %rd544;
	xor.b64  	%rd546, %rd527, %rd479;
	xor.b64  	%rd547, %rd527, %rd503;
	and.b64  	%rd548, %rd547, %rd546;
	xor.b64  	%rd549, %rd548, %rd527;
	add.s64 	%rd550, %rd539, %rd549;
	add.s64 	%rd551, %rd550, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1201,%dummy}, %rd540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1202}, %rd540;
	}
	shf.r.wrap.b32 	%r1203, %r1202, %r1201, 14;
	shf.r.wrap.b32 	%r1204, %r1201, %r1202, 14;
	mov.b64 	%rd552, {%r1204, %r1203};
	shf.r.wrap.b32 	%r1205, %r1202, %r1201, 18;
	shf.r.wrap.b32 	%r1206, %r1201, %r1202, 18;
	mov.b64 	%rd553, {%r1206, %r1205};
	xor.b64  	%rd554, %rd553, %rd552;
	shf.l.wrap.b32 	%r1207, %r1201, %r1202, 23;
	shf.l.wrap.b32 	%r1208, %r1202, %r1201, 23;
	mov.b64 	%rd555, {%r1208, %r1207};
	xor.b64  	%rd556, %rd554, %rd555;
	xor.b64  	%rd557, %rd516, %rd492;
	and.b64  	%rd558, %rd540, %rd557;
	xor.b64  	%rd559, %rd558, %rd492;
	add.s64 	%rd560, %rd468, %rd375;
	add.s64 	%rd561, %rd560, %rd42;
	add.s64 	%rd562, %rd561, %rd559;
	add.s64 	%rd563, %rd562, %rd556;
	add.s64 	%rd564, %rd563, %rd479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1209,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1210}, %rd551;
	}
	shf.r.wrap.b32 	%r1211, %r1210, %r1209, 28;
	shf.r.wrap.b32 	%r1212, %r1209, %r1210, 28;
	mov.b64 	%rd565, {%r1212, %r1211};
	shf.l.wrap.b32 	%r1213, %r1209, %r1210, 30;
	shf.l.wrap.b32 	%r1214, %r1210, %r1209, 30;
	mov.b64 	%rd566, {%r1214, %r1213};
	xor.b64  	%rd567, %rd566, %rd565;
	shf.l.wrap.b32 	%r1215, %r1209, %r1210, 25;
	shf.l.wrap.b32 	%r1216, %r1210, %r1209, 25;
	mov.b64 	%rd568, {%r1216, %r1215};
	xor.b64  	%rd569, %rd567, %rd568;
	xor.b64  	%rd570, %rd551, %rd503;
	xor.b64  	%rd571, %rd551, %rd527;
	and.b64  	%rd572, %rd571, %rd570;
	xor.b64  	%rd573, %rd572, %rd551;
	add.s64 	%rd574, %rd563, %rd573;
	add.s64 	%rd575, %rd574, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd564;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 14;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 14;
	mov.b64 	%rd576, {%r1220, %r1219};
	shf.r.wrap.b32 	%r1221, %r1218, %r1217, 18;
	shf.r.wrap.b32 	%r1222, %r1217, %r1218, 18;
	mov.b64 	%rd577, {%r1222, %r1221};
	xor.b64  	%rd578, %rd577, %rd576;
	shf.l.wrap.b32 	%r1223, %r1217, %r1218, 23;
	shf.l.wrap.b32 	%r1224, %r1218, %r1217, 23;
	mov.b64 	%rd579, {%r1224, %r1223};
	xor.b64  	%rd580, %rd578, %rd579;
	xor.b64  	%rd581, %rd540, %rd516;
	and.b64  	%rd582, %rd564, %rd581;
	xor.b64  	%rd583, %rd582, %rd516;
	add.s64 	%rd584, %rd492, %rd376;
	add.s64 	%rd585, %rd584, %rd43;
	add.s64 	%rd586, %rd585, %rd583;
	add.s64 	%rd587, %rd586, %rd580;
	add.s64 	%rd588, %rd587, %rd503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd575;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 28;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 28;
	mov.b64 	%rd589, {%r1228, %r1227};
	shf.l.wrap.b32 	%r1229, %r1225, %r1226, 30;
	shf.l.wrap.b32 	%r1230, %r1226, %r1225, 30;
	mov.b64 	%rd590, {%r1230, %r1229};
	xor.b64  	%rd591, %rd590, %rd589;
	shf.l.wrap.b32 	%r1231, %r1225, %r1226, 25;
	shf.l.wrap.b32 	%r1232, %r1226, %r1225, 25;
	mov.b64 	%rd592, {%r1232, %r1231};
	xor.b64  	%rd593, %rd591, %rd592;
	xor.b64  	%rd594, %rd575, %rd527;
	xor.b64  	%rd595, %rd575, %rd551;
	and.b64  	%rd596, %rd595, %rd594;
	xor.b64  	%rd597, %rd596, %rd575;
	add.s64 	%rd598, %rd587, %rd597;
	add.s64 	%rd599, %rd598, %rd593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd588;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 14;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 14;
	mov.b64 	%rd600, {%r1236, %r1235};
	shf.r.wrap.b32 	%r1237, %r1234, %r1233, 18;
	shf.r.wrap.b32 	%r1238, %r1233, %r1234, 18;
	mov.b64 	%rd601, {%r1238, %r1237};
	xor.b64  	%rd602, %rd601, %rd600;
	shf.l.wrap.b32 	%r1239, %r1233, %r1234, 23;
	shf.l.wrap.b32 	%r1240, %r1234, %r1233, 23;
	mov.b64 	%rd603, {%r1240, %r1239};
	xor.b64  	%rd604, %rd602, %rd603;
	xor.b64  	%rd605, %rd564, %rd540;
	and.b64  	%rd606, %rd588, %rd605;
	xor.b64  	%rd607, %rd606, %rd540;
	add.s64 	%rd608, %rd516, %rd377;
	add.s64 	%rd609, %rd608, %rd44;
	add.s64 	%rd610, %rd609, %rd607;
	add.s64 	%rd611, %rd610, %rd604;
	add.s64 	%rd612, %rd611, %rd527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd599;
	}
	shf.r.wrap.b32 	%r1243, %r1242, %r1241, 28;
	shf.r.wrap.b32 	%r1244, %r1241, %r1242, 28;
	mov.b64 	%rd613, {%r1244, %r1243};
	shf.l.wrap.b32 	%r1245, %r1241, %r1242, 30;
	shf.l.wrap.b32 	%r1246, %r1242, %r1241, 30;
	mov.b64 	%rd614, {%r1246, %r1245};
	xor.b64  	%rd615, %rd614, %rd613;
	shf.l.wrap.b32 	%r1247, %r1241, %r1242, 25;
	shf.l.wrap.b32 	%r1248, %r1242, %r1241, 25;
	mov.b64 	%rd616, {%r1248, %r1247};
	xor.b64  	%rd617, %rd615, %rd616;
	xor.b64  	%rd618, %rd599, %rd551;
	xor.b64  	%rd619, %rd599, %rd575;
	and.b64  	%rd620, %rd619, %rd618;
	xor.b64  	%rd621, %rd620, %rd599;
	add.s64 	%rd622, %rd611, %rd621;
	add.s64 	%rd623, %rd622, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1249,%dummy}, %rd612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1250}, %rd612;
	}
	shf.r.wrap.b32 	%r1251, %r1250, %r1249, 14;
	shf.r.wrap.b32 	%r1252, %r1249, %r1250, 14;
	mov.b64 	%rd624, {%r1252, %r1251};
	shf.r.wrap.b32 	%r1253, %r1250, %r1249, 18;
	shf.r.wrap.b32 	%r1254, %r1249, %r1250, 18;
	mov.b64 	%rd625, {%r1254, %r1253};
	xor.b64  	%rd626, %rd625, %rd624;
	shf.l.wrap.b32 	%r1255, %r1249, %r1250, 23;
	shf.l.wrap.b32 	%r1256, %r1250, %r1249, 23;
	mov.b64 	%rd627, {%r1256, %r1255};
	xor.b64  	%rd628, %rd626, %rd627;
	xor.b64  	%rd629, %rd588, %rd564;
	and.b64  	%rd630, %rd612, %rd629;
	xor.b64  	%rd631, %rd630, %rd564;
	add.s64 	%rd632, %rd540, %rd378;
	add.s64 	%rd633, %rd632, %rd45;
	add.s64 	%rd634, %rd633, %rd631;
	add.s64 	%rd635, %rd634, %rd628;
	add.s64 	%rd636, %rd635, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1257,%dummy}, %rd623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1258}, %rd623;
	}
	shf.r.wrap.b32 	%r1259, %r1258, %r1257, 28;
	shf.r.wrap.b32 	%r1260, %r1257, %r1258, 28;
	mov.b64 	%rd637, {%r1260, %r1259};
	shf.l.wrap.b32 	%r1261, %r1257, %r1258, 30;
	shf.l.wrap.b32 	%r1262, %r1258, %r1257, 30;
	mov.b64 	%rd638, {%r1262, %r1261};
	xor.b64  	%rd639, %rd638, %rd637;
	shf.l.wrap.b32 	%r1263, %r1257, %r1258, 25;
	shf.l.wrap.b32 	%r1264, %r1258, %r1257, 25;
	mov.b64 	%rd640, {%r1264, %r1263};
	xor.b64  	%rd641, %rd639, %rd640;
	xor.b64  	%rd642, %rd623, %rd575;
	xor.b64  	%rd643, %rd623, %rd599;
	and.b64  	%rd644, %rd643, %rd642;
	xor.b64  	%rd645, %rd644, %rd623;
	add.s64 	%rd646, %rd635, %rd645;
	add.s64 	%rd647, %rd646, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1265,%dummy}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1266}, %rd636;
	}
	shf.r.wrap.b32 	%r1267, %r1266, %r1265, 14;
	shf.r.wrap.b32 	%r1268, %r1265, %r1266, 14;
	mov.b64 	%rd648, {%r1268, %r1267};
	shf.r.wrap.b32 	%r1269, %r1266, %r1265, 18;
	shf.r.wrap.b32 	%r1270, %r1265, %r1266, 18;
	mov.b64 	%rd649, {%r1270, %r1269};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.l.wrap.b32 	%r1271, %r1265, %r1266, 23;
	shf.l.wrap.b32 	%r1272, %r1266, %r1265, 23;
	mov.b64 	%rd651, {%r1272, %r1271};
	xor.b64  	%rd652, %rd650, %rd651;
	xor.b64  	%rd653, %rd612, %rd588;
	and.b64  	%rd654, %rd636, %rd653;
	xor.b64  	%rd655, %rd654, %rd588;
	add.s64 	%rd656, %rd564, %rd379;
	add.s64 	%rd657, %rd656, %rd46;
	add.s64 	%rd658, %rd657, %rd655;
	add.s64 	%rd659, %rd658, %rd652;
	add.s64 	%rd660, %rd659, %rd575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1273,%dummy}, %rd647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1274}, %rd647;
	}
	shf.r.wrap.b32 	%r1275, %r1274, %r1273, 28;
	shf.r.wrap.b32 	%r1276, %r1273, %r1274, 28;
	mov.b64 	%rd661, {%r1276, %r1275};
	shf.l.wrap.b32 	%r1277, %r1273, %r1274, 30;
	shf.l.wrap.b32 	%r1278, %r1274, %r1273, 30;
	mov.b64 	%rd662, {%r1278, %r1277};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.l.wrap.b32 	%r1279, %r1273, %r1274, 25;
	shf.l.wrap.b32 	%r1280, %r1274, %r1273, 25;
	mov.b64 	%rd664, {%r1280, %r1279};
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd647, %rd599;
	xor.b64  	%rd667, %rd647, %rd623;
	and.b64  	%rd668, %rd667, %rd666;
	xor.b64  	%rd669, %rd668, %rd647;
	add.s64 	%rd670, %rd659, %rd669;
	add.s64 	%rd671, %rd670, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1281,%dummy}, %rd660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1282}, %rd660;
	}
	shf.r.wrap.b32 	%r1283, %r1282, %r1281, 14;
	shf.r.wrap.b32 	%r1284, %r1281, %r1282, 14;
	mov.b64 	%rd672, {%r1284, %r1283};
	shf.r.wrap.b32 	%r1285, %r1282, %r1281, 18;
	shf.r.wrap.b32 	%r1286, %r1281, %r1282, 18;
	mov.b64 	%rd673, {%r1286, %r1285};
	xor.b64  	%rd674, %rd673, %rd672;
	shf.l.wrap.b32 	%r1287, %r1281, %r1282, 23;
	shf.l.wrap.b32 	%r1288, %r1282, %r1281, 23;
	mov.b64 	%rd675, {%r1288, %r1287};
	xor.b64  	%rd676, %rd674, %rd675;
	xor.b64  	%rd677, %rd636, %rd612;
	and.b64  	%rd678, %rd660, %rd677;
	xor.b64  	%rd679, %rd678, %rd612;
	add.s64 	%rd680, %rd588, %rd380;
	add.s64 	%rd681, %rd680, %rd47;
	add.s64 	%rd682, %rd681, %rd679;
	add.s64 	%rd683, %rd682, %rd676;
	add.s64 	%rd684, %rd683, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1289,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1290}, %rd671;
	}
	shf.r.wrap.b32 	%r1291, %r1290, %r1289, 28;
	shf.r.wrap.b32 	%r1292, %r1289, %r1290, 28;
	mov.b64 	%rd685, {%r1292, %r1291};
	shf.l.wrap.b32 	%r1293, %r1289, %r1290, 30;
	shf.l.wrap.b32 	%r1294, %r1290, %r1289, 30;
	mov.b64 	%rd686, {%r1294, %r1293};
	xor.b64  	%rd687, %rd686, %rd685;
	shf.l.wrap.b32 	%r1295, %r1289, %r1290, 25;
	shf.l.wrap.b32 	%r1296, %r1290, %r1289, 25;
	mov.b64 	%rd688, {%r1296, %r1295};
	xor.b64  	%rd689, %rd687, %rd688;
	xor.b64  	%rd690, %rd671, %rd623;
	xor.b64  	%rd691, %rd671, %rd647;
	and.b64  	%rd692, %rd691, %rd690;
	xor.b64  	%rd693, %rd692, %rd671;
	add.s64 	%rd694, %rd683, %rd693;
	add.s64 	%rd695, %rd694, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1297,%dummy}, %rd684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1298}, %rd684;
	}
	shf.r.wrap.b32 	%r1299, %r1298, %r1297, 14;
	shf.r.wrap.b32 	%r1300, %r1297, %r1298, 14;
	mov.b64 	%rd696, {%r1300, %r1299};
	shf.r.wrap.b32 	%r1301, %r1298, %r1297, 18;
	shf.r.wrap.b32 	%r1302, %r1297, %r1298, 18;
	mov.b64 	%rd697, {%r1302, %r1301};
	xor.b64  	%rd698, %rd697, %rd696;
	shf.l.wrap.b32 	%r1303, %r1297, %r1298, 23;
	shf.l.wrap.b32 	%r1304, %r1298, %r1297, 23;
	mov.b64 	%rd699, {%r1304, %r1303};
	xor.b64  	%rd700, %rd698, %rd699;
	xor.b64  	%rd701, %rd660, %rd636;
	and.b64  	%rd702, %rd684, %rd701;
	xor.b64  	%rd703, %rd702, %rd636;
	add.s64 	%rd704, %rd612, %rd381;
	add.s64 	%rd705, %rd704, %rd48;
	add.s64 	%rd706, %rd705, %rd703;
	add.s64 	%rd707, %rd706, %rd700;
	add.s64 	%rd708, %rd707, %rd623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1305,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1306}, %rd695;
	}
	shf.r.wrap.b32 	%r1307, %r1306, %r1305, 28;
	shf.r.wrap.b32 	%r1308, %r1305, %r1306, 28;
	mov.b64 	%rd709, {%r1308, %r1307};
	shf.l.wrap.b32 	%r1309, %r1305, %r1306, 30;
	shf.l.wrap.b32 	%r1310, %r1306, %r1305, 30;
	mov.b64 	%rd710, {%r1310, %r1309};
	xor.b64  	%rd711, %rd710, %rd709;
	shf.l.wrap.b32 	%r1311, %r1305, %r1306, 25;
	shf.l.wrap.b32 	%r1312, %r1306, %r1305, 25;
	mov.b64 	%rd712, {%r1312, %r1311};
	xor.b64  	%rd713, %rd711, %rd712;
	xor.b64  	%rd714, %rd695, %rd647;
	xor.b64  	%rd715, %rd695, %rd671;
	and.b64  	%rd716, %rd715, %rd714;
	xor.b64  	%rd717, %rd716, %rd695;
	add.s64 	%rd718, %rd707, %rd717;
	add.s64 	%rd719, %rd718, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1313,%dummy}, %rd708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1314}, %rd708;
	}
	shf.r.wrap.b32 	%r1315, %r1314, %r1313, 14;
	shf.r.wrap.b32 	%r1316, %r1313, %r1314, 14;
	mov.b64 	%rd720, {%r1316, %r1315};
	shf.r.wrap.b32 	%r1317, %r1314, %r1313, 18;
	shf.r.wrap.b32 	%r1318, %r1313, %r1314, 18;
	mov.b64 	%rd721, {%r1318, %r1317};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.l.wrap.b32 	%r1319, %r1313, %r1314, 23;
	shf.l.wrap.b32 	%r1320, %r1314, %r1313, 23;
	mov.b64 	%rd723, {%r1320, %r1319};
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd684, %rd660;
	and.b64  	%rd726, %rd708, %rd725;
	xor.b64  	%rd727, %rd726, %rd660;
	add.s64 	%rd728, %rd636, %rd382;
	add.s64 	%rd729, %rd728, %rd49;
	add.s64 	%rd730, %rd729, %rd727;
	add.s64 	%rd731, %rd730, %rd724;
	add.s64 	%rd732, %rd731, %rd647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1321,%dummy}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1322}, %rd719;
	}
	shf.r.wrap.b32 	%r1323, %r1322, %r1321, 28;
	shf.r.wrap.b32 	%r1324, %r1321, %r1322, 28;
	mov.b64 	%rd733, {%r1324, %r1323};
	shf.l.wrap.b32 	%r1325, %r1321, %r1322, 30;
	shf.l.wrap.b32 	%r1326, %r1322, %r1321, 30;
	mov.b64 	%rd734, {%r1326, %r1325};
	xor.b64  	%rd735, %rd734, %rd733;
	shf.l.wrap.b32 	%r1327, %r1321, %r1322, 25;
	shf.l.wrap.b32 	%r1328, %r1322, %r1321, 25;
	mov.b64 	%rd736, {%r1328, %r1327};
	xor.b64  	%rd737, %rd735, %rd736;
	xor.b64  	%rd738, %rd719, %rd671;
	xor.b64  	%rd739, %rd719, %rd695;
	and.b64  	%rd740, %rd739, %rd738;
	xor.b64  	%rd741, %rd740, %rd719;
	add.s64 	%rd742, %rd731, %rd741;
	add.s64 	%rd743, %rd742, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd732;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 14;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 14;
	mov.b64 	%rd744, {%r1332, %r1331};
	shf.r.wrap.b32 	%r1333, %r1330, %r1329, 18;
	shf.r.wrap.b32 	%r1334, %r1329, %r1330, 18;
	mov.b64 	%rd745, {%r1334, %r1333};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.l.wrap.b32 	%r1335, %r1329, %r1330, 23;
	shf.l.wrap.b32 	%r1336, %r1330, %r1329, 23;
	mov.b64 	%rd747, {%r1336, %r1335};
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd708, %rd684;
	and.b64  	%rd750, %rd732, %rd749;
	xor.b64  	%rd751, %rd750, %rd684;
	add.s64 	%rd752, %rd660, %rd383;
	add.s64 	%rd753, %rd752, %rd50;
	add.s64 	%rd754, %rd753, %rd751;
	add.s64 	%rd755, %rd754, %rd748;
	add.s64 	%rd756, %rd755, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1337,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1338}, %rd743;
	}
	shf.r.wrap.b32 	%r1339, %r1338, %r1337, 28;
	shf.r.wrap.b32 	%r1340, %r1337, %r1338, 28;
	mov.b64 	%rd757, {%r1340, %r1339};
	shf.l.wrap.b32 	%r1341, %r1337, %r1338, 30;
	shf.l.wrap.b32 	%r1342, %r1338, %r1337, 30;
	mov.b64 	%rd758, {%r1342, %r1341};
	xor.b64  	%rd759, %rd758, %rd757;
	shf.l.wrap.b32 	%r1343, %r1337, %r1338, 25;
	shf.l.wrap.b32 	%r1344, %r1338, %r1337, 25;
	mov.b64 	%rd760, {%r1344, %r1343};
	xor.b64  	%rd761, %rd759, %rd760;
	xor.b64  	%rd762, %rd743, %rd695;
	xor.b64  	%rd763, %rd743, %rd719;
	and.b64  	%rd764, %rd763, %rd762;
	xor.b64  	%rd765, %rd764, %rd743;
	add.s64 	%rd766, %rd755, %rd765;
	add.s64 	%rd767, %rd766, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd382;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 19;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 19;
	mov.b64 	%rd768, {%r1348, %r1347};
	shf.l.wrap.b32 	%r1349, %r1345, %r1346, 3;
	shf.l.wrap.b32 	%r1350, %r1346, %r1345, 3;
	mov.b64 	%rd769, {%r1350, %r1349};
	shr.u64 	%rd770, %rd382, 6;
	xor.b64  	%rd771, %rd768, %rd770;
	xor.b64  	%rd772, %rd771, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd369;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 1;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 1;
	mov.b64 	%rd773, {%r1354, %r1353};
	shf.r.wrap.b32 	%r1355, %r1352, %r1351, 8;
	shf.r.wrap.b32 	%r1356, %r1351, %r1352, 8;
	mov.b64 	%rd774, {%r1356, %r1355};
	shr.u64 	%rd775, %rd369, 7;
	xor.b64  	%rd776, %rd773, %rd775;
	xor.b64  	%rd777, %rd776, %rd774;
	add.s64 	%rd778, %rd377, %rd368;
	add.s64 	%rd779, %rd778, %rd772;
	add.s64 	%rd780, %rd779, %rd777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1357,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1358}, %rd383;
	}
	shf.r.wrap.b32 	%r1359, %r1358, %r1357, 19;
	shf.r.wrap.b32 	%r1360, %r1357, %r1358, 19;
	mov.b64 	%rd781, {%r1360, %r1359};
	shf.l.wrap.b32 	%r1361, %r1357, %r1358, 3;
	shf.l.wrap.b32 	%r1362, %r1358, %r1357, 3;
	mov.b64 	%rd782, {%r1362, %r1361};
	shr.u64 	%rd783, %rd383, 6;
	xor.b64  	%rd784, %rd781, %rd783;
	xor.b64  	%rd785, %rd784, %rd782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd370;
	}
	shf.r.wrap.b32 	%r1365, %r1364, %r1363, 1;
	shf.r.wrap.b32 	%r1366, %r1363, %r1364, 1;
	mov.b64 	%rd786, {%r1366, %r1365};
	shf.r.wrap.b32 	%r1367, %r1364, %r1363, 8;
	shf.r.wrap.b32 	%r1368, %r1363, %r1364, 8;
	mov.b64 	%rd787, {%r1368, %r1367};
	shr.u64 	%rd788, %rd370, 7;
	xor.b64  	%rd789, %rd786, %rd788;
	xor.b64  	%rd790, %rd789, %rd787;
	add.s64 	%rd791, %rd378, %rd369;
	add.s64 	%rd792, %rd791, %rd785;
	add.s64 	%rd793, %rd792, %rd790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1369,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1370}, %rd780;
	}
	shf.r.wrap.b32 	%r1371, %r1370, %r1369, 19;
	shf.r.wrap.b32 	%r1372, %r1369, %r1370, 19;
	mov.b64 	%rd794, {%r1372, %r1371};
	shf.l.wrap.b32 	%r1373, %r1369, %r1370, 3;
	shf.l.wrap.b32 	%r1374, %r1370, %r1369, 3;
	mov.b64 	%rd795, {%r1374, %r1373};
	shr.u64 	%rd796, %rd780, 6;
	xor.b64  	%rd797, %rd794, %rd796;
	xor.b64  	%rd798, %rd797, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd371;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 1;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 1;
	mov.b64 	%rd799, {%r1378, %r1377};
	shf.r.wrap.b32 	%r1379, %r1376, %r1375, 8;
	shf.r.wrap.b32 	%r1380, %r1375, %r1376, 8;
	mov.b64 	%rd800, {%r1380, %r1379};
	shr.u64 	%rd801, %rd371, 7;
	xor.b64  	%rd802, %rd799, %rd801;
	xor.b64  	%rd803, %rd802, %rd800;
	add.s64 	%rd804, %rd379, %rd370;
	add.s64 	%rd805, %rd804, %rd798;
	add.s64 	%rd806, %rd805, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd793;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 19;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 19;
	mov.b64 	%rd807, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 3;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 3;
	mov.b64 	%rd808, {%r1386, %r1385};
	shr.u64 	%rd809, %rd793, 6;
	xor.b64  	%rd810, %rd807, %rd809;
	xor.b64  	%rd811, %rd810, %rd808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1387,%dummy}, %rd372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1388}, %rd372;
	}
	shf.r.wrap.b32 	%r1389, %r1388, %r1387, 1;
	shf.r.wrap.b32 	%r1390, %r1387, %r1388, 1;
	mov.b64 	%rd812, {%r1390, %r1389};
	shf.r.wrap.b32 	%r1391, %r1388, %r1387, 8;
	shf.r.wrap.b32 	%r1392, %r1387, %r1388, 8;
	mov.b64 	%rd813, {%r1392, %r1391};
	shr.u64 	%rd814, %rd372, 7;
	xor.b64  	%rd815, %rd812, %rd814;
	xor.b64  	%rd816, %rd815, %rd813;
	add.s64 	%rd817, %rd380, %rd371;
	add.s64 	%rd818, %rd817, %rd811;
	add.s64 	%rd819, %rd818, %rd816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1393,%dummy}, %rd806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1394}, %rd806;
	}
	shf.r.wrap.b32 	%r1395, %r1394, %r1393, 19;
	shf.r.wrap.b32 	%r1396, %r1393, %r1394, 19;
	mov.b64 	%rd820, {%r1396, %r1395};
	shf.l.wrap.b32 	%r1397, %r1393, %r1394, 3;
	shf.l.wrap.b32 	%r1398, %r1394, %r1393, 3;
	mov.b64 	%rd821, {%r1398, %r1397};
	shr.u64 	%rd822, %rd806, 6;
	xor.b64  	%rd823, %rd820, %rd822;
	xor.b64  	%rd824, %rd823, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd373;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 1;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 1;
	mov.b64 	%rd825, {%r1402, %r1401};
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 8;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 8;
	mov.b64 	%rd826, {%r1404, %r1403};
	shr.u64 	%rd827, %rd373, 7;
	xor.b64  	%rd828, %rd825, %rd827;
	xor.b64  	%rd829, %rd828, %rd826;
	add.s64 	%rd830, %rd381, %rd372;
	add.s64 	%rd831, %rd830, %rd824;
	add.s64 	%rd832, %rd831, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd819;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 19;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 19;
	mov.b64 	%rd833, {%r1408, %r1407};
	shf.l.wrap.b32 	%r1409, %r1405, %r1406, 3;
	shf.l.wrap.b32 	%r1410, %r1406, %r1405, 3;
	mov.b64 	%rd834, {%r1410, %r1409};
	shr.u64 	%rd835, %rd819, 6;
	xor.b64  	%rd836, %rd833, %rd835;
	xor.b64  	%rd837, %rd836, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1411,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1412}, %rd374;
	}
	shf.r.wrap.b32 	%r1413, %r1412, %r1411, 1;
	shf.r.wrap.b32 	%r1414, %r1411, %r1412, 1;
	mov.b64 	%rd838, {%r1414, %r1413};
	shf.r.wrap.b32 	%r1415, %r1412, %r1411, 8;
	shf.r.wrap.b32 	%r1416, %r1411, %r1412, 8;
	mov.b64 	%rd839, {%r1416, %r1415};
	shr.u64 	%rd840, %rd374, 7;
	xor.b64  	%rd841, %rd838, %rd840;
	xor.b64  	%rd842, %rd841, %rd839;
	add.s64 	%rd843, %rd382, %rd373;
	add.s64 	%rd844, %rd843, %rd837;
	add.s64 	%rd845, %rd844, %rd842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1417,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1418}, %rd832;
	}
	shf.r.wrap.b32 	%r1419, %r1418, %r1417, 19;
	shf.r.wrap.b32 	%r1420, %r1417, %r1418, 19;
	mov.b64 	%rd846, {%r1420, %r1419};
	shf.l.wrap.b32 	%r1421, %r1417, %r1418, 3;
	shf.l.wrap.b32 	%r1422, %r1418, %r1417, 3;
	mov.b64 	%rd847, {%r1422, %r1421};
	shr.u64 	%rd848, %rd832, 6;
	xor.b64  	%rd849, %rd846, %rd848;
	xor.b64  	%rd850, %rd849, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd375;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 1;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 1;
	mov.b64 	%rd851, {%r1426, %r1425};
	shf.r.wrap.b32 	%r1427, %r1424, %r1423, 8;
	shf.r.wrap.b32 	%r1428, %r1423, %r1424, 8;
	mov.b64 	%rd852, {%r1428, %r1427};
	shr.u64 	%rd853, %rd375, 7;
	xor.b64  	%rd854, %rd851, %rd853;
	xor.b64  	%rd855, %rd854, %rd852;
	add.s64 	%rd856, %rd383, %rd374;
	add.s64 	%rd857, %rd856, %rd850;
	add.s64 	%rd858, %rd857, %rd855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd845;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 19;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 19;
	mov.b64 	%rd859, {%r1432, %r1431};
	shf.l.wrap.b32 	%r1433, %r1429, %r1430, 3;
	shf.l.wrap.b32 	%r1434, %r1430, %r1429, 3;
	mov.b64 	%rd860, {%r1434, %r1433};
	shr.u64 	%rd861, %rd845, 6;
	xor.b64  	%rd862, %rd859, %rd861;
	xor.b64  	%rd863, %rd862, %rd860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1435,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1436}, %rd376;
	}
	shf.r.wrap.b32 	%r1437, %r1436, %r1435, 1;
	shf.r.wrap.b32 	%r1438, %r1435, %r1436, 1;
	mov.b64 	%rd864, {%r1438, %r1437};
	shf.r.wrap.b32 	%r1439, %r1436, %r1435, 8;
	shf.r.wrap.b32 	%r1440, %r1435, %r1436, 8;
	mov.b64 	%rd865, {%r1440, %r1439};
	shr.u64 	%rd866, %rd376, 7;
	xor.b64  	%rd867, %rd864, %rd866;
	xor.b64  	%rd868, %rd867, %rd865;
	add.s64 	%rd869, %rd780, %rd375;
	add.s64 	%rd870, %rd869, %rd863;
	add.s64 	%rd871, %rd870, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd858;
	}
	shf.r.wrap.b32 	%r1443, %r1442, %r1441, 19;
	shf.r.wrap.b32 	%r1444, %r1441, %r1442, 19;
	mov.b64 	%rd872, {%r1444, %r1443};
	shf.l.wrap.b32 	%r1445, %r1441, %r1442, 3;
	shf.l.wrap.b32 	%r1446, %r1442, %r1441, 3;
	mov.b64 	%rd873, {%r1446, %r1445};
	shr.u64 	%rd874, %rd858, 6;
	xor.b64  	%rd875, %rd872, %rd874;
	xor.b64  	%rd876, %rd875, %rd873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd377;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 1;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 1;
	mov.b64 	%rd877, {%r1450, %r1449};
	shf.r.wrap.b32 	%r1451, %r1448, %r1447, 8;
	shf.r.wrap.b32 	%r1452, %r1447, %r1448, 8;
	mov.b64 	%rd878, {%r1452, %r1451};
	shr.u64 	%rd879, %rd377, 7;
	xor.b64  	%rd880, %rd877, %rd879;
	xor.b64  	%rd881, %rd880, %rd878;
	add.s64 	%rd882, %rd793, %rd376;
	add.s64 	%rd883, %rd882, %rd876;
	add.s64 	%rd884, %rd883, %rd881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd871;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 19;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 19;
	mov.b64 	%rd885, {%r1456, %r1455};
	shf.l.wrap.b32 	%r1457, %r1453, %r1454, 3;
	shf.l.wrap.b32 	%r1458, %r1454, %r1453, 3;
	mov.b64 	%rd886, {%r1458, %r1457};
	shr.u64 	%rd887, %rd871, 6;
	xor.b64  	%rd888, %rd885, %rd887;
	xor.b64  	%rd889, %rd888, %rd886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1459,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1460}, %rd378;
	}
	shf.r.wrap.b32 	%r1461, %r1460, %r1459, 1;
	shf.r.wrap.b32 	%r1462, %r1459, %r1460, 1;
	mov.b64 	%rd890, {%r1462, %r1461};
	shf.r.wrap.b32 	%r1463, %r1460, %r1459, 8;
	shf.r.wrap.b32 	%r1464, %r1459, %r1460, 8;
	mov.b64 	%rd891, {%r1464, %r1463};
	shr.u64 	%rd892, %rd378, 7;
	xor.b64  	%rd893, %rd890, %rd892;
	xor.b64  	%rd894, %rd893, %rd891;
	add.s64 	%rd895, %rd806, %rd377;
	add.s64 	%rd896, %rd895, %rd889;
	add.s64 	%rd897, %rd896, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1465,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1466}, %rd884;
	}
	shf.r.wrap.b32 	%r1467, %r1466, %r1465, 19;
	shf.r.wrap.b32 	%r1468, %r1465, %r1466, 19;
	mov.b64 	%rd898, {%r1468, %r1467};
	shf.l.wrap.b32 	%r1469, %r1465, %r1466, 3;
	shf.l.wrap.b32 	%r1470, %r1466, %r1465, 3;
	mov.b64 	%rd899, {%r1470, %r1469};
	shr.u64 	%rd900, %rd884, 6;
	xor.b64  	%rd901, %rd898, %rd900;
	xor.b64  	%rd902, %rd901, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd379;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 1;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 1;
	mov.b64 	%rd903, {%r1474, %r1473};
	shf.r.wrap.b32 	%r1475, %r1472, %r1471, 8;
	shf.r.wrap.b32 	%r1476, %r1471, %r1472, 8;
	mov.b64 	%rd904, {%r1476, %r1475};
	shr.u64 	%rd905, %rd379, 7;
	xor.b64  	%rd906, %rd903, %rd905;
	xor.b64  	%rd907, %rd906, %rd904;
	add.s64 	%rd908, %rd819, %rd378;
	add.s64 	%rd909, %rd908, %rd902;
	add.s64 	%rd910, %rd909, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd897;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 19;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 19;
	mov.b64 	%rd911, {%r1480, %r1479};
	shf.l.wrap.b32 	%r1481, %r1477, %r1478, 3;
	shf.l.wrap.b32 	%r1482, %r1478, %r1477, 3;
	mov.b64 	%rd912, {%r1482, %r1481};
	shr.u64 	%rd913, %rd897, 6;
	xor.b64  	%rd914, %rd911, %rd913;
	xor.b64  	%rd915, %rd914, %rd912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1483,%dummy}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1484}, %rd380;
	}
	shf.r.wrap.b32 	%r1485, %r1484, %r1483, 1;
	shf.r.wrap.b32 	%r1486, %r1483, %r1484, 1;
	mov.b64 	%rd916, {%r1486, %r1485};
	shf.r.wrap.b32 	%r1487, %r1484, %r1483, 8;
	shf.r.wrap.b32 	%r1488, %r1483, %r1484, 8;
	mov.b64 	%rd917, {%r1488, %r1487};
	shr.u64 	%rd918, %rd380, 7;
	xor.b64  	%rd919, %rd916, %rd918;
	xor.b64  	%rd920, %rd919, %rd917;
	add.s64 	%rd921, %rd832, %rd379;
	add.s64 	%rd922, %rd921, %rd915;
	add.s64 	%rd923, %rd922, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd910;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 19;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 19;
	mov.b64 	%rd924, {%r1492, %r1491};
	shf.l.wrap.b32 	%r1493, %r1489, %r1490, 3;
	shf.l.wrap.b32 	%r1494, %r1490, %r1489, 3;
	mov.b64 	%rd925, {%r1494, %r1493};
	shr.u64 	%rd926, %rd910, 6;
	xor.b64  	%rd927, %rd924, %rd926;
	xor.b64  	%rd928, %rd927, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd381;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 1;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 1;
	mov.b64 	%rd929, {%r1498, %r1497};
	shf.r.wrap.b32 	%r1499, %r1496, %r1495, 8;
	shf.r.wrap.b32 	%r1500, %r1495, %r1496, 8;
	mov.b64 	%rd930, {%r1500, %r1499};
	shr.u64 	%rd931, %rd381, 7;
	xor.b64  	%rd932, %rd929, %rd931;
	xor.b64  	%rd933, %rd932, %rd930;
	add.s64 	%rd934, %rd845, %rd380;
	add.s64 	%rd935, %rd934, %rd928;
	add.s64 	%rd936, %rd935, %rd933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd923;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 19;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 19;
	mov.b64 	%rd937, {%r1504, %r1503};
	shf.l.wrap.b32 	%r1505, %r1501, %r1502, 3;
	shf.l.wrap.b32 	%r1506, %r1502, %r1501, 3;
	mov.b64 	%rd938, {%r1506, %r1505};
	shr.u64 	%rd939, %rd923, 6;
	xor.b64  	%rd940, %rd937, %rd939;
	xor.b64  	%rd941, %rd940, %rd938;
	shf.r.wrap.b32 	%r1507, %r1346, %r1345, 1;
	shf.r.wrap.b32 	%r1508, %r1345, %r1346, 1;
	mov.b64 	%rd942, {%r1508, %r1507};
	shf.r.wrap.b32 	%r1509, %r1346, %r1345, 8;
	shf.r.wrap.b32 	%r1510, %r1345, %r1346, 8;
	mov.b64 	%rd943, {%r1510, %r1509};
	shr.u64 	%rd944, %rd382, 7;
	xor.b64  	%rd945, %rd942, %rd944;
	xor.b64  	%rd946, %rd945, %rd943;
	add.s64 	%rd947, %rd858, %rd381;
	add.s64 	%rd948, %rd947, %rd941;
	add.s64 	%rd949, %rd948, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd936;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 19;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 19;
	mov.b64 	%rd950, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 3;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 3;
	mov.b64 	%rd951, {%r1516, %r1515};
	shr.u64 	%rd952, %rd936, 6;
	xor.b64  	%rd953, %rd950, %rd952;
	xor.b64  	%rd954, %rd953, %rd951;
	shf.r.wrap.b32 	%r1517, %r1358, %r1357, 1;
	shf.r.wrap.b32 	%r1518, %r1357, %r1358, 1;
	mov.b64 	%rd955, {%r1518, %r1517};
	shf.r.wrap.b32 	%r1519, %r1358, %r1357, 8;
	shf.r.wrap.b32 	%r1520, %r1357, %r1358, 8;
	mov.b64 	%rd956, {%r1520, %r1519};
	shr.u64 	%rd957, %rd383, 7;
	xor.b64  	%rd958, %rd955, %rd957;
	xor.b64  	%rd959, %rd958, %rd956;
	add.s64 	%rd960, %rd871, %rd382;
	add.s64 	%rd961, %rd960, %rd954;
	add.s64 	%rd962, %rd961, %rd959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd949;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 19;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 19;
	mov.b64 	%rd963, {%r1524, %r1523};
	shf.l.wrap.b32 	%r1525, %r1521, %r1522, 3;
	shf.l.wrap.b32 	%r1526, %r1522, %r1521, 3;
	mov.b64 	%rd964, {%r1526, %r1525};
	shr.u64 	%rd965, %rd949, 6;
	xor.b64  	%rd966, %rd963, %rd965;
	xor.b64  	%rd967, %rd966, %rd964;
	shf.r.wrap.b32 	%r1527, %r1370, %r1369, 1;
	shf.r.wrap.b32 	%r1528, %r1369, %r1370, 1;
	mov.b64 	%rd968, {%r1528, %r1527};
	shf.r.wrap.b32 	%r1529, %r1370, %r1369, 8;
	shf.r.wrap.b32 	%r1530, %r1369, %r1370, 8;
	mov.b64 	%rd969, {%r1530, %r1529};
	shr.u64 	%rd970, %rd780, 7;
	xor.b64  	%rd971, %rd968, %rd970;
	xor.b64  	%rd972, %rd971, %rd969;
	add.s64 	%rd973, %rd884, %rd383;
	add.s64 	%rd974, %rd973, %rd967;
	add.s64 	%rd975, %rd974, %rd972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1531,%dummy}, %rd756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1532}, %rd756;
	}
	shf.r.wrap.b32 	%r1533, %r1532, %r1531, 14;
	shf.r.wrap.b32 	%r1534, %r1531, %r1532, 14;
	mov.b64 	%rd976, {%r1534, %r1533};
	shf.r.wrap.b32 	%r1535, %r1532, %r1531, 18;
	shf.r.wrap.b32 	%r1536, %r1531, %r1532, 18;
	mov.b64 	%rd977, {%r1536, %r1535};
	xor.b64  	%rd978, %rd977, %rd976;
	shf.l.wrap.b32 	%r1537, %r1531, %r1532, 23;
	shf.l.wrap.b32 	%r1538, %r1532, %r1531, 23;
	mov.b64 	%rd979, {%r1538, %r1537};
	xor.b64  	%rd980, %rd978, %rd979;
	xor.b64  	%rd981, %rd732, %rd708;
	and.b64  	%rd982, %rd981, %rd756;
	xor.b64  	%rd983, %rd982, %rd708;
	add.s64 	%rd984, %rd983, %rd684;
	add.s64 	%rd985, %rd984, %rd780;
	ld.const.u64 	%rd8836, [k_sha512+128];
	add.s64 	%rd986, %rd985, %rd8836;
	add.s64 	%rd987, %rd986, %rd980;
	add.s64 	%rd988, %rd987, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1539,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1540}, %rd767;
	}
	shf.r.wrap.b32 	%r1541, %r1540, %r1539, 28;
	shf.r.wrap.b32 	%r1542, %r1539, %r1540, 28;
	mov.b64 	%rd989, {%r1542, %r1541};
	shf.l.wrap.b32 	%r1543, %r1539, %r1540, 30;
	shf.l.wrap.b32 	%r1544, %r1540, %r1539, 30;
	mov.b64 	%rd990, {%r1544, %r1543};
	xor.b64  	%rd991, %rd990, %rd989;
	shf.l.wrap.b32 	%r1545, %r1539, %r1540, 25;
	shf.l.wrap.b32 	%r1546, %r1540, %r1539, 25;
	mov.b64 	%rd992, {%r1546, %r1545};
	xor.b64  	%rd993, %rd991, %rd992;
	xor.b64  	%rd994, %rd767, %rd719;
	xor.b64  	%rd995, %rd767, %rd743;
	and.b64  	%rd996, %rd995, %rd994;
	xor.b64  	%rd997, %rd996, %rd767;
	add.s64 	%rd998, %rd987, %rd997;
	add.s64 	%rd999, %rd998, %rd993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1547,%dummy}, %rd988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1548}, %rd988;
	}
	shf.r.wrap.b32 	%r1549, %r1548, %r1547, 14;
	shf.r.wrap.b32 	%r1550, %r1547, %r1548, 14;
	mov.b64 	%rd1000, {%r1550, %r1549};
	shf.r.wrap.b32 	%r1551, %r1548, %r1547, 18;
	shf.r.wrap.b32 	%r1552, %r1547, %r1548, 18;
	mov.b64 	%rd1001, {%r1552, %r1551};
	xor.b64  	%rd1002, %rd1001, %rd1000;
	shf.l.wrap.b32 	%r1553, %r1547, %r1548, 23;
	shf.l.wrap.b32 	%r1554, %r1548, %r1547, 23;
	mov.b64 	%rd1003, {%r1554, %r1553};
	xor.b64  	%rd1004, %rd1002, %rd1003;
	xor.b64  	%rd1005, %rd756, %rd732;
	and.b64  	%rd1006, %rd988, %rd1005;
	xor.b64  	%rd1007, %rd1006, %rd732;
	add.s64 	%rd1008, %rd793, %rd708;
	ld.const.u64 	%rd8835, [k_sha512+136];
	add.s64 	%rd1009, %rd1008, %rd8835;
	add.s64 	%rd1010, %rd1009, %rd1007;
	add.s64 	%rd1011, %rd1010, %rd1004;
	add.s64 	%rd1012, %rd1011, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd999;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 28;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 28;
	mov.b64 	%rd1013, {%r1558, %r1557};
	shf.l.wrap.b32 	%r1559, %r1555, %r1556, 30;
	shf.l.wrap.b32 	%r1560, %r1556, %r1555, 30;
	mov.b64 	%rd1014, {%r1560, %r1559};
	xor.b64  	%rd1015, %rd1014, %rd1013;
	shf.l.wrap.b32 	%r1561, %r1555, %r1556, 25;
	shf.l.wrap.b32 	%r1562, %r1556, %r1555, 25;
	mov.b64 	%rd1016, {%r1562, %r1561};
	xor.b64  	%rd1017, %rd1015, %rd1016;
	xor.b64  	%rd1018, %rd999, %rd743;
	xor.b64  	%rd1019, %rd999, %rd767;
	and.b64  	%rd1020, %rd1019, %rd1018;
	xor.b64  	%rd1021, %rd1020, %rd999;
	add.s64 	%rd1022, %rd1011, %rd1021;
	add.s64 	%rd1023, %rd1022, %rd1017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1563,%dummy}, %rd1012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1564}, %rd1012;
	}
	shf.r.wrap.b32 	%r1565, %r1564, %r1563, 14;
	shf.r.wrap.b32 	%r1566, %r1563, %r1564, 14;
	mov.b64 	%rd1024, {%r1566, %r1565};
	shf.r.wrap.b32 	%r1567, %r1564, %r1563, 18;
	shf.r.wrap.b32 	%r1568, %r1563, %r1564, 18;
	mov.b64 	%rd1025, {%r1568, %r1567};
	xor.b64  	%rd1026, %rd1025, %rd1024;
	shf.l.wrap.b32 	%r1569, %r1563, %r1564, 23;
	shf.l.wrap.b32 	%r1570, %r1564, %r1563, 23;
	mov.b64 	%rd1027, {%r1570, %r1569};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	xor.b64  	%rd1029, %rd988, %rd756;
	and.b64  	%rd1030, %rd1012, %rd1029;
	xor.b64  	%rd1031, %rd1030, %rd756;
	add.s64 	%rd1032, %rd806, %rd732;
	ld.const.u64 	%rd8834, [k_sha512+144];
	add.s64 	%rd1033, %rd1032, %rd8834;
	add.s64 	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd1034, %rd1028;
	add.s64 	%rd1036, %rd1035, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1571,%dummy}, %rd1023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1572}, %rd1023;
	}
	shf.r.wrap.b32 	%r1573, %r1572, %r1571, 28;
	shf.r.wrap.b32 	%r1574, %r1571, %r1572, 28;
	mov.b64 	%rd1037, {%r1574, %r1573};
	shf.l.wrap.b32 	%r1575, %r1571, %r1572, 30;
	shf.l.wrap.b32 	%r1576, %r1572, %r1571, 30;
	mov.b64 	%rd1038, {%r1576, %r1575};
	xor.b64  	%rd1039, %rd1038, %rd1037;
	shf.l.wrap.b32 	%r1577, %r1571, %r1572, 25;
	shf.l.wrap.b32 	%r1578, %r1572, %r1571, 25;
	mov.b64 	%rd1040, {%r1578, %r1577};
	xor.b64  	%rd1041, %rd1039, %rd1040;
	xor.b64  	%rd1042, %rd1023, %rd767;
	xor.b64  	%rd1043, %rd1023, %rd999;
	and.b64  	%rd1044, %rd1043, %rd1042;
	xor.b64  	%rd1045, %rd1044, %rd1023;
	add.s64 	%rd1046, %rd1035, %rd1045;
	add.s64 	%rd1047, %rd1046, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1579,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd1036;
	}
	shf.r.wrap.b32 	%r1581, %r1580, %r1579, 14;
	shf.r.wrap.b32 	%r1582, %r1579, %r1580, 14;
	mov.b64 	%rd1048, {%r1582, %r1581};
	shf.r.wrap.b32 	%r1583, %r1580, %r1579, 18;
	shf.r.wrap.b32 	%r1584, %r1579, %r1580, 18;
	mov.b64 	%rd1049, {%r1584, %r1583};
	xor.b64  	%rd1050, %rd1049, %rd1048;
	shf.l.wrap.b32 	%r1585, %r1579, %r1580, 23;
	shf.l.wrap.b32 	%r1586, %r1580, %r1579, 23;
	mov.b64 	%rd1051, {%r1586, %r1585};
	xor.b64  	%rd1052, %rd1050, %rd1051;
	xor.b64  	%rd1053, %rd1012, %rd988;
	and.b64  	%rd1054, %rd1036, %rd1053;
	xor.b64  	%rd1055, %rd1054, %rd988;
	add.s64 	%rd1056, %rd819, %rd756;
	ld.const.u64 	%rd8833, [k_sha512+152];
	add.s64 	%rd1057, %rd1056, %rd8833;
	add.s64 	%rd1058, %rd1057, %rd1055;
	add.s64 	%rd1059, %rd1058, %rd1052;
	add.s64 	%rd1060, %rd1059, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1587,%dummy}, %rd1047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1588}, %rd1047;
	}
	shf.r.wrap.b32 	%r1589, %r1588, %r1587, 28;
	shf.r.wrap.b32 	%r1590, %r1587, %r1588, 28;
	mov.b64 	%rd1061, {%r1590, %r1589};
	shf.l.wrap.b32 	%r1591, %r1587, %r1588, 30;
	shf.l.wrap.b32 	%r1592, %r1588, %r1587, 30;
	mov.b64 	%rd1062, {%r1592, %r1591};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	shf.l.wrap.b32 	%r1593, %r1587, %r1588, 25;
	shf.l.wrap.b32 	%r1594, %r1588, %r1587, 25;
	mov.b64 	%rd1064, {%r1594, %r1593};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	xor.b64  	%rd1066, %rd1047, %rd999;
	xor.b64  	%rd1067, %rd1047, %rd1023;
	and.b64  	%rd1068, %rd1067, %rd1066;
	xor.b64  	%rd1069, %rd1068, %rd1047;
	add.s64 	%rd1070, %rd1059, %rd1069;
	add.s64 	%rd1071, %rd1070, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1595,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1596}, %rd1060;
	}
	shf.r.wrap.b32 	%r1597, %r1596, %r1595, 14;
	shf.r.wrap.b32 	%r1598, %r1595, %r1596, 14;
	mov.b64 	%rd1072, {%r1598, %r1597};
	shf.r.wrap.b32 	%r1599, %r1596, %r1595, 18;
	shf.r.wrap.b32 	%r1600, %r1595, %r1596, 18;
	mov.b64 	%rd1073, {%r1600, %r1599};
	xor.b64  	%rd1074, %rd1073, %rd1072;
	shf.l.wrap.b32 	%r1601, %r1595, %r1596, 23;
	shf.l.wrap.b32 	%r1602, %r1596, %r1595, 23;
	mov.b64 	%rd1075, {%r1602, %r1601};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	xor.b64  	%rd1077, %rd1036, %rd1012;
	and.b64  	%rd1078, %rd1060, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1012;
	add.s64 	%rd1080, %rd988, %rd832;
	ld.const.u64 	%rd8832, [k_sha512+160];
	add.s64 	%rd1081, %rd1080, %rd8832;
	add.s64 	%rd1082, %rd1081, %rd1079;
	add.s64 	%rd1083, %rd1082, %rd1076;
	add.s64 	%rd1084, %rd1083, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1603,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1604}, %rd1071;
	}
	shf.r.wrap.b32 	%r1605, %r1604, %r1603, 28;
	shf.r.wrap.b32 	%r1606, %r1603, %r1604, 28;
	mov.b64 	%rd1085, {%r1606, %r1605};
	shf.l.wrap.b32 	%r1607, %r1603, %r1604, 30;
	shf.l.wrap.b32 	%r1608, %r1604, %r1603, 30;
	mov.b64 	%rd1086, {%r1608, %r1607};
	xor.b64  	%rd1087, %rd1086, %rd1085;
	shf.l.wrap.b32 	%r1609, %r1603, %r1604, 25;
	shf.l.wrap.b32 	%r1610, %r1604, %r1603, 25;
	mov.b64 	%rd1088, {%r1610, %r1609};
	xor.b64  	%rd1089, %rd1087, %rd1088;
	xor.b64  	%rd1090, %rd1071, %rd1023;
	xor.b64  	%rd1091, %rd1071, %rd1047;
	and.b64  	%rd1092, %rd1091, %rd1090;
	xor.b64  	%rd1093, %rd1092, %rd1071;
	add.s64 	%rd1094, %rd1083, %rd1093;
	add.s64 	%rd1095, %rd1094, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1611,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1612}, %rd1084;
	}
	shf.r.wrap.b32 	%r1613, %r1612, %r1611, 14;
	shf.r.wrap.b32 	%r1614, %r1611, %r1612, 14;
	mov.b64 	%rd1096, {%r1614, %r1613};
	shf.r.wrap.b32 	%r1615, %r1612, %r1611, 18;
	shf.r.wrap.b32 	%r1616, %r1611, %r1612, 18;
	mov.b64 	%rd1097, {%r1616, %r1615};
	xor.b64  	%rd1098, %rd1097, %rd1096;
	shf.l.wrap.b32 	%r1617, %r1611, %r1612, 23;
	shf.l.wrap.b32 	%r1618, %r1612, %r1611, 23;
	mov.b64 	%rd1099, {%r1618, %r1617};
	xor.b64  	%rd1100, %rd1098, %rd1099;
	xor.b64  	%rd1101, %rd1060, %rd1036;
	and.b64  	%rd1102, %rd1084, %rd1101;
	xor.b64  	%rd1103, %rd1102, %rd1036;
	add.s64 	%rd1104, %rd1012, %rd845;
	ld.const.u64 	%rd8831, [k_sha512+168];
	add.s64 	%rd1105, %rd1104, %rd8831;
	add.s64 	%rd1106, %rd1105, %rd1103;
	add.s64 	%rd1107, %rd1106, %rd1100;
	add.s64 	%rd1108, %rd1107, %rd1023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1619,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1620}, %rd1095;
	}
	shf.r.wrap.b32 	%r1621, %r1620, %r1619, 28;
	shf.r.wrap.b32 	%r1622, %r1619, %r1620, 28;
	mov.b64 	%rd1109, {%r1622, %r1621};
	shf.l.wrap.b32 	%r1623, %r1619, %r1620, 30;
	shf.l.wrap.b32 	%r1624, %r1620, %r1619, 30;
	mov.b64 	%rd1110, {%r1624, %r1623};
	xor.b64  	%rd1111, %rd1110, %rd1109;
	shf.l.wrap.b32 	%r1625, %r1619, %r1620, 25;
	shf.l.wrap.b32 	%r1626, %r1620, %r1619, 25;
	mov.b64 	%rd1112, {%r1626, %r1625};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	xor.b64  	%rd1114, %rd1095, %rd1047;
	xor.b64  	%rd1115, %rd1095, %rd1071;
	and.b64  	%rd1116, %rd1115, %rd1114;
	xor.b64  	%rd1117, %rd1116, %rd1095;
	add.s64 	%rd1118, %rd1107, %rd1117;
	add.s64 	%rd1119, %rd1118, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1627,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1628}, %rd1108;
	}
	shf.r.wrap.b32 	%r1629, %r1628, %r1627, 14;
	shf.r.wrap.b32 	%r1630, %r1627, %r1628, 14;
	mov.b64 	%rd1120, {%r1630, %r1629};
	shf.r.wrap.b32 	%r1631, %r1628, %r1627, 18;
	shf.r.wrap.b32 	%r1632, %r1627, %r1628, 18;
	mov.b64 	%rd1121, {%r1632, %r1631};
	xor.b64  	%rd1122, %rd1121, %rd1120;
	shf.l.wrap.b32 	%r1633, %r1627, %r1628, 23;
	shf.l.wrap.b32 	%r1634, %r1628, %r1627, 23;
	mov.b64 	%rd1123, {%r1634, %r1633};
	xor.b64  	%rd1124, %rd1122, %rd1123;
	xor.b64  	%rd1125, %rd1084, %rd1060;
	and.b64  	%rd1126, %rd1108, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1060;
	add.s64 	%rd1128, %rd1036, %rd858;
	ld.const.u64 	%rd8830, [k_sha512+176];
	add.s64 	%rd1129, %rd1128, %rd8830;
	add.s64 	%rd1130, %rd1129, %rd1127;
	add.s64 	%rd1131, %rd1130, %rd1124;
	add.s64 	%rd1132, %rd1131, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1635,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1636}, %rd1119;
	}
	shf.r.wrap.b32 	%r1637, %r1636, %r1635, 28;
	shf.r.wrap.b32 	%r1638, %r1635, %r1636, 28;
	mov.b64 	%rd1133, {%r1638, %r1637};
	shf.l.wrap.b32 	%r1639, %r1635, %r1636, 30;
	shf.l.wrap.b32 	%r1640, %r1636, %r1635, 30;
	mov.b64 	%rd1134, {%r1640, %r1639};
	xor.b64  	%rd1135, %rd1134, %rd1133;
	shf.l.wrap.b32 	%r1641, %r1635, %r1636, 25;
	shf.l.wrap.b32 	%r1642, %r1636, %r1635, 25;
	mov.b64 	%rd1136, {%r1642, %r1641};
	xor.b64  	%rd1137, %rd1135, %rd1136;
	xor.b64  	%rd1138, %rd1119, %rd1071;
	xor.b64  	%rd1139, %rd1119, %rd1095;
	and.b64  	%rd1140, %rd1139, %rd1138;
	xor.b64  	%rd1141, %rd1140, %rd1119;
	add.s64 	%rd1142, %rd1131, %rd1141;
	add.s64 	%rd1143, %rd1142, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1643,%dummy}, %rd1132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1644}, %rd1132;
	}
	shf.r.wrap.b32 	%r1645, %r1644, %r1643, 14;
	shf.r.wrap.b32 	%r1646, %r1643, %r1644, 14;
	mov.b64 	%rd1144, {%r1646, %r1645};
	shf.r.wrap.b32 	%r1647, %r1644, %r1643, 18;
	shf.r.wrap.b32 	%r1648, %r1643, %r1644, 18;
	mov.b64 	%rd1145, {%r1648, %r1647};
	xor.b64  	%rd1146, %rd1145, %rd1144;
	shf.l.wrap.b32 	%r1649, %r1643, %r1644, 23;
	shf.l.wrap.b32 	%r1650, %r1644, %r1643, 23;
	mov.b64 	%rd1147, {%r1650, %r1649};
	xor.b64  	%rd1148, %rd1146, %rd1147;
	xor.b64  	%rd1149, %rd1108, %rd1084;
	and.b64  	%rd1150, %rd1132, %rd1149;
	xor.b64  	%rd1151, %rd1150, %rd1084;
	add.s64 	%rd1152, %rd1060, %rd871;
	ld.const.u64 	%rd8829, [k_sha512+184];
	add.s64 	%rd1153, %rd1152, %rd8829;
	add.s64 	%rd1154, %rd1153, %rd1151;
	add.s64 	%rd1155, %rd1154, %rd1148;
	add.s64 	%rd1156, %rd1155, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1651,%dummy}, %rd1143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1652}, %rd1143;
	}
	shf.r.wrap.b32 	%r1653, %r1652, %r1651, 28;
	shf.r.wrap.b32 	%r1654, %r1651, %r1652, 28;
	mov.b64 	%rd1157, {%r1654, %r1653};
	shf.l.wrap.b32 	%r1655, %r1651, %r1652, 30;
	shf.l.wrap.b32 	%r1656, %r1652, %r1651, 30;
	mov.b64 	%rd1158, {%r1656, %r1655};
	xor.b64  	%rd1159, %rd1158, %rd1157;
	shf.l.wrap.b32 	%r1657, %r1651, %r1652, 25;
	shf.l.wrap.b32 	%r1658, %r1652, %r1651, 25;
	mov.b64 	%rd1160, {%r1658, %r1657};
	xor.b64  	%rd1161, %rd1159, %rd1160;
	xor.b64  	%rd1162, %rd1143, %rd1095;
	xor.b64  	%rd1163, %rd1143, %rd1119;
	and.b64  	%rd1164, %rd1163, %rd1162;
	xor.b64  	%rd1165, %rd1164, %rd1143;
	add.s64 	%rd1166, %rd1155, %rd1165;
	add.s64 	%rd1167, %rd1166, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1659,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1660}, %rd1156;
	}
	shf.r.wrap.b32 	%r1661, %r1660, %r1659, 14;
	shf.r.wrap.b32 	%r1662, %r1659, %r1660, 14;
	mov.b64 	%rd1168, {%r1662, %r1661};
	shf.r.wrap.b32 	%r1663, %r1660, %r1659, 18;
	shf.r.wrap.b32 	%r1664, %r1659, %r1660, 18;
	mov.b64 	%rd1169, {%r1664, %r1663};
	xor.b64  	%rd1170, %rd1169, %rd1168;
	shf.l.wrap.b32 	%r1665, %r1659, %r1660, 23;
	shf.l.wrap.b32 	%r1666, %r1660, %r1659, 23;
	mov.b64 	%rd1171, {%r1666, %r1665};
	xor.b64  	%rd1172, %rd1170, %rd1171;
	xor.b64  	%rd1173, %rd1132, %rd1108;
	and.b64  	%rd1174, %rd1156, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1108;
	add.s64 	%rd1176, %rd1084, %rd884;
	ld.const.u64 	%rd8828, [k_sha512+192];
	add.s64 	%rd1177, %rd1176, %rd8828;
	add.s64 	%rd1178, %rd1177, %rd1175;
	add.s64 	%rd1179, %rd1178, %rd1172;
	add.s64 	%rd1180, %rd1179, %rd1095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1667,%dummy}, %rd1167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1668}, %rd1167;
	}
	shf.r.wrap.b32 	%r1669, %r1668, %r1667, 28;
	shf.r.wrap.b32 	%r1670, %r1667, %r1668, 28;
	mov.b64 	%rd1181, {%r1670, %r1669};
	shf.l.wrap.b32 	%r1671, %r1667, %r1668, 30;
	shf.l.wrap.b32 	%r1672, %r1668, %r1667, 30;
	mov.b64 	%rd1182, {%r1672, %r1671};
	xor.b64  	%rd1183, %rd1182, %rd1181;
	shf.l.wrap.b32 	%r1673, %r1667, %r1668, 25;
	shf.l.wrap.b32 	%r1674, %r1668, %r1667, 25;
	mov.b64 	%rd1184, {%r1674, %r1673};
	xor.b64  	%rd1185, %rd1183, %rd1184;
	xor.b64  	%rd1186, %rd1167, %rd1119;
	xor.b64  	%rd1187, %rd1167, %rd1143;
	and.b64  	%rd1188, %rd1187, %rd1186;
	xor.b64  	%rd1189, %rd1188, %rd1167;
	add.s64 	%rd1190, %rd1179, %rd1189;
	add.s64 	%rd1191, %rd1190, %rd1185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1675,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1676}, %rd1180;
	}
	shf.r.wrap.b32 	%r1677, %r1676, %r1675, 14;
	shf.r.wrap.b32 	%r1678, %r1675, %r1676, 14;
	mov.b64 	%rd1192, {%r1678, %r1677};
	shf.r.wrap.b32 	%r1679, %r1676, %r1675, 18;
	shf.r.wrap.b32 	%r1680, %r1675, %r1676, 18;
	mov.b64 	%rd1193, {%r1680, %r1679};
	xor.b64  	%rd1194, %rd1193, %rd1192;
	shf.l.wrap.b32 	%r1681, %r1675, %r1676, 23;
	shf.l.wrap.b32 	%r1682, %r1676, %r1675, 23;
	mov.b64 	%rd1195, {%r1682, %r1681};
	xor.b64  	%rd1196, %rd1194, %rd1195;
	xor.b64  	%rd1197, %rd1156, %rd1132;
	and.b64  	%rd1198, %rd1180, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1132;
	add.s64 	%rd1200, %rd1108, %rd897;
	ld.const.u64 	%rd8827, [k_sha512+200];
	add.s64 	%rd1201, %rd1200, %rd8827;
	add.s64 	%rd1202, %rd1201, %rd1199;
	add.s64 	%rd1203, %rd1202, %rd1196;
	add.s64 	%rd1204, %rd1203, %rd1119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1683,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1684}, %rd1191;
	}
	shf.r.wrap.b32 	%r1685, %r1684, %r1683, 28;
	shf.r.wrap.b32 	%r1686, %r1683, %r1684, 28;
	mov.b64 	%rd1205, {%r1686, %r1685};
	shf.l.wrap.b32 	%r1687, %r1683, %r1684, 30;
	shf.l.wrap.b32 	%r1688, %r1684, %r1683, 30;
	mov.b64 	%rd1206, {%r1688, %r1687};
	xor.b64  	%rd1207, %rd1206, %rd1205;
	shf.l.wrap.b32 	%r1689, %r1683, %r1684, 25;
	shf.l.wrap.b32 	%r1690, %r1684, %r1683, 25;
	mov.b64 	%rd1208, {%r1690, %r1689};
	xor.b64  	%rd1209, %rd1207, %rd1208;
	xor.b64  	%rd1210, %rd1191, %rd1143;
	xor.b64  	%rd1211, %rd1191, %rd1167;
	and.b64  	%rd1212, %rd1211, %rd1210;
	xor.b64  	%rd1213, %rd1212, %rd1191;
	add.s64 	%rd1214, %rd1203, %rd1213;
	add.s64 	%rd1215, %rd1214, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1691,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1692}, %rd1204;
	}
	shf.r.wrap.b32 	%r1693, %r1692, %r1691, 14;
	shf.r.wrap.b32 	%r1694, %r1691, %r1692, 14;
	mov.b64 	%rd1216, {%r1694, %r1693};
	shf.r.wrap.b32 	%r1695, %r1692, %r1691, 18;
	shf.r.wrap.b32 	%r1696, %r1691, %r1692, 18;
	mov.b64 	%rd1217, {%r1696, %r1695};
	xor.b64  	%rd1218, %rd1217, %rd1216;
	shf.l.wrap.b32 	%r1697, %r1691, %r1692, 23;
	shf.l.wrap.b32 	%r1698, %r1692, %r1691, 23;
	mov.b64 	%rd1219, {%r1698, %r1697};
	xor.b64  	%rd1220, %rd1218, %rd1219;
	xor.b64  	%rd1221, %rd1180, %rd1156;
	and.b64  	%rd1222, %rd1204, %rd1221;
	xor.b64  	%rd1223, %rd1222, %rd1156;
	add.s64 	%rd1224, %rd1132, %rd910;
	ld.const.u64 	%rd8826, [k_sha512+208];
	add.s64 	%rd1225, %rd1224, %rd8826;
	add.s64 	%rd1226, %rd1225, %rd1223;
	add.s64 	%rd1227, %rd1226, %rd1220;
	add.s64 	%rd1228, %rd1227, %rd1143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1699,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1700}, %rd1215;
	}
	shf.r.wrap.b32 	%r1701, %r1700, %r1699, 28;
	shf.r.wrap.b32 	%r1702, %r1699, %r1700, 28;
	mov.b64 	%rd1229, {%r1702, %r1701};
	shf.l.wrap.b32 	%r1703, %r1699, %r1700, 30;
	shf.l.wrap.b32 	%r1704, %r1700, %r1699, 30;
	mov.b64 	%rd1230, {%r1704, %r1703};
	xor.b64  	%rd1231, %rd1230, %rd1229;
	shf.l.wrap.b32 	%r1705, %r1699, %r1700, 25;
	shf.l.wrap.b32 	%r1706, %r1700, %r1699, 25;
	mov.b64 	%rd1232, {%r1706, %r1705};
	xor.b64  	%rd1233, %rd1231, %rd1232;
	xor.b64  	%rd1234, %rd1215, %rd1167;
	xor.b64  	%rd1235, %rd1215, %rd1191;
	and.b64  	%rd1236, %rd1235, %rd1234;
	xor.b64  	%rd1237, %rd1236, %rd1215;
	add.s64 	%rd1238, %rd1227, %rd1237;
	add.s64 	%rd1239, %rd1238, %rd1233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1707,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1708}, %rd1228;
	}
	shf.r.wrap.b32 	%r1709, %r1708, %r1707, 14;
	shf.r.wrap.b32 	%r1710, %r1707, %r1708, 14;
	mov.b64 	%rd1240, {%r1710, %r1709};
	shf.r.wrap.b32 	%r1711, %r1708, %r1707, 18;
	shf.r.wrap.b32 	%r1712, %r1707, %r1708, 18;
	mov.b64 	%rd1241, {%r1712, %r1711};
	xor.b64  	%rd1242, %rd1241, %rd1240;
	shf.l.wrap.b32 	%r1713, %r1707, %r1708, 23;
	shf.l.wrap.b32 	%r1714, %r1708, %r1707, 23;
	mov.b64 	%rd1243, {%r1714, %r1713};
	xor.b64  	%rd1244, %rd1242, %rd1243;
	xor.b64  	%rd1245, %rd1204, %rd1180;
	and.b64  	%rd1246, %rd1228, %rd1245;
	xor.b64  	%rd1247, %rd1246, %rd1180;
	add.s64 	%rd1248, %rd1156, %rd923;
	ld.const.u64 	%rd8825, [k_sha512+216];
	add.s64 	%rd1249, %rd1248, %rd8825;
	add.s64 	%rd1250, %rd1249, %rd1247;
	add.s64 	%rd1251, %rd1250, %rd1244;
	add.s64 	%rd1252, %rd1251, %rd1167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1715,%dummy}, %rd1239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1716}, %rd1239;
	}
	shf.r.wrap.b32 	%r1717, %r1716, %r1715, 28;
	shf.r.wrap.b32 	%r1718, %r1715, %r1716, 28;
	mov.b64 	%rd1253, {%r1718, %r1717};
	shf.l.wrap.b32 	%r1719, %r1715, %r1716, 30;
	shf.l.wrap.b32 	%r1720, %r1716, %r1715, 30;
	mov.b64 	%rd1254, {%r1720, %r1719};
	xor.b64  	%rd1255, %rd1254, %rd1253;
	shf.l.wrap.b32 	%r1721, %r1715, %r1716, 25;
	shf.l.wrap.b32 	%r1722, %r1716, %r1715, 25;
	mov.b64 	%rd1256, {%r1722, %r1721};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	xor.b64  	%rd1258, %rd1239, %rd1191;
	xor.b64  	%rd1259, %rd1239, %rd1215;
	and.b64  	%rd1260, %rd1259, %rd1258;
	xor.b64  	%rd1261, %rd1260, %rd1239;
	add.s64 	%rd1262, %rd1251, %rd1261;
	add.s64 	%rd1263, %rd1262, %rd1257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1723,%dummy}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1724}, %rd1252;
	}
	shf.r.wrap.b32 	%r1725, %r1724, %r1723, 14;
	shf.r.wrap.b32 	%r1726, %r1723, %r1724, 14;
	mov.b64 	%rd1264, {%r1726, %r1725};
	shf.r.wrap.b32 	%r1727, %r1724, %r1723, 18;
	shf.r.wrap.b32 	%r1728, %r1723, %r1724, 18;
	mov.b64 	%rd1265, {%r1728, %r1727};
	xor.b64  	%rd1266, %rd1265, %rd1264;
	shf.l.wrap.b32 	%r1729, %r1723, %r1724, 23;
	shf.l.wrap.b32 	%r1730, %r1724, %r1723, 23;
	mov.b64 	%rd1267, {%r1730, %r1729};
	xor.b64  	%rd1268, %rd1266, %rd1267;
	xor.b64  	%rd1269, %rd1228, %rd1204;
	and.b64  	%rd1270, %rd1252, %rd1269;
	xor.b64  	%rd1271, %rd1270, %rd1204;
	add.s64 	%rd1272, %rd1180, %rd936;
	ld.const.u64 	%rd8824, [k_sha512+224];
	add.s64 	%rd1273, %rd1272, %rd8824;
	add.s64 	%rd1274, %rd1273, %rd1271;
	add.s64 	%rd1275, %rd1274, %rd1268;
	add.s64 	%rd1276, %rd1275, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1731,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1732}, %rd1263;
	}
	shf.r.wrap.b32 	%r1733, %r1732, %r1731, 28;
	shf.r.wrap.b32 	%r1734, %r1731, %r1732, 28;
	mov.b64 	%rd1277, {%r1734, %r1733};
	shf.l.wrap.b32 	%r1735, %r1731, %r1732, 30;
	shf.l.wrap.b32 	%r1736, %r1732, %r1731, 30;
	mov.b64 	%rd1278, {%r1736, %r1735};
	xor.b64  	%rd1279, %rd1278, %rd1277;
	shf.l.wrap.b32 	%r1737, %r1731, %r1732, 25;
	shf.l.wrap.b32 	%r1738, %r1732, %r1731, 25;
	mov.b64 	%rd1280, {%r1738, %r1737};
	xor.b64  	%rd1281, %rd1279, %rd1280;
	xor.b64  	%rd1282, %rd1263, %rd1215;
	xor.b64  	%rd1283, %rd1263, %rd1239;
	and.b64  	%rd1284, %rd1283, %rd1282;
	xor.b64  	%rd1285, %rd1284, %rd1263;
	add.s64 	%rd1286, %rd1275, %rd1285;
	add.s64 	%rd1287, %rd1286, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1739,%dummy}, %rd1276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1740}, %rd1276;
	}
	shf.r.wrap.b32 	%r1741, %r1740, %r1739, 14;
	shf.r.wrap.b32 	%r1742, %r1739, %r1740, 14;
	mov.b64 	%rd1288, {%r1742, %r1741};
	shf.r.wrap.b32 	%r1743, %r1740, %r1739, 18;
	shf.r.wrap.b32 	%r1744, %r1739, %r1740, 18;
	mov.b64 	%rd1289, {%r1744, %r1743};
	xor.b64  	%rd1290, %rd1289, %rd1288;
	shf.l.wrap.b32 	%r1745, %r1739, %r1740, 23;
	shf.l.wrap.b32 	%r1746, %r1740, %r1739, 23;
	mov.b64 	%rd1291, {%r1746, %r1745};
	xor.b64  	%rd1292, %rd1290, %rd1291;
	xor.b64  	%rd1293, %rd1252, %rd1228;
	and.b64  	%rd1294, %rd1276, %rd1293;
	xor.b64  	%rd1295, %rd1294, %rd1228;
	add.s64 	%rd1296, %rd1204, %rd949;
	ld.const.u64 	%rd8823, [k_sha512+232];
	add.s64 	%rd1297, %rd1296, %rd8823;
	add.s64 	%rd1298, %rd1297, %rd1295;
	add.s64 	%rd1299, %rd1298, %rd1292;
	add.s64 	%rd1300, %rd1299, %rd1215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1747,%dummy}, %rd1287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1748}, %rd1287;
	}
	shf.r.wrap.b32 	%r1749, %r1748, %r1747, 28;
	shf.r.wrap.b32 	%r1750, %r1747, %r1748, 28;
	mov.b64 	%rd1301, {%r1750, %r1749};
	shf.l.wrap.b32 	%r1751, %r1747, %r1748, 30;
	shf.l.wrap.b32 	%r1752, %r1748, %r1747, 30;
	mov.b64 	%rd1302, {%r1752, %r1751};
	xor.b64  	%rd1303, %rd1302, %rd1301;
	shf.l.wrap.b32 	%r1753, %r1747, %r1748, 25;
	shf.l.wrap.b32 	%r1754, %r1748, %r1747, 25;
	mov.b64 	%rd1304, {%r1754, %r1753};
	xor.b64  	%rd1305, %rd1303, %rd1304;
	xor.b64  	%rd1306, %rd1287, %rd1239;
	xor.b64  	%rd1307, %rd1287, %rd1263;
	and.b64  	%rd1308, %rd1307, %rd1306;
	xor.b64  	%rd1309, %rd1308, %rd1287;
	add.s64 	%rd1310, %rd1299, %rd1309;
	add.s64 	%rd1311, %rd1310, %rd1305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1755,%dummy}, %rd1300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1756}, %rd1300;
	}
	shf.r.wrap.b32 	%r1757, %r1756, %r1755, 14;
	shf.r.wrap.b32 	%r1758, %r1755, %r1756, 14;
	mov.b64 	%rd1312, {%r1758, %r1757};
	shf.r.wrap.b32 	%r1759, %r1756, %r1755, 18;
	shf.r.wrap.b32 	%r1760, %r1755, %r1756, 18;
	mov.b64 	%rd1313, {%r1760, %r1759};
	xor.b64  	%rd1314, %rd1313, %rd1312;
	shf.l.wrap.b32 	%r1761, %r1755, %r1756, 23;
	shf.l.wrap.b32 	%r1762, %r1756, %r1755, 23;
	mov.b64 	%rd1315, {%r1762, %r1761};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	xor.b64  	%rd1317, %rd1276, %rd1252;
	and.b64  	%rd1318, %rd1300, %rd1317;
	xor.b64  	%rd1319, %rd1318, %rd1252;
	add.s64 	%rd1320, %rd1228, %rd962;
	ld.const.u64 	%rd8822, [k_sha512+240];
	add.s64 	%rd1321, %rd1320, %rd8822;
	add.s64 	%rd1322, %rd1321, %rd1319;
	add.s64 	%rd1323, %rd1322, %rd1316;
	add.s64 	%rd1324, %rd1323, %rd1239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1763,%dummy}, %rd1311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd1311;
	}
	shf.r.wrap.b32 	%r1765, %r1764, %r1763, 28;
	shf.r.wrap.b32 	%r1766, %r1763, %r1764, 28;
	mov.b64 	%rd1325, {%r1766, %r1765};
	shf.l.wrap.b32 	%r1767, %r1763, %r1764, 30;
	shf.l.wrap.b32 	%r1768, %r1764, %r1763, 30;
	mov.b64 	%rd1326, {%r1768, %r1767};
	xor.b64  	%rd1327, %rd1326, %rd1325;
	shf.l.wrap.b32 	%r1769, %r1763, %r1764, 25;
	shf.l.wrap.b32 	%r1770, %r1764, %r1763, 25;
	mov.b64 	%rd1328, {%r1770, %r1769};
	xor.b64  	%rd1329, %rd1327, %rd1328;
	xor.b64  	%rd1330, %rd1311, %rd1263;
	xor.b64  	%rd1331, %rd1311, %rd1287;
	and.b64  	%rd1332, %rd1331, %rd1330;
	xor.b64  	%rd1333, %rd1332, %rd1311;
	add.s64 	%rd1334, %rd1323, %rd1333;
	add.s64 	%rd1335, %rd1334, %rd1329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1772}, %rd1324;
	}
	shf.r.wrap.b32 	%r1773, %r1772, %r1771, 14;
	shf.r.wrap.b32 	%r1774, %r1771, %r1772, 14;
	mov.b64 	%rd1336, {%r1774, %r1773};
	shf.r.wrap.b32 	%r1775, %r1772, %r1771, 18;
	shf.r.wrap.b32 	%r1776, %r1771, %r1772, 18;
	mov.b64 	%rd1337, {%r1776, %r1775};
	xor.b64  	%rd1338, %rd1337, %rd1336;
	shf.l.wrap.b32 	%r1777, %r1771, %r1772, 23;
	shf.l.wrap.b32 	%r1778, %r1772, %r1771, 23;
	mov.b64 	%rd1339, {%r1778, %r1777};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	xor.b64  	%rd1341, %rd1300, %rd1276;
	and.b64  	%rd1342, %rd1324, %rd1341;
	xor.b64  	%rd1343, %rd1342, %rd1276;
	add.s64 	%rd1344, %rd1252, %rd975;
	ld.const.u64 	%rd8821, [k_sha512+248];
	add.s64 	%rd1345, %rd1344, %rd8821;
	add.s64 	%rd1346, %rd1345, %rd1343;
	add.s64 	%rd1347, %rd1346, %rd1340;
	add.s64 	%rd1348, %rd1347, %rd1263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1779,%dummy}, %rd1335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1780}, %rd1335;
	}
	shf.r.wrap.b32 	%r1781, %r1780, %r1779, 28;
	shf.r.wrap.b32 	%r1782, %r1779, %r1780, 28;
	mov.b64 	%rd1349, {%r1782, %r1781};
	shf.l.wrap.b32 	%r1783, %r1779, %r1780, 30;
	shf.l.wrap.b32 	%r1784, %r1780, %r1779, 30;
	mov.b64 	%rd1350, {%r1784, %r1783};
	xor.b64  	%rd1351, %rd1350, %rd1349;
	shf.l.wrap.b32 	%r1785, %r1779, %r1780, 25;
	shf.l.wrap.b32 	%r1786, %r1780, %r1779, 25;
	mov.b64 	%rd1352, {%r1786, %r1785};
	xor.b64  	%rd1353, %rd1351, %rd1352;
	xor.b64  	%rd1354, %rd1335, %rd1287;
	xor.b64  	%rd1355, %rd1335, %rd1311;
	and.b64  	%rd1356, %rd1355, %rd1354;
	xor.b64  	%rd1357, %rd1356, %rd1335;
	add.s64 	%rd1358, %rd1347, %rd1357;
	add.s64 	%rd1359, %rd1358, %rd1353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1787,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1788}, %rd962;
	}
	shf.r.wrap.b32 	%r1789, %r1788, %r1787, 19;
	shf.r.wrap.b32 	%r1790, %r1787, %r1788, 19;
	mov.b64 	%rd1360, {%r1790, %r1789};
	shf.l.wrap.b32 	%r1791, %r1787, %r1788, 3;
	shf.l.wrap.b32 	%r1792, %r1788, %r1787, 3;
	mov.b64 	%rd1361, {%r1792, %r1791};
	shr.u64 	%rd1362, %rd962, 6;
	xor.b64  	%rd1363, %rd1360, %rd1362;
	xor.b64  	%rd1364, %rd1363, %rd1361;
	shf.r.wrap.b32 	%r1793, %r1382, %r1381, 1;
	shf.r.wrap.b32 	%r1794, %r1381, %r1382, 1;
	mov.b64 	%rd1365, {%r1794, %r1793};
	shf.r.wrap.b32 	%r1795, %r1382, %r1381, 8;
	shf.r.wrap.b32 	%r1796, %r1381, %r1382, 8;
	mov.b64 	%rd1366, {%r1796, %r1795};
	shr.u64 	%rd1367, %rd793, 7;
	xor.b64  	%rd1368, %rd1365, %rd1367;
	xor.b64  	%rd1369, %rd1368, %rd1366;
	add.s64 	%rd1370, %rd897, %rd780;
	add.s64 	%rd1371, %rd1370, %rd1364;
	add.s64 	%rd1372, %rd1371, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd975;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 19;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 19;
	mov.b64 	%rd1373, {%r1800, %r1799};
	shf.l.wrap.b32 	%r1801, %r1797, %r1798, 3;
	shf.l.wrap.b32 	%r1802, %r1798, %r1797, 3;
	mov.b64 	%rd1374, {%r1802, %r1801};
	shr.u64 	%rd1375, %rd975, 6;
	xor.b64  	%rd1376, %rd1373, %rd1375;
	xor.b64  	%rd1377, %rd1376, %rd1374;
	shf.r.wrap.b32 	%r1803, %r1394, %r1393, 1;
	shf.r.wrap.b32 	%r1804, %r1393, %r1394, 1;
	mov.b64 	%rd1378, {%r1804, %r1803};
	shf.r.wrap.b32 	%r1805, %r1394, %r1393, 8;
	shf.r.wrap.b32 	%r1806, %r1393, %r1394, 8;
	mov.b64 	%rd1379, {%r1806, %r1805};
	shr.u64 	%rd1380, %rd806, 7;
	xor.b64  	%rd1381, %rd1378, %rd1380;
	xor.b64  	%rd1382, %rd1381, %rd1379;
	add.s64 	%rd1383, %rd910, %rd793;
	add.s64 	%rd1384, %rd1383, %rd1377;
	add.s64 	%rd1385, %rd1384, %rd1382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd1372;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 19;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 19;
	mov.b64 	%rd1386, {%r1810, %r1809};
	shf.l.wrap.b32 	%r1811, %r1807, %r1808, 3;
	shf.l.wrap.b32 	%r1812, %r1808, %r1807, 3;
	mov.b64 	%rd1387, {%r1812, %r1811};
	shr.u64 	%rd1388, %rd1372, 6;
	xor.b64  	%rd1389, %rd1386, %rd1388;
	xor.b64  	%rd1390, %rd1389, %rd1387;
	shf.r.wrap.b32 	%r1813, %r1406, %r1405, 1;
	shf.r.wrap.b32 	%r1814, %r1405, %r1406, 1;
	mov.b64 	%rd1391, {%r1814, %r1813};
	shf.r.wrap.b32 	%r1815, %r1406, %r1405, 8;
	shf.r.wrap.b32 	%r1816, %r1405, %r1406, 8;
	mov.b64 	%rd1392, {%r1816, %r1815};
	shr.u64 	%rd1393, %rd819, 7;
	xor.b64  	%rd1394, %rd1391, %rd1393;
	xor.b64  	%rd1395, %rd1394, %rd1392;
	add.s64 	%rd1396, %rd923, %rd806;
	add.s64 	%rd1397, %rd1396, %rd1390;
	add.s64 	%rd1398, %rd1397, %rd1395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1817,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1818}, %rd1385;
	}
	shf.r.wrap.b32 	%r1819, %r1818, %r1817, 19;
	shf.r.wrap.b32 	%r1820, %r1817, %r1818, 19;
	mov.b64 	%rd1399, {%r1820, %r1819};
	shf.l.wrap.b32 	%r1821, %r1817, %r1818, 3;
	shf.l.wrap.b32 	%r1822, %r1818, %r1817, 3;
	mov.b64 	%rd1400, {%r1822, %r1821};
	shr.u64 	%rd1401, %rd1385, 6;
	xor.b64  	%rd1402, %rd1399, %rd1401;
	xor.b64  	%rd1403, %rd1402, %rd1400;
	shf.r.wrap.b32 	%r1823, %r1418, %r1417, 1;
	shf.r.wrap.b32 	%r1824, %r1417, %r1418, 1;
	mov.b64 	%rd1404, {%r1824, %r1823};
	shf.r.wrap.b32 	%r1825, %r1418, %r1417, 8;
	shf.r.wrap.b32 	%r1826, %r1417, %r1418, 8;
	mov.b64 	%rd1405, {%r1826, %r1825};
	shr.u64 	%rd1406, %rd832, 7;
	xor.b64  	%rd1407, %rd1404, %rd1406;
	xor.b64  	%rd1408, %rd1407, %rd1405;
	add.s64 	%rd1409, %rd936, %rd819;
	add.s64 	%rd1410, %rd1409, %rd1403;
	add.s64 	%rd1411, %rd1410, %rd1408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1827,%dummy}, %rd1398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1828}, %rd1398;
	}
	shf.r.wrap.b32 	%r1829, %r1828, %r1827, 19;
	shf.r.wrap.b32 	%r1830, %r1827, %r1828, 19;
	mov.b64 	%rd1412, {%r1830, %r1829};
	shf.l.wrap.b32 	%r1831, %r1827, %r1828, 3;
	shf.l.wrap.b32 	%r1832, %r1828, %r1827, 3;
	mov.b64 	%rd1413, {%r1832, %r1831};
	shr.u64 	%rd1414, %rd1398, 6;
	xor.b64  	%rd1415, %rd1412, %rd1414;
	xor.b64  	%rd1416, %rd1415, %rd1413;
	shf.r.wrap.b32 	%r1833, %r1430, %r1429, 1;
	shf.r.wrap.b32 	%r1834, %r1429, %r1430, 1;
	mov.b64 	%rd1417, {%r1834, %r1833};
	shf.r.wrap.b32 	%r1835, %r1430, %r1429, 8;
	shf.r.wrap.b32 	%r1836, %r1429, %r1430, 8;
	mov.b64 	%rd1418, {%r1836, %r1835};
	shr.u64 	%rd1419, %rd845, 7;
	xor.b64  	%rd1420, %rd1417, %rd1419;
	xor.b64  	%rd1421, %rd1420, %rd1418;
	add.s64 	%rd1422, %rd949, %rd832;
	add.s64 	%rd1423, %rd1422, %rd1416;
	add.s64 	%rd1424, %rd1423, %rd1421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1837,%dummy}, %rd1411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1838}, %rd1411;
	}
	shf.r.wrap.b32 	%r1839, %r1838, %r1837, 19;
	shf.r.wrap.b32 	%r1840, %r1837, %r1838, 19;
	mov.b64 	%rd1425, {%r1840, %r1839};
	shf.l.wrap.b32 	%r1841, %r1837, %r1838, 3;
	shf.l.wrap.b32 	%r1842, %r1838, %r1837, 3;
	mov.b64 	%rd1426, {%r1842, %r1841};
	shr.u64 	%rd1427, %rd1411, 6;
	xor.b64  	%rd1428, %rd1425, %rd1427;
	xor.b64  	%rd1429, %rd1428, %rd1426;
	shf.r.wrap.b32 	%r1843, %r1442, %r1441, 1;
	shf.r.wrap.b32 	%r1844, %r1441, %r1442, 1;
	mov.b64 	%rd1430, {%r1844, %r1843};
	shf.r.wrap.b32 	%r1845, %r1442, %r1441, 8;
	shf.r.wrap.b32 	%r1846, %r1441, %r1442, 8;
	mov.b64 	%rd1431, {%r1846, %r1845};
	shr.u64 	%rd1432, %rd858, 7;
	xor.b64  	%rd1433, %rd1430, %rd1432;
	xor.b64  	%rd1434, %rd1433, %rd1431;
	add.s64 	%rd1435, %rd962, %rd845;
	add.s64 	%rd1436, %rd1435, %rd1429;
	add.s64 	%rd1437, %rd1436, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1847,%dummy}, %rd1424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd1424;
	}
	shf.r.wrap.b32 	%r1849, %r1848, %r1847, 19;
	shf.r.wrap.b32 	%r1850, %r1847, %r1848, 19;
	mov.b64 	%rd1438, {%r1850, %r1849};
	shf.l.wrap.b32 	%r1851, %r1847, %r1848, 3;
	shf.l.wrap.b32 	%r1852, %r1848, %r1847, 3;
	mov.b64 	%rd1439, {%r1852, %r1851};
	shr.u64 	%rd1440, %rd1424, 6;
	xor.b64  	%rd1441, %rd1438, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1439;
	shf.r.wrap.b32 	%r1853, %r1454, %r1453, 1;
	shf.r.wrap.b32 	%r1854, %r1453, %r1454, 1;
	mov.b64 	%rd1443, {%r1854, %r1853};
	shf.r.wrap.b32 	%r1855, %r1454, %r1453, 8;
	shf.r.wrap.b32 	%r1856, %r1453, %r1454, 8;
	mov.b64 	%rd1444, {%r1856, %r1855};
	shr.u64 	%rd1445, %rd871, 7;
	xor.b64  	%rd1446, %rd1443, %rd1445;
	xor.b64  	%rd1447, %rd1446, %rd1444;
	add.s64 	%rd1448, %rd975, %rd858;
	add.s64 	%rd1449, %rd1448, %rd1442;
	add.s64 	%rd1450, %rd1449, %rd1447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd1437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1858}, %rd1437;
	}
	shf.r.wrap.b32 	%r1859, %r1858, %r1857, 19;
	shf.r.wrap.b32 	%r1860, %r1857, %r1858, 19;
	mov.b64 	%rd1451, {%r1860, %r1859};
	shf.l.wrap.b32 	%r1861, %r1857, %r1858, 3;
	shf.l.wrap.b32 	%r1862, %r1858, %r1857, 3;
	mov.b64 	%rd1452, {%r1862, %r1861};
	shr.u64 	%rd1453, %rd1437, 6;
	xor.b64  	%rd1454, %rd1451, %rd1453;
	xor.b64  	%rd1455, %rd1454, %rd1452;
	shf.r.wrap.b32 	%r1863, %r1466, %r1465, 1;
	shf.r.wrap.b32 	%r1864, %r1465, %r1466, 1;
	mov.b64 	%rd1456, {%r1864, %r1863};
	shf.r.wrap.b32 	%r1865, %r1466, %r1465, 8;
	shf.r.wrap.b32 	%r1866, %r1465, %r1466, 8;
	mov.b64 	%rd1457, {%r1866, %r1865};
	shr.u64 	%rd1458, %rd884, 7;
	xor.b64  	%rd1459, %rd1456, %rd1458;
	xor.b64  	%rd1460, %rd1459, %rd1457;
	add.s64 	%rd1461, %rd1372, %rd871;
	add.s64 	%rd1462, %rd1461, %rd1455;
	add.s64 	%rd1463, %rd1462, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1867,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1868}, %rd1450;
	}
	shf.r.wrap.b32 	%r1869, %r1868, %r1867, 19;
	shf.r.wrap.b32 	%r1870, %r1867, %r1868, 19;
	mov.b64 	%rd1464, {%r1870, %r1869};
	shf.l.wrap.b32 	%r1871, %r1867, %r1868, 3;
	shf.l.wrap.b32 	%r1872, %r1868, %r1867, 3;
	mov.b64 	%rd1465, {%r1872, %r1871};
	shr.u64 	%rd1466, %rd1450, 6;
	xor.b64  	%rd1467, %rd1464, %rd1466;
	xor.b64  	%rd1468, %rd1467, %rd1465;
	shf.r.wrap.b32 	%r1873, %r1478, %r1477, 1;
	shf.r.wrap.b32 	%r1874, %r1477, %r1478, 1;
	mov.b64 	%rd1469, {%r1874, %r1873};
	shf.r.wrap.b32 	%r1875, %r1478, %r1477, 8;
	shf.r.wrap.b32 	%r1876, %r1477, %r1478, 8;
	mov.b64 	%rd1470, {%r1876, %r1875};
	shr.u64 	%rd1471, %rd897, 7;
	xor.b64  	%rd1472, %rd1469, %rd1471;
	xor.b64  	%rd1473, %rd1472, %rd1470;
	add.s64 	%rd1474, %rd1385, %rd884;
	add.s64 	%rd1475, %rd1474, %rd1468;
	add.s64 	%rd1476, %rd1475, %rd1473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1877,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1878}, %rd1463;
	}
	shf.r.wrap.b32 	%r1879, %r1878, %r1877, 19;
	shf.r.wrap.b32 	%r1880, %r1877, %r1878, 19;
	mov.b64 	%rd1477, {%r1880, %r1879};
	shf.l.wrap.b32 	%r1881, %r1877, %r1878, 3;
	shf.l.wrap.b32 	%r1882, %r1878, %r1877, 3;
	mov.b64 	%rd1478, {%r1882, %r1881};
	shr.u64 	%rd1479, %rd1463, 6;
	xor.b64  	%rd1480, %rd1477, %rd1479;
	xor.b64  	%rd1481, %rd1480, %rd1478;
	shf.r.wrap.b32 	%r1883, %r1490, %r1489, 1;
	shf.r.wrap.b32 	%r1884, %r1489, %r1490, 1;
	mov.b64 	%rd1482, {%r1884, %r1883};
	shf.r.wrap.b32 	%r1885, %r1490, %r1489, 8;
	shf.r.wrap.b32 	%r1886, %r1489, %r1490, 8;
	mov.b64 	%rd1483, {%r1886, %r1885};
	shr.u64 	%rd1484, %rd910, 7;
	xor.b64  	%rd1485, %rd1482, %rd1484;
	xor.b64  	%rd1486, %rd1485, %rd1483;
	add.s64 	%rd1487, %rd1398, %rd897;
	add.s64 	%rd1488, %rd1487, %rd1481;
	add.s64 	%rd1489, %rd1488, %rd1486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1887,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1888}, %rd1476;
	}
	shf.r.wrap.b32 	%r1889, %r1888, %r1887, 19;
	shf.r.wrap.b32 	%r1890, %r1887, %r1888, 19;
	mov.b64 	%rd1490, {%r1890, %r1889};
	shf.l.wrap.b32 	%r1891, %r1887, %r1888, 3;
	shf.l.wrap.b32 	%r1892, %r1888, %r1887, 3;
	mov.b64 	%rd1491, {%r1892, %r1891};
	shr.u64 	%rd1492, %rd1476, 6;
	xor.b64  	%rd1493, %rd1490, %rd1492;
	xor.b64  	%rd1494, %rd1493, %rd1491;
	shf.r.wrap.b32 	%r1893, %r1502, %r1501, 1;
	shf.r.wrap.b32 	%r1894, %r1501, %r1502, 1;
	mov.b64 	%rd1495, {%r1894, %r1893};
	shf.r.wrap.b32 	%r1895, %r1502, %r1501, 8;
	shf.r.wrap.b32 	%r1896, %r1501, %r1502, 8;
	mov.b64 	%rd1496, {%r1896, %r1895};
	shr.u64 	%rd1497, %rd923, 7;
	xor.b64  	%rd1498, %rd1495, %rd1497;
	xor.b64  	%rd1499, %rd1498, %rd1496;
	add.s64 	%rd1500, %rd1411, %rd910;
	add.s64 	%rd1501, %rd1500, %rd1494;
	add.s64 	%rd1502, %rd1501, %rd1499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1897,%dummy}, %rd1489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1898}, %rd1489;
	}
	shf.r.wrap.b32 	%r1899, %r1898, %r1897, 19;
	shf.r.wrap.b32 	%r1900, %r1897, %r1898, 19;
	mov.b64 	%rd1503, {%r1900, %r1899};
	shf.l.wrap.b32 	%r1901, %r1897, %r1898, 3;
	shf.l.wrap.b32 	%r1902, %r1898, %r1897, 3;
	mov.b64 	%rd1504, {%r1902, %r1901};
	shr.u64 	%rd1505, %rd1489, 6;
	xor.b64  	%rd1506, %rd1503, %rd1505;
	xor.b64  	%rd1507, %rd1506, %rd1504;
	shf.r.wrap.b32 	%r1903, %r1512, %r1511, 1;
	shf.r.wrap.b32 	%r1904, %r1511, %r1512, 1;
	mov.b64 	%rd1508, {%r1904, %r1903};
	shf.r.wrap.b32 	%r1905, %r1512, %r1511, 8;
	shf.r.wrap.b32 	%r1906, %r1511, %r1512, 8;
	mov.b64 	%rd1509, {%r1906, %r1905};
	shr.u64 	%rd1510, %rd936, 7;
	xor.b64  	%rd1511, %rd1508, %rd1510;
	xor.b64  	%rd1512, %rd1511, %rd1509;
	add.s64 	%rd1513, %rd1424, %rd923;
	add.s64 	%rd1514, %rd1513, %rd1507;
	add.s64 	%rd1515, %rd1514, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1907,%dummy}, %rd1502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1908}, %rd1502;
	}
	shf.r.wrap.b32 	%r1909, %r1908, %r1907, 19;
	shf.r.wrap.b32 	%r1910, %r1907, %r1908, 19;
	mov.b64 	%rd1516, {%r1910, %r1909};
	shf.l.wrap.b32 	%r1911, %r1907, %r1908, 3;
	shf.l.wrap.b32 	%r1912, %r1908, %r1907, 3;
	mov.b64 	%rd1517, {%r1912, %r1911};
	shr.u64 	%rd1518, %rd1502, 6;
	xor.b64  	%rd1519, %rd1516, %rd1518;
	xor.b64  	%rd1520, %rd1519, %rd1517;
	shf.r.wrap.b32 	%r1913, %r1522, %r1521, 1;
	shf.r.wrap.b32 	%r1914, %r1521, %r1522, 1;
	mov.b64 	%rd1521, {%r1914, %r1913};
	shf.r.wrap.b32 	%r1915, %r1522, %r1521, 8;
	shf.r.wrap.b32 	%r1916, %r1521, %r1522, 8;
	mov.b64 	%rd1522, {%r1916, %r1915};
	shr.u64 	%rd1523, %rd949, 7;
	xor.b64  	%rd1524, %rd1521, %rd1523;
	xor.b64  	%rd1525, %rd1524, %rd1522;
	add.s64 	%rd1526, %rd1437, %rd936;
	add.s64 	%rd1527, %rd1526, %rd1520;
	add.s64 	%rd1528, %rd1527, %rd1525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd1515;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 19;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 19;
	mov.b64 	%rd1529, {%r1920, %r1919};
	shf.l.wrap.b32 	%r1921, %r1917, %r1918, 3;
	shf.l.wrap.b32 	%r1922, %r1918, %r1917, 3;
	mov.b64 	%rd1530, {%r1922, %r1921};
	shr.u64 	%rd1531, %rd1515, 6;
	xor.b64  	%rd1532, %rd1529, %rd1531;
	xor.b64  	%rd1533, %rd1532, %rd1530;
	shf.r.wrap.b32 	%r1923, %r1788, %r1787, 1;
	shf.r.wrap.b32 	%r1924, %r1787, %r1788, 1;
	mov.b64 	%rd1534, {%r1924, %r1923};
	shf.r.wrap.b32 	%r1925, %r1788, %r1787, 8;
	shf.r.wrap.b32 	%r1926, %r1787, %r1788, 8;
	mov.b64 	%rd1535, {%r1926, %r1925};
	shr.u64 	%rd1536, %rd962, 7;
	xor.b64  	%rd1537, %rd1534, %rd1536;
	xor.b64  	%rd1538, %rd1537, %rd1535;
	add.s64 	%rd1539, %rd1450, %rd949;
	add.s64 	%rd1540, %rd1539, %rd1533;
	add.s64 	%rd1541, %rd1540, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1927,%dummy}, %rd1528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1928}, %rd1528;
	}
	shf.r.wrap.b32 	%r1929, %r1928, %r1927, 19;
	shf.r.wrap.b32 	%r1930, %r1927, %r1928, 19;
	mov.b64 	%rd1542, {%r1930, %r1929};
	shf.l.wrap.b32 	%r1931, %r1927, %r1928, 3;
	shf.l.wrap.b32 	%r1932, %r1928, %r1927, 3;
	mov.b64 	%rd1543, {%r1932, %r1931};
	shr.u64 	%rd1544, %rd1528, 6;
	xor.b64  	%rd1545, %rd1542, %rd1544;
	xor.b64  	%rd1546, %rd1545, %rd1543;
	shf.r.wrap.b32 	%r1933, %r1798, %r1797, 1;
	shf.r.wrap.b32 	%r1934, %r1797, %r1798, 1;
	mov.b64 	%rd1547, {%r1934, %r1933};
	shf.r.wrap.b32 	%r1935, %r1798, %r1797, 8;
	shf.r.wrap.b32 	%r1936, %r1797, %r1798, 8;
	mov.b64 	%rd1548, {%r1936, %r1935};
	shr.u64 	%rd1549, %rd975, 7;
	xor.b64  	%rd1550, %rd1547, %rd1549;
	xor.b64  	%rd1551, %rd1550, %rd1548;
	add.s64 	%rd1552, %rd1463, %rd962;
	add.s64 	%rd1553, %rd1552, %rd1546;
	add.s64 	%rd1554, %rd1553, %rd1551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1937,%dummy}, %rd1541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1938}, %rd1541;
	}
	shf.r.wrap.b32 	%r1939, %r1938, %r1937, 19;
	shf.r.wrap.b32 	%r1940, %r1937, %r1938, 19;
	mov.b64 	%rd1555, {%r1940, %r1939};
	shf.l.wrap.b32 	%r1941, %r1937, %r1938, 3;
	shf.l.wrap.b32 	%r1942, %r1938, %r1937, 3;
	mov.b64 	%rd1556, {%r1942, %r1941};
	shr.u64 	%rd1557, %rd1541, 6;
	xor.b64  	%rd1558, %rd1555, %rd1557;
	xor.b64  	%rd1559, %rd1558, %rd1556;
	shf.r.wrap.b32 	%r1943, %r1808, %r1807, 1;
	shf.r.wrap.b32 	%r1944, %r1807, %r1808, 1;
	mov.b64 	%rd1560, {%r1944, %r1943};
	shf.r.wrap.b32 	%r1945, %r1808, %r1807, 8;
	shf.r.wrap.b32 	%r1946, %r1807, %r1808, 8;
	mov.b64 	%rd1561, {%r1946, %r1945};
	shr.u64 	%rd1562, %rd1372, 7;
	xor.b64  	%rd1563, %rd1560, %rd1562;
	xor.b64  	%rd1564, %rd1563, %rd1561;
	add.s64 	%rd1565, %rd1476, %rd975;
	add.s64 	%rd1566, %rd1565, %rd1559;
	add.s64 	%rd1567, %rd1566, %rd1564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1947,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1948}, %rd1348;
	}
	shf.r.wrap.b32 	%r1949, %r1948, %r1947, 14;
	shf.r.wrap.b32 	%r1950, %r1947, %r1948, 14;
	mov.b64 	%rd1568, {%r1950, %r1949};
	shf.r.wrap.b32 	%r1951, %r1948, %r1947, 18;
	shf.r.wrap.b32 	%r1952, %r1947, %r1948, 18;
	mov.b64 	%rd1569, {%r1952, %r1951};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r1953, %r1947, %r1948, 23;
	shf.l.wrap.b32 	%r1954, %r1948, %r1947, 23;
	mov.b64 	%rd1571, {%r1954, %r1953};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	xor.b64  	%rd1573, %rd1324, %rd1300;
	and.b64  	%rd1574, %rd1573, %rd1348;
	xor.b64  	%rd1575, %rd1574, %rd1300;
	add.s64 	%rd1576, %rd1575, %rd1276;
	add.s64 	%rd1577, %rd1576, %rd1372;
	ld.const.u64 	%rd8820, [k_sha512+256];
	add.s64 	%rd1578, %rd1577, %rd8820;
	add.s64 	%rd1579, %rd1578, %rd1572;
	add.s64 	%rd1580, %rd1579, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1955,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1956}, %rd1359;
	}
	shf.r.wrap.b32 	%r1957, %r1956, %r1955, 28;
	shf.r.wrap.b32 	%r1958, %r1955, %r1956, 28;
	mov.b64 	%rd1581, {%r1958, %r1957};
	shf.l.wrap.b32 	%r1959, %r1955, %r1956, 30;
	shf.l.wrap.b32 	%r1960, %r1956, %r1955, 30;
	mov.b64 	%rd1582, {%r1960, %r1959};
	xor.b64  	%rd1583, %rd1582, %rd1581;
	shf.l.wrap.b32 	%r1961, %r1955, %r1956, 25;
	shf.l.wrap.b32 	%r1962, %r1956, %r1955, 25;
	mov.b64 	%rd1584, {%r1962, %r1961};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	xor.b64  	%rd1586, %rd1359, %rd1311;
	xor.b64  	%rd1587, %rd1359, %rd1335;
	and.b64  	%rd1588, %rd1587, %rd1586;
	xor.b64  	%rd1589, %rd1588, %rd1359;
	add.s64 	%rd1590, %rd1579, %rd1589;
	add.s64 	%rd1591, %rd1590, %rd1585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1963,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1964}, %rd1580;
	}
	shf.r.wrap.b32 	%r1965, %r1964, %r1963, 14;
	shf.r.wrap.b32 	%r1966, %r1963, %r1964, 14;
	mov.b64 	%rd1592, {%r1966, %r1965};
	shf.r.wrap.b32 	%r1967, %r1964, %r1963, 18;
	shf.r.wrap.b32 	%r1968, %r1963, %r1964, 18;
	mov.b64 	%rd1593, {%r1968, %r1967};
	xor.b64  	%rd1594, %rd1593, %rd1592;
	shf.l.wrap.b32 	%r1969, %r1963, %r1964, 23;
	shf.l.wrap.b32 	%r1970, %r1964, %r1963, 23;
	mov.b64 	%rd1595, {%r1970, %r1969};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	xor.b64  	%rd1597, %rd1348, %rd1324;
	and.b64  	%rd1598, %rd1580, %rd1597;
	xor.b64  	%rd1599, %rd1598, %rd1324;
	add.s64 	%rd1600, %rd1385, %rd1300;
	ld.const.u64 	%rd8819, [k_sha512+264];
	add.s64 	%rd1601, %rd1600, %rd8819;
	add.s64 	%rd1602, %rd1601, %rd1599;
	add.s64 	%rd1603, %rd1602, %rd1596;
	add.s64 	%rd1604, %rd1603, %rd1311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1971,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd1591;
	}
	shf.r.wrap.b32 	%r1973, %r1972, %r1971, 28;
	shf.r.wrap.b32 	%r1974, %r1971, %r1972, 28;
	mov.b64 	%rd1605, {%r1974, %r1973};
	shf.l.wrap.b32 	%r1975, %r1971, %r1972, 30;
	shf.l.wrap.b32 	%r1976, %r1972, %r1971, 30;
	mov.b64 	%rd1606, {%r1976, %r1975};
	xor.b64  	%rd1607, %rd1606, %rd1605;
	shf.l.wrap.b32 	%r1977, %r1971, %r1972, 25;
	shf.l.wrap.b32 	%r1978, %r1972, %r1971, 25;
	mov.b64 	%rd1608, {%r1978, %r1977};
	xor.b64  	%rd1609, %rd1607, %rd1608;
	xor.b64  	%rd1610, %rd1591, %rd1335;
	xor.b64  	%rd1611, %rd1591, %rd1359;
	and.b64  	%rd1612, %rd1611, %rd1610;
	xor.b64  	%rd1613, %rd1612, %rd1591;
	add.s64 	%rd1614, %rd1603, %rd1613;
	add.s64 	%rd1615, %rd1614, %rd1609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1979,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1980}, %rd1604;
	}
	shf.r.wrap.b32 	%r1981, %r1980, %r1979, 14;
	shf.r.wrap.b32 	%r1982, %r1979, %r1980, 14;
	mov.b64 	%rd1616, {%r1982, %r1981};
	shf.r.wrap.b32 	%r1983, %r1980, %r1979, 18;
	shf.r.wrap.b32 	%r1984, %r1979, %r1980, 18;
	mov.b64 	%rd1617, {%r1984, %r1983};
	xor.b64  	%rd1618, %rd1617, %rd1616;
	shf.l.wrap.b32 	%r1985, %r1979, %r1980, 23;
	shf.l.wrap.b32 	%r1986, %r1980, %r1979, 23;
	mov.b64 	%rd1619, {%r1986, %r1985};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	xor.b64  	%rd1621, %rd1580, %rd1348;
	and.b64  	%rd1622, %rd1604, %rd1621;
	xor.b64  	%rd1623, %rd1622, %rd1348;
	add.s64 	%rd1624, %rd1398, %rd1324;
	ld.const.u64 	%rd8818, [k_sha512+272];
	add.s64 	%rd1625, %rd1624, %rd8818;
	add.s64 	%rd1626, %rd1625, %rd1623;
	add.s64 	%rd1627, %rd1626, %rd1620;
	add.s64 	%rd1628, %rd1627, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1987,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1988}, %rd1615;
	}
	shf.r.wrap.b32 	%r1989, %r1988, %r1987, 28;
	shf.r.wrap.b32 	%r1990, %r1987, %r1988, 28;
	mov.b64 	%rd1629, {%r1990, %r1989};
	shf.l.wrap.b32 	%r1991, %r1987, %r1988, 30;
	shf.l.wrap.b32 	%r1992, %r1988, %r1987, 30;
	mov.b64 	%rd1630, {%r1992, %r1991};
	xor.b64  	%rd1631, %rd1630, %rd1629;
	shf.l.wrap.b32 	%r1993, %r1987, %r1988, 25;
	shf.l.wrap.b32 	%r1994, %r1988, %r1987, 25;
	mov.b64 	%rd1632, {%r1994, %r1993};
	xor.b64  	%rd1633, %rd1631, %rd1632;
	xor.b64  	%rd1634, %rd1615, %rd1359;
	xor.b64  	%rd1635, %rd1615, %rd1591;
	and.b64  	%rd1636, %rd1635, %rd1634;
	xor.b64  	%rd1637, %rd1636, %rd1615;
	add.s64 	%rd1638, %rd1627, %rd1637;
	add.s64 	%rd1639, %rd1638, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1995,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1996}, %rd1628;
	}
	shf.r.wrap.b32 	%r1997, %r1996, %r1995, 14;
	shf.r.wrap.b32 	%r1998, %r1995, %r1996, 14;
	mov.b64 	%rd1640, {%r1998, %r1997};
	shf.r.wrap.b32 	%r1999, %r1996, %r1995, 18;
	shf.r.wrap.b32 	%r2000, %r1995, %r1996, 18;
	mov.b64 	%rd1641, {%r2000, %r1999};
	xor.b64  	%rd1642, %rd1641, %rd1640;
	shf.l.wrap.b32 	%r2001, %r1995, %r1996, 23;
	shf.l.wrap.b32 	%r2002, %r1996, %r1995, 23;
	mov.b64 	%rd1643, {%r2002, %r2001};
	xor.b64  	%rd1644, %rd1642, %rd1643;
	xor.b64  	%rd1645, %rd1604, %rd1580;
	and.b64  	%rd1646, %rd1628, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1580;
	add.s64 	%rd1648, %rd1411, %rd1348;
	ld.const.u64 	%rd8817, [k_sha512+280];
	add.s64 	%rd1649, %rd1648, %rd8817;
	add.s64 	%rd1650, %rd1649, %rd1647;
	add.s64 	%rd1651, %rd1650, %rd1644;
	add.s64 	%rd1652, %rd1651, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2003,%dummy}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2004}, %rd1639;
	}
	shf.r.wrap.b32 	%r2005, %r2004, %r2003, 28;
	shf.r.wrap.b32 	%r2006, %r2003, %r2004, 28;
	mov.b64 	%rd1653, {%r2006, %r2005};
	shf.l.wrap.b32 	%r2007, %r2003, %r2004, 30;
	shf.l.wrap.b32 	%r2008, %r2004, %r2003, 30;
	mov.b64 	%rd1654, {%r2008, %r2007};
	xor.b64  	%rd1655, %rd1654, %rd1653;
	shf.l.wrap.b32 	%r2009, %r2003, %r2004, 25;
	shf.l.wrap.b32 	%r2010, %r2004, %r2003, 25;
	mov.b64 	%rd1656, {%r2010, %r2009};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	xor.b64  	%rd1658, %rd1639, %rd1591;
	xor.b64  	%rd1659, %rd1639, %rd1615;
	and.b64  	%rd1660, %rd1659, %rd1658;
	xor.b64  	%rd1661, %rd1660, %rd1639;
	add.s64 	%rd1662, %rd1651, %rd1661;
	add.s64 	%rd1663, %rd1662, %rd1657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2011,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2012}, %rd1652;
	}
	shf.r.wrap.b32 	%r2013, %r2012, %r2011, 14;
	shf.r.wrap.b32 	%r2014, %r2011, %r2012, 14;
	mov.b64 	%rd1664, {%r2014, %r2013};
	shf.r.wrap.b32 	%r2015, %r2012, %r2011, 18;
	shf.r.wrap.b32 	%r2016, %r2011, %r2012, 18;
	mov.b64 	%rd1665, {%r2016, %r2015};
	xor.b64  	%rd1666, %rd1665, %rd1664;
	shf.l.wrap.b32 	%r2017, %r2011, %r2012, 23;
	shf.l.wrap.b32 	%r2018, %r2012, %r2011, 23;
	mov.b64 	%rd1667, {%r2018, %r2017};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	xor.b64  	%rd1669, %rd1628, %rd1604;
	and.b64  	%rd1670, %rd1652, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1604;
	add.s64 	%rd1672, %rd1580, %rd1424;
	ld.const.u64 	%rd8816, [k_sha512+288];
	add.s64 	%rd1673, %rd1672, %rd8816;
	add.s64 	%rd1674, %rd1673, %rd1671;
	add.s64 	%rd1675, %rd1674, %rd1668;
	add.s64 	%rd1676, %rd1675, %rd1591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2019,%dummy}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2020}, %rd1663;
	}
	shf.r.wrap.b32 	%r2021, %r2020, %r2019, 28;
	shf.r.wrap.b32 	%r2022, %r2019, %r2020, 28;
	mov.b64 	%rd1677, {%r2022, %r2021};
	shf.l.wrap.b32 	%r2023, %r2019, %r2020, 30;
	shf.l.wrap.b32 	%r2024, %r2020, %r2019, 30;
	mov.b64 	%rd1678, {%r2024, %r2023};
	xor.b64  	%rd1679, %rd1678, %rd1677;
	shf.l.wrap.b32 	%r2025, %r2019, %r2020, 25;
	shf.l.wrap.b32 	%r2026, %r2020, %r2019, 25;
	mov.b64 	%rd1680, {%r2026, %r2025};
	xor.b64  	%rd1681, %rd1679, %rd1680;
	xor.b64  	%rd1682, %rd1663, %rd1615;
	xor.b64  	%rd1683, %rd1663, %rd1639;
	and.b64  	%rd1684, %rd1683, %rd1682;
	xor.b64  	%rd1685, %rd1684, %rd1663;
	add.s64 	%rd1686, %rd1675, %rd1685;
	add.s64 	%rd1687, %rd1686, %rd1681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2027,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2028}, %rd1676;
	}
	shf.r.wrap.b32 	%r2029, %r2028, %r2027, 14;
	shf.r.wrap.b32 	%r2030, %r2027, %r2028, 14;
	mov.b64 	%rd1688, {%r2030, %r2029};
	shf.r.wrap.b32 	%r2031, %r2028, %r2027, 18;
	shf.r.wrap.b32 	%r2032, %r2027, %r2028, 18;
	mov.b64 	%rd1689, {%r2032, %r2031};
	xor.b64  	%rd1690, %rd1689, %rd1688;
	shf.l.wrap.b32 	%r2033, %r2027, %r2028, 23;
	shf.l.wrap.b32 	%r2034, %r2028, %r2027, 23;
	mov.b64 	%rd1691, {%r2034, %r2033};
	xor.b64  	%rd1692, %rd1690, %rd1691;
	xor.b64  	%rd1693, %rd1652, %rd1628;
	and.b64  	%rd1694, %rd1676, %rd1693;
	xor.b64  	%rd1695, %rd1694, %rd1628;
	add.s64 	%rd1696, %rd1604, %rd1437;
	ld.const.u64 	%rd8815, [k_sha512+296];
	add.s64 	%rd1697, %rd1696, %rd8815;
	add.s64 	%rd1698, %rd1697, %rd1695;
	add.s64 	%rd1699, %rd1698, %rd1692;
	add.s64 	%rd1700, %rd1699, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2035,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2036}, %rd1687;
	}
	shf.r.wrap.b32 	%r2037, %r2036, %r2035, 28;
	shf.r.wrap.b32 	%r2038, %r2035, %r2036, 28;
	mov.b64 	%rd1701, {%r2038, %r2037};
	shf.l.wrap.b32 	%r2039, %r2035, %r2036, 30;
	shf.l.wrap.b32 	%r2040, %r2036, %r2035, 30;
	mov.b64 	%rd1702, {%r2040, %r2039};
	xor.b64  	%rd1703, %rd1702, %rd1701;
	shf.l.wrap.b32 	%r2041, %r2035, %r2036, 25;
	shf.l.wrap.b32 	%r2042, %r2036, %r2035, 25;
	mov.b64 	%rd1704, {%r2042, %r2041};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	xor.b64  	%rd1706, %rd1687, %rd1639;
	xor.b64  	%rd1707, %rd1687, %rd1663;
	and.b64  	%rd1708, %rd1707, %rd1706;
	xor.b64  	%rd1709, %rd1708, %rd1687;
	add.s64 	%rd1710, %rd1699, %rd1709;
	add.s64 	%rd1711, %rd1710, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2043,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2044}, %rd1700;
	}
	shf.r.wrap.b32 	%r2045, %r2044, %r2043, 14;
	shf.r.wrap.b32 	%r2046, %r2043, %r2044, 14;
	mov.b64 	%rd1712, {%r2046, %r2045};
	shf.r.wrap.b32 	%r2047, %r2044, %r2043, 18;
	shf.r.wrap.b32 	%r2048, %r2043, %r2044, 18;
	mov.b64 	%rd1713, {%r2048, %r2047};
	xor.b64  	%rd1714, %rd1713, %rd1712;
	shf.l.wrap.b32 	%r2049, %r2043, %r2044, 23;
	shf.l.wrap.b32 	%r2050, %r2044, %r2043, 23;
	mov.b64 	%rd1715, {%r2050, %r2049};
	xor.b64  	%rd1716, %rd1714, %rd1715;
	xor.b64  	%rd1717, %rd1676, %rd1652;
	and.b64  	%rd1718, %rd1700, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1652;
	add.s64 	%rd1720, %rd1628, %rd1450;
	ld.const.u64 	%rd8814, [k_sha512+304];
	add.s64 	%rd1721, %rd1720, %rd8814;
	add.s64 	%rd1722, %rd1721, %rd1719;
	add.s64 	%rd1723, %rd1722, %rd1716;
	add.s64 	%rd1724, %rd1723, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2051,%dummy}, %rd1711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2052}, %rd1711;
	}
	shf.r.wrap.b32 	%r2053, %r2052, %r2051, 28;
	shf.r.wrap.b32 	%r2054, %r2051, %r2052, 28;
	mov.b64 	%rd1725, {%r2054, %r2053};
	shf.l.wrap.b32 	%r2055, %r2051, %r2052, 30;
	shf.l.wrap.b32 	%r2056, %r2052, %r2051, 30;
	mov.b64 	%rd1726, {%r2056, %r2055};
	xor.b64  	%rd1727, %rd1726, %rd1725;
	shf.l.wrap.b32 	%r2057, %r2051, %r2052, 25;
	shf.l.wrap.b32 	%r2058, %r2052, %r2051, 25;
	mov.b64 	%rd1728, {%r2058, %r2057};
	xor.b64  	%rd1729, %rd1727, %rd1728;
	xor.b64  	%rd1730, %rd1711, %rd1663;
	xor.b64  	%rd1731, %rd1711, %rd1687;
	and.b64  	%rd1732, %rd1731, %rd1730;
	xor.b64  	%rd1733, %rd1732, %rd1711;
	add.s64 	%rd1734, %rd1723, %rd1733;
	add.s64 	%rd1735, %rd1734, %rd1729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2059,%dummy}, %rd1724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2060}, %rd1724;
	}
	shf.r.wrap.b32 	%r2061, %r2060, %r2059, 14;
	shf.r.wrap.b32 	%r2062, %r2059, %r2060, 14;
	mov.b64 	%rd1736, {%r2062, %r2061};
	shf.r.wrap.b32 	%r2063, %r2060, %r2059, 18;
	shf.r.wrap.b32 	%r2064, %r2059, %r2060, 18;
	mov.b64 	%rd1737, {%r2064, %r2063};
	xor.b64  	%rd1738, %rd1737, %rd1736;
	shf.l.wrap.b32 	%r2065, %r2059, %r2060, 23;
	shf.l.wrap.b32 	%r2066, %r2060, %r2059, 23;
	mov.b64 	%rd1739, {%r2066, %r2065};
	xor.b64  	%rd1740, %rd1738, %rd1739;
	xor.b64  	%rd1741, %rd1700, %rd1676;
	and.b64  	%rd1742, %rd1724, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1676;
	add.s64 	%rd1744, %rd1652, %rd1463;
	ld.const.u64 	%rd8813, [k_sha512+312];
	add.s64 	%rd1745, %rd1744, %rd8813;
	add.s64 	%rd1746, %rd1745, %rd1743;
	add.s64 	%rd1747, %rd1746, %rd1740;
	add.s64 	%rd1748, %rd1747, %rd1663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2067,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2068}, %rd1735;
	}
	shf.r.wrap.b32 	%r2069, %r2068, %r2067, 28;
	shf.r.wrap.b32 	%r2070, %r2067, %r2068, 28;
	mov.b64 	%rd1749, {%r2070, %r2069};
	shf.l.wrap.b32 	%r2071, %r2067, %r2068, 30;
	shf.l.wrap.b32 	%r2072, %r2068, %r2067, 30;
	mov.b64 	%rd1750, {%r2072, %r2071};
	xor.b64  	%rd1751, %rd1750, %rd1749;
	shf.l.wrap.b32 	%r2073, %r2067, %r2068, 25;
	shf.l.wrap.b32 	%r2074, %r2068, %r2067, 25;
	mov.b64 	%rd1752, {%r2074, %r2073};
	xor.b64  	%rd1753, %rd1751, %rd1752;
	xor.b64  	%rd1754, %rd1735, %rd1687;
	xor.b64  	%rd1755, %rd1735, %rd1711;
	and.b64  	%rd1756, %rd1755, %rd1754;
	xor.b64  	%rd1757, %rd1756, %rd1735;
	add.s64 	%rd1758, %rd1747, %rd1757;
	add.s64 	%rd1759, %rd1758, %rd1753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2075,%dummy}, %rd1748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2076}, %rd1748;
	}
	shf.r.wrap.b32 	%r2077, %r2076, %r2075, 14;
	shf.r.wrap.b32 	%r2078, %r2075, %r2076, 14;
	mov.b64 	%rd1760, {%r2078, %r2077};
	shf.r.wrap.b32 	%r2079, %r2076, %r2075, 18;
	shf.r.wrap.b32 	%r2080, %r2075, %r2076, 18;
	mov.b64 	%rd1761, {%r2080, %r2079};
	xor.b64  	%rd1762, %rd1761, %rd1760;
	shf.l.wrap.b32 	%r2081, %r2075, %r2076, 23;
	shf.l.wrap.b32 	%r2082, %r2076, %r2075, 23;
	mov.b64 	%rd1763, {%r2082, %r2081};
	xor.b64  	%rd1764, %rd1762, %rd1763;
	xor.b64  	%rd1765, %rd1724, %rd1700;
	and.b64  	%rd1766, %rd1748, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1700;
	add.s64 	%rd1768, %rd1676, %rd1476;
	ld.const.u64 	%rd8812, [k_sha512+320];
	add.s64 	%rd1769, %rd1768, %rd8812;
	add.s64 	%rd1770, %rd1769, %rd1767;
	add.s64 	%rd1771, %rd1770, %rd1764;
	add.s64 	%rd1772, %rd1771, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2083,%dummy}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2084}, %rd1759;
	}
	shf.r.wrap.b32 	%r2085, %r2084, %r2083, 28;
	shf.r.wrap.b32 	%r2086, %r2083, %r2084, 28;
	mov.b64 	%rd1773, {%r2086, %r2085};
	shf.l.wrap.b32 	%r2087, %r2083, %r2084, 30;
	shf.l.wrap.b32 	%r2088, %r2084, %r2083, 30;
	mov.b64 	%rd1774, {%r2088, %r2087};
	xor.b64  	%rd1775, %rd1774, %rd1773;
	shf.l.wrap.b32 	%r2089, %r2083, %r2084, 25;
	shf.l.wrap.b32 	%r2090, %r2084, %r2083, 25;
	mov.b64 	%rd1776, {%r2090, %r2089};
	xor.b64  	%rd1777, %rd1775, %rd1776;
	xor.b64  	%rd1778, %rd1759, %rd1711;
	xor.b64  	%rd1779, %rd1759, %rd1735;
	and.b64  	%rd1780, %rd1779, %rd1778;
	xor.b64  	%rd1781, %rd1780, %rd1759;
	add.s64 	%rd1782, %rd1771, %rd1781;
	add.s64 	%rd1783, %rd1782, %rd1777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2091,%dummy}, %rd1772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2092}, %rd1772;
	}
	shf.r.wrap.b32 	%r2093, %r2092, %r2091, 14;
	shf.r.wrap.b32 	%r2094, %r2091, %r2092, 14;
	mov.b64 	%rd1784, {%r2094, %r2093};
	shf.r.wrap.b32 	%r2095, %r2092, %r2091, 18;
	shf.r.wrap.b32 	%r2096, %r2091, %r2092, 18;
	mov.b64 	%rd1785, {%r2096, %r2095};
	xor.b64  	%rd1786, %rd1785, %rd1784;
	shf.l.wrap.b32 	%r2097, %r2091, %r2092, 23;
	shf.l.wrap.b32 	%r2098, %r2092, %r2091, 23;
	mov.b64 	%rd1787, {%r2098, %r2097};
	xor.b64  	%rd1788, %rd1786, %rd1787;
	xor.b64  	%rd1789, %rd1748, %rd1724;
	and.b64  	%rd1790, %rd1772, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1724;
	add.s64 	%rd1792, %rd1700, %rd1489;
	ld.const.u64 	%rd8811, [k_sha512+328];
	add.s64 	%rd1793, %rd1792, %rd8811;
	add.s64 	%rd1794, %rd1793, %rd1791;
	add.s64 	%rd1795, %rd1794, %rd1788;
	add.s64 	%rd1796, %rd1795, %rd1711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2099,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2100}, %rd1783;
	}
	shf.r.wrap.b32 	%r2101, %r2100, %r2099, 28;
	shf.r.wrap.b32 	%r2102, %r2099, %r2100, 28;
	mov.b64 	%rd1797, {%r2102, %r2101};
	shf.l.wrap.b32 	%r2103, %r2099, %r2100, 30;
	shf.l.wrap.b32 	%r2104, %r2100, %r2099, 30;
	mov.b64 	%rd1798, {%r2104, %r2103};
	xor.b64  	%rd1799, %rd1798, %rd1797;
	shf.l.wrap.b32 	%r2105, %r2099, %r2100, 25;
	shf.l.wrap.b32 	%r2106, %r2100, %r2099, 25;
	mov.b64 	%rd1800, {%r2106, %r2105};
	xor.b64  	%rd1801, %rd1799, %rd1800;
	xor.b64  	%rd1802, %rd1783, %rd1735;
	xor.b64  	%rd1803, %rd1783, %rd1759;
	and.b64  	%rd1804, %rd1803, %rd1802;
	xor.b64  	%rd1805, %rd1804, %rd1783;
	add.s64 	%rd1806, %rd1795, %rd1805;
	add.s64 	%rd1807, %rd1806, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2107,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2108}, %rd1796;
	}
	shf.r.wrap.b32 	%r2109, %r2108, %r2107, 14;
	shf.r.wrap.b32 	%r2110, %r2107, %r2108, 14;
	mov.b64 	%rd1808, {%r2110, %r2109};
	shf.r.wrap.b32 	%r2111, %r2108, %r2107, 18;
	shf.r.wrap.b32 	%r2112, %r2107, %r2108, 18;
	mov.b64 	%rd1809, {%r2112, %r2111};
	xor.b64  	%rd1810, %rd1809, %rd1808;
	shf.l.wrap.b32 	%r2113, %r2107, %r2108, 23;
	shf.l.wrap.b32 	%r2114, %r2108, %r2107, 23;
	mov.b64 	%rd1811, {%r2114, %r2113};
	xor.b64  	%rd1812, %rd1810, %rd1811;
	xor.b64  	%rd1813, %rd1772, %rd1748;
	and.b64  	%rd1814, %rd1796, %rd1813;
	xor.b64  	%rd1815, %rd1814, %rd1748;
	add.s64 	%rd1816, %rd1724, %rd1502;
	ld.const.u64 	%rd8810, [k_sha512+336];
	add.s64 	%rd1817, %rd1816, %rd8810;
	add.s64 	%rd1818, %rd1817, %rd1815;
	add.s64 	%rd1819, %rd1818, %rd1812;
	add.s64 	%rd1820, %rd1819, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2115,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2116}, %rd1807;
	}
	shf.r.wrap.b32 	%r2117, %r2116, %r2115, 28;
	shf.r.wrap.b32 	%r2118, %r2115, %r2116, 28;
	mov.b64 	%rd1821, {%r2118, %r2117};
	shf.l.wrap.b32 	%r2119, %r2115, %r2116, 30;
	shf.l.wrap.b32 	%r2120, %r2116, %r2115, 30;
	mov.b64 	%rd1822, {%r2120, %r2119};
	xor.b64  	%rd1823, %rd1822, %rd1821;
	shf.l.wrap.b32 	%r2121, %r2115, %r2116, 25;
	shf.l.wrap.b32 	%r2122, %r2116, %r2115, 25;
	mov.b64 	%rd1824, {%r2122, %r2121};
	xor.b64  	%rd1825, %rd1823, %rd1824;
	xor.b64  	%rd1826, %rd1807, %rd1759;
	xor.b64  	%rd1827, %rd1807, %rd1783;
	and.b64  	%rd1828, %rd1827, %rd1826;
	xor.b64  	%rd1829, %rd1828, %rd1807;
	add.s64 	%rd1830, %rd1819, %rd1829;
	add.s64 	%rd1831, %rd1830, %rd1825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2123,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2124}, %rd1820;
	}
	shf.r.wrap.b32 	%r2125, %r2124, %r2123, 14;
	shf.r.wrap.b32 	%r2126, %r2123, %r2124, 14;
	mov.b64 	%rd1832, {%r2126, %r2125};
	shf.r.wrap.b32 	%r2127, %r2124, %r2123, 18;
	shf.r.wrap.b32 	%r2128, %r2123, %r2124, 18;
	mov.b64 	%rd1833, {%r2128, %r2127};
	xor.b64  	%rd1834, %rd1833, %rd1832;
	shf.l.wrap.b32 	%r2129, %r2123, %r2124, 23;
	shf.l.wrap.b32 	%r2130, %r2124, %r2123, 23;
	mov.b64 	%rd1835, {%r2130, %r2129};
	xor.b64  	%rd1836, %rd1834, %rd1835;
	xor.b64  	%rd1837, %rd1796, %rd1772;
	and.b64  	%rd1838, %rd1820, %rd1837;
	xor.b64  	%rd1839, %rd1838, %rd1772;
	add.s64 	%rd1840, %rd1748, %rd1515;
	ld.const.u64 	%rd8809, [k_sha512+344];
	add.s64 	%rd1841, %rd1840, %rd8809;
	add.s64 	%rd1842, %rd1841, %rd1839;
	add.s64 	%rd1843, %rd1842, %rd1836;
	add.s64 	%rd1844, %rd1843, %rd1759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2131,%dummy}, %rd1831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2132}, %rd1831;
	}
	shf.r.wrap.b32 	%r2133, %r2132, %r2131, 28;
	shf.r.wrap.b32 	%r2134, %r2131, %r2132, 28;
	mov.b64 	%rd1845, {%r2134, %r2133};
	shf.l.wrap.b32 	%r2135, %r2131, %r2132, 30;
	shf.l.wrap.b32 	%r2136, %r2132, %r2131, 30;
	mov.b64 	%rd1846, {%r2136, %r2135};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	shf.l.wrap.b32 	%r2137, %r2131, %r2132, 25;
	shf.l.wrap.b32 	%r2138, %r2132, %r2131, 25;
	mov.b64 	%rd1848, {%r2138, %r2137};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	xor.b64  	%rd1850, %rd1831, %rd1783;
	xor.b64  	%rd1851, %rd1831, %rd1807;
	and.b64  	%rd1852, %rd1851, %rd1850;
	xor.b64  	%rd1853, %rd1852, %rd1831;
	add.s64 	%rd1854, %rd1843, %rd1853;
	add.s64 	%rd1855, %rd1854, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2139,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2140}, %rd1844;
	}
	shf.r.wrap.b32 	%r2141, %r2140, %r2139, 14;
	shf.r.wrap.b32 	%r2142, %r2139, %r2140, 14;
	mov.b64 	%rd1856, {%r2142, %r2141};
	shf.r.wrap.b32 	%r2143, %r2140, %r2139, 18;
	shf.r.wrap.b32 	%r2144, %r2139, %r2140, 18;
	mov.b64 	%rd1857, {%r2144, %r2143};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	shf.l.wrap.b32 	%r2145, %r2139, %r2140, 23;
	shf.l.wrap.b32 	%r2146, %r2140, %r2139, 23;
	mov.b64 	%rd1859, {%r2146, %r2145};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1820, %rd1796;
	and.b64  	%rd1862, %rd1844, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd1796;
	add.s64 	%rd1864, %rd1772, %rd1528;
	ld.const.u64 	%rd8808, [k_sha512+352];
	add.s64 	%rd1865, %rd1864, %rd8808;
	add.s64 	%rd1866, %rd1865, %rd1863;
	add.s64 	%rd1867, %rd1866, %rd1860;
	add.s64 	%rd1868, %rd1867, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2147,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2148}, %rd1855;
	}
	shf.r.wrap.b32 	%r2149, %r2148, %r2147, 28;
	shf.r.wrap.b32 	%r2150, %r2147, %r2148, 28;
	mov.b64 	%rd1869, {%r2150, %r2149};
	shf.l.wrap.b32 	%r2151, %r2147, %r2148, 30;
	shf.l.wrap.b32 	%r2152, %r2148, %r2147, 30;
	mov.b64 	%rd1870, {%r2152, %r2151};
	xor.b64  	%rd1871, %rd1870, %rd1869;
	shf.l.wrap.b32 	%r2153, %r2147, %r2148, 25;
	shf.l.wrap.b32 	%r2154, %r2148, %r2147, 25;
	mov.b64 	%rd1872, {%r2154, %r2153};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	xor.b64  	%rd1874, %rd1855, %rd1807;
	xor.b64  	%rd1875, %rd1855, %rd1831;
	and.b64  	%rd1876, %rd1875, %rd1874;
	xor.b64  	%rd1877, %rd1876, %rd1855;
	add.s64 	%rd1878, %rd1867, %rd1877;
	add.s64 	%rd1879, %rd1878, %rd1873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2155,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2156}, %rd1868;
	}
	shf.r.wrap.b32 	%r2157, %r2156, %r2155, 14;
	shf.r.wrap.b32 	%r2158, %r2155, %r2156, 14;
	mov.b64 	%rd1880, {%r2158, %r2157};
	shf.r.wrap.b32 	%r2159, %r2156, %r2155, 18;
	shf.r.wrap.b32 	%r2160, %r2155, %r2156, 18;
	mov.b64 	%rd1881, {%r2160, %r2159};
	xor.b64  	%rd1882, %rd1881, %rd1880;
	shf.l.wrap.b32 	%r2161, %r2155, %r2156, 23;
	shf.l.wrap.b32 	%r2162, %r2156, %r2155, 23;
	mov.b64 	%rd1883, {%r2162, %r2161};
	xor.b64  	%rd1884, %rd1882, %rd1883;
	xor.b64  	%rd1885, %rd1844, %rd1820;
	and.b64  	%rd1886, %rd1868, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1820;
	add.s64 	%rd1888, %rd1796, %rd1541;
	ld.const.u64 	%rd8807, [k_sha512+360];
	add.s64 	%rd1889, %rd1888, %rd8807;
	add.s64 	%rd1890, %rd1889, %rd1887;
	add.s64 	%rd1891, %rd1890, %rd1884;
	add.s64 	%rd1892, %rd1891, %rd1807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2163,%dummy}, %rd1879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2164}, %rd1879;
	}
	shf.r.wrap.b32 	%r2165, %r2164, %r2163, 28;
	shf.r.wrap.b32 	%r2166, %r2163, %r2164, 28;
	mov.b64 	%rd1893, {%r2166, %r2165};
	shf.l.wrap.b32 	%r2167, %r2163, %r2164, 30;
	shf.l.wrap.b32 	%r2168, %r2164, %r2163, 30;
	mov.b64 	%rd1894, {%r2168, %r2167};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	shf.l.wrap.b32 	%r2169, %r2163, %r2164, 25;
	shf.l.wrap.b32 	%r2170, %r2164, %r2163, 25;
	mov.b64 	%rd1896, {%r2170, %r2169};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd1879, %rd1831;
	xor.b64  	%rd1899, %rd1879, %rd1855;
	and.b64  	%rd1900, %rd1899, %rd1898;
	xor.b64  	%rd1901, %rd1900, %rd1879;
	add.s64 	%rd1902, %rd1891, %rd1901;
	add.s64 	%rd1903, %rd1902, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2171,%dummy}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2172}, %rd1892;
	}
	shf.r.wrap.b32 	%r2173, %r2172, %r2171, 14;
	shf.r.wrap.b32 	%r2174, %r2171, %r2172, 14;
	mov.b64 	%rd1904, {%r2174, %r2173};
	shf.r.wrap.b32 	%r2175, %r2172, %r2171, 18;
	shf.r.wrap.b32 	%r2176, %r2171, %r2172, 18;
	mov.b64 	%rd1905, {%r2176, %r2175};
	xor.b64  	%rd1906, %rd1905, %rd1904;
	shf.l.wrap.b32 	%r2177, %r2171, %r2172, 23;
	shf.l.wrap.b32 	%r2178, %r2172, %r2171, 23;
	mov.b64 	%rd1907, {%r2178, %r2177};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	xor.b64  	%rd1909, %rd1868, %rd1844;
	and.b64  	%rd1910, %rd1892, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1844;
	add.s64 	%rd1912, %rd1820, %rd1554;
	ld.const.u64 	%rd8806, [k_sha512+368];
	add.s64 	%rd1913, %rd1912, %rd8806;
	add.s64 	%rd1914, %rd1913, %rd1911;
	add.s64 	%rd1915, %rd1914, %rd1908;
	add.s64 	%rd1916, %rd1915, %rd1831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2179,%dummy}, %rd1903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2180}, %rd1903;
	}
	shf.r.wrap.b32 	%r2181, %r2180, %r2179, 28;
	shf.r.wrap.b32 	%r2182, %r2179, %r2180, 28;
	mov.b64 	%rd1917, {%r2182, %r2181};
	shf.l.wrap.b32 	%r2183, %r2179, %r2180, 30;
	shf.l.wrap.b32 	%r2184, %r2180, %r2179, 30;
	mov.b64 	%rd1918, {%r2184, %r2183};
	xor.b64  	%rd1919, %rd1918, %rd1917;
	shf.l.wrap.b32 	%r2185, %r2179, %r2180, 25;
	shf.l.wrap.b32 	%r2186, %r2180, %r2179, 25;
	mov.b64 	%rd1920, {%r2186, %r2185};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	xor.b64  	%rd1922, %rd1903, %rd1855;
	xor.b64  	%rd1923, %rd1903, %rd1879;
	and.b64  	%rd1924, %rd1923, %rd1922;
	xor.b64  	%rd1925, %rd1924, %rd1903;
	add.s64 	%rd1926, %rd1915, %rd1925;
	add.s64 	%rd1927, %rd1926, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2187,%dummy}, %rd1916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2188}, %rd1916;
	}
	shf.r.wrap.b32 	%r2189, %r2188, %r2187, 14;
	shf.r.wrap.b32 	%r2190, %r2187, %r2188, 14;
	mov.b64 	%rd1928, {%r2190, %r2189};
	shf.r.wrap.b32 	%r2191, %r2188, %r2187, 18;
	shf.r.wrap.b32 	%r2192, %r2187, %r2188, 18;
	mov.b64 	%rd1929, {%r2192, %r2191};
	xor.b64  	%rd1930, %rd1929, %rd1928;
	shf.l.wrap.b32 	%r2193, %r2187, %r2188, 23;
	shf.l.wrap.b32 	%r2194, %r2188, %r2187, 23;
	mov.b64 	%rd1931, {%r2194, %r2193};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	xor.b64  	%rd1933, %rd1892, %rd1868;
	and.b64  	%rd1934, %rd1916, %rd1933;
	xor.b64  	%rd1935, %rd1934, %rd1868;
	add.s64 	%rd1936, %rd1844, %rd1567;
	ld.const.u64 	%rd8805, [k_sha512+376];
	add.s64 	%rd1937, %rd1936, %rd8805;
	add.s64 	%rd1938, %rd1937, %rd1935;
	add.s64 	%rd1939, %rd1938, %rd1932;
	add.s64 	%rd1940, %rd1939, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2195,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2196}, %rd1927;
	}
	shf.r.wrap.b32 	%r2197, %r2196, %r2195, 28;
	shf.r.wrap.b32 	%r2198, %r2195, %r2196, 28;
	mov.b64 	%rd1941, {%r2198, %r2197};
	shf.l.wrap.b32 	%r2199, %r2195, %r2196, 30;
	shf.l.wrap.b32 	%r2200, %r2196, %r2195, 30;
	mov.b64 	%rd1942, {%r2200, %r2199};
	xor.b64  	%rd1943, %rd1942, %rd1941;
	shf.l.wrap.b32 	%r2201, %r2195, %r2196, 25;
	shf.l.wrap.b32 	%r2202, %r2196, %r2195, 25;
	mov.b64 	%rd1944, {%r2202, %r2201};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	xor.b64  	%rd1946, %rd1927, %rd1879;
	xor.b64  	%rd1947, %rd1927, %rd1903;
	and.b64  	%rd1948, %rd1947, %rd1946;
	xor.b64  	%rd1949, %rd1948, %rd1927;
	add.s64 	%rd1950, %rd1939, %rd1949;
	add.s64 	%rd1951, %rd1950, %rd1945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2203,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2204}, %rd1554;
	}
	shf.r.wrap.b32 	%r2205, %r2204, %r2203, 19;
	shf.r.wrap.b32 	%r2206, %r2203, %r2204, 19;
	mov.b64 	%rd1952, {%r2206, %r2205};
	shf.l.wrap.b32 	%r2207, %r2203, %r2204, 3;
	shf.l.wrap.b32 	%r2208, %r2204, %r2203, 3;
	mov.b64 	%rd1953, {%r2208, %r2207};
	shr.u64 	%rd1954, %rd1554, 6;
	xor.b64  	%rd1955, %rd1952, %rd1954;
	xor.b64  	%rd1956, %rd1955, %rd1953;
	shf.r.wrap.b32 	%r2209, %r1818, %r1817, 1;
	shf.r.wrap.b32 	%r2210, %r1817, %r1818, 1;
	mov.b64 	%rd1957, {%r2210, %r2209};
	shf.r.wrap.b32 	%r2211, %r1818, %r1817, 8;
	shf.r.wrap.b32 	%r2212, %r1817, %r1818, 8;
	mov.b64 	%rd1958, {%r2212, %r2211};
	shr.u64 	%rd1959, %rd1385, 7;
	xor.b64  	%rd1960, %rd1957, %rd1959;
	xor.b64  	%rd1961, %rd1960, %rd1958;
	add.s64 	%rd1962, %rd1489, %rd1372;
	add.s64 	%rd1963, %rd1962, %rd1956;
	add.s64 	%rd1964, %rd1963, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd1567;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 19;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 19;
	mov.b64 	%rd1965, {%r2216, %r2215};
	shf.l.wrap.b32 	%r2217, %r2213, %r2214, 3;
	shf.l.wrap.b32 	%r2218, %r2214, %r2213, 3;
	mov.b64 	%rd1966, {%r2218, %r2217};
	shr.u64 	%rd1967, %rd1567, 6;
	xor.b64  	%rd1968, %rd1965, %rd1967;
	xor.b64  	%rd1969, %rd1968, %rd1966;
	shf.r.wrap.b32 	%r2219, %r1828, %r1827, 1;
	shf.r.wrap.b32 	%r2220, %r1827, %r1828, 1;
	mov.b64 	%rd1970, {%r2220, %r2219};
	shf.r.wrap.b32 	%r2221, %r1828, %r1827, 8;
	shf.r.wrap.b32 	%r2222, %r1827, %r1828, 8;
	mov.b64 	%rd1971, {%r2222, %r2221};
	shr.u64 	%rd1972, %rd1398, 7;
	xor.b64  	%rd1973, %rd1970, %rd1972;
	xor.b64  	%rd1974, %rd1973, %rd1971;
	add.s64 	%rd1975, %rd1502, %rd1385;
	add.s64 	%rd1976, %rd1975, %rd1969;
	add.s64 	%rd1977, %rd1976, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2223,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2224}, %rd1964;
	}
	shf.r.wrap.b32 	%r2225, %r2224, %r2223, 19;
	shf.r.wrap.b32 	%r2226, %r2223, %r2224, 19;
	mov.b64 	%rd1978, {%r2226, %r2225};
	shf.l.wrap.b32 	%r2227, %r2223, %r2224, 3;
	shf.l.wrap.b32 	%r2228, %r2224, %r2223, 3;
	mov.b64 	%rd1979, {%r2228, %r2227};
	shr.u64 	%rd1980, %rd1964, 6;
	xor.b64  	%rd1981, %rd1978, %rd1980;
	xor.b64  	%rd1982, %rd1981, %rd1979;
	shf.r.wrap.b32 	%r2229, %r1838, %r1837, 1;
	shf.r.wrap.b32 	%r2230, %r1837, %r1838, 1;
	mov.b64 	%rd1983, {%r2230, %r2229};
	shf.r.wrap.b32 	%r2231, %r1838, %r1837, 8;
	shf.r.wrap.b32 	%r2232, %r1837, %r1838, 8;
	mov.b64 	%rd1984, {%r2232, %r2231};
	shr.u64 	%rd1985, %rd1411, 7;
	xor.b64  	%rd1986, %rd1983, %rd1985;
	xor.b64  	%rd1987, %rd1986, %rd1984;
	add.s64 	%rd1988, %rd1515, %rd1398;
	add.s64 	%rd1989, %rd1988, %rd1982;
	add.s64 	%rd1990, %rd1989, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2233,%dummy}, %rd1977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2234}, %rd1977;
	}
	shf.r.wrap.b32 	%r2235, %r2234, %r2233, 19;
	shf.r.wrap.b32 	%r2236, %r2233, %r2234, 19;
	mov.b64 	%rd1991, {%r2236, %r2235};
	shf.l.wrap.b32 	%r2237, %r2233, %r2234, 3;
	shf.l.wrap.b32 	%r2238, %r2234, %r2233, 3;
	mov.b64 	%rd1992, {%r2238, %r2237};
	shr.u64 	%rd1993, %rd1977, 6;
	xor.b64  	%rd1994, %rd1991, %rd1993;
	xor.b64  	%rd1995, %rd1994, %rd1992;
	shf.r.wrap.b32 	%r2239, %r1848, %r1847, 1;
	shf.r.wrap.b32 	%r2240, %r1847, %r1848, 1;
	mov.b64 	%rd1996, {%r2240, %r2239};
	shf.r.wrap.b32 	%r2241, %r1848, %r1847, 8;
	shf.r.wrap.b32 	%r2242, %r1847, %r1848, 8;
	mov.b64 	%rd1997, {%r2242, %r2241};
	shr.u64 	%rd1998, %rd1424, 7;
	xor.b64  	%rd1999, %rd1996, %rd1998;
	xor.b64  	%rd2000, %rd1999, %rd1997;
	add.s64 	%rd2001, %rd1528, %rd1411;
	add.s64 	%rd2002, %rd2001, %rd1995;
	add.s64 	%rd2003, %rd2002, %rd2000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2243,%dummy}, %rd1990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2244}, %rd1990;
	}
	shf.r.wrap.b32 	%r2245, %r2244, %r2243, 19;
	shf.r.wrap.b32 	%r2246, %r2243, %r2244, 19;
	mov.b64 	%rd2004, {%r2246, %r2245};
	shf.l.wrap.b32 	%r2247, %r2243, %r2244, 3;
	shf.l.wrap.b32 	%r2248, %r2244, %r2243, 3;
	mov.b64 	%rd2005, {%r2248, %r2247};
	shr.u64 	%rd2006, %rd1990, 6;
	xor.b64  	%rd2007, %rd2004, %rd2006;
	xor.b64  	%rd2008, %rd2007, %rd2005;
	shf.r.wrap.b32 	%r2249, %r1858, %r1857, 1;
	shf.r.wrap.b32 	%r2250, %r1857, %r1858, 1;
	mov.b64 	%rd2009, {%r2250, %r2249};
	shf.r.wrap.b32 	%r2251, %r1858, %r1857, 8;
	shf.r.wrap.b32 	%r2252, %r1857, %r1858, 8;
	mov.b64 	%rd2010, {%r2252, %r2251};
	shr.u64 	%rd2011, %rd1437, 7;
	xor.b64  	%rd2012, %rd2009, %rd2011;
	xor.b64  	%rd2013, %rd2012, %rd2010;
	add.s64 	%rd2014, %rd1541, %rd1424;
	add.s64 	%rd2015, %rd2014, %rd2008;
	add.s64 	%rd2016, %rd2015, %rd2013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd2003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd2003;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 19;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 19;
	mov.b64 	%rd2017, {%r2256, %r2255};
	shf.l.wrap.b32 	%r2257, %r2253, %r2254, 3;
	shf.l.wrap.b32 	%r2258, %r2254, %r2253, 3;
	mov.b64 	%rd2018, {%r2258, %r2257};
	shr.u64 	%rd2019, %rd2003, 6;
	xor.b64  	%rd2020, %rd2017, %rd2019;
	xor.b64  	%rd2021, %rd2020, %rd2018;
	shf.r.wrap.b32 	%r2259, %r1868, %r1867, 1;
	shf.r.wrap.b32 	%r2260, %r1867, %r1868, 1;
	mov.b64 	%rd2022, {%r2260, %r2259};
	shf.r.wrap.b32 	%r2261, %r1868, %r1867, 8;
	shf.r.wrap.b32 	%r2262, %r1867, %r1868, 8;
	mov.b64 	%rd2023, {%r2262, %r2261};
	shr.u64 	%rd2024, %rd1450, 7;
	xor.b64  	%rd2025, %rd2022, %rd2024;
	xor.b64  	%rd2026, %rd2025, %rd2023;
	add.s64 	%rd2027, %rd1554, %rd1437;
	add.s64 	%rd2028, %rd2027, %rd2021;
	add.s64 	%rd2029, %rd2028, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2263,%dummy}, %rd2016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2264}, %rd2016;
	}
	shf.r.wrap.b32 	%r2265, %r2264, %r2263, 19;
	shf.r.wrap.b32 	%r2266, %r2263, %r2264, 19;
	mov.b64 	%rd2030, {%r2266, %r2265};
	shf.l.wrap.b32 	%r2267, %r2263, %r2264, 3;
	shf.l.wrap.b32 	%r2268, %r2264, %r2263, 3;
	mov.b64 	%rd2031, {%r2268, %r2267};
	shr.u64 	%rd2032, %rd2016, 6;
	xor.b64  	%rd2033, %rd2030, %rd2032;
	xor.b64  	%rd2034, %rd2033, %rd2031;
	shf.r.wrap.b32 	%r2269, %r1878, %r1877, 1;
	shf.r.wrap.b32 	%r2270, %r1877, %r1878, 1;
	mov.b64 	%rd2035, {%r2270, %r2269};
	shf.r.wrap.b32 	%r2271, %r1878, %r1877, 8;
	shf.r.wrap.b32 	%r2272, %r1877, %r1878, 8;
	mov.b64 	%rd2036, {%r2272, %r2271};
	shr.u64 	%rd2037, %rd1463, 7;
	xor.b64  	%rd2038, %rd2035, %rd2037;
	xor.b64  	%rd2039, %rd2038, %rd2036;
	add.s64 	%rd2040, %rd1567, %rd1450;
	add.s64 	%rd2041, %rd2040, %rd2034;
	add.s64 	%rd2042, %rd2041, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2273,%dummy}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2274}, %rd2029;
	}
	shf.r.wrap.b32 	%r2275, %r2274, %r2273, 19;
	shf.r.wrap.b32 	%r2276, %r2273, %r2274, 19;
	mov.b64 	%rd2043, {%r2276, %r2275};
	shf.l.wrap.b32 	%r2277, %r2273, %r2274, 3;
	shf.l.wrap.b32 	%r2278, %r2274, %r2273, 3;
	mov.b64 	%rd2044, {%r2278, %r2277};
	shr.u64 	%rd2045, %rd2029, 6;
	xor.b64  	%rd2046, %rd2043, %rd2045;
	xor.b64  	%rd2047, %rd2046, %rd2044;
	shf.r.wrap.b32 	%r2279, %r1888, %r1887, 1;
	shf.r.wrap.b32 	%r2280, %r1887, %r1888, 1;
	mov.b64 	%rd2048, {%r2280, %r2279};
	shf.r.wrap.b32 	%r2281, %r1888, %r1887, 8;
	shf.r.wrap.b32 	%r2282, %r1887, %r1888, 8;
	mov.b64 	%rd2049, {%r2282, %r2281};
	shr.u64 	%rd2050, %rd1476, 7;
	xor.b64  	%rd2051, %rd2048, %rd2050;
	xor.b64  	%rd2052, %rd2051, %rd2049;
	add.s64 	%rd2053, %rd1964, %rd1463;
	add.s64 	%rd2054, %rd2053, %rd2047;
	add.s64 	%rd2055, %rd2054, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2283,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2284}, %rd2042;
	}
	shf.r.wrap.b32 	%r2285, %r2284, %r2283, 19;
	shf.r.wrap.b32 	%r2286, %r2283, %r2284, 19;
	mov.b64 	%rd2056, {%r2286, %r2285};
	shf.l.wrap.b32 	%r2287, %r2283, %r2284, 3;
	shf.l.wrap.b32 	%r2288, %r2284, %r2283, 3;
	mov.b64 	%rd2057, {%r2288, %r2287};
	shr.u64 	%rd2058, %rd2042, 6;
	xor.b64  	%rd2059, %rd2056, %rd2058;
	xor.b64  	%rd2060, %rd2059, %rd2057;
	shf.r.wrap.b32 	%r2289, %r1898, %r1897, 1;
	shf.r.wrap.b32 	%r2290, %r1897, %r1898, 1;
	mov.b64 	%rd2061, {%r2290, %r2289};
	shf.r.wrap.b32 	%r2291, %r1898, %r1897, 8;
	shf.r.wrap.b32 	%r2292, %r1897, %r1898, 8;
	mov.b64 	%rd2062, {%r2292, %r2291};
	shr.u64 	%rd2063, %rd1489, 7;
	xor.b64  	%rd2064, %rd2061, %rd2063;
	xor.b64  	%rd2065, %rd2064, %rd2062;
	add.s64 	%rd2066, %rd1977, %rd1476;
	add.s64 	%rd2067, %rd2066, %rd2060;
	add.s64 	%rd2068, %rd2067, %rd2065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd2055;
	}
	shf.r.wrap.b32 	%r2295, %r2294, %r2293, 19;
	shf.r.wrap.b32 	%r2296, %r2293, %r2294, 19;
	mov.b64 	%rd2069, {%r2296, %r2295};
	shf.l.wrap.b32 	%r2297, %r2293, %r2294, 3;
	shf.l.wrap.b32 	%r2298, %r2294, %r2293, 3;
	mov.b64 	%rd2070, {%r2298, %r2297};
	shr.u64 	%rd2071, %rd2055, 6;
	xor.b64  	%rd2072, %rd2069, %rd2071;
	xor.b64  	%rd2073, %rd2072, %rd2070;
	shf.r.wrap.b32 	%r2299, %r1908, %r1907, 1;
	shf.r.wrap.b32 	%r2300, %r1907, %r1908, 1;
	mov.b64 	%rd2074, {%r2300, %r2299};
	shf.r.wrap.b32 	%r2301, %r1908, %r1907, 8;
	shf.r.wrap.b32 	%r2302, %r1907, %r1908, 8;
	mov.b64 	%rd2075, {%r2302, %r2301};
	shr.u64 	%rd2076, %rd1502, 7;
	xor.b64  	%rd2077, %rd2074, %rd2076;
	xor.b64  	%rd2078, %rd2077, %rd2075;
	add.s64 	%rd2079, %rd1990, %rd1489;
	add.s64 	%rd2080, %rd2079, %rd2073;
	add.s64 	%rd2081, %rd2080, %rd2078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2303,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2304}, %rd2068;
	}
	shf.r.wrap.b32 	%r2305, %r2304, %r2303, 19;
	shf.r.wrap.b32 	%r2306, %r2303, %r2304, 19;
	mov.b64 	%rd2082, {%r2306, %r2305};
	shf.l.wrap.b32 	%r2307, %r2303, %r2304, 3;
	shf.l.wrap.b32 	%r2308, %r2304, %r2303, 3;
	mov.b64 	%rd2083, {%r2308, %r2307};
	shr.u64 	%rd2084, %rd2068, 6;
	xor.b64  	%rd2085, %rd2082, %rd2084;
	xor.b64  	%rd2086, %rd2085, %rd2083;
	shf.r.wrap.b32 	%r2309, %r1918, %r1917, 1;
	shf.r.wrap.b32 	%r2310, %r1917, %r1918, 1;
	mov.b64 	%rd2087, {%r2310, %r2309};
	shf.r.wrap.b32 	%r2311, %r1918, %r1917, 8;
	shf.r.wrap.b32 	%r2312, %r1917, %r1918, 8;
	mov.b64 	%rd2088, {%r2312, %r2311};
	shr.u64 	%rd2089, %rd1515, 7;
	xor.b64  	%rd2090, %rd2087, %rd2089;
	xor.b64  	%rd2091, %rd2090, %rd2088;
	add.s64 	%rd2092, %rd2003, %rd1502;
	add.s64 	%rd2093, %rd2092, %rd2086;
	add.s64 	%rd2094, %rd2093, %rd2091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2313,%dummy}, %rd2081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2314}, %rd2081;
	}
	shf.r.wrap.b32 	%r2315, %r2314, %r2313, 19;
	shf.r.wrap.b32 	%r2316, %r2313, %r2314, 19;
	mov.b64 	%rd2095, {%r2316, %r2315};
	shf.l.wrap.b32 	%r2317, %r2313, %r2314, 3;
	shf.l.wrap.b32 	%r2318, %r2314, %r2313, 3;
	mov.b64 	%rd2096, {%r2318, %r2317};
	shr.u64 	%rd2097, %rd2081, 6;
	xor.b64  	%rd2098, %rd2095, %rd2097;
	xor.b64  	%rd2099, %rd2098, %rd2096;
	shf.r.wrap.b32 	%r2319, %r1928, %r1927, 1;
	shf.r.wrap.b32 	%r2320, %r1927, %r1928, 1;
	mov.b64 	%rd2100, {%r2320, %r2319};
	shf.r.wrap.b32 	%r2321, %r1928, %r1927, 8;
	shf.r.wrap.b32 	%r2322, %r1927, %r1928, 8;
	mov.b64 	%rd2101, {%r2322, %r2321};
	shr.u64 	%rd2102, %rd1528, 7;
	xor.b64  	%rd2103, %rd2100, %rd2102;
	xor.b64  	%rd2104, %rd2103, %rd2101;
	add.s64 	%rd2105, %rd2016, %rd1515;
	add.s64 	%rd2106, %rd2105, %rd2099;
	add.s64 	%rd2107, %rd2106, %rd2104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2323,%dummy}, %rd2094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2324}, %rd2094;
	}
	shf.r.wrap.b32 	%r2325, %r2324, %r2323, 19;
	shf.r.wrap.b32 	%r2326, %r2323, %r2324, 19;
	mov.b64 	%rd2108, {%r2326, %r2325};
	shf.l.wrap.b32 	%r2327, %r2323, %r2324, 3;
	shf.l.wrap.b32 	%r2328, %r2324, %r2323, 3;
	mov.b64 	%rd2109, {%r2328, %r2327};
	shr.u64 	%rd2110, %rd2094, 6;
	xor.b64  	%rd2111, %rd2108, %rd2110;
	xor.b64  	%rd2112, %rd2111, %rd2109;
	shf.r.wrap.b32 	%r2329, %r1938, %r1937, 1;
	shf.r.wrap.b32 	%r2330, %r1937, %r1938, 1;
	mov.b64 	%rd2113, {%r2330, %r2329};
	shf.r.wrap.b32 	%r2331, %r1938, %r1937, 8;
	shf.r.wrap.b32 	%r2332, %r1937, %r1938, 8;
	mov.b64 	%rd2114, {%r2332, %r2331};
	shr.u64 	%rd2115, %rd1541, 7;
	xor.b64  	%rd2116, %rd2113, %rd2115;
	xor.b64  	%rd2117, %rd2116, %rd2114;
	add.s64 	%rd2118, %rd2029, %rd1528;
	add.s64 	%rd2119, %rd2118, %rd2112;
	add.s64 	%rd2120, %rd2119, %rd2117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd2107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2334}, %rd2107;
	}
	shf.r.wrap.b32 	%r2335, %r2334, %r2333, 19;
	shf.r.wrap.b32 	%r2336, %r2333, %r2334, 19;
	mov.b64 	%rd2121, {%r2336, %r2335};
	shf.l.wrap.b32 	%r2337, %r2333, %r2334, 3;
	shf.l.wrap.b32 	%r2338, %r2334, %r2333, 3;
	mov.b64 	%rd2122, {%r2338, %r2337};
	shr.u64 	%rd2123, %rd2107, 6;
	xor.b64  	%rd2124, %rd2121, %rd2123;
	xor.b64  	%rd2125, %rd2124, %rd2122;
	shf.r.wrap.b32 	%r2339, %r2204, %r2203, 1;
	shf.r.wrap.b32 	%r2340, %r2203, %r2204, 1;
	mov.b64 	%rd2126, {%r2340, %r2339};
	shf.r.wrap.b32 	%r2341, %r2204, %r2203, 8;
	shf.r.wrap.b32 	%r2342, %r2203, %r2204, 8;
	mov.b64 	%rd2127, {%r2342, %r2341};
	shr.u64 	%rd2128, %rd1554, 7;
	xor.b64  	%rd2129, %rd2126, %rd2128;
	xor.b64  	%rd2130, %rd2129, %rd2127;
	add.s64 	%rd2131, %rd2042, %rd1541;
	add.s64 	%rd2132, %rd2131, %rd2125;
	add.s64 	%rd2133, %rd2132, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2343,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2344}, %rd2120;
	}
	shf.r.wrap.b32 	%r2345, %r2344, %r2343, 19;
	shf.r.wrap.b32 	%r2346, %r2343, %r2344, 19;
	mov.b64 	%rd2134, {%r2346, %r2345};
	shf.l.wrap.b32 	%r2347, %r2343, %r2344, 3;
	shf.l.wrap.b32 	%r2348, %r2344, %r2343, 3;
	mov.b64 	%rd2135, {%r2348, %r2347};
	shr.u64 	%rd2136, %rd2120, 6;
	xor.b64  	%rd2137, %rd2134, %rd2136;
	xor.b64  	%rd2138, %rd2137, %rd2135;
	shf.r.wrap.b32 	%r2349, %r2214, %r2213, 1;
	shf.r.wrap.b32 	%r2350, %r2213, %r2214, 1;
	mov.b64 	%rd2139, {%r2350, %r2349};
	shf.r.wrap.b32 	%r2351, %r2214, %r2213, 8;
	shf.r.wrap.b32 	%r2352, %r2213, %r2214, 8;
	mov.b64 	%rd2140, {%r2352, %r2351};
	shr.u64 	%rd2141, %rd1567, 7;
	xor.b64  	%rd2142, %rd2139, %rd2141;
	xor.b64  	%rd2143, %rd2142, %rd2140;
	add.s64 	%rd2144, %rd2055, %rd1554;
	add.s64 	%rd2145, %rd2144, %rd2138;
	add.s64 	%rd2146, %rd2145, %rd2143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2353,%dummy}, %rd2133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2354}, %rd2133;
	}
	shf.r.wrap.b32 	%r2355, %r2354, %r2353, 19;
	shf.r.wrap.b32 	%r2356, %r2353, %r2354, 19;
	mov.b64 	%rd2147, {%r2356, %r2355};
	shf.l.wrap.b32 	%r2357, %r2353, %r2354, 3;
	shf.l.wrap.b32 	%r2358, %r2354, %r2353, 3;
	mov.b64 	%rd2148, {%r2358, %r2357};
	shr.u64 	%rd2149, %rd2133, 6;
	xor.b64  	%rd2150, %rd2147, %rd2149;
	xor.b64  	%rd2151, %rd2150, %rd2148;
	shf.r.wrap.b32 	%r2359, %r2224, %r2223, 1;
	shf.r.wrap.b32 	%r2360, %r2223, %r2224, 1;
	mov.b64 	%rd2152, {%r2360, %r2359};
	shf.r.wrap.b32 	%r2361, %r2224, %r2223, 8;
	shf.r.wrap.b32 	%r2362, %r2223, %r2224, 8;
	mov.b64 	%rd2153, {%r2362, %r2361};
	shr.u64 	%rd2154, %rd1964, 7;
	xor.b64  	%rd2155, %rd2152, %rd2154;
	xor.b64  	%rd2156, %rd2155, %rd2153;
	add.s64 	%rd2157, %rd2068, %rd1567;
	add.s64 	%rd2158, %rd2157, %rd2151;
	add.s64 	%rd2159, %rd2158, %rd2156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2363,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2364}, %rd1940;
	}
	shf.r.wrap.b32 	%r2365, %r2364, %r2363, 14;
	shf.r.wrap.b32 	%r2366, %r2363, %r2364, 14;
	mov.b64 	%rd2160, {%r2366, %r2365};
	shf.r.wrap.b32 	%r2367, %r2364, %r2363, 18;
	shf.r.wrap.b32 	%r2368, %r2363, %r2364, 18;
	mov.b64 	%rd2161, {%r2368, %r2367};
	xor.b64  	%rd2162, %rd2161, %rd2160;
	shf.l.wrap.b32 	%r2369, %r2363, %r2364, 23;
	shf.l.wrap.b32 	%r2370, %r2364, %r2363, 23;
	mov.b64 	%rd2163, {%r2370, %r2369};
	xor.b64  	%rd2164, %rd2162, %rd2163;
	xor.b64  	%rd2165, %rd1916, %rd1892;
	and.b64  	%rd2166, %rd2165, %rd1940;
	xor.b64  	%rd2167, %rd2166, %rd1892;
	add.s64 	%rd2168, %rd2167, %rd1868;
	add.s64 	%rd2169, %rd2168, %rd1964;
	ld.const.u64 	%rd8804, [k_sha512+384];
	add.s64 	%rd2170, %rd2169, %rd8804;
	add.s64 	%rd2171, %rd2170, %rd2164;
	add.s64 	%rd2172, %rd2171, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2371,%dummy}, %rd1951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2372}, %rd1951;
	}
	shf.r.wrap.b32 	%r2373, %r2372, %r2371, 28;
	shf.r.wrap.b32 	%r2374, %r2371, %r2372, 28;
	mov.b64 	%rd2173, {%r2374, %r2373};
	shf.l.wrap.b32 	%r2375, %r2371, %r2372, 30;
	shf.l.wrap.b32 	%r2376, %r2372, %r2371, 30;
	mov.b64 	%rd2174, {%r2376, %r2375};
	xor.b64  	%rd2175, %rd2174, %rd2173;
	shf.l.wrap.b32 	%r2377, %r2371, %r2372, 25;
	shf.l.wrap.b32 	%r2378, %r2372, %r2371, 25;
	mov.b64 	%rd2176, {%r2378, %r2377};
	xor.b64  	%rd2177, %rd2175, %rd2176;
	xor.b64  	%rd2178, %rd1951, %rd1903;
	xor.b64  	%rd2179, %rd1951, %rd1927;
	and.b64  	%rd2180, %rd2179, %rd2178;
	xor.b64  	%rd2181, %rd2180, %rd1951;
	add.s64 	%rd2182, %rd2171, %rd2181;
	add.s64 	%rd2183, %rd2182, %rd2177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2379,%dummy}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2380}, %rd2172;
	}
	shf.r.wrap.b32 	%r2381, %r2380, %r2379, 14;
	shf.r.wrap.b32 	%r2382, %r2379, %r2380, 14;
	mov.b64 	%rd2184, {%r2382, %r2381};
	shf.r.wrap.b32 	%r2383, %r2380, %r2379, 18;
	shf.r.wrap.b32 	%r2384, %r2379, %r2380, 18;
	mov.b64 	%rd2185, {%r2384, %r2383};
	xor.b64  	%rd2186, %rd2185, %rd2184;
	shf.l.wrap.b32 	%r2385, %r2379, %r2380, 23;
	shf.l.wrap.b32 	%r2386, %r2380, %r2379, 23;
	mov.b64 	%rd2187, {%r2386, %r2385};
	xor.b64  	%rd2188, %rd2186, %rd2187;
	xor.b64  	%rd2189, %rd1940, %rd1916;
	and.b64  	%rd2190, %rd2172, %rd2189;
	xor.b64  	%rd2191, %rd2190, %rd1916;
	add.s64 	%rd2192, %rd1977, %rd1892;
	ld.const.u64 	%rd8803, [k_sha512+392];
	add.s64 	%rd2193, %rd2192, %rd8803;
	add.s64 	%rd2194, %rd2193, %rd2191;
	add.s64 	%rd2195, %rd2194, %rd2188;
	add.s64 	%rd2196, %rd2195, %rd1903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd2183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2388}, %rd2183;
	}
	shf.r.wrap.b32 	%r2389, %r2388, %r2387, 28;
	shf.r.wrap.b32 	%r2390, %r2387, %r2388, 28;
	mov.b64 	%rd2197, {%r2390, %r2389};
	shf.l.wrap.b32 	%r2391, %r2387, %r2388, 30;
	shf.l.wrap.b32 	%r2392, %r2388, %r2387, 30;
	mov.b64 	%rd2198, {%r2392, %r2391};
	xor.b64  	%rd2199, %rd2198, %rd2197;
	shf.l.wrap.b32 	%r2393, %r2387, %r2388, 25;
	shf.l.wrap.b32 	%r2394, %r2388, %r2387, 25;
	mov.b64 	%rd2200, {%r2394, %r2393};
	xor.b64  	%rd2201, %rd2199, %rd2200;
	xor.b64  	%rd2202, %rd2183, %rd1927;
	xor.b64  	%rd2203, %rd2183, %rd1951;
	and.b64  	%rd2204, %rd2203, %rd2202;
	xor.b64  	%rd2205, %rd2204, %rd2183;
	add.s64 	%rd2206, %rd2195, %rd2205;
	add.s64 	%rd2207, %rd2206, %rd2201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2395,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2396}, %rd2196;
	}
	shf.r.wrap.b32 	%r2397, %r2396, %r2395, 14;
	shf.r.wrap.b32 	%r2398, %r2395, %r2396, 14;
	mov.b64 	%rd2208, {%r2398, %r2397};
	shf.r.wrap.b32 	%r2399, %r2396, %r2395, 18;
	shf.r.wrap.b32 	%r2400, %r2395, %r2396, 18;
	mov.b64 	%rd2209, {%r2400, %r2399};
	xor.b64  	%rd2210, %rd2209, %rd2208;
	shf.l.wrap.b32 	%r2401, %r2395, %r2396, 23;
	shf.l.wrap.b32 	%r2402, %r2396, %r2395, 23;
	mov.b64 	%rd2211, {%r2402, %r2401};
	xor.b64  	%rd2212, %rd2210, %rd2211;
	xor.b64  	%rd2213, %rd2172, %rd1940;
	and.b64  	%rd2214, %rd2196, %rd2213;
	xor.b64  	%rd2215, %rd2214, %rd1940;
	add.s64 	%rd2216, %rd1990, %rd1916;
	ld.const.u64 	%rd8802, [k_sha512+400];
	add.s64 	%rd2217, %rd2216, %rd8802;
	add.s64 	%rd2218, %rd2217, %rd2215;
	add.s64 	%rd2219, %rd2218, %rd2212;
	add.s64 	%rd2220, %rd2219, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2403,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2404}, %rd2207;
	}
	shf.r.wrap.b32 	%r2405, %r2404, %r2403, 28;
	shf.r.wrap.b32 	%r2406, %r2403, %r2404, 28;
	mov.b64 	%rd2221, {%r2406, %r2405};
	shf.l.wrap.b32 	%r2407, %r2403, %r2404, 30;
	shf.l.wrap.b32 	%r2408, %r2404, %r2403, 30;
	mov.b64 	%rd2222, {%r2408, %r2407};
	xor.b64  	%rd2223, %rd2222, %rd2221;
	shf.l.wrap.b32 	%r2409, %r2403, %r2404, 25;
	shf.l.wrap.b32 	%r2410, %r2404, %r2403, 25;
	mov.b64 	%rd2224, {%r2410, %r2409};
	xor.b64  	%rd2225, %rd2223, %rd2224;
	xor.b64  	%rd2226, %rd2207, %rd1951;
	xor.b64  	%rd2227, %rd2207, %rd2183;
	and.b64  	%rd2228, %rd2227, %rd2226;
	xor.b64  	%rd2229, %rd2228, %rd2207;
	add.s64 	%rd2230, %rd2219, %rd2229;
	add.s64 	%rd2231, %rd2230, %rd2225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2411,%dummy}, %rd2220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2412}, %rd2220;
	}
	shf.r.wrap.b32 	%r2413, %r2412, %r2411, 14;
	shf.r.wrap.b32 	%r2414, %r2411, %r2412, 14;
	mov.b64 	%rd2232, {%r2414, %r2413};
	shf.r.wrap.b32 	%r2415, %r2412, %r2411, 18;
	shf.r.wrap.b32 	%r2416, %r2411, %r2412, 18;
	mov.b64 	%rd2233, {%r2416, %r2415};
	xor.b64  	%rd2234, %rd2233, %rd2232;
	shf.l.wrap.b32 	%r2417, %r2411, %r2412, 23;
	shf.l.wrap.b32 	%r2418, %r2412, %r2411, 23;
	mov.b64 	%rd2235, {%r2418, %r2417};
	xor.b64  	%rd2236, %rd2234, %rd2235;
	xor.b64  	%rd2237, %rd2196, %rd2172;
	and.b64  	%rd2238, %rd2220, %rd2237;
	xor.b64  	%rd2239, %rd2238, %rd2172;
	add.s64 	%rd2240, %rd2003, %rd1940;
	ld.const.u64 	%rd8801, [k_sha512+408];
	add.s64 	%rd2241, %rd2240, %rd8801;
	add.s64 	%rd2242, %rd2241, %rd2239;
	add.s64 	%rd2243, %rd2242, %rd2236;
	add.s64 	%rd2244, %rd2243, %rd1951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2419,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2420}, %rd2231;
	}
	shf.r.wrap.b32 	%r2421, %r2420, %r2419, 28;
	shf.r.wrap.b32 	%r2422, %r2419, %r2420, 28;
	mov.b64 	%rd2245, {%r2422, %r2421};
	shf.l.wrap.b32 	%r2423, %r2419, %r2420, 30;
	shf.l.wrap.b32 	%r2424, %r2420, %r2419, 30;
	mov.b64 	%rd2246, {%r2424, %r2423};
	xor.b64  	%rd2247, %rd2246, %rd2245;
	shf.l.wrap.b32 	%r2425, %r2419, %r2420, 25;
	shf.l.wrap.b32 	%r2426, %r2420, %r2419, 25;
	mov.b64 	%rd2248, {%r2426, %r2425};
	xor.b64  	%rd2249, %rd2247, %rd2248;
	xor.b64  	%rd2250, %rd2231, %rd2183;
	xor.b64  	%rd2251, %rd2231, %rd2207;
	and.b64  	%rd2252, %rd2251, %rd2250;
	xor.b64  	%rd2253, %rd2252, %rd2231;
	add.s64 	%rd2254, %rd2243, %rd2253;
	add.s64 	%rd2255, %rd2254, %rd2249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2427,%dummy}, %rd2244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2428}, %rd2244;
	}
	shf.r.wrap.b32 	%r2429, %r2428, %r2427, 14;
	shf.r.wrap.b32 	%r2430, %r2427, %r2428, 14;
	mov.b64 	%rd2256, {%r2430, %r2429};
	shf.r.wrap.b32 	%r2431, %r2428, %r2427, 18;
	shf.r.wrap.b32 	%r2432, %r2427, %r2428, 18;
	mov.b64 	%rd2257, {%r2432, %r2431};
	xor.b64  	%rd2258, %rd2257, %rd2256;
	shf.l.wrap.b32 	%r2433, %r2427, %r2428, 23;
	shf.l.wrap.b32 	%r2434, %r2428, %r2427, 23;
	mov.b64 	%rd2259, {%r2434, %r2433};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	xor.b64  	%rd2261, %rd2220, %rd2196;
	and.b64  	%rd2262, %rd2244, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2196;
	add.s64 	%rd2264, %rd2172, %rd2016;
	ld.const.u64 	%rd8800, [k_sha512+416];
	add.s64 	%rd2265, %rd2264, %rd8800;
	add.s64 	%rd2266, %rd2265, %rd2263;
	add.s64 	%rd2267, %rd2266, %rd2260;
	add.s64 	%rd2268, %rd2267, %rd2183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2435,%dummy}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2436}, %rd2255;
	}
	shf.r.wrap.b32 	%r2437, %r2436, %r2435, 28;
	shf.r.wrap.b32 	%r2438, %r2435, %r2436, 28;
	mov.b64 	%rd2269, {%r2438, %r2437};
	shf.l.wrap.b32 	%r2439, %r2435, %r2436, 30;
	shf.l.wrap.b32 	%r2440, %r2436, %r2435, 30;
	mov.b64 	%rd2270, {%r2440, %r2439};
	xor.b64  	%rd2271, %rd2270, %rd2269;
	shf.l.wrap.b32 	%r2441, %r2435, %r2436, 25;
	shf.l.wrap.b32 	%r2442, %r2436, %r2435, 25;
	mov.b64 	%rd2272, {%r2442, %r2441};
	xor.b64  	%rd2273, %rd2271, %rd2272;
	xor.b64  	%rd2274, %rd2255, %rd2207;
	xor.b64  	%rd2275, %rd2255, %rd2231;
	and.b64  	%rd2276, %rd2275, %rd2274;
	xor.b64  	%rd2277, %rd2276, %rd2255;
	add.s64 	%rd2278, %rd2267, %rd2277;
	add.s64 	%rd2279, %rd2278, %rd2273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2443,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2444}, %rd2268;
	}
	shf.r.wrap.b32 	%r2445, %r2444, %r2443, 14;
	shf.r.wrap.b32 	%r2446, %r2443, %r2444, 14;
	mov.b64 	%rd2280, {%r2446, %r2445};
	shf.r.wrap.b32 	%r2447, %r2444, %r2443, 18;
	shf.r.wrap.b32 	%r2448, %r2443, %r2444, 18;
	mov.b64 	%rd2281, {%r2448, %r2447};
	xor.b64  	%rd2282, %rd2281, %rd2280;
	shf.l.wrap.b32 	%r2449, %r2443, %r2444, 23;
	shf.l.wrap.b32 	%r2450, %r2444, %r2443, 23;
	mov.b64 	%rd2283, {%r2450, %r2449};
	xor.b64  	%rd2284, %rd2282, %rd2283;
	xor.b64  	%rd2285, %rd2244, %rd2220;
	and.b64  	%rd2286, %rd2268, %rd2285;
	xor.b64  	%rd2287, %rd2286, %rd2220;
	add.s64 	%rd2288, %rd2196, %rd2029;
	ld.const.u64 	%rd8799, [k_sha512+424];
	add.s64 	%rd2289, %rd2288, %rd8799;
	add.s64 	%rd2290, %rd2289, %rd2287;
	add.s64 	%rd2291, %rd2290, %rd2284;
	add.s64 	%rd2292, %rd2291, %rd2207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2451,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2452}, %rd2279;
	}
	shf.r.wrap.b32 	%r2453, %r2452, %r2451, 28;
	shf.r.wrap.b32 	%r2454, %r2451, %r2452, 28;
	mov.b64 	%rd2293, {%r2454, %r2453};
	shf.l.wrap.b32 	%r2455, %r2451, %r2452, 30;
	shf.l.wrap.b32 	%r2456, %r2452, %r2451, 30;
	mov.b64 	%rd2294, {%r2456, %r2455};
	xor.b64  	%rd2295, %rd2294, %rd2293;
	shf.l.wrap.b32 	%r2457, %r2451, %r2452, 25;
	shf.l.wrap.b32 	%r2458, %r2452, %r2451, 25;
	mov.b64 	%rd2296, {%r2458, %r2457};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	xor.b64  	%rd2298, %rd2279, %rd2231;
	xor.b64  	%rd2299, %rd2279, %rd2255;
	and.b64  	%rd2300, %rd2299, %rd2298;
	xor.b64  	%rd2301, %rd2300, %rd2279;
	add.s64 	%rd2302, %rd2291, %rd2301;
	add.s64 	%rd2303, %rd2302, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2459,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2460}, %rd2292;
	}
	shf.r.wrap.b32 	%r2461, %r2460, %r2459, 14;
	shf.r.wrap.b32 	%r2462, %r2459, %r2460, 14;
	mov.b64 	%rd2304, {%r2462, %r2461};
	shf.r.wrap.b32 	%r2463, %r2460, %r2459, 18;
	shf.r.wrap.b32 	%r2464, %r2459, %r2460, 18;
	mov.b64 	%rd2305, {%r2464, %r2463};
	xor.b64  	%rd2306, %rd2305, %rd2304;
	shf.l.wrap.b32 	%r2465, %r2459, %r2460, 23;
	shf.l.wrap.b32 	%r2466, %r2460, %r2459, 23;
	mov.b64 	%rd2307, {%r2466, %r2465};
	xor.b64  	%rd2308, %rd2306, %rd2307;
	xor.b64  	%rd2309, %rd2268, %rd2244;
	and.b64  	%rd2310, %rd2292, %rd2309;
	xor.b64  	%rd2311, %rd2310, %rd2244;
	add.s64 	%rd2312, %rd2220, %rd2042;
	ld.const.u64 	%rd8798, [k_sha512+432];
	add.s64 	%rd2313, %rd2312, %rd8798;
	add.s64 	%rd2314, %rd2313, %rd2311;
	add.s64 	%rd2315, %rd2314, %rd2308;
	add.s64 	%rd2316, %rd2315, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2467,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2468}, %rd2303;
	}
	shf.r.wrap.b32 	%r2469, %r2468, %r2467, 28;
	shf.r.wrap.b32 	%r2470, %r2467, %r2468, 28;
	mov.b64 	%rd2317, {%r2470, %r2469};
	shf.l.wrap.b32 	%r2471, %r2467, %r2468, 30;
	shf.l.wrap.b32 	%r2472, %r2468, %r2467, 30;
	mov.b64 	%rd2318, {%r2472, %r2471};
	xor.b64  	%rd2319, %rd2318, %rd2317;
	shf.l.wrap.b32 	%r2473, %r2467, %r2468, 25;
	shf.l.wrap.b32 	%r2474, %r2468, %r2467, 25;
	mov.b64 	%rd2320, {%r2474, %r2473};
	xor.b64  	%rd2321, %rd2319, %rd2320;
	xor.b64  	%rd2322, %rd2303, %rd2255;
	xor.b64  	%rd2323, %rd2303, %rd2279;
	and.b64  	%rd2324, %rd2323, %rd2322;
	xor.b64  	%rd2325, %rd2324, %rd2303;
	add.s64 	%rd2326, %rd2315, %rd2325;
	add.s64 	%rd2327, %rd2326, %rd2321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2475,%dummy}, %rd2316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2476}, %rd2316;
	}
	shf.r.wrap.b32 	%r2477, %r2476, %r2475, 14;
	shf.r.wrap.b32 	%r2478, %r2475, %r2476, 14;
	mov.b64 	%rd2328, {%r2478, %r2477};
	shf.r.wrap.b32 	%r2479, %r2476, %r2475, 18;
	shf.r.wrap.b32 	%r2480, %r2475, %r2476, 18;
	mov.b64 	%rd2329, {%r2480, %r2479};
	xor.b64  	%rd2330, %rd2329, %rd2328;
	shf.l.wrap.b32 	%r2481, %r2475, %r2476, 23;
	shf.l.wrap.b32 	%r2482, %r2476, %r2475, 23;
	mov.b64 	%rd2331, {%r2482, %r2481};
	xor.b64  	%rd2332, %rd2330, %rd2331;
	xor.b64  	%rd2333, %rd2292, %rd2268;
	and.b64  	%rd2334, %rd2316, %rd2333;
	xor.b64  	%rd2335, %rd2334, %rd2268;
	add.s64 	%rd2336, %rd2244, %rd2055;
	ld.const.u64 	%rd8797, [k_sha512+440];
	add.s64 	%rd2337, %rd2336, %rd8797;
	add.s64 	%rd2338, %rd2337, %rd2335;
	add.s64 	%rd2339, %rd2338, %rd2332;
	add.s64 	%rd2340, %rd2339, %rd2255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2483,%dummy}, %rd2327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2484}, %rd2327;
	}
	shf.r.wrap.b32 	%r2485, %r2484, %r2483, 28;
	shf.r.wrap.b32 	%r2486, %r2483, %r2484, 28;
	mov.b64 	%rd2341, {%r2486, %r2485};
	shf.l.wrap.b32 	%r2487, %r2483, %r2484, 30;
	shf.l.wrap.b32 	%r2488, %r2484, %r2483, 30;
	mov.b64 	%rd2342, {%r2488, %r2487};
	xor.b64  	%rd2343, %rd2342, %rd2341;
	shf.l.wrap.b32 	%r2489, %r2483, %r2484, 25;
	shf.l.wrap.b32 	%r2490, %r2484, %r2483, 25;
	mov.b64 	%rd2344, {%r2490, %r2489};
	xor.b64  	%rd2345, %rd2343, %rd2344;
	xor.b64  	%rd2346, %rd2327, %rd2279;
	xor.b64  	%rd2347, %rd2327, %rd2303;
	and.b64  	%rd2348, %rd2347, %rd2346;
	xor.b64  	%rd2349, %rd2348, %rd2327;
	add.s64 	%rd2350, %rd2339, %rd2349;
	add.s64 	%rd2351, %rd2350, %rd2345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2491,%dummy}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2492}, %rd2340;
	}
	shf.r.wrap.b32 	%r2493, %r2492, %r2491, 14;
	shf.r.wrap.b32 	%r2494, %r2491, %r2492, 14;
	mov.b64 	%rd2352, {%r2494, %r2493};
	shf.r.wrap.b32 	%r2495, %r2492, %r2491, 18;
	shf.r.wrap.b32 	%r2496, %r2491, %r2492, 18;
	mov.b64 	%rd2353, {%r2496, %r2495};
	xor.b64  	%rd2354, %rd2353, %rd2352;
	shf.l.wrap.b32 	%r2497, %r2491, %r2492, 23;
	shf.l.wrap.b32 	%r2498, %r2492, %r2491, 23;
	mov.b64 	%rd2355, {%r2498, %r2497};
	xor.b64  	%rd2356, %rd2354, %rd2355;
	xor.b64  	%rd2357, %rd2316, %rd2292;
	and.b64  	%rd2358, %rd2340, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2292;
	add.s64 	%rd2360, %rd2268, %rd2068;
	ld.const.u64 	%rd8796, [k_sha512+448];
	add.s64 	%rd2361, %rd2360, %rd8796;
	add.s64 	%rd2362, %rd2361, %rd2359;
	add.s64 	%rd2363, %rd2362, %rd2356;
	add.s64 	%rd2364, %rd2363, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2499,%dummy}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2500}, %rd2351;
	}
	shf.r.wrap.b32 	%r2501, %r2500, %r2499, 28;
	shf.r.wrap.b32 	%r2502, %r2499, %r2500, 28;
	mov.b64 	%rd2365, {%r2502, %r2501};
	shf.l.wrap.b32 	%r2503, %r2499, %r2500, 30;
	shf.l.wrap.b32 	%r2504, %r2500, %r2499, 30;
	mov.b64 	%rd2366, {%r2504, %r2503};
	xor.b64  	%rd2367, %rd2366, %rd2365;
	shf.l.wrap.b32 	%r2505, %r2499, %r2500, 25;
	shf.l.wrap.b32 	%r2506, %r2500, %r2499, 25;
	mov.b64 	%rd2368, {%r2506, %r2505};
	xor.b64  	%rd2369, %rd2367, %rd2368;
	xor.b64  	%rd2370, %rd2351, %rd2303;
	xor.b64  	%rd2371, %rd2351, %rd2327;
	and.b64  	%rd2372, %rd2371, %rd2370;
	xor.b64  	%rd2373, %rd2372, %rd2351;
	add.s64 	%rd2374, %rd2363, %rd2373;
	add.s64 	%rd2375, %rd2374, %rd2369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2507,%dummy}, %rd2364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2508}, %rd2364;
	}
	shf.r.wrap.b32 	%r2509, %r2508, %r2507, 14;
	shf.r.wrap.b32 	%r2510, %r2507, %r2508, 14;
	mov.b64 	%rd2376, {%r2510, %r2509};
	shf.r.wrap.b32 	%r2511, %r2508, %r2507, 18;
	shf.r.wrap.b32 	%r2512, %r2507, %r2508, 18;
	mov.b64 	%rd2377, {%r2512, %r2511};
	xor.b64  	%rd2378, %rd2377, %rd2376;
	shf.l.wrap.b32 	%r2513, %r2507, %r2508, 23;
	shf.l.wrap.b32 	%r2514, %r2508, %r2507, 23;
	mov.b64 	%rd2379, {%r2514, %r2513};
	xor.b64  	%rd2380, %rd2378, %rd2379;
	xor.b64  	%rd2381, %rd2340, %rd2316;
	and.b64  	%rd2382, %rd2364, %rd2381;
	xor.b64  	%rd2383, %rd2382, %rd2316;
	add.s64 	%rd2384, %rd2292, %rd2081;
	ld.const.u64 	%rd8795, [k_sha512+456];
	add.s64 	%rd2385, %rd2384, %rd8795;
	add.s64 	%rd2386, %rd2385, %rd2383;
	add.s64 	%rd2387, %rd2386, %rd2380;
	add.s64 	%rd2388, %rd2387, %rd2303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2515,%dummy}, %rd2375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2516}, %rd2375;
	}
	shf.r.wrap.b32 	%r2517, %r2516, %r2515, 28;
	shf.r.wrap.b32 	%r2518, %r2515, %r2516, 28;
	mov.b64 	%rd2389, {%r2518, %r2517};
	shf.l.wrap.b32 	%r2519, %r2515, %r2516, 30;
	shf.l.wrap.b32 	%r2520, %r2516, %r2515, 30;
	mov.b64 	%rd2390, {%r2520, %r2519};
	xor.b64  	%rd2391, %rd2390, %rd2389;
	shf.l.wrap.b32 	%r2521, %r2515, %r2516, 25;
	shf.l.wrap.b32 	%r2522, %r2516, %r2515, 25;
	mov.b64 	%rd2392, {%r2522, %r2521};
	xor.b64  	%rd2393, %rd2391, %rd2392;
	xor.b64  	%rd2394, %rd2375, %rd2327;
	xor.b64  	%rd2395, %rd2375, %rd2351;
	and.b64  	%rd2396, %rd2395, %rd2394;
	xor.b64  	%rd2397, %rd2396, %rd2375;
	add.s64 	%rd2398, %rd2387, %rd2397;
	add.s64 	%rd2399, %rd2398, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2523,%dummy}, %rd2388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2524}, %rd2388;
	}
	shf.r.wrap.b32 	%r2525, %r2524, %r2523, 14;
	shf.r.wrap.b32 	%r2526, %r2523, %r2524, 14;
	mov.b64 	%rd2400, {%r2526, %r2525};
	shf.r.wrap.b32 	%r2527, %r2524, %r2523, 18;
	shf.r.wrap.b32 	%r2528, %r2523, %r2524, 18;
	mov.b64 	%rd2401, {%r2528, %r2527};
	xor.b64  	%rd2402, %rd2401, %rd2400;
	shf.l.wrap.b32 	%r2529, %r2523, %r2524, 23;
	shf.l.wrap.b32 	%r2530, %r2524, %r2523, 23;
	mov.b64 	%rd2403, {%r2530, %r2529};
	xor.b64  	%rd2404, %rd2402, %rd2403;
	xor.b64  	%rd2405, %rd2364, %rd2340;
	and.b64  	%rd2406, %rd2388, %rd2405;
	xor.b64  	%rd2407, %rd2406, %rd2340;
	add.s64 	%rd2408, %rd2316, %rd2094;
	ld.const.u64 	%rd8794, [k_sha512+464];
	add.s64 	%rd2409, %rd2408, %rd8794;
	add.s64 	%rd2410, %rd2409, %rd2407;
	add.s64 	%rd2411, %rd2410, %rd2404;
	add.s64 	%rd2412, %rd2411, %rd2327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2531,%dummy}, %rd2399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2532}, %rd2399;
	}
	shf.r.wrap.b32 	%r2533, %r2532, %r2531, 28;
	shf.r.wrap.b32 	%r2534, %r2531, %r2532, 28;
	mov.b64 	%rd2413, {%r2534, %r2533};
	shf.l.wrap.b32 	%r2535, %r2531, %r2532, 30;
	shf.l.wrap.b32 	%r2536, %r2532, %r2531, 30;
	mov.b64 	%rd2414, {%r2536, %r2535};
	xor.b64  	%rd2415, %rd2414, %rd2413;
	shf.l.wrap.b32 	%r2537, %r2531, %r2532, 25;
	shf.l.wrap.b32 	%r2538, %r2532, %r2531, 25;
	mov.b64 	%rd2416, {%r2538, %r2537};
	xor.b64  	%rd2417, %rd2415, %rd2416;
	xor.b64  	%rd2418, %rd2399, %rd2351;
	xor.b64  	%rd2419, %rd2399, %rd2375;
	and.b64  	%rd2420, %rd2419, %rd2418;
	xor.b64  	%rd2421, %rd2420, %rd2399;
	add.s64 	%rd2422, %rd2411, %rd2421;
	add.s64 	%rd2423, %rd2422, %rd2417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2539,%dummy}, %rd2412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2540}, %rd2412;
	}
	shf.r.wrap.b32 	%r2541, %r2540, %r2539, 14;
	shf.r.wrap.b32 	%r2542, %r2539, %r2540, 14;
	mov.b64 	%rd2424, {%r2542, %r2541};
	shf.r.wrap.b32 	%r2543, %r2540, %r2539, 18;
	shf.r.wrap.b32 	%r2544, %r2539, %r2540, 18;
	mov.b64 	%rd2425, {%r2544, %r2543};
	xor.b64  	%rd2426, %rd2425, %rd2424;
	shf.l.wrap.b32 	%r2545, %r2539, %r2540, 23;
	shf.l.wrap.b32 	%r2546, %r2540, %r2539, 23;
	mov.b64 	%rd2427, {%r2546, %r2545};
	xor.b64  	%rd2428, %rd2426, %rd2427;
	xor.b64  	%rd2429, %rd2388, %rd2364;
	and.b64  	%rd2430, %rd2412, %rd2429;
	xor.b64  	%rd2431, %rd2430, %rd2364;
	add.s64 	%rd2432, %rd2340, %rd2107;
	ld.const.u64 	%rd8793, [k_sha512+472];
	add.s64 	%rd2433, %rd2432, %rd8793;
	add.s64 	%rd2434, %rd2433, %rd2431;
	add.s64 	%rd2435, %rd2434, %rd2428;
	add.s64 	%rd2436, %rd2435, %rd2351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2547,%dummy}, %rd2423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2548}, %rd2423;
	}
	shf.r.wrap.b32 	%r2549, %r2548, %r2547, 28;
	shf.r.wrap.b32 	%r2550, %r2547, %r2548, 28;
	mov.b64 	%rd2437, {%r2550, %r2549};
	shf.l.wrap.b32 	%r2551, %r2547, %r2548, 30;
	shf.l.wrap.b32 	%r2552, %r2548, %r2547, 30;
	mov.b64 	%rd2438, {%r2552, %r2551};
	xor.b64  	%rd2439, %rd2438, %rd2437;
	shf.l.wrap.b32 	%r2553, %r2547, %r2548, 25;
	shf.l.wrap.b32 	%r2554, %r2548, %r2547, 25;
	mov.b64 	%rd2440, {%r2554, %r2553};
	xor.b64  	%rd2441, %rd2439, %rd2440;
	xor.b64  	%rd2442, %rd2423, %rd2375;
	xor.b64  	%rd2443, %rd2423, %rd2399;
	and.b64  	%rd2444, %rd2443, %rd2442;
	xor.b64  	%rd2445, %rd2444, %rd2423;
	add.s64 	%rd2446, %rd2435, %rd2445;
	add.s64 	%rd2447, %rd2446, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2555,%dummy}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2556}, %rd2436;
	}
	shf.r.wrap.b32 	%r2557, %r2556, %r2555, 14;
	shf.r.wrap.b32 	%r2558, %r2555, %r2556, 14;
	mov.b64 	%rd2448, {%r2558, %r2557};
	shf.r.wrap.b32 	%r2559, %r2556, %r2555, 18;
	shf.r.wrap.b32 	%r2560, %r2555, %r2556, 18;
	mov.b64 	%rd2449, {%r2560, %r2559};
	xor.b64  	%rd2450, %rd2449, %rd2448;
	shf.l.wrap.b32 	%r2561, %r2555, %r2556, 23;
	shf.l.wrap.b32 	%r2562, %r2556, %r2555, 23;
	mov.b64 	%rd2451, {%r2562, %r2561};
	xor.b64  	%rd2452, %rd2450, %rd2451;
	xor.b64  	%rd2453, %rd2412, %rd2388;
	and.b64  	%rd2454, %rd2436, %rd2453;
	xor.b64  	%rd2455, %rd2454, %rd2388;
	add.s64 	%rd2456, %rd2364, %rd2120;
	ld.const.u64 	%rd8792, [k_sha512+480];
	add.s64 	%rd2457, %rd2456, %rd8792;
	add.s64 	%rd2458, %rd2457, %rd2455;
	add.s64 	%rd2459, %rd2458, %rd2452;
	add.s64 	%rd2460, %rd2459, %rd2375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2563,%dummy}, %rd2447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2564}, %rd2447;
	}
	shf.r.wrap.b32 	%r2565, %r2564, %r2563, 28;
	shf.r.wrap.b32 	%r2566, %r2563, %r2564, 28;
	mov.b64 	%rd2461, {%r2566, %r2565};
	shf.l.wrap.b32 	%r2567, %r2563, %r2564, 30;
	shf.l.wrap.b32 	%r2568, %r2564, %r2563, 30;
	mov.b64 	%rd2462, {%r2568, %r2567};
	xor.b64  	%rd2463, %rd2462, %rd2461;
	shf.l.wrap.b32 	%r2569, %r2563, %r2564, 25;
	shf.l.wrap.b32 	%r2570, %r2564, %r2563, 25;
	mov.b64 	%rd2464, {%r2570, %r2569};
	xor.b64  	%rd2465, %rd2463, %rd2464;
	xor.b64  	%rd2466, %rd2447, %rd2399;
	xor.b64  	%rd2467, %rd2447, %rd2423;
	and.b64  	%rd2468, %rd2467, %rd2466;
	xor.b64  	%rd2469, %rd2468, %rd2447;
	add.s64 	%rd2470, %rd2459, %rd2469;
	add.s64 	%rd2471, %rd2470, %rd2465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2571,%dummy}, %rd2460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2572}, %rd2460;
	}
	shf.r.wrap.b32 	%r2573, %r2572, %r2571, 14;
	shf.r.wrap.b32 	%r2574, %r2571, %r2572, 14;
	mov.b64 	%rd2472, {%r2574, %r2573};
	shf.r.wrap.b32 	%r2575, %r2572, %r2571, 18;
	shf.r.wrap.b32 	%r2576, %r2571, %r2572, 18;
	mov.b64 	%rd2473, {%r2576, %r2575};
	xor.b64  	%rd2474, %rd2473, %rd2472;
	shf.l.wrap.b32 	%r2577, %r2571, %r2572, 23;
	shf.l.wrap.b32 	%r2578, %r2572, %r2571, 23;
	mov.b64 	%rd2475, {%r2578, %r2577};
	xor.b64  	%rd2476, %rd2474, %rd2475;
	xor.b64  	%rd2477, %rd2436, %rd2412;
	and.b64  	%rd2478, %rd2460, %rd2477;
	xor.b64  	%rd2479, %rd2478, %rd2412;
	add.s64 	%rd2480, %rd2388, %rd2133;
	ld.const.u64 	%rd8791, [k_sha512+488];
	add.s64 	%rd2481, %rd2480, %rd8791;
	add.s64 	%rd2482, %rd2481, %rd2479;
	add.s64 	%rd2483, %rd2482, %rd2476;
	add.s64 	%rd2484, %rd2483, %rd2399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2579,%dummy}, %rd2471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2580}, %rd2471;
	}
	shf.r.wrap.b32 	%r2581, %r2580, %r2579, 28;
	shf.r.wrap.b32 	%r2582, %r2579, %r2580, 28;
	mov.b64 	%rd2485, {%r2582, %r2581};
	shf.l.wrap.b32 	%r2583, %r2579, %r2580, 30;
	shf.l.wrap.b32 	%r2584, %r2580, %r2579, 30;
	mov.b64 	%rd2486, {%r2584, %r2583};
	xor.b64  	%rd2487, %rd2486, %rd2485;
	shf.l.wrap.b32 	%r2585, %r2579, %r2580, 25;
	shf.l.wrap.b32 	%r2586, %r2580, %r2579, 25;
	mov.b64 	%rd2488, {%r2586, %r2585};
	xor.b64  	%rd2489, %rd2487, %rd2488;
	xor.b64  	%rd2490, %rd2471, %rd2423;
	xor.b64  	%rd2491, %rd2471, %rd2447;
	and.b64  	%rd2492, %rd2491, %rd2490;
	xor.b64  	%rd2493, %rd2492, %rd2471;
	add.s64 	%rd2494, %rd2483, %rd2493;
	add.s64 	%rd2495, %rd2494, %rd2489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2587,%dummy}, %rd2484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2588}, %rd2484;
	}
	shf.r.wrap.b32 	%r2589, %r2588, %r2587, 14;
	shf.r.wrap.b32 	%r2590, %r2587, %r2588, 14;
	mov.b64 	%rd2496, {%r2590, %r2589};
	shf.r.wrap.b32 	%r2591, %r2588, %r2587, 18;
	shf.r.wrap.b32 	%r2592, %r2587, %r2588, 18;
	mov.b64 	%rd2497, {%r2592, %r2591};
	xor.b64  	%rd2498, %rd2497, %rd2496;
	shf.l.wrap.b32 	%r2593, %r2587, %r2588, 23;
	shf.l.wrap.b32 	%r2594, %r2588, %r2587, 23;
	mov.b64 	%rd2499, {%r2594, %r2593};
	xor.b64  	%rd2500, %rd2498, %rd2499;
	xor.b64  	%rd2501, %rd2460, %rd2436;
	and.b64  	%rd2502, %rd2484, %rd2501;
	xor.b64  	%rd2503, %rd2502, %rd2436;
	add.s64 	%rd2504, %rd2412, %rd2146;
	ld.const.u64 	%rd8790, [k_sha512+496];
	add.s64 	%rd2505, %rd2504, %rd8790;
	add.s64 	%rd2506, %rd2505, %rd2503;
	add.s64 	%rd2507, %rd2506, %rd2500;
	add.s64 	%rd2508, %rd2507, %rd2423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2595,%dummy}, %rd2495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2596}, %rd2495;
	}
	shf.r.wrap.b32 	%r2597, %r2596, %r2595, 28;
	shf.r.wrap.b32 	%r2598, %r2595, %r2596, 28;
	mov.b64 	%rd2509, {%r2598, %r2597};
	shf.l.wrap.b32 	%r2599, %r2595, %r2596, 30;
	shf.l.wrap.b32 	%r2600, %r2596, %r2595, 30;
	mov.b64 	%rd2510, {%r2600, %r2599};
	xor.b64  	%rd2511, %rd2510, %rd2509;
	shf.l.wrap.b32 	%r2601, %r2595, %r2596, 25;
	shf.l.wrap.b32 	%r2602, %r2596, %r2595, 25;
	mov.b64 	%rd2512, {%r2602, %r2601};
	xor.b64  	%rd2513, %rd2511, %rd2512;
	xor.b64  	%rd2514, %rd2495, %rd2447;
	xor.b64  	%rd2515, %rd2495, %rd2471;
	and.b64  	%rd2516, %rd2515, %rd2514;
	xor.b64  	%rd2517, %rd2516, %rd2495;
	add.s64 	%rd2518, %rd2507, %rd2517;
	add.s64 	%rd2519, %rd2518, %rd2513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2603,%dummy}, %rd2508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2604}, %rd2508;
	}
	shf.r.wrap.b32 	%r2605, %r2604, %r2603, 14;
	shf.r.wrap.b32 	%r2606, %r2603, %r2604, 14;
	mov.b64 	%rd2520, {%r2606, %r2605};
	shf.r.wrap.b32 	%r2607, %r2604, %r2603, 18;
	shf.r.wrap.b32 	%r2608, %r2603, %r2604, 18;
	mov.b64 	%rd2521, {%r2608, %r2607};
	xor.b64  	%rd2522, %rd2521, %rd2520;
	shf.l.wrap.b32 	%r2609, %r2603, %r2604, 23;
	shf.l.wrap.b32 	%r2610, %r2604, %r2603, 23;
	mov.b64 	%rd2523, {%r2610, %r2609};
	xor.b64  	%rd2524, %rd2522, %rd2523;
	xor.b64  	%rd2525, %rd2484, %rd2460;
	and.b64  	%rd2526, %rd2508, %rd2525;
	xor.b64  	%rd2527, %rd2526, %rd2460;
	add.s64 	%rd2528, %rd2436, %rd2159;
	ld.const.u64 	%rd8789, [k_sha512+504];
	add.s64 	%rd2529, %rd2528, %rd8789;
	add.s64 	%rd2530, %rd2529, %rd2527;
	add.s64 	%rd2531, %rd2530, %rd2524;
	add.s64 	%rd2532, %rd2531, %rd2447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2611,%dummy}, %rd2519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2612}, %rd2519;
	}
	shf.r.wrap.b32 	%r2613, %r2612, %r2611, 28;
	shf.r.wrap.b32 	%r2614, %r2611, %r2612, 28;
	mov.b64 	%rd2533, {%r2614, %r2613};
	shf.l.wrap.b32 	%r2615, %r2611, %r2612, 30;
	shf.l.wrap.b32 	%r2616, %r2612, %r2611, 30;
	mov.b64 	%rd2534, {%r2616, %r2615};
	xor.b64  	%rd2535, %rd2534, %rd2533;
	shf.l.wrap.b32 	%r2617, %r2611, %r2612, 25;
	shf.l.wrap.b32 	%r2618, %r2612, %r2611, 25;
	mov.b64 	%rd2536, {%r2618, %r2617};
	xor.b64  	%rd2537, %rd2535, %rd2536;
	xor.b64  	%rd2538, %rd2519, %rd2471;
	xor.b64  	%rd2539, %rd2519, %rd2495;
	and.b64  	%rd2540, %rd2539, %rd2538;
	xor.b64  	%rd2541, %rd2540, %rd2519;
	add.s64 	%rd2542, %rd2531, %rd2541;
	add.s64 	%rd2543, %rd2542, %rd2537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2619,%dummy}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2620}, %rd2146;
	}
	shf.r.wrap.b32 	%r2621, %r2620, %r2619, 19;
	shf.r.wrap.b32 	%r2622, %r2619, %r2620, 19;
	mov.b64 	%rd2544, {%r2622, %r2621};
	shf.l.wrap.b32 	%r2623, %r2619, %r2620, 3;
	shf.l.wrap.b32 	%r2624, %r2620, %r2619, 3;
	mov.b64 	%rd2545, {%r2624, %r2623};
	shr.u64 	%rd2546, %rd2146, 6;
	xor.b64  	%rd2547, %rd2544, %rd2546;
	xor.b64  	%rd2548, %rd2547, %rd2545;
	shf.r.wrap.b32 	%r2625, %r2234, %r2233, 1;
	shf.r.wrap.b32 	%r2626, %r2233, %r2234, 1;
	mov.b64 	%rd2549, {%r2626, %r2625};
	shf.r.wrap.b32 	%r2627, %r2234, %r2233, 8;
	shf.r.wrap.b32 	%r2628, %r2233, %r2234, 8;
	mov.b64 	%rd2550, {%r2628, %r2627};
	shr.u64 	%rd2551, %rd1977, 7;
	xor.b64  	%rd2552, %rd2549, %rd2551;
	xor.b64  	%rd2553, %rd2552, %rd2550;
	add.s64 	%rd2554, %rd2081, %rd1964;
	add.s64 	%rd2555, %rd2554, %rd2548;
	add.s64 	%rd2556, %rd2555, %rd2553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2629,%dummy}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2630}, %rd2159;
	}
	shf.r.wrap.b32 	%r2631, %r2630, %r2629, 19;
	shf.r.wrap.b32 	%r2632, %r2629, %r2630, 19;
	mov.b64 	%rd2557, {%r2632, %r2631};
	shf.l.wrap.b32 	%r2633, %r2629, %r2630, 3;
	shf.l.wrap.b32 	%r2634, %r2630, %r2629, 3;
	mov.b64 	%rd2558, {%r2634, %r2633};
	shr.u64 	%rd2559, %rd2159, 6;
	xor.b64  	%rd2560, %rd2557, %rd2559;
	xor.b64  	%rd2561, %rd2560, %rd2558;
	shf.r.wrap.b32 	%r2635, %r2244, %r2243, 1;
	shf.r.wrap.b32 	%r2636, %r2243, %r2244, 1;
	mov.b64 	%rd2562, {%r2636, %r2635};
	shf.r.wrap.b32 	%r2637, %r2244, %r2243, 8;
	shf.r.wrap.b32 	%r2638, %r2243, %r2244, 8;
	mov.b64 	%rd2563, {%r2638, %r2637};
	shr.u64 	%rd2564, %rd1990, 7;
	xor.b64  	%rd2565, %rd2562, %rd2564;
	xor.b64  	%rd2566, %rd2565, %rd2563;
	add.s64 	%rd2567, %rd2094, %rd1977;
	add.s64 	%rd2568, %rd2567, %rd2561;
	add.s64 	%rd2569, %rd2568, %rd2566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2639,%dummy}, %rd2556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2640}, %rd2556;
	}
	shf.r.wrap.b32 	%r2641, %r2640, %r2639, 19;
	shf.r.wrap.b32 	%r2642, %r2639, %r2640, 19;
	mov.b64 	%rd2570, {%r2642, %r2641};
	shf.l.wrap.b32 	%r2643, %r2639, %r2640, 3;
	shf.l.wrap.b32 	%r2644, %r2640, %r2639, 3;
	mov.b64 	%rd2571, {%r2644, %r2643};
	shr.u64 	%rd2572, %rd2556, 6;
	xor.b64  	%rd2573, %rd2570, %rd2572;
	xor.b64  	%rd2574, %rd2573, %rd2571;
	shf.r.wrap.b32 	%r2645, %r2254, %r2253, 1;
	shf.r.wrap.b32 	%r2646, %r2253, %r2254, 1;
	mov.b64 	%rd2575, {%r2646, %r2645};
	shf.r.wrap.b32 	%r2647, %r2254, %r2253, 8;
	shf.r.wrap.b32 	%r2648, %r2253, %r2254, 8;
	mov.b64 	%rd2576, {%r2648, %r2647};
	shr.u64 	%rd2577, %rd2003, 7;
	xor.b64  	%rd2578, %rd2575, %rd2577;
	xor.b64  	%rd2579, %rd2578, %rd2576;
	add.s64 	%rd2580, %rd2107, %rd1990;
	add.s64 	%rd2581, %rd2580, %rd2574;
	add.s64 	%rd2582, %rd2581, %rd2579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2649,%dummy}, %rd2569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2650}, %rd2569;
	}
	shf.r.wrap.b32 	%r2651, %r2650, %r2649, 19;
	shf.r.wrap.b32 	%r2652, %r2649, %r2650, 19;
	mov.b64 	%rd2583, {%r2652, %r2651};
	shf.l.wrap.b32 	%r2653, %r2649, %r2650, 3;
	shf.l.wrap.b32 	%r2654, %r2650, %r2649, 3;
	mov.b64 	%rd2584, {%r2654, %r2653};
	shr.u64 	%rd2585, %rd2569, 6;
	xor.b64  	%rd2586, %rd2583, %rd2585;
	xor.b64  	%rd2587, %rd2586, %rd2584;
	shf.r.wrap.b32 	%r2655, %r2264, %r2263, 1;
	shf.r.wrap.b32 	%r2656, %r2263, %r2264, 1;
	mov.b64 	%rd2588, {%r2656, %r2655};
	shf.r.wrap.b32 	%r2657, %r2264, %r2263, 8;
	shf.r.wrap.b32 	%r2658, %r2263, %r2264, 8;
	mov.b64 	%rd2589, {%r2658, %r2657};
	shr.u64 	%rd2590, %rd2016, 7;
	xor.b64  	%rd2591, %rd2588, %rd2590;
	xor.b64  	%rd2592, %rd2591, %rd2589;
	add.s64 	%rd2593, %rd2120, %rd2003;
	add.s64 	%rd2594, %rd2593, %rd2587;
	add.s64 	%rd2595, %rd2594, %rd2592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2659,%dummy}, %rd2582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2660}, %rd2582;
	}
	shf.r.wrap.b32 	%r2661, %r2660, %r2659, 19;
	shf.r.wrap.b32 	%r2662, %r2659, %r2660, 19;
	mov.b64 	%rd2596, {%r2662, %r2661};
	shf.l.wrap.b32 	%r2663, %r2659, %r2660, 3;
	shf.l.wrap.b32 	%r2664, %r2660, %r2659, 3;
	mov.b64 	%rd2597, {%r2664, %r2663};
	shr.u64 	%rd2598, %rd2582, 6;
	xor.b64  	%rd2599, %rd2596, %rd2598;
	xor.b64  	%rd2600, %rd2599, %rd2597;
	shf.r.wrap.b32 	%r2665, %r2274, %r2273, 1;
	shf.r.wrap.b32 	%r2666, %r2273, %r2274, 1;
	mov.b64 	%rd2601, {%r2666, %r2665};
	shf.r.wrap.b32 	%r2667, %r2274, %r2273, 8;
	shf.r.wrap.b32 	%r2668, %r2273, %r2274, 8;
	mov.b64 	%rd2602, {%r2668, %r2667};
	shr.u64 	%rd2603, %rd2029, 7;
	xor.b64  	%rd2604, %rd2601, %rd2603;
	xor.b64  	%rd2605, %rd2604, %rd2602;
	add.s64 	%rd2606, %rd2133, %rd2016;
	add.s64 	%rd2607, %rd2606, %rd2600;
	add.s64 	%rd2608, %rd2607, %rd2605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2669,%dummy}, %rd2595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2670}, %rd2595;
	}
	shf.r.wrap.b32 	%r2671, %r2670, %r2669, 19;
	shf.r.wrap.b32 	%r2672, %r2669, %r2670, 19;
	mov.b64 	%rd2609, {%r2672, %r2671};
	shf.l.wrap.b32 	%r2673, %r2669, %r2670, 3;
	shf.l.wrap.b32 	%r2674, %r2670, %r2669, 3;
	mov.b64 	%rd2610, {%r2674, %r2673};
	shr.u64 	%rd2611, %rd2595, 6;
	xor.b64  	%rd2612, %rd2609, %rd2611;
	xor.b64  	%rd2613, %rd2612, %rd2610;
	shf.r.wrap.b32 	%r2675, %r2284, %r2283, 1;
	shf.r.wrap.b32 	%r2676, %r2283, %r2284, 1;
	mov.b64 	%rd2614, {%r2676, %r2675};
	shf.r.wrap.b32 	%r2677, %r2284, %r2283, 8;
	shf.r.wrap.b32 	%r2678, %r2283, %r2284, 8;
	mov.b64 	%rd2615, {%r2678, %r2677};
	shr.u64 	%rd2616, %rd2042, 7;
	xor.b64  	%rd2617, %rd2614, %rd2616;
	xor.b64  	%rd2618, %rd2617, %rd2615;
	add.s64 	%rd2619, %rd2146, %rd2029;
	add.s64 	%rd2620, %rd2619, %rd2613;
	add.s64 	%rd2621, %rd2620, %rd2618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2679,%dummy}, %rd2608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2680}, %rd2608;
	}
	shf.r.wrap.b32 	%r2681, %r2680, %r2679, 19;
	shf.r.wrap.b32 	%r2682, %r2679, %r2680, 19;
	mov.b64 	%rd2622, {%r2682, %r2681};
	shf.l.wrap.b32 	%r2683, %r2679, %r2680, 3;
	shf.l.wrap.b32 	%r2684, %r2680, %r2679, 3;
	mov.b64 	%rd2623, {%r2684, %r2683};
	shr.u64 	%rd2624, %rd2608, 6;
	xor.b64  	%rd2625, %rd2622, %rd2624;
	xor.b64  	%rd2626, %rd2625, %rd2623;
	shf.r.wrap.b32 	%r2685, %r2294, %r2293, 1;
	shf.r.wrap.b32 	%r2686, %r2293, %r2294, 1;
	mov.b64 	%rd2627, {%r2686, %r2685};
	shf.r.wrap.b32 	%r2687, %r2294, %r2293, 8;
	shf.r.wrap.b32 	%r2688, %r2293, %r2294, 8;
	mov.b64 	%rd2628, {%r2688, %r2687};
	shr.u64 	%rd2629, %rd2055, 7;
	xor.b64  	%rd2630, %rd2627, %rd2629;
	xor.b64  	%rd2631, %rd2630, %rd2628;
	add.s64 	%rd2632, %rd2159, %rd2042;
	add.s64 	%rd2633, %rd2632, %rd2626;
	add.s64 	%rd2634, %rd2633, %rd2631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2689,%dummy}, %rd2621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2690}, %rd2621;
	}
	shf.r.wrap.b32 	%r2691, %r2690, %r2689, 19;
	shf.r.wrap.b32 	%r2692, %r2689, %r2690, 19;
	mov.b64 	%rd2635, {%r2692, %r2691};
	shf.l.wrap.b32 	%r2693, %r2689, %r2690, 3;
	shf.l.wrap.b32 	%r2694, %r2690, %r2689, 3;
	mov.b64 	%rd2636, {%r2694, %r2693};
	shr.u64 	%rd2637, %rd2621, 6;
	xor.b64  	%rd2638, %rd2635, %rd2637;
	xor.b64  	%rd2639, %rd2638, %rd2636;
	shf.r.wrap.b32 	%r2695, %r2304, %r2303, 1;
	shf.r.wrap.b32 	%r2696, %r2303, %r2304, 1;
	mov.b64 	%rd2640, {%r2696, %r2695};
	shf.r.wrap.b32 	%r2697, %r2304, %r2303, 8;
	shf.r.wrap.b32 	%r2698, %r2303, %r2304, 8;
	mov.b64 	%rd2641, {%r2698, %r2697};
	shr.u64 	%rd2642, %rd2068, 7;
	xor.b64  	%rd2643, %rd2640, %rd2642;
	xor.b64  	%rd2644, %rd2643, %rd2641;
	add.s64 	%rd2645, %rd2556, %rd2055;
	add.s64 	%rd2646, %rd2645, %rd2639;
	add.s64 	%rd2647, %rd2646, %rd2644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2699,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2700}, %rd2634;
	}
	shf.r.wrap.b32 	%r2701, %r2700, %r2699, 19;
	shf.r.wrap.b32 	%r2702, %r2699, %r2700, 19;
	mov.b64 	%rd2648, {%r2702, %r2701};
	shf.l.wrap.b32 	%r2703, %r2699, %r2700, 3;
	shf.l.wrap.b32 	%r2704, %r2700, %r2699, 3;
	mov.b64 	%rd2649, {%r2704, %r2703};
	shr.u64 	%rd2650, %rd2634, 6;
	xor.b64  	%rd2651, %rd2648, %rd2650;
	xor.b64  	%rd2652, %rd2651, %rd2649;
	shf.r.wrap.b32 	%r2705, %r2314, %r2313, 1;
	shf.r.wrap.b32 	%r2706, %r2313, %r2314, 1;
	mov.b64 	%rd2653, {%r2706, %r2705};
	shf.r.wrap.b32 	%r2707, %r2314, %r2313, 8;
	shf.r.wrap.b32 	%r2708, %r2313, %r2314, 8;
	mov.b64 	%rd2654, {%r2708, %r2707};
	shr.u64 	%rd2655, %rd2081, 7;
	xor.b64  	%rd2656, %rd2653, %rd2655;
	xor.b64  	%rd2657, %rd2656, %rd2654;
	add.s64 	%rd2658, %rd2569, %rd2068;
	add.s64 	%rd2659, %rd2658, %rd2652;
	add.s64 	%rd2660, %rd2659, %rd2657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2709,%dummy}, %rd2647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2710}, %rd2647;
	}
	shf.r.wrap.b32 	%r2711, %r2710, %r2709, 19;
	shf.r.wrap.b32 	%r2712, %r2709, %r2710, 19;
	mov.b64 	%rd2661, {%r2712, %r2711};
	shf.l.wrap.b32 	%r2713, %r2709, %r2710, 3;
	shf.l.wrap.b32 	%r2714, %r2710, %r2709, 3;
	mov.b64 	%rd2662, {%r2714, %r2713};
	shr.u64 	%rd2663, %rd2647, 6;
	xor.b64  	%rd2664, %rd2661, %rd2663;
	xor.b64  	%rd2665, %rd2664, %rd2662;
	shf.r.wrap.b32 	%r2715, %r2324, %r2323, 1;
	shf.r.wrap.b32 	%r2716, %r2323, %r2324, 1;
	mov.b64 	%rd2666, {%r2716, %r2715};
	shf.r.wrap.b32 	%r2717, %r2324, %r2323, 8;
	shf.r.wrap.b32 	%r2718, %r2323, %r2324, 8;
	mov.b64 	%rd2667, {%r2718, %r2717};
	shr.u64 	%rd2668, %rd2094, 7;
	xor.b64  	%rd2669, %rd2666, %rd2668;
	xor.b64  	%rd2670, %rd2669, %rd2667;
	add.s64 	%rd2671, %rd2582, %rd2081;
	add.s64 	%rd2672, %rd2671, %rd2665;
	add.s64 	%rd2673, %rd2672, %rd2670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd2660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd2660;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 19;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 19;
	mov.b64 	%rd2674, {%r2722, %r2721};
	shf.l.wrap.b32 	%r2723, %r2719, %r2720, 3;
	shf.l.wrap.b32 	%r2724, %r2720, %r2719, 3;
	mov.b64 	%rd2675, {%r2724, %r2723};
	shr.u64 	%rd2676, %rd2660, 6;
	xor.b64  	%rd2677, %rd2674, %rd2676;
	xor.b64  	%rd2678, %rd2677, %rd2675;
	shf.r.wrap.b32 	%r2725, %r2334, %r2333, 1;
	shf.r.wrap.b32 	%r2726, %r2333, %r2334, 1;
	mov.b64 	%rd2679, {%r2726, %r2725};
	shf.r.wrap.b32 	%r2727, %r2334, %r2333, 8;
	shf.r.wrap.b32 	%r2728, %r2333, %r2334, 8;
	mov.b64 	%rd2680, {%r2728, %r2727};
	shr.u64 	%rd2681, %rd2107, 7;
	xor.b64  	%rd2682, %rd2679, %rd2681;
	xor.b64  	%rd2683, %rd2682, %rd2680;
	add.s64 	%rd2684, %rd2595, %rd2094;
	add.s64 	%rd2685, %rd2684, %rd2678;
	add.s64 	%rd2686, %rd2685, %rd2683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2729,%dummy}, %rd2673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2730}, %rd2673;
	}
	shf.r.wrap.b32 	%r2731, %r2730, %r2729, 19;
	shf.r.wrap.b32 	%r2732, %r2729, %r2730, 19;
	mov.b64 	%rd2687, {%r2732, %r2731};
	shf.l.wrap.b32 	%r2733, %r2729, %r2730, 3;
	shf.l.wrap.b32 	%r2734, %r2730, %r2729, 3;
	mov.b64 	%rd2688, {%r2734, %r2733};
	shr.u64 	%rd2689, %rd2673, 6;
	xor.b64  	%rd2690, %rd2687, %rd2689;
	xor.b64  	%rd2691, %rd2690, %rd2688;
	shf.r.wrap.b32 	%r2735, %r2344, %r2343, 1;
	shf.r.wrap.b32 	%r2736, %r2343, %r2344, 1;
	mov.b64 	%rd2692, {%r2736, %r2735};
	shf.r.wrap.b32 	%r2737, %r2344, %r2343, 8;
	shf.r.wrap.b32 	%r2738, %r2343, %r2344, 8;
	mov.b64 	%rd2693, {%r2738, %r2737};
	shr.u64 	%rd2694, %rd2120, 7;
	xor.b64  	%rd2695, %rd2692, %rd2694;
	xor.b64  	%rd2696, %rd2695, %rd2693;
	add.s64 	%rd2697, %rd2608, %rd2107;
	add.s64 	%rd2698, %rd2697, %rd2691;
	add.s64 	%rd2699, %rd2698, %rd2696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2739,%dummy}, %rd2686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2740}, %rd2686;
	}
	shf.r.wrap.b32 	%r2741, %r2740, %r2739, 19;
	shf.r.wrap.b32 	%r2742, %r2739, %r2740, 19;
	mov.b64 	%rd2700, {%r2742, %r2741};
	shf.l.wrap.b32 	%r2743, %r2739, %r2740, 3;
	shf.l.wrap.b32 	%r2744, %r2740, %r2739, 3;
	mov.b64 	%rd2701, {%r2744, %r2743};
	shr.u64 	%rd2702, %rd2686, 6;
	xor.b64  	%rd2703, %rd2700, %rd2702;
	xor.b64  	%rd2704, %rd2703, %rd2701;
	shf.r.wrap.b32 	%r2745, %r2354, %r2353, 1;
	shf.r.wrap.b32 	%r2746, %r2353, %r2354, 1;
	mov.b64 	%rd2705, {%r2746, %r2745};
	shf.r.wrap.b32 	%r2747, %r2354, %r2353, 8;
	shf.r.wrap.b32 	%r2748, %r2353, %r2354, 8;
	mov.b64 	%rd2706, {%r2748, %r2747};
	shr.u64 	%rd2707, %rd2133, 7;
	xor.b64  	%rd2708, %rd2705, %rd2707;
	xor.b64  	%rd2709, %rd2708, %rd2706;
	add.s64 	%rd2710, %rd2621, %rd2120;
	add.s64 	%rd2711, %rd2710, %rd2704;
	add.s64 	%rd2712, %rd2711, %rd2709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2749,%dummy}, %rd2699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2750}, %rd2699;
	}
	shf.r.wrap.b32 	%r2751, %r2750, %r2749, 19;
	shf.r.wrap.b32 	%r2752, %r2749, %r2750, 19;
	mov.b64 	%rd2713, {%r2752, %r2751};
	shf.l.wrap.b32 	%r2753, %r2749, %r2750, 3;
	shf.l.wrap.b32 	%r2754, %r2750, %r2749, 3;
	mov.b64 	%rd2714, {%r2754, %r2753};
	shr.u64 	%rd2715, %rd2699, 6;
	xor.b64  	%rd2716, %rd2713, %rd2715;
	xor.b64  	%rd2717, %rd2716, %rd2714;
	shf.r.wrap.b32 	%r2755, %r2620, %r2619, 1;
	shf.r.wrap.b32 	%r2756, %r2619, %r2620, 1;
	mov.b64 	%rd2718, {%r2756, %r2755};
	shf.r.wrap.b32 	%r2757, %r2620, %r2619, 8;
	shf.r.wrap.b32 	%r2758, %r2619, %r2620, 8;
	mov.b64 	%rd2719, {%r2758, %r2757};
	shr.u64 	%rd2720, %rd2146, 7;
	xor.b64  	%rd2721, %rd2718, %rd2720;
	xor.b64  	%rd2722, %rd2721, %rd2719;
	add.s64 	%rd2723, %rd2634, %rd2133;
	add.s64 	%rd2724, %rd2723, %rd2717;
	add.s64 	%rd2725, %rd2724, %rd2722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2759,%dummy}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2760}, %rd2712;
	}
	shf.r.wrap.b32 	%r2761, %r2760, %r2759, 19;
	shf.r.wrap.b32 	%r2762, %r2759, %r2760, 19;
	mov.b64 	%rd2726, {%r2762, %r2761};
	shf.l.wrap.b32 	%r2763, %r2759, %r2760, 3;
	shf.l.wrap.b32 	%r2764, %r2760, %r2759, 3;
	mov.b64 	%rd2727, {%r2764, %r2763};
	shr.u64 	%rd2728, %rd2712, 6;
	xor.b64  	%rd2729, %rd2726, %rd2728;
	xor.b64  	%rd2730, %rd2729, %rd2727;
	shf.r.wrap.b32 	%r2765, %r2630, %r2629, 1;
	shf.r.wrap.b32 	%r2766, %r2629, %r2630, 1;
	mov.b64 	%rd2731, {%r2766, %r2765};
	shf.r.wrap.b32 	%r2767, %r2630, %r2629, 8;
	shf.r.wrap.b32 	%r2768, %r2629, %r2630, 8;
	mov.b64 	%rd2732, {%r2768, %r2767};
	shr.u64 	%rd2733, %rd2159, 7;
	xor.b64  	%rd2734, %rd2731, %rd2733;
	xor.b64  	%rd2735, %rd2734, %rd2732;
	add.s64 	%rd2736, %rd2647, %rd2146;
	add.s64 	%rd2737, %rd2736, %rd2730;
	add.s64 	%rd2738, %rd2737, %rd2735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2769,%dummy}, %rd2725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2770}, %rd2725;
	}
	shf.r.wrap.b32 	%r2771, %r2770, %r2769, 19;
	shf.r.wrap.b32 	%r2772, %r2769, %r2770, 19;
	mov.b64 	%rd2739, {%r2772, %r2771};
	shf.l.wrap.b32 	%r2773, %r2769, %r2770, 3;
	shf.l.wrap.b32 	%r2774, %r2770, %r2769, 3;
	mov.b64 	%rd2740, {%r2774, %r2773};
	shr.u64 	%rd2741, %rd2725, 6;
	xor.b64  	%rd2742, %rd2739, %rd2741;
	xor.b64  	%rd2743, %rd2742, %rd2740;
	shf.r.wrap.b32 	%r2775, %r2640, %r2639, 1;
	shf.r.wrap.b32 	%r2776, %r2639, %r2640, 1;
	mov.b64 	%rd2744, {%r2776, %r2775};
	shf.r.wrap.b32 	%r2777, %r2640, %r2639, 8;
	shf.r.wrap.b32 	%r2778, %r2639, %r2640, 8;
	mov.b64 	%rd2745, {%r2778, %r2777};
	shr.u64 	%rd2746, %rd2556, 7;
	xor.b64  	%rd2747, %rd2744, %rd2746;
	xor.b64  	%rd2748, %rd2747, %rd2745;
	add.s64 	%rd2749, %rd2660, %rd2159;
	add.s64 	%rd2750, %rd2749, %rd2743;
	add.s64 	%rd2751, %rd2750, %rd2748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2779,%dummy}, %rd2532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2780}, %rd2532;
	}
	shf.r.wrap.b32 	%r2781, %r2780, %r2779, 14;
	shf.r.wrap.b32 	%r2782, %r2779, %r2780, 14;
	mov.b64 	%rd2752, {%r2782, %r2781};
	shf.r.wrap.b32 	%r2783, %r2780, %r2779, 18;
	shf.r.wrap.b32 	%r2784, %r2779, %r2780, 18;
	mov.b64 	%rd2753, {%r2784, %r2783};
	xor.b64  	%rd2754, %rd2753, %rd2752;
	shf.l.wrap.b32 	%r2785, %r2779, %r2780, 23;
	shf.l.wrap.b32 	%r2786, %r2780, %r2779, 23;
	mov.b64 	%rd2755, {%r2786, %r2785};
	xor.b64  	%rd2756, %rd2754, %rd2755;
	xor.b64  	%rd2757, %rd2508, %rd2484;
	and.b64  	%rd2758, %rd2757, %rd2532;
	xor.b64  	%rd2759, %rd2758, %rd2484;
	add.s64 	%rd2760, %rd2759, %rd2460;
	add.s64 	%rd2761, %rd2760, %rd2556;
	ld.const.u64 	%rd8788, [k_sha512+512];
	add.s64 	%rd2762, %rd2761, %rd8788;
	add.s64 	%rd2763, %rd2762, %rd2756;
	add.s64 	%rd2764, %rd2763, %rd2471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2787,%dummy}, %rd2543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2788}, %rd2543;
	}
	shf.r.wrap.b32 	%r2789, %r2788, %r2787, 28;
	shf.r.wrap.b32 	%r2790, %r2787, %r2788, 28;
	mov.b64 	%rd2765, {%r2790, %r2789};
	shf.l.wrap.b32 	%r2791, %r2787, %r2788, 30;
	shf.l.wrap.b32 	%r2792, %r2788, %r2787, 30;
	mov.b64 	%rd2766, {%r2792, %r2791};
	xor.b64  	%rd2767, %rd2766, %rd2765;
	shf.l.wrap.b32 	%r2793, %r2787, %r2788, 25;
	shf.l.wrap.b32 	%r2794, %r2788, %r2787, 25;
	mov.b64 	%rd2768, {%r2794, %r2793};
	xor.b64  	%rd2769, %rd2767, %rd2768;
	xor.b64  	%rd2770, %rd2543, %rd2495;
	xor.b64  	%rd2771, %rd2543, %rd2519;
	and.b64  	%rd2772, %rd2771, %rd2770;
	xor.b64  	%rd2773, %rd2772, %rd2543;
	add.s64 	%rd2774, %rd2763, %rd2773;
	add.s64 	%rd2775, %rd2774, %rd2769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2795,%dummy}, %rd2764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2796}, %rd2764;
	}
	shf.r.wrap.b32 	%r2797, %r2796, %r2795, 14;
	shf.r.wrap.b32 	%r2798, %r2795, %r2796, 14;
	mov.b64 	%rd2776, {%r2798, %r2797};
	shf.r.wrap.b32 	%r2799, %r2796, %r2795, 18;
	shf.r.wrap.b32 	%r2800, %r2795, %r2796, 18;
	mov.b64 	%rd2777, {%r2800, %r2799};
	xor.b64  	%rd2778, %rd2777, %rd2776;
	shf.l.wrap.b32 	%r2801, %r2795, %r2796, 23;
	shf.l.wrap.b32 	%r2802, %r2796, %r2795, 23;
	mov.b64 	%rd2779, {%r2802, %r2801};
	xor.b64  	%rd2780, %rd2778, %rd2779;
	xor.b64  	%rd2781, %rd2532, %rd2508;
	and.b64  	%rd2782, %rd2764, %rd2781;
	xor.b64  	%rd2783, %rd2782, %rd2508;
	add.s64 	%rd2784, %rd2569, %rd2484;
	ld.const.u64 	%rd8787, [k_sha512+520];
	add.s64 	%rd2785, %rd2784, %rd8787;
	add.s64 	%rd2786, %rd2785, %rd2783;
	add.s64 	%rd2787, %rd2786, %rd2780;
	add.s64 	%rd2788, %rd2787, %rd2495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2803,%dummy}, %rd2775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2804}, %rd2775;
	}
	shf.r.wrap.b32 	%r2805, %r2804, %r2803, 28;
	shf.r.wrap.b32 	%r2806, %r2803, %r2804, 28;
	mov.b64 	%rd2789, {%r2806, %r2805};
	shf.l.wrap.b32 	%r2807, %r2803, %r2804, 30;
	shf.l.wrap.b32 	%r2808, %r2804, %r2803, 30;
	mov.b64 	%rd2790, {%r2808, %r2807};
	xor.b64  	%rd2791, %rd2790, %rd2789;
	shf.l.wrap.b32 	%r2809, %r2803, %r2804, 25;
	shf.l.wrap.b32 	%r2810, %r2804, %r2803, 25;
	mov.b64 	%rd2792, {%r2810, %r2809};
	xor.b64  	%rd2793, %rd2791, %rd2792;
	xor.b64  	%rd2794, %rd2775, %rd2519;
	xor.b64  	%rd2795, %rd2775, %rd2543;
	and.b64  	%rd2796, %rd2795, %rd2794;
	xor.b64  	%rd2797, %rd2796, %rd2775;
	add.s64 	%rd2798, %rd2787, %rd2797;
	add.s64 	%rd2799, %rd2798, %rd2793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2811,%dummy}, %rd2788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2812}, %rd2788;
	}
	shf.r.wrap.b32 	%r2813, %r2812, %r2811, 14;
	shf.r.wrap.b32 	%r2814, %r2811, %r2812, 14;
	mov.b64 	%rd2800, {%r2814, %r2813};
	shf.r.wrap.b32 	%r2815, %r2812, %r2811, 18;
	shf.r.wrap.b32 	%r2816, %r2811, %r2812, 18;
	mov.b64 	%rd2801, {%r2816, %r2815};
	xor.b64  	%rd2802, %rd2801, %rd2800;
	shf.l.wrap.b32 	%r2817, %r2811, %r2812, 23;
	shf.l.wrap.b32 	%r2818, %r2812, %r2811, 23;
	mov.b64 	%rd2803, {%r2818, %r2817};
	xor.b64  	%rd2804, %rd2802, %rd2803;
	xor.b64  	%rd2805, %rd2764, %rd2532;
	and.b64  	%rd2806, %rd2788, %rd2805;
	xor.b64  	%rd2807, %rd2806, %rd2532;
	add.s64 	%rd2808, %rd2582, %rd2508;
	ld.const.u64 	%rd8786, [k_sha512+528];
	add.s64 	%rd2809, %rd2808, %rd8786;
	add.s64 	%rd2810, %rd2809, %rd2807;
	add.s64 	%rd2811, %rd2810, %rd2804;
	add.s64 	%rd2812, %rd2811, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2819,%dummy}, %rd2799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2820}, %rd2799;
	}
	shf.r.wrap.b32 	%r2821, %r2820, %r2819, 28;
	shf.r.wrap.b32 	%r2822, %r2819, %r2820, 28;
	mov.b64 	%rd2813, {%r2822, %r2821};
	shf.l.wrap.b32 	%r2823, %r2819, %r2820, 30;
	shf.l.wrap.b32 	%r2824, %r2820, %r2819, 30;
	mov.b64 	%rd2814, {%r2824, %r2823};
	xor.b64  	%rd2815, %rd2814, %rd2813;
	shf.l.wrap.b32 	%r2825, %r2819, %r2820, 25;
	shf.l.wrap.b32 	%r2826, %r2820, %r2819, 25;
	mov.b64 	%rd2816, {%r2826, %r2825};
	xor.b64  	%rd2817, %rd2815, %rd2816;
	xor.b64  	%rd2818, %rd2799, %rd2543;
	xor.b64  	%rd2819, %rd2799, %rd2775;
	and.b64  	%rd2820, %rd2819, %rd2818;
	xor.b64  	%rd2821, %rd2820, %rd2799;
	add.s64 	%rd2822, %rd2811, %rd2821;
	add.s64 	%rd2823, %rd2822, %rd2817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2827,%dummy}, %rd2812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2828}, %rd2812;
	}
	shf.r.wrap.b32 	%r2829, %r2828, %r2827, 14;
	shf.r.wrap.b32 	%r2830, %r2827, %r2828, 14;
	mov.b64 	%rd2824, {%r2830, %r2829};
	shf.r.wrap.b32 	%r2831, %r2828, %r2827, 18;
	shf.r.wrap.b32 	%r2832, %r2827, %r2828, 18;
	mov.b64 	%rd2825, {%r2832, %r2831};
	xor.b64  	%rd2826, %rd2825, %rd2824;
	shf.l.wrap.b32 	%r2833, %r2827, %r2828, 23;
	shf.l.wrap.b32 	%r2834, %r2828, %r2827, 23;
	mov.b64 	%rd2827, {%r2834, %r2833};
	xor.b64  	%rd2828, %rd2826, %rd2827;
	xor.b64  	%rd2829, %rd2788, %rd2764;
	and.b64  	%rd2830, %rd2812, %rd2829;
	xor.b64  	%rd2831, %rd2830, %rd2764;
	add.s64 	%rd2832, %rd2595, %rd2532;
	ld.const.u64 	%rd8785, [k_sha512+536];
	add.s64 	%rd2833, %rd2832, %rd8785;
	add.s64 	%rd2834, %rd2833, %rd2831;
	add.s64 	%rd2835, %rd2834, %rd2828;
	add.s64 	%rd2836, %rd2835, %rd2543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2835,%dummy}, %rd2823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2836}, %rd2823;
	}
	shf.r.wrap.b32 	%r2837, %r2836, %r2835, 28;
	shf.r.wrap.b32 	%r2838, %r2835, %r2836, 28;
	mov.b64 	%rd2837, {%r2838, %r2837};
	shf.l.wrap.b32 	%r2839, %r2835, %r2836, 30;
	shf.l.wrap.b32 	%r2840, %r2836, %r2835, 30;
	mov.b64 	%rd2838, {%r2840, %r2839};
	xor.b64  	%rd2839, %rd2838, %rd2837;
	shf.l.wrap.b32 	%r2841, %r2835, %r2836, 25;
	shf.l.wrap.b32 	%r2842, %r2836, %r2835, 25;
	mov.b64 	%rd2840, {%r2842, %r2841};
	xor.b64  	%rd2841, %rd2839, %rd2840;
	xor.b64  	%rd2842, %rd2823, %rd2775;
	xor.b64  	%rd2843, %rd2823, %rd2799;
	and.b64  	%rd2844, %rd2843, %rd2842;
	xor.b64  	%rd2845, %rd2844, %rd2823;
	add.s64 	%rd2846, %rd2835, %rd2845;
	add.s64 	%rd2847, %rd2846, %rd2841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2843,%dummy}, %rd2836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2844}, %rd2836;
	}
	shf.r.wrap.b32 	%r2845, %r2844, %r2843, 14;
	shf.r.wrap.b32 	%r2846, %r2843, %r2844, 14;
	mov.b64 	%rd2848, {%r2846, %r2845};
	shf.r.wrap.b32 	%r2847, %r2844, %r2843, 18;
	shf.r.wrap.b32 	%r2848, %r2843, %r2844, 18;
	mov.b64 	%rd2849, {%r2848, %r2847};
	xor.b64  	%rd2850, %rd2849, %rd2848;
	shf.l.wrap.b32 	%r2849, %r2843, %r2844, 23;
	shf.l.wrap.b32 	%r2850, %r2844, %r2843, 23;
	mov.b64 	%rd2851, {%r2850, %r2849};
	xor.b64  	%rd2852, %rd2850, %rd2851;
	xor.b64  	%rd2853, %rd2812, %rd2788;
	and.b64  	%rd2854, %rd2836, %rd2853;
	xor.b64  	%rd2855, %rd2854, %rd2788;
	add.s64 	%rd2856, %rd2764, %rd2608;
	ld.const.u64 	%rd8784, [k_sha512+544];
	add.s64 	%rd2857, %rd2856, %rd8784;
	add.s64 	%rd2858, %rd2857, %rd2855;
	add.s64 	%rd2859, %rd2858, %rd2852;
	add.s64 	%rd2860, %rd2859, %rd2775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2851,%dummy}, %rd2847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2852}, %rd2847;
	}
	shf.r.wrap.b32 	%r2853, %r2852, %r2851, 28;
	shf.r.wrap.b32 	%r2854, %r2851, %r2852, 28;
	mov.b64 	%rd2861, {%r2854, %r2853};
	shf.l.wrap.b32 	%r2855, %r2851, %r2852, 30;
	shf.l.wrap.b32 	%r2856, %r2852, %r2851, 30;
	mov.b64 	%rd2862, {%r2856, %r2855};
	xor.b64  	%rd2863, %rd2862, %rd2861;
	shf.l.wrap.b32 	%r2857, %r2851, %r2852, 25;
	shf.l.wrap.b32 	%r2858, %r2852, %r2851, 25;
	mov.b64 	%rd2864, {%r2858, %r2857};
	xor.b64  	%rd2865, %rd2863, %rd2864;
	xor.b64  	%rd2866, %rd2847, %rd2799;
	xor.b64  	%rd2867, %rd2847, %rd2823;
	and.b64  	%rd2868, %rd2867, %rd2866;
	xor.b64  	%rd2869, %rd2868, %rd2847;
	add.s64 	%rd2870, %rd2859, %rd2869;
	add.s64 	%rd2871, %rd2870, %rd2865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2859,%dummy}, %rd2860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2860}, %rd2860;
	}
	shf.r.wrap.b32 	%r2861, %r2860, %r2859, 14;
	shf.r.wrap.b32 	%r2862, %r2859, %r2860, 14;
	mov.b64 	%rd2872, {%r2862, %r2861};
	shf.r.wrap.b32 	%r2863, %r2860, %r2859, 18;
	shf.r.wrap.b32 	%r2864, %r2859, %r2860, 18;
	mov.b64 	%rd2873, {%r2864, %r2863};
	xor.b64  	%rd2874, %rd2873, %rd2872;
	shf.l.wrap.b32 	%r2865, %r2859, %r2860, 23;
	shf.l.wrap.b32 	%r2866, %r2860, %r2859, 23;
	mov.b64 	%rd2875, {%r2866, %r2865};
	xor.b64  	%rd2876, %rd2874, %rd2875;
	xor.b64  	%rd2877, %rd2836, %rd2812;
	and.b64  	%rd2878, %rd2860, %rd2877;
	xor.b64  	%rd2879, %rd2878, %rd2812;
	add.s64 	%rd2880, %rd2788, %rd2621;
	ld.const.u64 	%rd8783, [k_sha512+552];
	add.s64 	%rd2881, %rd2880, %rd8783;
	add.s64 	%rd2882, %rd2881, %rd2879;
	add.s64 	%rd2883, %rd2882, %rd2876;
	add.s64 	%rd2884, %rd2883, %rd2799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2867,%dummy}, %rd2871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2868}, %rd2871;
	}
	shf.r.wrap.b32 	%r2869, %r2868, %r2867, 28;
	shf.r.wrap.b32 	%r2870, %r2867, %r2868, 28;
	mov.b64 	%rd2885, {%r2870, %r2869};
	shf.l.wrap.b32 	%r2871, %r2867, %r2868, 30;
	shf.l.wrap.b32 	%r2872, %r2868, %r2867, 30;
	mov.b64 	%rd2886, {%r2872, %r2871};
	xor.b64  	%rd2887, %rd2886, %rd2885;
	shf.l.wrap.b32 	%r2873, %r2867, %r2868, 25;
	shf.l.wrap.b32 	%r2874, %r2868, %r2867, 25;
	mov.b64 	%rd2888, {%r2874, %r2873};
	xor.b64  	%rd2889, %rd2887, %rd2888;
	xor.b64  	%rd2890, %rd2871, %rd2823;
	xor.b64  	%rd2891, %rd2871, %rd2847;
	and.b64  	%rd2892, %rd2891, %rd2890;
	xor.b64  	%rd2893, %rd2892, %rd2871;
	add.s64 	%rd2894, %rd2883, %rd2893;
	add.s64 	%rd2895, %rd2894, %rd2889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2875,%dummy}, %rd2884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2876}, %rd2884;
	}
	shf.r.wrap.b32 	%r2877, %r2876, %r2875, 14;
	shf.r.wrap.b32 	%r2878, %r2875, %r2876, 14;
	mov.b64 	%rd2896, {%r2878, %r2877};
	shf.r.wrap.b32 	%r2879, %r2876, %r2875, 18;
	shf.r.wrap.b32 	%r2880, %r2875, %r2876, 18;
	mov.b64 	%rd2897, {%r2880, %r2879};
	xor.b64  	%rd2898, %rd2897, %rd2896;
	shf.l.wrap.b32 	%r2881, %r2875, %r2876, 23;
	shf.l.wrap.b32 	%r2882, %r2876, %r2875, 23;
	mov.b64 	%rd2899, {%r2882, %r2881};
	xor.b64  	%rd2900, %rd2898, %rd2899;
	xor.b64  	%rd2901, %rd2860, %rd2836;
	and.b64  	%rd2902, %rd2884, %rd2901;
	xor.b64  	%rd2903, %rd2902, %rd2836;
	add.s64 	%rd2904, %rd2812, %rd2634;
	ld.const.u64 	%rd8782, [k_sha512+560];
	add.s64 	%rd2905, %rd2904, %rd8782;
	add.s64 	%rd2906, %rd2905, %rd2903;
	add.s64 	%rd2907, %rd2906, %rd2900;
	add.s64 	%rd2908, %rd2907, %rd2823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2883,%dummy}, %rd2895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2884}, %rd2895;
	}
	shf.r.wrap.b32 	%r2885, %r2884, %r2883, 28;
	shf.r.wrap.b32 	%r2886, %r2883, %r2884, 28;
	mov.b64 	%rd2909, {%r2886, %r2885};
	shf.l.wrap.b32 	%r2887, %r2883, %r2884, 30;
	shf.l.wrap.b32 	%r2888, %r2884, %r2883, 30;
	mov.b64 	%rd2910, {%r2888, %r2887};
	xor.b64  	%rd2911, %rd2910, %rd2909;
	shf.l.wrap.b32 	%r2889, %r2883, %r2884, 25;
	shf.l.wrap.b32 	%r2890, %r2884, %r2883, 25;
	mov.b64 	%rd2912, {%r2890, %r2889};
	xor.b64  	%rd2913, %rd2911, %rd2912;
	xor.b64  	%rd2914, %rd2895, %rd2847;
	xor.b64  	%rd2915, %rd2895, %rd2871;
	and.b64  	%rd2916, %rd2915, %rd2914;
	xor.b64  	%rd2917, %rd2916, %rd2895;
	add.s64 	%rd2918, %rd2907, %rd2917;
	add.s64 	%rd2919, %rd2918, %rd2913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2891,%dummy}, %rd2908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2892}, %rd2908;
	}
	shf.r.wrap.b32 	%r2893, %r2892, %r2891, 14;
	shf.r.wrap.b32 	%r2894, %r2891, %r2892, 14;
	mov.b64 	%rd2920, {%r2894, %r2893};
	shf.r.wrap.b32 	%r2895, %r2892, %r2891, 18;
	shf.r.wrap.b32 	%r2896, %r2891, %r2892, 18;
	mov.b64 	%rd2921, {%r2896, %r2895};
	xor.b64  	%rd2922, %rd2921, %rd2920;
	shf.l.wrap.b32 	%r2897, %r2891, %r2892, 23;
	shf.l.wrap.b32 	%r2898, %r2892, %r2891, 23;
	mov.b64 	%rd2923, {%r2898, %r2897};
	xor.b64  	%rd2924, %rd2922, %rd2923;
	xor.b64  	%rd2925, %rd2884, %rd2860;
	and.b64  	%rd2926, %rd2908, %rd2925;
	xor.b64  	%rd2927, %rd2926, %rd2860;
	add.s64 	%rd2928, %rd2836, %rd2647;
	ld.const.u64 	%rd8781, [k_sha512+568];
	add.s64 	%rd2929, %rd2928, %rd8781;
	add.s64 	%rd2930, %rd2929, %rd2927;
	add.s64 	%rd2931, %rd2930, %rd2924;
	add.s64 	%rd2932, %rd2931, %rd2847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2899,%dummy}, %rd2919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2900}, %rd2919;
	}
	shf.r.wrap.b32 	%r2901, %r2900, %r2899, 28;
	shf.r.wrap.b32 	%r2902, %r2899, %r2900, 28;
	mov.b64 	%rd2933, {%r2902, %r2901};
	shf.l.wrap.b32 	%r2903, %r2899, %r2900, 30;
	shf.l.wrap.b32 	%r2904, %r2900, %r2899, 30;
	mov.b64 	%rd2934, {%r2904, %r2903};
	xor.b64  	%rd2935, %rd2934, %rd2933;
	shf.l.wrap.b32 	%r2905, %r2899, %r2900, 25;
	shf.l.wrap.b32 	%r2906, %r2900, %r2899, 25;
	mov.b64 	%rd2936, {%r2906, %r2905};
	xor.b64  	%rd2937, %rd2935, %rd2936;
	xor.b64  	%rd2938, %rd2919, %rd2871;
	xor.b64  	%rd2939, %rd2919, %rd2895;
	and.b64  	%rd2940, %rd2939, %rd2938;
	xor.b64  	%rd2941, %rd2940, %rd2919;
	add.s64 	%rd2942, %rd2931, %rd2941;
	add.s64 	%rd2943, %rd2942, %rd2937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2907,%dummy}, %rd2932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2908}, %rd2932;
	}
	shf.r.wrap.b32 	%r2909, %r2908, %r2907, 14;
	shf.r.wrap.b32 	%r2910, %r2907, %r2908, 14;
	mov.b64 	%rd2944, {%r2910, %r2909};
	shf.r.wrap.b32 	%r2911, %r2908, %r2907, 18;
	shf.r.wrap.b32 	%r2912, %r2907, %r2908, 18;
	mov.b64 	%rd2945, {%r2912, %r2911};
	xor.b64  	%rd2946, %rd2945, %rd2944;
	shf.l.wrap.b32 	%r2913, %r2907, %r2908, 23;
	shf.l.wrap.b32 	%r2914, %r2908, %r2907, 23;
	mov.b64 	%rd2947, {%r2914, %r2913};
	xor.b64  	%rd2948, %rd2946, %rd2947;
	xor.b64  	%rd2949, %rd2908, %rd2884;
	and.b64  	%rd2950, %rd2932, %rd2949;
	xor.b64  	%rd2951, %rd2950, %rd2884;
	add.s64 	%rd2952, %rd2860, %rd2660;
	ld.const.u64 	%rd8780, [k_sha512+576];
	add.s64 	%rd2953, %rd2952, %rd8780;
	add.s64 	%rd2954, %rd2953, %rd2951;
	add.s64 	%rd2955, %rd2954, %rd2948;
	add.s64 	%rd2956, %rd2955, %rd2871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2915,%dummy}, %rd2943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2916}, %rd2943;
	}
	shf.r.wrap.b32 	%r2917, %r2916, %r2915, 28;
	shf.r.wrap.b32 	%r2918, %r2915, %r2916, 28;
	mov.b64 	%rd2957, {%r2918, %r2917};
	shf.l.wrap.b32 	%r2919, %r2915, %r2916, 30;
	shf.l.wrap.b32 	%r2920, %r2916, %r2915, 30;
	mov.b64 	%rd2958, {%r2920, %r2919};
	xor.b64  	%rd2959, %rd2958, %rd2957;
	shf.l.wrap.b32 	%r2921, %r2915, %r2916, 25;
	shf.l.wrap.b32 	%r2922, %r2916, %r2915, 25;
	mov.b64 	%rd2960, {%r2922, %r2921};
	xor.b64  	%rd2961, %rd2959, %rd2960;
	xor.b64  	%rd2962, %rd2943, %rd2895;
	xor.b64  	%rd2963, %rd2943, %rd2919;
	and.b64  	%rd2964, %rd2963, %rd2962;
	xor.b64  	%rd2965, %rd2964, %rd2943;
	add.s64 	%rd2966, %rd2955, %rd2965;
	add.s64 	%rd2967, %rd2966, %rd2961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2923,%dummy}, %rd2956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2924}, %rd2956;
	}
	shf.r.wrap.b32 	%r2925, %r2924, %r2923, 14;
	shf.r.wrap.b32 	%r2926, %r2923, %r2924, 14;
	mov.b64 	%rd2968, {%r2926, %r2925};
	shf.r.wrap.b32 	%r2927, %r2924, %r2923, 18;
	shf.r.wrap.b32 	%r2928, %r2923, %r2924, 18;
	mov.b64 	%rd2969, {%r2928, %r2927};
	xor.b64  	%rd2970, %rd2969, %rd2968;
	shf.l.wrap.b32 	%r2929, %r2923, %r2924, 23;
	shf.l.wrap.b32 	%r2930, %r2924, %r2923, 23;
	mov.b64 	%rd2971, {%r2930, %r2929};
	xor.b64  	%rd2972, %rd2970, %rd2971;
	xor.b64  	%rd2973, %rd2932, %rd2908;
	and.b64  	%rd2974, %rd2956, %rd2973;
	xor.b64  	%rd2975, %rd2974, %rd2908;
	add.s64 	%rd2976, %rd2884, %rd2673;
	ld.const.u64 	%rd8779, [k_sha512+584];
	add.s64 	%rd2977, %rd2976, %rd8779;
	add.s64 	%rd2978, %rd2977, %rd2975;
	add.s64 	%rd2979, %rd2978, %rd2972;
	add.s64 	%rd2980, %rd2979, %rd2895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2931,%dummy}, %rd2967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2932}, %rd2967;
	}
	shf.r.wrap.b32 	%r2933, %r2932, %r2931, 28;
	shf.r.wrap.b32 	%r2934, %r2931, %r2932, 28;
	mov.b64 	%rd2981, {%r2934, %r2933};
	shf.l.wrap.b32 	%r2935, %r2931, %r2932, 30;
	shf.l.wrap.b32 	%r2936, %r2932, %r2931, 30;
	mov.b64 	%rd2982, {%r2936, %r2935};
	xor.b64  	%rd2983, %rd2982, %rd2981;
	shf.l.wrap.b32 	%r2937, %r2931, %r2932, 25;
	shf.l.wrap.b32 	%r2938, %r2932, %r2931, 25;
	mov.b64 	%rd2984, {%r2938, %r2937};
	xor.b64  	%rd2985, %rd2983, %rd2984;
	xor.b64  	%rd2986, %rd2967, %rd2919;
	xor.b64  	%rd2987, %rd2967, %rd2943;
	and.b64  	%rd2988, %rd2987, %rd2986;
	xor.b64  	%rd2989, %rd2988, %rd2967;
	add.s64 	%rd2990, %rd2979, %rd2989;
	add.s64 	%rd2991, %rd2990, %rd2985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2939,%dummy}, %rd2980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2940}, %rd2980;
	}
	shf.r.wrap.b32 	%r2941, %r2940, %r2939, 14;
	shf.r.wrap.b32 	%r2942, %r2939, %r2940, 14;
	mov.b64 	%rd2992, {%r2942, %r2941};
	shf.r.wrap.b32 	%r2943, %r2940, %r2939, 18;
	shf.r.wrap.b32 	%r2944, %r2939, %r2940, 18;
	mov.b64 	%rd2993, {%r2944, %r2943};
	xor.b64  	%rd2994, %rd2993, %rd2992;
	shf.l.wrap.b32 	%r2945, %r2939, %r2940, 23;
	shf.l.wrap.b32 	%r2946, %r2940, %r2939, 23;
	mov.b64 	%rd2995, {%r2946, %r2945};
	xor.b64  	%rd2996, %rd2994, %rd2995;
	xor.b64  	%rd2997, %rd2956, %rd2932;
	and.b64  	%rd2998, %rd2980, %rd2997;
	xor.b64  	%rd2999, %rd2998, %rd2932;
	add.s64 	%rd3000, %rd2908, %rd2686;
	ld.const.u64 	%rd8778, [k_sha512+592];
	add.s64 	%rd3001, %rd3000, %rd8778;
	add.s64 	%rd3002, %rd3001, %rd2999;
	add.s64 	%rd3003, %rd3002, %rd2996;
	add.s64 	%rd3004, %rd3003, %rd2919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2947,%dummy}, %rd2991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2948}, %rd2991;
	}
	shf.r.wrap.b32 	%r2949, %r2948, %r2947, 28;
	shf.r.wrap.b32 	%r2950, %r2947, %r2948, 28;
	mov.b64 	%rd3005, {%r2950, %r2949};
	shf.l.wrap.b32 	%r2951, %r2947, %r2948, 30;
	shf.l.wrap.b32 	%r2952, %r2948, %r2947, 30;
	mov.b64 	%rd3006, {%r2952, %r2951};
	xor.b64  	%rd3007, %rd3006, %rd3005;
	shf.l.wrap.b32 	%r2953, %r2947, %r2948, 25;
	shf.l.wrap.b32 	%r2954, %r2948, %r2947, 25;
	mov.b64 	%rd3008, {%r2954, %r2953};
	xor.b64  	%rd3009, %rd3007, %rd3008;
	xor.b64  	%rd3010, %rd2991, %rd2943;
	xor.b64  	%rd3011, %rd2991, %rd2967;
	and.b64  	%rd3012, %rd3011, %rd3010;
	xor.b64  	%rd3013, %rd3012, %rd2991;
	add.s64 	%rd3014, %rd3003, %rd3013;
	add.s64 	%rd3015, %rd3014, %rd3009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2955,%dummy}, %rd3004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2956}, %rd3004;
	}
	shf.r.wrap.b32 	%r2957, %r2956, %r2955, 14;
	shf.r.wrap.b32 	%r2958, %r2955, %r2956, 14;
	mov.b64 	%rd3016, {%r2958, %r2957};
	shf.r.wrap.b32 	%r2959, %r2956, %r2955, 18;
	shf.r.wrap.b32 	%r2960, %r2955, %r2956, 18;
	mov.b64 	%rd3017, {%r2960, %r2959};
	xor.b64  	%rd3018, %rd3017, %rd3016;
	shf.l.wrap.b32 	%r2961, %r2955, %r2956, 23;
	shf.l.wrap.b32 	%r2962, %r2956, %r2955, 23;
	mov.b64 	%rd3019, {%r2962, %r2961};
	xor.b64  	%rd3020, %rd3018, %rd3019;
	xor.b64  	%rd3021, %rd2980, %rd2956;
	and.b64  	%rd3022, %rd3004, %rd3021;
	xor.b64  	%rd3023, %rd3022, %rd2956;
	add.s64 	%rd3024, %rd2932, %rd2699;
	ld.const.u64 	%rd8777, [k_sha512+600];
	add.s64 	%rd3025, %rd3024, %rd8777;
	add.s64 	%rd3026, %rd3025, %rd3023;
	add.s64 	%rd3027, %rd3026, %rd3020;
	add.s64 	%rd3028, %rd3027, %rd2943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2963,%dummy}, %rd3015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2964}, %rd3015;
	}
	shf.r.wrap.b32 	%r2965, %r2964, %r2963, 28;
	shf.r.wrap.b32 	%r2966, %r2963, %r2964, 28;
	mov.b64 	%rd3029, {%r2966, %r2965};
	shf.l.wrap.b32 	%r2967, %r2963, %r2964, 30;
	shf.l.wrap.b32 	%r2968, %r2964, %r2963, 30;
	mov.b64 	%rd3030, {%r2968, %r2967};
	xor.b64  	%rd3031, %rd3030, %rd3029;
	shf.l.wrap.b32 	%r2969, %r2963, %r2964, 25;
	shf.l.wrap.b32 	%r2970, %r2964, %r2963, 25;
	mov.b64 	%rd3032, {%r2970, %r2969};
	xor.b64  	%rd3033, %rd3031, %rd3032;
	xor.b64  	%rd3034, %rd3015, %rd2967;
	xor.b64  	%rd3035, %rd3015, %rd2991;
	and.b64  	%rd3036, %rd3035, %rd3034;
	xor.b64  	%rd3037, %rd3036, %rd3015;
	add.s64 	%rd3038, %rd3027, %rd3037;
	add.s64 	%rd3039, %rd3038, %rd3033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2971,%dummy}, %rd3028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2972}, %rd3028;
	}
	shf.r.wrap.b32 	%r2973, %r2972, %r2971, 14;
	shf.r.wrap.b32 	%r2974, %r2971, %r2972, 14;
	mov.b64 	%rd3040, {%r2974, %r2973};
	shf.r.wrap.b32 	%r2975, %r2972, %r2971, 18;
	shf.r.wrap.b32 	%r2976, %r2971, %r2972, 18;
	mov.b64 	%rd3041, {%r2976, %r2975};
	xor.b64  	%rd3042, %rd3041, %rd3040;
	shf.l.wrap.b32 	%r2977, %r2971, %r2972, 23;
	shf.l.wrap.b32 	%r2978, %r2972, %r2971, 23;
	mov.b64 	%rd3043, {%r2978, %r2977};
	xor.b64  	%rd3044, %rd3042, %rd3043;
	xor.b64  	%rd3045, %rd3004, %rd2980;
	and.b64  	%rd3046, %rd3028, %rd3045;
	xor.b64  	%rd3047, %rd3046, %rd2980;
	add.s64 	%rd3048, %rd2956, %rd2712;
	ld.const.u64 	%rd8776, [k_sha512+608];
	add.s64 	%rd3049, %rd3048, %rd8776;
	add.s64 	%rd3050, %rd3049, %rd3047;
	add.s64 	%rd3051, %rd3050, %rd3044;
	add.s64 	%rd3052, %rd3051, %rd2967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2979,%dummy}, %rd3039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2980}, %rd3039;
	}
	shf.r.wrap.b32 	%r2981, %r2980, %r2979, 28;
	shf.r.wrap.b32 	%r2982, %r2979, %r2980, 28;
	mov.b64 	%rd3053, {%r2982, %r2981};
	shf.l.wrap.b32 	%r2983, %r2979, %r2980, 30;
	shf.l.wrap.b32 	%r2984, %r2980, %r2979, 30;
	mov.b64 	%rd3054, {%r2984, %r2983};
	xor.b64  	%rd3055, %rd3054, %rd3053;
	shf.l.wrap.b32 	%r2985, %r2979, %r2980, 25;
	shf.l.wrap.b32 	%r2986, %r2980, %r2979, 25;
	mov.b64 	%rd3056, {%r2986, %r2985};
	xor.b64  	%rd3057, %rd3055, %rd3056;
	xor.b64  	%rd3058, %rd3039, %rd2991;
	xor.b64  	%rd3059, %rd3039, %rd3015;
	and.b64  	%rd3060, %rd3059, %rd3058;
	xor.b64  	%rd3061, %rd3060, %rd3039;
	add.s64 	%rd3062, %rd3051, %rd3061;
	add.s64 	%rd3063, %rd3062, %rd3057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2987,%dummy}, %rd3052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2988}, %rd3052;
	}
	shf.r.wrap.b32 	%r2989, %r2988, %r2987, 14;
	shf.r.wrap.b32 	%r2990, %r2987, %r2988, 14;
	mov.b64 	%rd3064, {%r2990, %r2989};
	shf.r.wrap.b32 	%r2991, %r2988, %r2987, 18;
	shf.r.wrap.b32 	%r2992, %r2987, %r2988, 18;
	mov.b64 	%rd3065, {%r2992, %r2991};
	xor.b64  	%rd3066, %rd3065, %rd3064;
	shf.l.wrap.b32 	%r2993, %r2987, %r2988, 23;
	shf.l.wrap.b32 	%r2994, %r2988, %r2987, 23;
	mov.b64 	%rd3067, {%r2994, %r2993};
	xor.b64  	%rd3068, %rd3066, %rd3067;
	xor.b64  	%rd3069, %rd3028, %rd3004;
	and.b64  	%rd3070, %rd3052, %rd3069;
	xor.b64  	%rd3071, %rd3070, %rd3004;
	add.s64 	%rd3072, %rd2980, %rd2725;
	ld.const.u64 	%rd8775, [k_sha512+616];
	add.s64 	%rd3073, %rd3072, %rd8775;
	add.s64 	%rd3074, %rd3073, %rd3071;
	add.s64 	%rd3075, %rd3074, %rd3068;
	add.s64 	%rd3076, %rd3075, %rd2991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2995,%dummy}, %rd3063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2996}, %rd3063;
	}
	shf.r.wrap.b32 	%r2997, %r2996, %r2995, 28;
	shf.r.wrap.b32 	%r2998, %r2995, %r2996, 28;
	mov.b64 	%rd3077, {%r2998, %r2997};
	shf.l.wrap.b32 	%r2999, %r2995, %r2996, 30;
	shf.l.wrap.b32 	%r3000, %r2996, %r2995, 30;
	mov.b64 	%rd3078, {%r3000, %r2999};
	xor.b64  	%rd3079, %rd3078, %rd3077;
	shf.l.wrap.b32 	%r3001, %r2995, %r2996, 25;
	shf.l.wrap.b32 	%r3002, %r2996, %r2995, 25;
	mov.b64 	%rd3080, {%r3002, %r3001};
	xor.b64  	%rd3081, %rd3079, %rd3080;
	xor.b64  	%rd3082, %rd3063, %rd3015;
	xor.b64  	%rd3083, %rd3063, %rd3039;
	and.b64  	%rd3084, %rd3083, %rd3082;
	xor.b64  	%rd3085, %rd3084, %rd3063;
	add.s64 	%rd3086, %rd3075, %rd3085;
	add.s64 	%rd3087, %rd3086, %rd3081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3003,%dummy}, %rd3076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3004}, %rd3076;
	}
	shf.r.wrap.b32 	%r3005, %r3004, %r3003, 14;
	shf.r.wrap.b32 	%r3006, %r3003, %r3004, 14;
	mov.b64 	%rd3088, {%r3006, %r3005};
	shf.r.wrap.b32 	%r3007, %r3004, %r3003, 18;
	shf.r.wrap.b32 	%r3008, %r3003, %r3004, 18;
	mov.b64 	%rd3089, {%r3008, %r3007};
	xor.b64  	%rd3090, %rd3089, %rd3088;
	shf.l.wrap.b32 	%r3009, %r3003, %r3004, 23;
	shf.l.wrap.b32 	%r3010, %r3004, %r3003, 23;
	mov.b64 	%rd3091, {%r3010, %r3009};
	xor.b64  	%rd3092, %rd3090, %rd3091;
	xor.b64  	%rd3093, %rd3052, %rd3028;
	and.b64  	%rd3094, %rd3076, %rd3093;
	xor.b64  	%rd3095, %rd3094, %rd3028;
	add.s64 	%rd3096, %rd3004, %rd2738;
	ld.const.u64 	%rd8774, [k_sha512+624];
	add.s64 	%rd3097, %rd3096, %rd8774;
	add.s64 	%rd3098, %rd3097, %rd3095;
	add.s64 	%rd3099, %rd3098, %rd3092;
	add.s64 	%rd3100, %rd3099, %rd3015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3011,%dummy}, %rd3087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3012}, %rd3087;
	}
	shf.r.wrap.b32 	%r3013, %r3012, %r3011, 28;
	shf.r.wrap.b32 	%r3014, %r3011, %r3012, 28;
	mov.b64 	%rd3101, {%r3014, %r3013};
	shf.l.wrap.b32 	%r3015, %r3011, %r3012, 30;
	shf.l.wrap.b32 	%r3016, %r3012, %r3011, 30;
	mov.b64 	%rd3102, {%r3016, %r3015};
	xor.b64  	%rd3103, %rd3102, %rd3101;
	shf.l.wrap.b32 	%r3017, %r3011, %r3012, 25;
	shf.l.wrap.b32 	%r3018, %r3012, %r3011, 25;
	mov.b64 	%rd3104, {%r3018, %r3017};
	xor.b64  	%rd3105, %rd3103, %rd3104;
	xor.b64  	%rd3106, %rd3087, %rd3039;
	xor.b64  	%rd3107, %rd3087, %rd3063;
	and.b64  	%rd3108, %rd3107, %rd3106;
	xor.b64  	%rd3109, %rd3108, %rd3087;
	add.s64 	%rd3110, %rd3099, %rd3109;
	add.s64 	%rd3111, %rd3110, %rd3105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3019,%dummy}, %rd3100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3020}, %rd3100;
	}
	shf.r.wrap.b32 	%r3021, %r3020, %r3019, 14;
	shf.r.wrap.b32 	%r3022, %r3019, %r3020, 14;
	mov.b64 	%rd3112, {%r3022, %r3021};
	shf.r.wrap.b32 	%r3023, %r3020, %r3019, 18;
	shf.r.wrap.b32 	%r3024, %r3019, %r3020, 18;
	mov.b64 	%rd3113, {%r3024, %r3023};
	xor.b64  	%rd3114, %rd3113, %rd3112;
	shf.l.wrap.b32 	%r3025, %r3019, %r3020, 23;
	shf.l.wrap.b32 	%r3026, %r3020, %r3019, 23;
	mov.b64 	%rd3115, {%r3026, %r3025};
	xor.b64  	%rd3116, %rd3114, %rd3115;
	xor.b64  	%rd3117, %rd3076, %rd3052;
	and.b64  	%rd3118, %rd3100, %rd3117;
	xor.b64  	%rd3119, %rd3118, %rd3052;
	add.s64 	%rd3120, %rd3028, %rd2751;
	ld.const.u64 	%rd8773, [k_sha512+632];
	add.s64 	%rd3121, %rd3120, %rd8773;
	add.s64 	%rd3122, %rd3121, %rd3119;
	add.s64 	%rd3123, %rd3122, %rd3116;
	add.s64 	%rd3124, %rd3123, %rd3039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3027,%dummy}, %rd3111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3028}, %rd3111;
	}
	shf.r.wrap.b32 	%r3029, %r3028, %r3027, 28;
	shf.r.wrap.b32 	%r3030, %r3027, %r3028, 28;
	mov.b64 	%rd3125, {%r3030, %r3029};
	shf.l.wrap.b32 	%r3031, %r3027, %r3028, 30;
	shf.l.wrap.b32 	%r3032, %r3028, %r3027, 30;
	mov.b64 	%rd3126, {%r3032, %r3031};
	xor.b64  	%rd3127, %rd3126, %rd3125;
	shf.l.wrap.b32 	%r3033, %r3027, %r3028, 25;
	shf.l.wrap.b32 	%r3034, %r3028, %r3027, 25;
	mov.b64 	%rd3128, {%r3034, %r3033};
	xor.b64  	%rd3129, %rd3127, %rd3128;
	xor.b64  	%rd3130, %rd3111, %rd3063;
	xor.b64  	%rd3131, %rd3111, %rd3087;
	and.b64  	%rd3132, %rd3131, %rd3130;
	xor.b64  	%rd3133, %rd3132, %rd3111;
	add.s64 	%rd3134, %rd3123, %rd3133;
	add.s64 	%rd3135, %rd3134, %rd3129;
	add.s64 	%rd8844, %rd8844, %rd3135;
	st.local.u64 	[%rd9], %rd8844;
	add.s64 	%rd8843, %rd8843, %rd3111;
	st.local.u64 	[%rd10], %rd8843;
	add.s64 	%rd8842, %rd8842, %rd3087;
	st.local.u64 	[%rd10+8], %rd8842;
	add.s64 	%rd8841, %rd8841, %rd3063;
	st.local.u64 	[%rd10+16], %rd8841;
	add.s64 	%rd8840, %rd8840, %rd3124;
	st.local.u64 	[%rd10+24], %rd8840;
	add.s64 	%rd8839, %rd8839, %rd3100;
	st.local.u64 	[%rd10+32], %rd8839;
	add.s64 	%rd8838, %rd8838, %rd3076;
	st.local.u64 	[%rd10+40], %rd8838;
	add.s64 	%rd8837, %rd8837, %rd3052;
	st.local.u64 	[%rd10+48], %rd8837;
	mov.u32 	%r12415, 0;
	st.local.u32 	[%rd10+56], %r12415;
	st.local.u32 	[%rd10+64], %r12415;
	st.local.u32 	[%rd10+72], %r12415;
	st.local.u32 	[%rd10+80], %r12415;
	st.local.u32 	[%rd10+88], %r12415;
	st.local.u32 	[%rd10+96], %r12415;
	st.local.u32 	[%rd10+104], %r12415;
	st.local.u32 	[%rd10+112], %r12415;
	st.local.u32 	[%rd10+120], %r12415;
	st.local.u32 	[%rd10+128], %r12415;
	st.local.u32 	[%rd10+136], %r12415;
	st.local.u32 	[%rd10+144], %r12415;
	st.local.u32 	[%rd10+152], %r12415;
	st.local.u32 	[%rd10+160], %r12415;
	st.local.u32 	[%rd10+168], %r12415;
	st.local.u32 	[%rd10+176], %r12415;
	st.local.u32 	[%rd11+4], %r12415;
	st.local.u32 	[%rd12+4], %r12415;
	st.local.u32 	[%rd13+4], %r12415;
	st.local.u32 	[%rd14+4], %r12415;
	st.local.u32 	[%rd15+4], %r12415;
	st.local.u32 	[%rd16+4], %r12415;
	st.local.u32 	[%rd17+4], %r12415;
	st.local.u32 	[%rd18+4], %r12415;
	st.local.u32 	[%rd19+4], %r12415;
	st.local.u32 	[%rd20+4], %r12415;
	st.local.u32 	[%rd21+4], %r12415;
	st.local.u32 	[%rd22+4], %r12415;
	st.local.u32 	[%rd23+4], %r12415;
	st.local.u32 	[%rd24+4], %r12415;
	st.local.u32 	[%rd25+4], %r12415;
	st.local.u32 	[%rd26+4], %r12415;
	mov.u32 	%r12416, %r12415;
	mov.u32 	%r12417, %r12415;
	mov.u32 	%r12418, %r12415;
	mov.u32 	%r12419, %r12415;
	mov.u32 	%r12420, %r12415;
	mov.u32 	%r12421, %r12415;
	mov.u32 	%r12422, %r12415;
	mov.u32 	%r12423, %r12415;
	mov.u32 	%r12424, %r12415;
	mov.u32 	%r12425, %r12415;
	mov.u32 	%r12426, %r12415;
	mov.u32 	%r12427, %r12415;
	mov.u32 	%r12428, %r12415;
	mov.u32 	%r12429, %r12415;
	mov.u32 	%r12430, %r12415;
	mov.u32 	%r12431, %r12415;
	mov.u32 	%r12432, %r12415;
	mov.u32 	%r12433, %r12415;
	mov.u32 	%r12434, %r12415;
	mov.u32 	%r12435, %r12415;
	mov.u32 	%r12436, %r12415;
	mov.u32 	%r12437, %r12415;
	mov.u32 	%r12438, %r12415;
	mov.u32 	%r12439, %r12415;
	mov.u32 	%r12440, %r12415;
	mov.u32 	%r12441, %r12415;
	mov.u32 	%r12442, %r12415;
	mov.u32 	%r12443, %r12415;
	mov.u32 	%r12444, %r12415;
	bra.uni 	BB3_325;

BB3_323:
	ld.local.u32 	%r12442, [%rd10+64];
	ld.local.u32 	%r12441, [%rd12+4];
	ld.local.u32 	%r12440, [%rd10+72];
	ld.local.u32 	%r12439, [%rd13+4];
	ld.local.u32 	%r12438, [%rd10+80];
	ld.local.u32 	%r12437, [%rd14+4];
	ld.local.u32 	%r12436, [%rd10+88];
	ld.local.u32 	%r12435, [%rd15+4];
	ld.local.u32 	%r12434, [%rd10+96];
	ld.local.u32 	%r12433, [%rd16+4];
	ld.local.u32 	%r12432, [%rd10+104];
	ld.local.u32 	%r12431, [%rd17+4];
	ld.local.u32 	%r12430, [%rd10+112];
	ld.local.u32 	%r12429, [%rd18+4];
	ld.local.u32 	%r12428, [%rd10+120];
	ld.local.u32 	%r12427, [%rd19+4];
	ld.local.u32 	%r12426, [%rd10+128];
	ld.local.u32 	%r12425, [%rd20+4];
	ld.local.u32 	%r12424, [%rd10+136];
	ld.local.u32 	%r12423, [%rd21+4];
	ld.local.u32 	%r12422, [%rd10+144];
	ld.local.u32 	%r12421, [%rd22+4];
	ld.local.u32 	%r12420, [%rd10+152];
	ld.local.u32 	%r12419, [%rd23+4];
	ld.local.u32 	%r12418, [%rd10+160];
	ld.local.u32 	%r12417, [%rd24+4];
	ld.local.u32 	%r12416, [%rd10+168];
	ld.local.u32 	%r12415, [%rd25+4];
	ld.const.u64 	%rd8836, [k_sha512+128];
	ld.const.u64 	%rd8835, [k_sha512+136];
	ld.const.u64 	%rd8834, [k_sha512+144];
	ld.const.u64 	%rd8833, [k_sha512+152];
	ld.const.u64 	%rd8832, [k_sha512+160];
	ld.const.u64 	%rd8831, [k_sha512+168];
	ld.const.u64 	%rd8830, [k_sha512+176];
	ld.const.u64 	%rd8829, [k_sha512+184];
	ld.const.u64 	%rd8828, [k_sha512+192];
	ld.const.u64 	%rd8827, [k_sha512+200];
	ld.const.u64 	%rd8826, [k_sha512+208];
	ld.const.u64 	%rd8825, [k_sha512+216];
	ld.const.u64 	%rd8824, [k_sha512+224];
	ld.const.u64 	%rd8823, [k_sha512+232];
	ld.const.u64 	%rd8822, [k_sha512+240];
	ld.const.u64 	%rd8821, [k_sha512+248];
	ld.const.u64 	%rd8820, [k_sha512+256];
	ld.const.u64 	%rd8819, [k_sha512+264];
	ld.const.u64 	%rd8818, [k_sha512+272];
	ld.const.u64 	%rd8817, [k_sha512+280];
	ld.const.u64 	%rd8816, [k_sha512+288];
	ld.const.u64 	%rd8815, [k_sha512+296];
	ld.const.u64 	%rd8814, [k_sha512+304];
	ld.const.u64 	%rd8813, [k_sha512+312];
	ld.const.u64 	%rd8812, [k_sha512+320];
	ld.const.u64 	%rd8811, [k_sha512+328];
	ld.const.u64 	%rd8810, [k_sha512+336];
	ld.const.u64 	%rd8809, [k_sha512+344];
	ld.const.u64 	%rd8808, [k_sha512+352];
	ld.const.u64 	%rd8807, [k_sha512+360];
	ld.const.u64 	%rd8806, [k_sha512+368];
	ld.const.u64 	%rd8805, [k_sha512+376];
	ld.const.u64 	%rd8804, [k_sha512+384];
	ld.const.u64 	%rd8803, [k_sha512+392];
	ld.const.u64 	%rd8802, [k_sha512+400];
	ld.const.u64 	%rd8801, [k_sha512+408];
	ld.const.u64 	%rd8800, [k_sha512+416];
	ld.const.u64 	%rd8799, [k_sha512+424];
	ld.const.u64 	%rd8798, [k_sha512+432];
	ld.const.u64 	%rd8797, [k_sha512+440];
	ld.const.u64 	%rd8796, [k_sha512+448];
	ld.const.u64 	%rd8795, [k_sha512+456];
	ld.const.u64 	%rd8794, [k_sha512+464];
	ld.const.u64 	%rd8793, [k_sha512+472];
	ld.const.u64 	%rd8792, [k_sha512+480];
	ld.const.u64 	%rd8791, [k_sha512+488];
	ld.const.u64 	%rd8790, [k_sha512+496];
	ld.const.u64 	%rd8789, [k_sha512+504];
	ld.const.u64 	%rd8788, [k_sha512+512];
	ld.const.u64 	%rd8787, [k_sha512+520];
	ld.const.u64 	%rd8786, [k_sha512+528];
	ld.const.u64 	%rd8785, [k_sha512+536];
	ld.const.u64 	%rd8784, [k_sha512+544];
	ld.const.u64 	%rd8783, [k_sha512+552];
	ld.const.u64 	%rd8782, [k_sha512+560];
	ld.const.u64 	%rd8781, [k_sha512+568];
	ld.const.u64 	%rd8780, [k_sha512+576];
	ld.const.u64 	%rd8779, [k_sha512+584];
	ld.const.u64 	%rd8778, [k_sha512+592];
	ld.const.u64 	%rd8777, [k_sha512+600];
	ld.const.u64 	%rd8776, [k_sha512+608];
	ld.const.u64 	%rd8775, [k_sha512+616];
	ld.const.u64 	%rd8774, [k_sha512+624];
	ld.const.u64 	%rd8773, [k_sha512+632];

BB3_325:
	mov.b32	%r12412, %envreg3;
	mov.u32 	%r12411, %ntid.x;
	mov.u32 	%r12410, %ctaid.x;
	mov.u32 	%r12409, %tid.x;
	mad.lo.s32 	%r12408, %r12410, %r12411, %r12412;
	add.s32 	%r12407, %r12408, %r12409;
	ld.param.u64 	%rd8772, [m11300_init_param_4];
	mov.u32 	%r3035, 0;
	st.local.u32 	[%rd10+176], %r3035;
	shl.b32 	%r3036, %r6, 3;
	st.local.u32 	[%rd26+4], %r3036;
	mov.b64	%rd3136, {%r12443, %r12444};
	mov.b64	%rd3137, {%r12441, %r12442};
	mov.b64	%rd3138, {%r12439, %r12440};
	mov.b64	%rd3139, {%r12437, %r12438};
	mov.b64	%rd3140, {%r12435, %r12436};
	mov.b64	%rd3141, {%r12433, %r12434};
	mov.b64	%rd3142, {%r12431, %r12432};
	mov.b64	%rd3143, {%r12429, %r12430};
	mov.b64	%rd3144, {%r12427, %r12428};
	mov.b64	%rd3145, {%r12425, %r12426};
	mov.b64	%rd3146, {%r12423, %r12424};
	mov.b64	%rd3147, {%r12421, %r12422};
	mov.b64	%rd3148, {%r12419, %r12420};
	mov.b64	%rd3149, {%r12417, %r12418};
	mov.b64	%rd3150, {%r12415, %r12416};
	mov.b64	%rd3151, {%r3036, %r3035};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3037,%dummy}, %rd8840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3038}, %rd8840;
	}
	shf.r.wrap.b32 	%r3039, %r3038, %r3037, 18;
	shf.r.wrap.b32 	%r3040, %r3037, %r3038, 18;
	mov.b64 	%rd3152, {%r3040, %r3039};
	shf.r.wrap.b32 	%r3041, %r3038, %r3037, 14;
	shf.r.wrap.b32 	%r3042, %r3037, %r3038, 14;
	mov.b64 	%rd3153, {%r3042, %r3041};
	xor.b64  	%rd3154, %rd3152, %rd3153;
	shf.l.wrap.b32 	%r3043, %r3037, %r3038, 23;
	shf.l.wrap.b32 	%r3044, %r3038, %r3037, 23;
	mov.b64 	%rd3155, {%r3044, %r3043};
	xor.b64  	%rd3156, %rd3154, %rd3155;
	xor.b64  	%rd3157, %rd8838, %rd8839;
	and.b64  	%rd3158, %rd3157, %rd8840;
	xor.b64  	%rd3159, %rd3158, %rd8838;
	add.s64 	%rd3160, %rd3159, %rd8837;
	add.s64 	%rd3161, %rd3160, %rd3136;
	add.s64 	%rd3162, %rd3161, %rd35;
	add.s64 	%rd3163, %rd3162, %rd3156;
	add.s64 	%rd3164, %rd3163, %rd8841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3045}, %rd8844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3046,%dummy}, %rd8844;
	}
	shf.l.wrap.b32 	%r3047, %r3046, %r3045, 30;
	shf.l.wrap.b32 	%r3048, %r3045, %r3046, 30;
	mov.b64 	%rd3165, {%r3048, %r3047};
	shf.r.wrap.b32 	%r3049, %r3045, %r3046, 28;
	shf.r.wrap.b32 	%r3050, %r3046, %r3045, 28;
	mov.b64 	%rd3166, {%r3050, %r3049};
	xor.b64  	%rd3167, %rd3165, %rd3166;
	shf.l.wrap.b32 	%r3051, %r3046, %r3045, 25;
	shf.l.wrap.b32 	%r3052, %r3045, %r3046, 25;
	mov.b64 	%rd3168, {%r3052, %r3051};
	xor.b64  	%rd3169, %rd3167, %rd3168;
	xor.b64  	%rd3170, %rd8843, %rd8844;
	xor.b64  	%rd3171, %rd8842, %rd8844;
	and.b64  	%rd3172, %rd3171, %rd3170;
	xor.b64  	%rd3173, %rd3172, %rd8844;
	add.s64 	%rd3174, %rd3163, %rd3173;
	add.s64 	%rd3175, %rd3174, %rd3169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3053,%dummy}, %rd3164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3054}, %rd3164;
	}
	shf.r.wrap.b32 	%r3055, %r3054, %r3053, 14;
	shf.r.wrap.b32 	%r3056, %r3053, %r3054, 14;
	mov.b64 	%rd3176, {%r3056, %r3055};
	shf.r.wrap.b32 	%r3057, %r3054, %r3053, 18;
	shf.r.wrap.b32 	%r3058, %r3053, %r3054, 18;
	mov.b64 	%rd3177, {%r3058, %r3057};
	xor.b64  	%rd3178, %rd3177, %rd3176;
	shf.l.wrap.b32 	%r3059, %r3053, %r3054, 23;
	shf.l.wrap.b32 	%r3060, %r3054, %r3053, 23;
	mov.b64 	%rd3179, {%r3060, %r3059};
	xor.b64  	%rd3180, %rd3178, %rd3179;
	xor.b64  	%rd3181, %rd8839, %rd8840;
	and.b64  	%rd3182, %rd3164, %rd3181;
	xor.b64  	%rd3183, %rd3182, %rd8839;
	add.s64 	%rd3184, %rd3137, %rd8838;
	add.s64 	%rd3185, %rd3184, %rd36;
	add.s64 	%rd3186, %rd3185, %rd3183;
	add.s64 	%rd3187, %rd3186, %rd3180;
	add.s64 	%rd3188, %rd3187, %rd8842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3061,%dummy}, %rd3175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3062}, %rd3175;
	}
	shf.r.wrap.b32 	%r3063, %r3062, %r3061, 28;
	shf.r.wrap.b32 	%r3064, %r3061, %r3062, 28;
	mov.b64 	%rd3189, {%r3064, %r3063};
	shf.l.wrap.b32 	%r3065, %r3061, %r3062, 30;
	shf.l.wrap.b32 	%r3066, %r3062, %r3061, 30;
	mov.b64 	%rd3190, {%r3066, %r3065};
	xor.b64  	%rd3191, %rd3190, %rd3189;
	shf.l.wrap.b32 	%r3067, %r3061, %r3062, 25;
	shf.l.wrap.b32 	%r3068, %r3062, %r3061, 25;
	mov.b64 	%rd3192, {%r3068, %r3067};
	xor.b64  	%rd3193, %rd3191, %rd3192;
	xor.b64  	%rd3194, %rd3175, %rd8843;
	xor.b64  	%rd3195, %rd3175, %rd8844;
	and.b64  	%rd3196, %rd3195, %rd3194;
	xor.b64  	%rd3197, %rd3196, %rd3175;
	add.s64 	%rd3198, %rd3187, %rd3197;
	add.s64 	%rd3199, %rd3198, %rd3193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3069,%dummy}, %rd3188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3070}, %rd3188;
	}
	shf.r.wrap.b32 	%r3071, %r3070, %r3069, 14;
	shf.r.wrap.b32 	%r3072, %r3069, %r3070, 14;
	mov.b64 	%rd3200, {%r3072, %r3071};
	shf.r.wrap.b32 	%r3073, %r3070, %r3069, 18;
	shf.r.wrap.b32 	%r3074, %r3069, %r3070, 18;
	mov.b64 	%rd3201, {%r3074, %r3073};
	xor.b64  	%rd3202, %rd3201, %rd3200;
	shf.l.wrap.b32 	%r3075, %r3069, %r3070, 23;
	shf.l.wrap.b32 	%r3076, %r3070, %r3069, 23;
	mov.b64 	%rd3203, {%r3076, %r3075};
	xor.b64  	%rd3204, %rd3202, %rd3203;
	xor.b64  	%rd3205, %rd3164, %rd8840;
	and.b64  	%rd3206, %rd3188, %rd3205;
	xor.b64  	%rd3207, %rd3206, %rd8840;
	add.s64 	%rd3208, %rd3138, %rd8839;
	add.s64 	%rd3209, %rd3208, %rd37;
	add.s64 	%rd3210, %rd3209, %rd3207;
	add.s64 	%rd3211, %rd3210, %rd3204;
	add.s64 	%rd3212, %rd3211, %rd8843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3077,%dummy}, %rd3199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3078}, %rd3199;
	}
	shf.r.wrap.b32 	%r3079, %r3078, %r3077, 28;
	shf.r.wrap.b32 	%r3080, %r3077, %r3078, 28;
	mov.b64 	%rd3213, {%r3080, %r3079};
	shf.l.wrap.b32 	%r3081, %r3077, %r3078, 30;
	shf.l.wrap.b32 	%r3082, %r3078, %r3077, 30;
	mov.b64 	%rd3214, {%r3082, %r3081};
	xor.b64  	%rd3215, %rd3214, %rd3213;
	shf.l.wrap.b32 	%r3083, %r3077, %r3078, 25;
	shf.l.wrap.b32 	%r3084, %r3078, %r3077, 25;
	mov.b64 	%rd3216, {%r3084, %r3083};
	xor.b64  	%rd3217, %rd3215, %rd3216;
	xor.b64  	%rd3218, %rd3199, %rd8844;
	xor.b64  	%rd3219, %rd3199, %rd3175;
	and.b64  	%rd3220, %rd3219, %rd3218;
	xor.b64  	%rd3221, %rd3220, %rd3199;
	add.s64 	%rd3222, %rd3211, %rd3221;
	add.s64 	%rd3223, %rd3222, %rd3217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3085,%dummy}, %rd3212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3086}, %rd3212;
	}
	shf.r.wrap.b32 	%r3087, %r3086, %r3085, 14;
	shf.r.wrap.b32 	%r3088, %r3085, %r3086, 14;
	mov.b64 	%rd3224, {%r3088, %r3087};
	shf.r.wrap.b32 	%r3089, %r3086, %r3085, 18;
	shf.r.wrap.b32 	%r3090, %r3085, %r3086, 18;
	mov.b64 	%rd3225, {%r3090, %r3089};
	xor.b64  	%rd3226, %rd3225, %rd3224;
	shf.l.wrap.b32 	%r3091, %r3085, %r3086, 23;
	shf.l.wrap.b32 	%r3092, %r3086, %r3085, 23;
	mov.b64 	%rd3227, {%r3092, %r3091};
	xor.b64  	%rd3228, %rd3226, %rd3227;
	xor.b64  	%rd3229, %rd3188, %rd3164;
	and.b64  	%rd3230, %rd3212, %rd3229;
	xor.b64  	%rd3231, %rd3230, %rd3164;
	add.s64 	%rd3232, %rd3139, %rd8840;
	add.s64 	%rd3233, %rd3232, %rd38;
	add.s64 	%rd3234, %rd3233, %rd3231;
	add.s64 	%rd3235, %rd3234, %rd3228;
	add.s64 	%rd3236, %rd3235, %rd8844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3093,%dummy}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3094}, %rd3223;
	}
	shf.r.wrap.b32 	%r3095, %r3094, %r3093, 28;
	shf.r.wrap.b32 	%r3096, %r3093, %r3094, 28;
	mov.b64 	%rd3237, {%r3096, %r3095};
	shf.l.wrap.b32 	%r3097, %r3093, %r3094, 30;
	shf.l.wrap.b32 	%r3098, %r3094, %r3093, 30;
	mov.b64 	%rd3238, {%r3098, %r3097};
	xor.b64  	%rd3239, %rd3238, %rd3237;
	shf.l.wrap.b32 	%r3099, %r3093, %r3094, 25;
	shf.l.wrap.b32 	%r3100, %r3094, %r3093, 25;
	mov.b64 	%rd3240, {%r3100, %r3099};
	xor.b64  	%rd3241, %rd3239, %rd3240;
	xor.b64  	%rd3242, %rd3223, %rd3175;
	xor.b64  	%rd3243, %rd3223, %rd3199;
	and.b64  	%rd3244, %rd3243, %rd3242;
	xor.b64  	%rd3245, %rd3244, %rd3223;
	add.s64 	%rd3246, %rd3235, %rd3245;
	add.s64 	%rd3247, %rd3246, %rd3241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3101,%dummy}, %rd3236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3102}, %rd3236;
	}
	shf.r.wrap.b32 	%r3103, %r3102, %r3101, 14;
	shf.r.wrap.b32 	%r3104, %r3101, %r3102, 14;
	mov.b64 	%rd3248, {%r3104, %r3103};
	shf.r.wrap.b32 	%r3105, %r3102, %r3101, 18;
	shf.r.wrap.b32 	%r3106, %r3101, %r3102, 18;
	mov.b64 	%rd3249, {%r3106, %r3105};
	xor.b64  	%rd3250, %rd3249, %rd3248;
	shf.l.wrap.b32 	%r3107, %r3101, %r3102, 23;
	shf.l.wrap.b32 	%r3108, %r3102, %r3101, 23;
	mov.b64 	%rd3251, {%r3108, %r3107};
	xor.b64  	%rd3252, %rd3250, %rd3251;
	xor.b64  	%rd3253, %rd3212, %rd3188;
	and.b64  	%rd3254, %rd3236, %rd3253;
	xor.b64  	%rd3255, %rd3254, %rd3188;
	add.s64 	%rd3256, %rd3164, %rd3140;
	add.s64 	%rd3257, %rd3256, %rd39;
	add.s64 	%rd3258, %rd3257, %rd3255;
	add.s64 	%rd3259, %rd3258, %rd3252;
	add.s64 	%rd3260, %rd3259, %rd3175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3109,%dummy}, %rd3247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3110}, %rd3247;
	}
	shf.r.wrap.b32 	%r3111, %r3110, %r3109, 28;
	shf.r.wrap.b32 	%r3112, %r3109, %r3110, 28;
	mov.b64 	%rd3261, {%r3112, %r3111};
	shf.l.wrap.b32 	%r3113, %r3109, %r3110, 30;
	shf.l.wrap.b32 	%r3114, %r3110, %r3109, 30;
	mov.b64 	%rd3262, {%r3114, %r3113};
	xor.b64  	%rd3263, %rd3262, %rd3261;
	shf.l.wrap.b32 	%r3115, %r3109, %r3110, 25;
	shf.l.wrap.b32 	%r3116, %r3110, %r3109, 25;
	mov.b64 	%rd3264, {%r3116, %r3115};
	xor.b64  	%rd3265, %rd3263, %rd3264;
	xor.b64  	%rd3266, %rd3247, %rd3199;
	xor.b64  	%rd3267, %rd3247, %rd3223;
	and.b64  	%rd3268, %rd3267, %rd3266;
	xor.b64  	%rd3269, %rd3268, %rd3247;
	add.s64 	%rd3270, %rd3259, %rd3269;
	add.s64 	%rd3271, %rd3270, %rd3265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3117,%dummy}, %rd3260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3118}, %rd3260;
	}
	shf.r.wrap.b32 	%r3119, %r3118, %r3117, 14;
	shf.r.wrap.b32 	%r3120, %r3117, %r3118, 14;
	mov.b64 	%rd3272, {%r3120, %r3119};
	shf.r.wrap.b32 	%r3121, %r3118, %r3117, 18;
	shf.r.wrap.b32 	%r3122, %r3117, %r3118, 18;
	mov.b64 	%rd3273, {%r3122, %r3121};
	xor.b64  	%rd3274, %rd3273, %rd3272;
	shf.l.wrap.b32 	%r3123, %r3117, %r3118, 23;
	shf.l.wrap.b32 	%r3124, %r3118, %r3117, 23;
	mov.b64 	%rd3275, {%r3124, %r3123};
	xor.b64  	%rd3276, %rd3274, %rd3275;
	xor.b64  	%rd3277, %rd3236, %rd3212;
	and.b64  	%rd3278, %rd3260, %rd3277;
	xor.b64  	%rd3279, %rd3278, %rd3212;
	add.s64 	%rd3280, %rd3188, %rd3141;
	add.s64 	%rd3281, %rd3280, %rd40;
	add.s64 	%rd3282, %rd3281, %rd3279;
	add.s64 	%rd3283, %rd3282, %rd3276;
	add.s64 	%rd3284, %rd3283, %rd3199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3125,%dummy}, %rd3271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3126}, %rd3271;
	}
	shf.r.wrap.b32 	%r3127, %r3126, %r3125, 28;
	shf.r.wrap.b32 	%r3128, %r3125, %r3126, 28;
	mov.b64 	%rd3285, {%r3128, %r3127};
	shf.l.wrap.b32 	%r3129, %r3125, %r3126, 30;
	shf.l.wrap.b32 	%r3130, %r3126, %r3125, 30;
	mov.b64 	%rd3286, {%r3130, %r3129};
	xor.b64  	%rd3287, %rd3286, %rd3285;
	shf.l.wrap.b32 	%r3131, %r3125, %r3126, 25;
	shf.l.wrap.b32 	%r3132, %r3126, %r3125, 25;
	mov.b64 	%rd3288, {%r3132, %r3131};
	xor.b64  	%rd3289, %rd3287, %rd3288;
	xor.b64  	%rd3290, %rd3271, %rd3223;
	xor.b64  	%rd3291, %rd3271, %rd3247;
	and.b64  	%rd3292, %rd3291, %rd3290;
	xor.b64  	%rd3293, %rd3292, %rd3271;
	add.s64 	%rd3294, %rd3283, %rd3293;
	add.s64 	%rd3295, %rd3294, %rd3289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3133,%dummy}, %rd3284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3134}, %rd3284;
	}
	shf.r.wrap.b32 	%r3135, %r3134, %r3133, 14;
	shf.r.wrap.b32 	%r3136, %r3133, %r3134, 14;
	mov.b64 	%rd3296, {%r3136, %r3135};
	shf.r.wrap.b32 	%r3137, %r3134, %r3133, 18;
	shf.r.wrap.b32 	%r3138, %r3133, %r3134, 18;
	mov.b64 	%rd3297, {%r3138, %r3137};
	xor.b64  	%rd3298, %rd3297, %rd3296;
	shf.l.wrap.b32 	%r3139, %r3133, %r3134, 23;
	shf.l.wrap.b32 	%r3140, %r3134, %r3133, 23;
	mov.b64 	%rd3299, {%r3140, %r3139};
	xor.b64  	%rd3300, %rd3298, %rd3299;
	xor.b64  	%rd3301, %rd3260, %rd3236;
	and.b64  	%rd3302, %rd3284, %rd3301;
	xor.b64  	%rd3303, %rd3302, %rd3236;
	add.s64 	%rd3304, %rd3212, %rd3142;
	add.s64 	%rd3305, %rd3304, %rd41;
	add.s64 	%rd3306, %rd3305, %rd3303;
	add.s64 	%rd3307, %rd3306, %rd3300;
	add.s64 	%rd3308, %rd3307, %rd3223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3141,%dummy}, %rd3295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3142}, %rd3295;
	}
	shf.r.wrap.b32 	%r3143, %r3142, %r3141, 28;
	shf.r.wrap.b32 	%r3144, %r3141, %r3142, 28;
	mov.b64 	%rd3309, {%r3144, %r3143};
	shf.l.wrap.b32 	%r3145, %r3141, %r3142, 30;
	shf.l.wrap.b32 	%r3146, %r3142, %r3141, 30;
	mov.b64 	%rd3310, {%r3146, %r3145};
	xor.b64  	%rd3311, %rd3310, %rd3309;
	shf.l.wrap.b32 	%r3147, %r3141, %r3142, 25;
	shf.l.wrap.b32 	%r3148, %r3142, %r3141, 25;
	mov.b64 	%rd3312, {%r3148, %r3147};
	xor.b64  	%rd3313, %rd3311, %rd3312;
	xor.b64  	%rd3314, %rd3295, %rd3247;
	xor.b64  	%rd3315, %rd3295, %rd3271;
	and.b64  	%rd3316, %rd3315, %rd3314;
	xor.b64  	%rd3317, %rd3316, %rd3295;
	add.s64 	%rd3318, %rd3307, %rd3317;
	add.s64 	%rd3319, %rd3318, %rd3313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3149,%dummy}, %rd3308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3150}, %rd3308;
	}
	shf.r.wrap.b32 	%r3151, %r3150, %r3149, 14;
	shf.r.wrap.b32 	%r3152, %r3149, %r3150, 14;
	mov.b64 	%rd3320, {%r3152, %r3151};
	shf.r.wrap.b32 	%r3153, %r3150, %r3149, 18;
	shf.r.wrap.b32 	%r3154, %r3149, %r3150, 18;
	mov.b64 	%rd3321, {%r3154, %r3153};
	xor.b64  	%rd3322, %rd3321, %rd3320;
	shf.l.wrap.b32 	%r3155, %r3149, %r3150, 23;
	shf.l.wrap.b32 	%r3156, %r3150, %r3149, 23;
	mov.b64 	%rd3323, {%r3156, %r3155};
	xor.b64  	%rd3324, %rd3322, %rd3323;
	xor.b64  	%rd3325, %rd3284, %rd3260;
	and.b64  	%rd3326, %rd3308, %rd3325;
	xor.b64  	%rd3327, %rd3326, %rd3260;
	add.s64 	%rd3328, %rd3236, %rd3143;
	add.s64 	%rd3329, %rd3328, %rd42;
	add.s64 	%rd3330, %rd3329, %rd3327;
	add.s64 	%rd3331, %rd3330, %rd3324;
	add.s64 	%rd3332, %rd3331, %rd3247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3157,%dummy}, %rd3319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3158}, %rd3319;
	}
	shf.r.wrap.b32 	%r3159, %r3158, %r3157, 28;
	shf.r.wrap.b32 	%r3160, %r3157, %r3158, 28;
	mov.b64 	%rd3333, {%r3160, %r3159};
	shf.l.wrap.b32 	%r3161, %r3157, %r3158, 30;
	shf.l.wrap.b32 	%r3162, %r3158, %r3157, 30;
	mov.b64 	%rd3334, {%r3162, %r3161};
	xor.b64  	%rd3335, %rd3334, %rd3333;
	shf.l.wrap.b32 	%r3163, %r3157, %r3158, 25;
	shf.l.wrap.b32 	%r3164, %r3158, %r3157, 25;
	mov.b64 	%rd3336, {%r3164, %r3163};
	xor.b64  	%rd3337, %rd3335, %rd3336;
	xor.b64  	%rd3338, %rd3319, %rd3271;
	xor.b64  	%rd3339, %rd3319, %rd3295;
	and.b64  	%rd3340, %rd3339, %rd3338;
	xor.b64  	%rd3341, %rd3340, %rd3319;
	add.s64 	%rd3342, %rd3331, %rd3341;
	add.s64 	%rd3343, %rd3342, %rd3337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3165,%dummy}, %rd3332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3166}, %rd3332;
	}
	shf.r.wrap.b32 	%r3167, %r3166, %r3165, 14;
	shf.r.wrap.b32 	%r3168, %r3165, %r3166, 14;
	mov.b64 	%rd3344, {%r3168, %r3167};
	shf.r.wrap.b32 	%r3169, %r3166, %r3165, 18;
	shf.r.wrap.b32 	%r3170, %r3165, %r3166, 18;
	mov.b64 	%rd3345, {%r3170, %r3169};
	xor.b64  	%rd3346, %rd3345, %rd3344;
	shf.l.wrap.b32 	%r3171, %r3165, %r3166, 23;
	shf.l.wrap.b32 	%r3172, %r3166, %r3165, 23;
	mov.b64 	%rd3347, {%r3172, %r3171};
	xor.b64  	%rd3348, %rd3346, %rd3347;
	xor.b64  	%rd3349, %rd3308, %rd3284;
	and.b64  	%rd3350, %rd3332, %rd3349;
	xor.b64  	%rd3351, %rd3350, %rd3284;
	add.s64 	%rd3352, %rd3260, %rd3144;
	add.s64 	%rd3353, %rd3352, %rd43;
	add.s64 	%rd3354, %rd3353, %rd3351;
	add.s64 	%rd3355, %rd3354, %rd3348;
	add.s64 	%rd3356, %rd3355, %rd3271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3173,%dummy}, %rd3343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3174}, %rd3343;
	}
	shf.r.wrap.b32 	%r3175, %r3174, %r3173, 28;
	shf.r.wrap.b32 	%r3176, %r3173, %r3174, 28;
	mov.b64 	%rd3357, {%r3176, %r3175};
	shf.l.wrap.b32 	%r3177, %r3173, %r3174, 30;
	shf.l.wrap.b32 	%r3178, %r3174, %r3173, 30;
	mov.b64 	%rd3358, {%r3178, %r3177};
	xor.b64  	%rd3359, %rd3358, %rd3357;
	shf.l.wrap.b32 	%r3179, %r3173, %r3174, 25;
	shf.l.wrap.b32 	%r3180, %r3174, %r3173, 25;
	mov.b64 	%rd3360, {%r3180, %r3179};
	xor.b64  	%rd3361, %rd3359, %rd3360;
	xor.b64  	%rd3362, %rd3343, %rd3295;
	xor.b64  	%rd3363, %rd3343, %rd3319;
	and.b64  	%rd3364, %rd3363, %rd3362;
	xor.b64  	%rd3365, %rd3364, %rd3343;
	add.s64 	%rd3366, %rd3355, %rd3365;
	add.s64 	%rd3367, %rd3366, %rd3361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3181,%dummy}, %rd3356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3182}, %rd3356;
	}
	shf.r.wrap.b32 	%r3183, %r3182, %r3181, 14;
	shf.r.wrap.b32 	%r3184, %r3181, %r3182, 14;
	mov.b64 	%rd3368, {%r3184, %r3183};
	shf.r.wrap.b32 	%r3185, %r3182, %r3181, 18;
	shf.r.wrap.b32 	%r3186, %r3181, %r3182, 18;
	mov.b64 	%rd3369, {%r3186, %r3185};
	xor.b64  	%rd3370, %rd3369, %rd3368;
	shf.l.wrap.b32 	%r3187, %r3181, %r3182, 23;
	shf.l.wrap.b32 	%r3188, %r3182, %r3181, 23;
	mov.b64 	%rd3371, {%r3188, %r3187};
	xor.b64  	%rd3372, %rd3370, %rd3371;
	xor.b64  	%rd3373, %rd3332, %rd3308;
	and.b64  	%rd3374, %rd3356, %rd3373;
	xor.b64  	%rd3375, %rd3374, %rd3308;
	add.s64 	%rd3376, %rd3284, %rd3145;
	add.s64 	%rd3377, %rd3376, %rd44;
	add.s64 	%rd3378, %rd3377, %rd3375;
	add.s64 	%rd3379, %rd3378, %rd3372;
	add.s64 	%rd3380, %rd3379, %rd3295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3189,%dummy}, %rd3367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3190}, %rd3367;
	}
	shf.r.wrap.b32 	%r3191, %r3190, %r3189, 28;
	shf.r.wrap.b32 	%r3192, %r3189, %r3190, 28;
	mov.b64 	%rd3381, {%r3192, %r3191};
	shf.l.wrap.b32 	%r3193, %r3189, %r3190, 30;
	shf.l.wrap.b32 	%r3194, %r3190, %r3189, 30;
	mov.b64 	%rd3382, {%r3194, %r3193};
	xor.b64  	%rd3383, %rd3382, %rd3381;
	shf.l.wrap.b32 	%r3195, %r3189, %r3190, 25;
	shf.l.wrap.b32 	%r3196, %r3190, %r3189, 25;
	mov.b64 	%rd3384, {%r3196, %r3195};
	xor.b64  	%rd3385, %rd3383, %rd3384;
	xor.b64  	%rd3386, %rd3367, %rd3319;
	xor.b64  	%rd3387, %rd3367, %rd3343;
	and.b64  	%rd3388, %rd3387, %rd3386;
	xor.b64  	%rd3389, %rd3388, %rd3367;
	add.s64 	%rd3390, %rd3379, %rd3389;
	add.s64 	%rd3391, %rd3390, %rd3385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3197,%dummy}, %rd3380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3198}, %rd3380;
	}
	shf.r.wrap.b32 	%r3199, %r3198, %r3197, 14;
	shf.r.wrap.b32 	%r3200, %r3197, %r3198, 14;
	mov.b64 	%rd3392, {%r3200, %r3199};
	shf.r.wrap.b32 	%r3201, %r3198, %r3197, 18;
	shf.r.wrap.b32 	%r3202, %r3197, %r3198, 18;
	mov.b64 	%rd3393, {%r3202, %r3201};
	xor.b64  	%rd3394, %rd3393, %rd3392;
	shf.l.wrap.b32 	%r3203, %r3197, %r3198, 23;
	shf.l.wrap.b32 	%r3204, %r3198, %r3197, 23;
	mov.b64 	%rd3395, {%r3204, %r3203};
	xor.b64  	%rd3396, %rd3394, %rd3395;
	xor.b64  	%rd3397, %rd3356, %rd3332;
	and.b64  	%rd3398, %rd3380, %rd3397;
	xor.b64  	%rd3399, %rd3398, %rd3332;
	add.s64 	%rd3400, %rd3308, %rd3146;
	add.s64 	%rd3401, %rd3400, %rd45;
	add.s64 	%rd3402, %rd3401, %rd3399;
	add.s64 	%rd3403, %rd3402, %rd3396;
	add.s64 	%rd3404, %rd3403, %rd3319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3205,%dummy}, %rd3391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3206}, %rd3391;
	}
	shf.r.wrap.b32 	%r3207, %r3206, %r3205, 28;
	shf.r.wrap.b32 	%r3208, %r3205, %r3206, 28;
	mov.b64 	%rd3405, {%r3208, %r3207};
	shf.l.wrap.b32 	%r3209, %r3205, %r3206, 30;
	shf.l.wrap.b32 	%r3210, %r3206, %r3205, 30;
	mov.b64 	%rd3406, {%r3210, %r3209};
	xor.b64  	%rd3407, %rd3406, %rd3405;
	shf.l.wrap.b32 	%r3211, %r3205, %r3206, 25;
	shf.l.wrap.b32 	%r3212, %r3206, %r3205, 25;
	mov.b64 	%rd3408, {%r3212, %r3211};
	xor.b64  	%rd3409, %rd3407, %rd3408;
	xor.b64  	%rd3410, %rd3391, %rd3343;
	xor.b64  	%rd3411, %rd3391, %rd3367;
	and.b64  	%rd3412, %rd3411, %rd3410;
	xor.b64  	%rd3413, %rd3412, %rd3391;
	add.s64 	%rd3414, %rd3403, %rd3413;
	add.s64 	%rd3415, %rd3414, %rd3409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3213,%dummy}, %rd3404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3214}, %rd3404;
	}
	shf.r.wrap.b32 	%r3215, %r3214, %r3213, 14;
	shf.r.wrap.b32 	%r3216, %r3213, %r3214, 14;
	mov.b64 	%rd3416, {%r3216, %r3215};
	shf.r.wrap.b32 	%r3217, %r3214, %r3213, 18;
	shf.r.wrap.b32 	%r3218, %r3213, %r3214, 18;
	mov.b64 	%rd3417, {%r3218, %r3217};
	xor.b64  	%rd3418, %rd3417, %rd3416;
	shf.l.wrap.b32 	%r3219, %r3213, %r3214, 23;
	shf.l.wrap.b32 	%r3220, %r3214, %r3213, 23;
	mov.b64 	%rd3419, {%r3220, %r3219};
	xor.b64  	%rd3420, %rd3418, %rd3419;
	xor.b64  	%rd3421, %rd3380, %rd3356;
	and.b64  	%rd3422, %rd3404, %rd3421;
	xor.b64  	%rd3423, %rd3422, %rd3356;
	add.s64 	%rd3424, %rd3332, %rd3147;
	add.s64 	%rd3425, %rd3424, %rd46;
	add.s64 	%rd3426, %rd3425, %rd3423;
	add.s64 	%rd3427, %rd3426, %rd3420;
	add.s64 	%rd3428, %rd3427, %rd3343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3221,%dummy}, %rd3415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3222}, %rd3415;
	}
	shf.r.wrap.b32 	%r3223, %r3222, %r3221, 28;
	shf.r.wrap.b32 	%r3224, %r3221, %r3222, 28;
	mov.b64 	%rd3429, {%r3224, %r3223};
	shf.l.wrap.b32 	%r3225, %r3221, %r3222, 30;
	shf.l.wrap.b32 	%r3226, %r3222, %r3221, 30;
	mov.b64 	%rd3430, {%r3226, %r3225};
	xor.b64  	%rd3431, %rd3430, %rd3429;
	shf.l.wrap.b32 	%r3227, %r3221, %r3222, 25;
	shf.l.wrap.b32 	%r3228, %r3222, %r3221, 25;
	mov.b64 	%rd3432, {%r3228, %r3227};
	xor.b64  	%rd3433, %rd3431, %rd3432;
	xor.b64  	%rd3434, %rd3415, %rd3367;
	xor.b64  	%rd3435, %rd3415, %rd3391;
	and.b64  	%rd3436, %rd3435, %rd3434;
	xor.b64  	%rd3437, %rd3436, %rd3415;
	add.s64 	%rd3438, %rd3427, %rd3437;
	add.s64 	%rd3439, %rd3438, %rd3433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3229,%dummy}, %rd3428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3230}, %rd3428;
	}
	shf.r.wrap.b32 	%r3231, %r3230, %r3229, 14;
	shf.r.wrap.b32 	%r3232, %r3229, %r3230, 14;
	mov.b64 	%rd3440, {%r3232, %r3231};
	shf.r.wrap.b32 	%r3233, %r3230, %r3229, 18;
	shf.r.wrap.b32 	%r3234, %r3229, %r3230, 18;
	mov.b64 	%rd3441, {%r3234, %r3233};
	xor.b64  	%rd3442, %rd3441, %rd3440;
	shf.l.wrap.b32 	%r3235, %r3229, %r3230, 23;
	shf.l.wrap.b32 	%r3236, %r3230, %r3229, 23;
	mov.b64 	%rd3443, {%r3236, %r3235};
	xor.b64  	%rd3444, %rd3442, %rd3443;
	xor.b64  	%rd3445, %rd3404, %rd3380;
	and.b64  	%rd3446, %rd3428, %rd3445;
	xor.b64  	%rd3447, %rd3446, %rd3380;
	add.s64 	%rd3448, %rd3356, %rd3148;
	add.s64 	%rd3449, %rd3448, %rd47;
	add.s64 	%rd3450, %rd3449, %rd3447;
	add.s64 	%rd3451, %rd3450, %rd3444;
	add.s64 	%rd3452, %rd3451, %rd3367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3237,%dummy}, %rd3439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3238}, %rd3439;
	}
	shf.r.wrap.b32 	%r3239, %r3238, %r3237, 28;
	shf.r.wrap.b32 	%r3240, %r3237, %r3238, 28;
	mov.b64 	%rd3453, {%r3240, %r3239};
	shf.l.wrap.b32 	%r3241, %r3237, %r3238, 30;
	shf.l.wrap.b32 	%r3242, %r3238, %r3237, 30;
	mov.b64 	%rd3454, {%r3242, %r3241};
	xor.b64  	%rd3455, %rd3454, %rd3453;
	shf.l.wrap.b32 	%r3243, %r3237, %r3238, 25;
	shf.l.wrap.b32 	%r3244, %r3238, %r3237, 25;
	mov.b64 	%rd3456, {%r3244, %r3243};
	xor.b64  	%rd3457, %rd3455, %rd3456;
	xor.b64  	%rd3458, %rd3439, %rd3391;
	xor.b64  	%rd3459, %rd3439, %rd3415;
	and.b64  	%rd3460, %rd3459, %rd3458;
	xor.b64  	%rd3461, %rd3460, %rd3439;
	add.s64 	%rd3462, %rd3451, %rd3461;
	add.s64 	%rd3463, %rd3462, %rd3457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3245,%dummy}, %rd3452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3246}, %rd3452;
	}
	shf.r.wrap.b32 	%r3247, %r3246, %r3245, 14;
	shf.r.wrap.b32 	%r3248, %r3245, %r3246, 14;
	mov.b64 	%rd3464, {%r3248, %r3247};
	shf.r.wrap.b32 	%r3249, %r3246, %r3245, 18;
	shf.r.wrap.b32 	%r3250, %r3245, %r3246, 18;
	mov.b64 	%rd3465, {%r3250, %r3249};
	xor.b64  	%rd3466, %rd3465, %rd3464;
	shf.l.wrap.b32 	%r3251, %r3245, %r3246, 23;
	shf.l.wrap.b32 	%r3252, %r3246, %r3245, 23;
	mov.b64 	%rd3467, {%r3252, %r3251};
	xor.b64  	%rd3468, %rd3466, %rd3467;
	xor.b64  	%rd3469, %rd3428, %rd3404;
	and.b64  	%rd3470, %rd3452, %rd3469;
	xor.b64  	%rd3471, %rd3470, %rd3404;
	add.s64 	%rd3472, %rd3380, %rd3149;
	add.s64 	%rd3473, %rd3472, %rd48;
	add.s64 	%rd3474, %rd3473, %rd3471;
	add.s64 	%rd3475, %rd3474, %rd3468;
	add.s64 	%rd3476, %rd3475, %rd3391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3253,%dummy}, %rd3463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3254}, %rd3463;
	}
	shf.r.wrap.b32 	%r3255, %r3254, %r3253, 28;
	shf.r.wrap.b32 	%r3256, %r3253, %r3254, 28;
	mov.b64 	%rd3477, {%r3256, %r3255};
	shf.l.wrap.b32 	%r3257, %r3253, %r3254, 30;
	shf.l.wrap.b32 	%r3258, %r3254, %r3253, 30;
	mov.b64 	%rd3478, {%r3258, %r3257};
	xor.b64  	%rd3479, %rd3478, %rd3477;
	shf.l.wrap.b32 	%r3259, %r3253, %r3254, 25;
	shf.l.wrap.b32 	%r3260, %r3254, %r3253, 25;
	mov.b64 	%rd3480, {%r3260, %r3259};
	xor.b64  	%rd3481, %rd3479, %rd3480;
	xor.b64  	%rd3482, %rd3463, %rd3415;
	xor.b64  	%rd3483, %rd3463, %rd3439;
	and.b64  	%rd3484, %rd3483, %rd3482;
	xor.b64  	%rd3485, %rd3484, %rd3463;
	add.s64 	%rd3486, %rd3475, %rd3485;
	add.s64 	%rd3487, %rd3486, %rd3481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3261,%dummy}, %rd3476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3262}, %rd3476;
	}
	shf.r.wrap.b32 	%r3263, %r3262, %r3261, 14;
	shf.r.wrap.b32 	%r3264, %r3261, %r3262, 14;
	mov.b64 	%rd3488, {%r3264, %r3263};
	shf.r.wrap.b32 	%r3265, %r3262, %r3261, 18;
	shf.r.wrap.b32 	%r3266, %r3261, %r3262, 18;
	mov.b64 	%rd3489, {%r3266, %r3265};
	xor.b64  	%rd3490, %rd3489, %rd3488;
	shf.l.wrap.b32 	%r3267, %r3261, %r3262, 23;
	shf.l.wrap.b32 	%r3268, %r3262, %r3261, 23;
	mov.b64 	%rd3491, {%r3268, %r3267};
	xor.b64  	%rd3492, %rd3490, %rd3491;
	xor.b64  	%rd3493, %rd3452, %rd3428;
	and.b64  	%rd3494, %rd3476, %rd3493;
	xor.b64  	%rd3495, %rd3494, %rd3428;
	add.s64 	%rd3496, %rd3404, %rd3150;
	add.s64 	%rd3497, %rd3496, %rd49;
	add.s64 	%rd3498, %rd3497, %rd3495;
	add.s64 	%rd3499, %rd3498, %rd3492;
	add.s64 	%rd3500, %rd3499, %rd3415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3269,%dummy}, %rd3487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3270}, %rd3487;
	}
	shf.r.wrap.b32 	%r3271, %r3270, %r3269, 28;
	shf.r.wrap.b32 	%r3272, %r3269, %r3270, 28;
	mov.b64 	%rd3501, {%r3272, %r3271};
	shf.l.wrap.b32 	%r3273, %r3269, %r3270, 30;
	shf.l.wrap.b32 	%r3274, %r3270, %r3269, 30;
	mov.b64 	%rd3502, {%r3274, %r3273};
	xor.b64  	%rd3503, %rd3502, %rd3501;
	shf.l.wrap.b32 	%r3275, %r3269, %r3270, 25;
	shf.l.wrap.b32 	%r3276, %r3270, %r3269, 25;
	mov.b64 	%rd3504, {%r3276, %r3275};
	xor.b64  	%rd3505, %rd3503, %rd3504;
	xor.b64  	%rd3506, %rd3487, %rd3439;
	xor.b64  	%rd3507, %rd3487, %rd3463;
	and.b64  	%rd3508, %rd3507, %rd3506;
	xor.b64  	%rd3509, %rd3508, %rd3487;
	add.s64 	%rd3510, %rd3499, %rd3509;
	add.s64 	%rd3511, %rd3510, %rd3505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3277,%dummy}, %rd3500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3278}, %rd3500;
	}
	shf.r.wrap.b32 	%r3279, %r3278, %r3277, 14;
	shf.r.wrap.b32 	%r3280, %r3277, %r3278, 14;
	mov.b64 	%rd3512, {%r3280, %r3279};
	shf.r.wrap.b32 	%r3281, %r3278, %r3277, 18;
	shf.r.wrap.b32 	%r3282, %r3277, %r3278, 18;
	mov.b64 	%rd3513, {%r3282, %r3281};
	xor.b64  	%rd3514, %rd3513, %rd3512;
	shf.l.wrap.b32 	%r3283, %r3277, %r3278, 23;
	shf.l.wrap.b32 	%r3284, %r3278, %r3277, 23;
	mov.b64 	%rd3515, {%r3284, %r3283};
	xor.b64  	%rd3516, %rd3514, %rd3515;
	xor.b64  	%rd3517, %rd3476, %rd3452;
	and.b64  	%rd3518, %rd3500, %rd3517;
	xor.b64  	%rd3519, %rd3518, %rd3452;
	add.s64 	%rd3520, %rd3428, %rd3151;
	add.s64 	%rd3521, %rd3520, %rd50;
	add.s64 	%rd3522, %rd3521, %rd3519;
	add.s64 	%rd3523, %rd3522, %rd3516;
	add.s64 	%rd3524, %rd3523, %rd3439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3285,%dummy}, %rd3511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3286}, %rd3511;
	}
	shf.r.wrap.b32 	%r3287, %r3286, %r3285, 28;
	shf.r.wrap.b32 	%r3288, %r3285, %r3286, 28;
	mov.b64 	%rd3525, {%r3288, %r3287};
	shf.l.wrap.b32 	%r3289, %r3285, %r3286, 30;
	shf.l.wrap.b32 	%r3290, %r3286, %r3285, 30;
	mov.b64 	%rd3526, {%r3290, %r3289};
	xor.b64  	%rd3527, %rd3526, %rd3525;
	shf.l.wrap.b32 	%r3291, %r3285, %r3286, 25;
	shf.l.wrap.b32 	%r3292, %r3286, %r3285, 25;
	mov.b64 	%rd3528, {%r3292, %r3291};
	xor.b64  	%rd3529, %rd3527, %rd3528;
	xor.b64  	%rd3530, %rd3511, %rd3463;
	xor.b64  	%rd3531, %rd3511, %rd3487;
	and.b64  	%rd3532, %rd3531, %rd3530;
	xor.b64  	%rd3533, %rd3532, %rd3511;
	add.s64 	%rd3534, %rd3523, %rd3533;
	add.s64 	%rd3535, %rd3534, %rd3529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3293,%dummy}, %rd3150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3294}, %rd3150;
	}
	shf.r.wrap.b32 	%r3295, %r3294, %r3293, 19;
	shf.r.wrap.b32 	%r3296, %r3293, %r3294, 19;
	mov.b64 	%rd3536, {%r3296, %r3295};
	shf.l.wrap.b32 	%r3297, %r3293, %r3294, 3;
	shf.l.wrap.b32 	%r3298, %r3294, %r3293, 3;
	mov.b64 	%rd3537, {%r3298, %r3297};
	shr.u64 	%rd3538, %rd3150, 6;
	xor.b64  	%rd3539, %rd3536, %rd3538;
	xor.b64  	%rd3540, %rd3539, %rd3537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3299,%dummy}, %rd3137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3300}, %rd3137;
	}
	shf.r.wrap.b32 	%r3301, %r3300, %r3299, 1;
	shf.r.wrap.b32 	%r3302, %r3299, %r3300, 1;
	mov.b64 	%rd3541, {%r3302, %r3301};
	shf.r.wrap.b32 	%r3303, %r3300, %r3299, 8;
	shf.r.wrap.b32 	%r3304, %r3299, %r3300, 8;
	mov.b64 	%rd3542, {%r3304, %r3303};
	shr.u64 	%rd3543, %rd3137, 7;
	xor.b64  	%rd3544, %rd3541, %rd3543;
	xor.b64  	%rd3545, %rd3544, %rd3542;
	add.s64 	%rd3546, %rd3145, %rd3136;
	add.s64 	%rd3547, %rd3546, %rd3540;
	add.s64 	%rd3548, %rd3547, %rd3545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3305,%dummy}, %rd3151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3306}, %rd3151;
	}
	shf.r.wrap.b32 	%r3307, %r3306, %r3305, 19;
	shf.r.wrap.b32 	%r3308, %r3305, %r3306, 19;
	mov.b64 	%rd3549, {%r3308, %r3307};
	shf.l.wrap.b32 	%r3309, %r3305, %r3306, 3;
	shf.l.wrap.b32 	%r3310, %r3306, %r3305, 3;
	mov.b64 	%rd3550, {%r3310, %r3309};
	shr.u64 	%rd3551, %rd3151, 6;
	xor.b64  	%rd3552, %rd3549, %rd3551;
	xor.b64  	%rd3553, %rd3552, %rd3550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3311,%dummy}, %rd3138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3312}, %rd3138;
	}
	shf.r.wrap.b32 	%r3313, %r3312, %r3311, 1;
	shf.r.wrap.b32 	%r3314, %r3311, %r3312, 1;
	mov.b64 	%rd3554, {%r3314, %r3313};
	shf.r.wrap.b32 	%r3315, %r3312, %r3311, 8;
	shf.r.wrap.b32 	%r3316, %r3311, %r3312, 8;
	mov.b64 	%rd3555, {%r3316, %r3315};
	shr.u64 	%rd3556, %rd3138, 7;
	xor.b64  	%rd3557, %rd3554, %rd3556;
	xor.b64  	%rd3558, %rd3557, %rd3555;
	add.s64 	%rd3559, %rd3146, %rd3137;
	add.s64 	%rd3560, %rd3559, %rd3553;
	add.s64 	%rd3561, %rd3560, %rd3558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3317,%dummy}, %rd3548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3318}, %rd3548;
	}
	shf.r.wrap.b32 	%r3319, %r3318, %r3317, 19;
	shf.r.wrap.b32 	%r3320, %r3317, %r3318, 19;
	mov.b64 	%rd3562, {%r3320, %r3319};
	shf.l.wrap.b32 	%r3321, %r3317, %r3318, 3;
	shf.l.wrap.b32 	%r3322, %r3318, %r3317, 3;
	mov.b64 	%rd3563, {%r3322, %r3321};
	shr.u64 	%rd3564, %rd3548, 6;
	xor.b64  	%rd3565, %rd3562, %rd3564;
	xor.b64  	%rd3566, %rd3565, %rd3563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3323,%dummy}, %rd3139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3324}, %rd3139;
	}
	shf.r.wrap.b32 	%r3325, %r3324, %r3323, 1;
	shf.r.wrap.b32 	%r3326, %r3323, %r3324, 1;
	mov.b64 	%rd3567, {%r3326, %r3325};
	shf.r.wrap.b32 	%r3327, %r3324, %r3323, 8;
	shf.r.wrap.b32 	%r3328, %r3323, %r3324, 8;
	mov.b64 	%rd3568, {%r3328, %r3327};
	shr.u64 	%rd3569, %rd3139, 7;
	xor.b64  	%rd3570, %rd3567, %rd3569;
	xor.b64  	%rd3571, %rd3570, %rd3568;
	add.s64 	%rd3572, %rd3147, %rd3138;
	add.s64 	%rd3573, %rd3572, %rd3566;
	add.s64 	%rd3574, %rd3573, %rd3571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3329,%dummy}, %rd3561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3330}, %rd3561;
	}
	shf.r.wrap.b32 	%r3331, %r3330, %r3329, 19;
	shf.r.wrap.b32 	%r3332, %r3329, %r3330, 19;
	mov.b64 	%rd3575, {%r3332, %r3331};
	shf.l.wrap.b32 	%r3333, %r3329, %r3330, 3;
	shf.l.wrap.b32 	%r3334, %r3330, %r3329, 3;
	mov.b64 	%rd3576, {%r3334, %r3333};
	shr.u64 	%rd3577, %rd3561, 6;
	xor.b64  	%rd3578, %rd3575, %rd3577;
	xor.b64  	%rd3579, %rd3578, %rd3576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3335,%dummy}, %rd3140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3336}, %rd3140;
	}
	shf.r.wrap.b32 	%r3337, %r3336, %r3335, 1;
	shf.r.wrap.b32 	%r3338, %r3335, %r3336, 1;
	mov.b64 	%rd3580, {%r3338, %r3337};
	shf.r.wrap.b32 	%r3339, %r3336, %r3335, 8;
	shf.r.wrap.b32 	%r3340, %r3335, %r3336, 8;
	mov.b64 	%rd3581, {%r3340, %r3339};
	shr.u64 	%rd3582, %rd3140, 7;
	xor.b64  	%rd3583, %rd3580, %rd3582;
	xor.b64  	%rd3584, %rd3583, %rd3581;
	add.s64 	%rd3585, %rd3148, %rd3139;
	add.s64 	%rd3586, %rd3585, %rd3579;
	add.s64 	%rd3587, %rd3586, %rd3584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3341,%dummy}, %rd3574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3342}, %rd3574;
	}
	shf.r.wrap.b32 	%r3343, %r3342, %r3341, 19;
	shf.r.wrap.b32 	%r3344, %r3341, %r3342, 19;
	mov.b64 	%rd3588, {%r3344, %r3343};
	shf.l.wrap.b32 	%r3345, %r3341, %r3342, 3;
	shf.l.wrap.b32 	%r3346, %r3342, %r3341, 3;
	mov.b64 	%rd3589, {%r3346, %r3345};
	shr.u64 	%rd3590, %rd3574, 6;
	xor.b64  	%rd3591, %rd3588, %rd3590;
	xor.b64  	%rd3592, %rd3591, %rd3589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3347,%dummy}, %rd3141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3348}, %rd3141;
	}
	shf.r.wrap.b32 	%r3349, %r3348, %r3347, 1;
	shf.r.wrap.b32 	%r3350, %r3347, %r3348, 1;
	mov.b64 	%rd3593, {%r3350, %r3349};
	shf.r.wrap.b32 	%r3351, %r3348, %r3347, 8;
	shf.r.wrap.b32 	%r3352, %r3347, %r3348, 8;
	mov.b64 	%rd3594, {%r3352, %r3351};
	shr.u64 	%rd3595, %rd3141, 7;
	xor.b64  	%rd3596, %rd3593, %rd3595;
	xor.b64  	%rd3597, %rd3596, %rd3594;
	add.s64 	%rd3598, %rd3149, %rd3140;
	add.s64 	%rd3599, %rd3598, %rd3592;
	add.s64 	%rd3600, %rd3599, %rd3597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3353,%dummy}, %rd3587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3354}, %rd3587;
	}
	shf.r.wrap.b32 	%r3355, %r3354, %r3353, 19;
	shf.r.wrap.b32 	%r3356, %r3353, %r3354, 19;
	mov.b64 	%rd3601, {%r3356, %r3355};
	shf.l.wrap.b32 	%r3357, %r3353, %r3354, 3;
	shf.l.wrap.b32 	%r3358, %r3354, %r3353, 3;
	mov.b64 	%rd3602, {%r3358, %r3357};
	shr.u64 	%rd3603, %rd3587, 6;
	xor.b64  	%rd3604, %rd3601, %rd3603;
	xor.b64  	%rd3605, %rd3604, %rd3602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3359,%dummy}, %rd3142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3360}, %rd3142;
	}
	shf.r.wrap.b32 	%r3361, %r3360, %r3359, 1;
	shf.r.wrap.b32 	%r3362, %r3359, %r3360, 1;
	mov.b64 	%rd3606, {%r3362, %r3361};
	shf.r.wrap.b32 	%r3363, %r3360, %r3359, 8;
	shf.r.wrap.b32 	%r3364, %r3359, %r3360, 8;
	mov.b64 	%rd3607, {%r3364, %r3363};
	shr.u64 	%rd3608, %rd3142, 7;
	xor.b64  	%rd3609, %rd3606, %rd3608;
	xor.b64  	%rd3610, %rd3609, %rd3607;
	add.s64 	%rd3611, %rd3150, %rd3141;
	add.s64 	%rd3612, %rd3611, %rd3605;
	add.s64 	%rd3613, %rd3612, %rd3610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3365,%dummy}, %rd3600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3366}, %rd3600;
	}
	shf.r.wrap.b32 	%r3367, %r3366, %r3365, 19;
	shf.r.wrap.b32 	%r3368, %r3365, %r3366, 19;
	mov.b64 	%rd3614, {%r3368, %r3367};
	shf.l.wrap.b32 	%r3369, %r3365, %r3366, 3;
	shf.l.wrap.b32 	%r3370, %r3366, %r3365, 3;
	mov.b64 	%rd3615, {%r3370, %r3369};
	shr.u64 	%rd3616, %rd3600, 6;
	xor.b64  	%rd3617, %rd3614, %rd3616;
	xor.b64  	%rd3618, %rd3617, %rd3615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3371,%dummy}, %rd3143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3372}, %rd3143;
	}
	shf.r.wrap.b32 	%r3373, %r3372, %r3371, 1;
	shf.r.wrap.b32 	%r3374, %r3371, %r3372, 1;
	mov.b64 	%rd3619, {%r3374, %r3373};
	shf.r.wrap.b32 	%r3375, %r3372, %r3371, 8;
	shf.r.wrap.b32 	%r3376, %r3371, %r3372, 8;
	mov.b64 	%rd3620, {%r3376, %r3375};
	shr.u64 	%rd3621, %rd3143, 7;
	xor.b64  	%rd3622, %rd3619, %rd3621;
	xor.b64  	%rd3623, %rd3622, %rd3620;
	add.s64 	%rd3624, %rd3151, %rd3142;
	add.s64 	%rd3625, %rd3624, %rd3618;
	add.s64 	%rd3626, %rd3625, %rd3623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3377,%dummy}, %rd3613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3378}, %rd3613;
	}
	shf.r.wrap.b32 	%r3379, %r3378, %r3377, 19;
	shf.r.wrap.b32 	%r3380, %r3377, %r3378, 19;
	mov.b64 	%rd3627, {%r3380, %r3379};
	shf.l.wrap.b32 	%r3381, %r3377, %r3378, 3;
	shf.l.wrap.b32 	%r3382, %r3378, %r3377, 3;
	mov.b64 	%rd3628, {%r3382, %r3381};
	shr.u64 	%rd3629, %rd3613, 6;
	xor.b64  	%rd3630, %rd3627, %rd3629;
	xor.b64  	%rd3631, %rd3630, %rd3628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3383,%dummy}, %rd3144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3384}, %rd3144;
	}
	shf.r.wrap.b32 	%r3385, %r3384, %r3383, 1;
	shf.r.wrap.b32 	%r3386, %r3383, %r3384, 1;
	mov.b64 	%rd3632, {%r3386, %r3385};
	shf.r.wrap.b32 	%r3387, %r3384, %r3383, 8;
	shf.r.wrap.b32 	%r3388, %r3383, %r3384, 8;
	mov.b64 	%rd3633, {%r3388, %r3387};
	shr.u64 	%rd3634, %rd3144, 7;
	xor.b64  	%rd3635, %rd3632, %rd3634;
	xor.b64  	%rd3636, %rd3635, %rd3633;
	add.s64 	%rd3637, %rd3548, %rd3143;
	add.s64 	%rd3638, %rd3637, %rd3631;
	add.s64 	%rd3639, %rd3638, %rd3636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3389,%dummy}, %rd3626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3390}, %rd3626;
	}
	shf.r.wrap.b32 	%r3391, %r3390, %r3389, 19;
	shf.r.wrap.b32 	%r3392, %r3389, %r3390, 19;
	mov.b64 	%rd3640, {%r3392, %r3391};
	shf.l.wrap.b32 	%r3393, %r3389, %r3390, 3;
	shf.l.wrap.b32 	%r3394, %r3390, %r3389, 3;
	mov.b64 	%rd3641, {%r3394, %r3393};
	shr.u64 	%rd3642, %rd3626, 6;
	xor.b64  	%rd3643, %rd3640, %rd3642;
	xor.b64  	%rd3644, %rd3643, %rd3641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3395,%dummy}, %rd3145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3396}, %rd3145;
	}
	shf.r.wrap.b32 	%r3397, %r3396, %r3395, 1;
	shf.r.wrap.b32 	%r3398, %r3395, %r3396, 1;
	mov.b64 	%rd3645, {%r3398, %r3397};
	shf.r.wrap.b32 	%r3399, %r3396, %r3395, 8;
	shf.r.wrap.b32 	%r3400, %r3395, %r3396, 8;
	mov.b64 	%rd3646, {%r3400, %r3399};
	shr.u64 	%rd3647, %rd3145, 7;
	xor.b64  	%rd3648, %rd3645, %rd3647;
	xor.b64  	%rd3649, %rd3648, %rd3646;
	add.s64 	%rd3650, %rd3561, %rd3144;
	add.s64 	%rd3651, %rd3650, %rd3644;
	add.s64 	%rd3652, %rd3651, %rd3649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3401,%dummy}, %rd3639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3402}, %rd3639;
	}
	shf.r.wrap.b32 	%r3403, %r3402, %r3401, 19;
	shf.r.wrap.b32 	%r3404, %r3401, %r3402, 19;
	mov.b64 	%rd3653, {%r3404, %r3403};
	shf.l.wrap.b32 	%r3405, %r3401, %r3402, 3;
	shf.l.wrap.b32 	%r3406, %r3402, %r3401, 3;
	mov.b64 	%rd3654, {%r3406, %r3405};
	shr.u64 	%rd3655, %rd3639, 6;
	xor.b64  	%rd3656, %rd3653, %rd3655;
	xor.b64  	%rd3657, %rd3656, %rd3654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3407,%dummy}, %rd3146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3408}, %rd3146;
	}
	shf.r.wrap.b32 	%r3409, %r3408, %r3407, 1;
	shf.r.wrap.b32 	%r3410, %r3407, %r3408, 1;
	mov.b64 	%rd3658, {%r3410, %r3409};
	shf.r.wrap.b32 	%r3411, %r3408, %r3407, 8;
	shf.r.wrap.b32 	%r3412, %r3407, %r3408, 8;
	mov.b64 	%rd3659, {%r3412, %r3411};
	shr.u64 	%rd3660, %rd3146, 7;
	xor.b64  	%rd3661, %rd3658, %rd3660;
	xor.b64  	%rd3662, %rd3661, %rd3659;
	add.s64 	%rd3663, %rd3574, %rd3145;
	add.s64 	%rd3664, %rd3663, %rd3657;
	add.s64 	%rd3665, %rd3664, %rd3662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3413,%dummy}, %rd3652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3414}, %rd3652;
	}
	shf.r.wrap.b32 	%r3415, %r3414, %r3413, 19;
	shf.r.wrap.b32 	%r3416, %r3413, %r3414, 19;
	mov.b64 	%rd3666, {%r3416, %r3415};
	shf.l.wrap.b32 	%r3417, %r3413, %r3414, 3;
	shf.l.wrap.b32 	%r3418, %r3414, %r3413, 3;
	mov.b64 	%rd3667, {%r3418, %r3417};
	shr.u64 	%rd3668, %rd3652, 6;
	xor.b64  	%rd3669, %rd3666, %rd3668;
	xor.b64  	%rd3670, %rd3669, %rd3667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3419,%dummy}, %rd3147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3420}, %rd3147;
	}
	shf.r.wrap.b32 	%r3421, %r3420, %r3419, 1;
	shf.r.wrap.b32 	%r3422, %r3419, %r3420, 1;
	mov.b64 	%rd3671, {%r3422, %r3421};
	shf.r.wrap.b32 	%r3423, %r3420, %r3419, 8;
	shf.r.wrap.b32 	%r3424, %r3419, %r3420, 8;
	mov.b64 	%rd3672, {%r3424, %r3423};
	shr.u64 	%rd3673, %rd3147, 7;
	xor.b64  	%rd3674, %rd3671, %rd3673;
	xor.b64  	%rd3675, %rd3674, %rd3672;
	add.s64 	%rd3676, %rd3587, %rd3146;
	add.s64 	%rd3677, %rd3676, %rd3670;
	add.s64 	%rd3678, %rd3677, %rd3675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3425,%dummy}, %rd3665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3426}, %rd3665;
	}
	shf.r.wrap.b32 	%r3427, %r3426, %r3425, 19;
	shf.r.wrap.b32 	%r3428, %r3425, %r3426, 19;
	mov.b64 	%rd3679, {%r3428, %r3427};
	shf.l.wrap.b32 	%r3429, %r3425, %r3426, 3;
	shf.l.wrap.b32 	%r3430, %r3426, %r3425, 3;
	mov.b64 	%rd3680, {%r3430, %r3429};
	shr.u64 	%rd3681, %rd3665, 6;
	xor.b64  	%rd3682, %rd3679, %rd3681;
	xor.b64  	%rd3683, %rd3682, %rd3680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3431,%dummy}, %rd3148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3432}, %rd3148;
	}
	shf.r.wrap.b32 	%r3433, %r3432, %r3431, 1;
	shf.r.wrap.b32 	%r3434, %r3431, %r3432, 1;
	mov.b64 	%rd3684, {%r3434, %r3433};
	shf.r.wrap.b32 	%r3435, %r3432, %r3431, 8;
	shf.r.wrap.b32 	%r3436, %r3431, %r3432, 8;
	mov.b64 	%rd3685, {%r3436, %r3435};
	shr.u64 	%rd3686, %rd3148, 7;
	xor.b64  	%rd3687, %rd3684, %rd3686;
	xor.b64  	%rd3688, %rd3687, %rd3685;
	add.s64 	%rd3689, %rd3600, %rd3147;
	add.s64 	%rd3690, %rd3689, %rd3683;
	add.s64 	%rd3691, %rd3690, %rd3688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3437,%dummy}, %rd3678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3438}, %rd3678;
	}
	shf.r.wrap.b32 	%r3439, %r3438, %r3437, 19;
	shf.r.wrap.b32 	%r3440, %r3437, %r3438, 19;
	mov.b64 	%rd3692, {%r3440, %r3439};
	shf.l.wrap.b32 	%r3441, %r3437, %r3438, 3;
	shf.l.wrap.b32 	%r3442, %r3438, %r3437, 3;
	mov.b64 	%rd3693, {%r3442, %r3441};
	shr.u64 	%rd3694, %rd3678, 6;
	xor.b64  	%rd3695, %rd3692, %rd3694;
	xor.b64  	%rd3696, %rd3695, %rd3693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3443,%dummy}, %rd3149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3444}, %rd3149;
	}
	shf.r.wrap.b32 	%r3445, %r3444, %r3443, 1;
	shf.r.wrap.b32 	%r3446, %r3443, %r3444, 1;
	mov.b64 	%rd3697, {%r3446, %r3445};
	shf.r.wrap.b32 	%r3447, %r3444, %r3443, 8;
	shf.r.wrap.b32 	%r3448, %r3443, %r3444, 8;
	mov.b64 	%rd3698, {%r3448, %r3447};
	shr.u64 	%rd3699, %rd3149, 7;
	xor.b64  	%rd3700, %rd3697, %rd3699;
	xor.b64  	%rd3701, %rd3700, %rd3698;
	add.s64 	%rd3702, %rd3613, %rd3148;
	add.s64 	%rd3703, %rd3702, %rd3696;
	add.s64 	%rd3704, %rd3703, %rd3701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3449,%dummy}, %rd3691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3450}, %rd3691;
	}
	shf.r.wrap.b32 	%r3451, %r3450, %r3449, 19;
	shf.r.wrap.b32 	%r3452, %r3449, %r3450, 19;
	mov.b64 	%rd3705, {%r3452, %r3451};
	shf.l.wrap.b32 	%r3453, %r3449, %r3450, 3;
	shf.l.wrap.b32 	%r3454, %r3450, %r3449, 3;
	mov.b64 	%rd3706, {%r3454, %r3453};
	shr.u64 	%rd3707, %rd3691, 6;
	xor.b64  	%rd3708, %rd3705, %rd3707;
	xor.b64  	%rd3709, %rd3708, %rd3706;
	shf.r.wrap.b32 	%r3455, %r3294, %r3293, 1;
	shf.r.wrap.b32 	%r3456, %r3293, %r3294, 1;
	mov.b64 	%rd3710, {%r3456, %r3455};
	shf.r.wrap.b32 	%r3457, %r3294, %r3293, 8;
	shf.r.wrap.b32 	%r3458, %r3293, %r3294, 8;
	mov.b64 	%rd3711, {%r3458, %r3457};
	shr.u64 	%rd3712, %rd3150, 7;
	xor.b64  	%rd3713, %rd3710, %rd3712;
	xor.b64  	%rd3714, %rd3713, %rd3711;
	add.s64 	%rd3715, %rd3626, %rd3149;
	add.s64 	%rd3716, %rd3715, %rd3709;
	add.s64 	%rd3717, %rd3716, %rd3714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3459,%dummy}, %rd3704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3460}, %rd3704;
	}
	shf.r.wrap.b32 	%r3461, %r3460, %r3459, 19;
	shf.r.wrap.b32 	%r3462, %r3459, %r3460, 19;
	mov.b64 	%rd3718, {%r3462, %r3461};
	shf.l.wrap.b32 	%r3463, %r3459, %r3460, 3;
	shf.l.wrap.b32 	%r3464, %r3460, %r3459, 3;
	mov.b64 	%rd3719, {%r3464, %r3463};
	shr.u64 	%rd3720, %rd3704, 6;
	xor.b64  	%rd3721, %rd3718, %rd3720;
	xor.b64  	%rd3722, %rd3721, %rd3719;
	shf.r.wrap.b32 	%r3465, %r3306, %r3305, 1;
	shf.r.wrap.b32 	%r3466, %r3305, %r3306, 1;
	mov.b64 	%rd3723, {%r3466, %r3465};
	shf.r.wrap.b32 	%r3467, %r3306, %r3305, 8;
	shf.r.wrap.b32 	%r3468, %r3305, %r3306, 8;
	mov.b64 	%rd3724, {%r3468, %r3467};
	shr.u64 	%rd3725, %rd3151, 7;
	xor.b64  	%rd3726, %rd3723, %rd3725;
	xor.b64  	%rd3727, %rd3726, %rd3724;
	add.s64 	%rd3728, %rd3639, %rd3150;
	add.s64 	%rd3729, %rd3728, %rd3722;
	add.s64 	%rd3730, %rd3729, %rd3727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3469,%dummy}, %rd3717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3470}, %rd3717;
	}
	shf.r.wrap.b32 	%r3471, %r3470, %r3469, 19;
	shf.r.wrap.b32 	%r3472, %r3469, %r3470, 19;
	mov.b64 	%rd3731, {%r3472, %r3471};
	shf.l.wrap.b32 	%r3473, %r3469, %r3470, 3;
	shf.l.wrap.b32 	%r3474, %r3470, %r3469, 3;
	mov.b64 	%rd3732, {%r3474, %r3473};
	shr.u64 	%rd3733, %rd3717, 6;
	xor.b64  	%rd3734, %rd3731, %rd3733;
	xor.b64  	%rd3735, %rd3734, %rd3732;
	shf.r.wrap.b32 	%r3475, %r3318, %r3317, 1;
	shf.r.wrap.b32 	%r3476, %r3317, %r3318, 1;
	mov.b64 	%rd3736, {%r3476, %r3475};
	shf.r.wrap.b32 	%r3477, %r3318, %r3317, 8;
	shf.r.wrap.b32 	%r3478, %r3317, %r3318, 8;
	mov.b64 	%rd3737, {%r3478, %r3477};
	shr.u64 	%rd3738, %rd3548, 7;
	xor.b64  	%rd3739, %rd3736, %rd3738;
	xor.b64  	%rd3740, %rd3739, %rd3737;
	add.s64 	%rd3741, %rd3652, %rd3151;
	add.s64 	%rd3742, %rd3741, %rd3735;
	add.s64 	%rd3743, %rd3742, %rd3740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3479,%dummy}, %rd3524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3480}, %rd3524;
	}
	shf.r.wrap.b32 	%r3481, %r3480, %r3479, 14;
	shf.r.wrap.b32 	%r3482, %r3479, %r3480, 14;
	mov.b64 	%rd3744, {%r3482, %r3481};
	shf.r.wrap.b32 	%r3483, %r3480, %r3479, 18;
	shf.r.wrap.b32 	%r3484, %r3479, %r3480, 18;
	mov.b64 	%rd3745, {%r3484, %r3483};
	xor.b64  	%rd3746, %rd3745, %rd3744;
	shf.l.wrap.b32 	%r3485, %r3479, %r3480, 23;
	shf.l.wrap.b32 	%r3486, %r3480, %r3479, 23;
	mov.b64 	%rd3747, {%r3486, %r3485};
	xor.b64  	%rd3748, %rd3746, %rd3747;
	xor.b64  	%rd3749, %rd3500, %rd3476;
	and.b64  	%rd3750, %rd3749, %rd3524;
	xor.b64  	%rd3751, %rd3750, %rd3476;
	add.s64 	%rd3752, %rd3751, %rd3452;
	add.s64 	%rd3753, %rd3752, %rd3548;
	add.s64 	%rd3754, %rd3753, %rd8836;
	add.s64 	%rd3755, %rd3754, %rd3748;
	add.s64 	%rd3756, %rd3755, %rd3463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3487,%dummy}, %rd3535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3488}, %rd3535;
	}
	shf.r.wrap.b32 	%r3489, %r3488, %r3487, 28;
	shf.r.wrap.b32 	%r3490, %r3487, %r3488, 28;
	mov.b64 	%rd3757, {%r3490, %r3489};
	shf.l.wrap.b32 	%r3491, %r3487, %r3488, 30;
	shf.l.wrap.b32 	%r3492, %r3488, %r3487, 30;
	mov.b64 	%rd3758, {%r3492, %r3491};
	xor.b64  	%rd3759, %rd3758, %rd3757;
	shf.l.wrap.b32 	%r3493, %r3487, %r3488, 25;
	shf.l.wrap.b32 	%r3494, %r3488, %r3487, 25;
	mov.b64 	%rd3760, {%r3494, %r3493};
	xor.b64  	%rd3761, %rd3759, %rd3760;
	xor.b64  	%rd3762, %rd3535, %rd3487;
	xor.b64  	%rd3763, %rd3535, %rd3511;
	and.b64  	%rd3764, %rd3763, %rd3762;
	xor.b64  	%rd3765, %rd3764, %rd3535;
	add.s64 	%rd3766, %rd3755, %rd3765;
	add.s64 	%rd3767, %rd3766, %rd3761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3495,%dummy}, %rd3756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3496}, %rd3756;
	}
	shf.r.wrap.b32 	%r3497, %r3496, %r3495, 14;
	shf.r.wrap.b32 	%r3498, %r3495, %r3496, 14;
	mov.b64 	%rd3768, {%r3498, %r3497};
	shf.r.wrap.b32 	%r3499, %r3496, %r3495, 18;
	shf.r.wrap.b32 	%r3500, %r3495, %r3496, 18;
	mov.b64 	%rd3769, {%r3500, %r3499};
	xor.b64  	%rd3770, %rd3769, %rd3768;
	shf.l.wrap.b32 	%r3501, %r3495, %r3496, 23;
	shf.l.wrap.b32 	%r3502, %r3496, %r3495, 23;
	mov.b64 	%rd3771, {%r3502, %r3501};
	xor.b64  	%rd3772, %rd3770, %rd3771;
	xor.b64  	%rd3773, %rd3524, %rd3500;
	and.b64  	%rd3774, %rd3756, %rd3773;
	xor.b64  	%rd3775, %rd3774, %rd3500;
	add.s64 	%rd3776, %rd3561, %rd3476;
	add.s64 	%rd3777, %rd3776, %rd8835;
	add.s64 	%rd3778, %rd3777, %rd3775;
	add.s64 	%rd3779, %rd3778, %rd3772;
	add.s64 	%rd3780, %rd3779, %rd3487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3503,%dummy}, %rd3767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3504}, %rd3767;
	}
	shf.r.wrap.b32 	%r3505, %r3504, %r3503, 28;
	shf.r.wrap.b32 	%r3506, %r3503, %r3504, 28;
	mov.b64 	%rd3781, {%r3506, %r3505};
	shf.l.wrap.b32 	%r3507, %r3503, %r3504, 30;
	shf.l.wrap.b32 	%r3508, %r3504, %r3503, 30;
	mov.b64 	%rd3782, {%r3508, %r3507};
	xor.b64  	%rd3783, %rd3782, %rd3781;
	shf.l.wrap.b32 	%r3509, %r3503, %r3504, 25;
	shf.l.wrap.b32 	%r3510, %r3504, %r3503, 25;
	mov.b64 	%rd3784, {%r3510, %r3509};
	xor.b64  	%rd3785, %rd3783, %rd3784;
	xor.b64  	%rd3786, %rd3767, %rd3511;
	xor.b64  	%rd3787, %rd3767, %rd3535;
	and.b64  	%rd3788, %rd3787, %rd3786;
	xor.b64  	%rd3789, %rd3788, %rd3767;
	add.s64 	%rd3790, %rd3779, %rd3789;
	add.s64 	%rd3791, %rd3790, %rd3785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3511,%dummy}, %rd3780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3512}, %rd3780;
	}
	shf.r.wrap.b32 	%r3513, %r3512, %r3511, 14;
	shf.r.wrap.b32 	%r3514, %r3511, %r3512, 14;
	mov.b64 	%rd3792, {%r3514, %r3513};
	shf.r.wrap.b32 	%r3515, %r3512, %r3511, 18;
	shf.r.wrap.b32 	%r3516, %r3511, %r3512, 18;
	mov.b64 	%rd3793, {%r3516, %r3515};
	xor.b64  	%rd3794, %rd3793, %rd3792;
	shf.l.wrap.b32 	%r3517, %r3511, %r3512, 23;
	shf.l.wrap.b32 	%r3518, %r3512, %r3511, 23;
	mov.b64 	%rd3795, {%r3518, %r3517};
	xor.b64  	%rd3796, %rd3794, %rd3795;
	xor.b64  	%rd3797, %rd3756, %rd3524;
	and.b64  	%rd3798, %rd3780, %rd3797;
	xor.b64  	%rd3799, %rd3798, %rd3524;
	add.s64 	%rd3800, %rd3574, %rd3500;
	add.s64 	%rd3801, %rd3800, %rd8834;
	add.s64 	%rd3802, %rd3801, %rd3799;
	add.s64 	%rd3803, %rd3802, %rd3796;
	add.s64 	%rd3804, %rd3803, %rd3511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3519,%dummy}, %rd3791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3520}, %rd3791;
	}
	shf.r.wrap.b32 	%r3521, %r3520, %r3519, 28;
	shf.r.wrap.b32 	%r3522, %r3519, %r3520, 28;
	mov.b64 	%rd3805, {%r3522, %r3521};
	shf.l.wrap.b32 	%r3523, %r3519, %r3520, 30;
	shf.l.wrap.b32 	%r3524, %r3520, %r3519, 30;
	mov.b64 	%rd3806, {%r3524, %r3523};
	xor.b64  	%rd3807, %rd3806, %rd3805;
	shf.l.wrap.b32 	%r3525, %r3519, %r3520, 25;
	shf.l.wrap.b32 	%r3526, %r3520, %r3519, 25;
	mov.b64 	%rd3808, {%r3526, %r3525};
	xor.b64  	%rd3809, %rd3807, %rd3808;
	xor.b64  	%rd3810, %rd3791, %rd3535;
	xor.b64  	%rd3811, %rd3791, %rd3767;
	and.b64  	%rd3812, %rd3811, %rd3810;
	xor.b64  	%rd3813, %rd3812, %rd3791;
	add.s64 	%rd3814, %rd3803, %rd3813;
	add.s64 	%rd3815, %rd3814, %rd3809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3527,%dummy}, %rd3804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3528}, %rd3804;
	}
	shf.r.wrap.b32 	%r3529, %r3528, %r3527, 14;
	shf.r.wrap.b32 	%r3530, %r3527, %r3528, 14;
	mov.b64 	%rd3816, {%r3530, %r3529};
	shf.r.wrap.b32 	%r3531, %r3528, %r3527, 18;
	shf.r.wrap.b32 	%r3532, %r3527, %r3528, 18;
	mov.b64 	%rd3817, {%r3532, %r3531};
	xor.b64  	%rd3818, %rd3817, %rd3816;
	shf.l.wrap.b32 	%r3533, %r3527, %r3528, 23;
	shf.l.wrap.b32 	%r3534, %r3528, %r3527, 23;
	mov.b64 	%rd3819, {%r3534, %r3533};
	xor.b64  	%rd3820, %rd3818, %rd3819;
	xor.b64  	%rd3821, %rd3780, %rd3756;
	and.b64  	%rd3822, %rd3804, %rd3821;
	xor.b64  	%rd3823, %rd3822, %rd3756;
	add.s64 	%rd3824, %rd3587, %rd3524;
	add.s64 	%rd3825, %rd3824, %rd8833;
	add.s64 	%rd3826, %rd3825, %rd3823;
	add.s64 	%rd3827, %rd3826, %rd3820;
	add.s64 	%rd3828, %rd3827, %rd3535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3535,%dummy}, %rd3815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3536}, %rd3815;
	}
	shf.r.wrap.b32 	%r3537, %r3536, %r3535, 28;
	shf.r.wrap.b32 	%r3538, %r3535, %r3536, 28;
	mov.b64 	%rd3829, {%r3538, %r3537};
	shf.l.wrap.b32 	%r3539, %r3535, %r3536, 30;
	shf.l.wrap.b32 	%r3540, %r3536, %r3535, 30;
	mov.b64 	%rd3830, {%r3540, %r3539};
	xor.b64  	%rd3831, %rd3830, %rd3829;
	shf.l.wrap.b32 	%r3541, %r3535, %r3536, 25;
	shf.l.wrap.b32 	%r3542, %r3536, %r3535, 25;
	mov.b64 	%rd3832, {%r3542, %r3541};
	xor.b64  	%rd3833, %rd3831, %rd3832;
	xor.b64  	%rd3834, %rd3815, %rd3767;
	xor.b64  	%rd3835, %rd3815, %rd3791;
	and.b64  	%rd3836, %rd3835, %rd3834;
	xor.b64  	%rd3837, %rd3836, %rd3815;
	add.s64 	%rd3838, %rd3827, %rd3837;
	add.s64 	%rd3839, %rd3838, %rd3833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3543,%dummy}, %rd3828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3544}, %rd3828;
	}
	shf.r.wrap.b32 	%r3545, %r3544, %r3543, 14;
	shf.r.wrap.b32 	%r3546, %r3543, %r3544, 14;
	mov.b64 	%rd3840, {%r3546, %r3545};
	shf.r.wrap.b32 	%r3547, %r3544, %r3543, 18;
	shf.r.wrap.b32 	%r3548, %r3543, %r3544, 18;
	mov.b64 	%rd3841, {%r3548, %r3547};
	xor.b64  	%rd3842, %rd3841, %rd3840;
	shf.l.wrap.b32 	%r3549, %r3543, %r3544, 23;
	shf.l.wrap.b32 	%r3550, %r3544, %r3543, 23;
	mov.b64 	%rd3843, {%r3550, %r3549};
	xor.b64  	%rd3844, %rd3842, %rd3843;
	xor.b64  	%rd3845, %rd3804, %rd3780;
	and.b64  	%rd3846, %rd3828, %rd3845;
	xor.b64  	%rd3847, %rd3846, %rd3780;
	add.s64 	%rd3848, %rd3756, %rd3600;
	add.s64 	%rd3849, %rd3848, %rd8832;
	add.s64 	%rd3850, %rd3849, %rd3847;
	add.s64 	%rd3851, %rd3850, %rd3844;
	add.s64 	%rd3852, %rd3851, %rd3767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3551,%dummy}, %rd3839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3552}, %rd3839;
	}
	shf.r.wrap.b32 	%r3553, %r3552, %r3551, 28;
	shf.r.wrap.b32 	%r3554, %r3551, %r3552, 28;
	mov.b64 	%rd3853, {%r3554, %r3553};
	shf.l.wrap.b32 	%r3555, %r3551, %r3552, 30;
	shf.l.wrap.b32 	%r3556, %r3552, %r3551, 30;
	mov.b64 	%rd3854, {%r3556, %r3555};
	xor.b64  	%rd3855, %rd3854, %rd3853;
	shf.l.wrap.b32 	%r3557, %r3551, %r3552, 25;
	shf.l.wrap.b32 	%r3558, %r3552, %r3551, 25;
	mov.b64 	%rd3856, {%r3558, %r3557};
	xor.b64  	%rd3857, %rd3855, %rd3856;
	xor.b64  	%rd3858, %rd3839, %rd3791;
	xor.b64  	%rd3859, %rd3839, %rd3815;
	and.b64  	%rd3860, %rd3859, %rd3858;
	xor.b64  	%rd3861, %rd3860, %rd3839;
	add.s64 	%rd3862, %rd3851, %rd3861;
	add.s64 	%rd3863, %rd3862, %rd3857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3559,%dummy}, %rd3852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3560}, %rd3852;
	}
	shf.r.wrap.b32 	%r3561, %r3560, %r3559, 14;
	shf.r.wrap.b32 	%r3562, %r3559, %r3560, 14;
	mov.b64 	%rd3864, {%r3562, %r3561};
	shf.r.wrap.b32 	%r3563, %r3560, %r3559, 18;
	shf.r.wrap.b32 	%r3564, %r3559, %r3560, 18;
	mov.b64 	%rd3865, {%r3564, %r3563};
	xor.b64  	%rd3866, %rd3865, %rd3864;
	shf.l.wrap.b32 	%r3565, %r3559, %r3560, 23;
	shf.l.wrap.b32 	%r3566, %r3560, %r3559, 23;
	mov.b64 	%rd3867, {%r3566, %r3565};
	xor.b64  	%rd3868, %rd3866, %rd3867;
	xor.b64  	%rd3869, %rd3828, %rd3804;
	and.b64  	%rd3870, %rd3852, %rd3869;
	xor.b64  	%rd3871, %rd3870, %rd3804;
	add.s64 	%rd3872, %rd3780, %rd3613;
	add.s64 	%rd3873, %rd3872, %rd8831;
	add.s64 	%rd3874, %rd3873, %rd3871;
	add.s64 	%rd3875, %rd3874, %rd3868;
	add.s64 	%rd3876, %rd3875, %rd3791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3567,%dummy}, %rd3863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3568}, %rd3863;
	}
	shf.r.wrap.b32 	%r3569, %r3568, %r3567, 28;
	shf.r.wrap.b32 	%r3570, %r3567, %r3568, 28;
	mov.b64 	%rd3877, {%r3570, %r3569};
	shf.l.wrap.b32 	%r3571, %r3567, %r3568, 30;
	shf.l.wrap.b32 	%r3572, %r3568, %r3567, 30;
	mov.b64 	%rd3878, {%r3572, %r3571};
	xor.b64  	%rd3879, %rd3878, %rd3877;
	shf.l.wrap.b32 	%r3573, %r3567, %r3568, 25;
	shf.l.wrap.b32 	%r3574, %r3568, %r3567, 25;
	mov.b64 	%rd3880, {%r3574, %r3573};
	xor.b64  	%rd3881, %rd3879, %rd3880;
	xor.b64  	%rd3882, %rd3863, %rd3815;
	xor.b64  	%rd3883, %rd3863, %rd3839;
	and.b64  	%rd3884, %rd3883, %rd3882;
	xor.b64  	%rd3885, %rd3884, %rd3863;
	add.s64 	%rd3886, %rd3875, %rd3885;
	add.s64 	%rd3887, %rd3886, %rd3881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3575,%dummy}, %rd3876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3576}, %rd3876;
	}
	shf.r.wrap.b32 	%r3577, %r3576, %r3575, 14;
	shf.r.wrap.b32 	%r3578, %r3575, %r3576, 14;
	mov.b64 	%rd3888, {%r3578, %r3577};
	shf.r.wrap.b32 	%r3579, %r3576, %r3575, 18;
	shf.r.wrap.b32 	%r3580, %r3575, %r3576, 18;
	mov.b64 	%rd3889, {%r3580, %r3579};
	xor.b64  	%rd3890, %rd3889, %rd3888;
	shf.l.wrap.b32 	%r3581, %r3575, %r3576, 23;
	shf.l.wrap.b32 	%r3582, %r3576, %r3575, 23;
	mov.b64 	%rd3891, {%r3582, %r3581};
	xor.b64  	%rd3892, %rd3890, %rd3891;
	xor.b64  	%rd3893, %rd3852, %rd3828;
	and.b64  	%rd3894, %rd3876, %rd3893;
	xor.b64  	%rd3895, %rd3894, %rd3828;
	add.s64 	%rd3896, %rd3804, %rd3626;
	add.s64 	%rd3897, %rd3896, %rd8830;
	add.s64 	%rd3898, %rd3897, %rd3895;
	add.s64 	%rd3899, %rd3898, %rd3892;
	add.s64 	%rd3900, %rd3899, %rd3815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3583,%dummy}, %rd3887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3584}, %rd3887;
	}
	shf.r.wrap.b32 	%r3585, %r3584, %r3583, 28;
	shf.r.wrap.b32 	%r3586, %r3583, %r3584, 28;
	mov.b64 	%rd3901, {%r3586, %r3585};
	shf.l.wrap.b32 	%r3587, %r3583, %r3584, 30;
	shf.l.wrap.b32 	%r3588, %r3584, %r3583, 30;
	mov.b64 	%rd3902, {%r3588, %r3587};
	xor.b64  	%rd3903, %rd3902, %rd3901;
	shf.l.wrap.b32 	%r3589, %r3583, %r3584, 25;
	shf.l.wrap.b32 	%r3590, %r3584, %r3583, 25;
	mov.b64 	%rd3904, {%r3590, %r3589};
	xor.b64  	%rd3905, %rd3903, %rd3904;
	xor.b64  	%rd3906, %rd3887, %rd3839;
	xor.b64  	%rd3907, %rd3887, %rd3863;
	and.b64  	%rd3908, %rd3907, %rd3906;
	xor.b64  	%rd3909, %rd3908, %rd3887;
	add.s64 	%rd3910, %rd3899, %rd3909;
	add.s64 	%rd3911, %rd3910, %rd3905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3591,%dummy}, %rd3900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3592}, %rd3900;
	}
	shf.r.wrap.b32 	%r3593, %r3592, %r3591, 14;
	shf.r.wrap.b32 	%r3594, %r3591, %r3592, 14;
	mov.b64 	%rd3912, {%r3594, %r3593};
	shf.r.wrap.b32 	%r3595, %r3592, %r3591, 18;
	shf.r.wrap.b32 	%r3596, %r3591, %r3592, 18;
	mov.b64 	%rd3913, {%r3596, %r3595};
	xor.b64  	%rd3914, %rd3913, %rd3912;
	shf.l.wrap.b32 	%r3597, %r3591, %r3592, 23;
	shf.l.wrap.b32 	%r3598, %r3592, %r3591, 23;
	mov.b64 	%rd3915, {%r3598, %r3597};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	xor.b64  	%rd3917, %rd3876, %rd3852;
	and.b64  	%rd3918, %rd3900, %rd3917;
	xor.b64  	%rd3919, %rd3918, %rd3852;
	add.s64 	%rd3920, %rd3828, %rd3639;
	add.s64 	%rd3921, %rd3920, %rd8829;
	add.s64 	%rd3922, %rd3921, %rd3919;
	add.s64 	%rd3923, %rd3922, %rd3916;
	add.s64 	%rd3924, %rd3923, %rd3839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3599,%dummy}, %rd3911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3600}, %rd3911;
	}
	shf.r.wrap.b32 	%r3601, %r3600, %r3599, 28;
	shf.r.wrap.b32 	%r3602, %r3599, %r3600, 28;
	mov.b64 	%rd3925, {%r3602, %r3601};
	shf.l.wrap.b32 	%r3603, %r3599, %r3600, 30;
	shf.l.wrap.b32 	%r3604, %r3600, %r3599, 30;
	mov.b64 	%rd3926, {%r3604, %r3603};
	xor.b64  	%rd3927, %rd3926, %rd3925;
	shf.l.wrap.b32 	%r3605, %r3599, %r3600, 25;
	shf.l.wrap.b32 	%r3606, %r3600, %r3599, 25;
	mov.b64 	%rd3928, {%r3606, %r3605};
	xor.b64  	%rd3929, %rd3927, %rd3928;
	xor.b64  	%rd3930, %rd3911, %rd3863;
	xor.b64  	%rd3931, %rd3911, %rd3887;
	and.b64  	%rd3932, %rd3931, %rd3930;
	xor.b64  	%rd3933, %rd3932, %rd3911;
	add.s64 	%rd3934, %rd3923, %rd3933;
	add.s64 	%rd3935, %rd3934, %rd3929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3607,%dummy}, %rd3924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3608}, %rd3924;
	}
	shf.r.wrap.b32 	%r3609, %r3608, %r3607, 14;
	shf.r.wrap.b32 	%r3610, %r3607, %r3608, 14;
	mov.b64 	%rd3936, {%r3610, %r3609};
	shf.r.wrap.b32 	%r3611, %r3608, %r3607, 18;
	shf.r.wrap.b32 	%r3612, %r3607, %r3608, 18;
	mov.b64 	%rd3937, {%r3612, %r3611};
	xor.b64  	%rd3938, %rd3937, %rd3936;
	shf.l.wrap.b32 	%r3613, %r3607, %r3608, 23;
	shf.l.wrap.b32 	%r3614, %r3608, %r3607, 23;
	mov.b64 	%rd3939, {%r3614, %r3613};
	xor.b64  	%rd3940, %rd3938, %rd3939;
	xor.b64  	%rd3941, %rd3900, %rd3876;
	and.b64  	%rd3942, %rd3924, %rd3941;
	xor.b64  	%rd3943, %rd3942, %rd3876;
	add.s64 	%rd3944, %rd3852, %rd3652;
	add.s64 	%rd3945, %rd3944, %rd8828;
	add.s64 	%rd3946, %rd3945, %rd3943;
	add.s64 	%rd3947, %rd3946, %rd3940;
	add.s64 	%rd3948, %rd3947, %rd3863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3615,%dummy}, %rd3935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3616}, %rd3935;
	}
	shf.r.wrap.b32 	%r3617, %r3616, %r3615, 28;
	shf.r.wrap.b32 	%r3618, %r3615, %r3616, 28;
	mov.b64 	%rd3949, {%r3618, %r3617};
	shf.l.wrap.b32 	%r3619, %r3615, %r3616, 30;
	shf.l.wrap.b32 	%r3620, %r3616, %r3615, 30;
	mov.b64 	%rd3950, {%r3620, %r3619};
	xor.b64  	%rd3951, %rd3950, %rd3949;
	shf.l.wrap.b32 	%r3621, %r3615, %r3616, 25;
	shf.l.wrap.b32 	%r3622, %r3616, %r3615, 25;
	mov.b64 	%rd3952, {%r3622, %r3621};
	xor.b64  	%rd3953, %rd3951, %rd3952;
	xor.b64  	%rd3954, %rd3935, %rd3887;
	xor.b64  	%rd3955, %rd3935, %rd3911;
	and.b64  	%rd3956, %rd3955, %rd3954;
	xor.b64  	%rd3957, %rd3956, %rd3935;
	add.s64 	%rd3958, %rd3947, %rd3957;
	add.s64 	%rd3959, %rd3958, %rd3953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3623,%dummy}, %rd3948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3624}, %rd3948;
	}
	shf.r.wrap.b32 	%r3625, %r3624, %r3623, 14;
	shf.r.wrap.b32 	%r3626, %r3623, %r3624, 14;
	mov.b64 	%rd3960, {%r3626, %r3625};
	shf.r.wrap.b32 	%r3627, %r3624, %r3623, 18;
	shf.r.wrap.b32 	%r3628, %r3623, %r3624, 18;
	mov.b64 	%rd3961, {%r3628, %r3627};
	xor.b64  	%rd3962, %rd3961, %rd3960;
	shf.l.wrap.b32 	%r3629, %r3623, %r3624, 23;
	shf.l.wrap.b32 	%r3630, %r3624, %r3623, 23;
	mov.b64 	%rd3963, {%r3630, %r3629};
	xor.b64  	%rd3964, %rd3962, %rd3963;
	xor.b64  	%rd3965, %rd3924, %rd3900;
	and.b64  	%rd3966, %rd3948, %rd3965;
	xor.b64  	%rd3967, %rd3966, %rd3900;
	add.s64 	%rd3968, %rd3876, %rd3665;
	add.s64 	%rd3969, %rd3968, %rd8827;
	add.s64 	%rd3970, %rd3969, %rd3967;
	add.s64 	%rd3971, %rd3970, %rd3964;
	add.s64 	%rd3972, %rd3971, %rd3887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3631,%dummy}, %rd3959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3632}, %rd3959;
	}
	shf.r.wrap.b32 	%r3633, %r3632, %r3631, 28;
	shf.r.wrap.b32 	%r3634, %r3631, %r3632, 28;
	mov.b64 	%rd3973, {%r3634, %r3633};
	shf.l.wrap.b32 	%r3635, %r3631, %r3632, 30;
	shf.l.wrap.b32 	%r3636, %r3632, %r3631, 30;
	mov.b64 	%rd3974, {%r3636, %r3635};
	xor.b64  	%rd3975, %rd3974, %rd3973;
	shf.l.wrap.b32 	%r3637, %r3631, %r3632, 25;
	shf.l.wrap.b32 	%r3638, %r3632, %r3631, 25;
	mov.b64 	%rd3976, {%r3638, %r3637};
	xor.b64  	%rd3977, %rd3975, %rd3976;
	xor.b64  	%rd3978, %rd3959, %rd3911;
	xor.b64  	%rd3979, %rd3959, %rd3935;
	and.b64  	%rd3980, %rd3979, %rd3978;
	xor.b64  	%rd3981, %rd3980, %rd3959;
	add.s64 	%rd3982, %rd3971, %rd3981;
	add.s64 	%rd3983, %rd3982, %rd3977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3639,%dummy}, %rd3972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3640}, %rd3972;
	}
	shf.r.wrap.b32 	%r3641, %r3640, %r3639, 14;
	shf.r.wrap.b32 	%r3642, %r3639, %r3640, 14;
	mov.b64 	%rd3984, {%r3642, %r3641};
	shf.r.wrap.b32 	%r3643, %r3640, %r3639, 18;
	shf.r.wrap.b32 	%r3644, %r3639, %r3640, 18;
	mov.b64 	%rd3985, {%r3644, %r3643};
	xor.b64  	%rd3986, %rd3985, %rd3984;
	shf.l.wrap.b32 	%r3645, %r3639, %r3640, 23;
	shf.l.wrap.b32 	%r3646, %r3640, %r3639, 23;
	mov.b64 	%rd3987, {%r3646, %r3645};
	xor.b64  	%rd3988, %rd3986, %rd3987;
	xor.b64  	%rd3989, %rd3948, %rd3924;
	and.b64  	%rd3990, %rd3972, %rd3989;
	xor.b64  	%rd3991, %rd3990, %rd3924;
	add.s64 	%rd3992, %rd3900, %rd3678;
	add.s64 	%rd3993, %rd3992, %rd8826;
	add.s64 	%rd3994, %rd3993, %rd3991;
	add.s64 	%rd3995, %rd3994, %rd3988;
	add.s64 	%rd3996, %rd3995, %rd3911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3647,%dummy}, %rd3983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3648}, %rd3983;
	}
	shf.r.wrap.b32 	%r3649, %r3648, %r3647, 28;
	shf.r.wrap.b32 	%r3650, %r3647, %r3648, 28;
	mov.b64 	%rd3997, {%r3650, %r3649};
	shf.l.wrap.b32 	%r3651, %r3647, %r3648, 30;
	shf.l.wrap.b32 	%r3652, %r3648, %r3647, 30;
	mov.b64 	%rd3998, {%r3652, %r3651};
	xor.b64  	%rd3999, %rd3998, %rd3997;
	shf.l.wrap.b32 	%r3653, %r3647, %r3648, 25;
	shf.l.wrap.b32 	%r3654, %r3648, %r3647, 25;
	mov.b64 	%rd4000, {%r3654, %r3653};
	xor.b64  	%rd4001, %rd3999, %rd4000;
	xor.b64  	%rd4002, %rd3983, %rd3935;
	xor.b64  	%rd4003, %rd3983, %rd3959;
	and.b64  	%rd4004, %rd4003, %rd4002;
	xor.b64  	%rd4005, %rd4004, %rd3983;
	add.s64 	%rd4006, %rd3995, %rd4005;
	add.s64 	%rd4007, %rd4006, %rd4001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3655,%dummy}, %rd3996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3656}, %rd3996;
	}
	shf.r.wrap.b32 	%r3657, %r3656, %r3655, 14;
	shf.r.wrap.b32 	%r3658, %r3655, %r3656, 14;
	mov.b64 	%rd4008, {%r3658, %r3657};
	shf.r.wrap.b32 	%r3659, %r3656, %r3655, 18;
	shf.r.wrap.b32 	%r3660, %r3655, %r3656, 18;
	mov.b64 	%rd4009, {%r3660, %r3659};
	xor.b64  	%rd4010, %rd4009, %rd4008;
	shf.l.wrap.b32 	%r3661, %r3655, %r3656, 23;
	shf.l.wrap.b32 	%r3662, %r3656, %r3655, 23;
	mov.b64 	%rd4011, {%r3662, %r3661};
	xor.b64  	%rd4012, %rd4010, %rd4011;
	xor.b64  	%rd4013, %rd3972, %rd3948;
	and.b64  	%rd4014, %rd3996, %rd4013;
	xor.b64  	%rd4015, %rd4014, %rd3948;
	add.s64 	%rd4016, %rd3924, %rd3691;
	add.s64 	%rd4017, %rd4016, %rd8825;
	add.s64 	%rd4018, %rd4017, %rd4015;
	add.s64 	%rd4019, %rd4018, %rd4012;
	add.s64 	%rd4020, %rd4019, %rd3935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3663,%dummy}, %rd4007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3664}, %rd4007;
	}
	shf.r.wrap.b32 	%r3665, %r3664, %r3663, 28;
	shf.r.wrap.b32 	%r3666, %r3663, %r3664, 28;
	mov.b64 	%rd4021, {%r3666, %r3665};
	shf.l.wrap.b32 	%r3667, %r3663, %r3664, 30;
	shf.l.wrap.b32 	%r3668, %r3664, %r3663, 30;
	mov.b64 	%rd4022, {%r3668, %r3667};
	xor.b64  	%rd4023, %rd4022, %rd4021;
	shf.l.wrap.b32 	%r3669, %r3663, %r3664, 25;
	shf.l.wrap.b32 	%r3670, %r3664, %r3663, 25;
	mov.b64 	%rd4024, {%r3670, %r3669};
	xor.b64  	%rd4025, %rd4023, %rd4024;
	xor.b64  	%rd4026, %rd4007, %rd3959;
	xor.b64  	%rd4027, %rd4007, %rd3983;
	and.b64  	%rd4028, %rd4027, %rd4026;
	xor.b64  	%rd4029, %rd4028, %rd4007;
	add.s64 	%rd4030, %rd4019, %rd4029;
	add.s64 	%rd4031, %rd4030, %rd4025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3671,%dummy}, %rd4020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3672}, %rd4020;
	}
	shf.r.wrap.b32 	%r3673, %r3672, %r3671, 14;
	shf.r.wrap.b32 	%r3674, %r3671, %r3672, 14;
	mov.b64 	%rd4032, {%r3674, %r3673};
	shf.r.wrap.b32 	%r3675, %r3672, %r3671, 18;
	shf.r.wrap.b32 	%r3676, %r3671, %r3672, 18;
	mov.b64 	%rd4033, {%r3676, %r3675};
	xor.b64  	%rd4034, %rd4033, %rd4032;
	shf.l.wrap.b32 	%r3677, %r3671, %r3672, 23;
	shf.l.wrap.b32 	%r3678, %r3672, %r3671, 23;
	mov.b64 	%rd4035, {%r3678, %r3677};
	xor.b64  	%rd4036, %rd4034, %rd4035;
	xor.b64  	%rd4037, %rd3996, %rd3972;
	and.b64  	%rd4038, %rd4020, %rd4037;
	xor.b64  	%rd4039, %rd4038, %rd3972;
	add.s64 	%rd4040, %rd3948, %rd3704;
	add.s64 	%rd4041, %rd4040, %rd8824;
	add.s64 	%rd4042, %rd4041, %rd4039;
	add.s64 	%rd4043, %rd4042, %rd4036;
	add.s64 	%rd4044, %rd4043, %rd3959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3679,%dummy}, %rd4031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3680}, %rd4031;
	}
	shf.r.wrap.b32 	%r3681, %r3680, %r3679, 28;
	shf.r.wrap.b32 	%r3682, %r3679, %r3680, 28;
	mov.b64 	%rd4045, {%r3682, %r3681};
	shf.l.wrap.b32 	%r3683, %r3679, %r3680, 30;
	shf.l.wrap.b32 	%r3684, %r3680, %r3679, 30;
	mov.b64 	%rd4046, {%r3684, %r3683};
	xor.b64  	%rd4047, %rd4046, %rd4045;
	shf.l.wrap.b32 	%r3685, %r3679, %r3680, 25;
	shf.l.wrap.b32 	%r3686, %r3680, %r3679, 25;
	mov.b64 	%rd4048, {%r3686, %r3685};
	xor.b64  	%rd4049, %rd4047, %rd4048;
	xor.b64  	%rd4050, %rd4031, %rd3983;
	xor.b64  	%rd4051, %rd4031, %rd4007;
	and.b64  	%rd4052, %rd4051, %rd4050;
	xor.b64  	%rd4053, %rd4052, %rd4031;
	add.s64 	%rd4054, %rd4043, %rd4053;
	add.s64 	%rd4055, %rd4054, %rd4049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3687,%dummy}, %rd4044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3688}, %rd4044;
	}
	shf.r.wrap.b32 	%r3689, %r3688, %r3687, 14;
	shf.r.wrap.b32 	%r3690, %r3687, %r3688, 14;
	mov.b64 	%rd4056, {%r3690, %r3689};
	shf.r.wrap.b32 	%r3691, %r3688, %r3687, 18;
	shf.r.wrap.b32 	%r3692, %r3687, %r3688, 18;
	mov.b64 	%rd4057, {%r3692, %r3691};
	xor.b64  	%rd4058, %rd4057, %rd4056;
	shf.l.wrap.b32 	%r3693, %r3687, %r3688, 23;
	shf.l.wrap.b32 	%r3694, %r3688, %r3687, 23;
	mov.b64 	%rd4059, {%r3694, %r3693};
	xor.b64  	%rd4060, %rd4058, %rd4059;
	xor.b64  	%rd4061, %rd4020, %rd3996;
	and.b64  	%rd4062, %rd4044, %rd4061;
	xor.b64  	%rd4063, %rd4062, %rd3996;
	add.s64 	%rd4064, %rd3972, %rd3717;
	add.s64 	%rd4065, %rd4064, %rd8823;
	add.s64 	%rd4066, %rd4065, %rd4063;
	add.s64 	%rd4067, %rd4066, %rd4060;
	add.s64 	%rd4068, %rd4067, %rd3983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3695,%dummy}, %rd4055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3696}, %rd4055;
	}
	shf.r.wrap.b32 	%r3697, %r3696, %r3695, 28;
	shf.r.wrap.b32 	%r3698, %r3695, %r3696, 28;
	mov.b64 	%rd4069, {%r3698, %r3697};
	shf.l.wrap.b32 	%r3699, %r3695, %r3696, 30;
	shf.l.wrap.b32 	%r3700, %r3696, %r3695, 30;
	mov.b64 	%rd4070, {%r3700, %r3699};
	xor.b64  	%rd4071, %rd4070, %rd4069;
	shf.l.wrap.b32 	%r3701, %r3695, %r3696, 25;
	shf.l.wrap.b32 	%r3702, %r3696, %r3695, 25;
	mov.b64 	%rd4072, {%r3702, %r3701};
	xor.b64  	%rd4073, %rd4071, %rd4072;
	xor.b64  	%rd4074, %rd4055, %rd4007;
	xor.b64  	%rd4075, %rd4055, %rd4031;
	and.b64  	%rd4076, %rd4075, %rd4074;
	xor.b64  	%rd4077, %rd4076, %rd4055;
	add.s64 	%rd4078, %rd4067, %rd4077;
	add.s64 	%rd4079, %rd4078, %rd4073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3703,%dummy}, %rd4068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3704}, %rd4068;
	}
	shf.r.wrap.b32 	%r3705, %r3704, %r3703, 14;
	shf.r.wrap.b32 	%r3706, %r3703, %r3704, 14;
	mov.b64 	%rd4080, {%r3706, %r3705};
	shf.r.wrap.b32 	%r3707, %r3704, %r3703, 18;
	shf.r.wrap.b32 	%r3708, %r3703, %r3704, 18;
	mov.b64 	%rd4081, {%r3708, %r3707};
	xor.b64  	%rd4082, %rd4081, %rd4080;
	shf.l.wrap.b32 	%r3709, %r3703, %r3704, 23;
	shf.l.wrap.b32 	%r3710, %r3704, %r3703, 23;
	mov.b64 	%rd4083, {%r3710, %r3709};
	xor.b64  	%rd4084, %rd4082, %rd4083;
	xor.b64  	%rd4085, %rd4044, %rd4020;
	and.b64  	%rd4086, %rd4068, %rd4085;
	xor.b64  	%rd4087, %rd4086, %rd4020;
	add.s64 	%rd4088, %rd3996, %rd3730;
	add.s64 	%rd4089, %rd4088, %rd8822;
	add.s64 	%rd4090, %rd4089, %rd4087;
	add.s64 	%rd4091, %rd4090, %rd4084;
	add.s64 	%rd4092, %rd4091, %rd4007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3711,%dummy}, %rd4079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3712}, %rd4079;
	}
	shf.r.wrap.b32 	%r3713, %r3712, %r3711, 28;
	shf.r.wrap.b32 	%r3714, %r3711, %r3712, 28;
	mov.b64 	%rd4093, {%r3714, %r3713};
	shf.l.wrap.b32 	%r3715, %r3711, %r3712, 30;
	shf.l.wrap.b32 	%r3716, %r3712, %r3711, 30;
	mov.b64 	%rd4094, {%r3716, %r3715};
	xor.b64  	%rd4095, %rd4094, %rd4093;
	shf.l.wrap.b32 	%r3717, %r3711, %r3712, 25;
	shf.l.wrap.b32 	%r3718, %r3712, %r3711, 25;
	mov.b64 	%rd4096, {%r3718, %r3717};
	xor.b64  	%rd4097, %rd4095, %rd4096;
	xor.b64  	%rd4098, %rd4079, %rd4031;
	xor.b64  	%rd4099, %rd4079, %rd4055;
	and.b64  	%rd4100, %rd4099, %rd4098;
	xor.b64  	%rd4101, %rd4100, %rd4079;
	add.s64 	%rd4102, %rd4091, %rd4101;
	add.s64 	%rd4103, %rd4102, %rd4097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3719,%dummy}, %rd4092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3720}, %rd4092;
	}
	shf.r.wrap.b32 	%r3721, %r3720, %r3719, 14;
	shf.r.wrap.b32 	%r3722, %r3719, %r3720, 14;
	mov.b64 	%rd4104, {%r3722, %r3721};
	shf.r.wrap.b32 	%r3723, %r3720, %r3719, 18;
	shf.r.wrap.b32 	%r3724, %r3719, %r3720, 18;
	mov.b64 	%rd4105, {%r3724, %r3723};
	xor.b64  	%rd4106, %rd4105, %rd4104;
	shf.l.wrap.b32 	%r3725, %r3719, %r3720, 23;
	shf.l.wrap.b32 	%r3726, %r3720, %r3719, 23;
	mov.b64 	%rd4107, {%r3726, %r3725};
	xor.b64  	%rd4108, %rd4106, %rd4107;
	xor.b64  	%rd4109, %rd4068, %rd4044;
	and.b64  	%rd4110, %rd4092, %rd4109;
	xor.b64  	%rd4111, %rd4110, %rd4044;
	add.s64 	%rd4112, %rd4020, %rd3743;
	add.s64 	%rd4113, %rd4112, %rd8821;
	add.s64 	%rd4114, %rd4113, %rd4111;
	add.s64 	%rd4115, %rd4114, %rd4108;
	add.s64 	%rd4116, %rd4115, %rd4031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3727,%dummy}, %rd4103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3728}, %rd4103;
	}
	shf.r.wrap.b32 	%r3729, %r3728, %r3727, 28;
	shf.r.wrap.b32 	%r3730, %r3727, %r3728, 28;
	mov.b64 	%rd4117, {%r3730, %r3729};
	shf.l.wrap.b32 	%r3731, %r3727, %r3728, 30;
	shf.l.wrap.b32 	%r3732, %r3728, %r3727, 30;
	mov.b64 	%rd4118, {%r3732, %r3731};
	xor.b64  	%rd4119, %rd4118, %rd4117;
	shf.l.wrap.b32 	%r3733, %r3727, %r3728, 25;
	shf.l.wrap.b32 	%r3734, %r3728, %r3727, 25;
	mov.b64 	%rd4120, {%r3734, %r3733};
	xor.b64  	%rd4121, %rd4119, %rd4120;
	xor.b64  	%rd4122, %rd4103, %rd4055;
	xor.b64  	%rd4123, %rd4103, %rd4079;
	and.b64  	%rd4124, %rd4123, %rd4122;
	xor.b64  	%rd4125, %rd4124, %rd4103;
	add.s64 	%rd4126, %rd4115, %rd4125;
	add.s64 	%rd4127, %rd4126, %rd4121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3735,%dummy}, %rd3730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3736}, %rd3730;
	}
	shf.r.wrap.b32 	%r3737, %r3736, %r3735, 19;
	shf.r.wrap.b32 	%r3738, %r3735, %r3736, 19;
	mov.b64 	%rd4128, {%r3738, %r3737};
	shf.l.wrap.b32 	%r3739, %r3735, %r3736, 3;
	shf.l.wrap.b32 	%r3740, %r3736, %r3735, 3;
	mov.b64 	%rd4129, {%r3740, %r3739};
	shr.u64 	%rd4130, %rd3730, 6;
	xor.b64  	%rd4131, %rd4128, %rd4130;
	xor.b64  	%rd4132, %rd4131, %rd4129;
	shf.r.wrap.b32 	%r3741, %r3330, %r3329, 1;
	shf.r.wrap.b32 	%r3742, %r3329, %r3330, 1;
	mov.b64 	%rd4133, {%r3742, %r3741};
	shf.r.wrap.b32 	%r3743, %r3330, %r3329, 8;
	shf.r.wrap.b32 	%r3744, %r3329, %r3330, 8;
	mov.b64 	%rd4134, {%r3744, %r3743};
	shr.u64 	%rd4135, %rd3561, 7;
	xor.b64  	%rd4136, %rd4133, %rd4135;
	xor.b64  	%rd4137, %rd4136, %rd4134;
	add.s64 	%rd4138, %rd3665, %rd3548;
	add.s64 	%rd4139, %rd4138, %rd4132;
	add.s64 	%rd4140, %rd4139, %rd4137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3745,%dummy}, %rd3743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3746}, %rd3743;
	}
	shf.r.wrap.b32 	%r3747, %r3746, %r3745, 19;
	shf.r.wrap.b32 	%r3748, %r3745, %r3746, 19;
	mov.b64 	%rd4141, {%r3748, %r3747};
	shf.l.wrap.b32 	%r3749, %r3745, %r3746, 3;
	shf.l.wrap.b32 	%r3750, %r3746, %r3745, 3;
	mov.b64 	%rd4142, {%r3750, %r3749};
	shr.u64 	%rd4143, %rd3743, 6;
	xor.b64  	%rd4144, %rd4141, %rd4143;
	xor.b64  	%rd4145, %rd4144, %rd4142;
	shf.r.wrap.b32 	%r3751, %r3342, %r3341, 1;
	shf.r.wrap.b32 	%r3752, %r3341, %r3342, 1;
	mov.b64 	%rd4146, {%r3752, %r3751};
	shf.r.wrap.b32 	%r3753, %r3342, %r3341, 8;
	shf.r.wrap.b32 	%r3754, %r3341, %r3342, 8;
	mov.b64 	%rd4147, {%r3754, %r3753};
	shr.u64 	%rd4148, %rd3574, 7;
	xor.b64  	%rd4149, %rd4146, %rd4148;
	xor.b64  	%rd4150, %rd4149, %rd4147;
	add.s64 	%rd4151, %rd3678, %rd3561;
	add.s64 	%rd4152, %rd4151, %rd4145;
	add.s64 	%rd4153, %rd4152, %rd4150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3755,%dummy}, %rd4140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3756}, %rd4140;
	}
	shf.r.wrap.b32 	%r3757, %r3756, %r3755, 19;
	shf.r.wrap.b32 	%r3758, %r3755, %r3756, 19;
	mov.b64 	%rd4154, {%r3758, %r3757};
	shf.l.wrap.b32 	%r3759, %r3755, %r3756, 3;
	shf.l.wrap.b32 	%r3760, %r3756, %r3755, 3;
	mov.b64 	%rd4155, {%r3760, %r3759};
	shr.u64 	%rd4156, %rd4140, 6;
	xor.b64  	%rd4157, %rd4154, %rd4156;
	xor.b64  	%rd4158, %rd4157, %rd4155;
	shf.r.wrap.b32 	%r3761, %r3354, %r3353, 1;
	shf.r.wrap.b32 	%r3762, %r3353, %r3354, 1;
	mov.b64 	%rd4159, {%r3762, %r3761};
	shf.r.wrap.b32 	%r3763, %r3354, %r3353, 8;
	shf.r.wrap.b32 	%r3764, %r3353, %r3354, 8;
	mov.b64 	%rd4160, {%r3764, %r3763};
	shr.u64 	%rd4161, %rd3587, 7;
	xor.b64  	%rd4162, %rd4159, %rd4161;
	xor.b64  	%rd4163, %rd4162, %rd4160;
	add.s64 	%rd4164, %rd3691, %rd3574;
	add.s64 	%rd4165, %rd4164, %rd4158;
	add.s64 	%rd4166, %rd4165, %rd4163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3765,%dummy}, %rd4153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3766}, %rd4153;
	}
	shf.r.wrap.b32 	%r3767, %r3766, %r3765, 19;
	shf.r.wrap.b32 	%r3768, %r3765, %r3766, 19;
	mov.b64 	%rd4167, {%r3768, %r3767};
	shf.l.wrap.b32 	%r3769, %r3765, %r3766, 3;
	shf.l.wrap.b32 	%r3770, %r3766, %r3765, 3;
	mov.b64 	%rd4168, {%r3770, %r3769};
	shr.u64 	%rd4169, %rd4153, 6;
	xor.b64  	%rd4170, %rd4167, %rd4169;
	xor.b64  	%rd4171, %rd4170, %rd4168;
	shf.r.wrap.b32 	%r3771, %r3366, %r3365, 1;
	shf.r.wrap.b32 	%r3772, %r3365, %r3366, 1;
	mov.b64 	%rd4172, {%r3772, %r3771};
	shf.r.wrap.b32 	%r3773, %r3366, %r3365, 8;
	shf.r.wrap.b32 	%r3774, %r3365, %r3366, 8;
	mov.b64 	%rd4173, {%r3774, %r3773};
	shr.u64 	%rd4174, %rd3600, 7;
	xor.b64  	%rd4175, %rd4172, %rd4174;
	xor.b64  	%rd4176, %rd4175, %rd4173;
	add.s64 	%rd4177, %rd3704, %rd3587;
	add.s64 	%rd4178, %rd4177, %rd4171;
	add.s64 	%rd4179, %rd4178, %rd4176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3775,%dummy}, %rd4166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3776}, %rd4166;
	}
	shf.r.wrap.b32 	%r3777, %r3776, %r3775, 19;
	shf.r.wrap.b32 	%r3778, %r3775, %r3776, 19;
	mov.b64 	%rd4180, {%r3778, %r3777};
	shf.l.wrap.b32 	%r3779, %r3775, %r3776, 3;
	shf.l.wrap.b32 	%r3780, %r3776, %r3775, 3;
	mov.b64 	%rd4181, {%r3780, %r3779};
	shr.u64 	%rd4182, %rd4166, 6;
	xor.b64  	%rd4183, %rd4180, %rd4182;
	xor.b64  	%rd4184, %rd4183, %rd4181;
	shf.r.wrap.b32 	%r3781, %r3378, %r3377, 1;
	shf.r.wrap.b32 	%r3782, %r3377, %r3378, 1;
	mov.b64 	%rd4185, {%r3782, %r3781};
	shf.r.wrap.b32 	%r3783, %r3378, %r3377, 8;
	shf.r.wrap.b32 	%r3784, %r3377, %r3378, 8;
	mov.b64 	%rd4186, {%r3784, %r3783};
	shr.u64 	%rd4187, %rd3613, 7;
	xor.b64  	%rd4188, %rd4185, %rd4187;
	xor.b64  	%rd4189, %rd4188, %rd4186;
	add.s64 	%rd4190, %rd3717, %rd3600;
	add.s64 	%rd4191, %rd4190, %rd4184;
	add.s64 	%rd4192, %rd4191, %rd4189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3785,%dummy}, %rd4179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3786}, %rd4179;
	}
	shf.r.wrap.b32 	%r3787, %r3786, %r3785, 19;
	shf.r.wrap.b32 	%r3788, %r3785, %r3786, 19;
	mov.b64 	%rd4193, {%r3788, %r3787};
	shf.l.wrap.b32 	%r3789, %r3785, %r3786, 3;
	shf.l.wrap.b32 	%r3790, %r3786, %r3785, 3;
	mov.b64 	%rd4194, {%r3790, %r3789};
	shr.u64 	%rd4195, %rd4179, 6;
	xor.b64  	%rd4196, %rd4193, %rd4195;
	xor.b64  	%rd4197, %rd4196, %rd4194;
	shf.r.wrap.b32 	%r3791, %r3390, %r3389, 1;
	shf.r.wrap.b32 	%r3792, %r3389, %r3390, 1;
	mov.b64 	%rd4198, {%r3792, %r3791};
	shf.r.wrap.b32 	%r3793, %r3390, %r3389, 8;
	shf.r.wrap.b32 	%r3794, %r3389, %r3390, 8;
	mov.b64 	%rd4199, {%r3794, %r3793};
	shr.u64 	%rd4200, %rd3626, 7;
	xor.b64  	%rd4201, %rd4198, %rd4200;
	xor.b64  	%rd4202, %rd4201, %rd4199;
	add.s64 	%rd4203, %rd3730, %rd3613;
	add.s64 	%rd4204, %rd4203, %rd4197;
	add.s64 	%rd4205, %rd4204, %rd4202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3795,%dummy}, %rd4192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3796}, %rd4192;
	}
	shf.r.wrap.b32 	%r3797, %r3796, %r3795, 19;
	shf.r.wrap.b32 	%r3798, %r3795, %r3796, 19;
	mov.b64 	%rd4206, {%r3798, %r3797};
	shf.l.wrap.b32 	%r3799, %r3795, %r3796, 3;
	shf.l.wrap.b32 	%r3800, %r3796, %r3795, 3;
	mov.b64 	%rd4207, {%r3800, %r3799};
	shr.u64 	%rd4208, %rd4192, 6;
	xor.b64  	%rd4209, %rd4206, %rd4208;
	xor.b64  	%rd4210, %rd4209, %rd4207;
	shf.r.wrap.b32 	%r3801, %r3402, %r3401, 1;
	shf.r.wrap.b32 	%r3802, %r3401, %r3402, 1;
	mov.b64 	%rd4211, {%r3802, %r3801};
	shf.r.wrap.b32 	%r3803, %r3402, %r3401, 8;
	shf.r.wrap.b32 	%r3804, %r3401, %r3402, 8;
	mov.b64 	%rd4212, {%r3804, %r3803};
	shr.u64 	%rd4213, %rd3639, 7;
	xor.b64  	%rd4214, %rd4211, %rd4213;
	xor.b64  	%rd4215, %rd4214, %rd4212;
	add.s64 	%rd4216, %rd3743, %rd3626;
	add.s64 	%rd4217, %rd4216, %rd4210;
	add.s64 	%rd4218, %rd4217, %rd4215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3805,%dummy}, %rd4205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3806}, %rd4205;
	}
	shf.r.wrap.b32 	%r3807, %r3806, %r3805, 19;
	shf.r.wrap.b32 	%r3808, %r3805, %r3806, 19;
	mov.b64 	%rd4219, {%r3808, %r3807};
	shf.l.wrap.b32 	%r3809, %r3805, %r3806, 3;
	shf.l.wrap.b32 	%r3810, %r3806, %r3805, 3;
	mov.b64 	%rd4220, {%r3810, %r3809};
	shr.u64 	%rd4221, %rd4205, 6;
	xor.b64  	%rd4222, %rd4219, %rd4221;
	xor.b64  	%rd4223, %rd4222, %rd4220;
	shf.r.wrap.b32 	%r3811, %r3414, %r3413, 1;
	shf.r.wrap.b32 	%r3812, %r3413, %r3414, 1;
	mov.b64 	%rd4224, {%r3812, %r3811};
	shf.r.wrap.b32 	%r3813, %r3414, %r3413, 8;
	shf.r.wrap.b32 	%r3814, %r3413, %r3414, 8;
	mov.b64 	%rd4225, {%r3814, %r3813};
	shr.u64 	%rd4226, %rd3652, 7;
	xor.b64  	%rd4227, %rd4224, %rd4226;
	xor.b64  	%rd4228, %rd4227, %rd4225;
	add.s64 	%rd4229, %rd4140, %rd3639;
	add.s64 	%rd4230, %rd4229, %rd4223;
	add.s64 	%rd4231, %rd4230, %rd4228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3815,%dummy}, %rd4218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3816}, %rd4218;
	}
	shf.r.wrap.b32 	%r3817, %r3816, %r3815, 19;
	shf.r.wrap.b32 	%r3818, %r3815, %r3816, 19;
	mov.b64 	%rd4232, {%r3818, %r3817};
	shf.l.wrap.b32 	%r3819, %r3815, %r3816, 3;
	shf.l.wrap.b32 	%r3820, %r3816, %r3815, 3;
	mov.b64 	%rd4233, {%r3820, %r3819};
	shr.u64 	%rd4234, %rd4218, 6;
	xor.b64  	%rd4235, %rd4232, %rd4234;
	xor.b64  	%rd4236, %rd4235, %rd4233;
	shf.r.wrap.b32 	%r3821, %r3426, %r3425, 1;
	shf.r.wrap.b32 	%r3822, %r3425, %r3426, 1;
	mov.b64 	%rd4237, {%r3822, %r3821};
	shf.r.wrap.b32 	%r3823, %r3426, %r3425, 8;
	shf.r.wrap.b32 	%r3824, %r3425, %r3426, 8;
	mov.b64 	%rd4238, {%r3824, %r3823};
	shr.u64 	%rd4239, %rd3665, 7;
	xor.b64  	%rd4240, %rd4237, %rd4239;
	xor.b64  	%rd4241, %rd4240, %rd4238;
	add.s64 	%rd4242, %rd4153, %rd3652;
	add.s64 	%rd4243, %rd4242, %rd4236;
	add.s64 	%rd4244, %rd4243, %rd4241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3825,%dummy}, %rd4231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3826}, %rd4231;
	}
	shf.r.wrap.b32 	%r3827, %r3826, %r3825, 19;
	shf.r.wrap.b32 	%r3828, %r3825, %r3826, 19;
	mov.b64 	%rd4245, {%r3828, %r3827};
	shf.l.wrap.b32 	%r3829, %r3825, %r3826, 3;
	shf.l.wrap.b32 	%r3830, %r3826, %r3825, 3;
	mov.b64 	%rd4246, {%r3830, %r3829};
	shr.u64 	%rd4247, %rd4231, 6;
	xor.b64  	%rd4248, %rd4245, %rd4247;
	xor.b64  	%rd4249, %rd4248, %rd4246;
	shf.r.wrap.b32 	%r3831, %r3438, %r3437, 1;
	shf.r.wrap.b32 	%r3832, %r3437, %r3438, 1;
	mov.b64 	%rd4250, {%r3832, %r3831};
	shf.r.wrap.b32 	%r3833, %r3438, %r3437, 8;
	shf.r.wrap.b32 	%r3834, %r3437, %r3438, 8;
	mov.b64 	%rd4251, {%r3834, %r3833};
	shr.u64 	%rd4252, %rd3678, 7;
	xor.b64  	%rd4253, %rd4250, %rd4252;
	xor.b64  	%rd4254, %rd4253, %rd4251;
	add.s64 	%rd4255, %rd4166, %rd3665;
	add.s64 	%rd4256, %rd4255, %rd4249;
	add.s64 	%rd4257, %rd4256, %rd4254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3835,%dummy}, %rd4244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3836}, %rd4244;
	}
	shf.r.wrap.b32 	%r3837, %r3836, %r3835, 19;
	shf.r.wrap.b32 	%r3838, %r3835, %r3836, 19;
	mov.b64 	%rd4258, {%r3838, %r3837};
	shf.l.wrap.b32 	%r3839, %r3835, %r3836, 3;
	shf.l.wrap.b32 	%r3840, %r3836, %r3835, 3;
	mov.b64 	%rd4259, {%r3840, %r3839};
	shr.u64 	%rd4260, %rd4244, 6;
	xor.b64  	%rd4261, %rd4258, %rd4260;
	xor.b64  	%rd4262, %rd4261, %rd4259;
	shf.r.wrap.b32 	%r3841, %r3450, %r3449, 1;
	shf.r.wrap.b32 	%r3842, %r3449, %r3450, 1;
	mov.b64 	%rd4263, {%r3842, %r3841};
	shf.r.wrap.b32 	%r3843, %r3450, %r3449, 8;
	shf.r.wrap.b32 	%r3844, %r3449, %r3450, 8;
	mov.b64 	%rd4264, {%r3844, %r3843};
	shr.u64 	%rd4265, %rd3691, 7;
	xor.b64  	%rd4266, %rd4263, %rd4265;
	xor.b64  	%rd4267, %rd4266, %rd4264;
	add.s64 	%rd4268, %rd4179, %rd3678;
	add.s64 	%rd4269, %rd4268, %rd4262;
	add.s64 	%rd4270, %rd4269, %rd4267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3845,%dummy}, %rd4257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3846}, %rd4257;
	}
	shf.r.wrap.b32 	%r3847, %r3846, %r3845, 19;
	shf.r.wrap.b32 	%r3848, %r3845, %r3846, 19;
	mov.b64 	%rd4271, {%r3848, %r3847};
	shf.l.wrap.b32 	%r3849, %r3845, %r3846, 3;
	shf.l.wrap.b32 	%r3850, %r3846, %r3845, 3;
	mov.b64 	%rd4272, {%r3850, %r3849};
	shr.u64 	%rd4273, %rd4257, 6;
	xor.b64  	%rd4274, %rd4271, %rd4273;
	xor.b64  	%rd4275, %rd4274, %rd4272;
	shf.r.wrap.b32 	%r3851, %r3460, %r3459, 1;
	shf.r.wrap.b32 	%r3852, %r3459, %r3460, 1;
	mov.b64 	%rd4276, {%r3852, %r3851};
	shf.r.wrap.b32 	%r3853, %r3460, %r3459, 8;
	shf.r.wrap.b32 	%r3854, %r3459, %r3460, 8;
	mov.b64 	%rd4277, {%r3854, %r3853};
	shr.u64 	%rd4278, %rd3704, 7;
	xor.b64  	%rd4279, %rd4276, %rd4278;
	xor.b64  	%rd4280, %rd4279, %rd4277;
	add.s64 	%rd4281, %rd4192, %rd3691;
	add.s64 	%rd4282, %rd4281, %rd4275;
	add.s64 	%rd4283, %rd4282, %rd4280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3855,%dummy}, %rd4270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3856}, %rd4270;
	}
	shf.r.wrap.b32 	%r3857, %r3856, %r3855, 19;
	shf.r.wrap.b32 	%r3858, %r3855, %r3856, 19;
	mov.b64 	%rd4284, {%r3858, %r3857};
	shf.l.wrap.b32 	%r3859, %r3855, %r3856, 3;
	shf.l.wrap.b32 	%r3860, %r3856, %r3855, 3;
	mov.b64 	%rd4285, {%r3860, %r3859};
	shr.u64 	%rd4286, %rd4270, 6;
	xor.b64  	%rd4287, %rd4284, %rd4286;
	xor.b64  	%rd4288, %rd4287, %rd4285;
	shf.r.wrap.b32 	%r3861, %r3470, %r3469, 1;
	shf.r.wrap.b32 	%r3862, %r3469, %r3470, 1;
	mov.b64 	%rd4289, {%r3862, %r3861};
	shf.r.wrap.b32 	%r3863, %r3470, %r3469, 8;
	shf.r.wrap.b32 	%r3864, %r3469, %r3470, 8;
	mov.b64 	%rd4290, {%r3864, %r3863};
	shr.u64 	%rd4291, %rd3717, 7;
	xor.b64  	%rd4292, %rd4289, %rd4291;
	xor.b64  	%rd4293, %rd4292, %rd4290;
	add.s64 	%rd4294, %rd4205, %rd3704;
	add.s64 	%rd4295, %rd4294, %rd4288;
	add.s64 	%rd4296, %rd4295, %rd4293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3865,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3866}, %rd4283;
	}
	shf.r.wrap.b32 	%r3867, %r3866, %r3865, 19;
	shf.r.wrap.b32 	%r3868, %r3865, %r3866, 19;
	mov.b64 	%rd4297, {%r3868, %r3867};
	shf.l.wrap.b32 	%r3869, %r3865, %r3866, 3;
	shf.l.wrap.b32 	%r3870, %r3866, %r3865, 3;
	mov.b64 	%rd4298, {%r3870, %r3869};
	shr.u64 	%rd4299, %rd4283, 6;
	xor.b64  	%rd4300, %rd4297, %rd4299;
	xor.b64  	%rd4301, %rd4300, %rd4298;
	shf.r.wrap.b32 	%r3871, %r3736, %r3735, 1;
	shf.r.wrap.b32 	%r3872, %r3735, %r3736, 1;
	mov.b64 	%rd4302, {%r3872, %r3871};
	shf.r.wrap.b32 	%r3873, %r3736, %r3735, 8;
	shf.r.wrap.b32 	%r3874, %r3735, %r3736, 8;
	mov.b64 	%rd4303, {%r3874, %r3873};
	shr.u64 	%rd4304, %rd3730, 7;
	xor.b64  	%rd4305, %rd4302, %rd4304;
	xor.b64  	%rd4306, %rd4305, %rd4303;
	add.s64 	%rd4307, %rd4218, %rd3717;
	add.s64 	%rd4308, %rd4307, %rd4301;
	add.s64 	%rd4309, %rd4308, %rd4306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3875,%dummy}, %rd4296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3876}, %rd4296;
	}
	shf.r.wrap.b32 	%r3877, %r3876, %r3875, 19;
	shf.r.wrap.b32 	%r3878, %r3875, %r3876, 19;
	mov.b64 	%rd4310, {%r3878, %r3877};
	shf.l.wrap.b32 	%r3879, %r3875, %r3876, 3;
	shf.l.wrap.b32 	%r3880, %r3876, %r3875, 3;
	mov.b64 	%rd4311, {%r3880, %r3879};
	shr.u64 	%rd4312, %rd4296, 6;
	xor.b64  	%rd4313, %rd4310, %rd4312;
	xor.b64  	%rd4314, %rd4313, %rd4311;
	shf.r.wrap.b32 	%r3881, %r3746, %r3745, 1;
	shf.r.wrap.b32 	%r3882, %r3745, %r3746, 1;
	mov.b64 	%rd4315, {%r3882, %r3881};
	shf.r.wrap.b32 	%r3883, %r3746, %r3745, 8;
	shf.r.wrap.b32 	%r3884, %r3745, %r3746, 8;
	mov.b64 	%rd4316, {%r3884, %r3883};
	shr.u64 	%rd4317, %rd3743, 7;
	xor.b64  	%rd4318, %rd4315, %rd4317;
	xor.b64  	%rd4319, %rd4318, %rd4316;
	add.s64 	%rd4320, %rd4231, %rd3730;
	add.s64 	%rd4321, %rd4320, %rd4314;
	add.s64 	%rd4322, %rd4321, %rd4319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3885,%dummy}, %rd4309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3886}, %rd4309;
	}
	shf.r.wrap.b32 	%r3887, %r3886, %r3885, 19;
	shf.r.wrap.b32 	%r3888, %r3885, %r3886, 19;
	mov.b64 	%rd4323, {%r3888, %r3887};
	shf.l.wrap.b32 	%r3889, %r3885, %r3886, 3;
	shf.l.wrap.b32 	%r3890, %r3886, %r3885, 3;
	mov.b64 	%rd4324, {%r3890, %r3889};
	shr.u64 	%rd4325, %rd4309, 6;
	xor.b64  	%rd4326, %rd4323, %rd4325;
	xor.b64  	%rd4327, %rd4326, %rd4324;
	shf.r.wrap.b32 	%r3891, %r3756, %r3755, 1;
	shf.r.wrap.b32 	%r3892, %r3755, %r3756, 1;
	mov.b64 	%rd4328, {%r3892, %r3891};
	shf.r.wrap.b32 	%r3893, %r3756, %r3755, 8;
	shf.r.wrap.b32 	%r3894, %r3755, %r3756, 8;
	mov.b64 	%rd4329, {%r3894, %r3893};
	shr.u64 	%rd4330, %rd4140, 7;
	xor.b64  	%rd4331, %rd4328, %rd4330;
	xor.b64  	%rd4332, %rd4331, %rd4329;
	add.s64 	%rd4333, %rd4244, %rd3743;
	add.s64 	%rd4334, %rd4333, %rd4327;
	add.s64 	%rd4335, %rd4334, %rd4332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3895,%dummy}, %rd4116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3896}, %rd4116;
	}
	shf.r.wrap.b32 	%r3897, %r3896, %r3895, 14;
	shf.r.wrap.b32 	%r3898, %r3895, %r3896, 14;
	mov.b64 	%rd4336, {%r3898, %r3897};
	shf.r.wrap.b32 	%r3899, %r3896, %r3895, 18;
	shf.r.wrap.b32 	%r3900, %r3895, %r3896, 18;
	mov.b64 	%rd4337, {%r3900, %r3899};
	xor.b64  	%rd4338, %rd4337, %rd4336;
	shf.l.wrap.b32 	%r3901, %r3895, %r3896, 23;
	shf.l.wrap.b32 	%r3902, %r3896, %r3895, 23;
	mov.b64 	%rd4339, {%r3902, %r3901};
	xor.b64  	%rd4340, %rd4338, %rd4339;
	xor.b64  	%rd4341, %rd4092, %rd4068;
	and.b64  	%rd4342, %rd4341, %rd4116;
	xor.b64  	%rd4343, %rd4342, %rd4068;
	add.s64 	%rd4344, %rd4343, %rd4044;
	add.s64 	%rd4345, %rd4344, %rd4140;
	add.s64 	%rd4346, %rd4345, %rd8820;
	add.s64 	%rd4347, %rd4346, %rd4340;
	add.s64 	%rd4348, %rd4347, %rd4055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3903,%dummy}, %rd4127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3904}, %rd4127;
	}
	shf.r.wrap.b32 	%r3905, %r3904, %r3903, 28;
	shf.r.wrap.b32 	%r3906, %r3903, %r3904, 28;
	mov.b64 	%rd4349, {%r3906, %r3905};
	shf.l.wrap.b32 	%r3907, %r3903, %r3904, 30;
	shf.l.wrap.b32 	%r3908, %r3904, %r3903, 30;
	mov.b64 	%rd4350, {%r3908, %r3907};
	xor.b64  	%rd4351, %rd4350, %rd4349;
	shf.l.wrap.b32 	%r3909, %r3903, %r3904, 25;
	shf.l.wrap.b32 	%r3910, %r3904, %r3903, 25;
	mov.b64 	%rd4352, {%r3910, %r3909};
	xor.b64  	%rd4353, %rd4351, %rd4352;
	xor.b64  	%rd4354, %rd4127, %rd4079;
	xor.b64  	%rd4355, %rd4127, %rd4103;
	and.b64  	%rd4356, %rd4355, %rd4354;
	xor.b64  	%rd4357, %rd4356, %rd4127;
	add.s64 	%rd4358, %rd4347, %rd4357;
	add.s64 	%rd4359, %rd4358, %rd4353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3911,%dummy}, %rd4348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3912}, %rd4348;
	}
	shf.r.wrap.b32 	%r3913, %r3912, %r3911, 14;
	shf.r.wrap.b32 	%r3914, %r3911, %r3912, 14;
	mov.b64 	%rd4360, {%r3914, %r3913};
	shf.r.wrap.b32 	%r3915, %r3912, %r3911, 18;
	shf.r.wrap.b32 	%r3916, %r3911, %r3912, 18;
	mov.b64 	%rd4361, {%r3916, %r3915};
	xor.b64  	%rd4362, %rd4361, %rd4360;
	shf.l.wrap.b32 	%r3917, %r3911, %r3912, 23;
	shf.l.wrap.b32 	%r3918, %r3912, %r3911, 23;
	mov.b64 	%rd4363, {%r3918, %r3917};
	xor.b64  	%rd4364, %rd4362, %rd4363;
	xor.b64  	%rd4365, %rd4116, %rd4092;
	and.b64  	%rd4366, %rd4348, %rd4365;
	xor.b64  	%rd4367, %rd4366, %rd4092;
	add.s64 	%rd4368, %rd4153, %rd4068;
	add.s64 	%rd4369, %rd4368, %rd8819;
	add.s64 	%rd4370, %rd4369, %rd4367;
	add.s64 	%rd4371, %rd4370, %rd4364;
	add.s64 	%rd4372, %rd4371, %rd4079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3919,%dummy}, %rd4359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3920}, %rd4359;
	}
	shf.r.wrap.b32 	%r3921, %r3920, %r3919, 28;
	shf.r.wrap.b32 	%r3922, %r3919, %r3920, 28;
	mov.b64 	%rd4373, {%r3922, %r3921};
	shf.l.wrap.b32 	%r3923, %r3919, %r3920, 30;
	shf.l.wrap.b32 	%r3924, %r3920, %r3919, 30;
	mov.b64 	%rd4374, {%r3924, %r3923};
	xor.b64  	%rd4375, %rd4374, %rd4373;
	shf.l.wrap.b32 	%r3925, %r3919, %r3920, 25;
	shf.l.wrap.b32 	%r3926, %r3920, %r3919, 25;
	mov.b64 	%rd4376, {%r3926, %r3925};
	xor.b64  	%rd4377, %rd4375, %rd4376;
	xor.b64  	%rd4378, %rd4359, %rd4103;
	xor.b64  	%rd4379, %rd4359, %rd4127;
	and.b64  	%rd4380, %rd4379, %rd4378;
	xor.b64  	%rd4381, %rd4380, %rd4359;
	add.s64 	%rd4382, %rd4371, %rd4381;
	add.s64 	%rd4383, %rd4382, %rd4377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3927,%dummy}, %rd4372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3928}, %rd4372;
	}
	shf.r.wrap.b32 	%r3929, %r3928, %r3927, 14;
	shf.r.wrap.b32 	%r3930, %r3927, %r3928, 14;
	mov.b64 	%rd4384, {%r3930, %r3929};
	shf.r.wrap.b32 	%r3931, %r3928, %r3927, 18;
	shf.r.wrap.b32 	%r3932, %r3927, %r3928, 18;
	mov.b64 	%rd4385, {%r3932, %r3931};
	xor.b64  	%rd4386, %rd4385, %rd4384;
	shf.l.wrap.b32 	%r3933, %r3927, %r3928, 23;
	shf.l.wrap.b32 	%r3934, %r3928, %r3927, 23;
	mov.b64 	%rd4387, {%r3934, %r3933};
	xor.b64  	%rd4388, %rd4386, %rd4387;
	xor.b64  	%rd4389, %rd4348, %rd4116;
	and.b64  	%rd4390, %rd4372, %rd4389;
	xor.b64  	%rd4391, %rd4390, %rd4116;
	add.s64 	%rd4392, %rd4166, %rd4092;
	add.s64 	%rd4393, %rd4392, %rd8818;
	add.s64 	%rd4394, %rd4393, %rd4391;
	add.s64 	%rd4395, %rd4394, %rd4388;
	add.s64 	%rd4396, %rd4395, %rd4103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3935,%dummy}, %rd4383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3936}, %rd4383;
	}
	shf.r.wrap.b32 	%r3937, %r3936, %r3935, 28;
	shf.r.wrap.b32 	%r3938, %r3935, %r3936, 28;
	mov.b64 	%rd4397, {%r3938, %r3937};
	shf.l.wrap.b32 	%r3939, %r3935, %r3936, 30;
	shf.l.wrap.b32 	%r3940, %r3936, %r3935, 30;
	mov.b64 	%rd4398, {%r3940, %r3939};
	xor.b64  	%rd4399, %rd4398, %rd4397;
	shf.l.wrap.b32 	%r3941, %r3935, %r3936, 25;
	shf.l.wrap.b32 	%r3942, %r3936, %r3935, 25;
	mov.b64 	%rd4400, {%r3942, %r3941};
	xor.b64  	%rd4401, %rd4399, %rd4400;
	xor.b64  	%rd4402, %rd4383, %rd4127;
	xor.b64  	%rd4403, %rd4383, %rd4359;
	and.b64  	%rd4404, %rd4403, %rd4402;
	xor.b64  	%rd4405, %rd4404, %rd4383;
	add.s64 	%rd4406, %rd4395, %rd4405;
	add.s64 	%rd4407, %rd4406, %rd4401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3943,%dummy}, %rd4396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3944}, %rd4396;
	}
	shf.r.wrap.b32 	%r3945, %r3944, %r3943, 14;
	shf.r.wrap.b32 	%r3946, %r3943, %r3944, 14;
	mov.b64 	%rd4408, {%r3946, %r3945};
	shf.r.wrap.b32 	%r3947, %r3944, %r3943, 18;
	shf.r.wrap.b32 	%r3948, %r3943, %r3944, 18;
	mov.b64 	%rd4409, {%r3948, %r3947};
	xor.b64  	%rd4410, %rd4409, %rd4408;
	shf.l.wrap.b32 	%r3949, %r3943, %r3944, 23;
	shf.l.wrap.b32 	%r3950, %r3944, %r3943, 23;
	mov.b64 	%rd4411, {%r3950, %r3949};
	xor.b64  	%rd4412, %rd4410, %rd4411;
	xor.b64  	%rd4413, %rd4372, %rd4348;
	and.b64  	%rd4414, %rd4396, %rd4413;
	xor.b64  	%rd4415, %rd4414, %rd4348;
	add.s64 	%rd4416, %rd4179, %rd4116;
	add.s64 	%rd4417, %rd4416, %rd8817;
	add.s64 	%rd4418, %rd4417, %rd4415;
	add.s64 	%rd4419, %rd4418, %rd4412;
	add.s64 	%rd4420, %rd4419, %rd4127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3951,%dummy}, %rd4407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3952}, %rd4407;
	}
	shf.r.wrap.b32 	%r3953, %r3952, %r3951, 28;
	shf.r.wrap.b32 	%r3954, %r3951, %r3952, 28;
	mov.b64 	%rd4421, {%r3954, %r3953};
	shf.l.wrap.b32 	%r3955, %r3951, %r3952, 30;
	shf.l.wrap.b32 	%r3956, %r3952, %r3951, 30;
	mov.b64 	%rd4422, {%r3956, %r3955};
	xor.b64  	%rd4423, %rd4422, %rd4421;
	shf.l.wrap.b32 	%r3957, %r3951, %r3952, 25;
	shf.l.wrap.b32 	%r3958, %r3952, %r3951, 25;
	mov.b64 	%rd4424, {%r3958, %r3957};
	xor.b64  	%rd4425, %rd4423, %rd4424;
	xor.b64  	%rd4426, %rd4407, %rd4359;
	xor.b64  	%rd4427, %rd4407, %rd4383;
	and.b64  	%rd4428, %rd4427, %rd4426;
	xor.b64  	%rd4429, %rd4428, %rd4407;
	add.s64 	%rd4430, %rd4419, %rd4429;
	add.s64 	%rd4431, %rd4430, %rd4425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3959,%dummy}, %rd4420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3960}, %rd4420;
	}
	shf.r.wrap.b32 	%r3961, %r3960, %r3959, 14;
	shf.r.wrap.b32 	%r3962, %r3959, %r3960, 14;
	mov.b64 	%rd4432, {%r3962, %r3961};
	shf.r.wrap.b32 	%r3963, %r3960, %r3959, 18;
	shf.r.wrap.b32 	%r3964, %r3959, %r3960, 18;
	mov.b64 	%rd4433, {%r3964, %r3963};
	xor.b64  	%rd4434, %rd4433, %rd4432;
	shf.l.wrap.b32 	%r3965, %r3959, %r3960, 23;
	shf.l.wrap.b32 	%r3966, %r3960, %r3959, 23;
	mov.b64 	%rd4435, {%r3966, %r3965};
	xor.b64  	%rd4436, %rd4434, %rd4435;
	xor.b64  	%rd4437, %rd4396, %rd4372;
	and.b64  	%rd4438, %rd4420, %rd4437;
	xor.b64  	%rd4439, %rd4438, %rd4372;
	add.s64 	%rd4440, %rd4348, %rd4192;
	add.s64 	%rd4441, %rd4440, %rd8816;
	add.s64 	%rd4442, %rd4441, %rd4439;
	add.s64 	%rd4443, %rd4442, %rd4436;
	add.s64 	%rd4444, %rd4443, %rd4359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3967,%dummy}, %rd4431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3968}, %rd4431;
	}
	shf.r.wrap.b32 	%r3969, %r3968, %r3967, 28;
	shf.r.wrap.b32 	%r3970, %r3967, %r3968, 28;
	mov.b64 	%rd4445, {%r3970, %r3969};
	shf.l.wrap.b32 	%r3971, %r3967, %r3968, 30;
	shf.l.wrap.b32 	%r3972, %r3968, %r3967, 30;
	mov.b64 	%rd4446, {%r3972, %r3971};
	xor.b64  	%rd4447, %rd4446, %rd4445;
	shf.l.wrap.b32 	%r3973, %r3967, %r3968, 25;
	shf.l.wrap.b32 	%r3974, %r3968, %r3967, 25;
	mov.b64 	%rd4448, {%r3974, %r3973};
	xor.b64  	%rd4449, %rd4447, %rd4448;
	xor.b64  	%rd4450, %rd4431, %rd4383;
	xor.b64  	%rd4451, %rd4431, %rd4407;
	and.b64  	%rd4452, %rd4451, %rd4450;
	xor.b64  	%rd4453, %rd4452, %rd4431;
	add.s64 	%rd4454, %rd4443, %rd4453;
	add.s64 	%rd4455, %rd4454, %rd4449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3975,%dummy}, %rd4444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3976}, %rd4444;
	}
	shf.r.wrap.b32 	%r3977, %r3976, %r3975, 14;
	shf.r.wrap.b32 	%r3978, %r3975, %r3976, 14;
	mov.b64 	%rd4456, {%r3978, %r3977};
	shf.r.wrap.b32 	%r3979, %r3976, %r3975, 18;
	shf.r.wrap.b32 	%r3980, %r3975, %r3976, 18;
	mov.b64 	%rd4457, {%r3980, %r3979};
	xor.b64  	%rd4458, %rd4457, %rd4456;
	shf.l.wrap.b32 	%r3981, %r3975, %r3976, 23;
	shf.l.wrap.b32 	%r3982, %r3976, %r3975, 23;
	mov.b64 	%rd4459, {%r3982, %r3981};
	xor.b64  	%rd4460, %rd4458, %rd4459;
	xor.b64  	%rd4461, %rd4420, %rd4396;
	and.b64  	%rd4462, %rd4444, %rd4461;
	xor.b64  	%rd4463, %rd4462, %rd4396;
	add.s64 	%rd4464, %rd4372, %rd4205;
	add.s64 	%rd4465, %rd4464, %rd8815;
	add.s64 	%rd4466, %rd4465, %rd4463;
	add.s64 	%rd4467, %rd4466, %rd4460;
	add.s64 	%rd4468, %rd4467, %rd4383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3983,%dummy}, %rd4455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3984}, %rd4455;
	}
	shf.r.wrap.b32 	%r3985, %r3984, %r3983, 28;
	shf.r.wrap.b32 	%r3986, %r3983, %r3984, 28;
	mov.b64 	%rd4469, {%r3986, %r3985};
	shf.l.wrap.b32 	%r3987, %r3983, %r3984, 30;
	shf.l.wrap.b32 	%r3988, %r3984, %r3983, 30;
	mov.b64 	%rd4470, {%r3988, %r3987};
	xor.b64  	%rd4471, %rd4470, %rd4469;
	shf.l.wrap.b32 	%r3989, %r3983, %r3984, 25;
	shf.l.wrap.b32 	%r3990, %r3984, %r3983, 25;
	mov.b64 	%rd4472, {%r3990, %r3989};
	xor.b64  	%rd4473, %rd4471, %rd4472;
	xor.b64  	%rd4474, %rd4455, %rd4407;
	xor.b64  	%rd4475, %rd4455, %rd4431;
	and.b64  	%rd4476, %rd4475, %rd4474;
	xor.b64  	%rd4477, %rd4476, %rd4455;
	add.s64 	%rd4478, %rd4467, %rd4477;
	add.s64 	%rd4479, %rd4478, %rd4473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3991,%dummy}, %rd4468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3992}, %rd4468;
	}
	shf.r.wrap.b32 	%r3993, %r3992, %r3991, 14;
	shf.r.wrap.b32 	%r3994, %r3991, %r3992, 14;
	mov.b64 	%rd4480, {%r3994, %r3993};
	shf.r.wrap.b32 	%r3995, %r3992, %r3991, 18;
	shf.r.wrap.b32 	%r3996, %r3991, %r3992, 18;
	mov.b64 	%rd4481, {%r3996, %r3995};
	xor.b64  	%rd4482, %rd4481, %rd4480;
	shf.l.wrap.b32 	%r3997, %r3991, %r3992, 23;
	shf.l.wrap.b32 	%r3998, %r3992, %r3991, 23;
	mov.b64 	%rd4483, {%r3998, %r3997};
	xor.b64  	%rd4484, %rd4482, %rd4483;
	xor.b64  	%rd4485, %rd4444, %rd4420;
	and.b64  	%rd4486, %rd4468, %rd4485;
	xor.b64  	%rd4487, %rd4486, %rd4420;
	add.s64 	%rd4488, %rd4396, %rd4218;
	add.s64 	%rd4489, %rd4488, %rd8814;
	add.s64 	%rd4490, %rd4489, %rd4487;
	add.s64 	%rd4491, %rd4490, %rd4484;
	add.s64 	%rd4492, %rd4491, %rd4407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3999,%dummy}, %rd4479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4000}, %rd4479;
	}
	shf.r.wrap.b32 	%r4001, %r4000, %r3999, 28;
	shf.r.wrap.b32 	%r4002, %r3999, %r4000, 28;
	mov.b64 	%rd4493, {%r4002, %r4001};
	shf.l.wrap.b32 	%r4003, %r3999, %r4000, 30;
	shf.l.wrap.b32 	%r4004, %r4000, %r3999, 30;
	mov.b64 	%rd4494, {%r4004, %r4003};
	xor.b64  	%rd4495, %rd4494, %rd4493;
	shf.l.wrap.b32 	%r4005, %r3999, %r4000, 25;
	shf.l.wrap.b32 	%r4006, %r4000, %r3999, 25;
	mov.b64 	%rd4496, {%r4006, %r4005};
	xor.b64  	%rd4497, %rd4495, %rd4496;
	xor.b64  	%rd4498, %rd4479, %rd4431;
	xor.b64  	%rd4499, %rd4479, %rd4455;
	and.b64  	%rd4500, %rd4499, %rd4498;
	xor.b64  	%rd4501, %rd4500, %rd4479;
	add.s64 	%rd4502, %rd4491, %rd4501;
	add.s64 	%rd4503, %rd4502, %rd4497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4007,%dummy}, %rd4492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4008}, %rd4492;
	}
	shf.r.wrap.b32 	%r4009, %r4008, %r4007, 14;
	shf.r.wrap.b32 	%r4010, %r4007, %r4008, 14;
	mov.b64 	%rd4504, {%r4010, %r4009};
	shf.r.wrap.b32 	%r4011, %r4008, %r4007, 18;
	shf.r.wrap.b32 	%r4012, %r4007, %r4008, 18;
	mov.b64 	%rd4505, {%r4012, %r4011};
	xor.b64  	%rd4506, %rd4505, %rd4504;
	shf.l.wrap.b32 	%r4013, %r4007, %r4008, 23;
	shf.l.wrap.b32 	%r4014, %r4008, %r4007, 23;
	mov.b64 	%rd4507, {%r4014, %r4013};
	xor.b64  	%rd4508, %rd4506, %rd4507;
	xor.b64  	%rd4509, %rd4468, %rd4444;
	and.b64  	%rd4510, %rd4492, %rd4509;
	xor.b64  	%rd4511, %rd4510, %rd4444;
	add.s64 	%rd4512, %rd4420, %rd4231;
	add.s64 	%rd4513, %rd4512, %rd8813;
	add.s64 	%rd4514, %rd4513, %rd4511;
	add.s64 	%rd4515, %rd4514, %rd4508;
	add.s64 	%rd4516, %rd4515, %rd4431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4015,%dummy}, %rd4503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4016}, %rd4503;
	}
	shf.r.wrap.b32 	%r4017, %r4016, %r4015, 28;
	shf.r.wrap.b32 	%r4018, %r4015, %r4016, 28;
	mov.b64 	%rd4517, {%r4018, %r4017};
	shf.l.wrap.b32 	%r4019, %r4015, %r4016, 30;
	shf.l.wrap.b32 	%r4020, %r4016, %r4015, 30;
	mov.b64 	%rd4518, {%r4020, %r4019};
	xor.b64  	%rd4519, %rd4518, %rd4517;
	shf.l.wrap.b32 	%r4021, %r4015, %r4016, 25;
	shf.l.wrap.b32 	%r4022, %r4016, %r4015, 25;
	mov.b64 	%rd4520, {%r4022, %r4021};
	xor.b64  	%rd4521, %rd4519, %rd4520;
	xor.b64  	%rd4522, %rd4503, %rd4455;
	xor.b64  	%rd4523, %rd4503, %rd4479;
	and.b64  	%rd4524, %rd4523, %rd4522;
	xor.b64  	%rd4525, %rd4524, %rd4503;
	add.s64 	%rd4526, %rd4515, %rd4525;
	add.s64 	%rd4527, %rd4526, %rd4521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4023,%dummy}, %rd4516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4024}, %rd4516;
	}
	shf.r.wrap.b32 	%r4025, %r4024, %r4023, 14;
	shf.r.wrap.b32 	%r4026, %r4023, %r4024, 14;
	mov.b64 	%rd4528, {%r4026, %r4025};
	shf.r.wrap.b32 	%r4027, %r4024, %r4023, 18;
	shf.r.wrap.b32 	%r4028, %r4023, %r4024, 18;
	mov.b64 	%rd4529, {%r4028, %r4027};
	xor.b64  	%rd4530, %rd4529, %rd4528;
	shf.l.wrap.b32 	%r4029, %r4023, %r4024, 23;
	shf.l.wrap.b32 	%r4030, %r4024, %r4023, 23;
	mov.b64 	%rd4531, {%r4030, %r4029};
	xor.b64  	%rd4532, %rd4530, %rd4531;
	xor.b64  	%rd4533, %rd4492, %rd4468;
	and.b64  	%rd4534, %rd4516, %rd4533;
	xor.b64  	%rd4535, %rd4534, %rd4468;
	add.s64 	%rd4536, %rd4444, %rd4244;
	add.s64 	%rd4537, %rd4536, %rd8812;
	add.s64 	%rd4538, %rd4537, %rd4535;
	add.s64 	%rd4539, %rd4538, %rd4532;
	add.s64 	%rd4540, %rd4539, %rd4455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4031,%dummy}, %rd4527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4032}, %rd4527;
	}
	shf.r.wrap.b32 	%r4033, %r4032, %r4031, 28;
	shf.r.wrap.b32 	%r4034, %r4031, %r4032, 28;
	mov.b64 	%rd4541, {%r4034, %r4033};
	shf.l.wrap.b32 	%r4035, %r4031, %r4032, 30;
	shf.l.wrap.b32 	%r4036, %r4032, %r4031, 30;
	mov.b64 	%rd4542, {%r4036, %r4035};
	xor.b64  	%rd4543, %rd4542, %rd4541;
	shf.l.wrap.b32 	%r4037, %r4031, %r4032, 25;
	shf.l.wrap.b32 	%r4038, %r4032, %r4031, 25;
	mov.b64 	%rd4544, {%r4038, %r4037};
	xor.b64  	%rd4545, %rd4543, %rd4544;
	xor.b64  	%rd4546, %rd4527, %rd4479;
	xor.b64  	%rd4547, %rd4527, %rd4503;
	and.b64  	%rd4548, %rd4547, %rd4546;
	xor.b64  	%rd4549, %rd4548, %rd4527;
	add.s64 	%rd4550, %rd4539, %rd4549;
	add.s64 	%rd4551, %rd4550, %rd4545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4039,%dummy}, %rd4540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4040}, %rd4540;
	}
	shf.r.wrap.b32 	%r4041, %r4040, %r4039, 14;
	shf.r.wrap.b32 	%r4042, %r4039, %r4040, 14;
	mov.b64 	%rd4552, {%r4042, %r4041};
	shf.r.wrap.b32 	%r4043, %r4040, %r4039, 18;
	shf.r.wrap.b32 	%r4044, %r4039, %r4040, 18;
	mov.b64 	%rd4553, {%r4044, %r4043};
	xor.b64  	%rd4554, %rd4553, %rd4552;
	shf.l.wrap.b32 	%r4045, %r4039, %r4040, 23;
	shf.l.wrap.b32 	%r4046, %r4040, %r4039, 23;
	mov.b64 	%rd4555, {%r4046, %r4045};
	xor.b64  	%rd4556, %rd4554, %rd4555;
	xor.b64  	%rd4557, %rd4516, %rd4492;
	and.b64  	%rd4558, %rd4540, %rd4557;
	xor.b64  	%rd4559, %rd4558, %rd4492;
	add.s64 	%rd4560, %rd4468, %rd4257;
	add.s64 	%rd4561, %rd4560, %rd8811;
	add.s64 	%rd4562, %rd4561, %rd4559;
	add.s64 	%rd4563, %rd4562, %rd4556;
	add.s64 	%rd4564, %rd4563, %rd4479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4047,%dummy}, %rd4551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4048}, %rd4551;
	}
	shf.r.wrap.b32 	%r4049, %r4048, %r4047, 28;
	shf.r.wrap.b32 	%r4050, %r4047, %r4048, 28;
	mov.b64 	%rd4565, {%r4050, %r4049};
	shf.l.wrap.b32 	%r4051, %r4047, %r4048, 30;
	shf.l.wrap.b32 	%r4052, %r4048, %r4047, 30;
	mov.b64 	%rd4566, {%r4052, %r4051};
	xor.b64  	%rd4567, %rd4566, %rd4565;
	shf.l.wrap.b32 	%r4053, %r4047, %r4048, 25;
	shf.l.wrap.b32 	%r4054, %r4048, %r4047, 25;
	mov.b64 	%rd4568, {%r4054, %r4053};
	xor.b64  	%rd4569, %rd4567, %rd4568;
	xor.b64  	%rd4570, %rd4551, %rd4503;
	xor.b64  	%rd4571, %rd4551, %rd4527;
	and.b64  	%rd4572, %rd4571, %rd4570;
	xor.b64  	%rd4573, %rd4572, %rd4551;
	add.s64 	%rd4574, %rd4563, %rd4573;
	add.s64 	%rd4575, %rd4574, %rd4569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4055,%dummy}, %rd4564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4056}, %rd4564;
	}
	shf.r.wrap.b32 	%r4057, %r4056, %r4055, 14;
	shf.r.wrap.b32 	%r4058, %r4055, %r4056, 14;
	mov.b64 	%rd4576, {%r4058, %r4057};
	shf.r.wrap.b32 	%r4059, %r4056, %r4055, 18;
	shf.r.wrap.b32 	%r4060, %r4055, %r4056, 18;
	mov.b64 	%rd4577, {%r4060, %r4059};
	xor.b64  	%rd4578, %rd4577, %rd4576;
	shf.l.wrap.b32 	%r4061, %r4055, %r4056, 23;
	shf.l.wrap.b32 	%r4062, %r4056, %r4055, 23;
	mov.b64 	%rd4579, {%r4062, %r4061};
	xor.b64  	%rd4580, %rd4578, %rd4579;
	xor.b64  	%rd4581, %rd4540, %rd4516;
	and.b64  	%rd4582, %rd4564, %rd4581;
	xor.b64  	%rd4583, %rd4582, %rd4516;
	add.s64 	%rd4584, %rd4492, %rd4270;
	add.s64 	%rd4585, %rd4584, %rd8810;
	add.s64 	%rd4586, %rd4585, %rd4583;
	add.s64 	%rd4587, %rd4586, %rd4580;
	add.s64 	%rd4588, %rd4587, %rd4503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4063,%dummy}, %rd4575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4064}, %rd4575;
	}
	shf.r.wrap.b32 	%r4065, %r4064, %r4063, 28;
	shf.r.wrap.b32 	%r4066, %r4063, %r4064, 28;
	mov.b64 	%rd4589, {%r4066, %r4065};
	shf.l.wrap.b32 	%r4067, %r4063, %r4064, 30;
	shf.l.wrap.b32 	%r4068, %r4064, %r4063, 30;
	mov.b64 	%rd4590, {%r4068, %r4067};
	xor.b64  	%rd4591, %rd4590, %rd4589;
	shf.l.wrap.b32 	%r4069, %r4063, %r4064, 25;
	shf.l.wrap.b32 	%r4070, %r4064, %r4063, 25;
	mov.b64 	%rd4592, {%r4070, %r4069};
	xor.b64  	%rd4593, %rd4591, %rd4592;
	xor.b64  	%rd4594, %rd4575, %rd4527;
	xor.b64  	%rd4595, %rd4575, %rd4551;
	and.b64  	%rd4596, %rd4595, %rd4594;
	xor.b64  	%rd4597, %rd4596, %rd4575;
	add.s64 	%rd4598, %rd4587, %rd4597;
	add.s64 	%rd4599, %rd4598, %rd4593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4071,%dummy}, %rd4588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4072}, %rd4588;
	}
	shf.r.wrap.b32 	%r4073, %r4072, %r4071, 14;
	shf.r.wrap.b32 	%r4074, %r4071, %r4072, 14;
	mov.b64 	%rd4600, {%r4074, %r4073};
	shf.r.wrap.b32 	%r4075, %r4072, %r4071, 18;
	shf.r.wrap.b32 	%r4076, %r4071, %r4072, 18;
	mov.b64 	%rd4601, {%r4076, %r4075};
	xor.b64  	%rd4602, %rd4601, %rd4600;
	shf.l.wrap.b32 	%r4077, %r4071, %r4072, 23;
	shf.l.wrap.b32 	%r4078, %r4072, %r4071, 23;
	mov.b64 	%rd4603, {%r4078, %r4077};
	xor.b64  	%rd4604, %rd4602, %rd4603;
	xor.b64  	%rd4605, %rd4564, %rd4540;
	and.b64  	%rd4606, %rd4588, %rd4605;
	xor.b64  	%rd4607, %rd4606, %rd4540;
	add.s64 	%rd4608, %rd4516, %rd4283;
	add.s64 	%rd4609, %rd4608, %rd8809;
	add.s64 	%rd4610, %rd4609, %rd4607;
	add.s64 	%rd4611, %rd4610, %rd4604;
	add.s64 	%rd4612, %rd4611, %rd4527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4079,%dummy}, %rd4599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4080}, %rd4599;
	}
	shf.r.wrap.b32 	%r4081, %r4080, %r4079, 28;
	shf.r.wrap.b32 	%r4082, %r4079, %r4080, 28;
	mov.b64 	%rd4613, {%r4082, %r4081};
	shf.l.wrap.b32 	%r4083, %r4079, %r4080, 30;
	shf.l.wrap.b32 	%r4084, %r4080, %r4079, 30;
	mov.b64 	%rd4614, {%r4084, %r4083};
	xor.b64  	%rd4615, %rd4614, %rd4613;
	shf.l.wrap.b32 	%r4085, %r4079, %r4080, 25;
	shf.l.wrap.b32 	%r4086, %r4080, %r4079, 25;
	mov.b64 	%rd4616, {%r4086, %r4085};
	xor.b64  	%rd4617, %rd4615, %rd4616;
	xor.b64  	%rd4618, %rd4599, %rd4551;
	xor.b64  	%rd4619, %rd4599, %rd4575;
	and.b64  	%rd4620, %rd4619, %rd4618;
	xor.b64  	%rd4621, %rd4620, %rd4599;
	add.s64 	%rd4622, %rd4611, %rd4621;
	add.s64 	%rd4623, %rd4622, %rd4617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4087,%dummy}, %rd4612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4088}, %rd4612;
	}
	shf.r.wrap.b32 	%r4089, %r4088, %r4087, 14;
	shf.r.wrap.b32 	%r4090, %r4087, %r4088, 14;
	mov.b64 	%rd4624, {%r4090, %r4089};
	shf.r.wrap.b32 	%r4091, %r4088, %r4087, 18;
	shf.r.wrap.b32 	%r4092, %r4087, %r4088, 18;
	mov.b64 	%rd4625, {%r4092, %r4091};
	xor.b64  	%rd4626, %rd4625, %rd4624;
	shf.l.wrap.b32 	%r4093, %r4087, %r4088, 23;
	shf.l.wrap.b32 	%r4094, %r4088, %r4087, 23;
	mov.b64 	%rd4627, {%r4094, %r4093};
	xor.b64  	%rd4628, %rd4626, %rd4627;
	xor.b64  	%rd4629, %rd4588, %rd4564;
	and.b64  	%rd4630, %rd4612, %rd4629;
	xor.b64  	%rd4631, %rd4630, %rd4564;
	add.s64 	%rd4632, %rd4540, %rd4296;
	add.s64 	%rd4633, %rd4632, %rd8808;
	add.s64 	%rd4634, %rd4633, %rd4631;
	add.s64 	%rd4635, %rd4634, %rd4628;
	add.s64 	%rd4636, %rd4635, %rd4551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4095,%dummy}, %rd4623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4096}, %rd4623;
	}
	shf.r.wrap.b32 	%r4097, %r4096, %r4095, 28;
	shf.r.wrap.b32 	%r4098, %r4095, %r4096, 28;
	mov.b64 	%rd4637, {%r4098, %r4097};
	shf.l.wrap.b32 	%r4099, %r4095, %r4096, 30;
	shf.l.wrap.b32 	%r4100, %r4096, %r4095, 30;
	mov.b64 	%rd4638, {%r4100, %r4099};
	xor.b64  	%rd4639, %rd4638, %rd4637;
	shf.l.wrap.b32 	%r4101, %r4095, %r4096, 25;
	shf.l.wrap.b32 	%r4102, %r4096, %r4095, 25;
	mov.b64 	%rd4640, {%r4102, %r4101};
	xor.b64  	%rd4641, %rd4639, %rd4640;
	xor.b64  	%rd4642, %rd4623, %rd4575;
	xor.b64  	%rd4643, %rd4623, %rd4599;
	and.b64  	%rd4644, %rd4643, %rd4642;
	xor.b64  	%rd4645, %rd4644, %rd4623;
	add.s64 	%rd4646, %rd4635, %rd4645;
	add.s64 	%rd4647, %rd4646, %rd4641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4103,%dummy}, %rd4636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4104}, %rd4636;
	}
	shf.r.wrap.b32 	%r4105, %r4104, %r4103, 14;
	shf.r.wrap.b32 	%r4106, %r4103, %r4104, 14;
	mov.b64 	%rd4648, {%r4106, %r4105};
	shf.r.wrap.b32 	%r4107, %r4104, %r4103, 18;
	shf.r.wrap.b32 	%r4108, %r4103, %r4104, 18;
	mov.b64 	%rd4649, {%r4108, %r4107};
	xor.b64  	%rd4650, %rd4649, %rd4648;
	shf.l.wrap.b32 	%r4109, %r4103, %r4104, 23;
	shf.l.wrap.b32 	%r4110, %r4104, %r4103, 23;
	mov.b64 	%rd4651, {%r4110, %r4109};
	xor.b64  	%rd4652, %rd4650, %rd4651;
	xor.b64  	%rd4653, %rd4612, %rd4588;
	and.b64  	%rd4654, %rd4636, %rd4653;
	xor.b64  	%rd4655, %rd4654, %rd4588;
	add.s64 	%rd4656, %rd4564, %rd4309;
	add.s64 	%rd4657, %rd4656, %rd8807;
	add.s64 	%rd4658, %rd4657, %rd4655;
	add.s64 	%rd4659, %rd4658, %rd4652;
	add.s64 	%rd4660, %rd4659, %rd4575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4111,%dummy}, %rd4647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4112}, %rd4647;
	}
	shf.r.wrap.b32 	%r4113, %r4112, %r4111, 28;
	shf.r.wrap.b32 	%r4114, %r4111, %r4112, 28;
	mov.b64 	%rd4661, {%r4114, %r4113};
	shf.l.wrap.b32 	%r4115, %r4111, %r4112, 30;
	shf.l.wrap.b32 	%r4116, %r4112, %r4111, 30;
	mov.b64 	%rd4662, {%r4116, %r4115};
	xor.b64  	%rd4663, %rd4662, %rd4661;
	shf.l.wrap.b32 	%r4117, %r4111, %r4112, 25;
	shf.l.wrap.b32 	%r4118, %r4112, %r4111, 25;
	mov.b64 	%rd4664, {%r4118, %r4117};
	xor.b64  	%rd4665, %rd4663, %rd4664;
	xor.b64  	%rd4666, %rd4647, %rd4599;
	xor.b64  	%rd4667, %rd4647, %rd4623;
	and.b64  	%rd4668, %rd4667, %rd4666;
	xor.b64  	%rd4669, %rd4668, %rd4647;
	add.s64 	%rd4670, %rd4659, %rd4669;
	add.s64 	%rd4671, %rd4670, %rd4665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4119,%dummy}, %rd4660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4120}, %rd4660;
	}
	shf.r.wrap.b32 	%r4121, %r4120, %r4119, 14;
	shf.r.wrap.b32 	%r4122, %r4119, %r4120, 14;
	mov.b64 	%rd4672, {%r4122, %r4121};
	shf.r.wrap.b32 	%r4123, %r4120, %r4119, 18;
	shf.r.wrap.b32 	%r4124, %r4119, %r4120, 18;
	mov.b64 	%rd4673, {%r4124, %r4123};
	xor.b64  	%rd4674, %rd4673, %rd4672;
	shf.l.wrap.b32 	%r4125, %r4119, %r4120, 23;
	shf.l.wrap.b32 	%r4126, %r4120, %r4119, 23;
	mov.b64 	%rd4675, {%r4126, %r4125};
	xor.b64  	%rd4676, %rd4674, %rd4675;
	xor.b64  	%rd4677, %rd4636, %rd4612;
	and.b64  	%rd4678, %rd4660, %rd4677;
	xor.b64  	%rd4679, %rd4678, %rd4612;
	add.s64 	%rd4680, %rd4588, %rd4322;
	add.s64 	%rd4681, %rd4680, %rd8806;
	add.s64 	%rd4682, %rd4681, %rd4679;
	add.s64 	%rd4683, %rd4682, %rd4676;
	add.s64 	%rd4684, %rd4683, %rd4599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4127,%dummy}, %rd4671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4128}, %rd4671;
	}
	shf.r.wrap.b32 	%r4129, %r4128, %r4127, 28;
	shf.r.wrap.b32 	%r4130, %r4127, %r4128, 28;
	mov.b64 	%rd4685, {%r4130, %r4129};
	shf.l.wrap.b32 	%r4131, %r4127, %r4128, 30;
	shf.l.wrap.b32 	%r4132, %r4128, %r4127, 30;
	mov.b64 	%rd4686, {%r4132, %r4131};
	xor.b64  	%rd4687, %rd4686, %rd4685;
	shf.l.wrap.b32 	%r4133, %r4127, %r4128, 25;
	shf.l.wrap.b32 	%r4134, %r4128, %r4127, 25;
	mov.b64 	%rd4688, {%r4134, %r4133};
	xor.b64  	%rd4689, %rd4687, %rd4688;
	xor.b64  	%rd4690, %rd4671, %rd4623;
	xor.b64  	%rd4691, %rd4671, %rd4647;
	and.b64  	%rd4692, %rd4691, %rd4690;
	xor.b64  	%rd4693, %rd4692, %rd4671;
	add.s64 	%rd4694, %rd4683, %rd4693;
	add.s64 	%rd4695, %rd4694, %rd4689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4135,%dummy}, %rd4684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4136}, %rd4684;
	}
	shf.r.wrap.b32 	%r4137, %r4136, %r4135, 14;
	shf.r.wrap.b32 	%r4138, %r4135, %r4136, 14;
	mov.b64 	%rd4696, {%r4138, %r4137};
	shf.r.wrap.b32 	%r4139, %r4136, %r4135, 18;
	shf.r.wrap.b32 	%r4140, %r4135, %r4136, 18;
	mov.b64 	%rd4697, {%r4140, %r4139};
	xor.b64  	%rd4698, %rd4697, %rd4696;
	shf.l.wrap.b32 	%r4141, %r4135, %r4136, 23;
	shf.l.wrap.b32 	%r4142, %r4136, %r4135, 23;
	mov.b64 	%rd4699, {%r4142, %r4141};
	xor.b64  	%rd4700, %rd4698, %rd4699;
	xor.b64  	%rd4701, %rd4660, %rd4636;
	and.b64  	%rd4702, %rd4684, %rd4701;
	xor.b64  	%rd4703, %rd4702, %rd4636;
	add.s64 	%rd4704, %rd4612, %rd4335;
	add.s64 	%rd4705, %rd4704, %rd8805;
	add.s64 	%rd4706, %rd4705, %rd4703;
	add.s64 	%rd4707, %rd4706, %rd4700;
	add.s64 	%rd4708, %rd4707, %rd4623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4143,%dummy}, %rd4695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4144}, %rd4695;
	}
	shf.r.wrap.b32 	%r4145, %r4144, %r4143, 28;
	shf.r.wrap.b32 	%r4146, %r4143, %r4144, 28;
	mov.b64 	%rd4709, {%r4146, %r4145};
	shf.l.wrap.b32 	%r4147, %r4143, %r4144, 30;
	shf.l.wrap.b32 	%r4148, %r4144, %r4143, 30;
	mov.b64 	%rd4710, {%r4148, %r4147};
	xor.b64  	%rd4711, %rd4710, %rd4709;
	shf.l.wrap.b32 	%r4149, %r4143, %r4144, 25;
	shf.l.wrap.b32 	%r4150, %r4144, %r4143, 25;
	mov.b64 	%rd4712, {%r4150, %r4149};
	xor.b64  	%rd4713, %rd4711, %rd4712;
	xor.b64  	%rd4714, %rd4695, %rd4647;
	xor.b64  	%rd4715, %rd4695, %rd4671;
	and.b64  	%rd4716, %rd4715, %rd4714;
	xor.b64  	%rd4717, %rd4716, %rd4695;
	add.s64 	%rd4718, %rd4707, %rd4717;
	add.s64 	%rd4719, %rd4718, %rd4713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4151,%dummy}, %rd4322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4152}, %rd4322;
	}
	shf.r.wrap.b32 	%r4153, %r4152, %r4151, 19;
	shf.r.wrap.b32 	%r4154, %r4151, %r4152, 19;
	mov.b64 	%rd4720, {%r4154, %r4153};
	shf.l.wrap.b32 	%r4155, %r4151, %r4152, 3;
	shf.l.wrap.b32 	%r4156, %r4152, %r4151, 3;
	mov.b64 	%rd4721, {%r4156, %r4155};
	shr.u64 	%rd4722, %rd4322, 6;
	xor.b64  	%rd4723, %rd4720, %rd4722;
	xor.b64  	%rd4724, %rd4723, %rd4721;
	shf.r.wrap.b32 	%r4157, %r3766, %r3765, 1;
	shf.r.wrap.b32 	%r4158, %r3765, %r3766, 1;
	mov.b64 	%rd4725, {%r4158, %r4157};
	shf.r.wrap.b32 	%r4159, %r3766, %r3765, 8;
	shf.r.wrap.b32 	%r4160, %r3765, %r3766, 8;
	mov.b64 	%rd4726, {%r4160, %r4159};
	shr.u64 	%rd4727, %rd4153, 7;
	xor.b64  	%rd4728, %rd4725, %rd4727;
	xor.b64  	%rd4729, %rd4728, %rd4726;
	add.s64 	%rd4730, %rd4257, %rd4140;
	add.s64 	%rd4731, %rd4730, %rd4724;
	add.s64 	%rd4732, %rd4731, %rd4729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4161,%dummy}, %rd4335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4162}, %rd4335;
	}
	shf.r.wrap.b32 	%r4163, %r4162, %r4161, 19;
	shf.r.wrap.b32 	%r4164, %r4161, %r4162, 19;
	mov.b64 	%rd4733, {%r4164, %r4163};
	shf.l.wrap.b32 	%r4165, %r4161, %r4162, 3;
	shf.l.wrap.b32 	%r4166, %r4162, %r4161, 3;
	mov.b64 	%rd4734, {%r4166, %r4165};
	shr.u64 	%rd4735, %rd4335, 6;
	xor.b64  	%rd4736, %rd4733, %rd4735;
	xor.b64  	%rd4737, %rd4736, %rd4734;
	shf.r.wrap.b32 	%r4167, %r3776, %r3775, 1;
	shf.r.wrap.b32 	%r4168, %r3775, %r3776, 1;
	mov.b64 	%rd4738, {%r4168, %r4167};
	shf.r.wrap.b32 	%r4169, %r3776, %r3775, 8;
	shf.r.wrap.b32 	%r4170, %r3775, %r3776, 8;
	mov.b64 	%rd4739, {%r4170, %r4169};
	shr.u64 	%rd4740, %rd4166, 7;
	xor.b64  	%rd4741, %rd4738, %rd4740;
	xor.b64  	%rd4742, %rd4741, %rd4739;
	add.s64 	%rd4743, %rd4270, %rd4153;
	add.s64 	%rd4744, %rd4743, %rd4737;
	add.s64 	%rd4745, %rd4744, %rd4742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4171,%dummy}, %rd4732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4172}, %rd4732;
	}
	shf.r.wrap.b32 	%r4173, %r4172, %r4171, 19;
	shf.r.wrap.b32 	%r4174, %r4171, %r4172, 19;
	mov.b64 	%rd4746, {%r4174, %r4173};
	shf.l.wrap.b32 	%r4175, %r4171, %r4172, 3;
	shf.l.wrap.b32 	%r4176, %r4172, %r4171, 3;
	mov.b64 	%rd4747, {%r4176, %r4175};
	shr.u64 	%rd4748, %rd4732, 6;
	xor.b64  	%rd4749, %rd4746, %rd4748;
	xor.b64  	%rd4750, %rd4749, %rd4747;
	shf.r.wrap.b32 	%r4177, %r3786, %r3785, 1;
	shf.r.wrap.b32 	%r4178, %r3785, %r3786, 1;
	mov.b64 	%rd4751, {%r4178, %r4177};
	shf.r.wrap.b32 	%r4179, %r3786, %r3785, 8;
	shf.r.wrap.b32 	%r4180, %r3785, %r3786, 8;
	mov.b64 	%rd4752, {%r4180, %r4179};
	shr.u64 	%rd4753, %rd4179, 7;
	xor.b64  	%rd4754, %rd4751, %rd4753;
	xor.b64  	%rd4755, %rd4754, %rd4752;
	add.s64 	%rd4756, %rd4283, %rd4166;
	add.s64 	%rd4757, %rd4756, %rd4750;
	add.s64 	%rd4758, %rd4757, %rd4755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4181,%dummy}, %rd4745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4182}, %rd4745;
	}
	shf.r.wrap.b32 	%r4183, %r4182, %r4181, 19;
	shf.r.wrap.b32 	%r4184, %r4181, %r4182, 19;
	mov.b64 	%rd4759, {%r4184, %r4183};
	shf.l.wrap.b32 	%r4185, %r4181, %r4182, 3;
	shf.l.wrap.b32 	%r4186, %r4182, %r4181, 3;
	mov.b64 	%rd4760, {%r4186, %r4185};
	shr.u64 	%rd4761, %rd4745, 6;
	xor.b64  	%rd4762, %rd4759, %rd4761;
	xor.b64  	%rd4763, %rd4762, %rd4760;
	shf.r.wrap.b32 	%r4187, %r3796, %r3795, 1;
	shf.r.wrap.b32 	%r4188, %r3795, %r3796, 1;
	mov.b64 	%rd4764, {%r4188, %r4187};
	shf.r.wrap.b32 	%r4189, %r3796, %r3795, 8;
	shf.r.wrap.b32 	%r4190, %r3795, %r3796, 8;
	mov.b64 	%rd4765, {%r4190, %r4189};
	shr.u64 	%rd4766, %rd4192, 7;
	xor.b64  	%rd4767, %rd4764, %rd4766;
	xor.b64  	%rd4768, %rd4767, %rd4765;
	add.s64 	%rd4769, %rd4296, %rd4179;
	add.s64 	%rd4770, %rd4769, %rd4763;
	add.s64 	%rd4771, %rd4770, %rd4768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4191,%dummy}, %rd4758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4192}, %rd4758;
	}
	shf.r.wrap.b32 	%r4193, %r4192, %r4191, 19;
	shf.r.wrap.b32 	%r4194, %r4191, %r4192, 19;
	mov.b64 	%rd4772, {%r4194, %r4193};
	shf.l.wrap.b32 	%r4195, %r4191, %r4192, 3;
	shf.l.wrap.b32 	%r4196, %r4192, %r4191, 3;
	mov.b64 	%rd4773, {%r4196, %r4195};
	shr.u64 	%rd4774, %rd4758, 6;
	xor.b64  	%rd4775, %rd4772, %rd4774;
	xor.b64  	%rd4776, %rd4775, %rd4773;
	shf.r.wrap.b32 	%r4197, %r3806, %r3805, 1;
	shf.r.wrap.b32 	%r4198, %r3805, %r3806, 1;
	mov.b64 	%rd4777, {%r4198, %r4197};
	shf.r.wrap.b32 	%r4199, %r3806, %r3805, 8;
	shf.r.wrap.b32 	%r4200, %r3805, %r3806, 8;
	mov.b64 	%rd4778, {%r4200, %r4199};
	shr.u64 	%rd4779, %rd4205, 7;
	xor.b64  	%rd4780, %rd4777, %rd4779;
	xor.b64  	%rd4781, %rd4780, %rd4778;
	add.s64 	%rd4782, %rd4309, %rd4192;
	add.s64 	%rd4783, %rd4782, %rd4776;
	add.s64 	%rd4784, %rd4783, %rd4781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4201,%dummy}, %rd4771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4202}, %rd4771;
	}
	shf.r.wrap.b32 	%r4203, %r4202, %r4201, 19;
	shf.r.wrap.b32 	%r4204, %r4201, %r4202, 19;
	mov.b64 	%rd4785, {%r4204, %r4203};
	shf.l.wrap.b32 	%r4205, %r4201, %r4202, 3;
	shf.l.wrap.b32 	%r4206, %r4202, %r4201, 3;
	mov.b64 	%rd4786, {%r4206, %r4205};
	shr.u64 	%rd4787, %rd4771, 6;
	xor.b64  	%rd4788, %rd4785, %rd4787;
	xor.b64  	%rd4789, %rd4788, %rd4786;
	shf.r.wrap.b32 	%r4207, %r3816, %r3815, 1;
	shf.r.wrap.b32 	%r4208, %r3815, %r3816, 1;
	mov.b64 	%rd4790, {%r4208, %r4207};
	shf.r.wrap.b32 	%r4209, %r3816, %r3815, 8;
	shf.r.wrap.b32 	%r4210, %r3815, %r3816, 8;
	mov.b64 	%rd4791, {%r4210, %r4209};
	shr.u64 	%rd4792, %rd4218, 7;
	xor.b64  	%rd4793, %rd4790, %rd4792;
	xor.b64  	%rd4794, %rd4793, %rd4791;
	add.s64 	%rd4795, %rd4322, %rd4205;
	add.s64 	%rd4796, %rd4795, %rd4789;
	add.s64 	%rd4797, %rd4796, %rd4794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4211,%dummy}, %rd4784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4212}, %rd4784;
	}
	shf.r.wrap.b32 	%r4213, %r4212, %r4211, 19;
	shf.r.wrap.b32 	%r4214, %r4211, %r4212, 19;
	mov.b64 	%rd4798, {%r4214, %r4213};
	shf.l.wrap.b32 	%r4215, %r4211, %r4212, 3;
	shf.l.wrap.b32 	%r4216, %r4212, %r4211, 3;
	mov.b64 	%rd4799, {%r4216, %r4215};
	shr.u64 	%rd4800, %rd4784, 6;
	xor.b64  	%rd4801, %rd4798, %rd4800;
	xor.b64  	%rd4802, %rd4801, %rd4799;
	shf.r.wrap.b32 	%r4217, %r3826, %r3825, 1;
	shf.r.wrap.b32 	%r4218, %r3825, %r3826, 1;
	mov.b64 	%rd4803, {%r4218, %r4217};
	shf.r.wrap.b32 	%r4219, %r3826, %r3825, 8;
	shf.r.wrap.b32 	%r4220, %r3825, %r3826, 8;
	mov.b64 	%rd4804, {%r4220, %r4219};
	shr.u64 	%rd4805, %rd4231, 7;
	xor.b64  	%rd4806, %rd4803, %rd4805;
	xor.b64  	%rd4807, %rd4806, %rd4804;
	add.s64 	%rd4808, %rd4335, %rd4218;
	add.s64 	%rd4809, %rd4808, %rd4802;
	add.s64 	%rd4810, %rd4809, %rd4807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4221,%dummy}, %rd4797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4222}, %rd4797;
	}
	shf.r.wrap.b32 	%r4223, %r4222, %r4221, 19;
	shf.r.wrap.b32 	%r4224, %r4221, %r4222, 19;
	mov.b64 	%rd4811, {%r4224, %r4223};
	shf.l.wrap.b32 	%r4225, %r4221, %r4222, 3;
	shf.l.wrap.b32 	%r4226, %r4222, %r4221, 3;
	mov.b64 	%rd4812, {%r4226, %r4225};
	shr.u64 	%rd4813, %rd4797, 6;
	xor.b64  	%rd4814, %rd4811, %rd4813;
	xor.b64  	%rd4815, %rd4814, %rd4812;
	shf.r.wrap.b32 	%r4227, %r3836, %r3835, 1;
	shf.r.wrap.b32 	%r4228, %r3835, %r3836, 1;
	mov.b64 	%rd4816, {%r4228, %r4227};
	shf.r.wrap.b32 	%r4229, %r3836, %r3835, 8;
	shf.r.wrap.b32 	%r4230, %r3835, %r3836, 8;
	mov.b64 	%rd4817, {%r4230, %r4229};
	shr.u64 	%rd4818, %rd4244, 7;
	xor.b64  	%rd4819, %rd4816, %rd4818;
	xor.b64  	%rd4820, %rd4819, %rd4817;
	add.s64 	%rd4821, %rd4732, %rd4231;
	add.s64 	%rd4822, %rd4821, %rd4815;
	add.s64 	%rd4823, %rd4822, %rd4820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4231,%dummy}, %rd4810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4232}, %rd4810;
	}
	shf.r.wrap.b32 	%r4233, %r4232, %r4231, 19;
	shf.r.wrap.b32 	%r4234, %r4231, %r4232, 19;
	mov.b64 	%rd4824, {%r4234, %r4233};
	shf.l.wrap.b32 	%r4235, %r4231, %r4232, 3;
	shf.l.wrap.b32 	%r4236, %r4232, %r4231, 3;
	mov.b64 	%rd4825, {%r4236, %r4235};
	shr.u64 	%rd4826, %rd4810, 6;
	xor.b64  	%rd4827, %rd4824, %rd4826;
	xor.b64  	%rd4828, %rd4827, %rd4825;
	shf.r.wrap.b32 	%r4237, %r3846, %r3845, 1;
	shf.r.wrap.b32 	%r4238, %r3845, %r3846, 1;
	mov.b64 	%rd4829, {%r4238, %r4237};
	shf.r.wrap.b32 	%r4239, %r3846, %r3845, 8;
	shf.r.wrap.b32 	%r4240, %r3845, %r3846, 8;
	mov.b64 	%rd4830, {%r4240, %r4239};
	shr.u64 	%rd4831, %rd4257, 7;
	xor.b64  	%rd4832, %rd4829, %rd4831;
	xor.b64  	%rd4833, %rd4832, %rd4830;
	add.s64 	%rd4834, %rd4745, %rd4244;
	add.s64 	%rd4835, %rd4834, %rd4828;
	add.s64 	%rd4836, %rd4835, %rd4833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4241,%dummy}, %rd4823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4242}, %rd4823;
	}
	shf.r.wrap.b32 	%r4243, %r4242, %r4241, 19;
	shf.r.wrap.b32 	%r4244, %r4241, %r4242, 19;
	mov.b64 	%rd4837, {%r4244, %r4243};
	shf.l.wrap.b32 	%r4245, %r4241, %r4242, 3;
	shf.l.wrap.b32 	%r4246, %r4242, %r4241, 3;
	mov.b64 	%rd4838, {%r4246, %r4245};
	shr.u64 	%rd4839, %rd4823, 6;
	xor.b64  	%rd4840, %rd4837, %rd4839;
	xor.b64  	%rd4841, %rd4840, %rd4838;
	shf.r.wrap.b32 	%r4247, %r3856, %r3855, 1;
	shf.r.wrap.b32 	%r4248, %r3855, %r3856, 1;
	mov.b64 	%rd4842, {%r4248, %r4247};
	shf.r.wrap.b32 	%r4249, %r3856, %r3855, 8;
	shf.r.wrap.b32 	%r4250, %r3855, %r3856, 8;
	mov.b64 	%rd4843, {%r4250, %r4249};
	shr.u64 	%rd4844, %rd4270, 7;
	xor.b64  	%rd4845, %rd4842, %rd4844;
	xor.b64  	%rd4846, %rd4845, %rd4843;
	add.s64 	%rd4847, %rd4758, %rd4257;
	add.s64 	%rd4848, %rd4847, %rd4841;
	add.s64 	%rd4849, %rd4848, %rd4846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4251,%dummy}, %rd4836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4252}, %rd4836;
	}
	shf.r.wrap.b32 	%r4253, %r4252, %r4251, 19;
	shf.r.wrap.b32 	%r4254, %r4251, %r4252, 19;
	mov.b64 	%rd4850, {%r4254, %r4253};
	shf.l.wrap.b32 	%r4255, %r4251, %r4252, 3;
	shf.l.wrap.b32 	%r4256, %r4252, %r4251, 3;
	mov.b64 	%rd4851, {%r4256, %r4255};
	shr.u64 	%rd4852, %rd4836, 6;
	xor.b64  	%rd4853, %rd4850, %rd4852;
	xor.b64  	%rd4854, %rd4853, %rd4851;
	shf.r.wrap.b32 	%r4257, %r3866, %r3865, 1;
	shf.r.wrap.b32 	%r4258, %r3865, %r3866, 1;
	mov.b64 	%rd4855, {%r4258, %r4257};
	shf.r.wrap.b32 	%r4259, %r3866, %r3865, 8;
	shf.r.wrap.b32 	%r4260, %r3865, %r3866, 8;
	mov.b64 	%rd4856, {%r4260, %r4259};
	shr.u64 	%rd4857, %rd4283, 7;
	xor.b64  	%rd4858, %rd4855, %rd4857;
	xor.b64  	%rd4859, %rd4858, %rd4856;
	add.s64 	%rd4860, %rd4771, %rd4270;
	add.s64 	%rd4861, %rd4860, %rd4854;
	add.s64 	%rd4862, %rd4861, %rd4859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4261,%dummy}, %rd4849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4262}, %rd4849;
	}
	shf.r.wrap.b32 	%r4263, %r4262, %r4261, 19;
	shf.r.wrap.b32 	%r4264, %r4261, %r4262, 19;
	mov.b64 	%rd4863, {%r4264, %r4263};
	shf.l.wrap.b32 	%r4265, %r4261, %r4262, 3;
	shf.l.wrap.b32 	%r4266, %r4262, %r4261, 3;
	mov.b64 	%rd4864, {%r4266, %r4265};
	shr.u64 	%rd4865, %rd4849, 6;
	xor.b64  	%rd4866, %rd4863, %rd4865;
	xor.b64  	%rd4867, %rd4866, %rd4864;
	shf.r.wrap.b32 	%r4267, %r3876, %r3875, 1;
	shf.r.wrap.b32 	%r4268, %r3875, %r3876, 1;
	mov.b64 	%rd4868, {%r4268, %r4267};
	shf.r.wrap.b32 	%r4269, %r3876, %r3875, 8;
	shf.r.wrap.b32 	%r4270, %r3875, %r3876, 8;
	mov.b64 	%rd4869, {%r4270, %r4269};
	shr.u64 	%rd4870, %rd4296, 7;
	xor.b64  	%rd4871, %rd4868, %rd4870;
	xor.b64  	%rd4872, %rd4871, %rd4869;
	add.s64 	%rd4873, %rd4784, %rd4283;
	add.s64 	%rd4874, %rd4873, %rd4867;
	add.s64 	%rd4875, %rd4874, %rd4872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4271,%dummy}, %rd4862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4272}, %rd4862;
	}
	shf.r.wrap.b32 	%r4273, %r4272, %r4271, 19;
	shf.r.wrap.b32 	%r4274, %r4271, %r4272, 19;
	mov.b64 	%rd4876, {%r4274, %r4273};
	shf.l.wrap.b32 	%r4275, %r4271, %r4272, 3;
	shf.l.wrap.b32 	%r4276, %r4272, %r4271, 3;
	mov.b64 	%rd4877, {%r4276, %r4275};
	shr.u64 	%rd4878, %rd4862, 6;
	xor.b64  	%rd4879, %rd4876, %rd4878;
	xor.b64  	%rd4880, %rd4879, %rd4877;
	shf.r.wrap.b32 	%r4277, %r3886, %r3885, 1;
	shf.r.wrap.b32 	%r4278, %r3885, %r3886, 1;
	mov.b64 	%rd4881, {%r4278, %r4277};
	shf.r.wrap.b32 	%r4279, %r3886, %r3885, 8;
	shf.r.wrap.b32 	%r4280, %r3885, %r3886, 8;
	mov.b64 	%rd4882, {%r4280, %r4279};
	shr.u64 	%rd4883, %rd4309, 7;
	xor.b64  	%rd4884, %rd4881, %rd4883;
	xor.b64  	%rd4885, %rd4884, %rd4882;
	add.s64 	%rd4886, %rd4797, %rd4296;
	add.s64 	%rd4887, %rd4886, %rd4880;
	add.s64 	%rd4888, %rd4887, %rd4885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4281,%dummy}, %rd4875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4282}, %rd4875;
	}
	shf.r.wrap.b32 	%r4283, %r4282, %r4281, 19;
	shf.r.wrap.b32 	%r4284, %r4281, %r4282, 19;
	mov.b64 	%rd4889, {%r4284, %r4283};
	shf.l.wrap.b32 	%r4285, %r4281, %r4282, 3;
	shf.l.wrap.b32 	%r4286, %r4282, %r4281, 3;
	mov.b64 	%rd4890, {%r4286, %r4285};
	shr.u64 	%rd4891, %rd4875, 6;
	xor.b64  	%rd4892, %rd4889, %rd4891;
	xor.b64  	%rd4893, %rd4892, %rd4890;
	shf.r.wrap.b32 	%r4287, %r4152, %r4151, 1;
	shf.r.wrap.b32 	%r4288, %r4151, %r4152, 1;
	mov.b64 	%rd4894, {%r4288, %r4287};
	shf.r.wrap.b32 	%r4289, %r4152, %r4151, 8;
	shf.r.wrap.b32 	%r4290, %r4151, %r4152, 8;
	mov.b64 	%rd4895, {%r4290, %r4289};
	shr.u64 	%rd4896, %rd4322, 7;
	xor.b64  	%rd4897, %rd4894, %rd4896;
	xor.b64  	%rd4898, %rd4897, %rd4895;
	add.s64 	%rd4899, %rd4810, %rd4309;
	add.s64 	%rd4900, %rd4899, %rd4893;
	add.s64 	%rd4901, %rd4900, %rd4898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4291,%dummy}, %rd4888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4292}, %rd4888;
	}
	shf.r.wrap.b32 	%r4293, %r4292, %r4291, 19;
	shf.r.wrap.b32 	%r4294, %r4291, %r4292, 19;
	mov.b64 	%rd4902, {%r4294, %r4293};
	shf.l.wrap.b32 	%r4295, %r4291, %r4292, 3;
	shf.l.wrap.b32 	%r4296, %r4292, %r4291, 3;
	mov.b64 	%rd4903, {%r4296, %r4295};
	shr.u64 	%rd4904, %rd4888, 6;
	xor.b64  	%rd4905, %rd4902, %rd4904;
	xor.b64  	%rd4906, %rd4905, %rd4903;
	shf.r.wrap.b32 	%r4297, %r4162, %r4161, 1;
	shf.r.wrap.b32 	%r4298, %r4161, %r4162, 1;
	mov.b64 	%rd4907, {%r4298, %r4297};
	shf.r.wrap.b32 	%r4299, %r4162, %r4161, 8;
	shf.r.wrap.b32 	%r4300, %r4161, %r4162, 8;
	mov.b64 	%rd4908, {%r4300, %r4299};
	shr.u64 	%rd4909, %rd4335, 7;
	xor.b64  	%rd4910, %rd4907, %rd4909;
	xor.b64  	%rd4911, %rd4910, %rd4908;
	add.s64 	%rd4912, %rd4823, %rd4322;
	add.s64 	%rd4913, %rd4912, %rd4906;
	add.s64 	%rd4914, %rd4913, %rd4911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4301,%dummy}, %rd4901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4302}, %rd4901;
	}
	shf.r.wrap.b32 	%r4303, %r4302, %r4301, 19;
	shf.r.wrap.b32 	%r4304, %r4301, %r4302, 19;
	mov.b64 	%rd4915, {%r4304, %r4303};
	shf.l.wrap.b32 	%r4305, %r4301, %r4302, 3;
	shf.l.wrap.b32 	%r4306, %r4302, %r4301, 3;
	mov.b64 	%rd4916, {%r4306, %r4305};
	shr.u64 	%rd4917, %rd4901, 6;
	xor.b64  	%rd4918, %rd4915, %rd4917;
	xor.b64  	%rd4919, %rd4918, %rd4916;
	shf.r.wrap.b32 	%r4307, %r4172, %r4171, 1;
	shf.r.wrap.b32 	%r4308, %r4171, %r4172, 1;
	mov.b64 	%rd4920, {%r4308, %r4307};
	shf.r.wrap.b32 	%r4309, %r4172, %r4171, 8;
	shf.r.wrap.b32 	%r4310, %r4171, %r4172, 8;
	mov.b64 	%rd4921, {%r4310, %r4309};
	shr.u64 	%rd4922, %rd4732, 7;
	xor.b64  	%rd4923, %rd4920, %rd4922;
	xor.b64  	%rd4924, %rd4923, %rd4921;
	add.s64 	%rd4925, %rd4836, %rd4335;
	add.s64 	%rd4926, %rd4925, %rd4919;
	add.s64 	%rd4927, %rd4926, %rd4924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4311,%dummy}, %rd4708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4312}, %rd4708;
	}
	shf.r.wrap.b32 	%r4313, %r4312, %r4311, 14;
	shf.r.wrap.b32 	%r4314, %r4311, %r4312, 14;
	mov.b64 	%rd4928, {%r4314, %r4313};
	shf.r.wrap.b32 	%r4315, %r4312, %r4311, 18;
	shf.r.wrap.b32 	%r4316, %r4311, %r4312, 18;
	mov.b64 	%rd4929, {%r4316, %r4315};
	xor.b64  	%rd4930, %rd4929, %rd4928;
	shf.l.wrap.b32 	%r4317, %r4311, %r4312, 23;
	shf.l.wrap.b32 	%r4318, %r4312, %r4311, 23;
	mov.b64 	%rd4931, {%r4318, %r4317};
	xor.b64  	%rd4932, %rd4930, %rd4931;
	xor.b64  	%rd4933, %rd4684, %rd4660;
	and.b64  	%rd4934, %rd4933, %rd4708;
	xor.b64  	%rd4935, %rd4934, %rd4660;
	add.s64 	%rd4936, %rd4935, %rd4636;
	add.s64 	%rd4937, %rd4936, %rd4732;
	add.s64 	%rd4938, %rd4937, %rd8804;
	add.s64 	%rd4939, %rd4938, %rd4932;
	add.s64 	%rd4940, %rd4939, %rd4647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4319,%dummy}, %rd4719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4320}, %rd4719;
	}
	shf.r.wrap.b32 	%r4321, %r4320, %r4319, 28;
	shf.r.wrap.b32 	%r4322, %r4319, %r4320, 28;
	mov.b64 	%rd4941, {%r4322, %r4321};
	shf.l.wrap.b32 	%r4323, %r4319, %r4320, 30;
	shf.l.wrap.b32 	%r4324, %r4320, %r4319, 30;
	mov.b64 	%rd4942, {%r4324, %r4323};
	xor.b64  	%rd4943, %rd4942, %rd4941;
	shf.l.wrap.b32 	%r4325, %r4319, %r4320, 25;
	shf.l.wrap.b32 	%r4326, %r4320, %r4319, 25;
	mov.b64 	%rd4944, {%r4326, %r4325};
	xor.b64  	%rd4945, %rd4943, %rd4944;
	xor.b64  	%rd4946, %rd4719, %rd4671;
	xor.b64  	%rd4947, %rd4719, %rd4695;
	and.b64  	%rd4948, %rd4947, %rd4946;
	xor.b64  	%rd4949, %rd4948, %rd4719;
	add.s64 	%rd4950, %rd4939, %rd4949;
	add.s64 	%rd4951, %rd4950, %rd4945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4327,%dummy}, %rd4940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4328}, %rd4940;
	}
	shf.r.wrap.b32 	%r4329, %r4328, %r4327, 14;
	shf.r.wrap.b32 	%r4330, %r4327, %r4328, 14;
	mov.b64 	%rd4952, {%r4330, %r4329};
	shf.r.wrap.b32 	%r4331, %r4328, %r4327, 18;
	shf.r.wrap.b32 	%r4332, %r4327, %r4328, 18;
	mov.b64 	%rd4953, {%r4332, %r4331};
	xor.b64  	%rd4954, %rd4953, %rd4952;
	shf.l.wrap.b32 	%r4333, %r4327, %r4328, 23;
	shf.l.wrap.b32 	%r4334, %r4328, %r4327, 23;
	mov.b64 	%rd4955, {%r4334, %r4333};
	xor.b64  	%rd4956, %rd4954, %rd4955;
	xor.b64  	%rd4957, %rd4708, %rd4684;
	and.b64  	%rd4958, %rd4940, %rd4957;
	xor.b64  	%rd4959, %rd4958, %rd4684;
	add.s64 	%rd4960, %rd4745, %rd4660;
	add.s64 	%rd4961, %rd4960, %rd8803;
	add.s64 	%rd4962, %rd4961, %rd4959;
	add.s64 	%rd4963, %rd4962, %rd4956;
	add.s64 	%rd4964, %rd4963, %rd4671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4335,%dummy}, %rd4951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4336}, %rd4951;
	}
	shf.r.wrap.b32 	%r4337, %r4336, %r4335, 28;
	shf.r.wrap.b32 	%r4338, %r4335, %r4336, 28;
	mov.b64 	%rd4965, {%r4338, %r4337};
	shf.l.wrap.b32 	%r4339, %r4335, %r4336, 30;
	shf.l.wrap.b32 	%r4340, %r4336, %r4335, 30;
	mov.b64 	%rd4966, {%r4340, %r4339};
	xor.b64  	%rd4967, %rd4966, %rd4965;
	shf.l.wrap.b32 	%r4341, %r4335, %r4336, 25;
	shf.l.wrap.b32 	%r4342, %r4336, %r4335, 25;
	mov.b64 	%rd4968, {%r4342, %r4341};
	xor.b64  	%rd4969, %rd4967, %rd4968;
	xor.b64  	%rd4970, %rd4951, %rd4695;
	xor.b64  	%rd4971, %rd4951, %rd4719;
	and.b64  	%rd4972, %rd4971, %rd4970;
	xor.b64  	%rd4973, %rd4972, %rd4951;
	add.s64 	%rd4974, %rd4963, %rd4973;
	add.s64 	%rd4975, %rd4974, %rd4969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4343,%dummy}, %rd4964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4344}, %rd4964;
	}
	shf.r.wrap.b32 	%r4345, %r4344, %r4343, 14;
	shf.r.wrap.b32 	%r4346, %r4343, %r4344, 14;
	mov.b64 	%rd4976, {%r4346, %r4345};
	shf.r.wrap.b32 	%r4347, %r4344, %r4343, 18;
	shf.r.wrap.b32 	%r4348, %r4343, %r4344, 18;
	mov.b64 	%rd4977, {%r4348, %r4347};
	xor.b64  	%rd4978, %rd4977, %rd4976;
	shf.l.wrap.b32 	%r4349, %r4343, %r4344, 23;
	shf.l.wrap.b32 	%r4350, %r4344, %r4343, 23;
	mov.b64 	%rd4979, {%r4350, %r4349};
	xor.b64  	%rd4980, %rd4978, %rd4979;
	xor.b64  	%rd4981, %rd4940, %rd4708;
	and.b64  	%rd4982, %rd4964, %rd4981;
	xor.b64  	%rd4983, %rd4982, %rd4708;
	add.s64 	%rd4984, %rd4758, %rd4684;
	add.s64 	%rd4985, %rd4984, %rd8802;
	add.s64 	%rd4986, %rd4985, %rd4983;
	add.s64 	%rd4987, %rd4986, %rd4980;
	add.s64 	%rd4988, %rd4987, %rd4695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4351,%dummy}, %rd4975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4352}, %rd4975;
	}
	shf.r.wrap.b32 	%r4353, %r4352, %r4351, 28;
	shf.r.wrap.b32 	%r4354, %r4351, %r4352, 28;
	mov.b64 	%rd4989, {%r4354, %r4353};
	shf.l.wrap.b32 	%r4355, %r4351, %r4352, 30;
	shf.l.wrap.b32 	%r4356, %r4352, %r4351, 30;
	mov.b64 	%rd4990, {%r4356, %r4355};
	xor.b64  	%rd4991, %rd4990, %rd4989;
	shf.l.wrap.b32 	%r4357, %r4351, %r4352, 25;
	shf.l.wrap.b32 	%r4358, %r4352, %r4351, 25;
	mov.b64 	%rd4992, {%r4358, %r4357};
	xor.b64  	%rd4993, %rd4991, %rd4992;
	xor.b64  	%rd4994, %rd4975, %rd4719;
	xor.b64  	%rd4995, %rd4975, %rd4951;
	and.b64  	%rd4996, %rd4995, %rd4994;
	xor.b64  	%rd4997, %rd4996, %rd4975;
	add.s64 	%rd4998, %rd4987, %rd4997;
	add.s64 	%rd4999, %rd4998, %rd4993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4359,%dummy}, %rd4988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4360}, %rd4988;
	}
	shf.r.wrap.b32 	%r4361, %r4360, %r4359, 14;
	shf.r.wrap.b32 	%r4362, %r4359, %r4360, 14;
	mov.b64 	%rd5000, {%r4362, %r4361};
	shf.r.wrap.b32 	%r4363, %r4360, %r4359, 18;
	shf.r.wrap.b32 	%r4364, %r4359, %r4360, 18;
	mov.b64 	%rd5001, {%r4364, %r4363};
	xor.b64  	%rd5002, %rd5001, %rd5000;
	shf.l.wrap.b32 	%r4365, %r4359, %r4360, 23;
	shf.l.wrap.b32 	%r4366, %r4360, %r4359, 23;
	mov.b64 	%rd5003, {%r4366, %r4365};
	xor.b64  	%rd5004, %rd5002, %rd5003;
	xor.b64  	%rd5005, %rd4964, %rd4940;
	and.b64  	%rd5006, %rd4988, %rd5005;
	xor.b64  	%rd5007, %rd5006, %rd4940;
	add.s64 	%rd5008, %rd4771, %rd4708;
	add.s64 	%rd5009, %rd5008, %rd8801;
	add.s64 	%rd5010, %rd5009, %rd5007;
	add.s64 	%rd5011, %rd5010, %rd5004;
	add.s64 	%rd5012, %rd5011, %rd4719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4367,%dummy}, %rd4999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4368}, %rd4999;
	}
	shf.r.wrap.b32 	%r4369, %r4368, %r4367, 28;
	shf.r.wrap.b32 	%r4370, %r4367, %r4368, 28;
	mov.b64 	%rd5013, {%r4370, %r4369};
	shf.l.wrap.b32 	%r4371, %r4367, %r4368, 30;
	shf.l.wrap.b32 	%r4372, %r4368, %r4367, 30;
	mov.b64 	%rd5014, {%r4372, %r4371};
	xor.b64  	%rd5015, %rd5014, %rd5013;
	shf.l.wrap.b32 	%r4373, %r4367, %r4368, 25;
	shf.l.wrap.b32 	%r4374, %r4368, %r4367, 25;
	mov.b64 	%rd5016, {%r4374, %r4373};
	xor.b64  	%rd5017, %rd5015, %rd5016;
	xor.b64  	%rd5018, %rd4999, %rd4951;
	xor.b64  	%rd5019, %rd4999, %rd4975;
	and.b64  	%rd5020, %rd5019, %rd5018;
	xor.b64  	%rd5021, %rd5020, %rd4999;
	add.s64 	%rd5022, %rd5011, %rd5021;
	add.s64 	%rd5023, %rd5022, %rd5017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4375,%dummy}, %rd5012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4376}, %rd5012;
	}
	shf.r.wrap.b32 	%r4377, %r4376, %r4375, 14;
	shf.r.wrap.b32 	%r4378, %r4375, %r4376, 14;
	mov.b64 	%rd5024, {%r4378, %r4377};
	shf.r.wrap.b32 	%r4379, %r4376, %r4375, 18;
	shf.r.wrap.b32 	%r4380, %r4375, %r4376, 18;
	mov.b64 	%rd5025, {%r4380, %r4379};
	xor.b64  	%rd5026, %rd5025, %rd5024;
	shf.l.wrap.b32 	%r4381, %r4375, %r4376, 23;
	shf.l.wrap.b32 	%r4382, %r4376, %r4375, 23;
	mov.b64 	%rd5027, {%r4382, %r4381};
	xor.b64  	%rd5028, %rd5026, %rd5027;
	xor.b64  	%rd5029, %rd4988, %rd4964;
	and.b64  	%rd5030, %rd5012, %rd5029;
	xor.b64  	%rd5031, %rd5030, %rd4964;
	add.s64 	%rd5032, %rd4940, %rd4784;
	add.s64 	%rd5033, %rd5032, %rd8800;
	add.s64 	%rd5034, %rd5033, %rd5031;
	add.s64 	%rd5035, %rd5034, %rd5028;
	add.s64 	%rd5036, %rd5035, %rd4951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4383,%dummy}, %rd5023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4384}, %rd5023;
	}
	shf.r.wrap.b32 	%r4385, %r4384, %r4383, 28;
	shf.r.wrap.b32 	%r4386, %r4383, %r4384, 28;
	mov.b64 	%rd5037, {%r4386, %r4385};
	shf.l.wrap.b32 	%r4387, %r4383, %r4384, 30;
	shf.l.wrap.b32 	%r4388, %r4384, %r4383, 30;
	mov.b64 	%rd5038, {%r4388, %r4387};
	xor.b64  	%rd5039, %rd5038, %rd5037;
	shf.l.wrap.b32 	%r4389, %r4383, %r4384, 25;
	shf.l.wrap.b32 	%r4390, %r4384, %r4383, 25;
	mov.b64 	%rd5040, {%r4390, %r4389};
	xor.b64  	%rd5041, %rd5039, %rd5040;
	xor.b64  	%rd5042, %rd5023, %rd4975;
	xor.b64  	%rd5043, %rd5023, %rd4999;
	and.b64  	%rd5044, %rd5043, %rd5042;
	xor.b64  	%rd5045, %rd5044, %rd5023;
	add.s64 	%rd5046, %rd5035, %rd5045;
	add.s64 	%rd5047, %rd5046, %rd5041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4391,%dummy}, %rd5036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4392}, %rd5036;
	}
	shf.r.wrap.b32 	%r4393, %r4392, %r4391, 14;
	shf.r.wrap.b32 	%r4394, %r4391, %r4392, 14;
	mov.b64 	%rd5048, {%r4394, %r4393};
	shf.r.wrap.b32 	%r4395, %r4392, %r4391, 18;
	shf.r.wrap.b32 	%r4396, %r4391, %r4392, 18;
	mov.b64 	%rd5049, {%r4396, %r4395};
	xor.b64  	%rd5050, %rd5049, %rd5048;
	shf.l.wrap.b32 	%r4397, %r4391, %r4392, 23;
	shf.l.wrap.b32 	%r4398, %r4392, %r4391, 23;
	mov.b64 	%rd5051, {%r4398, %r4397};
	xor.b64  	%rd5052, %rd5050, %rd5051;
	xor.b64  	%rd5053, %rd5012, %rd4988;
	and.b64  	%rd5054, %rd5036, %rd5053;
	xor.b64  	%rd5055, %rd5054, %rd4988;
	add.s64 	%rd5056, %rd4964, %rd4797;
	add.s64 	%rd5057, %rd5056, %rd8799;
	add.s64 	%rd5058, %rd5057, %rd5055;
	add.s64 	%rd5059, %rd5058, %rd5052;
	add.s64 	%rd5060, %rd5059, %rd4975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4399,%dummy}, %rd5047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4400}, %rd5047;
	}
	shf.r.wrap.b32 	%r4401, %r4400, %r4399, 28;
	shf.r.wrap.b32 	%r4402, %r4399, %r4400, 28;
	mov.b64 	%rd5061, {%r4402, %r4401};
	shf.l.wrap.b32 	%r4403, %r4399, %r4400, 30;
	shf.l.wrap.b32 	%r4404, %r4400, %r4399, 30;
	mov.b64 	%rd5062, {%r4404, %r4403};
	xor.b64  	%rd5063, %rd5062, %rd5061;
	shf.l.wrap.b32 	%r4405, %r4399, %r4400, 25;
	shf.l.wrap.b32 	%r4406, %r4400, %r4399, 25;
	mov.b64 	%rd5064, {%r4406, %r4405};
	xor.b64  	%rd5065, %rd5063, %rd5064;
	xor.b64  	%rd5066, %rd5047, %rd4999;
	xor.b64  	%rd5067, %rd5047, %rd5023;
	and.b64  	%rd5068, %rd5067, %rd5066;
	xor.b64  	%rd5069, %rd5068, %rd5047;
	add.s64 	%rd5070, %rd5059, %rd5069;
	add.s64 	%rd5071, %rd5070, %rd5065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4407,%dummy}, %rd5060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4408}, %rd5060;
	}
	shf.r.wrap.b32 	%r4409, %r4408, %r4407, 14;
	shf.r.wrap.b32 	%r4410, %r4407, %r4408, 14;
	mov.b64 	%rd5072, {%r4410, %r4409};
	shf.r.wrap.b32 	%r4411, %r4408, %r4407, 18;
	shf.r.wrap.b32 	%r4412, %r4407, %r4408, 18;
	mov.b64 	%rd5073, {%r4412, %r4411};
	xor.b64  	%rd5074, %rd5073, %rd5072;
	shf.l.wrap.b32 	%r4413, %r4407, %r4408, 23;
	shf.l.wrap.b32 	%r4414, %r4408, %r4407, 23;
	mov.b64 	%rd5075, {%r4414, %r4413};
	xor.b64  	%rd5076, %rd5074, %rd5075;
	xor.b64  	%rd5077, %rd5036, %rd5012;
	and.b64  	%rd5078, %rd5060, %rd5077;
	xor.b64  	%rd5079, %rd5078, %rd5012;
	add.s64 	%rd5080, %rd4988, %rd4810;
	add.s64 	%rd5081, %rd5080, %rd8798;
	add.s64 	%rd5082, %rd5081, %rd5079;
	add.s64 	%rd5083, %rd5082, %rd5076;
	add.s64 	%rd5084, %rd5083, %rd4999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4415,%dummy}, %rd5071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4416}, %rd5071;
	}
	shf.r.wrap.b32 	%r4417, %r4416, %r4415, 28;
	shf.r.wrap.b32 	%r4418, %r4415, %r4416, 28;
	mov.b64 	%rd5085, {%r4418, %r4417};
	shf.l.wrap.b32 	%r4419, %r4415, %r4416, 30;
	shf.l.wrap.b32 	%r4420, %r4416, %r4415, 30;
	mov.b64 	%rd5086, {%r4420, %r4419};
	xor.b64  	%rd5087, %rd5086, %rd5085;
	shf.l.wrap.b32 	%r4421, %r4415, %r4416, 25;
	shf.l.wrap.b32 	%r4422, %r4416, %r4415, 25;
	mov.b64 	%rd5088, {%r4422, %r4421};
	xor.b64  	%rd5089, %rd5087, %rd5088;
	xor.b64  	%rd5090, %rd5071, %rd5023;
	xor.b64  	%rd5091, %rd5071, %rd5047;
	and.b64  	%rd5092, %rd5091, %rd5090;
	xor.b64  	%rd5093, %rd5092, %rd5071;
	add.s64 	%rd5094, %rd5083, %rd5093;
	add.s64 	%rd5095, %rd5094, %rd5089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4423,%dummy}, %rd5084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4424}, %rd5084;
	}
	shf.r.wrap.b32 	%r4425, %r4424, %r4423, 14;
	shf.r.wrap.b32 	%r4426, %r4423, %r4424, 14;
	mov.b64 	%rd5096, {%r4426, %r4425};
	shf.r.wrap.b32 	%r4427, %r4424, %r4423, 18;
	shf.r.wrap.b32 	%r4428, %r4423, %r4424, 18;
	mov.b64 	%rd5097, {%r4428, %r4427};
	xor.b64  	%rd5098, %rd5097, %rd5096;
	shf.l.wrap.b32 	%r4429, %r4423, %r4424, 23;
	shf.l.wrap.b32 	%r4430, %r4424, %r4423, 23;
	mov.b64 	%rd5099, {%r4430, %r4429};
	xor.b64  	%rd5100, %rd5098, %rd5099;
	xor.b64  	%rd5101, %rd5060, %rd5036;
	and.b64  	%rd5102, %rd5084, %rd5101;
	xor.b64  	%rd5103, %rd5102, %rd5036;
	add.s64 	%rd5104, %rd5012, %rd4823;
	add.s64 	%rd5105, %rd5104, %rd8797;
	add.s64 	%rd5106, %rd5105, %rd5103;
	add.s64 	%rd5107, %rd5106, %rd5100;
	add.s64 	%rd5108, %rd5107, %rd5023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4431,%dummy}, %rd5095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4432}, %rd5095;
	}
	shf.r.wrap.b32 	%r4433, %r4432, %r4431, 28;
	shf.r.wrap.b32 	%r4434, %r4431, %r4432, 28;
	mov.b64 	%rd5109, {%r4434, %r4433};
	shf.l.wrap.b32 	%r4435, %r4431, %r4432, 30;
	shf.l.wrap.b32 	%r4436, %r4432, %r4431, 30;
	mov.b64 	%rd5110, {%r4436, %r4435};
	xor.b64  	%rd5111, %rd5110, %rd5109;
	shf.l.wrap.b32 	%r4437, %r4431, %r4432, 25;
	shf.l.wrap.b32 	%r4438, %r4432, %r4431, 25;
	mov.b64 	%rd5112, {%r4438, %r4437};
	xor.b64  	%rd5113, %rd5111, %rd5112;
	xor.b64  	%rd5114, %rd5095, %rd5047;
	xor.b64  	%rd5115, %rd5095, %rd5071;
	and.b64  	%rd5116, %rd5115, %rd5114;
	xor.b64  	%rd5117, %rd5116, %rd5095;
	add.s64 	%rd5118, %rd5107, %rd5117;
	add.s64 	%rd5119, %rd5118, %rd5113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4439,%dummy}, %rd5108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4440}, %rd5108;
	}
	shf.r.wrap.b32 	%r4441, %r4440, %r4439, 14;
	shf.r.wrap.b32 	%r4442, %r4439, %r4440, 14;
	mov.b64 	%rd5120, {%r4442, %r4441};
	shf.r.wrap.b32 	%r4443, %r4440, %r4439, 18;
	shf.r.wrap.b32 	%r4444, %r4439, %r4440, 18;
	mov.b64 	%rd5121, {%r4444, %r4443};
	xor.b64  	%rd5122, %rd5121, %rd5120;
	shf.l.wrap.b32 	%r4445, %r4439, %r4440, 23;
	shf.l.wrap.b32 	%r4446, %r4440, %r4439, 23;
	mov.b64 	%rd5123, {%r4446, %r4445};
	xor.b64  	%rd5124, %rd5122, %rd5123;
	xor.b64  	%rd5125, %rd5084, %rd5060;
	and.b64  	%rd5126, %rd5108, %rd5125;
	xor.b64  	%rd5127, %rd5126, %rd5060;
	add.s64 	%rd5128, %rd5036, %rd4836;
	add.s64 	%rd5129, %rd5128, %rd8796;
	add.s64 	%rd5130, %rd5129, %rd5127;
	add.s64 	%rd5131, %rd5130, %rd5124;
	add.s64 	%rd5132, %rd5131, %rd5047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4447,%dummy}, %rd5119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4448}, %rd5119;
	}
	shf.r.wrap.b32 	%r4449, %r4448, %r4447, 28;
	shf.r.wrap.b32 	%r4450, %r4447, %r4448, 28;
	mov.b64 	%rd5133, {%r4450, %r4449};
	shf.l.wrap.b32 	%r4451, %r4447, %r4448, 30;
	shf.l.wrap.b32 	%r4452, %r4448, %r4447, 30;
	mov.b64 	%rd5134, {%r4452, %r4451};
	xor.b64  	%rd5135, %rd5134, %rd5133;
	shf.l.wrap.b32 	%r4453, %r4447, %r4448, 25;
	shf.l.wrap.b32 	%r4454, %r4448, %r4447, 25;
	mov.b64 	%rd5136, {%r4454, %r4453};
	xor.b64  	%rd5137, %rd5135, %rd5136;
	xor.b64  	%rd5138, %rd5119, %rd5071;
	xor.b64  	%rd5139, %rd5119, %rd5095;
	and.b64  	%rd5140, %rd5139, %rd5138;
	xor.b64  	%rd5141, %rd5140, %rd5119;
	add.s64 	%rd5142, %rd5131, %rd5141;
	add.s64 	%rd5143, %rd5142, %rd5137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4455,%dummy}, %rd5132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4456}, %rd5132;
	}
	shf.r.wrap.b32 	%r4457, %r4456, %r4455, 14;
	shf.r.wrap.b32 	%r4458, %r4455, %r4456, 14;
	mov.b64 	%rd5144, {%r4458, %r4457};
	shf.r.wrap.b32 	%r4459, %r4456, %r4455, 18;
	shf.r.wrap.b32 	%r4460, %r4455, %r4456, 18;
	mov.b64 	%rd5145, {%r4460, %r4459};
	xor.b64  	%rd5146, %rd5145, %rd5144;
	shf.l.wrap.b32 	%r4461, %r4455, %r4456, 23;
	shf.l.wrap.b32 	%r4462, %r4456, %r4455, 23;
	mov.b64 	%rd5147, {%r4462, %r4461};
	xor.b64  	%rd5148, %rd5146, %rd5147;
	xor.b64  	%rd5149, %rd5108, %rd5084;
	and.b64  	%rd5150, %rd5132, %rd5149;
	xor.b64  	%rd5151, %rd5150, %rd5084;
	add.s64 	%rd5152, %rd5060, %rd4849;
	add.s64 	%rd5153, %rd5152, %rd8795;
	add.s64 	%rd5154, %rd5153, %rd5151;
	add.s64 	%rd5155, %rd5154, %rd5148;
	add.s64 	%rd5156, %rd5155, %rd5071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4463,%dummy}, %rd5143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4464}, %rd5143;
	}
	shf.r.wrap.b32 	%r4465, %r4464, %r4463, 28;
	shf.r.wrap.b32 	%r4466, %r4463, %r4464, 28;
	mov.b64 	%rd5157, {%r4466, %r4465};
	shf.l.wrap.b32 	%r4467, %r4463, %r4464, 30;
	shf.l.wrap.b32 	%r4468, %r4464, %r4463, 30;
	mov.b64 	%rd5158, {%r4468, %r4467};
	xor.b64  	%rd5159, %rd5158, %rd5157;
	shf.l.wrap.b32 	%r4469, %r4463, %r4464, 25;
	shf.l.wrap.b32 	%r4470, %r4464, %r4463, 25;
	mov.b64 	%rd5160, {%r4470, %r4469};
	xor.b64  	%rd5161, %rd5159, %rd5160;
	xor.b64  	%rd5162, %rd5143, %rd5095;
	xor.b64  	%rd5163, %rd5143, %rd5119;
	and.b64  	%rd5164, %rd5163, %rd5162;
	xor.b64  	%rd5165, %rd5164, %rd5143;
	add.s64 	%rd5166, %rd5155, %rd5165;
	add.s64 	%rd5167, %rd5166, %rd5161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4471,%dummy}, %rd5156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4472}, %rd5156;
	}
	shf.r.wrap.b32 	%r4473, %r4472, %r4471, 14;
	shf.r.wrap.b32 	%r4474, %r4471, %r4472, 14;
	mov.b64 	%rd5168, {%r4474, %r4473};
	shf.r.wrap.b32 	%r4475, %r4472, %r4471, 18;
	shf.r.wrap.b32 	%r4476, %r4471, %r4472, 18;
	mov.b64 	%rd5169, {%r4476, %r4475};
	xor.b64  	%rd5170, %rd5169, %rd5168;
	shf.l.wrap.b32 	%r4477, %r4471, %r4472, 23;
	shf.l.wrap.b32 	%r4478, %r4472, %r4471, 23;
	mov.b64 	%rd5171, {%r4478, %r4477};
	xor.b64  	%rd5172, %rd5170, %rd5171;
	xor.b64  	%rd5173, %rd5132, %rd5108;
	and.b64  	%rd5174, %rd5156, %rd5173;
	xor.b64  	%rd5175, %rd5174, %rd5108;
	add.s64 	%rd5176, %rd5084, %rd4862;
	add.s64 	%rd5177, %rd5176, %rd8794;
	add.s64 	%rd5178, %rd5177, %rd5175;
	add.s64 	%rd5179, %rd5178, %rd5172;
	add.s64 	%rd5180, %rd5179, %rd5095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4479,%dummy}, %rd5167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4480}, %rd5167;
	}
	shf.r.wrap.b32 	%r4481, %r4480, %r4479, 28;
	shf.r.wrap.b32 	%r4482, %r4479, %r4480, 28;
	mov.b64 	%rd5181, {%r4482, %r4481};
	shf.l.wrap.b32 	%r4483, %r4479, %r4480, 30;
	shf.l.wrap.b32 	%r4484, %r4480, %r4479, 30;
	mov.b64 	%rd5182, {%r4484, %r4483};
	xor.b64  	%rd5183, %rd5182, %rd5181;
	shf.l.wrap.b32 	%r4485, %r4479, %r4480, 25;
	shf.l.wrap.b32 	%r4486, %r4480, %r4479, 25;
	mov.b64 	%rd5184, {%r4486, %r4485};
	xor.b64  	%rd5185, %rd5183, %rd5184;
	xor.b64  	%rd5186, %rd5167, %rd5119;
	xor.b64  	%rd5187, %rd5167, %rd5143;
	and.b64  	%rd5188, %rd5187, %rd5186;
	xor.b64  	%rd5189, %rd5188, %rd5167;
	add.s64 	%rd5190, %rd5179, %rd5189;
	add.s64 	%rd5191, %rd5190, %rd5185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4487,%dummy}, %rd5180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4488}, %rd5180;
	}
	shf.r.wrap.b32 	%r4489, %r4488, %r4487, 14;
	shf.r.wrap.b32 	%r4490, %r4487, %r4488, 14;
	mov.b64 	%rd5192, {%r4490, %r4489};
	shf.r.wrap.b32 	%r4491, %r4488, %r4487, 18;
	shf.r.wrap.b32 	%r4492, %r4487, %r4488, 18;
	mov.b64 	%rd5193, {%r4492, %r4491};
	xor.b64  	%rd5194, %rd5193, %rd5192;
	shf.l.wrap.b32 	%r4493, %r4487, %r4488, 23;
	shf.l.wrap.b32 	%r4494, %r4488, %r4487, 23;
	mov.b64 	%rd5195, {%r4494, %r4493};
	xor.b64  	%rd5196, %rd5194, %rd5195;
	xor.b64  	%rd5197, %rd5156, %rd5132;
	and.b64  	%rd5198, %rd5180, %rd5197;
	xor.b64  	%rd5199, %rd5198, %rd5132;
	add.s64 	%rd5200, %rd5108, %rd4875;
	add.s64 	%rd5201, %rd5200, %rd8793;
	add.s64 	%rd5202, %rd5201, %rd5199;
	add.s64 	%rd5203, %rd5202, %rd5196;
	add.s64 	%rd5204, %rd5203, %rd5119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4495,%dummy}, %rd5191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4496}, %rd5191;
	}
	shf.r.wrap.b32 	%r4497, %r4496, %r4495, 28;
	shf.r.wrap.b32 	%r4498, %r4495, %r4496, 28;
	mov.b64 	%rd5205, {%r4498, %r4497};
	shf.l.wrap.b32 	%r4499, %r4495, %r4496, 30;
	shf.l.wrap.b32 	%r4500, %r4496, %r4495, 30;
	mov.b64 	%rd5206, {%r4500, %r4499};
	xor.b64  	%rd5207, %rd5206, %rd5205;
	shf.l.wrap.b32 	%r4501, %r4495, %r4496, 25;
	shf.l.wrap.b32 	%r4502, %r4496, %r4495, 25;
	mov.b64 	%rd5208, {%r4502, %r4501};
	xor.b64  	%rd5209, %rd5207, %rd5208;
	xor.b64  	%rd5210, %rd5191, %rd5143;
	xor.b64  	%rd5211, %rd5191, %rd5167;
	and.b64  	%rd5212, %rd5211, %rd5210;
	xor.b64  	%rd5213, %rd5212, %rd5191;
	add.s64 	%rd5214, %rd5203, %rd5213;
	add.s64 	%rd5215, %rd5214, %rd5209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4503,%dummy}, %rd5204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4504}, %rd5204;
	}
	shf.r.wrap.b32 	%r4505, %r4504, %r4503, 14;
	shf.r.wrap.b32 	%r4506, %r4503, %r4504, 14;
	mov.b64 	%rd5216, {%r4506, %r4505};
	shf.r.wrap.b32 	%r4507, %r4504, %r4503, 18;
	shf.r.wrap.b32 	%r4508, %r4503, %r4504, 18;
	mov.b64 	%rd5217, {%r4508, %r4507};
	xor.b64  	%rd5218, %rd5217, %rd5216;
	shf.l.wrap.b32 	%r4509, %r4503, %r4504, 23;
	shf.l.wrap.b32 	%r4510, %r4504, %r4503, 23;
	mov.b64 	%rd5219, {%r4510, %r4509};
	xor.b64  	%rd5220, %rd5218, %rd5219;
	xor.b64  	%rd5221, %rd5180, %rd5156;
	and.b64  	%rd5222, %rd5204, %rd5221;
	xor.b64  	%rd5223, %rd5222, %rd5156;
	add.s64 	%rd5224, %rd5132, %rd4888;
	add.s64 	%rd5225, %rd5224, %rd8792;
	add.s64 	%rd5226, %rd5225, %rd5223;
	add.s64 	%rd5227, %rd5226, %rd5220;
	add.s64 	%rd5228, %rd5227, %rd5143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4511,%dummy}, %rd5215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4512}, %rd5215;
	}
	shf.r.wrap.b32 	%r4513, %r4512, %r4511, 28;
	shf.r.wrap.b32 	%r4514, %r4511, %r4512, 28;
	mov.b64 	%rd5229, {%r4514, %r4513};
	shf.l.wrap.b32 	%r4515, %r4511, %r4512, 30;
	shf.l.wrap.b32 	%r4516, %r4512, %r4511, 30;
	mov.b64 	%rd5230, {%r4516, %r4515};
	xor.b64  	%rd5231, %rd5230, %rd5229;
	shf.l.wrap.b32 	%r4517, %r4511, %r4512, 25;
	shf.l.wrap.b32 	%r4518, %r4512, %r4511, 25;
	mov.b64 	%rd5232, {%r4518, %r4517};
	xor.b64  	%rd5233, %rd5231, %rd5232;
	xor.b64  	%rd5234, %rd5215, %rd5167;
	xor.b64  	%rd5235, %rd5215, %rd5191;
	and.b64  	%rd5236, %rd5235, %rd5234;
	xor.b64  	%rd5237, %rd5236, %rd5215;
	add.s64 	%rd5238, %rd5227, %rd5237;
	add.s64 	%rd5239, %rd5238, %rd5233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4519,%dummy}, %rd5228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4520}, %rd5228;
	}
	shf.r.wrap.b32 	%r4521, %r4520, %r4519, 14;
	shf.r.wrap.b32 	%r4522, %r4519, %r4520, 14;
	mov.b64 	%rd5240, {%r4522, %r4521};
	shf.r.wrap.b32 	%r4523, %r4520, %r4519, 18;
	shf.r.wrap.b32 	%r4524, %r4519, %r4520, 18;
	mov.b64 	%rd5241, {%r4524, %r4523};
	xor.b64  	%rd5242, %rd5241, %rd5240;
	shf.l.wrap.b32 	%r4525, %r4519, %r4520, 23;
	shf.l.wrap.b32 	%r4526, %r4520, %r4519, 23;
	mov.b64 	%rd5243, {%r4526, %r4525};
	xor.b64  	%rd5244, %rd5242, %rd5243;
	xor.b64  	%rd5245, %rd5204, %rd5180;
	and.b64  	%rd5246, %rd5228, %rd5245;
	xor.b64  	%rd5247, %rd5246, %rd5180;
	add.s64 	%rd5248, %rd5156, %rd4901;
	add.s64 	%rd5249, %rd5248, %rd8791;
	add.s64 	%rd5250, %rd5249, %rd5247;
	add.s64 	%rd5251, %rd5250, %rd5244;
	add.s64 	%rd5252, %rd5251, %rd5167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4527,%dummy}, %rd5239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4528}, %rd5239;
	}
	shf.r.wrap.b32 	%r4529, %r4528, %r4527, 28;
	shf.r.wrap.b32 	%r4530, %r4527, %r4528, 28;
	mov.b64 	%rd5253, {%r4530, %r4529};
	shf.l.wrap.b32 	%r4531, %r4527, %r4528, 30;
	shf.l.wrap.b32 	%r4532, %r4528, %r4527, 30;
	mov.b64 	%rd5254, {%r4532, %r4531};
	xor.b64  	%rd5255, %rd5254, %rd5253;
	shf.l.wrap.b32 	%r4533, %r4527, %r4528, 25;
	shf.l.wrap.b32 	%r4534, %r4528, %r4527, 25;
	mov.b64 	%rd5256, {%r4534, %r4533};
	xor.b64  	%rd5257, %rd5255, %rd5256;
	xor.b64  	%rd5258, %rd5239, %rd5191;
	xor.b64  	%rd5259, %rd5239, %rd5215;
	and.b64  	%rd5260, %rd5259, %rd5258;
	xor.b64  	%rd5261, %rd5260, %rd5239;
	add.s64 	%rd5262, %rd5251, %rd5261;
	add.s64 	%rd5263, %rd5262, %rd5257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4535,%dummy}, %rd5252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4536}, %rd5252;
	}
	shf.r.wrap.b32 	%r4537, %r4536, %r4535, 14;
	shf.r.wrap.b32 	%r4538, %r4535, %r4536, 14;
	mov.b64 	%rd5264, {%r4538, %r4537};
	shf.r.wrap.b32 	%r4539, %r4536, %r4535, 18;
	shf.r.wrap.b32 	%r4540, %r4535, %r4536, 18;
	mov.b64 	%rd5265, {%r4540, %r4539};
	xor.b64  	%rd5266, %rd5265, %rd5264;
	shf.l.wrap.b32 	%r4541, %r4535, %r4536, 23;
	shf.l.wrap.b32 	%r4542, %r4536, %r4535, 23;
	mov.b64 	%rd5267, {%r4542, %r4541};
	xor.b64  	%rd5268, %rd5266, %rd5267;
	xor.b64  	%rd5269, %rd5228, %rd5204;
	and.b64  	%rd5270, %rd5252, %rd5269;
	xor.b64  	%rd5271, %rd5270, %rd5204;
	add.s64 	%rd5272, %rd5180, %rd4914;
	add.s64 	%rd5273, %rd5272, %rd8790;
	add.s64 	%rd5274, %rd5273, %rd5271;
	add.s64 	%rd5275, %rd5274, %rd5268;
	add.s64 	%rd5276, %rd5275, %rd5191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4543,%dummy}, %rd5263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4544}, %rd5263;
	}
	shf.r.wrap.b32 	%r4545, %r4544, %r4543, 28;
	shf.r.wrap.b32 	%r4546, %r4543, %r4544, 28;
	mov.b64 	%rd5277, {%r4546, %r4545};
	shf.l.wrap.b32 	%r4547, %r4543, %r4544, 30;
	shf.l.wrap.b32 	%r4548, %r4544, %r4543, 30;
	mov.b64 	%rd5278, {%r4548, %r4547};
	xor.b64  	%rd5279, %rd5278, %rd5277;
	shf.l.wrap.b32 	%r4549, %r4543, %r4544, 25;
	shf.l.wrap.b32 	%r4550, %r4544, %r4543, 25;
	mov.b64 	%rd5280, {%r4550, %r4549};
	xor.b64  	%rd5281, %rd5279, %rd5280;
	xor.b64  	%rd5282, %rd5263, %rd5215;
	xor.b64  	%rd5283, %rd5263, %rd5239;
	and.b64  	%rd5284, %rd5283, %rd5282;
	xor.b64  	%rd5285, %rd5284, %rd5263;
	add.s64 	%rd5286, %rd5275, %rd5285;
	add.s64 	%rd5287, %rd5286, %rd5281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4551,%dummy}, %rd5276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4552}, %rd5276;
	}
	shf.r.wrap.b32 	%r4553, %r4552, %r4551, 14;
	shf.r.wrap.b32 	%r4554, %r4551, %r4552, 14;
	mov.b64 	%rd5288, {%r4554, %r4553};
	shf.r.wrap.b32 	%r4555, %r4552, %r4551, 18;
	shf.r.wrap.b32 	%r4556, %r4551, %r4552, 18;
	mov.b64 	%rd5289, {%r4556, %r4555};
	xor.b64  	%rd5290, %rd5289, %rd5288;
	shf.l.wrap.b32 	%r4557, %r4551, %r4552, 23;
	shf.l.wrap.b32 	%r4558, %r4552, %r4551, 23;
	mov.b64 	%rd5291, {%r4558, %r4557};
	xor.b64  	%rd5292, %rd5290, %rd5291;
	xor.b64  	%rd5293, %rd5252, %rd5228;
	and.b64  	%rd5294, %rd5276, %rd5293;
	xor.b64  	%rd5295, %rd5294, %rd5228;
	add.s64 	%rd5296, %rd5204, %rd4927;
	add.s64 	%rd5297, %rd5296, %rd8789;
	add.s64 	%rd5298, %rd5297, %rd5295;
	add.s64 	%rd5299, %rd5298, %rd5292;
	add.s64 	%rd5300, %rd5299, %rd5215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4559,%dummy}, %rd5287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4560}, %rd5287;
	}
	shf.r.wrap.b32 	%r4561, %r4560, %r4559, 28;
	shf.r.wrap.b32 	%r4562, %r4559, %r4560, 28;
	mov.b64 	%rd5301, {%r4562, %r4561};
	shf.l.wrap.b32 	%r4563, %r4559, %r4560, 30;
	shf.l.wrap.b32 	%r4564, %r4560, %r4559, 30;
	mov.b64 	%rd5302, {%r4564, %r4563};
	xor.b64  	%rd5303, %rd5302, %rd5301;
	shf.l.wrap.b32 	%r4565, %r4559, %r4560, 25;
	shf.l.wrap.b32 	%r4566, %r4560, %r4559, 25;
	mov.b64 	%rd5304, {%r4566, %r4565};
	xor.b64  	%rd5305, %rd5303, %rd5304;
	xor.b64  	%rd5306, %rd5287, %rd5239;
	xor.b64  	%rd5307, %rd5287, %rd5263;
	and.b64  	%rd5308, %rd5307, %rd5306;
	xor.b64  	%rd5309, %rd5308, %rd5287;
	add.s64 	%rd5310, %rd5299, %rd5309;
	add.s64 	%rd5311, %rd5310, %rd5305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4567,%dummy}, %rd4914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4568}, %rd4914;
	}
	shf.r.wrap.b32 	%r4569, %r4568, %r4567, 19;
	shf.r.wrap.b32 	%r4570, %r4567, %r4568, 19;
	mov.b64 	%rd5312, {%r4570, %r4569};
	shf.l.wrap.b32 	%r4571, %r4567, %r4568, 3;
	shf.l.wrap.b32 	%r4572, %r4568, %r4567, 3;
	mov.b64 	%rd5313, {%r4572, %r4571};
	shr.u64 	%rd5314, %rd4914, 6;
	xor.b64  	%rd5315, %rd5312, %rd5314;
	xor.b64  	%rd5316, %rd5315, %rd5313;
	shf.r.wrap.b32 	%r4573, %r4182, %r4181, 1;
	shf.r.wrap.b32 	%r4574, %r4181, %r4182, 1;
	mov.b64 	%rd5317, {%r4574, %r4573};
	shf.r.wrap.b32 	%r4575, %r4182, %r4181, 8;
	shf.r.wrap.b32 	%r4576, %r4181, %r4182, 8;
	mov.b64 	%rd5318, {%r4576, %r4575};
	shr.u64 	%rd5319, %rd4745, 7;
	xor.b64  	%rd5320, %rd5317, %rd5319;
	xor.b64  	%rd5321, %rd5320, %rd5318;
	add.s64 	%rd5322, %rd4849, %rd4732;
	add.s64 	%rd5323, %rd5322, %rd5316;
	add.s64 	%rd5324, %rd5323, %rd5321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4577,%dummy}, %rd4927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4578}, %rd4927;
	}
	shf.r.wrap.b32 	%r4579, %r4578, %r4577, 19;
	shf.r.wrap.b32 	%r4580, %r4577, %r4578, 19;
	mov.b64 	%rd5325, {%r4580, %r4579};
	shf.l.wrap.b32 	%r4581, %r4577, %r4578, 3;
	shf.l.wrap.b32 	%r4582, %r4578, %r4577, 3;
	mov.b64 	%rd5326, {%r4582, %r4581};
	shr.u64 	%rd5327, %rd4927, 6;
	xor.b64  	%rd5328, %rd5325, %rd5327;
	xor.b64  	%rd5329, %rd5328, %rd5326;
	shf.r.wrap.b32 	%r4583, %r4192, %r4191, 1;
	shf.r.wrap.b32 	%r4584, %r4191, %r4192, 1;
	mov.b64 	%rd5330, {%r4584, %r4583};
	shf.r.wrap.b32 	%r4585, %r4192, %r4191, 8;
	shf.r.wrap.b32 	%r4586, %r4191, %r4192, 8;
	mov.b64 	%rd5331, {%r4586, %r4585};
	shr.u64 	%rd5332, %rd4758, 7;
	xor.b64  	%rd5333, %rd5330, %rd5332;
	xor.b64  	%rd5334, %rd5333, %rd5331;
	add.s64 	%rd5335, %rd4862, %rd4745;
	add.s64 	%rd5336, %rd5335, %rd5329;
	add.s64 	%rd5337, %rd5336, %rd5334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4587,%dummy}, %rd5324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4588}, %rd5324;
	}
	shf.r.wrap.b32 	%r4589, %r4588, %r4587, 19;
	shf.r.wrap.b32 	%r4590, %r4587, %r4588, 19;
	mov.b64 	%rd5338, {%r4590, %r4589};
	shf.l.wrap.b32 	%r4591, %r4587, %r4588, 3;
	shf.l.wrap.b32 	%r4592, %r4588, %r4587, 3;
	mov.b64 	%rd5339, {%r4592, %r4591};
	shr.u64 	%rd5340, %rd5324, 6;
	xor.b64  	%rd5341, %rd5338, %rd5340;
	xor.b64  	%rd5342, %rd5341, %rd5339;
	shf.r.wrap.b32 	%r4593, %r4202, %r4201, 1;
	shf.r.wrap.b32 	%r4594, %r4201, %r4202, 1;
	mov.b64 	%rd5343, {%r4594, %r4593};
	shf.r.wrap.b32 	%r4595, %r4202, %r4201, 8;
	shf.r.wrap.b32 	%r4596, %r4201, %r4202, 8;
	mov.b64 	%rd5344, {%r4596, %r4595};
	shr.u64 	%rd5345, %rd4771, 7;
	xor.b64  	%rd5346, %rd5343, %rd5345;
	xor.b64  	%rd5347, %rd5346, %rd5344;
	add.s64 	%rd5348, %rd4875, %rd4758;
	add.s64 	%rd5349, %rd5348, %rd5342;
	add.s64 	%rd5350, %rd5349, %rd5347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4597,%dummy}, %rd5337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4598}, %rd5337;
	}
	shf.r.wrap.b32 	%r4599, %r4598, %r4597, 19;
	shf.r.wrap.b32 	%r4600, %r4597, %r4598, 19;
	mov.b64 	%rd5351, {%r4600, %r4599};
	shf.l.wrap.b32 	%r4601, %r4597, %r4598, 3;
	shf.l.wrap.b32 	%r4602, %r4598, %r4597, 3;
	mov.b64 	%rd5352, {%r4602, %r4601};
	shr.u64 	%rd5353, %rd5337, 6;
	xor.b64  	%rd5354, %rd5351, %rd5353;
	xor.b64  	%rd5355, %rd5354, %rd5352;
	shf.r.wrap.b32 	%r4603, %r4212, %r4211, 1;
	shf.r.wrap.b32 	%r4604, %r4211, %r4212, 1;
	mov.b64 	%rd5356, {%r4604, %r4603};
	shf.r.wrap.b32 	%r4605, %r4212, %r4211, 8;
	shf.r.wrap.b32 	%r4606, %r4211, %r4212, 8;
	mov.b64 	%rd5357, {%r4606, %r4605};
	shr.u64 	%rd5358, %rd4784, 7;
	xor.b64  	%rd5359, %rd5356, %rd5358;
	xor.b64  	%rd5360, %rd5359, %rd5357;
	add.s64 	%rd5361, %rd4888, %rd4771;
	add.s64 	%rd5362, %rd5361, %rd5355;
	add.s64 	%rd5363, %rd5362, %rd5360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4607,%dummy}, %rd5350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4608}, %rd5350;
	}
	shf.r.wrap.b32 	%r4609, %r4608, %r4607, 19;
	shf.r.wrap.b32 	%r4610, %r4607, %r4608, 19;
	mov.b64 	%rd5364, {%r4610, %r4609};
	shf.l.wrap.b32 	%r4611, %r4607, %r4608, 3;
	shf.l.wrap.b32 	%r4612, %r4608, %r4607, 3;
	mov.b64 	%rd5365, {%r4612, %r4611};
	shr.u64 	%rd5366, %rd5350, 6;
	xor.b64  	%rd5367, %rd5364, %rd5366;
	xor.b64  	%rd5368, %rd5367, %rd5365;
	shf.r.wrap.b32 	%r4613, %r4222, %r4221, 1;
	shf.r.wrap.b32 	%r4614, %r4221, %r4222, 1;
	mov.b64 	%rd5369, {%r4614, %r4613};
	shf.r.wrap.b32 	%r4615, %r4222, %r4221, 8;
	shf.r.wrap.b32 	%r4616, %r4221, %r4222, 8;
	mov.b64 	%rd5370, {%r4616, %r4615};
	shr.u64 	%rd5371, %rd4797, 7;
	xor.b64  	%rd5372, %rd5369, %rd5371;
	xor.b64  	%rd5373, %rd5372, %rd5370;
	add.s64 	%rd5374, %rd4901, %rd4784;
	add.s64 	%rd5375, %rd5374, %rd5368;
	add.s64 	%rd5376, %rd5375, %rd5373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4617,%dummy}, %rd5363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4618}, %rd5363;
	}
	shf.r.wrap.b32 	%r4619, %r4618, %r4617, 19;
	shf.r.wrap.b32 	%r4620, %r4617, %r4618, 19;
	mov.b64 	%rd5377, {%r4620, %r4619};
	shf.l.wrap.b32 	%r4621, %r4617, %r4618, 3;
	shf.l.wrap.b32 	%r4622, %r4618, %r4617, 3;
	mov.b64 	%rd5378, {%r4622, %r4621};
	shr.u64 	%rd5379, %rd5363, 6;
	xor.b64  	%rd5380, %rd5377, %rd5379;
	xor.b64  	%rd5381, %rd5380, %rd5378;
	shf.r.wrap.b32 	%r4623, %r4232, %r4231, 1;
	shf.r.wrap.b32 	%r4624, %r4231, %r4232, 1;
	mov.b64 	%rd5382, {%r4624, %r4623};
	shf.r.wrap.b32 	%r4625, %r4232, %r4231, 8;
	shf.r.wrap.b32 	%r4626, %r4231, %r4232, 8;
	mov.b64 	%rd5383, {%r4626, %r4625};
	shr.u64 	%rd5384, %rd4810, 7;
	xor.b64  	%rd5385, %rd5382, %rd5384;
	xor.b64  	%rd5386, %rd5385, %rd5383;
	add.s64 	%rd5387, %rd4914, %rd4797;
	add.s64 	%rd5388, %rd5387, %rd5381;
	add.s64 	%rd5389, %rd5388, %rd5386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4627,%dummy}, %rd5376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4628}, %rd5376;
	}
	shf.r.wrap.b32 	%r4629, %r4628, %r4627, 19;
	shf.r.wrap.b32 	%r4630, %r4627, %r4628, 19;
	mov.b64 	%rd5390, {%r4630, %r4629};
	shf.l.wrap.b32 	%r4631, %r4627, %r4628, 3;
	shf.l.wrap.b32 	%r4632, %r4628, %r4627, 3;
	mov.b64 	%rd5391, {%r4632, %r4631};
	shr.u64 	%rd5392, %rd5376, 6;
	xor.b64  	%rd5393, %rd5390, %rd5392;
	xor.b64  	%rd5394, %rd5393, %rd5391;
	shf.r.wrap.b32 	%r4633, %r4242, %r4241, 1;
	shf.r.wrap.b32 	%r4634, %r4241, %r4242, 1;
	mov.b64 	%rd5395, {%r4634, %r4633};
	shf.r.wrap.b32 	%r4635, %r4242, %r4241, 8;
	shf.r.wrap.b32 	%r4636, %r4241, %r4242, 8;
	mov.b64 	%rd5396, {%r4636, %r4635};
	shr.u64 	%rd5397, %rd4823, 7;
	xor.b64  	%rd5398, %rd5395, %rd5397;
	xor.b64  	%rd5399, %rd5398, %rd5396;
	add.s64 	%rd5400, %rd4927, %rd4810;
	add.s64 	%rd5401, %rd5400, %rd5394;
	add.s64 	%rd5402, %rd5401, %rd5399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4637,%dummy}, %rd5389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4638}, %rd5389;
	}
	shf.r.wrap.b32 	%r4639, %r4638, %r4637, 19;
	shf.r.wrap.b32 	%r4640, %r4637, %r4638, 19;
	mov.b64 	%rd5403, {%r4640, %r4639};
	shf.l.wrap.b32 	%r4641, %r4637, %r4638, 3;
	shf.l.wrap.b32 	%r4642, %r4638, %r4637, 3;
	mov.b64 	%rd5404, {%r4642, %r4641};
	shr.u64 	%rd5405, %rd5389, 6;
	xor.b64  	%rd5406, %rd5403, %rd5405;
	xor.b64  	%rd5407, %rd5406, %rd5404;
	shf.r.wrap.b32 	%r4643, %r4252, %r4251, 1;
	shf.r.wrap.b32 	%r4644, %r4251, %r4252, 1;
	mov.b64 	%rd5408, {%r4644, %r4643};
	shf.r.wrap.b32 	%r4645, %r4252, %r4251, 8;
	shf.r.wrap.b32 	%r4646, %r4251, %r4252, 8;
	mov.b64 	%rd5409, {%r4646, %r4645};
	shr.u64 	%rd5410, %rd4836, 7;
	xor.b64  	%rd5411, %rd5408, %rd5410;
	xor.b64  	%rd5412, %rd5411, %rd5409;
	add.s64 	%rd5413, %rd5324, %rd4823;
	add.s64 	%rd5414, %rd5413, %rd5407;
	add.s64 	%rd5415, %rd5414, %rd5412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4647,%dummy}, %rd5402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4648}, %rd5402;
	}
	shf.r.wrap.b32 	%r4649, %r4648, %r4647, 19;
	shf.r.wrap.b32 	%r4650, %r4647, %r4648, 19;
	mov.b64 	%rd5416, {%r4650, %r4649};
	shf.l.wrap.b32 	%r4651, %r4647, %r4648, 3;
	shf.l.wrap.b32 	%r4652, %r4648, %r4647, 3;
	mov.b64 	%rd5417, {%r4652, %r4651};
	shr.u64 	%rd5418, %rd5402, 6;
	xor.b64  	%rd5419, %rd5416, %rd5418;
	xor.b64  	%rd5420, %rd5419, %rd5417;
	shf.r.wrap.b32 	%r4653, %r4262, %r4261, 1;
	shf.r.wrap.b32 	%r4654, %r4261, %r4262, 1;
	mov.b64 	%rd5421, {%r4654, %r4653};
	shf.r.wrap.b32 	%r4655, %r4262, %r4261, 8;
	shf.r.wrap.b32 	%r4656, %r4261, %r4262, 8;
	mov.b64 	%rd5422, {%r4656, %r4655};
	shr.u64 	%rd5423, %rd4849, 7;
	xor.b64  	%rd5424, %rd5421, %rd5423;
	xor.b64  	%rd5425, %rd5424, %rd5422;
	add.s64 	%rd5426, %rd5337, %rd4836;
	add.s64 	%rd5427, %rd5426, %rd5420;
	add.s64 	%rd5428, %rd5427, %rd5425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4657,%dummy}, %rd5415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4658}, %rd5415;
	}
	shf.r.wrap.b32 	%r4659, %r4658, %r4657, 19;
	shf.r.wrap.b32 	%r4660, %r4657, %r4658, 19;
	mov.b64 	%rd5429, {%r4660, %r4659};
	shf.l.wrap.b32 	%r4661, %r4657, %r4658, 3;
	shf.l.wrap.b32 	%r4662, %r4658, %r4657, 3;
	mov.b64 	%rd5430, {%r4662, %r4661};
	shr.u64 	%rd5431, %rd5415, 6;
	xor.b64  	%rd5432, %rd5429, %rd5431;
	xor.b64  	%rd5433, %rd5432, %rd5430;
	shf.r.wrap.b32 	%r4663, %r4272, %r4271, 1;
	shf.r.wrap.b32 	%r4664, %r4271, %r4272, 1;
	mov.b64 	%rd5434, {%r4664, %r4663};
	shf.r.wrap.b32 	%r4665, %r4272, %r4271, 8;
	shf.r.wrap.b32 	%r4666, %r4271, %r4272, 8;
	mov.b64 	%rd5435, {%r4666, %r4665};
	shr.u64 	%rd5436, %rd4862, 7;
	xor.b64  	%rd5437, %rd5434, %rd5436;
	xor.b64  	%rd5438, %rd5437, %rd5435;
	add.s64 	%rd5439, %rd5350, %rd4849;
	add.s64 	%rd5440, %rd5439, %rd5433;
	add.s64 	%rd5441, %rd5440, %rd5438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4667,%dummy}, %rd5428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4668}, %rd5428;
	}
	shf.r.wrap.b32 	%r4669, %r4668, %r4667, 19;
	shf.r.wrap.b32 	%r4670, %r4667, %r4668, 19;
	mov.b64 	%rd5442, {%r4670, %r4669};
	shf.l.wrap.b32 	%r4671, %r4667, %r4668, 3;
	shf.l.wrap.b32 	%r4672, %r4668, %r4667, 3;
	mov.b64 	%rd5443, {%r4672, %r4671};
	shr.u64 	%rd5444, %rd5428, 6;
	xor.b64  	%rd5445, %rd5442, %rd5444;
	xor.b64  	%rd5446, %rd5445, %rd5443;
	shf.r.wrap.b32 	%r4673, %r4282, %r4281, 1;
	shf.r.wrap.b32 	%r4674, %r4281, %r4282, 1;
	mov.b64 	%rd5447, {%r4674, %r4673};
	shf.r.wrap.b32 	%r4675, %r4282, %r4281, 8;
	shf.r.wrap.b32 	%r4676, %r4281, %r4282, 8;
	mov.b64 	%rd5448, {%r4676, %r4675};
	shr.u64 	%rd5449, %rd4875, 7;
	xor.b64  	%rd5450, %rd5447, %rd5449;
	xor.b64  	%rd5451, %rd5450, %rd5448;
	add.s64 	%rd5452, %rd5363, %rd4862;
	add.s64 	%rd5453, %rd5452, %rd5446;
	add.s64 	%rd5454, %rd5453, %rd5451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4677,%dummy}, %rd5441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4678}, %rd5441;
	}
	shf.r.wrap.b32 	%r4679, %r4678, %r4677, 19;
	shf.r.wrap.b32 	%r4680, %r4677, %r4678, 19;
	mov.b64 	%rd5455, {%r4680, %r4679};
	shf.l.wrap.b32 	%r4681, %r4677, %r4678, 3;
	shf.l.wrap.b32 	%r4682, %r4678, %r4677, 3;
	mov.b64 	%rd5456, {%r4682, %r4681};
	shr.u64 	%rd5457, %rd5441, 6;
	xor.b64  	%rd5458, %rd5455, %rd5457;
	xor.b64  	%rd5459, %rd5458, %rd5456;
	shf.r.wrap.b32 	%r4683, %r4292, %r4291, 1;
	shf.r.wrap.b32 	%r4684, %r4291, %r4292, 1;
	mov.b64 	%rd5460, {%r4684, %r4683};
	shf.r.wrap.b32 	%r4685, %r4292, %r4291, 8;
	shf.r.wrap.b32 	%r4686, %r4291, %r4292, 8;
	mov.b64 	%rd5461, {%r4686, %r4685};
	shr.u64 	%rd5462, %rd4888, 7;
	xor.b64  	%rd5463, %rd5460, %rd5462;
	xor.b64  	%rd5464, %rd5463, %rd5461;
	add.s64 	%rd5465, %rd5376, %rd4875;
	add.s64 	%rd5466, %rd5465, %rd5459;
	add.s64 	%rd5467, %rd5466, %rd5464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4687,%dummy}, %rd5454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4688}, %rd5454;
	}
	shf.r.wrap.b32 	%r4689, %r4688, %r4687, 19;
	shf.r.wrap.b32 	%r4690, %r4687, %r4688, 19;
	mov.b64 	%rd5468, {%r4690, %r4689};
	shf.l.wrap.b32 	%r4691, %r4687, %r4688, 3;
	shf.l.wrap.b32 	%r4692, %r4688, %r4687, 3;
	mov.b64 	%rd5469, {%r4692, %r4691};
	shr.u64 	%rd5470, %rd5454, 6;
	xor.b64  	%rd5471, %rd5468, %rd5470;
	xor.b64  	%rd5472, %rd5471, %rd5469;
	shf.r.wrap.b32 	%r4693, %r4302, %r4301, 1;
	shf.r.wrap.b32 	%r4694, %r4301, %r4302, 1;
	mov.b64 	%rd5473, {%r4694, %r4693};
	shf.r.wrap.b32 	%r4695, %r4302, %r4301, 8;
	shf.r.wrap.b32 	%r4696, %r4301, %r4302, 8;
	mov.b64 	%rd5474, {%r4696, %r4695};
	shr.u64 	%rd5475, %rd4901, 7;
	xor.b64  	%rd5476, %rd5473, %rd5475;
	xor.b64  	%rd5477, %rd5476, %rd5474;
	add.s64 	%rd5478, %rd5389, %rd4888;
	add.s64 	%rd5479, %rd5478, %rd5472;
	add.s64 	%rd5480, %rd5479, %rd5477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4697,%dummy}, %rd5467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4698}, %rd5467;
	}
	shf.r.wrap.b32 	%r4699, %r4698, %r4697, 19;
	shf.r.wrap.b32 	%r4700, %r4697, %r4698, 19;
	mov.b64 	%rd5481, {%r4700, %r4699};
	shf.l.wrap.b32 	%r4701, %r4697, %r4698, 3;
	shf.l.wrap.b32 	%r4702, %r4698, %r4697, 3;
	mov.b64 	%rd5482, {%r4702, %r4701};
	shr.u64 	%rd5483, %rd5467, 6;
	xor.b64  	%rd5484, %rd5481, %rd5483;
	xor.b64  	%rd5485, %rd5484, %rd5482;
	shf.r.wrap.b32 	%r4703, %r4568, %r4567, 1;
	shf.r.wrap.b32 	%r4704, %r4567, %r4568, 1;
	mov.b64 	%rd5486, {%r4704, %r4703};
	shf.r.wrap.b32 	%r4705, %r4568, %r4567, 8;
	shf.r.wrap.b32 	%r4706, %r4567, %r4568, 8;
	mov.b64 	%rd5487, {%r4706, %r4705};
	shr.u64 	%rd5488, %rd4914, 7;
	xor.b64  	%rd5489, %rd5486, %rd5488;
	xor.b64  	%rd5490, %rd5489, %rd5487;
	add.s64 	%rd5491, %rd5402, %rd4901;
	add.s64 	%rd5492, %rd5491, %rd5485;
	add.s64 	%rd5493, %rd5492, %rd5490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4707,%dummy}, %rd5480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4708}, %rd5480;
	}
	shf.r.wrap.b32 	%r4709, %r4708, %r4707, 19;
	shf.r.wrap.b32 	%r4710, %r4707, %r4708, 19;
	mov.b64 	%rd5494, {%r4710, %r4709};
	shf.l.wrap.b32 	%r4711, %r4707, %r4708, 3;
	shf.l.wrap.b32 	%r4712, %r4708, %r4707, 3;
	mov.b64 	%rd5495, {%r4712, %r4711};
	shr.u64 	%rd5496, %rd5480, 6;
	xor.b64  	%rd5497, %rd5494, %rd5496;
	xor.b64  	%rd5498, %rd5497, %rd5495;
	shf.r.wrap.b32 	%r4713, %r4578, %r4577, 1;
	shf.r.wrap.b32 	%r4714, %r4577, %r4578, 1;
	mov.b64 	%rd5499, {%r4714, %r4713};
	shf.r.wrap.b32 	%r4715, %r4578, %r4577, 8;
	shf.r.wrap.b32 	%r4716, %r4577, %r4578, 8;
	mov.b64 	%rd5500, {%r4716, %r4715};
	shr.u64 	%rd5501, %rd4927, 7;
	xor.b64  	%rd5502, %rd5499, %rd5501;
	xor.b64  	%rd5503, %rd5502, %rd5500;
	add.s64 	%rd5504, %rd5415, %rd4914;
	add.s64 	%rd5505, %rd5504, %rd5498;
	add.s64 	%rd5506, %rd5505, %rd5503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4717,%dummy}, %rd5493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4718}, %rd5493;
	}
	shf.r.wrap.b32 	%r4719, %r4718, %r4717, 19;
	shf.r.wrap.b32 	%r4720, %r4717, %r4718, 19;
	mov.b64 	%rd5507, {%r4720, %r4719};
	shf.l.wrap.b32 	%r4721, %r4717, %r4718, 3;
	shf.l.wrap.b32 	%r4722, %r4718, %r4717, 3;
	mov.b64 	%rd5508, {%r4722, %r4721};
	shr.u64 	%rd5509, %rd5493, 6;
	xor.b64  	%rd5510, %rd5507, %rd5509;
	xor.b64  	%rd5511, %rd5510, %rd5508;
	shf.r.wrap.b32 	%r4723, %r4588, %r4587, 1;
	shf.r.wrap.b32 	%r4724, %r4587, %r4588, 1;
	mov.b64 	%rd5512, {%r4724, %r4723};
	shf.r.wrap.b32 	%r4725, %r4588, %r4587, 8;
	shf.r.wrap.b32 	%r4726, %r4587, %r4588, 8;
	mov.b64 	%rd5513, {%r4726, %r4725};
	shr.u64 	%rd5514, %rd5324, 7;
	xor.b64  	%rd5515, %rd5512, %rd5514;
	xor.b64  	%rd5516, %rd5515, %rd5513;
	add.s64 	%rd5517, %rd5428, %rd4927;
	add.s64 	%rd5518, %rd5517, %rd5511;
	add.s64 	%rd5519, %rd5518, %rd5516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4727,%dummy}, %rd5300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4728}, %rd5300;
	}
	shf.r.wrap.b32 	%r4729, %r4728, %r4727, 14;
	shf.r.wrap.b32 	%r4730, %r4727, %r4728, 14;
	mov.b64 	%rd5520, {%r4730, %r4729};
	shf.r.wrap.b32 	%r4731, %r4728, %r4727, 18;
	shf.r.wrap.b32 	%r4732, %r4727, %r4728, 18;
	mov.b64 	%rd5521, {%r4732, %r4731};
	xor.b64  	%rd5522, %rd5521, %rd5520;
	shf.l.wrap.b32 	%r4733, %r4727, %r4728, 23;
	shf.l.wrap.b32 	%r4734, %r4728, %r4727, 23;
	mov.b64 	%rd5523, {%r4734, %r4733};
	xor.b64  	%rd5524, %rd5522, %rd5523;
	xor.b64  	%rd5525, %rd5276, %rd5252;
	and.b64  	%rd5526, %rd5525, %rd5300;
	xor.b64  	%rd5527, %rd5526, %rd5252;
	add.s64 	%rd5528, %rd5527, %rd5228;
	add.s64 	%rd5529, %rd5528, %rd5324;
	add.s64 	%rd5530, %rd5529, %rd8788;
	add.s64 	%rd5531, %rd5530, %rd5524;
	add.s64 	%rd5532, %rd5531, %rd5239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4735,%dummy}, %rd5311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4736}, %rd5311;
	}
	shf.r.wrap.b32 	%r4737, %r4736, %r4735, 28;
	shf.r.wrap.b32 	%r4738, %r4735, %r4736, 28;
	mov.b64 	%rd5533, {%r4738, %r4737};
	shf.l.wrap.b32 	%r4739, %r4735, %r4736, 30;
	shf.l.wrap.b32 	%r4740, %r4736, %r4735, 30;
	mov.b64 	%rd5534, {%r4740, %r4739};
	xor.b64  	%rd5535, %rd5534, %rd5533;
	shf.l.wrap.b32 	%r4741, %r4735, %r4736, 25;
	shf.l.wrap.b32 	%r4742, %r4736, %r4735, 25;
	mov.b64 	%rd5536, {%r4742, %r4741};
	xor.b64  	%rd5537, %rd5535, %rd5536;
	xor.b64  	%rd5538, %rd5311, %rd5263;
	xor.b64  	%rd5539, %rd5311, %rd5287;
	and.b64  	%rd5540, %rd5539, %rd5538;
	xor.b64  	%rd5541, %rd5540, %rd5311;
	add.s64 	%rd5542, %rd5531, %rd5541;
	add.s64 	%rd5543, %rd5542, %rd5537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4743,%dummy}, %rd5532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4744}, %rd5532;
	}
	shf.r.wrap.b32 	%r4745, %r4744, %r4743, 14;
	shf.r.wrap.b32 	%r4746, %r4743, %r4744, 14;
	mov.b64 	%rd5544, {%r4746, %r4745};
	shf.r.wrap.b32 	%r4747, %r4744, %r4743, 18;
	shf.r.wrap.b32 	%r4748, %r4743, %r4744, 18;
	mov.b64 	%rd5545, {%r4748, %r4747};
	xor.b64  	%rd5546, %rd5545, %rd5544;
	shf.l.wrap.b32 	%r4749, %r4743, %r4744, 23;
	shf.l.wrap.b32 	%r4750, %r4744, %r4743, 23;
	mov.b64 	%rd5547, {%r4750, %r4749};
	xor.b64  	%rd5548, %rd5546, %rd5547;
	xor.b64  	%rd5549, %rd5300, %rd5276;
	and.b64  	%rd5550, %rd5532, %rd5549;
	xor.b64  	%rd5551, %rd5550, %rd5276;
	add.s64 	%rd5552, %rd5337, %rd5252;
	add.s64 	%rd5553, %rd5552, %rd8787;
	add.s64 	%rd5554, %rd5553, %rd5551;
	add.s64 	%rd5555, %rd5554, %rd5548;
	add.s64 	%rd5556, %rd5555, %rd5263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4751,%dummy}, %rd5543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4752}, %rd5543;
	}
	shf.r.wrap.b32 	%r4753, %r4752, %r4751, 28;
	shf.r.wrap.b32 	%r4754, %r4751, %r4752, 28;
	mov.b64 	%rd5557, {%r4754, %r4753};
	shf.l.wrap.b32 	%r4755, %r4751, %r4752, 30;
	shf.l.wrap.b32 	%r4756, %r4752, %r4751, 30;
	mov.b64 	%rd5558, {%r4756, %r4755};
	xor.b64  	%rd5559, %rd5558, %rd5557;
	shf.l.wrap.b32 	%r4757, %r4751, %r4752, 25;
	shf.l.wrap.b32 	%r4758, %r4752, %r4751, 25;
	mov.b64 	%rd5560, {%r4758, %r4757};
	xor.b64  	%rd5561, %rd5559, %rd5560;
	xor.b64  	%rd5562, %rd5543, %rd5287;
	xor.b64  	%rd5563, %rd5543, %rd5311;
	and.b64  	%rd5564, %rd5563, %rd5562;
	xor.b64  	%rd5565, %rd5564, %rd5543;
	add.s64 	%rd5566, %rd5555, %rd5565;
	add.s64 	%rd5567, %rd5566, %rd5561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4759,%dummy}, %rd5556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4760}, %rd5556;
	}
	shf.r.wrap.b32 	%r4761, %r4760, %r4759, 14;
	shf.r.wrap.b32 	%r4762, %r4759, %r4760, 14;
	mov.b64 	%rd5568, {%r4762, %r4761};
	shf.r.wrap.b32 	%r4763, %r4760, %r4759, 18;
	shf.r.wrap.b32 	%r4764, %r4759, %r4760, 18;
	mov.b64 	%rd5569, {%r4764, %r4763};
	xor.b64  	%rd5570, %rd5569, %rd5568;
	shf.l.wrap.b32 	%r4765, %r4759, %r4760, 23;
	shf.l.wrap.b32 	%r4766, %r4760, %r4759, 23;
	mov.b64 	%rd5571, {%r4766, %r4765};
	xor.b64  	%rd5572, %rd5570, %rd5571;
	xor.b64  	%rd5573, %rd5532, %rd5300;
	and.b64  	%rd5574, %rd5556, %rd5573;
	xor.b64  	%rd5575, %rd5574, %rd5300;
	add.s64 	%rd5576, %rd5350, %rd5276;
	add.s64 	%rd5577, %rd5576, %rd8786;
	add.s64 	%rd5578, %rd5577, %rd5575;
	add.s64 	%rd5579, %rd5578, %rd5572;
	add.s64 	%rd5580, %rd5579, %rd5287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4767,%dummy}, %rd5567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4768}, %rd5567;
	}
	shf.r.wrap.b32 	%r4769, %r4768, %r4767, 28;
	shf.r.wrap.b32 	%r4770, %r4767, %r4768, 28;
	mov.b64 	%rd5581, {%r4770, %r4769};
	shf.l.wrap.b32 	%r4771, %r4767, %r4768, 30;
	shf.l.wrap.b32 	%r4772, %r4768, %r4767, 30;
	mov.b64 	%rd5582, {%r4772, %r4771};
	xor.b64  	%rd5583, %rd5582, %rd5581;
	shf.l.wrap.b32 	%r4773, %r4767, %r4768, 25;
	shf.l.wrap.b32 	%r4774, %r4768, %r4767, 25;
	mov.b64 	%rd5584, {%r4774, %r4773};
	xor.b64  	%rd5585, %rd5583, %rd5584;
	xor.b64  	%rd5586, %rd5567, %rd5311;
	xor.b64  	%rd5587, %rd5567, %rd5543;
	and.b64  	%rd5588, %rd5587, %rd5586;
	xor.b64  	%rd5589, %rd5588, %rd5567;
	add.s64 	%rd5590, %rd5579, %rd5589;
	add.s64 	%rd5591, %rd5590, %rd5585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4775,%dummy}, %rd5580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4776}, %rd5580;
	}
	shf.r.wrap.b32 	%r4777, %r4776, %r4775, 14;
	shf.r.wrap.b32 	%r4778, %r4775, %r4776, 14;
	mov.b64 	%rd5592, {%r4778, %r4777};
	shf.r.wrap.b32 	%r4779, %r4776, %r4775, 18;
	shf.r.wrap.b32 	%r4780, %r4775, %r4776, 18;
	mov.b64 	%rd5593, {%r4780, %r4779};
	xor.b64  	%rd5594, %rd5593, %rd5592;
	shf.l.wrap.b32 	%r4781, %r4775, %r4776, 23;
	shf.l.wrap.b32 	%r4782, %r4776, %r4775, 23;
	mov.b64 	%rd5595, {%r4782, %r4781};
	xor.b64  	%rd5596, %rd5594, %rd5595;
	xor.b64  	%rd5597, %rd5556, %rd5532;
	and.b64  	%rd5598, %rd5580, %rd5597;
	xor.b64  	%rd5599, %rd5598, %rd5532;
	add.s64 	%rd5600, %rd5363, %rd5300;
	add.s64 	%rd5601, %rd5600, %rd8785;
	add.s64 	%rd5602, %rd5601, %rd5599;
	add.s64 	%rd5603, %rd5602, %rd5596;
	add.s64 	%rd5604, %rd5603, %rd5311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4783,%dummy}, %rd5591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4784}, %rd5591;
	}
	shf.r.wrap.b32 	%r4785, %r4784, %r4783, 28;
	shf.r.wrap.b32 	%r4786, %r4783, %r4784, 28;
	mov.b64 	%rd5605, {%r4786, %r4785};
	shf.l.wrap.b32 	%r4787, %r4783, %r4784, 30;
	shf.l.wrap.b32 	%r4788, %r4784, %r4783, 30;
	mov.b64 	%rd5606, {%r4788, %r4787};
	xor.b64  	%rd5607, %rd5606, %rd5605;
	shf.l.wrap.b32 	%r4789, %r4783, %r4784, 25;
	shf.l.wrap.b32 	%r4790, %r4784, %r4783, 25;
	mov.b64 	%rd5608, {%r4790, %r4789};
	xor.b64  	%rd5609, %rd5607, %rd5608;
	xor.b64  	%rd5610, %rd5591, %rd5543;
	xor.b64  	%rd5611, %rd5591, %rd5567;
	and.b64  	%rd5612, %rd5611, %rd5610;
	xor.b64  	%rd5613, %rd5612, %rd5591;
	add.s64 	%rd5614, %rd5603, %rd5613;
	add.s64 	%rd5615, %rd5614, %rd5609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4791,%dummy}, %rd5604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4792}, %rd5604;
	}
	shf.r.wrap.b32 	%r4793, %r4792, %r4791, 14;
	shf.r.wrap.b32 	%r4794, %r4791, %r4792, 14;
	mov.b64 	%rd5616, {%r4794, %r4793};
	shf.r.wrap.b32 	%r4795, %r4792, %r4791, 18;
	shf.r.wrap.b32 	%r4796, %r4791, %r4792, 18;
	mov.b64 	%rd5617, {%r4796, %r4795};
	xor.b64  	%rd5618, %rd5617, %rd5616;
	shf.l.wrap.b32 	%r4797, %r4791, %r4792, 23;
	shf.l.wrap.b32 	%r4798, %r4792, %r4791, 23;
	mov.b64 	%rd5619, {%r4798, %r4797};
	xor.b64  	%rd5620, %rd5618, %rd5619;
	xor.b64  	%rd5621, %rd5580, %rd5556;
	and.b64  	%rd5622, %rd5604, %rd5621;
	xor.b64  	%rd5623, %rd5622, %rd5556;
	add.s64 	%rd5624, %rd5532, %rd5376;
	add.s64 	%rd5625, %rd5624, %rd8784;
	add.s64 	%rd5626, %rd5625, %rd5623;
	add.s64 	%rd5627, %rd5626, %rd5620;
	add.s64 	%rd5628, %rd5627, %rd5543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4799,%dummy}, %rd5615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4800}, %rd5615;
	}
	shf.r.wrap.b32 	%r4801, %r4800, %r4799, 28;
	shf.r.wrap.b32 	%r4802, %r4799, %r4800, 28;
	mov.b64 	%rd5629, {%r4802, %r4801};
	shf.l.wrap.b32 	%r4803, %r4799, %r4800, 30;
	shf.l.wrap.b32 	%r4804, %r4800, %r4799, 30;
	mov.b64 	%rd5630, {%r4804, %r4803};
	xor.b64  	%rd5631, %rd5630, %rd5629;
	shf.l.wrap.b32 	%r4805, %r4799, %r4800, 25;
	shf.l.wrap.b32 	%r4806, %r4800, %r4799, 25;
	mov.b64 	%rd5632, {%r4806, %r4805};
	xor.b64  	%rd5633, %rd5631, %rd5632;
	xor.b64  	%rd5634, %rd5615, %rd5567;
	xor.b64  	%rd5635, %rd5615, %rd5591;
	and.b64  	%rd5636, %rd5635, %rd5634;
	xor.b64  	%rd5637, %rd5636, %rd5615;
	add.s64 	%rd5638, %rd5627, %rd5637;
	add.s64 	%rd5639, %rd5638, %rd5633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4807,%dummy}, %rd5628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4808}, %rd5628;
	}
	shf.r.wrap.b32 	%r4809, %r4808, %r4807, 14;
	shf.r.wrap.b32 	%r4810, %r4807, %r4808, 14;
	mov.b64 	%rd5640, {%r4810, %r4809};
	shf.r.wrap.b32 	%r4811, %r4808, %r4807, 18;
	shf.r.wrap.b32 	%r4812, %r4807, %r4808, 18;
	mov.b64 	%rd5641, {%r4812, %r4811};
	xor.b64  	%rd5642, %rd5641, %rd5640;
	shf.l.wrap.b32 	%r4813, %r4807, %r4808, 23;
	shf.l.wrap.b32 	%r4814, %r4808, %r4807, 23;
	mov.b64 	%rd5643, {%r4814, %r4813};
	xor.b64  	%rd5644, %rd5642, %rd5643;
	xor.b64  	%rd5645, %rd5604, %rd5580;
	and.b64  	%rd5646, %rd5628, %rd5645;
	xor.b64  	%rd5647, %rd5646, %rd5580;
	add.s64 	%rd5648, %rd5556, %rd5389;
	add.s64 	%rd5649, %rd5648, %rd8783;
	add.s64 	%rd5650, %rd5649, %rd5647;
	add.s64 	%rd5651, %rd5650, %rd5644;
	add.s64 	%rd5652, %rd5651, %rd5567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4815,%dummy}, %rd5639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4816}, %rd5639;
	}
	shf.r.wrap.b32 	%r4817, %r4816, %r4815, 28;
	shf.r.wrap.b32 	%r4818, %r4815, %r4816, 28;
	mov.b64 	%rd5653, {%r4818, %r4817};
	shf.l.wrap.b32 	%r4819, %r4815, %r4816, 30;
	shf.l.wrap.b32 	%r4820, %r4816, %r4815, 30;
	mov.b64 	%rd5654, {%r4820, %r4819};
	xor.b64  	%rd5655, %rd5654, %rd5653;
	shf.l.wrap.b32 	%r4821, %r4815, %r4816, 25;
	shf.l.wrap.b32 	%r4822, %r4816, %r4815, 25;
	mov.b64 	%rd5656, {%r4822, %r4821};
	xor.b64  	%rd5657, %rd5655, %rd5656;
	xor.b64  	%rd5658, %rd5639, %rd5591;
	xor.b64  	%rd5659, %rd5639, %rd5615;
	and.b64  	%rd5660, %rd5659, %rd5658;
	xor.b64  	%rd5661, %rd5660, %rd5639;
	add.s64 	%rd5662, %rd5651, %rd5661;
	add.s64 	%rd5663, %rd5662, %rd5657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4823,%dummy}, %rd5652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4824}, %rd5652;
	}
	shf.r.wrap.b32 	%r4825, %r4824, %r4823, 14;
	shf.r.wrap.b32 	%r4826, %r4823, %r4824, 14;
	mov.b64 	%rd5664, {%r4826, %r4825};
	shf.r.wrap.b32 	%r4827, %r4824, %r4823, 18;
	shf.r.wrap.b32 	%r4828, %r4823, %r4824, 18;
	mov.b64 	%rd5665, {%r4828, %r4827};
	xor.b64  	%rd5666, %rd5665, %rd5664;
	shf.l.wrap.b32 	%r4829, %r4823, %r4824, 23;
	shf.l.wrap.b32 	%r4830, %r4824, %r4823, 23;
	mov.b64 	%rd5667, {%r4830, %r4829};
	xor.b64  	%rd5668, %rd5666, %rd5667;
	xor.b64  	%rd5669, %rd5628, %rd5604;
	and.b64  	%rd5670, %rd5652, %rd5669;
	xor.b64  	%rd5671, %rd5670, %rd5604;
	add.s64 	%rd5672, %rd5580, %rd5402;
	add.s64 	%rd5673, %rd5672, %rd8782;
	add.s64 	%rd5674, %rd5673, %rd5671;
	add.s64 	%rd5675, %rd5674, %rd5668;
	add.s64 	%rd5676, %rd5675, %rd5591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4831,%dummy}, %rd5663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4832}, %rd5663;
	}
	shf.r.wrap.b32 	%r4833, %r4832, %r4831, 28;
	shf.r.wrap.b32 	%r4834, %r4831, %r4832, 28;
	mov.b64 	%rd5677, {%r4834, %r4833};
	shf.l.wrap.b32 	%r4835, %r4831, %r4832, 30;
	shf.l.wrap.b32 	%r4836, %r4832, %r4831, 30;
	mov.b64 	%rd5678, {%r4836, %r4835};
	xor.b64  	%rd5679, %rd5678, %rd5677;
	shf.l.wrap.b32 	%r4837, %r4831, %r4832, 25;
	shf.l.wrap.b32 	%r4838, %r4832, %r4831, 25;
	mov.b64 	%rd5680, {%r4838, %r4837};
	xor.b64  	%rd5681, %rd5679, %rd5680;
	xor.b64  	%rd5682, %rd5663, %rd5615;
	xor.b64  	%rd5683, %rd5663, %rd5639;
	and.b64  	%rd5684, %rd5683, %rd5682;
	xor.b64  	%rd5685, %rd5684, %rd5663;
	add.s64 	%rd5686, %rd5675, %rd5685;
	add.s64 	%rd5687, %rd5686, %rd5681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4839,%dummy}, %rd5676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4840}, %rd5676;
	}
	shf.r.wrap.b32 	%r4841, %r4840, %r4839, 14;
	shf.r.wrap.b32 	%r4842, %r4839, %r4840, 14;
	mov.b64 	%rd5688, {%r4842, %r4841};
	shf.r.wrap.b32 	%r4843, %r4840, %r4839, 18;
	shf.r.wrap.b32 	%r4844, %r4839, %r4840, 18;
	mov.b64 	%rd5689, {%r4844, %r4843};
	xor.b64  	%rd5690, %rd5689, %rd5688;
	shf.l.wrap.b32 	%r4845, %r4839, %r4840, 23;
	shf.l.wrap.b32 	%r4846, %r4840, %r4839, 23;
	mov.b64 	%rd5691, {%r4846, %r4845};
	xor.b64  	%rd5692, %rd5690, %rd5691;
	xor.b64  	%rd5693, %rd5652, %rd5628;
	and.b64  	%rd5694, %rd5676, %rd5693;
	xor.b64  	%rd5695, %rd5694, %rd5628;
	add.s64 	%rd5696, %rd5604, %rd5415;
	add.s64 	%rd5697, %rd5696, %rd8781;
	add.s64 	%rd5698, %rd5697, %rd5695;
	add.s64 	%rd5699, %rd5698, %rd5692;
	add.s64 	%rd5700, %rd5699, %rd5615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4847,%dummy}, %rd5687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4848}, %rd5687;
	}
	shf.r.wrap.b32 	%r4849, %r4848, %r4847, 28;
	shf.r.wrap.b32 	%r4850, %r4847, %r4848, 28;
	mov.b64 	%rd5701, {%r4850, %r4849};
	shf.l.wrap.b32 	%r4851, %r4847, %r4848, 30;
	shf.l.wrap.b32 	%r4852, %r4848, %r4847, 30;
	mov.b64 	%rd5702, {%r4852, %r4851};
	xor.b64  	%rd5703, %rd5702, %rd5701;
	shf.l.wrap.b32 	%r4853, %r4847, %r4848, 25;
	shf.l.wrap.b32 	%r4854, %r4848, %r4847, 25;
	mov.b64 	%rd5704, {%r4854, %r4853};
	xor.b64  	%rd5705, %rd5703, %rd5704;
	xor.b64  	%rd5706, %rd5687, %rd5639;
	xor.b64  	%rd5707, %rd5687, %rd5663;
	and.b64  	%rd5708, %rd5707, %rd5706;
	xor.b64  	%rd5709, %rd5708, %rd5687;
	add.s64 	%rd5710, %rd5699, %rd5709;
	add.s64 	%rd5711, %rd5710, %rd5705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4855,%dummy}, %rd5700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4856}, %rd5700;
	}
	shf.r.wrap.b32 	%r4857, %r4856, %r4855, 14;
	shf.r.wrap.b32 	%r4858, %r4855, %r4856, 14;
	mov.b64 	%rd5712, {%r4858, %r4857};
	shf.r.wrap.b32 	%r4859, %r4856, %r4855, 18;
	shf.r.wrap.b32 	%r4860, %r4855, %r4856, 18;
	mov.b64 	%rd5713, {%r4860, %r4859};
	xor.b64  	%rd5714, %rd5713, %rd5712;
	shf.l.wrap.b32 	%r4861, %r4855, %r4856, 23;
	shf.l.wrap.b32 	%r4862, %r4856, %r4855, 23;
	mov.b64 	%rd5715, {%r4862, %r4861};
	xor.b64  	%rd5716, %rd5714, %rd5715;
	xor.b64  	%rd5717, %rd5676, %rd5652;
	and.b64  	%rd5718, %rd5700, %rd5717;
	xor.b64  	%rd5719, %rd5718, %rd5652;
	add.s64 	%rd5720, %rd5628, %rd5428;
	add.s64 	%rd5721, %rd5720, %rd8780;
	add.s64 	%rd5722, %rd5721, %rd5719;
	add.s64 	%rd5723, %rd5722, %rd5716;
	add.s64 	%rd5724, %rd5723, %rd5639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4863,%dummy}, %rd5711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4864}, %rd5711;
	}
	shf.r.wrap.b32 	%r4865, %r4864, %r4863, 28;
	shf.r.wrap.b32 	%r4866, %r4863, %r4864, 28;
	mov.b64 	%rd5725, {%r4866, %r4865};
	shf.l.wrap.b32 	%r4867, %r4863, %r4864, 30;
	shf.l.wrap.b32 	%r4868, %r4864, %r4863, 30;
	mov.b64 	%rd5726, {%r4868, %r4867};
	xor.b64  	%rd5727, %rd5726, %rd5725;
	shf.l.wrap.b32 	%r4869, %r4863, %r4864, 25;
	shf.l.wrap.b32 	%r4870, %r4864, %r4863, 25;
	mov.b64 	%rd5728, {%r4870, %r4869};
	xor.b64  	%rd5729, %rd5727, %rd5728;
	xor.b64  	%rd5730, %rd5711, %rd5663;
	xor.b64  	%rd5731, %rd5711, %rd5687;
	and.b64  	%rd5732, %rd5731, %rd5730;
	xor.b64  	%rd5733, %rd5732, %rd5711;
	add.s64 	%rd5734, %rd5723, %rd5733;
	add.s64 	%rd5735, %rd5734, %rd5729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4871,%dummy}, %rd5724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4872}, %rd5724;
	}
	shf.r.wrap.b32 	%r4873, %r4872, %r4871, 14;
	shf.r.wrap.b32 	%r4874, %r4871, %r4872, 14;
	mov.b64 	%rd5736, {%r4874, %r4873};
	shf.r.wrap.b32 	%r4875, %r4872, %r4871, 18;
	shf.r.wrap.b32 	%r4876, %r4871, %r4872, 18;
	mov.b64 	%rd5737, {%r4876, %r4875};
	xor.b64  	%rd5738, %rd5737, %rd5736;
	shf.l.wrap.b32 	%r4877, %r4871, %r4872, 23;
	shf.l.wrap.b32 	%r4878, %r4872, %r4871, 23;
	mov.b64 	%rd5739, {%r4878, %r4877};
	xor.b64  	%rd5740, %rd5738, %rd5739;
	xor.b64  	%rd5741, %rd5700, %rd5676;
	and.b64  	%rd5742, %rd5724, %rd5741;
	xor.b64  	%rd5743, %rd5742, %rd5676;
	add.s64 	%rd5744, %rd5652, %rd5441;
	add.s64 	%rd5745, %rd5744, %rd8779;
	add.s64 	%rd5746, %rd5745, %rd5743;
	add.s64 	%rd5747, %rd5746, %rd5740;
	add.s64 	%rd5748, %rd5747, %rd5663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4879,%dummy}, %rd5735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4880}, %rd5735;
	}
	shf.r.wrap.b32 	%r4881, %r4880, %r4879, 28;
	shf.r.wrap.b32 	%r4882, %r4879, %r4880, 28;
	mov.b64 	%rd5749, {%r4882, %r4881};
	shf.l.wrap.b32 	%r4883, %r4879, %r4880, 30;
	shf.l.wrap.b32 	%r4884, %r4880, %r4879, 30;
	mov.b64 	%rd5750, {%r4884, %r4883};
	xor.b64  	%rd5751, %rd5750, %rd5749;
	shf.l.wrap.b32 	%r4885, %r4879, %r4880, 25;
	shf.l.wrap.b32 	%r4886, %r4880, %r4879, 25;
	mov.b64 	%rd5752, {%r4886, %r4885};
	xor.b64  	%rd5753, %rd5751, %rd5752;
	xor.b64  	%rd5754, %rd5735, %rd5687;
	xor.b64  	%rd5755, %rd5735, %rd5711;
	and.b64  	%rd5756, %rd5755, %rd5754;
	xor.b64  	%rd5757, %rd5756, %rd5735;
	add.s64 	%rd5758, %rd5747, %rd5757;
	add.s64 	%rd5759, %rd5758, %rd5753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4887,%dummy}, %rd5748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4888}, %rd5748;
	}
	shf.r.wrap.b32 	%r4889, %r4888, %r4887, 14;
	shf.r.wrap.b32 	%r4890, %r4887, %r4888, 14;
	mov.b64 	%rd5760, {%r4890, %r4889};
	shf.r.wrap.b32 	%r4891, %r4888, %r4887, 18;
	shf.r.wrap.b32 	%r4892, %r4887, %r4888, 18;
	mov.b64 	%rd5761, {%r4892, %r4891};
	xor.b64  	%rd5762, %rd5761, %rd5760;
	shf.l.wrap.b32 	%r4893, %r4887, %r4888, 23;
	shf.l.wrap.b32 	%r4894, %r4888, %r4887, 23;
	mov.b64 	%rd5763, {%r4894, %r4893};
	xor.b64  	%rd5764, %rd5762, %rd5763;
	xor.b64  	%rd5765, %rd5724, %rd5700;
	and.b64  	%rd5766, %rd5748, %rd5765;
	xor.b64  	%rd5767, %rd5766, %rd5700;
	add.s64 	%rd5768, %rd5676, %rd5454;
	add.s64 	%rd5769, %rd5768, %rd8778;
	add.s64 	%rd5770, %rd5769, %rd5767;
	add.s64 	%rd5771, %rd5770, %rd5764;
	add.s64 	%rd5772, %rd5771, %rd5687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4895,%dummy}, %rd5759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4896}, %rd5759;
	}
	shf.r.wrap.b32 	%r4897, %r4896, %r4895, 28;
	shf.r.wrap.b32 	%r4898, %r4895, %r4896, 28;
	mov.b64 	%rd5773, {%r4898, %r4897};
	shf.l.wrap.b32 	%r4899, %r4895, %r4896, 30;
	shf.l.wrap.b32 	%r4900, %r4896, %r4895, 30;
	mov.b64 	%rd5774, {%r4900, %r4899};
	xor.b64  	%rd5775, %rd5774, %rd5773;
	shf.l.wrap.b32 	%r4901, %r4895, %r4896, 25;
	shf.l.wrap.b32 	%r4902, %r4896, %r4895, 25;
	mov.b64 	%rd5776, {%r4902, %r4901};
	xor.b64  	%rd5777, %rd5775, %rd5776;
	xor.b64  	%rd5778, %rd5759, %rd5711;
	xor.b64  	%rd5779, %rd5759, %rd5735;
	and.b64  	%rd5780, %rd5779, %rd5778;
	xor.b64  	%rd5781, %rd5780, %rd5759;
	add.s64 	%rd5782, %rd5771, %rd5781;
	add.s64 	%rd5783, %rd5782, %rd5777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4903,%dummy}, %rd5772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4904}, %rd5772;
	}
	shf.r.wrap.b32 	%r4905, %r4904, %r4903, 14;
	shf.r.wrap.b32 	%r4906, %r4903, %r4904, 14;
	mov.b64 	%rd5784, {%r4906, %r4905};
	shf.r.wrap.b32 	%r4907, %r4904, %r4903, 18;
	shf.r.wrap.b32 	%r4908, %r4903, %r4904, 18;
	mov.b64 	%rd5785, {%r4908, %r4907};
	xor.b64  	%rd5786, %rd5785, %rd5784;
	shf.l.wrap.b32 	%r4909, %r4903, %r4904, 23;
	shf.l.wrap.b32 	%r4910, %r4904, %r4903, 23;
	mov.b64 	%rd5787, {%r4910, %r4909};
	xor.b64  	%rd5788, %rd5786, %rd5787;
	xor.b64  	%rd5789, %rd5748, %rd5724;
	and.b64  	%rd5790, %rd5772, %rd5789;
	xor.b64  	%rd5791, %rd5790, %rd5724;
	add.s64 	%rd5792, %rd5700, %rd5467;
	add.s64 	%rd5793, %rd5792, %rd8777;
	add.s64 	%rd5794, %rd5793, %rd5791;
	add.s64 	%rd5795, %rd5794, %rd5788;
	add.s64 	%rd5796, %rd5795, %rd5711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4911,%dummy}, %rd5783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4912}, %rd5783;
	}
	shf.r.wrap.b32 	%r4913, %r4912, %r4911, 28;
	shf.r.wrap.b32 	%r4914, %r4911, %r4912, 28;
	mov.b64 	%rd5797, {%r4914, %r4913};
	shf.l.wrap.b32 	%r4915, %r4911, %r4912, 30;
	shf.l.wrap.b32 	%r4916, %r4912, %r4911, 30;
	mov.b64 	%rd5798, {%r4916, %r4915};
	xor.b64  	%rd5799, %rd5798, %rd5797;
	shf.l.wrap.b32 	%r4917, %r4911, %r4912, 25;
	shf.l.wrap.b32 	%r4918, %r4912, %r4911, 25;
	mov.b64 	%rd5800, {%r4918, %r4917};
	xor.b64  	%rd5801, %rd5799, %rd5800;
	xor.b64  	%rd5802, %rd5783, %rd5735;
	xor.b64  	%rd5803, %rd5783, %rd5759;
	and.b64  	%rd5804, %rd5803, %rd5802;
	xor.b64  	%rd5805, %rd5804, %rd5783;
	add.s64 	%rd5806, %rd5795, %rd5805;
	add.s64 	%rd5807, %rd5806, %rd5801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4919,%dummy}, %rd5796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4920}, %rd5796;
	}
	shf.r.wrap.b32 	%r4921, %r4920, %r4919, 14;
	shf.r.wrap.b32 	%r4922, %r4919, %r4920, 14;
	mov.b64 	%rd5808, {%r4922, %r4921};
	shf.r.wrap.b32 	%r4923, %r4920, %r4919, 18;
	shf.r.wrap.b32 	%r4924, %r4919, %r4920, 18;
	mov.b64 	%rd5809, {%r4924, %r4923};
	xor.b64  	%rd5810, %rd5809, %rd5808;
	shf.l.wrap.b32 	%r4925, %r4919, %r4920, 23;
	shf.l.wrap.b32 	%r4926, %r4920, %r4919, 23;
	mov.b64 	%rd5811, {%r4926, %r4925};
	xor.b64  	%rd5812, %rd5810, %rd5811;
	xor.b64  	%rd5813, %rd5772, %rd5748;
	and.b64  	%rd5814, %rd5796, %rd5813;
	xor.b64  	%rd5815, %rd5814, %rd5748;
	add.s64 	%rd5816, %rd5724, %rd5480;
	add.s64 	%rd5817, %rd5816, %rd8776;
	add.s64 	%rd5818, %rd5817, %rd5815;
	add.s64 	%rd5819, %rd5818, %rd5812;
	add.s64 	%rd5820, %rd5819, %rd5735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4927,%dummy}, %rd5807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4928}, %rd5807;
	}
	shf.r.wrap.b32 	%r4929, %r4928, %r4927, 28;
	shf.r.wrap.b32 	%r4930, %r4927, %r4928, 28;
	mov.b64 	%rd5821, {%r4930, %r4929};
	shf.l.wrap.b32 	%r4931, %r4927, %r4928, 30;
	shf.l.wrap.b32 	%r4932, %r4928, %r4927, 30;
	mov.b64 	%rd5822, {%r4932, %r4931};
	xor.b64  	%rd5823, %rd5822, %rd5821;
	shf.l.wrap.b32 	%r4933, %r4927, %r4928, 25;
	shf.l.wrap.b32 	%r4934, %r4928, %r4927, 25;
	mov.b64 	%rd5824, {%r4934, %r4933};
	xor.b64  	%rd5825, %rd5823, %rd5824;
	xor.b64  	%rd5826, %rd5807, %rd5759;
	xor.b64  	%rd5827, %rd5807, %rd5783;
	and.b64  	%rd5828, %rd5827, %rd5826;
	xor.b64  	%rd5829, %rd5828, %rd5807;
	add.s64 	%rd5830, %rd5819, %rd5829;
	add.s64 	%rd5831, %rd5830, %rd5825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4935,%dummy}, %rd5820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4936}, %rd5820;
	}
	shf.r.wrap.b32 	%r4937, %r4936, %r4935, 14;
	shf.r.wrap.b32 	%r4938, %r4935, %r4936, 14;
	mov.b64 	%rd5832, {%r4938, %r4937};
	shf.r.wrap.b32 	%r4939, %r4936, %r4935, 18;
	shf.r.wrap.b32 	%r4940, %r4935, %r4936, 18;
	mov.b64 	%rd5833, {%r4940, %r4939};
	xor.b64  	%rd5834, %rd5833, %rd5832;
	shf.l.wrap.b32 	%r4941, %r4935, %r4936, 23;
	shf.l.wrap.b32 	%r4942, %r4936, %r4935, 23;
	mov.b64 	%rd5835, {%r4942, %r4941};
	xor.b64  	%rd5836, %rd5834, %rd5835;
	xor.b64  	%rd5837, %rd5796, %rd5772;
	and.b64  	%rd5838, %rd5820, %rd5837;
	xor.b64  	%rd5839, %rd5838, %rd5772;
	add.s64 	%rd5840, %rd5748, %rd5493;
	add.s64 	%rd5841, %rd5840, %rd8775;
	add.s64 	%rd5842, %rd5841, %rd5839;
	add.s64 	%rd5843, %rd5842, %rd5836;
	add.s64 	%rd5844, %rd5843, %rd5759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4943,%dummy}, %rd5831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4944}, %rd5831;
	}
	shf.r.wrap.b32 	%r4945, %r4944, %r4943, 28;
	shf.r.wrap.b32 	%r4946, %r4943, %r4944, 28;
	mov.b64 	%rd5845, {%r4946, %r4945};
	shf.l.wrap.b32 	%r4947, %r4943, %r4944, 30;
	shf.l.wrap.b32 	%r4948, %r4944, %r4943, 30;
	mov.b64 	%rd5846, {%r4948, %r4947};
	xor.b64  	%rd5847, %rd5846, %rd5845;
	shf.l.wrap.b32 	%r4949, %r4943, %r4944, 25;
	shf.l.wrap.b32 	%r4950, %r4944, %r4943, 25;
	mov.b64 	%rd5848, {%r4950, %r4949};
	xor.b64  	%rd5849, %rd5847, %rd5848;
	xor.b64  	%rd5850, %rd5831, %rd5783;
	xor.b64  	%rd5851, %rd5831, %rd5807;
	and.b64  	%rd5852, %rd5851, %rd5850;
	xor.b64  	%rd5853, %rd5852, %rd5831;
	add.s64 	%rd5854, %rd5843, %rd5853;
	add.s64 	%rd5855, %rd5854, %rd5849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4951,%dummy}, %rd5844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4952}, %rd5844;
	}
	shf.r.wrap.b32 	%r4953, %r4952, %r4951, 14;
	shf.r.wrap.b32 	%r4954, %r4951, %r4952, 14;
	mov.b64 	%rd5856, {%r4954, %r4953};
	shf.r.wrap.b32 	%r4955, %r4952, %r4951, 18;
	shf.r.wrap.b32 	%r4956, %r4951, %r4952, 18;
	mov.b64 	%rd5857, {%r4956, %r4955};
	xor.b64  	%rd5858, %rd5857, %rd5856;
	shf.l.wrap.b32 	%r4957, %r4951, %r4952, 23;
	shf.l.wrap.b32 	%r4958, %r4952, %r4951, 23;
	mov.b64 	%rd5859, {%r4958, %r4957};
	xor.b64  	%rd5860, %rd5858, %rd5859;
	xor.b64  	%rd5861, %rd5820, %rd5796;
	and.b64  	%rd5862, %rd5844, %rd5861;
	xor.b64  	%rd5863, %rd5862, %rd5796;
	add.s64 	%rd5864, %rd5772, %rd5506;
	add.s64 	%rd5865, %rd5864, %rd8774;
	add.s64 	%rd5866, %rd5865, %rd5863;
	add.s64 	%rd5867, %rd5866, %rd5860;
	add.s64 	%rd5868, %rd5867, %rd5783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4959,%dummy}, %rd5855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4960}, %rd5855;
	}
	shf.r.wrap.b32 	%r4961, %r4960, %r4959, 28;
	shf.r.wrap.b32 	%r4962, %r4959, %r4960, 28;
	mov.b64 	%rd5869, {%r4962, %r4961};
	shf.l.wrap.b32 	%r4963, %r4959, %r4960, 30;
	shf.l.wrap.b32 	%r4964, %r4960, %r4959, 30;
	mov.b64 	%rd5870, {%r4964, %r4963};
	xor.b64  	%rd5871, %rd5870, %rd5869;
	shf.l.wrap.b32 	%r4965, %r4959, %r4960, 25;
	shf.l.wrap.b32 	%r4966, %r4960, %r4959, 25;
	mov.b64 	%rd5872, {%r4966, %r4965};
	xor.b64  	%rd5873, %rd5871, %rd5872;
	xor.b64  	%rd5874, %rd5855, %rd5807;
	xor.b64  	%rd5875, %rd5855, %rd5831;
	and.b64  	%rd5876, %rd5875, %rd5874;
	xor.b64  	%rd5877, %rd5876, %rd5855;
	add.s64 	%rd5878, %rd5867, %rd5877;
	add.s64 	%rd5879, %rd5878, %rd5873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4967,%dummy}, %rd5868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4968}, %rd5868;
	}
	shf.r.wrap.b32 	%r4969, %r4968, %r4967, 14;
	shf.r.wrap.b32 	%r4970, %r4967, %r4968, 14;
	mov.b64 	%rd5880, {%r4970, %r4969};
	shf.r.wrap.b32 	%r4971, %r4968, %r4967, 18;
	shf.r.wrap.b32 	%r4972, %r4967, %r4968, 18;
	mov.b64 	%rd5881, {%r4972, %r4971};
	xor.b64  	%rd5882, %rd5881, %rd5880;
	shf.l.wrap.b32 	%r4973, %r4967, %r4968, 23;
	shf.l.wrap.b32 	%r4974, %r4968, %r4967, 23;
	mov.b64 	%rd5883, {%r4974, %r4973};
	xor.b64  	%rd5884, %rd5882, %rd5883;
	xor.b64  	%rd5885, %rd5844, %rd5820;
	and.b64  	%rd5886, %rd5868, %rd5885;
	xor.b64  	%rd5887, %rd5886, %rd5820;
	add.s64 	%rd5888, %rd5796, %rd5519;
	add.s64 	%rd5889, %rd5888, %rd8773;
	add.s64 	%rd5890, %rd5889, %rd5887;
	add.s64 	%rd5891, %rd5890, %rd5884;
	add.s64 	%rd5892, %rd5891, %rd5807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4975,%dummy}, %rd5879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4976}, %rd5879;
	}
	shf.r.wrap.b32 	%r4977, %r4976, %r4975, 28;
	shf.r.wrap.b32 	%r4978, %r4975, %r4976, 28;
	mov.b64 	%rd5893, {%r4978, %r4977};
	shf.l.wrap.b32 	%r4979, %r4975, %r4976, 30;
	shf.l.wrap.b32 	%r4980, %r4976, %r4975, 30;
	mov.b64 	%rd5894, {%r4980, %r4979};
	xor.b64  	%rd5895, %rd5894, %rd5893;
	shf.l.wrap.b32 	%r4981, %r4975, %r4976, 25;
	shf.l.wrap.b32 	%r4982, %r4976, %r4975, 25;
	mov.b64 	%rd5896, {%r4982, %r4981};
	xor.b64  	%rd5897, %rd5895, %rd5896;
	xor.b64  	%rd5898, %rd5879, %rd5831;
	xor.b64  	%rd5899, %rd5879, %rd5855;
	and.b64  	%rd5900, %rd5899, %rd5898;
	xor.b64  	%rd5901, %rd5900, %rd5879;
	add.s64 	%rd5902, %rd5891, %rd5901;
	add.s64 	%rd5903, %rd5902, %rd5897;
	add.s64 	%rd5904, %rd8844, %rd5903;
	st.local.u64 	[%rd9], %rd5904;
	add.s64 	%rd5905, %rd8843, %rd5879;
	st.local.u64 	[%rd10], %rd5905;
	add.s64 	%rd5906, %rd8842, %rd5855;
	st.local.u64 	[%rd10+8], %rd5906;
	add.s64 	%rd5907, %rd8841, %rd5831;
	st.local.u64 	[%rd10+16], %rd5907;
	add.s64 	%rd5908, %rd8840, %rd5892;
	st.local.u64 	[%rd10+24], %rd5908;
	add.s64 	%rd5909, %rd8839, %rd5868;
	st.local.u64 	[%rd10+32], %rd5909;
	add.s64 	%rd5910, %rd8838, %rd5844;
	st.local.u64 	[%rd10+40], %rd5910;
	add.s64 	%rd5911, %rd8837, %rd5820;
	st.local.u64 	[%rd10+48], %rd5911;
	mul.wide.s32 	%rd5912, %r12407, 64;
	add.s64 	%rd5913, %rd8772, %rd5912;
	st.global.u64 	[%rd5913], %rd5904;
	st.global.u64 	[%rd5913+8], %rd5905;
	st.global.u64 	[%rd5913+16], %rd5906;
	st.global.u64 	[%rd5913+24], %rd5907;
	st.global.u64 	[%rd5913+32], %rd5908;
	st.global.u64 	[%rd5913+40], %rd5909;
	st.global.u64 	[%rd5913+48], %rd5910;
	st.global.u64 	[%rd5913+56], %rd5911;

BB3_326:
	ret;
}

	// .globl	m11300_loop
.entry m11300_loop(
	.param .u64 .ptr .global .align 4 m11300_loop_param_0,
	.param .u64 .ptr .global .align 4 m11300_loop_param_1,
	.param .u64 .ptr .global .align 4 m11300_loop_param_2,
	.param .u64 .ptr .global .align 4 m11300_loop_param_3,
	.param .u64 .ptr .global .align 8 m11300_loop_param_4,
	.param .u64 .ptr .global .align 1 m11300_loop_param_5,
	.param .u64 .ptr .global .align 4 m11300_loop_param_6,
	.param .u64 .ptr .global .align 4 m11300_loop_param_7,
	.param .u64 .ptr .global .align 4 m11300_loop_param_8,
	.param .u64 .ptr .global .align 4 m11300_loop_param_9,
	.param .u64 .ptr .global .align 4 m11300_loop_param_10,
	.param .u64 .ptr .global .align 4 m11300_loop_param_11,
	.param .u64 .ptr .global .align 4 m11300_loop_param_12,
	.param .u64 .ptr .global .align 4 m11300_loop_param_13,
	.param .u64 .ptr .global .align 4 m11300_loop_param_14,
	.param .u64 .ptr .global .align 4 m11300_loop_param_15,
	.param .u64 .ptr .global .align 4 m11300_loop_param_16,
	.param .u64 .ptr .global .align 4 m11300_loop_param_17,
	.param .u64 .ptr .global .align 4 m11300_loop_param_18,
	.param .u64 .ptr .global .align 4 m11300_loop_param_19,
	.param .u64 .ptr .global .align 4 m11300_loop_param_20,
	.param .u64 .ptr .global .align 4 m11300_loop_param_21,
	.param .u64 .ptr .global .align 4 m11300_loop_param_22,
	.param .u64 .ptr .global .align 4 m11300_loop_param_23,
	.param .u32 m11300_loop_param_24,
	.param .u32 m11300_loop_param_25,
	.param .u32 m11300_loop_param_26,
	.param .u32 m11300_loop_param_27,
	.param .u32 m11300_loop_param_28,
	.param .u32 m11300_loop_param_29,
	.param .u32 m11300_loop_param_30,
	.param .u32 m11300_loop_param_31,
	.param .u32 m11300_loop_param_32,
	.param .u32 m11300_loop_param_33,
	.param .u64 m11300_loop_param_34
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<1928>;
	.reg .b64 	%rd<2861>;


	ld.param.u64 	%rd128, [m11300_loop_param_4];
	ld.param.u32 	%r4, [m11300_loop_param_29];
	ld.param.u64 	%rd129, [m11300_loop_param_34];
	mov.b32	%r5, %envreg3;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mad.lo.s32 	%r8, %r6, %r7, %r5;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r1, %r8, %r9;
	cvt.s64.s32	%rd130, %r1;
	setp.ge.u64	%p1, %rd130, %rd129;
	@%p1 bra 	BB4_5;

	mul.wide.s32 	%rd131, %r1, 64;
	add.s64 	%rd1, %rd128, %rd131;
	ld.global.u64 	%rd2860, [%rd1];
	ld.global.u64 	%rd2859, [%rd1+8];
	ld.global.u64 	%rd2858, [%rd1+16];
	ld.global.u64 	%rd2857, [%rd1+24];
	ld.global.u64 	%rd2856, [%rd1+32];
	ld.global.u64 	%rd2855, [%rd1+40];
	ld.global.u64 	%rd2854, [%rd1+48];
	ld.global.u64 	%rd2853, [%rd1+56];
	setp.eq.s32	%p2, %r4, 0;
	@%p2 bra 	BB4_4;

	ld.const.u64 	%rd17, [k_sha512];
	mov.u64 	%rd132, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11,%dummy}, %rd132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12}, %rd132;
	}
	shf.r.wrap.b32 	%r13, %r12, %r11, 18;
	shf.r.wrap.b32 	%r14, %r11, %r12, 18;
	mov.b64 	%rd133, {%r14, %r13};
	shf.r.wrap.b32 	%r15, %r12, %r11, 14;
	shf.r.wrap.b32 	%r16, %r11, %r12, 14;
	mov.b64 	%rd134, {%r16, %r15};
	xor.b64  	%rd135, %rd133, %rd134;
	shf.l.wrap.b32 	%r17, %r11, %r12, 23;
	shf.l.wrap.b32 	%r18, %r12, %r11, 23;
	mov.b64 	%rd136, {%r18, %r17};
	xor.b64  	%rd18, %rd135, %rd136;
	mov.u64 	%rd137, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19}, %rd137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r20,%dummy}, %rd137;
	}
	shf.l.wrap.b32 	%r21, %r20, %r19, 30;
	shf.l.wrap.b32 	%r22, %r19, %r20, 30;
	mov.b64 	%rd138, {%r22, %r21};
	shf.r.wrap.b32 	%r23, %r19, %r20, 28;
	shf.r.wrap.b32 	%r24, %r20, %r19, 28;
	mov.b64 	%rd139, {%r24, %r23};
	xor.b64  	%rd140, %rd138, %rd139;
	shf.l.wrap.b32 	%r25, %r20, %r19, 25;
	shf.l.wrap.b32 	%r26, %r19, %r20, 25;
	mov.b64 	%rd141, {%r26, %r25};
	xor.b64  	%rd19, %rd140, %rd141;
	ld.const.u64 	%rd20, [k_sha512+8];
	ld.const.u64 	%rd21, [k_sha512+16];
	ld.const.u64 	%rd22, [k_sha512+24];
	ld.const.u64 	%rd23, [k_sha512+32];
	ld.const.u64 	%rd24, [k_sha512+40];
	ld.const.u64 	%rd25, [k_sha512+48];
	ld.const.u64 	%rd26, [k_sha512+56];
	ld.const.u64 	%rd27, [k_sha512+64];
	ld.const.u64 	%rd28, [k_sha512+72];
	ld.const.u64 	%rd29, [k_sha512+80];
	ld.const.u64 	%rd30, [k_sha512+88];
	ld.const.u64 	%rd31, [k_sha512+96];
	ld.const.u64 	%rd32, [k_sha512+104];
	ld.const.u64 	%rd33, [k_sha512+112];
	ld.const.u64 	%rd34, [k_sha512+120];
	ld.const.u64 	%rd35, [k_sha512+128];
	ld.const.u64 	%rd36, [k_sha512+136];
	ld.const.u64 	%rd37, [k_sha512+144];
	ld.const.u64 	%rd38, [k_sha512+152];
	ld.const.u64 	%rd39, [k_sha512+160];
	ld.const.u64 	%rd40, [k_sha512+168];
	ld.const.u64 	%rd41, [k_sha512+176];
	ld.const.u64 	%rd42, [k_sha512+184];
	ld.const.u64 	%rd43, [k_sha512+192];
	ld.const.u64 	%rd44, [k_sha512+200];
	ld.const.u64 	%rd45, [k_sha512+208];
	ld.const.u64 	%rd46, [k_sha512+216];
	ld.const.u64 	%rd47, [k_sha512+224];
	ld.const.u64 	%rd48, [k_sha512+232];
	ld.const.u64 	%rd49, [k_sha512+240];
	ld.const.u64 	%rd50, [k_sha512+248];
	ld.const.u64 	%rd51, [k_sha512+256];
	ld.const.u64 	%rd52, [k_sha512+264];
	ld.const.u64 	%rd53, [k_sha512+272];
	ld.const.u64 	%rd54, [k_sha512+280];
	ld.const.u64 	%rd55, [k_sha512+288];
	ld.const.u64 	%rd56, [k_sha512+296];
	ld.const.u64 	%rd57, [k_sha512+304];
	ld.const.u64 	%rd58, [k_sha512+312];
	ld.const.u64 	%rd59, [k_sha512+320];
	ld.const.u64 	%rd60, [k_sha512+328];
	ld.const.u64 	%rd61, [k_sha512+336];
	ld.const.u64 	%rd62, [k_sha512+344];
	ld.const.u64 	%rd63, [k_sha512+352];
	ld.const.u64 	%rd64, [k_sha512+360];
	ld.const.u64 	%rd65, [k_sha512+368];
	ld.const.u64 	%rd66, [k_sha512+376];
	ld.const.u64 	%rd67, [k_sha512+384];
	ld.const.u64 	%rd68, [k_sha512+392];
	ld.const.u64 	%rd69, [k_sha512+400];
	ld.const.u64 	%rd70, [k_sha512+408];
	ld.const.u64 	%rd71, [k_sha512+416];
	ld.const.u64 	%rd72, [k_sha512+424];
	ld.const.u64 	%rd73, [k_sha512+432];
	ld.const.u64 	%rd74, [k_sha512+440];
	ld.const.u64 	%rd75, [k_sha512+448];
	ld.const.u64 	%rd76, [k_sha512+456];
	ld.const.u64 	%rd77, [k_sha512+464];
	ld.const.u64 	%rd78, [k_sha512+472];
	ld.const.u64 	%rd79, [k_sha512+480];
	ld.const.u64 	%rd80, [k_sha512+488];
	ld.const.u64 	%rd81, [k_sha512+496];
	ld.const.u64 	%rd82, [k_sha512+504];
	ld.const.u64 	%rd83, [k_sha512+512];
	ld.const.u64 	%rd84, [k_sha512+520];
	ld.const.u64 	%rd85, [k_sha512+528];
	ld.const.u64 	%rd86, [k_sha512+536];
	ld.const.u64 	%rd87, [k_sha512+544];
	ld.const.u64 	%rd88, [k_sha512+552];
	ld.const.u64 	%rd89, [k_sha512+560];
	ld.const.u64 	%rd90, [k_sha512+568];
	ld.const.u64 	%rd91, [k_sha512+576];
	ld.const.u64 	%rd92, [k_sha512+584];
	ld.const.u64 	%rd93, [k_sha512+592];
	ld.const.u64 	%rd94, [k_sha512+600];
	ld.const.u64 	%rd95, [k_sha512+608];
	ld.const.u64 	%rd96, [k_sha512+616];
	ld.const.u64 	%rd97, [k_sha512+624];
	ld.const.u64 	%rd98, [k_sha512+632];
	mov.u64 	%rd142, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r27}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r28,%dummy}, %rd142;
	}
	shf.l.wrap.b32 	%r29, %r28, %r27, 3;
	shf.l.wrap.b32 	%r30, %r27, %r28, 3;
	mov.b64 	%rd143, {%r30, %r29};
	shf.r.wrap.b32 	%r31, %r27, %r28, 19;
	shf.r.wrap.b32 	%r32, %r28, %r27, 19;
	mov.b64 	%rd144, {%r32, %r31};
	xor.b64  	%rd99, %rd144, %rd143;
	mov.u64 	%rd145, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r33,%dummy}, %rd145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r34}, %rd145;
	}
	shf.r.wrap.b32 	%r35, %r34, %r33, 19;
	shf.r.wrap.b32 	%r36, %r33, %r34, 19;
	mov.b64 	%rd146, {%r36, %r35};
	shf.l.wrap.b32 	%r37, %r33, %r34, 3;
	shf.l.wrap.b32 	%r38, %r34, %r33, 3;
	mov.b64 	%rd147, {%r38, %r37};
	xor.b64  	%rd148, %rd146, %rd147;
	xor.b64  	%rd100, %rd148, 8;
	mov.u64 	%rd149, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r40}, %rd149;
	}
	shf.r.wrap.b32 	%r41, %r40, %r39, 1;
	shf.r.wrap.b32 	%r42, %r39, %r40, 1;
	mov.b64 	%rd150, {%r42, %r41};
	shf.r.wrap.b32 	%r43, %r40, %r39, 8;
	shf.r.wrap.b32 	%r44, %r39, %r40, 8;
	mov.b64 	%rd151, {%r44, %r43};
	xor.b64  	%rd152, %rd150, %rd151;
	xor.b64  	%rd101, %rd152, 72057594037927936;
	shf.r.wrap.b32 	%r45, %r27, %r28, 8;
	shf.r.wrap.b32 	%r46, %r28, %r27, 8;
	mov.b64 	%rd153, {%r46, %r45};
	shf.r.wrap.b32 	%r47, %r27, %r28, 1;
	shf.r.wrap.b32 	%r48, %r28, %r27, 1;
	mov.b64 	%rd154, {%r48, %r47};
	xor.b64  	%rd102, %rd154, %rd153;
	shf.r.wrap.b32 	%r49, %r34, %r33, 1;
	shf.r.wrap.b32 	%r50, %r33, %r34, 1;
	mov.b64 	%rd155, {%r50, %r49};
	shf.r.wrap.b32 	%r51, %r34, %r33, 8;
	shf.r.wrap.b32 	%r52, %r33, %r34, 8;
	mov.b64 	%rd156, {%r52, %r51};
	xor.b64  	%rd157, %rd155, %rd156;
	xor.b64  	%rd103, %rd157, 4;
	mov.u32 	%r1927, 0;

BB4_3:
	shr.u64 	%rd158, %rd2860, 32;
	shr.u64 	%rd159, %rd2859, 32;
	shr.u64 	%rd160, %rd2858, 32;
	shr.u64 	%rd161, %rd2857, 32;
	shr.u64 	%rd162, %rd2856, 32;
	shr.u64 	%rd163, %rd2855, 32;
	shr.u64 	%rd164, %rd2854, 32;
	shr.u64 	%rd165, %rd2853, 32;
	bfi.b64 	%rd166, %rd158, %rd2860, 32, 32;
	bfi.b64 	%rd167, %rd159, %rd2859, 32, 32;
	bfi.b64 	%rd168, %rd160, %rd2858, 32, 32;
	bfi.b64 	%rd169, %rd161, %rd2857, 32, 32;
	bfi.b64 	%rd170, %rd162, %rd2856, 32, 32;
	bfi.b64 	%rd171, %rd163, %rd2855, 32, 32;
	bfi.b64 	%rd172, %rd164, %rd2854, 32, 32;
	bfi.b64 	%rd173, %rd165, %rd2853, 32, 32;
	add.s64 	%rd174, %rd166, %rd17;
	add.s64 	%rd175, %rd174, %rd18;
	add.s64 	%rd176, %rd175, %rd19;
	add.s64 	%rd177, %rd175, 2357225248857953701;
	add.s64 	%rd178, %rd176, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r53,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r54}, %rd177;
	}
	shf.r.wrap.b32 	%r55, %r54, %r53, 14;
	shf.r.wrap.b32 	%r56, %r53, %r54, 14;
	mov.b64 	%rd179, {%r56, %r55};
	shf.r.wrap.b32 	%r57, %r54, %r53, 18;
	shf.r.wrap.b32 	%r58, %r53, %r54, 18;
	mov.b64 	%rd180, {%r58, %r57};
	xor.b64  	%rd181, %rd180, %rd179;
	shf.l.wrap.b32 	%r59, %r53, %r54, 23;
	shf.l.wrap.b32 	%r60, %r54, %r53, 23;
	mov.b64 	%rd182, {%r60, %r59};
	xor.b64  	%rd183, %rd181, %rd182;
	and.b64  	%rd184, %rd177, -3887949035690463538;
	xor.b64  	%rd185, %rd184, -7276294671716946913;
	add.s64 	%rd186, %rd167, %rd20;
	add.s64 	%rd187, %rd186, %rd185;
	add.s64 	%rd188, %rd187, %rd183;
	xor.b64  	%rd189, %rd178, -4942790177534073029;
	xor.b64  	%rd190, %rd178, 7640891576956012808;
	and.b64  	%rd191, %rd190, %rd189;
	xor.b64  	%rd192, %rd191, %rd178;
	add.s64 	%rd193, %rd188, %rd192;
	add.s64 	%rd194, %rd188, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r61,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r62}, %rd178;
	}
	shf.r.wrap.b32 	%r63, %r62, %r61, 28;
	shf.r.wrap.b32 	%r64, %r61, %r62, 28;
	mov.b64 	%rd195, {%r64, %r63};
	shf.l.wrap.b32 	%r65, %r61, %r62, 30;
	shf.l.wrap.b32 	%r66, %r62, %r61, 30;
	mov.b64 	%rd196, {%r66, %r65};
	xor.b64  	%rd197, %rd196, %rd195;
	shf.l.wrap.b32 	%r67, %r61, %r62, 25;
	shf.l.wrap.b32 	%r68, %r62, %r61, 25;
	mov.b64 	%rd198, {%r68, %r67};
	xor.b64  	%rd199, %rd197, %rd198;
	add.s64 	%rd200, %rd193, %rd199;
	add.s64 	%rd201, %rd200, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd194;
	}
	shf.r.wrap.b32 	%r71, %r70, %r69, 14;
	shf.r.wrap.b32 	%r72, %r69, %r70, 14;
	mov.b64 	%rd202, {%r72, %r71};
	shf.r.wrap.b32 	%r73, %r70, %r69, 18;
	shf.r.wrap.b32 	%r74, %r69, %r70, 18;
	mov.b64 	%rd203, {%r74, %r73};
	xor.b64  	%rd204, %rd203, %rd202;
	shf.l.wrap.b32 	%r75, %r69, %r70, 23;
	shf.l.wrap.b32 	%r76, %r70, %r69, 23;
	mov.b64 	%rd205, {%r76, %r75};
	xor.b64  	%rd206, %rd204, %rd205;
	xor.b64  	%rd207, %rd177, 5840696475078001361;
	and.b64  	%rd208, %rd194, %rd207;
	xor.b64  	%rd209, %rd208, 5840696475078001361;
	add.s64 	%rd210, %rd168, %rd21;
	add.s64 	%rd211, %rd210, %rd209;
	add.s64 	%rd212, %rd211, %rd206;
	xor.b64  	%rd213, %rd201, 7640891576956012808;
	xor.b64  	%rd214, %rd201, %rd178;
	and.b64  	%rd215, %rd214, %rd213;
	xor.b64  	%rd216, %rd215, %rd201;
	add.s64 	%rd217, %rd212, %rd216;
	add.s64 	%rd218, %rd212, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r77,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r78}, %rd201;
	}
	shf.r.wrap.b32 	%r79, %r78, %r77, 28;
	shf.r.wrap.b32 	%r80, %r77, %r78, 28;
	mov.b64 	%rd219, {%r80, %r79};
	shf.l.wrap.b32 	%r81, %r77, %r78, 30;
	shf.l.wrap.b32 	%r82, %r78, %r77, 30;
	mov.b64 	%rd220, {%r82, %r81};
	xor.b64  	%rd221, %rd220, %rd219;
	shf.l.wrap.b32 	%r83, %r77, %r78, 25;
	shf.l.wrap.b32 	%r84, %r78, %r77, 25;
	mov.b64 	%rd222, {%r84, %r83};
	xor.b64  	%rd223, %rd221, %rd222;
	add.s64 	%rd224, %rd217, %rd223;
	add.s64 	%rd225, %rd224, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r85,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r86}, %rd218;
	}
	shf.r.wrap.b32 	%r87, %r86, %r85, 14;
	shf.r.wrap.b32 	%r88, %r85, %r86, 14;
	mov.b64 	%rd226, {%r88, %r87};
	shf.r.wrap.b32 	%r89, %r86, %r85, 18;
	shf.r.wrap.b32 	%r90, %r85, %r86, 18;
	mov.b64 	%rd227, {%r90, %r89};
	xor.b64  	%rd228, %rd227, %rd226;
	shf.l.wrap.b32 	%r91, %r85, %r86, 23;
	shf.l.wrap.b32 	%r92, %r86, %r85, 23;
	mov.b64 	%rd229, {%r92, %r91};
	xor.b64  	%rd230, %rd228, %rd229;
	xor.b64  	%rd231, %rd194, %rd177;
	and.b64  	%rd232, %rd218, %rd231;
	xor.b64  	%rd233, %rd232, %rd177;
	add.s64 	%rd234, %rd169, %rd22;
	add.s64 	%rd235, %rd234, %rd233;
	add.s64 	%rd236, %rd235, %rd230;
	xor.b64  	%rd237, %rd225, %rd178;
	xor.b64  	%rd238, %rd225, %rd201;
	and.b64  	%rd239, %rd238, %rd237;
	xor.b64  	%rd240, %rd239, %rd225;
	add.s64 	%rd241, %rd236, %rd240;
	add.s64 	%rd242, %rd236, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r93,%dummy}, %rd225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r94}, %rd225;
	}
	shf.r.wrap.b32 	%r95, %r94, %r93, 28;
	shf.r.wrap.b32 	%r96, %r93, %r94, 28;
	mov.b64 	%rd243, {%r96, %r95};
	shf.l.wrap.b32 	%r97, %r93, %r94, 30;
	shf.l.wrap.b32 	%r98, %r94, %r93, 30;
	mov.b64 	%rd244, {%r98, %r97};
	xor.b64  	%rd245, %rd244, %rd243;
	shf.l.wrap.b32 	%r99, %r93, %r94, 25;
	shf.l.wrap.b32 	%r100, %r94, %r93, 25;
	mov.b64 	%rd246, {%r100, %r99};
	xor.b64  	%rd247, %rd245, %rd246;
	add.s64 	%rd248, %rd241, %rd247;
	add.s64 	%rd249, %rd248, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd242;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 14;
	shf.r.wrap.b32 	%r104, %r101, %r102, 14;
	mov.b64 	%rd250, {%r104, %r103};
	shf.r.wrap.b32 	%r105, %r102, %r101, 18;
	shf.r.wrap.b32 	%r106, %r101, %r102, 18;
	mov.b64 	%rd251, {%r106, %r105};
	xor.b64  	%rd252, %rd251, %rd250;
	shf.l.wrap.b32 	%r107, %r101, %r102, 23;
	shf.l.wrap.b32 	%r108, %r102, %r101, 23;
	mov.b64 	%rd253, {%r108, %r107};
	xor.b64  	%rd254, %rd252, %rd253;
	xor.b64  	%rd255, %rd218, %rd194;
	and.b64  	%rd256, %rd242, %rd255;
	xor.b64  	%rd257, %rd256, %rd194;
	add.s64 	%rd258, %rd177, %rd170;
	add.s64 	%rd259, %rd258, %rd23;
	add.s64 	%rd260, %rd259, %rd257;
	add.s64 	%rd261, %rd260, %rd254;
	add.s64 	%rd262, %rd261, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r109,%dummy}, %rd249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r110}, %rd249;
	}
	shf.r.wrap.b32 	%r111, %r110, %r109, 28;
	shf.r.wrap.b32 	%r112, %r109, %r110, 28;
	mov.b64 	%rd263, {%r112, %r111};
	shf.l.wrap.b32 	%r113, %r109, %r110, 30;
	shf.l.wrap.b32 	%r114, %r110, %r109, 30;
	mov.b64 	%rd264, {%r114, %r113};
	xor.b64  	%rd265, %rd264, %rd263;
	shf.l.wrap.b32 	%r115, %r109, %r110, 25;
	shf.l.wrap.b32 	%r116, %r110, %r109, 25;
	mov.b64 	%rd266, {%r116, %r115};
	xor.b64  	%rd267, %rd265, %rd266;
	xor.b64  	%rd268, %rd249, %rd201;
	xor.b64  	%rd269, %rd249, %rd225;
	and.b64  	%rd270, %rd269, %rd268;
	xor.b64  	%rd271, %rd270, %rd249;
	add.s64 	%rd272, %rd261, %rd271;
	add.s64 	%rd273, %rd272, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd262;
	}
	shf.r.wrap.b32 	%r119, %r118, %r117, 14;
	shf.r.wrap.b32 	%r120, %r117, %r118, 14;
	mov.b64 	%rd274, {%r120, %r119};
	shf.r.wrap.b32 	%r121, %r118, %r117, 18;
	shf.r.wrap.b32 	%r122, %r117, %r118, 18;
	mov.b64 	%rd275, {%r122, %r121};
	xor.b64  	%rd276, %rd275, %rd274;
	shf.l.wrap.b32 	%r123, %r117, %r118, 23;
	shf.l.wrap.b32 	%r124, %r118, %r117, 23;
	mov.b64 	%rd277, {%r124, %r123};
	xor.b64  	%rd278, %rd276, %rd277;
	xor.b64  	%rd279, %rd242, %rd218;
	and.b64  	%rd280, %rd262, %rd279;
	xor.b64  	%rd281, %rd280, %rd218;
	add.s64 	%rd282, %rd194, %rd171;
	add.s64 	%rd283, %rd282, %rd24;
	add.s64 	%rd284, %rd283, %rd281;
	add.s64 	%rd285, %rd284, %rd278;
	add.s64 	%rd286, %rd285, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r126}, %rd273;
	}
	shf.r.wrap.b32 	%r127, %r126, %r125, 28;
	shf.r.wrap.b32 	%r128, %r125, %r126, 28;
	mov.b64 	%rd287, {%r128, %r127};
	shf.l.wrap.b32 	%r129, %r125, %r126, 30;
	shf.l.wrap.b32 	%r130, %r126, %r125, 30;
	mov.b64 	%rd288, {%r130, %r129};
	xor.b64  	%rd289, %rd288, %rd287;
	shf.l.wrap.b32 	%r131, %r125, %r126, 25;
	shf.l.wrap.b32 	%r132, %r126, %r125, 25;
	mov.b64 	%rd290, {%r132, %r131};
	xor.b64  	%rd291, %rd289, %rd290;
	xor.b64  	%rd292, %rd273, %rd225;
	xor.b64  	%rd293, %rd273, %rd249;
	and.b64  	%rd294, %rd293, %rd292;
	xor.b64  	%rd295, %rd294, %rd273;
	add.s64 	%rd296, %rd285, %rd295;
	add.s64 	%rd297, %rd296, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r133,%dummy}, %rd286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r134}, %rd286;
	}
	shf.r.wrap.b32 	%r135, %r134, %r133, 14;
	shf.r.wrap.b32 	%r136, %r133, %r134, 14;
	mov.b64 	%rd298, {%r136, %r135};
	shf.r.wrap.b32 	%r137, %r134, %r133, 18;
	shf.r.wrap.b32 	%r138, %r133, %r134, 18;
	mov.b64 	%rd299, {%r138, %r137};
	xor.b64  	%rd300, %rd299, %rd298;
	shf.l.wrap.b32 	%r139, %r133, %r134, 23;
	shf.l.wrap.b32 	%r140, %r134, %r133, 23;
	mov.b64 	%rd301, {%r140, %r139};
	xor.b64  	%rd302, %rd300, %rd301;
	xor.b64  	%rd303, %rd262, %rd242;
	and.b64  	%rd304, %rd286, %rd303;
	xor.b64  	%rd305, %rd304, %rd242;
	add.s64 	%rd306, %rd218, %rd172;
	add.s64 	%rd307, %rd306, %rd25;
	add.s64 	%rd308, %rd307, %rd305;
	add.s64 	%rd309, %rd308, %rd302;
	add.s64 	%rd310, %rd309, %rd225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r142}, %rd297;
	}
	shf.r.wrap.b32 	%r143, %r142, %r141, 28;
	shf.r.wrap.b32 	%r144, %r141, %r142, 28;
	mov.b64 	%rd311, {%r144, %r143};
	shf.l.wrap.b32 	%r145, %r141, %r142, 30;
	shf.l.wrap.b32 	%r146, %r142, %r141, 30;
	mov.b64 	%rd312, {%r146, %r145};
	xor.b64  	%rd313, %rd312, %rd311;
	shf.l.wrap.b32 	%r147, %r141, %r142, 25;
	shf.l.wrap.b32 	%r148, %r142, %r141, 25;
	mov.b64 	%rd314, {%r148, %r147};
	xor.b64  	%rd315, %rd313, %rd314;
	xor.b64  	%rd316, %rd297, %rd249;
	xor.b64  	%rd317, %rd297, %rd273;
	and.b64  	%rd318, %rd317, %rd316;
	xor.b64  	%rd319, %rd318, %rd297;
	add.s64 	%rd320, %rd309, %rd319;
	add.s64 	%rd321, %rd320, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r150}, %rd310;
	}
	shf.r.wrap.b32 	%r151, %r150, %r149, 14;
	shf.r.wrap.b32 	%r152, %r149, %r150, 14;
	mov.b64 	%rd322, {%r152, %r151};
	shf.r.wrap.b32 	%r153, %r150, %r149, 18;
	shf.r.wrap.b32 	%r154, %r149, %r150, 18;
	mov.b64 	%rd323, {%r154, %r153};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r155, %r149, %r150, 23;
	shf.l.wrap.b32 	%r156, %r150, %r149, 23;
	mov.b64 	%rd325, {%r156, %r155};
	xor.b64  	%rd326, %rd324, %rd325;
	xor.b64  	%rd327, %rd286, %rd262;
	and.b64  	%rd328, %rd310, %rd327;
	xor.b64  	%rd329, %rd328, %rd262;
	add.s64 	%rd330, %rd242, %rd173;
	add.s64 	%rd331, %rd330, %rd26;
	add.s64 	%rd332, %rd331, %rd329;
	add.s64 	%rd333, %rd332, %rd326;
	add.s64 	%rd334, %rd333, %rd249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r158}, %rd321;
	}
	shf.r.wrap.b32 	%r159, %r158, %r157, 28;
	shf.r.wrap.b32 	%r160, %r157, %r158, 28;
	mov.b64 	%rd335, {%r160, %r159};
	shf.l.wrap.b32 	%r161, %r157, %r158, 30;
	shf.l.wrap.b32 	%r162, %r158, %r157, 30;
	mov.b64 	%rd336, {%r162, %r161};
	xor.b64  	%rd337, %rd336, %rd335;
	shf.l.wrap.b32 	%r163, %r157, %r158, 25;
	shf.l.wrap.b32 	%r164, %r158, %r157, 25;
	mov.b64 	%rd338, {%r164, %r163};
	xor.b64  	%rd339, %rd337, %rd338;
	xor.b64  	%rd340, %rd321, %rd273;
	xor.b64  	%rd341, %rd321, %rd297;
	and.b64  	%rd342, %rd341, %rd340;
	xor.b64  	%rd343, %rd342, %rd321;
	add.s64 	%rd344, %rd333, %rd343;
	add.s64 	%rd345, %rd344, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r165,%dummy}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r166}, %rd334;
	}
	shf.r.wrap.b32 	%r167, %r166, %r165, 14;
	shf.r.wrap.b32 	%r168, %r165, %r166, 14;
	mov.b64 	%rd346, {%r168, %r167};
	shf.r.wrap.b32 	%r169, %r166, %r165, 18;
	shf.r.wrap.b32 	%r170, %r165, %r166, 18;
	mov.b64 	%rd347, {%r170, %r169};
	xor.b64  	%rd348, %rd347, %rd346;
	shf.l.wrap.b32 	%r171, %r165, %r166, 23;
	shf.l.wrap.b32 	%r172, %r166, %r165, 23;
	mov.b64 	%rd349, {%r172, %r171};
	xor.b64  	%rd350, %rd348, %rd349;
	xor.b64  	%rd351, %rd310, %rd286;
	and.b64  	%rd352, %rd334, %rd351;
	xor.b64  	%rd353, %rd352, %rd286;
	xor.b64  	%rd354, %rd262, -9223372036854775808;
	add.s64 	%rd355, %rd354, %rd27;
	add.s64 	%rd356, %rd355, %rd353;
	add.s64 	%rd357, %rd356, %rd350;
	add.s64 	%rd358, %rd357, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd345;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 28;
	shf.r.wrap.b32 	%r176, %r173, %r174, 28;
	mov.b64 	%rd359, {%r176, %r175};
	shf.l.wrap.b32 	%r177, %r173, %r174, 30;
	shf.l.wrap.b32 	%r178, %r174, %r173, 30;
	mov.b64 	%rd360, {%r178, %r177};
	xor.b64  	%rd361, %rd360, %rd359;
	shf.l.wrap.b32 	%r179, %r173, %r174, 25;
	shf.l.wrap.b32 	%r180, %r174, %r173, 25;
	mov.b64 	%rd362, {%r180, %r179};
	xor.b64  	%rd363, %rd361, %rd362;
	xor.b64  	%rd364, %rd345, %rd297;
	xor.b64  	%rd365, %rd345, %rd321;
	and.b64  	%rd366, %rd365, %rd364;
	xor.b64  	%rd367, %rd366, %rd345;
	add.s64 	%rd368, %rd357, %rd367;
	add.s64 	%rd369, %rd368, %rd363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd358;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 14;
	shf.r.wrap.b32 	%r184, %r181, %r182, 14;
	mov.b64 	%rd370, {%r184, %r183};
	shf.r.wrap.b32 	%r185, %r182, %r181, 18;
	shf.r.wrap.b32 	%r186, %r181, %r182, 18;
	mov.b64 	%rd371, {%r186, %r185};
	xor.b64  	%rd372, %rd371, %rd370;
	shf.l.wrap.b32 	%r187, %r181, %r182, 23;
	shf.l.wrap.b32 	%r188, %r182, %r181, 23;
	mov.b64 	%rd373, {%r188, %r187};
	xor.b64  	%rd374, %rd372, %rd373;
	xor.b64  	%rd375, %rd334, %rd310;
	and.b64  	%rd376, %rd358, %rd375;
	xor.b64  	%rd377, %rd376, %rd310;
	add.s64 	%rd378, %rd28, %rd286;
	add.s64 	%rd379, %rd378, %rd377;
	add.s64 	%rd380, %rd379, %rd374;
	add.s64 	%rd381, %rd380, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r189,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd369;
	}
	shf.r.wrap.b32 	%r191, %r190, %r189, 28;
	shf.r.wrap.b32 	%r192, %r189, %r190, 28;
	mov.b64 	%rd382, {%r192, %r191};
	shf.l.wrap.b32 	%r193, %r189, %r190, 30;
	shf.l.wrap.b32 	%r194, %r190, %r189, 30;
	mov.b64 	%rd383, {%r194, %r193};
	xor.b64  	%rd384, %rd383, %rd382;
	shf.l.wrap.b32 	%r195, %r189, %r190, 25;
	shf.l.wrap.b32 	%r196, %r190, %r189, 25;
	mov.b64 	%rd385, {%r196, %r195};
	xor.b64  	%rd386, %rd384, %rd385;
	xor.b64  	%rd387, %rd369, %rd321;
	xor.b64  	%rd388, %rd369, %rd345;
	and.b64  	%rd389, %rd388, %rd387;
	xor.b64  	%rd390, %rd389, %rd369;
	add.s64 	%rd391, %rd380, %rd390;
	add.s64 	%rd392, %rd391, %rd386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r197,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd381;
	}
	shf.r.wrap.b32 	%r199, %r198, %r197, 14;
	shf.r.wrap.b32 	%r200, %r197, %r198, 14;
	mov.b64 	%rd393, {%r200, %r199};
	shf.r.wrap.b32 	%r201, %r198, %r197, 18;
	shf.r.wrap.b32 	%r202, %r197, %r198, 18;
	mov.b64 	%rd394, {%r202, %r201};
	xor.b64  	%rd395, %rd394, %rd393;
	shf.l.wrap.b32 	%r203, %r197, %r198, 23;
	shf.l.wrap.b32 	%r204, %r198, %r197, 23;
	mov.b64 	%rd396, {%r204, %r203};
	xor.b64  	%rd397, %rd395, %rd396;
	xor.b64  	%rd398, %rd358, %rd334;
	and.b64  	%rd399, %rd381, %rd398;
	xor.b64  	%rd400, %rd399, %rd334;
	add.s64 	%rd401, %rd29, %rd310;
	add.s64 	%rd402, %rd401, %rd400;
	add.s64 	%rd403, %rd402, %rd397;
	add.s64 	%rd404, %rd403, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r205,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd392;
	}
	shf.r.wrap.b32 	%r207, %r206, %r205, 28;
	shf.r.wrap.b32 	%r208, %r205, %r206, 28;
	mov.b64 	%rd405, {%r208, %r207};
	shf.l.wrap.b32 	%r209, %r205, %r206, 30;
	shf.l.wrap.b32 	%r210, %r206, %r205, 30;
	mov.b64 	%rd406, {%r210, %r209};
	xor.b64  	%rd407, %rd406, %rd405;
	shf.l.wrap.b32 	%r211, %r205, %r206, 25;
	shf.l.wrap.b32 	%r212, %r206, %r205, 25;
	mov.b64 	%rd408, {%r212, %r211};
	xor.b64  	%rd409, %rd407, %rd408;
	xor.b64  	%rd410, %rd392, %rd345;
	xor.b64  	%rd411, %rd392, %rd369;
	and.b64  	%rd412, %rd411, %rd410;
	xor.b64  	%rd413, %rd412, %rd392;
	add.s64 	%rd414, %rd403, %rd413;
	add.s64 	%rd415, %rd414, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd404;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 14;
	shf.r.wrap.b32 	%r216, %r213, %r214, 14;
	mov.b64 	%rd416, {%r216, %r215};
	shf.r.wrap.b32 	%r217, %r214, %r213, 18;
	shf.r.wrap.b32 	%r218, %r213, %r214, 18;
	mov.b64 	%rd417, {%r218, %r217};
	xor.b64  	%rd418, %rd417, %rd416;
	shf.l.wrap.b32 	%r219, %r213, %r214, 23;
	shf.l.wrap.b32 	%r220, %r214, %r213, 23;
	mov.b64 	%rd419, {%r220, %r219};
	xor.b64  	%rd420, %rd418, %rd419;
	xor.b64  	%rd421, %rd381, %rd358;
	and.b64  	%rd422, %rd404, %rd421;
	xor.b64  	%rd423, %rd422, %rd358;
	add.s64 	%rd424, %rd30, %rd334;
	add.s64 	%rd425, %rd424, %rd423;
	add.s64 	%rd426, %rd425, %rd420;
	add.s64 	%rd427, %rd426, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r221,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r222}, %rd415;
	}
	shf.r.wrap.b32 	%r223, %r222, %r221, 28;
	shf.r.wrap.b32 	%r224, %r221, %r222, 28;
	mov.b64 	%rd428, {%r224, %r223};
	shf.l.wrap.b32 	%r225, %r221, %r222, 30;
	shf.l.wrap.b32 	%r226, %r222, %r221, 30;
	mov.b64 	%rd429, {%r226, %r225};
	xor.b64  	%rd430, %rd429, %rd428;
	shf.l.wrap.b32 	%r227, %r221, %r222, 25;
	shf.l.wrap.b32 	%r228, %r222, %r221, 25;
	mov.b64 	%rd431, {%r228, %r227};
	xor.b64  	%rd432, %rd430, %rd431;
	xor.b64  	%rd433, %rd415, %rd369;
	xor.b64  	%rd434, %rd415, %rd392;
	and.b64  	%rd435, %rd434, %rd433;
	xor.b64  	%rd436, %rd435, %rd415;
	add.s64 	%rd437, %rd426, %rd436;
	add.s64 	%rd438, %rd437, %rd432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r230}, %rd427;
	}
	shf.r.wrap.b32 	%r231, %r230, %r229, 14;
	shf.r.wrap.b32 	%r232, %r229, %r230, 14;
	mov.b64 	%rd439, {%r232, %r231};
	shf.r.wrap.b32 	%r233, %r230, %r229, 18;
	shf.r.wrap.b32 	%r234, %r229, %r230, 18;
	mov.b64 	%rd440, {%r234, %r233};
	xor.b64  	%rd441, %rd440, %rd439;
	shf.l.wrap.b32 	%r235, %r229, %r230, 23;
	shf.l.wrap.b32 	%r236, %r230, %r229, 23;
	mov.b64 	%rd442, {%r236, %r235};
	xor.b64  	%rd443, %rd441, %rd442;
	xor.b64  	%rd444, %rd404, %rd381;
	and.b64  	%rd445, %rd427, %rd444;
	xor.b64  	%rd446, %rd445, %rd381;
	add.s64 	%rd447, %rd31, %rd358;
	add.s64 	%rd448, %rd447, %rd446;
	add.s64 	%rd449, %rd448, %rd443;
	add.s64 	%rd450, %rd449, %rd369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r238}, %rd438;
	}
	shf.r.wrap.b32 	%r239, %r238, %r237, 28;
	shf.r.wrap.b32 	%r240, %r237, %r238, 28;
	mov.b64 	%rd451, {%r240, %r239};
	shf.l.wrap.b32 	%r241, %r237, %r238, 30;
	shf.l.wrap.b32 	%r242, %r238, %r237, 30;
	mov.b64 	%rd452, {%r242, %r241};
	xor.b64  	%rd453, %rd452, %rd451;
	shf.l.wrap.b32 	%r243, %r237, %r238, 25;
	shf.l.wrap.b32 	%r244, %r238, %r237, 25;
	mov.b64 	%rd454, {%r244, %r243};
	xor.b64  	%rd455, %rd453, %rd454;
	xor.b64  	%rd456, %rd438, %rd392;
	xor.b64  	%rd457, %rd438, %rd415;
	and.b64  	%rd458, %rd457, %rd456;
	xor.b64  	%rd459, %rd458, %rd438;
	add.s64 	%rd460, %rd449, %rd459;
	add.s64 	%rd461, %rd460, %rd455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd450;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 14;
	shf.r.wrap.b32 	%r248, %r245, %r246, 14;
	mov.b64 	%rd462, {%r248, %r247};
	shf.r.wrap.b32 	%r249, %r246, %r245, 18;
	shf.r.wrap.b32 	%r250, %r245, %r246, 18;
	mov.b64 	%rd463, {%r250, %r249};
	xor.b64  	%rd464, %rd463, %rd462;
	shf.l.wrap.b32 	%r251, %r245, %r246, 23;
	shf.l.wrap.b32 	%r252, %r246, %r245, 23;
	mov.b64 	%rd465, {%r252, %r251};
	xor.b64  	%rd466, %rd464, %rd465;
	xor.b64  	%rd467, %rd427, %rd404;
	and.b64  	%rd468, %rd450, %rd467;
	xor.b64  	%rd469, %rd468, %rd404;
	add.s64 	%rd470, %rd32, %rd381;
	add.s64 	%rd471, %rd470, %rd469;
	add.s64 	%rd472, %rd471, %rd466;
	add.s64 	%rd473, %rd472, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r253,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r254}, %rd461;
	}
	shf.r.wrap.b32 	%r255, %r254, %r253, 28;
	shf.r.wrap.b32 	%r256, %r253, %r254, 28;
	mov.b64 	%rd474, {%r256, %r255};
	shf.l.wrap.b32 	%r257, %r253, %r254, 30;
	shf.l.wrap.b32 	%r258, %r254, %r253, 30;
	mov.b64 	%rd475, {%r258, %r257};
	xor.b64  	%rd476, %rd475, %rd474;
	shf.l.wrap.b32 	%r259, %r253, %r254, 25;
	shf.l.wrap.b32 	%r260, %r254, %r253, 25;
	mov.b64 	%rd477, {%r260, %r259};
	xor.b64  	%rd478, %rd476, %rd477;
	xor.b64  	%rd479, %rd461, %rd415;
	xor.b64  	%rd480, %rd461, %rd438;
	and.b64  	%rd481, %rd480, %rd479;
	xor.b64  	%rd482, %rd481, %rd461;
	add.s64 	%rd483, %rd472, %rd482;
	add.s64 	%rd484, %rd483, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r261,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r262}, %rd473;
	}
	shf.r.wrap.b32 	%r263, %r262, %r261, 14;
	shf.r.wrap.b32 	%r264, %r261, %r262, 14;
	mov.b64 	%rd485, {%r264, %r263};
	shf.r.wrap.b32 	%r265, %r262, %r261, 18;
	shf.r.wrap.b32 	%r266, %r261, %r262, 18;
	mov.b64 	%rd486, {%r266, %r265};
	xor.b64  	%rd487, %rd486, %rd485;
	shf.l.wrap.b32 	%r267, %r261, %r262, 23;
	shf.l.wrap.b32 	%r268, %r262, %r261, 23;
	mov.b64 	%rd488, {%r268, %r267};
	xor.b64  	%rd489, %rd487, %rd488;
	xor.b64  	%rd490, %rd450, %rd427;
	and.b64  	%rd491, %rd473, %rd490;
	xor.b64  	%rd492, %rd491, %rd427;
	add.s64 	%rd493, %rd33, %rd404;
	add.s64 	%rd494, %rd493, %rd492;
	add.s64 	%rd495, %rd494, %rd489;
	add.s64 	%rd496, %rd495, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r269,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r270}, %rd484;
	}
	shf.r.wrap.b32 	%r271, %r270, %r269, 28;
	shf.r.wrap.b32 	%r272, %r269, %r270, 28;
	mov.b64 	%rd497, {%r272, %r271};
	shf.l.wrap.b32 	%r273, %r269, %r270, 30;
	shf.l.wrap.b32 	%r274, %r270, %r269, 30;
	mov.b64 	%rd498, {%r274, %r273};
	xor.b64  	%rd499, %rd498, %rd497;
	shf.l.wrap.b32 	%r275, %r269, %r270, 25;
	shf.l.wrap.b32 	%r276, %r270, %r269, 25;
	mov.b64 	%rd500, {%r276, %r275};
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd484, %rd438;
	xor.b64  	%rd503, %rd484, %rd461;
	and.b64  	%rd504, %rd503, %rd502;
	xor.b64  	%rd505, %rd504, %rd484;
	add.s64 	%rd506, %rd495, %rd505;
	add.s64 	%rd507, %rd506, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd496;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 14;
	shf.r.wrap.b32 	%r280, %r277, %r278, 14;
	mov.b64 	%rd508, {%r280, %r279};
	shf.r.wrap.b32 	%r281, %r278, %r277, 18;
	shf.r.wrap.b32 	%r282, %r277, %r278, 18;
	mov.b64 	%rd509, {%r282, %r281};
	xor.b64  	%rd510, %rd509, %rd508;
	shf.l.wrap.b32 	%r283, %r277, %r278, 23;
	shf.l.wrap.b32 	%r284, %r278, %r277, 23;
	mov.b64 	%rd511, {%r284, %r283};
	xor.b64  	%rd512, %rd510, %rd511;
	xor.b64  	%rd513, %rd473, %rd450;
	and.b64  	%rd514, %rd496, %rd513;
	xor.b64  	%rd515, %rd514, %rd450;
	add.s64 	%rd516, %rd427, %rd34;
	add.s64 	%rd517, %rd516, %rd515;
	add.s64 	%rd518, %rd517, %rd512;
	add.s64 	%rd519, %rd518, 512;
	add.s64 	%rd520, %rd519, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd507;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 28;
	shf.r.wrap.b32 	%r288, %r285, %r286, 28;
	mov.b64 	%rd521, {%r288, %r287};
	shf.l.wrap.b32 	%r289, %r285, %r286, 30;
	shf.l.wrap.b32 	%r290, %r286, %r285, 30;
	mov.b64 	%rd522, {%r290, %r289};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.l.wrap.b32 	%r291, %r285, %r286, 25;
	shf.l.wrap.b32 	%r292, %r286, %r285, 25;
	mov.b64 	%rd524, {%r292, %r291};
	xor.b64  	%rd525, %rd523, %rd524;
	xor.b64  	%rd526, %rd507, %rd461;
	xor.b64  	%rd527, %rd507, %rd484;
	and.b64  	%rd528, %rd527, %rd526;
	xor.b64  	%rd529, %rd528, %rd507;
	add.s64 	%rd530, %rd519, %rd529;
	add.s64 	%rd531, %rd530, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd167;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 1;
	shf.r.wrap.b32 	%r296, %r293, %r294, 1;
	mov.b64 	%rd532, {%r296, %r295};
	shf.r.wrap.b32 	%r297, %r294, %r293, 8;
	shf.r.wrap.b32 	%r298, %r293, %r294, 8;
	mov.b64 	%rd533, {%r298, %r297};
	shr.u64 	%rd534, %rd167, 7;
	xor.b64  	%rd535, %rd532, %rd534;
	xor.b64  	%rd536, %rd535, %rd533;
	add.s64 	%rd537, %rd166, %rd99;
	add.s64 	%rd538, %rd537, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd168;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 1;
	shf.r.wrap.b32 	%r302, %r299, %r300, 1;
	mov.b64 	%rd539, {%r302, %r301};
	shf.r.wrap.b32 	%r303, %r300, %r299, 8;
	shf.r.wrap.b32 	%r304, %r299, %r300, 8;
	mov.b64 	%rd540, {%r304, %r303};
	shr.u64 	%rd541, %rd168, 7;
	xor.b64  	%rd542, %rd539, %rd541;
	xor.b64  	%rd543, %rd542, %rd540;
	add.s64 	%rd544, %rd167, %rd100;
	add.s64 	%rd545, %rd544, %rd543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd538;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 19;
	shf.r.wrap.b32 	%r308, %r305, %r306, 19;
	mov.b64 	%rd546, {%r308, %r307};
	shf.l.wrap.b32 	%r309, %r305, %r306, 3;
	shf.l.wrap.b32 	%r310, %r306, %r305, 3;
	mov.b64 	%rd547, {%r310, %r309};
	shr.u64 	%rd548, %rd538, 6;
	xor.b64  	%rd549, %rd546, %rd548;
	xor.b64  	%rd550, %rd549, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd169;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 1;
	shf.r.wrap.b32 	%r314, %r311, %r312, 1;
	mov.b64 	%rd551, {%r314, %r313};
	shf.r.wrap.b32 	%r315, %r312, %r311, 8;
	shf.r.wrap.b32 	%r316, %r311, %r312, 8;
	mov.b64 	%rd552, {%r316, %r315};
	shr.u64 	%rd553, %rd169, 7;
	xor.b64  	%rd554, %rd551, %rd553;
	xor.b64  	%rd555, %rd554, %rd552;
	add.s64 	%rd556, %rd168, %rd550;
	add.s64 	%rd557, %rd556, %rd555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r318}, %rd545;
	}
	shf.r.wrap.b32 	%r319, %r318, %r317, 19;
	shf.r.wrap.b32 	%r320, %r317, %r318, 19;
	mov.b64 	%rd558, {%r320, %r319};
	shf.l.wrap.b32 	%r321, %r317, %r318, 3;
	shf.l.wrap.b32 	%r322, %r318, %r317, 3;
	mov.b64 	%rd559, {%r322, %r321};
	shr.u64 	%rd560, %rd545, 6;
	xor.b64  	%rd561, %rd558, %rd560;
	xor.b64  	%rd562, %rd561, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd170;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 1;
	shf.r.wrap.b32 	%r326, %r323, %r324, 1;
	mov.b64 	%rd563, {%r326, %r325};
	shf.r.wrap.b32 	%r327, %r324, %r323, 8;
	shf.r.wrap.b32 	%r328, %r323, %r324, 8;
	mov.b64 	%rd564, {%r328, %r327};
	shr.u64 	%rd565, %rd170, 7;
	xor.b64  	%rd566, %rd563, %rd565;
	xor.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd169, %rd562;
	add.s64 	%rd569, %rd568, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd557;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 19;
	shf.r.wrap.b32 	%r332, %r329, %r330, 19;
	mov.b64 	%rd570, {%r332, %r331};
	shf.l.wrap.b32 	%r333, %r329, %r330, 3;
	shf.l.wrap.b32 	%r334, %r330, %r329, 3;
	mov.b64 	%rd571, {%r334, %r333};
	shr.u64 	%rd572, %rd557, 6;
	xor.b64  	%rd573, %rd570, %rd572;
	xor.b64  	%rd574, %rd573, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd171;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 1;
	shf.r.wrap.b32 	%r338, %r335, %r336, 1;
	mov.b64 	%rd575, {%r338, %r337};
	shf.r.wrap.b32 	%r339, %r336, %r335, 8;
	shf.r.wrap.b32 	%r340, %r335, %r336, 8;
	mov.b64 	%rd576, {%r340, %r339};
	shr.u64 	%rd577, %rd171, 7;
	xor.b64  	%rd578, %rd575, %rd577;
	xor.b64  	%rd579, %rd578, %rd576;
	add.s64 	%rd580, %rd170, %rd574;
	add.s64 	%rd581, %rd580, %rd579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd569;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 19;
	shf.r.wrap.b32 	%r344, %r341, %r342, 19;
	mov.b64 	%rd582, {%r344, %r343};
	shf.l.wrap.b32 	%r345, %r341, %r342, 3;
	shf.l.wrap.b32 	%r346, %r342, %r341, 3;
	mov.b64 	%rd583, {%r346, %r345};
	shr.u64 	%rd584, %rd569, 6;
	xor.b64  	%rd585, %rd582, %rd584;
	xor.b64  	%rd586, %rd585, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd172;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 1;
	shf.r.wrap.b32 	%r350, %r347, %r348, 1;
	mov.b64 	%rd587, {%r350, %r349};
	shf.r.wrap.b32 	%r351, %r348, %r347, 8;
	shf.r.wrap.b32 	%r352, %r347, %r348, 8;
	mov.b64 	%rd588, {%r352, %r351};
	shr.u64 	%rd589, %rd172, 7;
	xor.b64  	%rd590, %rd587, %rd589;
	xor.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd171, %rd586;
	add.s64 	%rd593, %rd592, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd581;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 19;
	shf.r.wrap.b32 	%r356, %r353, %r354, 19;
	mov.b64 	%rd594, {%r356, %r355};
	shf.l.wrap.b32 	%r357, %r353, %r354, 3;
	shf.l.wrap.b32 	%r358, %r354, %r353, 3;
	mov.b64 	%rd595, {%r358, %r357};
	shr.u64 	%rd596, %rd581, 6;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd173;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 1;
	shf.r.wrap.b32 	%r362, %r359, %r360, 1;
	mov.b64 	%rd599, {%r362, %r361};
	shf.r.wrap.b32 	%r363, %r360, %r359, 8;
	shf.r.wrap.b32 	%r364, %r359, %r360, 8;
	mov.b64 	%rd600, {%r364, %r363};
	shr.u64 	%rd601, %rd173, 7;
	xor.b64  	%rd602, %rd599, %rd601;
	xor.b64  	%rd603, %rd602, %rd600;
	add.s64 	%rd604, %rd172, %rd598;
	add.s64 	%rd605, %rd604, %rd603;
	add.s64 	%rd606, %rd605, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd593;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 19;
	shf.r.wrap.b32 	%r368, %r365, %r366, 19;
	mov.b64 	%rd607, {%r368, %r367};
	shf.l.wrap.b32 	%r369, %r365, %r366, 3;
	shf.l.wrap.b32 	%r370, %r366, %r365, 3;
	mov.b64 	%rd608, {%r370, %r369};
	shr.u64 	%rd609, %rd593, 6;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	add.s64 	%rd612, %rd538, %rd173;
	add.s64 	%rd613, %rd612, %rd611;
	add.s64 	%rd614, %rd613, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd606;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 19;
	shf.r.wrap.b32 	%r374, %r371, %r372, 19;
	mov.b64 	%rd615, {%r374, %r373};
	shf.l.wrap.b32 	%r375, %r371, %r372, 3;
	shf.l.wrap.b32 	%r376, %r372, %r371, 3;
	mov.b64 	%rd616, {%r376, %r375};
	shr.u64 	%rd617, %rd606, 6;
	xor.b64  	%rd618, %rd615, %rd617;
	xor.b64  	%rd619, %rd618, %rd616;
	xor.b64  	%rd620, %rd545, -9223372036854775808;
	add.s64 	%rd621, %rd620, %rd619;
	add.s64 	%rd622, %rd621, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r378}, %rd614;
	}
	shf.r.wrap.b32 	%r379, %r378, %r377, 19;
	shf.r.wrap.b32 	%r380, %r377, %r378, 19;
	mov.b64 	%rd623, {%r380, %r379};
	shf.l.wrap.b32 	%r381, %r377, %r378, 3;
	shf.l.wrap.b32 	%r382, %r378, %r377, 3;
	mov.b64 	%rd624, {%r382, %r381};
	shr.u64 	%rd625, %rd614, 6;
	xor.b64  	%rd626, %rd623, %rd625;
	xor.b64  	%rd627, %rd626, %rd624;
	add.s64 	%rd628, %rd557, %rd627;
	add.s64 	%rd629, %rd628, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r383,%dummy}, %rd622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd622;
	}
	shf.r.wrap.b32 	%r385, %r384, %r383, 19;
	shf.r.wrap.b32 	%r386, %r383, %r384, 19;
	mov.b64 	%rd630, {%r386, %r385};
	shf.l.wrap.b32 	%r387, %r383, %r384, 3;
	shf.l.wrap.b32 	%r388, %r384, %r383, 3;
	mov.b64 	%rd631, {%r388, %r387};
	shr.u64 	%rd632, %rd622, 6;
	xor.b64  	%rd633, %rd630, %rd632;
	xor.b64  	%rd634, %rd633, %rd631;
	add.s64 	%rd635, %rd569, %rd634;
	add.s64 	%rd636, %rd635, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd629;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 19;
	shf.r.wrap.b32 	%r392, %r389, %r390, 19;
	mov.b64 	%rd637, {%r392, %r391};
	shf.l.wrap.b32 	%r393, %r389, %r390, 3;
	shf.l.wrap.b32 	%r394, %r390, %r389, 3;
	mov.b64 	%rd638, {%r394, %r393};
	shr.u64 	%rd639, %rd629, 6;
	xor.b64  	%rd640, %rd637, %rd639;
	xor.b64  	%rd641, %rd640, %rd638;
	add.s64 	%rd642, %rd581, %rd641;
	add.s64 	%rd643, %rd642, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd636;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 19;
	shf.r.wrap.b32 	%r398, %r395, %r396, 19;
	mov.b64 	%rd644, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 3;
	shf.l.wrap.b32 	%r400, %r396, %r395, 3;
	mov.b64 	%rd645, {%r400, %r399};
	shr.u64 	%rd646, %rd636, 6;
	xor.b64  	%rd647, %rd644, %rd646;
	xor.b64  	%rd648, %rd647, %rd645;
	add.s64 	%rd649, %rd593, %rd648;
	add.s64 	%rd650, %rd649, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd643;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 19;
	shf.r.wrap.b32 	%r404, %r401, %r402, 19;
	mov.b64 	%rd651, {%r404, %r403};
	shf.l.wrap.b32 	%r405, %r401, %r402, 3;
	shf.l.wrap.b32 	%r406, %r402, %r401, 3;
	mov.b64 	%rd652, {%r406, %r405};
	shr.u64 	%rd653, %rd643, 6;
	xor.b64  	%rd654, %rd651, %rd653;
	xor.b64  	%rd655, %rd654, %rd652;
	add.s64 	%rd656, %rd606, %rd655;
	add.s64 	%rd657, %rd656, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd650;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 19;
	shf.r.wrap.b32 	%r410, %r407, %r408, 19;
	mov.b64 	%rd658, {%r410, %r409};
	shf.l.wrap.b32 	%r411, %r407, %r408, 3;
	shf.l.wrap.b32 	%r412, %r408, %r407, 3;
	mov.b64 	%rd659, {%r412, %r411};
	shr.u64 	%rd660, %rd650, 6;
	xor.b64  	%rd661, %rd658, %rd660;
	xor.b64  	%rd662, %rd661, %rd659;
	add.s64 	%rd663, %rd614, %rd662;
	add.s64 	%rd664, %rd663, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd657;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 19;
	shf.r.wrap.b32 	%r416, %r413, %r414, 19;
	mov.b64 	%rd665, {%r416, %r415};
	shf.l.wrap.b32 	%r417, %r413, %r414, 3;
	shf.l.wrap.b32 	%r418, %r414, %r413, 3;
	mov.b64 	%rd666, {%r418, %r417};
	shr.u64 	%rd667, %rd657, 6;
	xor.b64  	%rd668, %rd665, %rd667;
	xor.b64  	%rd669, %rd668, %rd666;
	shf.r.wrap.b32 	%r419, %r306, %r305, 1;
	shf.r.wrap.b32 	%r420, %r305, %r306, 1;
	mov.b64 	%rd670, {%r420, %r419};
	shf.r.wrap.b32 	%r421, %r306, %r305, 8;
	shf.r.wrap.b32 	%r422, %r305, %r306, 8;
	mov.b64 	%rd671, {%r422, %r421};
	shr.u64 	%rd672, %rd538, 7;
	xor.b64  	%rd673, %rd670, %rd672;
	xor.b64  	%rd674, %rd673, %rd671;
	add.s64 	%rd675, %rd622, %rd669;
	add.s64 	%rd676, %rd675, %rd674;
	add.s64 	%rd677, %rd676, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd520;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 14;
	shf.r.wrap.b32 	%r426, %r423, %r424, 14;
	mov.b64 	%rd678, {%r426, %r425};
	shf.r.wrap.b32 	%r427, %r424, %r423, 18;
	shf.r.wrap.b32 	%r428, %r423, %r424, 18;
	mov.b64 	%rd679, {%r428, %r427};
	xor.b64  	%rd680, %rd679, %rd678;
	shf.l.wrap.b32 	%r429, %r423, %r424, 23;
	shf.l.wrap.b32 	%r430, %r424, %r423, 23;
	mov.b64 	%rd681, {%r430, %r429};
	xor.b64  	%rd682, %rd680, %rd681;
	xor.b64  	%rd683, %rd496, %rd473;
	and.b64  	%rd684, %rd683, %rd520;
	xor.b64  	%rd685, %rd684, %rd473;
	add.s64 	%rd686, %rd685, %rd450;
	add.s64 	%rd687, %rd686, %rd538;
	add.s64 	%rd688, %rd687, %rd35;
	add.s64 	%rd689, %rd688, %rd682;
	add.s64 	%rd690, %rd689, %rd461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd531;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 28;
	shf.r.wrap.b32 	%r434, %r431, %r432, 28;
	mov.b64 	%rd691, {%r434, %r433};
	shf.l.wrap.b32 	%r435, %r431, %r432, 30;
	shf.l.wrap.b32 	%r436, %r432, %r431, 30;
	mov.b64 	%rd692, {%r436, %r435};
	xor.b64  	%rd693, %rd692, %rd691;
	shf.l.wrap.b32 	%r437, %r431, %r432, 25;
	shf.l.wrap.b32 	%r438, %r432, %r431, 25;
	mov.b64 	%rd694, {%r438, %r437};
	xor.b64  	%rd695, %rd693, %rd694;
	xor.b64  	%rd696, %rd531, %rd484;
	xor.b64  	%rd697, %rd531, %rd507;
	and.b64  	%rd698, %rd697, %rd696;
	xor.b64  	%rd699, %rd698, %rd531;
	add.s64 	%rd700, %rd689, %rd699;
	add.s64 	%rd701, %rd700, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd690;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 14;
	shf.r.wrap.b32 	%r442, %r439, %r440, 14;
	mov.b64 	%rd702, {%r442, %r441};
	shf.r.wrap.b32 	%r443, %r440, %r439, 18;
	shf.r.wrap.b32 	%r444, %r439, %r440, 18;
	mov.b64 	%rd703, {%r444, %r443};
	xor.b64  	%rd704, %rd703, %rd702;
	shf.l.wrap.b32 	%r445, %r439, %r440, 23;
	shf.l.wrap.b32 	%r446, %r440, %r439, 23;
	mov.b64 	%rd705, {%r446, %r445};
	xor.b64  	%rd706, %rd704, %rd705;
	xor.b64  	%rd707, %rd520, %rd496;
	and.b64  	%rd708, %rd690, %rd707;
	xor.b64  	%rd709, %rd708, %rd496;
	add.s64 	%rd710, %rd545, %rd473;
	add.s64 	%rd711, %rd710, %rd36;
	add.s64 	%rd712, %rd711, %rd709;
	add.s64 	%rd713, %rd712, %rd706;
	add.s64 	%rd714, %rd713, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd701;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 28;
	shf.r.wrap.b32 	%r450, %r447, %r448, 28;
	mov.b64 	%rd715, {%r450, %r449};
	shf.l.wrap.b32 	%r451, %r447, %r448, 30;
	shf.l.wrap.b32 	%r452, %r448, %r447, 30;
	mov.b64 	%rd716, {%r452, %r451};
	xor.b64  	%rd717, %rd716, %rd715;
	shf.l.wrap.b32 	%r453, %r447, %r448, 25;
	shf.l.wrap.b32 	%r454, %r448, %r447, 25;
	mov.b64 	%rd718, {%r454, %r453};
	xor.b64  	%rd719, %rd717, %rd718;
	xor.b64  	%rd720, %rd701, %rd507;
	xor.b64  	%rd721, %rd701, %rd531;
	and.b64  	%rd722, %rd721, %rd720;
	xor.b64  	%rd723, %rd722, %rd701;
	add.s64 	%rd724, %rd713, %rd723;
	add.s64 	%rd725, %rd724, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd714;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 14;
	shf.r.wrap.b32 	%r458, %r455, %r456, 14;
	mov.b64 	%rd726, {%r458, %r457};
	shf.r.wrap.b32 	%r459, %r456, %r455, 18;
	shf.r.wrap.b32 	%r460, %r455, %r456, 18;
	mov.b64 	%rd727, {%r460, %r459};
	xor.b64  	%rd728, %rd727, %rd726;
	shf.l.wrap.b32 	%r461, %r455, %r456, 23;
	shf.l.wrap.b32 	%r462, %r456, %r455, 23;
	mov.b64 	%rd729, {%r462, %r461};
	xor.b64  	%rd730, %rd728, %rd729;
	xor.b64  	%rd731, %rd690, %rd520;
	and.b64  	%rd732, %rd714, %rd731;
	xor.b64  	%rd733, %rd732, %rd520;
	add.s64 	%rd734, %rd557, %rd496;
	add.s64 	%rd735, %rd734, %rd37;
	add.s64 	%rd736, %rd735, %rd733;
	add.s64 	%rd737, %rd736, %rd730;
	add.s64 	%rd738, %rd737, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd725;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 28;
	shf.r.wrap.b32 	%r466, %r463, %r464, 28;
	mov.b64 	%rd739, {%r466, %r465};
	shf.l.wrap.b32 	%r467, %r463, %r464, 30;
	shf.l.wrap.b32 	%r468, %r464, %r463, 30;
	mov.b64 	%rd740, {%r468, %r467};
	xor.b64  	%rd741, %rd740, %rd739;
	shf.l.wrap.b32 	%r469, %r463, %r464, 25;
	shf.l.wrap.b32 	%r470, %r464, %r463, 25;
	mov.b64 	%rd742, {%r470, %r469};
	xor.b64  	%rd743, %rd741, %rd742;
	xor.b64  	%rd744, %rd725, %rd531;
	xor.b64  	%rd745, %rd725, %rd701;
	and.b64  	%rd746, %rd745, %rd744;
	xor.b64  	%rd747, %rd746, %rd725;
	add.s64 	%rd748, %rd737, %rd747;
	add.s64 	%rd749, %rd748, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd738;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 14;
	shf.r.wrap.b32 	%r474, %r471, %r472, 14;
	mov.b64 	%rd750, {%r474, %r473};
	shf.r.wrap.b32 	%r475, %r472, %r471, 18;
	shf.r.wrap.b32 	%r476, %r471, %r472, 18;
	mov.b64 	%rd751, {%r476, %r475};
	xor.b64  	%rd752, %rd751, %rd750;
	shf.l.wrap.b32 	%r477, %r471, %r472, 23;
	shf.l.wrap.b32 	%r478, %r472, %r471, 23;
	mov.b64 	%rd753, {%r478, %r477};
	xor.b64  	%rd754, %rd752, %rd753;
	xor.b64  	%rd755, %rd714, %rd690;
	and.b64  	%rd756, %rd738, %rd755;
	xor.b64  	%rd757, %rd756, %rd690;
	add.s64 	%rd758, %rd569, %rd520;
	add.s64 	%rd759, %rd758, %rd38;
	add.s64 	%rd760, %rd759, %rd757;
	add.s64 	%rd761, %rd760, %rd754;
	add.s64 	%rd762, %rd761, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd749;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 28;
	shf.r.wrap.b32 	%r482, %r479, %r480, 28;
	mov.b64 	%rd763, {%r482, %r481};
	shf.l.wrap.b32 	%r483, %r479, %r480, 30;
	shf.l.wrap.b32 	%r484, %r480, %r479, 30;
	mov.b64 	%rd764, {%r484, %r483};
	xor.b64  	%rd765, %rd764, %rd763;
	shf.l.wrap.b32 	%r485, %r479, %r480, 25;
	shf.l.wrap.b32 	%r486, %r480, %r479, 25;
	mov.b64 	%rd766, {%r486, %r485};
	xor.b64  	%rd767, %rd765, %rd766;
	xor.b64  	%rd768, %rd749, %rd701;
	xor.b64  	%rd769, %rd749, %rd725;
	and.b64  	%rd770, %rd769, %rd768;
	xor.b64  	%rd771, %rd770, %rd749;
	add.s64 	%rd772, %rd761, %rd771;
	add.s64 	%rd773, %rd772, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd762;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 14;
	shf.r.wrap.b32 	%r490, %r487, %r488, 14;
	mov.b64 	%rd774, {%r490, %r489};
	shf.r.wrap.b32 	%r491, %r488, %r487, 18;
	shf.r.wrap.b32 	%r492, %r487, %r488, 18;
	mov.b64 	%rd775, {%r492, %r491};
	xor.b64  	%rd776, %rd775, %rd774;
	shf.l.wrap.b32 	%r493, %r487, %r488, 23;
	shf.l.wrap.b32 	%r494, %r488, %r487, 23;
	mov.b64 	%rd777, {%r494, %r493};
	xor.b64  	%rd778, %rd776, %rd777;
	xor.b64  	%rd779, %rd738, %rd714;
	and.b64  	%rd780, %rd762, %rd779;
	xor.b64  	%rd781, %rd780, %rd714;
	add.s64 	%rd782, %rd690, %rd581;
	add.s64 	%rd783, %rd782, %rd39;
	add.s64 	%rd784, %rd783, %rd781;
	add.s64 	%rd785, %rd784, %rd778;
	add.s64 	%rd786, %rd785, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd773;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 28;
	shf.r.wrap.b32 	%r498, %r495, %r496, 28;
	mov.b64 	%rd787, {%r498, %r497};
	shf.l.wrap.b32 	%r499, %r495, %r496, 30;
	shf.l.wrap.b32 	%r500, %r496, %r495, 30;
	mov.b64 	%rd788, {%r500, %r499};
	xor.b64  	%rd789, %rd788, %rd787;
	shf.l.wrap.b32 	%r501, %r495, %r496, 25;
	shf.l.wrap.b32 	%r502, %r496, %r495, 25;
	mov.b64 	%rd790, {%r502, %r501};
	xor.b64  	%rd791, %rd789, %rd790;
	xor.b64  	%rd792, %rd773, %rd725;
	xor.b64  	%rd793, %rd773, %rd749;
	and.b64  	%rd794, %rd793, %rd792;
	xor.b64  	%rd795, %rd794, %rd773;
	add.s64 	%rd796, %rd785, %rd795;
	add.s64 	%rd797, %rd796, %rd791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd786;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 14;
	shf.r.wrap.b32 	%r506, %r503, %r504, 14;
	mov.b64 	%rd798, {%r506, %r505};
	shf.r.wrap.b32 	%r507, %r504, %r503, 18;
	shf.r.wrap.b32 	%r508, %r503, %r504, 18;
	mov.b64 	%rd799, {%r508, %r507};
	xor.b64  	%rd800, %rd799, %rd798;
	shf.l.wrap.b32 	%r509, %r503, %r504, 23;
	shf.l.wrap.b32 	%r510, %r504, %r503, 23;
	mov.b64 	%rd801, {%r510, %r509};
	xor.b64  	%rd802, %rd800, %rd801;
	xor.b64  	%rd803, %rd762, %rd738;
	and.b64  	%rd804, %rd786, %rd803;
	xor.b64  	%rd805, %rd804, %rd738;
	add.s64 	%rd806, %rd714, %rd593;
	add.s64 	%rd807, %rd806, %rd40;
	add.s64 	%rd808, %rd807, %rd805;
	add.s64 	%rd809, %rd808, %rd802;
	add.s64 	%rd810, %rd809, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd797;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 28;
	shf.r.wrap.b32 	%r514, %r511, %r512, 28;
	mov.b64 	%rd811, {%r514, %r513};
	shf.l.wrap.b32 	%r515, %r511, %r512, 30;
	shf.l.wrap.b32 	%r516, %r512, %r511, 30;
	mov.b64 	%rd812, {%r516, %r515};
	xor.b64  	%rd813, %rd812, %rd811;
	shf.l.wrap.b32 	%r517, %r511, %r512, 25;
	shf.l.wrap.b32 	%r518, %r512, %r511, 25;
	mov.b64 	%rd814, {%r518, %r517};
	xor.b64  	%rd815, %rd813, %rd814;
	xor.b64  	%rd816, %rd797, %rd749;
	xor.b64  	%rd817, %rd797, %rd773;
	and.b64  	%rd818, %rd817, %rd816;
	xor.b64  	%rd819, %rd818, %rd797;
	add.s64 	%rd820, %rd809, %rd819;
	add.s64 	%rd821, %rd820, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd810;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 14;
	shf.r.wrap.b32 	%r522, %r519, %r520, 14;
	mov.b64 	%rd822, {%r522, %r521};
	shf.r.wrap.b32 	%r523, %r520, %r519, 18;
	shf.r.wrap.b32 	%r524, %r519, %r520, 18;
	mov.b64 	%rd823, {%r524, %r523};
	xor.b64  	%rd824, %rd823, %rd822;
	shf.l.wrap.b32 	%r525, %r519, %r520, 23;
	shf.l.wrap.b32 	%r526, %r520, %r519, 23;
	mov.b64 	%rd825, {%r526, %r525};
	xor.b64  	%rd826, %rd824, %rd825;
	xor.b64  	%rd827, %rd786, %rd762;
	and.b64  	%rd828, %rd810, %rd827;
	xor.b64  	%rd829, %rd828, %rd762;
	add.s64 	%rd830, %rd738, %rd606;
	add.s64 	%rd831, %rd830, %rd41;
	add.s64 	%rd832, %rd831, %rd829;
	add.s64 	%rd833, %rd832, %rd826;
	add.s64 	%rd834, %rd833, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd821;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 28;
	shf.r.wrap.b32 	%r530, %r527, %r528, 28;
	mov.b64 	%rd835, {%r530, %r529};
	shf.l.wrap.b32 	%r531, %r527, %r528, 30;
	shf.l.wrap.b32 	%r532, %r528, %r527, 30;
	mov.b64 	%rd836, {%r532, %r531};
	xor.b64  	%rd837, %rd836, %rd835;
	shf.l.wrap.b32 	%r533, %r527, %r528, 25;
	shf.l.wrap.b32 	%r534, %r528, %r527, 25;
	mov.b64 	%rd838, {%r534, %r533};
	xor.b64  	%rd839, %rd837, %rd838;
	xor.b64  	%rd840, %rd821, %rd773;
	xor.b64  	%rd841, %rd821, %rd797;
	and.b64  	%rd842, %rd841, %rd840;
	xor.b64  	%rd843, %rd842, %rd821;
	add.s64 	%rd844, %rd833, %rd843;
	add.s64 	%rd845, %rd844, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd834;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 14;
	shf.r.wrap.b32 	%r538, %r535, %r536, 14;
	mov.b64 	%rd846, {%r538, %r537};
	shf.r.wrap.b32 	%r539, %r536, %r535, 18;
	shf.r.wrap.b32 	%r540, %r535, %r536, 18;
	mov.b64 	%rd847, {%r540, %r539};
	xor.b64  	%rd848, %rd847, %rd846;
	shf.l.wrap.b32 	%r541, %r535, %r536, 23;
	shf.l.wrap.b32 	%r542, %r536, %r535, 23;
	mov.b64 	%rd849, {%r542, %r541};
	xor.b64  	%rd850, %rd848, %rd849;
	xor.b64  	%rd851, %rd810, %rd786;
	and.b64  	%rd852, %rd834, %rd851;
	xor.b64  	%rd853, %rd852, %rd786;
	add.s64 	%rd854, %rd762, %rd614;
	add.s64 	%rd855, %rd854, %rd42;
	add.s64 	%rd856, %rd855, %rd853;
	add.s64 	%rd857, %rd856, %rd850;
	add.s64 	%rd858, %rd857, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd845;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 28;
	shf.r.wrap.b32 	%r546, %r543, %r544, 28;
	mov.b64 	%rd859, {%r546, %r545};
	shf.l.wrap.b32 	%r547, %r543, %r544, 30;
	shf.l.wrap.b32 	%r548, %r544, %r543, 30;
	mov.b64 	%rd860, {%r548, %r547};
	xor.b64  	%rd861, %rd860, %rd859;
	shf.l.wrap.b32 	%r549, %r543, %r544, 25;
	shf.l.wrap.b32 	%r550, %r544, %r543, 25;
	mov.b64 	%rd862, {%r550, %r549};
	xor.b64  	%rd863, %rd861, %rd862;
	xor.b64  	%rd864, %rd845, %rd797;
	xor.b64  	%rd865, %rd845, %rd821;
	and.b64  	%rd866, %rd865, %rd864;
	xor.b64  	%rd867, %rd866, %rd845;
	add.s64 	%rd868, %rd857, %rd867;
	add.s64 	%rd869, %rd868, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd858;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 14;
	shf.r.wrap.b32 	%r554, %r551, %r552, 14;
	mov.b64 	%rd870, {%r554, %r553};
	shf.r.wrap.b32 	%r555, %r552, %r551, 18;
	shf.r.wrap.b32 	%r556, %r551, %r552, 18;
	mov.b64 	%rd871, {%r556, %r555};
	xor.b64  	%rd872, %rd871, %rd870;
	shf.l.wrap.b32 	%r557, %r551, %r552, 23;
	shf.l.wrap.b32 	%r558, %r552, %r551, 23;
	mov.b64 	%rd873, {%r558, %r557};
	xor.b64  	%rd874, %rd872, %rd873;
	xor.b64  	%rd875, %rd834, %rd810;
	and.b64  	%rd876, %rd858, %rd875;
	xor.b64  	%rd877, %rd876, %rd810;
	add.s64 	%rd878, %rd786, %rd622;
	add.s64 	%rd879, %rd878, %rd43;
	add.s64 	%rd880, %rd879, %rd877;
	add.s64 	%rd881, %rd880, %rd874;
	add.s64 	%rd882, %rd881, %rd797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd869;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 28;
	shf.r.wrap.b32 	%r562, %r559, %r560, 28;
	mov.b64 	%rd883, {%r562, %r561};
	shf.l.wrap.b32 	%r563, %r559, %r560, 30;
	shf.l.wrap.b32 	%r564, %r560, %r559, 30;
	mov.b64 	%rd884, {%r564, %r563};
	xor.b64  	%rd885, %rd884, %rd883;
	shf.l.wrap.b32 	%r565, %r559, %r560, 25;
	shf.l.wrap.b32 	%r566, %r560, %r559, 25;
	mov.b64 	%rd886, {%r566, %r565};
	xor.b64  	%rd887, %rd885, %rd886;
	xor.b64  	%rd888, %rd869, %rd821;
	xor.b64  	%rd889, %rd869, %rd845;
	and.b64  	%rd890, %rd889, %rd888;
	xor.b64  	%rd891, %rd890, %rd869;
	add.s64 	%rd892, %rd881, %rd891;
	add.s64 	%rd893, %rd892, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd882;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 14;
	shf.r.wrap.b32 	%r570, %r567, %r568, 14;
	mov.b64 	%rd894, {%r570, %r569};
	shf.r.wrap.b32 	%r571, %r568, %r567, 18;
	shf.r.wrap.b32 	%r572, %r567, %r568, 18;
	mov.b64 	%rd895, {%r572, %r571};
	xor.b64  	%rd896, %rd895, %rd894;
	shf.l.wrap.b32 	%r573, %r567, %r568, 23;
	shf.l.wrap.b32 	%r574, %r568, %r567, 23;
	mov.b64 	%rd897, {%r574, %r573};
	xor.b64  	%rd898, %rd896, %rd897;
	xor.b64  	%rd899, %rd858, %rd834;
	and.b64  	%rd900, %rd882, %rd899;
	xor.b64  	%rd901, %rd900, %rd834;
	add.s64 	%rd902, %rd810, %rd629;
	add.s64 	%rd903, %rd902, %rd44;
	add.s64 	%rd904, %rd903, %rd901;
	add.s64 	%rd905, %rd904, %rd898;
	add.s64 	%rd906, %rd905, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd893;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 28;
	shf.r.wrap.b32 	%r578, %r575, %r576, 28;
	mov.b64 	%rd907, {%r578, %r577};
	shf.l.wrap.b32 	%r579, %r575, %r576, 30;
	shf.l.wrap.b32 	%r580, %r576, %r575, 30;
	mov.b64 	%rd908, {%r580, %r579};
	xor.b64  	%rd909, %rd908, %rd907;
	shf.l.wrap.b32 	%r581, %r575, %r576, 25;
	shf.l.wrap.b32 	%r582, %r576, %r575, 25;
	mov.b64 	%rd910, {%r582, %r581};
	xor.b64  	%rd911, %rd909, %rd910;
	xor.b64  	%rd912, %rd893, %rd845;
	xor.b64  	%rd913, %rd893, %rd869;
	and.b64  	%rd914, %rd913, %rd912;
	xor.b64  	%rd915, %rd914, %rd893;
	add.s64 	%rd916, %rd905, %rd915;
	add.s64 	%rd917, %rd916, %rd911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd906;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 14;
	shf.r.wrap.b32 	%r586, %r583, %r584, 14;
	mov.b64 	%rd918, {%r586, %r585};
	shf.r.wrap.b32 	%r587, %r584, %r583, 18;
	shf.r.wrap.b32 	%r588, %r583, %r584, 18;
	mov.b64 	%rd919, {%r588, %r587};
	xor.b64  	%rd920, %rd919, %rd918;
	shf.l.wrap.b32 	%r589, %r583, %r584, 23;
	shf.l.wrap.b32 	%r590, %r584, %r583, 23;
	mov.b64 	%rd921, {%r590, %r589};
	xor.b64  	%rd922, %rd920, %rd921;
	xor.b64  	%rd923, %rd882, %rd858;
	and.b64  	%rd924, %rd906, %rd923;
	xor.b64  	%rd925, %rd924, %rd858;
	add.s64 	%rd926, %rd834, %rd636;
	add.s64 	%rd927, %rd926, %rd45;
	add.s64 	%rd928, %rd927, %rd925;
	add.s64 	%rd929, %rd928, %rd922;
	add.s64 	%rd930, %rd929, %rd845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd917;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 28;
	shf.r.wrap.b32 	%r594, %r591, %r592, 28;
	mov.b64 	%rd931, {%r594, %r593};
	shf.l.wrap.b32 	%r595, %r591, %r592, 30;
	shf.l.wrap.b32 	%r596, %r592, %r591, 30;
	mov.b64 	%rd932, {%r596, %r595};
	xor.b64  	%rd933, %rd932, %rd931;
	shf.l.wrap.b32 	%r597, %r591, %r592, 25;
	shf.l.wrap.b32 	%r598, %r592, %r591, 25;
	mov.b64 	%rd934, {%r598, %r597};
	xor.b64  	%rd935, %rd933, %rd934;
	xor.b64  	%rd936, %rd917, %rd869;
	xor.b64  	%rd937, %rd917, %rd893;
	and.b64  	%rd938, %rd937, %rd936;
	xor.b64  	%rd939, %rd938, %rd917;
	add.s64 	%rd940, %rd929, %rd939;
	add.s64 	%rd941, %rd940, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd930;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 14;
	shf.r.wrap.b32 	%r602, %r599, %r600, 14;
	mov.b64 	%rd942, {%r602, %r601};
	shf.r.wrap.b32 	%r603, %r600, %r599, 18;
	shf.r.wrap.b32 	%r604, %r599, %r600, 18;
	mov.b64 	%rd943, {%r604, %r603};
	xor.b64  	%rd944, %rd943, %rd942;
	shf.l.wrap.b32 	%r605, %r599, %r600, 23;
	shf.l.wrap.b32 	%r606, %r600, %r599, 23;
	mov.b64 	%rd945, {%r606, %r605};
	xor.b64  	%rd946, %rd944, %rd945;
	xor.b64  	%rd947, %rd906, %rd882;
	and.b64  	%rd948, %rd930, %rd947;
	xor.b64  	%rd949, %rd948, %rd882;
	add.s64 	%rd950, %rd858, %rd643;
	add.s64 	%rd951, %rd950, %rd46;
	add.s64 	%rd952, %rd951, %rd949;
	add.s64 	%rd953, %rd952, %rd946;
	add.s64 	%rd954, %rd953, %rd869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd941;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 28;
	shf.r.wrap.b32 	%r610, %r607, %r608, 28;
	mov.b64 	%rd955, {%r610, %r609};
	shf.l.wrap.b32 	%r611, %r607, %r608, 30;
	shf.l.wrap.b32 	%r612, %r608, %r607, 30;
	mov.b64 	%rd956, {%r612, %r611};
	xor.b64  	%rd957, %rd956, %rd955;
	shf.l.wrap.b32 	%r613, %r607, %r608, 25;
	shf.l.wrap.b32 	%r614, %r608, %r607, 25;
	mov.b64 	%rd958, {%r614, %r613};
	xor.b64  	%rd959, %rd957, %rd958;
	xor.b64  	%rd960, %rd941, %rd893;
	xor.b64  	%rd961, %rd941, %rd917;
	and.b64  	%rd962, %rd961, %rd960;
	xor.b64  	%rd963, %rd962, %rd941;
	add.s64 	%rd964, %rd953, %rd963;
	add.s64 	%rd965, %rd964, %rd959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd954;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 14;
	shf.r.wrap.b32 	%r618, %r615, %r616, 14;
	mov.b64 	%rd966, {%r618, %r617};
	shf.r.wrap.b32 	%r619, %r616, %r615, 18;
	shf.r.wrap.b32 	%r620, %r615, %r616, 18;
	mov.b64 	%rd967, {%r620, %r619};
	xor.b64  	%rd968, %rd967, %rd966;
	shf.l.wrap.b32 	%r621, %r615, %r616, 23;
	shf.l.wrap.b32 	%r622, %r616, %r615, 23;
	mov.b64 	%rd969, {%r622, %r621};
	xor.b64  	%rd970, %rd968, %rd969;
	xor.b64  	%rd971, %rd930, %rd906;
	and.b64  	%rd972, %rd954, %rd971;
	xor.b64  	%rd973, %rd972, %rd906;
	add.s64 	%rd974, %rd882, %rd650;
	add.s64 	%rd975, %rd974, %rd47;
	add.s64 	%rd976, %rd975, %rd973;
	add.s64 	%rd977, %rd976, %rd970;
	add.s64 	%rd978, %rd977, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd965;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 28;
	shf.r.wrap.b32 	%r626, %r623, %r624, 28;
	mov.b64 	%rd979, {%r626, %r625};
	shf.l.wrap.b32 	%r627, %r623, %r624, 30;
	shf.l.wrap.b32 	%r628, %r624, %r623, 30;
	mov.b64 	%rd980, {%r628, %r627};
	xor.b64  	%rd981, %rd980, %rd979;
	shf.l.wrap.b32 	%r629, %r623, %r624, 25;
	shf.l.wrap.b32 	%r630, %r624, %r623, 25;
	mov.b64 	%rd982, {%r630, %r629};
	xor.b64  	%rd983, %rd981, %rd982;
	xor.b64  	%rd984, %rd965, %rd917;
	xor.b64  	%rd985, %rd965, %rd941;
	and.b64  	%rd986, %rd985, %rd984;
	xor.b64  	%rd987, %rd986, %rd965;
	add.s64 	%rd988, %rd977, %rd987;
	add.s64 	%rd989, %rd988, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd978;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 14;
	shf.r.wrap.b32 	%r634, %r631, %r632, 14;
	mov.b64 	%rd990, {%r634, %r633};
	shf.r.wrap.b32 	%r635, %r632, %r631, 18;
	shf.r.wrap.b32 	%r636, %r631, %r632, 18;
	mov.b64 	%rd991, {%r636, %r635};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.l.wrap.b32 	%r637, %r631, %r632, 23;
	shf.l.wrap.b32 	%r638, %r632, %r631, 23;
	mov.b64 	%rd993, {%r638, %r637};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd954, %rd930;
	and.b64  	%rd996, %rd978, %rd995;
	xor.b64  	%rd997, %rd996, %rd930;
	add.s64 	%rd998, %rd906, %rd657;
	add.s64 	%rd999, %rd998, %rd48;
	add.s64 	%rd1000, %rd999, %rd997;
	add.s64 	%rd1001, %rd1000, %rd994;
	add.s64 	%rd1002, %rd1001, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd989;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 28;
	shf.r.wrap.b32 	%r642, %r639, %r640, 28;
	mov.b64 	%rd1003, {%r642, %r641};
	shf.l.wrap.b32 	%r643, %r639, %r640, 30;
	shf.l.wrap.b32 	%r644, %r640, %r639, 30;
	mov.b64 	%rd1004, {%r644, %r643};
	xor.b64  	%rd1005, %rd1004, %rd1003;
	shf.l.wrap.b32 	%r645, %r639, %r640, 25;
	shf.l.wrap.b32 	%r646, %r640, %r639, 25;
	mov.b64 	%rd1006, {%r646, %r645};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	xor.b64  	%rd1008, %rd989, %rd941;
	xor.b64  	%rd1009, %rd989, %rd965;
	and.b64  	%rd1010, %rd1009, %rd1008;
	xor.b64  	%rd1011, %rd1010, %rd989;
	add.s64 	%rd1012, %rd1001, %rd1011;
	add.s64 	%rd1013, %rd1012, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd1002;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 14;
	shf.r.wrap.b32 	%r650, %r647, %r648, 14;
	mov.b64 	%rd1014, {%r650, %r649};
	shf.r.wrap.b32 	%r651, %r648, %r647, 18;
	shf.r.wrap.b32 	%r652, %r647, %r648, 18;
	mov.b64 	%rd1015, {%r652, %r651};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.l.wrap.b32 	%r653, %r647, %r648, 23;
	shf.l.wrap.b32 	%r654, %r648, %r647, 23;
	mov.b64 	%rd1017, {%r654, %r653};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	xor.b64  	%rd1019, %rd978, %rd954;
	and.b64  	%rd1020, %rd1002, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd954;
	add.s64 	%rd1022, %rd930, %rd664;
	add.s64 	%rd1023, %rd1022, %rd49;
	add.s64 	%rd1024, %rd1023, %rd1021;
	add.s64 	%rd1025, %rd1024, %rd1018;
	add.s64 	%rd1026, %rd1025, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd1013;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 28;
	shf.r.wrap.b32 	%r658, %r655, %r656, 28;
	mov.b64 	%rd1027, {%r658, %r657};
	shf.l.wrap.b32 	%r659, %r655, %r656, 30;
	shf.l.wrap.b32 	%r660, %r656, %r655, 30;
	mov.b64 	%rd1028, {%r660, %r659};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r661, %r655, %r656, 25;
	shf.l.wrap.b32 	%r662, %r656, %r655, 25;
	mov.b64 	%rd1030, {%r662, %r661};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd1013, %rd965;
	xor.b64  	%rd1033, %rd1013, %rd989;
	and.b64  	%rd1034, %rd1033, %rd1032;
	xor.b64  	%rd1035, %rd1034, %rd1013;
	add.s64 	%rd1036, %rd1025, %rd1035;
	add.s64 	%rd1037, %rd1036, %rd1031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd1026;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 14;
	shf.r.wrap.b32 	%r666, %r663, %r664, 14;
	mov.b64 	%rd1038, {%r666, %r665};
	shf.r.wrap.b32 	%r667, %r664, %r663, 18;
	shf.r.wrap.b32 	%r668, %r663, %r664, 18;
	mov.b64 	%rd1039, {%r668, %r667};
	xor.b64  	%rd1040, %rd1039, %rd1038;
	shf.l.wrap.b32 	%r669, %r663, %r664, 23;
	shf.l.wrap.b32 	%r670, %r664, %r663, 23;
	mov.b64 	%rd1041, {%r670, %r669};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	xor.b64  	%rd1043, %rd1002, %rd978;
	and.b64  	%rd1044, %rd1026, %rd1043;
	xor.b64  	%rd1045, %rd1044, %rd978;
	add.s64 	%rd1046, %rd954, %rd677;
	add.s64 	%rd1047, %rd1046, %rd50;
	add.s64 	%rd1048, %rd1047, %rd1045;
	add.s64 	%rd1049, %rd1048, %rd1042;
	add.s64 	%rd1050, %rd1049, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd1037;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 28;
	shf.r.wrap.b32 	%r674, %r671, %r672, 28;
	mov.b64 	%rd1051, {%r674, %r673};
	shf.l.wrap.b32 	%r675, %r671, %r672, 30;
	shf.l.wrap.b32 	%r676, %r672, %r671, 30;
	mov.b64 	%rd1052, {%r676, %r675};
	xor.b64  	%rd1053, %rd1052, %rd1051;
	shf.l.wrap.b32 	%r677, %r671, %r672, 25;
	shf.l.wrap.b32 	%r678, %r672, %r671, 25;
	mov.b64 	%rd1054, {%r678, %r677};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	xor.b64  	%rd1056, %rd1037, %rd989;
	xor.b64  	%rd1057, %rd1037, %rd1013;
	and.b64  	%rd1058, %rd1057, %rd1056;
	xor.b64  	%rd1059, %rd1058, %rd1037;
	add.s64 	%rd1060, %rd1049, %rd1059;
	add.s64 	%rd1061, %rd1060, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd664;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 19;
	shf.r.wrap.b32 	%r682, %r679, %r680, 19;
	mov.b64 	%rd1062, {%r682, %r681};
	shf.l.wrap.b32 	%r683, %r679, %r680, 3;
	shf.l.wrap.b32 	%r684, %r680, %r679, 3;
	mov.b64 	%rd1063, {%r684, %r683};
	shr.u64 	%rd1064, %rd664, 6;
	xor.b64  	%rd1065, %rd1062, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd1063;
	shf.r.wrap.b32 	%r685, %r318, %r317, 1;
	shf.r.wrap.b32 	%r686, %r317, %r318, 1;
	mov.b64 	%rd1067, {%r686, %r685};
	shf.r.wrap.b32 	%r687, %r318, %r317, 8;
	shf.r.wrap.b32 	%r688, %r317, %r318, 8;
	mov.b64 	%rd1068, {%r688, %r687};
	shr.u64 	%rd1069, %rd545, 7;
	xor.b64  	%rd1070, %rd1067, %rd1069;
	xor.b64  	%rd1071, %rd1070, %rd1068;
	add.s64 	%rd1072, %rd629, %rd538;
	add.s64 	%rd1073, %rd1072, %rd1066;
	add.s64 	%rd1074, %rd1073, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd677;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 19;
	shf.r.wrap.b32 	%r692, %r689, %r690, 19;
	mov.b64 	%rd1075, {%r692, %r691};
	shf.l.wrap.b32 	%r693, %r689, %r690, 3;
	shf.l.wrap.b32 	%r694, %r690, %r689, 3;
	mov.b64 	%rd1076, {%r694, %r693};
	shr.u64 	%rd1077, %rd677, 6;
	xor.b64  	%rd1078, %rd1075, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1076;
	shf.r.wrap.b32 	%r695, %r330, %r329, 1;
	shf.r.wrap.b32 	%r696, %r329, %r330, 1;
	mov.b64 	%rd1080, {%r696, %r695};
	shf.r.wrap.b32 	%r697, %r330, %r329, 8;
	shf.r.wrap.b32 	%r698, %r329, %r330, 8;
	mov.b64 	%rd1081, {%r698, %r697};
	shr.u64 	%rd1082, %rd557, 7;
	xor.b64  	%rd1083, %rd1080, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1081;
	add.s64 	%rd1085, %rd636, %rd545;
	add.s64 	%rd1086, %rd1085, %rd1079;
	add.s64 	%rd1087, %rd1086, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd1074;
	}
	shf.r.wrap.b32 	%r701, %r700, %r699, 19;
	shf.r.wrap.b32 	%r702, %r699, %r700, 19;
	mov.b64 	%rd1088, {%r702, %r701};
	shf.l.wrap.b32 	%r703, %r699, %r700, 3;
	shf.l.wrap.b32 	%r704, %r700, %r699, 3;
	mov.b64 	%rd1089, {%r704, %r703};
	shr.u64 	%rd1090, %rd1074, 6;
	xor.b64  	%rd1091, %rd1088, %rd1090;
	xor.b64  	%rd1092, %rd1091, %rd1089;
	shf.r.wrap.b32 	%r705, %r342, %r341, 1;
	shf.r.wrap.b32 	%r706, %r341, %r342, 1;
	mov.b64 	%rd1093, {%r706, %r705};
	shf.r.wrap.b32 	%r707, %r342, %r341, 8;
	shf.r.wrap.b32 	%r708, %r341, %r342, 8;
	mov.b64 	%rd1094, {%r708, %r707};
	shr.u64 	%rd1095, %rd569, 7;
	xor.b64  	%rd1096, %rd1093, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1094;
	add.s64 	%rd1098, %rd643, %rd557;
	add.s64 	%rd1099, %rd1098, %rd1092;
	add.s64 	%rd1100, %rd1099, %rd1097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1087;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 19;
	shf.r.wrap.b32 	%r712, %r709, %r710, 19;
	mov.b64 	%rd1101, {%r712, %r711};
	shf.l.wrap.b32 	%r713, %r709, %r710, 3;
	shf.l.wrap.b32 	%r714, %r710, %r709, 3;
	mov.b64 	%rd1102, {%r714, %r713};
	shr.u64 	%rd1103, %rd1087, 6;
	xor.b64  	%rd1104, %rd1101, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1102;
	shf.r.wrap.b32 	%r715, %r354, %r353, 1;
	shf.r.wrap.b32 	%r716, %r353, %r354, 1;
	mov.b64 	%rd1106, {%r716, %r715};
	shf.r.wrap.b32 	%r717, %r354, %r353, 8;
	shf.r.wrap.b32 	%r718, %r353, %r354, 8;
	mov.b64 	%rd1107, {%r718, %r717};
	shr.u64 	%rd1108, %rd581, 7;
	xor.b64  	%rd1109, %rd1106, %rd1108;
	xor.b64  	%rd1110, %rd1109, %rd1107;
	add.s64 	%rd1111, %rd650, %rd569;
	add.s64 	%rd1112, %rd1111, %rd1105;
	add.s64 	%rd1113, %rd1112, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r719,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd1100;
	}
	shf.r.wrap.b32 	%r721, %r720, %r719, 19;
	shf.r.wrap.b32 	%r722, %r719, %r720, 19;
	mov.b64 	%rd1114, {%r722, %r721};
	shf.l.wrap.b32 	%r723, %r719, %r720, 3;
	shf.l.wrap.b32 	%r724, %r720, %r719, 3;
	mov.b64 	%rd1115, {%r724, %r723};
	shr.u64 	%rd1116, %rd1100, 6;
	xor.b64  	%rd1117, %rd1114, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1115;
	shf.r.wrap.b32 	%r725, %r366, %r365, 1;
	shf.r.wrap.b32 	%r726, %r365, %r366, 1;
	mov.b64 	%rd1119, {%r726, %r725};
	shf.r.wrap.b32 	%r727, %r366, %r365, 8;
	shf.r.wrap.b32 	%r728, %r365, %r366, 8;
	mov.b64 	%rd1120, {%r728, %r727};
	shr.u64 	%rd1121, %rd593, 7;
	xor.b64  	%rd1122, %rd1119, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1120;
	add.s64 	%rd1124, %rd657, %rd581;
	add.s64 	%rd1125, %rd1124, %rd1118;
	add.s64 	%rd1126, %rd1125, %rd1123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1113;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 19;
	shf.r.wrap.b32 	%r732, %r729, %r730, 19;
	mov.b64 	%rd1127, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 3;
	shf.l.wrap.b32 	%r734, %r730, %r729, 3;
	mov.b64 	%rd1128, {%r734, %r733};
	shr.u64 	%rd1129, %rd1113, 6;
	xor.b64  	%rd1130, %rd1127, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1128;
	shf.r.wrap.b32 	%r735, %r372, %r371, 1;
	shf.r.wrap.b32 	%r736, %r371, %r372, 1;
	mov.b64 	%rd1132, {%r736, %r735};
	shf.r.wrap.b32 	%r737, %r372, %r371, 8;
	shf.r.wrap.b32 	%r738, %r371, %r372, 8;
	mov.b64 	%rd1133, {%r738, %r737};
	shr.u64 	%rd1134, %rd606, 7;
	xor.b64  	%rd1135, %rd1132, %rd1134;
	xor.b64  	%rd1136, %rd1135, %rd1133;
	add.s64 	%rd1137, %rd664, %rd593;
	add.s64 	%rd1138, %rd1137, %rd1131;
	add.s64 	%rd1139, %rd1138, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd1126;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 19;
	shf.r.wrap.b32 	%r742, %r739, %r740, 19;
	mov.b64 	%rd1140, {%r742, %r741};
	shf.l.wrap.b32 	%r743, %r739, %r740, 3;
	shf.l.wrap.b32 	%r744, %r740, %r739, 3;
	mov.b64 	%rd1141, {%r744, %r743};
	shr.u64 	%rd1142, %rd1126, 6;
	xor.b64  	%rd1143, %rd1140, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1141;
	shf.r.wrap.b32 	%r745, %r378, %r377, 1;
	shf.r.wrap.b32 	%r746, %r377, %r378, 1;
	mov.b64 	%rd1145, {%r746, %r745};
	shf.r.wrap.b32 	%r747, %r378, %r377, 8;
	shf.r.wrap.b32 	%r748, %r377, %r378, 8;
	mov.b64 	%rd1146, {%r748, %r747};
	shr.u64 	%rd1147, %rd614, 7;
	xor.b64  	%rd1148, %rd1145, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1146;
	add.s64 	%rd1150, %rd677, %rd606;
	add.s64 	%rd1151, %rd1150, %rd1144;
	add.s64 	%rd1152, %rd1151, %rd1149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd1139;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 19;
	shf.r.wrap.b32 	%r752, %r749, %r750, 19;
	mov.b64 	%rd1153, {%r752, %r751};
	shf.l.wrap.b32 	%r753, %r749, %r750, 3;
	shf.l.wrap.b32 	%r754, %r750, %r749, 3;
	mov.b64 	%rd1154, {%r754, %r753};
	shr.u64 	%rd1155, %rd1139, 6;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	shf.r.wrap.b32 	%r755, %r384, %r383, 1;
	shf.r.wrap.b32 	%r756, %r383, %r384, 1;
	mov.b64 	%rd1158, {%r756, %r755};
	shf.r.wrap.b32 	%r757, %r384, %r383, 8;
	shf.r.wrap.b32 	%r758, %r383, %r384, 8;
	mov.b64 	%rd1159, {%r758, %r757};
	shr.u64 	%rd1160, %rd622, 7;
	xor.b64  	%rd1161, %rd1158, %rd1160;
	xor.b64  	%rd1162, %rd1161, %rd1159;
	add.s64 	%rd1163, %rd1074, %rd614;
	add.s64 	%rd1164, %rd1163, %rd1157;
	add.s64 	%rd1165, %rd1164, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r759,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r760}, %rd1152;
	}
	shf.r.wrap.b32 	%r761, %r760, %r759, 19;
	shf.r.wrap.b32 	%r762, %r759, %r760, 19;
	mov.b64 	%rd1166, {%r762, %r761};
	shf.l.wrap.b32 	%r763, %r759, %r760, 3;
	shf.l.wrap.b32 	%r764, %r760, %r759, 3;
	mov.b64 	%rd1167, {%r764, %r763};
	shr.u64 	%rd1168, %rd1152, 6;
	xor.b64  	%rd1169, %rd1166, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1167;
	shf.r.wrap.b32 	%r765, %r390, %r389, 1;
	shf.r.wrap.b32 	%r766, %r389, %r390, 1;
	mov.b64 	%rd1171, {%r766, %r765};
	shf.r.wrap.b32 	%r767, %r390, %r389, 8;
	shf.r.wrap.b32 	%r768, %r389, %r390, 8;
	mov.b64 	%rd1172, {%r768, %r767};
	shr.u64 	%rd1173, %rd629, 7;
	xor.b64  	%rd1174, %rd1171, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1172;
	add.s64 	%rd1176, %rd1087, %rd622;
	add.s64 	%rd1177, %rd1176, %rd1170;
	add.s64 	%rd1178, %rd1177, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd1165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd1165;
	}
	shf.r.wrap.b32 	%r771, %r770, %r769, 19;
	shf.r.wrap.b32 	%r772, %r769, %r770, 19;
	mov.b64 	%rd1179, {%r772, %r771};
	shf.l.wrap.b32 	%r773, %r769, %r770, 3;
	shf.l.wrap.b32 	%r774, %r770, %r769, 3;
	mov.b64 	%rd1180, {%r774, %r773};
	shr.u64 	%rd1181, %rd1165, 6;
	xor.b64  	%rd1182, %rd1179, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1180;
	shf.r.wrap.b32 	%r775, %r396, %r395, 1;
	shf.r.wrap.b32 	%r776, %r395, %r396, 1;
	mov.b64 	%rd1184, {%r776, %r775};
	shf.r.wrap.b32 	%r777, %r396, %r395, 8;
	shf.r.wrap.b32 	%r778, %r395, %r396, 8;
	mov.b64 	%rd1185, {%r778, %r777};
	shr.u64 	%rd1186, %rd636, 7;
	xor.b64  	%rd1187, %rd1184, %rd1186;
	xor.b64  	%rd1188, %rd1187, %rd1185;
	add.s64 	%rd1189, %rd1100, %rd629;
	add.s64 	%rd1190, %rd1189, %rd1183;
	add.s64 	%rd1191, %rd1190, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd1178;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 19;
	shf.r.wrap.b32 	%r782, %r779, %r780, 19;
	mov.b64 	%rd1192, {%r782, %r781};
	shf.l.wrap.b32 	%r783, %r779, %r780, 3;
	shf.l.wrap.b32 	%r784, %r780, %r779, 3;
	mov.b64 	%rd1193, {%r784, %r783};
	shr.u64 	%rd1194, %rd1178, 6;
	xor.b64  	%rd1195, %rd1192, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1193;
	shf.r.wrap.b32 	%r785, %r402, %r401, 1;
	shf.r.wrap.b32 	%r786, %r401, %r402, 1;
	mov.b64 	%rd1197, {%r786, %r785};
	shf.r.wrap.b32 	%r787, %r402, %r401, 8;
	shf.r.wrap.b32 	%r788, %r401, %r402, 8;
	mov.b64 	%rd1198, {%r788, %r787};
	shr.u64 	%rd1199, %rd643, 7;
	xor.b64  	%rd1200, %rd1197, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1198;
	add.s64 	%rd1202, %rd1113, %rd636;
	add.s64 	%rd1203, %rd1202, %rd1196;
	add.s64 	%rd1204, %rd1203, %rd1201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd1191;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 19;
	shf.r.wrap.b32 	%r792, %r789, %r790, 19;
	mov.b64 	%rd1205, {%r792, %r791};
	shf.l.wrap.b32 	%r793, %r789, %r790, 3;
	shf.l.wrap.b32 	%r794, %r790, %r789, 3;
	mov.b64 	%rd1206, {%r794, %r793};
	shr.u64 	%rd1207, %rd1191, 6;
	xor.b64  	%rd1208, %rd1205, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd1206;
	shf.r.wrap.b32 	%r795, %r408, %r407, 1;
	shf.r.wrap.b32 	%r796, %r407, %r408, 1;
	mov.b64 	%rd1210, {%r796, %r795};
	shf.r.wrap.b32 	%r797, %r408, %r407, 8;
	shf.r.wrap.b32 	%r798, %r407, %r408, 8;
	mov.b64 	%rd1211, {%r798, %r797};
	shr.u64 	%rd1212, %rd650, 7;
	xor.b64  	%rd1213, %rd1210, %rd1212;
	xor.b64  	%rd1214, %rd1213, %rd1211;
	add.s64 	%rd1215, %rd1126, %rd643;
	add.s64 	%rd1216, %rd1215, %rd1209;
	add.s64 	%rd1217, %rd1216, %rd1214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r799,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd1204;
	}
	shf.r.wrap.b32 	%r801, %r800, %r799, 19;
	shf.r.wrap.b32 	%r802, %r799, %r800, 19;
	mov.b64 	%rd1218, {%r802, %r801};
	shf.l.wrap.b32 	%r803, %r799, %r800, 3;
	shf.l.wrap.b32 	%r804, %r800, %r799, 3;
	mov.b64 	%rd1219, {%r804, %r803};
	shr.u64 	%rd1220, %rd1204, 6;
	xor.b64  	%rd1221, %rd1218, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1219;
	shf.r.wrap.b32 	%r805, %r414, %r413, 1;
	shf.r.wrap.b32 	%r806, %r413, %r414, 1;
	mov.b64 	%rd1223, {%r806, %r805};
	shf.r.wrap.b32 	%r807, %r414, %r413, 8;
	shf.r.wrap.b32 	%r808, %r413, %r414, 8;
	mov.b64 	%rd1224, {%r808, %r807};
	shr.u64 	%rd1225, %rd657, 7;
	xor.b64  	%rd1226, %rd1223, %rd1225;
	xor.b64  	%rd1227, %rd1226, %rd1224;
	add.s64 	%rd1228, %rd1139, %rd650;
	add.s64 	%rd1229, %rd1228, %rd1222;
	add.s64 	%rd1230, %rd1229, %rd1227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r809,%dummy}, %rd1217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r810}, %rd1217;
	}
	shf.r.wrap.b32 	%r811, %r810, %r809, 19;
	shf.r.wrap.b32 	%r812, %r809, %r810, 19;
	mov.b64 	%rd1231, {%r812, %r811};
	shf.l.wrap.b32 	%r813, %r809, %r810, 3;
	shf.l.wrap.b32 	%r814, %r810, %r809, 3;
	mov.b64 	%rd1232, {%r814, %r813};
	shr.u64 	%rd1233, %rd1217, 6;
	xor.b64  	%rd1234, %rd1231, %rd1233;
	xor.b64  	%rd1235, %rd1234, %rd1232;
	shf.r.wrap.b32 	%r815, %r680, %r679, 1;
	shf.r.wrap.b32 	%r816, %r679, %r680, 1;
	mov.b64 	%rd1236, {%r816, %r815};
	shf.r.wrap.b32 	%r817, %r680, %r679, 8;
	shf.r.wrap.b32 	%r818, %r679, %r680, 8;
	mov.b64 	%rd1237, {%r818, %r817};
	shr.u64 	%rd1238, %rd664, 7;
	xor.b64  	%rd1239, %rd1236, %rd1238;
	xor.b64  	%rd1240, %rd1239, %rd1237;
	add.s64 	%rd1241, %rd1152, %rd657;
	add.s64 	%rd1242, %rd1241, %rd1235;
	add.s64 	%rd1243, %rd1242, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r819,%dummy}, %rd1230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r820}, %rd1230;
	}
	shf.r.wrap.b32 	%r821, %r820, %r819, 19;
	shf.r.wrap.b32 	%r822, %r819, %r820, 19;
	mov.b64 	%rd1244, {%r822, %r821};
	shf.l.wrap.b32 	%r823, %r819, %r820, 3;
	shf.l.wrap.b32 	%r824, %r820, %r819, 3;
	mov.b64 	%rd1245, {%r824, %r823};
	shr.u64 	%rd1246, %rd1230, 6;
	xor.b64  	%rd1247, %rd1244, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1245;
	shf.r.wrap.b32 	%r825, %r690, %r689, 1;
	shf.r.wrap.b32 	%r826, %r689, %r690, 1;
	mov.b64 	%rd1249, {%r826, %r825};
	shf.r.wrap.b32 	%r827, %r690, %r689, 8;
	shf.r.wrap.b32 	%r828, %r689, %r690, 8;
	mov.b64 	%rd1250, {%r828, %r827};
	shr.u64 	%rd1251, %rd677, 7;
	xor.b64  	%rd1252, %rd1249, %rd1251;
	xor.b64  	%rd1253, %rd1252, %rd1250;
	add.s64 	%rd1254, %rd1165, %rd664;
	add.s64 	%rd1255, %rd1254, %rd1248;
	add.s64 	%rd1256, %rd1255, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd1243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd1243;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 19;
	shf.r.wrap.b32 	%r832, %r829, %r830, 19;
	mov.b64 	%rd1257, {%r832, %r831};
	shf.l.wrap.b32 	%r833, %r829, %r830, 3;
	shf.l.wrap.b32 	%r834, %r830, %r829, 3;
	mov.b64 	%rd1258, {%r834, %r833};
	shr.u64 	%rd1259, %rd1243, 6;
	xor.b64  	%rd1260, %rd1257, %rd1259;
	xor.b64  	%rd1261, %rd1260, %rd1258;
	shf.r.wrap.b32 	%r835, %r700, %r699, 1;
	shf.r.wrap.b32 	%r836, %r699, %r700, 1;
	mov.b64 	%rd1262, {%r836, %r835};
	shf.r.wrap.b32 	%r837, %r700, %r699, 8;
	shf.r.wrap.b32 	%r838, %r699, %r700, 8;
	mov.b64 	%rd1263, {%r838, %r837};
	shr.u64 	%rd1264, %rd1074, 7;
	xor.b64  	%rd1265, %rd1262, %rd1264;
	xor.b64  	%rd1266, %rd1265, %rd1263;
	add.s64 	%rd1267, %rd1178, %rd677;
	add.s64 	%rd1268, %rd1267, %rd1261;
	add.s64 	%rd1269, %rd1268, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r839,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r840}, %rd1050;
	}
	shf.r.wrap.b32 	%r841, %r840, %r839, 14;
	shf.r.wrap.b32 	%r842, %r839, %r840, 14;
	mov.b64 	%rd1270, {%r842, %r841};
	shf.r.wrap.b32 	%r843, %r840, %r839, 18;
	shf.r.wrap.b32 	%r844, %r839, %r840, 18;
	mov.b64 	%rd1271, {%r844, %r843};
	xor.b64  	%rd1272, %rd1271, %rd1270;
	shf.l.wrap.b32 	%r845, %r839, %r840, 23;
	shf.l.wrap.b32 	%r846, %r840, %r839, 23;
	mov.b64 	%rd1273, {%r846, %r845};
	xor.b64  	%rd1274, %rd1272, %rd1273;
	xor.b64  	%rd1275, %rd1026, %rd1002;
	and.b64  	%rd1276, %rd1275, %rd1050;
	xor.b64  	%rd1277, %rd1276, %rd1002;
	add.s64 	%rd1278, %rd1277, %rd978;
	add.s64 	%rd1279, %rd1278, %rd1074;
	add.s64 	%rd1280, %rd1279, %rd51;
	add.s64 	%rd1281, %rd1280, %rd1274;
	add.s64 	%rd1282, %rd1281, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r847,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd1061;
	}
	shf.r.wrap.b32 	%r849, %r848, %r847, 28;
	shf.r.wrap.b32 	%r850, %r847, %r848, 28;
	mov.b64 	%rd1283, {%r850, %r849};
	shf.l.wrap.b32 	%r851, %r847, %r848, 30;
	shf.l.wrap.b32 	%r852, %r848, %r847, 30;
	mov.b64 	%rd1284, {%r852, %r851};
	xor.b64  	%rd1285, %rd1284, %rd1283;
	shf.l.wrap.b32 	%r853, %r847, %r848, 25;
	shf.l.wrap.b32 	%r854, %r848, %r847, 25;
	mov.b64 	%rd1286, {%r854, %r853};
	xor.b64  	%rd1287, %rd1285, %rd1286;
	xor.b64  	%rd1288, %rd1061, %rd1013;
	xor.b64  	%rd1289, %rd1061, %rd1037;
	and.b64  	%rd1290, %rd1289, %rd1288;
	xor.b64  	%rd1291, %rd1290, %rd1061;
	add.s64 	%rd1292, %rd1281, %rd1291;
	add.s64 	%rd1293, %rd1292, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd1282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r856}, %rd1282;
	}
	shf.r.wrap.b32 	%r857, %r856, %r855, 14;
	shf.r.wrap.b32 	%r858, %r855, %r856, 14;
	mov.b64 	%rd1294, {%r858, %r857};
	shf.r.wrap.b32 	%r859, %r856, %r855, 18;
	shf.r.wrap.b32 	%r860, %r855, %r856, 18;
	mov.b64 	%rd1295, {%r860, %r859};
	xor.b64  	%rd1296, %rd1295, %rd1294;
	shf.l.wrap.b32 	%r861, %r855, %r856, 23;
	shf.l.wrap.b32 	%r862, %r856, %r855, 23;
	mov.b64 	%rd1297, {%r862, %r861};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	xor.b64  	%rd1299, %rd1050, %rd1026;
	and.b64  	%rd1300, %rd1282, %rd1299;
	xor.b64  	%rd1301, %rd1300, %rd1026;
	add.s64 	%rd1302, %rd1087, %rd1002;
	add.s64 	%rd1303, %rd1302, %rd52;
	add.s64 	%rd1304, %rd1303, %rd1301;
	add.s64 	%rd1305, %rd1304, %rd1298;
	add.s64 	%rd1306, %rd1305, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd1293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd1293;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 28;
	shf.r.wrap.b32 	%r866, %r863, %r864, 28;
	mov.b64 	%rd1307, {%r866, %r865};
	shf.l.wrap.b32 	%r867, %r863, %r864, 30;
	shf.l.wrap.b32 	%r868, %r864, %r863, 30;
	mov.b64 	%rd1308, {%r868, %r867};
	xor.b64  	%rd1309, %rd1308, %rd1307;
	shf.l.wrap.b32 	%r869, %r863, %r864, 25;
	shf.l.wrap.b32 	%r870, %r864, %r863, 25;
	mov.b64 	%rd1310, {%r870, %r869};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	xor.b64  	%rd1312, %rd1293, %rd1037;
	xor.b64  	%rd1313, %rd1293, %rd1061;
	and.b64  	%rd1314, %rd1313, %rd1312;
	xor.b64  	%rd1315, %rd1314, %rd1293;
	add.s64 	%rd1316, %rd1305, %rd1315;
	add.s64 	%rd1317, %rd1316, %rd1311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r871,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd1306;
	}
	shf.r.wrap.b32 	%r873, %r872, %r871, 14;
	shf.r.wrap.b32 	%r874, %r871, %r872, 14;
	mov.b64 	%rd1318, {%r874, %r873};
	shf.r.wrap.b32 	%r875, %r872, %r871, 18;
	shf.r.wrap.b32 	%r876, %r871, %r872, 18;
	mov.b64 	%rd1319, {%r876, %r875};
	xor.b64  	%rd1320, %rd1319, %rd1318;
	shf.l.wrap.b32 	%r877, %r871, %r872, 23;
	shf.l.wrap.b32 	%r878, %r872, %r871, 23;
	mov.b64 	%rd1321, {%r878, %r877};
	xor.b64  	%rd1322, %rd1320, %rd1321;
	xor.b64  	%rd1323, %rd1282, %rd1050;
	and.b64  	%rd1324, %rd1306, %rd1323;
	xor.b64  	%rd1325, %rd1324, %rd1050;
	add.s64 	%rd1326, %rd1100, %rd1026;
	add.s64 	%rd1327, %rd1326, %rd53;
	add.s64 	%rd1328, %rd1327, %rd1325;
	add.s64 	%rd1329, %rd1328, %rd1322;
	add.s64 	%rd1330, %rd1329, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1317;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 28;
	shf.r.wrap.b32 	%r882, %r879, %r880, 28;
	mov.b64 	%rd1331, {%r882, %r881};
	shf.l.wrap.b32 	%r883, %r879, %r880, 30;
	shf.l.wrap.b32 	%r884, %r880, %r879, 30;
	mov.b64 	%rd1332, {%r884, %r883};
	xor.b64  	%rd1333, %rd1332, %rd1331;
	shf.l.wrap.b32 	%r885, %r879, %r880, 25;
	shf.l.wrap.b32 	%r886, %r880, %r879, 25;
	mov.b64 	%rd1334, {%r886, %r885};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	xor.b64  	%rd1336, %rd1317, %rd1061;
	xor.b64  	%rd1337, %rd1317, %rd1293;
	and.b64  	%rd1338, %rd1337, %rd1336;
	xor.b64  	%rd1339, %rd1338, %rd1317;
	add.s64 	%rd1340, %rd1329, %rd1339;
	add.s64 	%rd1341, %rd1340, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1330;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 14;
	shf.r.wrap.b32 	%r890, %r887, %r888, 14;
	mov.b64 	%rd1342, {%r890, %r889};
	shf.r.wrap.b32 	%r891, %r888, %r887, 18;
	shf.r.wrap.b32 	%r892, %r887, %r888, 18;
	mov.b64 	%rd1343, {%r892, %r891};
	xor.b64  	%rd1344, %rd1343, %rd1342;
	shf.l.wrap.b32 	%r893, %r887, %r888, 23;
	shf.l.wrap.b32 	%r894, %r888, %r887, 23;
	mov.b64 	%rd1345, {%r894, %r893};
	xor.b64  	%rd1346, %rd1344, %rd1345;
	xor.b64  	%rd1347, %rd1306, %rd1282;
	and.b64  	%rd1348, %rd1330, %rd1347;
	xor.b64  	%rd1349, %rd1348, %rd1282;
	add.s64 	%rd1350, %rd1113, %rd1050;
	add.s64 	%rd1351, %rd1350, %rd54;
	add.s64 	%rd1352, %rd1351, %rd1349;
	add.s64 	%rd1353, %rd1352, %rd1346;
	add.s64 	%rd1354, %rd1353, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd1341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd1341;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 28;
	shf.r.wrap.b32 	%r898, %r895, %r896, 28;
	mov.b64 	%rd1355, {%r898, %r897};
	shf.l.wrap.b32 	%r899, %r895, %r896, 30;
	shf.l.wrap.b32 	%r900, %r896, %r895, 30;
	mov.b64 	%rd1356, {%r900, %r899};
	xor.b64  	%rd1357, %rd1356, %rd1355;
	shf.l.wrap.b32 	%r901, %r895, %r896, 25;
	shf.l.wrap.b32 	%r902, %r896, %r895, 25;
	mov.b64 	%rd1358, {%r902, %r901};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	xor.b64  	%rd1360, %rd1341, %rd1293;
	xor.b64  	%rd1361, %rd1341, %rd1317;
	and.b64  	%rd1362, %rd1361, %rd1360;
	xor.b64  	%rd1363, %rd1362, %rd1341;
	add.s64 	%rd1364, %rd1353, %rd1363;
	add.s64 	%rd1365, %rd1364, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd1354;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 14;
	shf.r.wrap.b32 	%r906, %r903, %r904, 14;
	mov.b64 	%rd1366, {%r906, %r905};
	shf.r.wrap.b32 	%r907, %r904, %r903, 18;
	shf.r.wrap.b32 	%r908, %r903, %r904, 18;
	mov.b64 	%rd1367, {%r908, %r907};
	xor.b64  	%rd1368, %rd1367, %rd1366;
	shf.l.wrap.b32 	%r909, %r903, %r904, 23;
	shf.l.wrap.b32 	%r910, %r904, %r903, 23;
	mov.b64 	%rd1369, {%r910, %r909};
	xor.b64  	%rd1370, %rd1368, %rd1369;
	xor.b64  	%rd1371, %rd1330, %rd1306;
	and.b64  	%rd1372, %rd1354, %rd1371;
	xor.b64  	%rd1373, %rd1372, %rd1306;
	add.s64 	%rd1374, %rd1282, %rd1126;
	add.s64 	%rd1375, %rd1374, %rd55;
	add.s64 	%rd1376, %rd1375, %rd1373;
	add.s64 	%rd1377, %rd1376, %rd1370;
	add.s64 	%rd1378, %rd1377, %rd1293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd1365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd1365;
	}
	shf.r.wrap.b32 	%r913, %r912, %r911, 28;
	shf.r.wrap.b32 	%r914, %r911, %r912, 28;
	mov.b64 	%rd1379, {%r914, %r913};
	shf.l.wrap.b32 	%r915, %r911, %r912, 30;
	shf.l.wrap.b32 	%r916, %r912, %r911, 30;
	mov.b64 	%rd1380, {%r916, %r915};
	xor.b64  	%rd1381, %rd1380, %rd1379;
	shf.l.wrap.b32 	%r917, %r911, %r912, 25;
	shf.l.wrap.b32 	%r918, %r912, %r911, 25;
	mov.b64 	%rd1382, {%r918, %r917};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	xor.b64  	%rd1384, %rd1365, %rd1317;
	xor.b64  	%rd1385, %rd1365, %rd1341;
	and.b64  	%rd1386, %rd1385, %rd1384;
	xor.b64  	%rd1387, %rd1386, %rd1365;
	add.s64 	%rd1388, %rd1377, %rd1387;
	add.s64 	%rd1389, %rd1388, %rd1383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd1378;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 14;
	shf.r.wrap.b32 	%r922, %r919, %r920, 14;
	mov.b64 	%rd1390, {%r922, %r921};
	shf.r.wrap.b32 	%r923, %r920, %r919, 18;
	shf.r.wrap.b32 	%r924, %r919, %r920, 18;
	mov.b64 	%rd1391, {%r924, %r923};
	xor.b64  	%rd1392, %rd1391, %rd1390;
	shf.l.wrap.b32 	%r925, %r919, %r920, 23;
	shf.l.wrap.b32 	%r926, %r920, %r919, 23;
	mov.b64 	%rd1393, {%r926, %r925};
	xor.b64  	%rd1394, %rd1392, %rd1393;
	xor.b64  	%rd1395, %rd1354, %rd1330;
	and.b64  	%rd1396, %rd1378, %rd1395;
	xor.b64  	%rd1397, %rd1396, %rd1330;
	add.s64 	%rd1398, %rd1306, %rd1139;
	add.s64 	%rd1399, %rd1398, %rd56;
	add.s64 	%rd1400, %rd1399, %rd1397;
	add.s64 	%rd1401, %rd1400, %rd1394;
	add.s64 	%rd1402, %rd1401, %rd1317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r927,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd1389;
	}
	shf.r.wrap.b32 	%r929, %r928, %r927, 28;
	shf.r.wrap.b32 	%r930, %r927, %r928, 28;
	mov.b64 	%rd1403, {%r930, %r929};
	shf.l.wrap.b32 	%r931, %r927, %r928, 30;
	shf.l.wrap.b32 	%r932, %r928, %r927, 30;
	mov.b64 	%rd1404, {%r932, %r931};
	xor.b64  	%rd1405, %rd1404, %rd1403;
	shf.l.wrap.b32 	%r933, %r927, %r928, 25;
	shf.l.wrap.b32 	%r934, %r928, %r927, 25;
	mov.b64 	%rd1406, {%r934, %r933};
	xor.b64  	%rd1407, %rd1405, %rd1406;
	xor.b64  	%rd1408, %rd1389, %rd1341;
	xor.b64  	%rd1409, %rd1389, %rd1365;
	and.b64  	%rd1410, %rd1409, %rd1408;
	xor.b64  	%rd1411, %rd1410, %rd1389;
	add.s64 	%rd1412, %rd1401, %rd1411;
	add.s64 	%rd1413, %rd1412, %rd1407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r935,%dummy}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r936}, %rd1402;
	}
	shf.r.wrap.b32 	%r937, %r936, %r935, 14;
	shf.r.wrap.b32 	%r938, %r935, %r936, 14;
	mov.b64 	%rd1414, {%r938, %r937};
	shf.r.wrap.b32 	%r939, %r936, %r935, 18;
	shf.r.wrap.b32 	%r940, %r935, %r936, 18;
	mov.b64 	%rd1415, {%r940, %r939};
	xor.b64  	%rd1416, %rd1415, %rd1414;
	shf.l.wrap.b32 	%r941, %r935, %r936, 23;
	shf.l.wrap.b32 	%r942, %r936, %r935, 23;
	mov.b64 	%rd1417, {%r942, %r941};
	xor.b64  	%rd1418, %rd1416, %rd1417;
	xor.b64  	%rd1419, %rd1378, %rd1354;
	and.b64  	%rd1420, %rd1402, %rd1419;
	xor.b64  	%rd1421, %rd1420, %rd1354;
	add.s64 	%rd1422, %rd1330, %rd1152;
	add.s64 	%rd1423, %rd1422, %rd57;
	add.s64 	%rd1424, %rd1423, %rd1421;
	add.s64 	%rd1425, %rd1424, %rd1418;
	add.s64 	%rd1426, %rd1425, %rd1341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r943,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r944}, %rd1413;
	}
	shf.r.wrap.b32 	%r945, %r944, %r943, 28;
	shf.r.wrap.b32 	%r946, %r943, %r944, 28;
	mov.b64 	%rd1427, {%r946, %r945};
	shf.l.wrap.b32 	%r947, %r943, %r944, 30;
	shf.l.wrap.b32 	%r948, %r944, %r943, 30;
	mov.b64 	%rd1428, {%r948, %r947};
	xor.b64  	%rd1429, %rd1428, %rd1427;
	shf.l.wrap.b32 	%r949, %r943, %r944, 25;
	shf.l.wrap.b32 	%r950, %r944, %r943, 25;
	mov.b64 	%rd1430, {%r950, %r949};
	xor.b64  	%rd1431, %rd1429, %rd1430;
	xor.b64  	%rd1432, %rd1413, %rd1365;
	xor.b64  	%rd1433, %rd1413, %rd1389;
	and.b64  	%rd1434, %rd1433, %rd1432;
	xor.b64  	%rd1435, %rd1434, %rd1413;
	add.s64 	%rd1436, %rd1425, %rd1435;
	add.s64 	%rd1437, %rd1436, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r951,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r952}, %rd1426;
	}
	shf.r.wrap.b32 	%r953, %r952, %r951, 14;
	shf.r.wrap.b32 	%r954, %r951, %r952, 14;
	mov.b64 	%rd1438, {%r954, %r953};
	shf.r.wrap.b32 	%r955, %r952, %r951, 18;
	shf.r.wrap.b32 	%r956, %r951, %r952, 18;
	mov.b64 	%rd1439, {%r956, %r955};
	xor.b64  	%rd1440, %rd1439, %rd1438;
	shf.l.wrap.b32 	%r957, %r951, %r952, 23;
	shf.l.wrap.b32 	%r958, %r952, %r951, 23;
	mov.b64 	%rd1441, {%r958, %r957};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	xor.b64  	%rd1443, %rd1402, %rd1378;
	and.b64  	%rd1444, %rd1426, %rd1443;
	xor.b64  	%rd1445, %rd1444, %rd1378;
	add.s64 	%rd1446, %rd1354, %rd1165;
	add.s64 	%rd1447, %rd1446, %rd58;
	add.s64 	%rd1448, %rd1447, %rd1445;
	add.s64 	%rd1449, %rd1448, %rd1442;
	add.s64 	%rd1450, %rd1449, %rd1365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd1437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd1437;
	}
	shf.r.wrap.b32 	%r961, %r960, %r959, 28;
	shf.r.wrap.b32 	%r962, %r959, %r960, 28;
	mov.b64 	%rd1451, {%r962, %r961};
	shf.l.wrap.b32 	%r963, %r959, %r960, 30;
	shf.l.wrap.b32 	%r964, %r960, %r959, 30;
	mov.b64 	%rd1452, {%r964, %r963};
	xor.b64  	%rd1453, %rd1452, %rd1451;
	shf.l.wrap.b32 	%r965, %r959, %r960, 25;
	shf.l.wrap.b32 	%r966, %r960, %r959, 25;
	mov.b64 	%rd1454, {%r966, %r965};
	xor.b64  	%rd1455, %rd1453, %rd1454;
	xor.b64  	%rd1456, %rd1437, %rd1389;
	xor.b64  	%rd1457, %rd1437, %rd1413;
	and.b64  	%rd1458, %rd1457, %rd1456;
	xor.b64  	%rd1459, %rd1458, %rd1437;
	add.s64 	%rd1460, %rd1449, %rd1459;
	add.s64 	%rd1461, %rd1460, %rd1455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd1450;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 14;
	shf.r.wrap.b32 	%r970, %r967, %r968, 14;
	mov.b64 	%rd1462, {%r970, %r969};
	shf.r.wrap.b32 	%r971, %r968, %r967, 18;
	shf.r.wrap.b32 	%r972, %r967, %r968, 18;
	mov.b64 	%rd1463, {%r972, %r971};
	xor.b64  	%rd1464, %rd1463, %rd1462;
	shf.l.wrap.b32 	%r973, %r967, %r968, 23;
	shf.l.wrap.b32 	%r974, %r968, %r967, 23;
	mov.b64 	%rd1465, {%r974, %r973};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	xor.b64  	%rd1467, %rd1426, %rd1402;
	and.b64  	%rd1468, %rd1450, %rd1467;
	xor.b64  	%rd1469, %rd1468, %rd1402;
	add.s64 	%rd1470, %rd1378, %rd1178;
	add.s64 	%rd1471, %rd1470, %rd59;
	add.s64 	%rd1472, %rd1471, %rd1469;
	add.s64 	%rd1473, %rd1472, %rd1466;
	add.s64 	%rd1474, %rd1473, %rd1389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1461;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 28;
	shf.r.wrap.b32 	%r978, %r975, %r976, 28;
	mov.b64 	%rd1475, {%r978, %r977};
	shf.l.wrap.b32 	%r979, %r975, %r976, 30;
	shf.l.wrap.b32 	%r980, %r976, %r975, 30;
	mov.b64 	%rd1476, {%r980, %r979};
	xor.b64  	%rd1477, %rd1476, %rd1475;
	shf.l.wrap.b32 	%r981, %r975, %r976, 25;
	shf.l.wrap.b32 	%r982, %r976, %r975, 25;
	mov.b64 	%rd1478, {%r982, %r981};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	xor.b64  	%rd1480, %rd1461, %rd1413;
	xor.b64  	%rd1481, %rd1461, %rd1437;
	and.b64  	%rd1482, %rd1481, %rd1480;
	xor.b64  	%rd1483, %rd1482, %rd1461;
	add.s64 	%rd1484, %rd1473, %rd1483;
	add.s64 	%rd1485, %rd1484, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1474;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 14;
	shf.r.wrap.b32 	%r986, %r983, %r984, 14;
	mov.b64 	%rd1486, {%r986, %r985};
	shf.r.wrap.b32 	%r987, %r984, %r983, 18;
	shf.r.wrap.b32 	%r988, %r983, %r984, 18;
	mov.b64 	%rd1487, {%r988, %r987};
	xor.b64  	%rd1488, %rd1487, %rd1486;
	shf.l.wrap.b32 	%r989, %r983, %r984, 23;
	shf.l.wrap.b32 	%r990, %r984, %r983, 23;
	mov.b64 	%rd1489, {%r990, %r989};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	xor.b64  	%rd1491, %rd1450, %rd1426;
	and.b64  	%rd1492, %rd1474, %rd1491;
	xor.b64  	%rd1493, %rd1492, %rd1426;
	add.s64 	%rd1494, %rd1402, %rd1191;
	add.s64 	%rd1495, %rd1494, %rd60;
	add.s64 	%rd1496, %rd1495, %rd1493;
	add.s64 	%rd1497, %rd1496, %rd1490;
	add.s64 	%rd1498, %rd1497, %rd1413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1485;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 28;
	shf.r.wrap.b32 	%r994, %r991, %r992, 28;
	mov.b64 	%rd1499, {%r994, %r993};
	shf.l.wrap.b32 	%r995, %r991, %r992, 30;
	shf.l.wrap.b32 	%r996, %r992, %r991, 30;
	mov.b64 	%rd1500, {%r996, %r995};
	xor.b64  	%rd1501, %rd1500, %rd1499;
	shf.l.wrap.b32 	%r997, %r991, %r992, 25;
	shf.l.wrap.b32 	%r998, %r992, %r991, 25;
	mov.b64 	%rd1502, {%r998, %r997};
	xor.b64  	%rd1503, %rd1501, %rd1502;
	xor.b64  	%rd1504, %rd1485, %rd1437;
	xor.b64  	%rd1505, %rd1485, %rd1461;
	and.b64  	%rd1506, %rd1505, %rd1504;
	xor.b64  	%rd1507, %rd1506, %rd1485;
	add.s64 	%rd1508, %rd1497, %rd1507;
	add.s64 	%rd1509, %rd1508, %rd1503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd1498;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 14;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 14;
	mov.b64 	%rd1510, {%r1002, %r1001};
	shf.r.wrap.b32 	%r1003, %r1000, %r999, 18;
	shf.r.wrap.b32 	%r1004, %r999, %r1000, 18;
	mov.b64 	%rd1511, {%r1004, %r1003};
	xor.b64  	%rd1512, %rd1511, %rd1510;
	shf.l.wrap.b32 	%r1005, %r999, %r1000, 23;
	shf.l.wrap.b32 	%r1006, %r1000, %r999, 23;
	mov.b64 	%rd1513, {%r1006, %r1005};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	xor.b64  	%rd1515, %rd1474, %rd1450;
	and.b64  	%rd1516, %rd1498, %rd1515;
	xor.b64  	%rd1517, %rd1516, %rd1450;
	add.s64 	%rd1518, %rd1426, %rd1204;
	add.s64 	%rd1519, %rd1518, %rd61;
	add.s64 	%rd1520, %rd1519, %rd1517;
	add.s64 	%rd1521, %rd1520, %rd1514;
	add.s64 	%rd1522, %rd1521, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd1509;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 28;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 28;
	mov.b64 	%rd1523, {%r1010, %r1009};
	shf.l.wrap.b32 	%r1011, %r1007, %r1008, 30;
	shf.l.wrap.b32 	%r1012, %r1008, %r1007, 30;
	mov.b64 	%rd1524, {%r1012, %r1011};
	xor.b64  	%rd1525, %rd1524, %rd1523;
	shf.l.wrap.b32 	%r1013, %r1007, %r1008, 25;
	shf.l.wrap.b32 	%r1014, %r1008, %r1007, 25;
	mov.b64 	%rd1526, {%r1014, %r1013};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	xor.b64  	%rd1528, %rd1509, %rd1461;
	xor.b64  	%rd1529, %rd1509, %rd1485;
	and.b64  	%rd1530, %rd1529, %rd1528;
	xor.b64  	%rd1531, %rd1530, %rd1509;
	add.s64 	%rd1532, %rd1521, %rd1531;
	add.s64 	%rd1533, %rd1532, %rd1527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd1522;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 14;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 14;
	mov.b64 	%rd1534, {%r1018, %r1017};
	shf.r.wrap.b32 	%r1019, %r1016, %r1015, 18;
	shf.r.wrap.b32 	%r1020, %r1015, %r1016, 18;
	mov.b64 	%rd1535, {%r1020, %r1019};
	xor.b64  	%rd1536, %rd1535, %rd1534;
	shf.l.wrap.b32 	%r1021, %r1015, %r1016, 23;
	shf.l.wrap.b32 	%r1022, %r1016, %r1015, 23;
	mov.b64 	%rd1537, {%r1022, %r1021};
	xor.b64  	%rd1538, %rd1536, %rd1537;
	xor.b64  	%rd1539, %rd1498, %rd1474;
	and.b64  	%rd1540, %rd1522, %rd1539;
	xor.b64  	%rd1541, %rd1540, %rd1474;
	add.s64 	%rd1542, %rd1450, %rd1217;
	add.s64 	%rd1543, %rd1542, %rd62;
	add.s64 	%rd1544, %rd1543, %rd1541;
	add.s64 	%rd1545, %rd1544, %rd1538;
	add.s64 	%rd1546, %rd1545, %rd1461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd1533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd1533;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 28;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 28;
	mov.b64 	%rd1547, {%r1026, %r1025};
	shf.l.wrap.b32 	%r1027, %r1023, %r1024, 30;
	shf.l.wrap.b32 	%r1028, %r1024, %r1023, 30;
	mov.b64 	%rd1548, {%r1028, %r1027};
	xor.b64  	%rd1549, %rd1548, %rd1547;
	shf.l.wrap.b32 	%r1029, %r1023, %r1024, 25;
	shf.l.wrap.b32 	%r1030, %r1024, %r1023, 25;
	mov.b64 	%rd1550, {%r1030, %r1029};
	xor.b64  	%rd1551, %rd1549, %rd1550;
	xor.b64  	%rd1552, %rd1533, %rd1485;
	xor.b64  	%rd1553, %rd1533, %rd1509;
	and.b64  	%rd1554, %rd1553, %rd1552;
	xor.b64  	%rd1555, %rd1554, %rd1533;
	add.s64 	%rd1556, %rd1545, %rd1555;
	add.s64 	%rd1557, %rd1556, %rd1551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd1546;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 14;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 14;
	mov.b64 	%rd1558, {%r1034, %r1033};
	shf.r.wrap.b32 	%r1035, %r1032, %r1031, 18;
	shf.r.wrap.b32 	%r1036, %r1031, %r1032, 18;
	mov.b64 	%rd1559, {%r1036, %r1035};
	xor.b64  	%rd1560, %rd1559, %rd1558;
	shf.l.wrap.b32 	%r1037, %r1031, %r1032, 23;
	shf.l.wrap.b32 	%r1038, %r1032, %r1031, 23;
	mov.b64 	%rd1561, {%r1038, %r1037};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	xor.b64  	%rd1563, %rd1522, %rd1498;
	and.b64  	%rd1564, %rd1546, %rd1563;
	xor.b64  	%rd1565, %rd1564, %rd1498;
	add.s64 	%rd1566, %rd1474, %rd1230;
	add.s64 	%rd1567, %rd1566, %rd63;
	add.s64 	%rd1568, %rd1567, %rd1565;
	add.s64 	%rd1569, %rd1568, %rd1562;
	add.s64 	%rd1570, %rd1569, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd1557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd1557;
	}
	shf.r.wrap.b32 	%r1041, %r1040, %r1039, 28;
	shf.r.wrap.b32 	%r1042, %r1039, %r1040, 28;
	mov.b64 	%rd1571, {%r1042, %r1041};
	shf.l.wrap.b32 	%r1043, %r1039, %r1040, 30;
	shf.l.wrap.b32 	%r1044, %r1040, %r1039, 30;
	mov.b64 	%rd1572, {%r1044, %r1043};
	xor.b64  	%rd1573, %rd1572, %rd1571;
	shf.l.wrap.b32 	%r1045, %r1039, %r1040, 25;
	shf.l.wrap.b32 	%r1046, %r1040, %r1039, 25;
	mov.b64 	%rd1574, {%r1046, %r1045};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	xor.b64  	%rd1576, %rd1557, %rd1509;
	xor.b64  	%rd1577, %rd1557, %rd1533;
	and.b64  	%rd1578, %rd1577, %rd1576;
	xor.b64  	%rd1579, %rd1578, %rd1557;
	add.s64 	%rd1580, %rd1569, %rd1579;
	add.s64 	%rd1581, %rd1580, %rd1575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd1570;
	}
	shf.r.wrap.b32 	%r1049, %r1048, %r1047, 14;
	shf.r.wrap.b32 	%r1050, %r1047, %r1048, 14;
	mov.b64 	%rd1582, {%r1050, %r1049};
	shf.r.wrap.b32 	%r1051, %r1048, %r1047, 18;
	shf.r.wrap.b32 	%r1052, %r1047, %r1048, 18;
	mov.b64 	%rd1583, {%r1052, %r1051};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r1053, %r1047, %r1048, 23;
	shf.l.wrap.b32 	%r1054, %r1048, %r1047, 23;
	mov.b64 	%rd1585, {%r1054, %r1053};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd1546, %rd1522;
	and.b64  	%rd1588, %rd1570, %rd1587;
	xor.b64  	%rd1589, %rd1588, %rd1522;
	add.s64 	%rd1590, %rd1498, %rd1243;
	add.s64 	%rd1591, %rd1590, %rd64;
	add.s64 	%rd1592, %rd1591, %rd1589;
	add.s64 	%rd1593, %rd1592, %rd1586;
	add.s64 	%rd1594, %rd1593, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd1581;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 28;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 28;
	mov.b64 	%rd1595, {%r1058, %r1057};
	shf.l.wrap.b32 	%r1059, %r1055, %r1056, 30;
	shf.l.wrap.b32 	%r1060, %r1056, %r1055, 30;
	mov.b64 	%rd1596, {%r1060, %r1059};
	xor.b64  	%rd1597, %rd1596, %rd1595;
	shf.l.wrap.b32 	%r1061, %r1055, %r1056, 25;
	shf.l.wrap.b32 	%r1062, %r1056, %r1055, 25;
	mov.b64 	%rd1598, {%r1062, %r1061};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	xor.b64  	%rd1600, %rd1581, %rd1533;
	xor.b64  	%rd1601, %rd1581, %rd1557;
	and.b64  	%rd1602, %rd1601, %rd1600;
	xor.b64  	%rd1603, %rd1602, %rd1581;
	add.s64 	%rd1604, %rd1593, %rd1603;
	add.s64 	%rd1605, %rd1604, %rd1599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1594;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 14;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 14;
	mov.b64 	%rd1606, {%r1066, %r1065};
	shf.r.wrap.b32 	%r1067, %r1064, %r1063, 18;
	shf.r.wrap.b32 	%r1068, %r1063, %r1064, 18;
	mov.b64 	%rd1607, {%r1068, %r1067};
	xor.b64  	%rd1608, %rd1607, %rd1606;
	shf.l.wrap.b32 	%r1069, %r1063, %r1064, 23;
	shf.l.wrap.b32 	%r1070, %r1064, %r1063, 23;
	mov.b64 	%rd1609, {%r1070, %r1069};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	xor.b64  	%rd1611, %rd1570, %rd1546;
	and.b64  	%rd1612, %rd1594, %rd1611;
	xor.b64  	%rd1613, %rd1612, %rd1546;
	add.s64 	%rd1614, %rd1522, %rd1256;
	add.s64 	%rd1615, %rd1614, %rd65;
	add.s64 	%rd1616, %rd1615, %rd1613;
	add.s64 	%rd1617, %rd1616, %rd1610;
	add.s64 	%rd1618, %rd1617, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1071,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1072}, %rd1605;
	}
	shf.r.wrap.b32 	%r1073, %r1072, %r1071, 28;
	shf.r.wrap.b32 	%r1074, %r1071, %r1072, 28;
	mov.b64 	%rd1619, {%r1074, %r1073};
	shf.l.wrap.b32 	%r1075, %r1071, %r1072, 30;
	shf.l.wrap.b32 	%r1076, %r1072, %r1071, 30;
	mov.b64 	%rd1620, {%r1076, %r1075};
	xor.b64  	%rd1621, %rd1620, %rd1619;
	shf.l.wrap.b32 	%r1077, %r1071, %r1072, 25;
	shf.l.wrap.b32 	%r1078, %r1072, %r1071, 25;
	mov.b64 	%rd1622, {%r1078, %r1077};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	xor.b64  	%rd1624, %rd1605, %rd1557;
	xor.b64  	%rd1625, %rd1605, %rd1581;
	and.b64  	%rd1626, %rd1625, %rd1624;
	xor.b64  	%rd1627, %rd1626, %rd1605;
	add.s64 	%rd1628, %rd1617, %rd1627;
	add.s64 	%rd1629, %rd1628, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1618;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 14;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 14;
	mov.b64 	%rd1630, {%r1082, %r1081};
	shf.r.wrap.b32 	%r1083, %r1080, %r1079, 18;
	shf.r.wrap.b32 	%r1084, %r1079, %r1080, 18;
	mov.b64 	%rd1631, {%r1084, %r1083};
	xor.b64  	%rd1632, %rd1631, %rd1630;
	shf.l.wrap.b32 	%r1085, %r1079, %r1080, 23;
	shf.l.wrap.b32 	%r1086, %r1080, %r1079, 23;
	mov.b64 	%rd1633, {%r1086, %r1085};
	xor.b64  	%rd1634, %rd1632, %rd1633;
	xor.b64  	%rd1635, %rd1594, %rd1570;
	and.b64  	%rd1636, %rd1618, %rd1635;
	xor.b64  	%rd1637, %rd1636, %rd1570;
	add.s64 	%rd1638, %rd1546, %rd1269;
	add.s64 	%rd1639, %rd1638, %rd66;
	add.s64 	%rd1640, %rd1639, %rd1637;
	add.s64 	%rd1641, %rd1640, %rd1634;
	add.s64 	%rd1642, %rd1641, %rd1557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd1629;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 28;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 28;
	mov.b64 	%rd1643, {%r1090, %r1089};
	shf.l.wrap.b32 	%r1091, %r1087, %r1088, 30;
	shf.l.wrap.b32 	%r1092, %r1088, %r1087, 30;
	mov.b64 	%rd1644, {%r1092, %r1091};
	xor.b64  	%rd1645, %rd1644, %rd1643;
	shf.l.wrap.b32 	%r1093, %r1087, %r1088, 25;
	shf.l.wrap.b32 	%r1094, %r1088, %r1087, 25;
	mov.b64 	%rd1646, {%r1094, %r1093};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	xor.b64  	%rd1648, %rd1629, %rd1581;
	xor.b64  	%rd1649, %rd1629, %rd1605;
	and.b64  	%rd1650, %rd1649, %rd1648;
	xor.b64  	%rd1651, %rd1650, %rd1629;
	add.s64 	%rd1652, %rd1641, %rd1651;
	add.s64 	%rd1653, %rd1652, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1256;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 19;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 19;
	mov.b64 	%rd1654, {%r1098, %r1097};
	shf.l.wrap.b32 	%r1099, %r1095, %r1096, 3;
	shf.l.wrap.b32 	%r1100, %r1096, %r1095, 3;
	mov.b64 	%rd1655, {%r1100, %r1099};
	shr.u64 	%rd1656, %rd1256, 6;
	xor.b64  	%rd1657, %rd1654, %rd1656;
	xor.b64  	%rd1658, %rd1657, %rd1655;
	shf.r.wrap.b32 	%r1101, %r710, %r709, 1;
	shf.r.wrap.b32 	%r1102, %r709, %r710, 1;
	mov.b64 	%rd1659, {%r1102, %r1101};
	shf.r.wrap.b32 	%r1103, %r710, %r709, 8;
	shf.r.wrap.b32 	%r1104, %r709, %r710, 8;
	mov.b64 	%rd1660, {%r1104, %r1103};
	shr.u64 	%rd1661, %rd1087, 7;
	xor.b64  	%rd1662, %rd1659, %rd1661;
	xor.b64  	%rd1663, %rd1662, %rd1660;
	add.s64 	%rd1664, %rd1191, %rd1074;
	add.s64 	%rd1665, %rd1664, %rd1658;
	add.s64 	%rd1666, %rd1665, %rd1663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd1269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd1269;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 19;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 19;
	mov.b64 	%rd1667, {%r1108, %r1107};
	shf.l.wrap.b32 	%r1109, %r1105, %r1106, 3;
	shf.l.wrap.b32 	%r1110, %r1106, %r1105, 3;
	mov.b64 	%rd1668, {%r1110, %r1109};
	shr.u64 	%rd1669, %rd1269, 6;
	xor.b64  	%rd1670, %rd1667, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1668;
	shf.r.wrap.b32 	%r1111, %r720, %r719, 1;
	shf.r.wrap.b32 	%r1112, %r719, %r720, 1;
	mov.b64 	%rd1672, {%r1112, %r1111};
	shf.r.wrap.b32 	%r1113, %r720, %r719, 8;
	shf.r.wrap.b32 	%r1114, %r719, %r720, 8;
	mov.b64 	%rd1673, {%r1114, %r1113};
	shr.u64 	%rd1674, %rd1100, 7;
	xor.b64  	%rd1675, %rd1672, %rd1674;
	xor.b64  	%rd1676, %rd1675, %rd1673;
	add.s64 	%rd1677, %rd1204, %rd1087;
	add.s64 	%rd1678, %rd1677, %rd1671;
	add.s64 	%rd1679, %rd1678, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1115,%dummy}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1116}, %rd1666;
	}
	shf.r.wrap.b32 	%r1117, %r1116, %r1115, 19;
	shf.r.wrap.b32 	%r1118, %r1115, %r1116, 19;
	mov.b64 	%rd1680, {%r1118, %r1117};
	shf.l.wrap.b32 	%r1119, %r1115, %r1116, 3;
	shf.l.wrap.b32 	%r1120, %r1116, %r1115, 3;
	mov.b64 	%rd1681, {%r1120, %r1119};
	shr.u64 	%rd1682, %rd1666, 6;
	xor.b64  	%rd1683, %rd1680, %rd1682;
	xor.b64  	%rd1684, %rd1683, %rd1681;
	shf.r.wrap.b32 	%r1121, %r730, %r729, 1;
	shf.r.wrap.b32 	%r1122, %r729, %r730, 1;
	mov.b64 	%rd1685, {%r1122, %r1121};
	shf.r.wrap.b32 	%r1123, %r730, %r729, 8;
	shf.r.wrap.b32 	%r1124, %r729, %r730, 8;
	mov.b64 	%rd1686, {%r1124, %r1123};
	shr.u64 	%rd1687, %rd1113, 7;
	xor.b64  	%rd1688, %rd1685, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1686;
	add.s64 	%rd1690, %rd1217, %rd1100;
	add.s64 	%rd1691, %rd1690, %rd1684;
	add.s64 	%rd1692, %rd1691, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd1679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd1679;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 19;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 19;
	mov.b64 	%rd1693, {%r1128, %r1127};
	shf.l.wrap.b32 	%r1129, %r1125, %r1126, 3;
	shf.l.wrap.b32 	%r1130, %r1126, %r1125, 3;
	mov.b64 	%rd1694, {%r1130, %r1129};
	shr.u64 	%rd1695, %rd1679, 6;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	shf.r.wrap.b32 	%r1131, %r740, %r739, 1;
	shf.r.wrap.b32 	%r1132, %r739, %r740, 1;
	mov.b64 	%rd1698, {%r1132, %r1131};
	shf.r.wrap.b32 	%r1133, %r740, %r739, 8;
	shf.r.wrap.b32 	%r1134, %r739, %r740, 8;
	mov.b64 	%rd1699, {%r1134, %r1133};
	shr.u64 	%rd1700, %rd1126, 7;
	xor.b64  	%rd1701, %rd1698, %rd1700;
	xor.b64  	%rd1702, %rd1701, %rd1699;
	add.s64 	%rd1703, %rd1230, %rd1113;
	add.s64 	%rd1704, %rd1703, %rd1697;
	add.s64 	%rd1705, %rd1704, %rd1702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1135,%dummy}, %rd1692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1136}, %rd1692;
	}
	shf.r.wrap.b32 	%r1137, %r1136, %r1135, 19;
	shf.r.wrap.b32 	%r1138, %r1135, %r1136, 19;
	mov.b64 	%rd1706, {%r1138, %r1137};
	shf.l.wrap.b32 	%r1139, %r1135, %r1136, 3;
	shf.l.wrap.b32 	%r1140, %r1136, %r1135, 3;
	mov.b64 	%rd1707, {%r1140, %r1139};
	shr.u64 	%rd1708, %rd1692, 6;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	shf.r.wrap.b32 	%r1141, %r750, %r749, 1;
	shf.r.wrap.b32 	%r1142, %r749, %r750, 1;
	mov.b64 	%rd1711, {%r1142, %r1141};
	shf.r.wrap.b32 	%r1143, %r750, %r749, 8;
	shf.r.wrap.b32 	%r1144, %r749, %r750, 8;
	mov.b64 	%rd1712, {%r1144, %r1143};
	shr.u64 	%rd1713, %rd1139, 7;
	xor.b64  	%rd1714, %rd1711, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1712;
	add.s64 	%rd1716, %rd1243, %rd1126;
	add.s64 	%rd1717, %rd1716, %rd1710;
	add.s64 	%rd1718, %rd1717, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd1705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1146}, %rd1705;
	}
	shf.r.wrap.b32 	%r1147, %r1146, %r1145, 19;
	shf.r.wrap.b32 	%r1148, %r1145, %r1146, 19;
	mov.b64 	%rd1719, {%r1148, %r1147};
	shf.l.wrap.b32 	%r1149, %r1145, %r1146, 3;
	shf.l.wrap.b32 	%r1150, %r1146, %r1145, 3;
	mov.b64 	%rd1720, {%r1150, %r1149};
	shr.u64 	%rd1721, %rd1705, 6;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	shf.r.wrap.b32 	%r1151, %r760, %r759, 1;
	shf.r.wrap.b32 	%r1152, %r759, %r760, 1;
	mov.b64 	%rd1724, {%r1152, %r1151};
	shf.r.wrap.b32 	%r1153, %r760, %r759, 8;
	shf.r.wrap.b32 	%r1154, %r759, %r760, 8;
	mov.b64 	%rd1725, {%r1154, %r1153};
	shr.u64 	%rd1726, %rd1152, 7;
	xor.b64  	%rd1727, %rd1724, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1725;
	add.s64 	%rd1729, %rd1256, %rd1139;
	add.s64 	%rd1730, %rd1729, %rd1723;
	add.s64 	%rd1731, %rd1730, %rd1728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd1718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd1718;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 19;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 19;
	mov.b64 	%rd1732, {%r1158, %r1157};
	shf.l.wrap.b32 	%r1159, %r1155, %r1156, 3;
	shf.l.wrap.b32 	%r1160, %r1156, %r1155, 3;
	mov.b64 	%rd1733, {%r1160, %r1159};
	shr.u64 	%rd1734, %rd1718, 6;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	shf.r.wrap.b32 	%r1161, %r770, %r769, 1;
	shf.r.wrap.b32 	%r1162, %r769, %r770, 1;
	mov.b64 	%rd1737, {%r1162, %r1161};
	shf.r.wrap.b32 	%r1163, %r770, %r769, 8;
	shf.r.wrap.b32 	%r1164, %r769, %r770, 8;
	mov.b64 	%rd1738, {%r1164, %r1163};
	shr.u64 	%rd1739, %rd1165, 7;
	xor.b64  	%rd1740, %rd1737, %rd1739;
	xor.b64  	%rd1741, %rd1740, %rd1738;
	add.s64 	%rd1742, %rd1269, %rd1152;
	add.s64 	%rd1743, %rd1742, %rd1736;
	add.s64 	%rd1744, %rd1743, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1731;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 19;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 19;
	mov.b64 	%rd1745, {%r1168, %r1167};
	shf.l.wrap.b32 	%r1169, %r1165, %r1166, 3;
	shf.l.wrap.b32 	%r1170, %r1166, %r1165, 3;
	mov.b64 	%rd1746, {%r1170, %r1169};
	shr.u64 	%rd1747, %rd1731, 6;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	shf.r.wrap.b32 	%r1171, %r780, %r779, 1;
	shf.r.wrap.b32 	%r1172, %r779, %r780, 1;
	mov.b64 	%rd1750, {%r1172, %r1171};
	shf.r.wrap.b32 	%r1173, %r780, %r779, 8;
	shf.r.wrap.b32 	%r1174, %r779, %r780, 8;
	mov.b64 	%rd1751, {%r1174, %r1173};
	shr.u64 	%rd1752, %rd1178, 7;
	xor.b64  	%rd1753, %rd1750, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1751;
	add.s64 	%rd1755, %rd1666, %rd1165;
	add.s64 	%rd1756, %rd1755, %rd1749;
	add.s64 	%rd1757, %rd1756, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1175,%dummy}, %rd1744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1176}, %rd1744;
	}
	shf.r.wrap.b32 	%r1177, %r1176, %r1175, 19;
	shf.r.wrap.b32 	%r1178, %r1175, %r1176, 19;
	mov.b64 	%rd1758, {%r1178, %r1177};
	shf.l.wrap.b32 	%r1179, %r1175, %r1176, 3;
	shf.l.wrap.b32 	%r1180, %r1176, %r1175, 3;
	mov.b64 	%rd1759, {%r1180, %r1179};
	shr.u64 	%rd1760, %rd1744, 6;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	shf.r.wrap.b32 	%r1181, %r790, %r789, 1;
	shf.r.wrap.b32 	%r1182, %r789, %r790, 1;
	mov.b64 	%rd1763, {%r1182, %r1181};
	shf.r.wrap.b32 	%r1183, %r790, %r789, 8;
	shf.r.wrap.b32 	%r1184, %r789, %r790, 8;
	mov.b64 	%rd1764, {%r1184, %r1183};
	shr.u64 	%rd1765, %rd1191, 7;
	xor.b64  	%rd1766, %rd1763, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1764;
	add.s64 	%rd1768, %rd1679, %rd1178;
	add.s64 	%rd1769, %rd1768, %rd1762;
	add.s64 	%rd1770, %rd1769, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd1757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd1757;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 19;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 19;
	mov.b64 	%rd1771, {%r1188, %r1187};
	shf.l.wrap.b32 	%r1189, %r1185, %r1186, 3;
	shf.l.wrap.b32 	%r1190, %r1186, %r1185, 3;
	mov.b64 	%rd1772, {%r1190, %r1189};
	shr.u64 	%rd1773, %rd1757, 6;
	xor.b64  	%rd1774, %rd1771, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1772;
	shf.r.wrap.b32 	%r1191, %r800, %r799, 1;
	shf.r.wrap.b32 	%r1192, %r799, %r800, 1;
	mov.b64 	%rd1776, {%r1192, %r1191};
	shf.r.wrap.b32 	%r1193, %r800, %r799, 8;
	shf.r.wrap.b32 	%r1194, %r799, %r800, 8;
	mov.b64 	%rd1777, {%r1194, %r1193};
	shr.u64 	%rd1778, %rd1204, 7;
	xor.b64  	%rd1779, %rd1776, %rd1778;
	xor.b64  	%rd1780, %rd1779, %rd1777;
	add.s64 	%rd1781, %rd1692, %rd1191;
	add.s64 	%rd1782, %rd1781, %rd1775;
	add.s64 	%rd1783, %rd1782, %rd1780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1195,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1196}, %rd1770;
	}
	shf.r.wrap.b32 	%r1197, %r1196, %r1195, 19;
	shf.r.wrap.b32 	%r1198, %r1195, %r1196, 19;
	mov.b64 	%rd1784, {%r1198, %r1197};
	shf.l.wrap.b32 	%r1199, %r1195, %r1196, 3;
	shf.l.wrap.b32 	%r1200, %r1196, %r1195, 3;
	mov.b64 	%rd1785, {%r1200, %r1199};
	shr.u64 	%rd1786, %rd1770, 6;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	shf.r.wrap.b32 	%r1201, %r810, %r809, 1;
	shf.r.wrap.b32 	%r1202, %r809, %r810, 1;
	mov.b64 	%rd1789, {%r1202, %r1201};
	shf.r.wrap.b32 	%r1203, %r810, %r809, 8;
	shf.r.wrap.b32 	%r1204, %r809, %r810, 8;
	mov.b64 	%rd1790, {%r1204, %r1203};
	shr.u64 	%rd1791, %rd1217, 7;
	xor.b64  	%rd1792, %rd1789, %rd1791;
	xor.b64  	%rd1793, %rd1792, %rd1790;
	add.s64 	%rd1794, %rd1705, %rd1204;
	add.s64 	%rd1795, %rd1794, %rd1788;
	add.s64 	%rd1796, %rd1795, %rd1793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1783;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 19;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 19;
	mov.b64 	%rd1797, {%r1208, %r1207};
	shf.l.wrap.b32 	%r1209, %r1205, %r1206, 3;
	shf.l.wrap.b32 	%r1210, %r1206, %r1205, 3;
	mov.b64 	%rd1798, {%r1210, %r1209};
	shr.u64 	%rd1799, %rd1783, 6;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	shf.r.wrap.b32 	%r1211, %r820, %r819, 1;
	shf.r.wrap.b32 	%r1212, %r819, %r820, 1;
	mov.b64 	%rd1802, {%r1212, %r1211};
	shf.r.wrap.b32 	%r1213, %r820, %r819, 8;
	shf.r.wrap.b32 	%r1214, %r819, %r820, 8;
	mov.b64 	%rd1803, {%r1214, %r1213};
	shr.u64 	%rd1804, %rd1230, 7;
	xor.b64  	%rd1805, %rd1802, %rd1804;
	xor.b64  	%rd1806, %rd1805, %rd1803;
	add.s64 	%rd1807, %rd1718, %rd1217;
	add.s64 	%rd1808, %rd1807, %rd1801;
	add.s64 	%rd1809, %rd1808, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1796;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 19;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 19;
	mov.b64 	%rd1810, {%r1218, %r1217};
	shf.l.wrap.b32 	%r1219, %r1215, %r1216, 3;
	shf.l.wrap.b32 	%r1220, %r1216, %r1215, 3;
	mov.b64 	%rd1811, {%r1220, %r1219};
	shr.u64 	%rd1812, %rd1796, 6;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	shf.r.wrap.b32 	%r1221, %r830, %r829, 1;
	shf.r.wrap.b32 	%r1222, %r829, %r830, 1;
	mov.b64 	%rd1815, {%r1222, %r1221};
	shf.r.wrap.b32 	%r1223, %r830, %r829, 8;
	shf.r.wrap.b32 	%r1224, %r829, %r830, 8;
	mov.b64 	%rd1816, {%r1224, %r1223};
	shr.u64 	%rd1817, %rd1243, 7;
	xor.b64  	%rd1818, %rd1815, %rd1817;
	xor.b64  	%rd1819, %rd1818, %rd1816;
	add.s64 	%rd1820, %rd1731, %rd1230;
	add.s64 	%rd1821, %rd1820, %rd1814;
	add.s64 	%rd1822, %rd1821, %rd1819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1809;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 19;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 19;
	mov.b64 	%rd1823, {%r1228, %r1227};
	shf.l.wrap.b32 	%r1229, %r1225, %r1226, 3;
	shf.l.wrap.b32 	%r1230, %r1226, %r1225, 3;
	mov.b64 	%rd1824, {%r1230, %r1229};
	shr.u64 	%rd1825, %rd1809, 6;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	shf.r.wrap.b32 	%r1231, %r1096, %r1095, 1;
	shf.r.wrap.b32 	%r1232, %r1095, %r1096, 1;
	mov.b64 	%rd1828, {%r1232, %r1231};
	shf.r.wrap.b32 	%r1233, %r1096, %r1095, 8;
	shf.r.wrap.b32 	%r1234, %r1095, %r1096, 8;
	mov.b64 	%rd1829, {%r1234, %r1233};
	shr.u64 	%rd1830, %rd1256, 7;
	xor.b64  	%rd1831, %rd1828, %rd1830;
	xor.b64  	%rd1832, %rd1831, %rd1829;
	add.s64 	%rd1833, %rd1744, %rd1243;
	add.s64 	%rd1834, %rd1833, %rd1827;
	add.s64 	%rd1835, %rd1834, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1235,%dummy}, %rd1822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1236}, %rd1822;
	}
	shf.r.wrap.b32 	%r1237, %r1236, %r1235, 19;
	shf.r.wrap.b32 	%r1238, %r1235, %r1236, 19;
	mov.b64 	%rd1836, {%r1238, %r1237};
	shf.l.wrap.b32 	%r1239, %r1235, %r1236, 3;
	shf.l.wrap.b32 	%r1240, %r1236, %r1235, 3;
	mov.b64 	%rd1837, {%r1240, %r1239};
	shr.u64 	%rd1838, %rd1822, 6;
	xor.b64  	%rd1839, %rd1836, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1837;
	shf.r.wrap.b32 	%r1241, %r1106, %r1105, 1;
	shf.r.wrap.b32 	%r1242, %r1105, %r1106, 1;
	mov.b64 	%rd1841, {%r1242, %r1241};
	shf.r.wrap.b32 	%r1243, %r1106, %r1105, 8;
	shf.r.wrap.b32 	%r1244, %r1105, %r1106, 8;
	mov.b64 	%rd1842, {%r1244, %r1243};
	shr.u64 	%rd1843, %rd1269, 7;
	xor.b64  	%rd1844, %rd1841, %rd1843;
	xor.b64  	%rd1845, %rd1844, %rd1842;
	add.s64 	%rd1846, %rd1757, %rd1256;
	add.s64 	%rd1847, %rd1846, %rd1840;
	add.s64 	%rd1848, %rd1847, %rd1845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1835;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 19;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 19;
	mov.b64 	%rd1849, {%r1248, %r1247};
	shf.l.wrap.b32 	%r1249, %r1245, %r1246, 3;
	shf.l.wrap.b32 	%r1250, %r1246, %r1245, 3;
	mov.b64 	%rd1850, {%r1250, %r1249};
	shr.u64 	%rd1851, %rd1835, 6;
	xor.b64  	%rd1852, %rd1849, %rd1851;
	xor.b64  	%rd1853, %rd1852, %rd1850;
	shf.r.wrap.b32 	%r1251, %r1116, %r1115, 1;
	shf.r.wrap.b32 	%r1252, %r1115, %r1116, 1;
	mov.b64 	%rd1854, {%r1252, %r1251};
	shf.r.wrap.b32 	%r1253, %r1116, %r1115, 8;
	shf.r.wrap.b32 	%r1254, %r1115, %r1116, 8;
	mov.b64 	%rd1855, {%r1254, %r1253};
	shr.u64 	%rd1856, %rd1666, 7;
	xor.b64  	%rd1857, %rd1854, %rd1856;
	xor.b64  	%rd1858, %rd1857, %rd1855;
	add.s64 	%rd1859, %rd1770, %rd1269;
	add.s64 	%rd1860, %rd1859, %rd1853;
	add.s64 	%rd1861, %rd1860, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1255,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1256}, %rd1642;
	}
	shf.r.wrap.b32 	%r1257, %r1256, %r1255, 14;
	shf.r.wrap.b32 	%r1258, %r1255, %r1256, 14;
	mov.b64 	%rd1862, {%r1258, %r1257};
	shf.r.wrap.b32 	%r1259, %r1256, %r1255, 18;
	shf.r.wrap.b32 	%r1260, %r1255, %r1256, 18;
	mov.b64 	%rd1863, {%r1260, %r1259};
	xor.b64  	%rd1864, %rd1863, %rd1862;
	shf.l.wrap.b32 	%r1261, %r1255, %r1256, 23;
	shf.l.wrap.b32 	%r1262, %r1256, %r1255, 23;
	mov.b64 	%rd1865, {%r1262, %r1261};
	xor.b64  	%rd1866, %rd1864, %rd1865;
	xor.b64  	%rd1867, %rd1618, %rd1594;
	and.b64  	%rd1868, %rd1867, %rd1642;
	xor.b64  	%rd1869, %rd1868, %rd1594;
	add.s64 	%rd1870, %rd1869, %rd1570;
	add.s64 	%rd1871, %rd1870, %rd1666;
	add.s64 	%rd1872, %rd1871, %rd67;
	add.s64 	%rd1873, %rd1872, %rd1866;
	add.s64 	%rd1874, %rd1873, %rd1581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1263,%dummy}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd1653;
	}
	shf.r.wrap.b32 	%r1265, %r1264, %r1263, 28;
	shf.r.wrap.b32 	%r1266, %r1263, %r1264, 28;
	mov.b64 	%rd1875, {%r1266, %r1265};
	shf.l.wrap.b32 	%r1267, %r1263, %r1264, 30;
	shf.l.wrap.b32 	%r1268, %r1264, %r1263, 30;
	mov.b64 	%rd1876, {%r1268, %r1267};
	xor.b64  	%rd1877, %rd1876, %rd1875;
	shf.l.wrap.b32 	%r1269, %r1263, %r1264, 25;
	shf.l.wrap.b32 	%r1270, %r1264, %r1263, 25;
	mov.b64 	%rd1878, {%r1270, %r1269};
	xor.b64  	%rd1879, %rd1877, %rd1878;
	xor.b64  	%rd1880, %rd1653, %rd1605;
	xor.b64  	%rd1881, %rd1653, %rd1629;
	and.b64  	%rd1882, %rd1881, %rd1880;
	xor.b64  	%rd1883, %rd1882, %rd1653;
	add.s64 	%rd1884, %rd1873, %rd1883;
	add.s64 	%rd1885, %rd1884, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd1874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd1874;
	}
	shf.r.wrap.b32 	%r1273, %r1272, %r1271, 14;
	shf.r.wrap.b32 	%r1274, %r1271, %r1272, 14;
	mov.b64 	%rd1886, {%r1274, %r1273};
	shf.r.wrap.b32 	%r1275, %r1272, %r1271, 18;
	shf.r.wrap.b32 	%r1276, %r1271, %r1272, 18;
	mov.b64 	%rd1887, {%r1276, %r1275};
	xor.b64  	%rd1888, %rd1887, %rd1886;
	shf.l.wrap.b32 	%r1277, %r1271, %r1272, 23;
	shf.l.wrap.b32 	%r1278, %r1272, %r1271, 23;
	mov.b64 	%rd1889, {%r1278, %r1277};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	xor.b64  	%rd1891, %rd1642, %rd1618;
	and.b64  	%rd1892, %rd1874, %rd1891;
	xor.b64  	%rd1893, %rd1892, %rd1618;
	add.s64 	%rd1894, %rd1679, %rd1594;
	add.s64 	%rd1895, %rd1894, %rd68;
	add.s64 	%rd1896, %rd1895, %rd1893;
	add.s64 	%rd1897, %rd1896, %rd1890;
	add.s64 	%rd1898, %rd1897, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1885;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 28;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 28;
	mov.b64 	%rd1899, {%r1282, %r1281};
	shf.l.wrap.b32 	%r1283, %r1279, %r1280, 30;
	shf.l.wrap.b32 	%r1284, %r1280, %r1279, 30;
	mov.b64 	%rd1900, {%r1284, %r1283};
	xor.b64  	%rd1901, %rd1900, %rd1899;
	shf.l.wrap.b32 	%r1285, %r1279, %r1280, 25;
	shf.l.wrap.b32 	%r1286, %r1280, %r1279, 25;
	mov.b64 	%rd1902, {%r1286, %r1285};
	xor.b64  	%rd1903, %rd1901, %rd1902;
	xor.b64  	%rd1904, %rd1885, %rd1629;
	xor.b64  	%rd1905, %rd1885, %rd1653;
	and.b64  	%rd1906, %rd1905, %rd1904;
	xor.b64  	%rd1907, %rd1906, %rd1885;
	add.s64 	%rd1908, %rd1897, %rd1907;
	add.s64 	%rd1909, %rd1908, %rd1903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1898;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 14;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 14;
	mov.b64 	%rd1910, {%r1290, %r1289};
	shf.r.wrap.b32 	%r1291, %r1288, %r1287, 18;
	shf.r.wrap.b32 	%r1292, %r1287, %r1288, 18;
	mov.b64 	%rd1911, {%r1292, %r1291};
	xor.b64  	%rd1912, %rd1911, %rd1910;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 23;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 23;
	mov.b64 	%rd1913, {%r1294, %r1293};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	xor.b64  	%rd1915, %rd1874, %rd1642;
	and.b64  	%rd1916, %rd1898, %rd1915;
	xor.b64  	%rd1917, %rd1916, %rd1642;
	add.s64 	%rd1918, %rd1692, %rd1618;
	add.s64 	%rd1919, %rd1918, %rd69;
	add.s64 	%rd1920, %rd1919, %rd1917;
	add.s64 	%rd1921, %rd1920, %rd1914;
	add.s64 	%rd1922, %rd1921, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1909;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 28;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 28;
	mov.b64 	%rd1923, {%r1298, %r1297};
	shf.l.wrap.b32 	%r1299, %r1295, %r1296, 30;
	shf.l.wrap.b32 	%r1300, %r1296, %r1295, 30;
	mov.b64 	%rd1924, {%r1300, %r1299};
	xor.b64  	%rd1925, %rd1924, %rd1923;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 25;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 25;
	mov.b64 	%rd1926, {%r1302, %r1301};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	xor.b64  	%rd1928, %rd1909, %rd1653;
	xor.b64  	%rd1929, %rd1909, %rd1885;
	and.b64  	%rd1930, %rd1929, %rd1928;
	xor.b64  	%rd1931, %rd1930, %rd1909;
	add.s64 	%rd1932, %rd1921, %rd1931;
	add.s64 	%rd1933, %rd1932, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1922;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 14;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 14;
	mov.b64 	%rd1934, {%r1306, %r1305};
	shf.r.wrap.b32 	%r1307, %r1304, %r1303, 18;
	shf.r.wrap.b32 	%r1308, %r1303, %r1304, 18;
	mov.b64 	%rd1935, {%r1308, %r1307};
	xor.b64  	%rd1936, %rd1935, %rd1934;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 23;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 23;
	mov.b64 	%rd1937, {%r1310, %r1309};
	xor.b64  	%rd1938, %rd1936, %rd1937;
	xor.b64  	%rd1939, %rd1898, %rd1874;
	and.b64  	%rd1940, %rd1922, %rd1939;
	xor.b64  	%rd1941, %rd1940, %rd1874;
	add.s64 	%rd1942, %rd1705, %rd1642;
	add.s64 	%rd1943, %rd1942, %rd70;
	add.s64 	%rd1944, %rd1943, %rd1941;
	add.s64 	%rd1945, %rd1944, %rd1938;
	add.s64 	%rd1946, %rd1945, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1933;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 28;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 28;
	mov.b64 	%rd1947, {%r1314, %r1313};
	shf.l.wrap.b32 	%r1315, %r1311, %r1312, 30;
	shf.l.wrap.b32 	%r1316, %r1312, %r1311, 30;
	mov.b64 	%rd1948, {%r1316, %r1315};
	xor.b64  	%rd1949, %rd1948, %rd1947;
	shf.l.wrap.b32 	%r1317, %r1311, %r1312, 25;
	shf.l.wrap.b32 	%r1318, %r1312, %r1311, 25;
	mov.b64 	%rd1950, {%r1318, %r1317};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	xor.b64  	%rd1952, %rd1933, %rd1885;
	xor.b64  	%rd1953, %rd1933, %rd1909;
	and.b64  	%rd1954, %rd1953, %rd1952;
	xor.b64  	%rd1955, %rd1954, %rd1933;
	add.s64 	%rd1956, %rd1945, %rd1955;
	add.s64 	%rd1957, %rd1956, %rd1951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1946;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 14;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 14;
	mov.b64 	%rd1958, {%r1322, %r1321};
	shf.r.wrap.b32 	%r1323, %r1320, %r1319, 18;
	shf.r.wrap.b32 	%r1324, %r1319, %r1320, 18;
	mov.b64 	%rd1959, {%r1324, %r1323};
	xor.b64  	%rd1960, %rd1959, %rd1958;
	shf.l.wrap.b32 	%r1325, %r1319, %r1320, 23;
	shf.l.wrap.b32 	%r1326, %r1320, %r1319, 23;
	mov.b64 	%rd1961, {%r1326, %r1325};
	xor.b64  	%rd1962, %rd1960, %rd1961;
	xor.b64  	%rd1963, %rd1922, %rd1898;
	and.b64  	%rd1964, %rd1946, %rd1963;
	xor.b64  	%rd1965, %rd1964, %rd1898;
	add.s64 	%rd1966, %rd1874, %rd1718;
	add.s64 	%rd1967, %rd1966, %rd71;
	add.s64 	%rd1968, %rd1967, %rd1965;
	add.s64 	%rd1969, %rd1968, %rd1962;
	add.s64 	%rd1970, %rd1969, %rd1885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1328}, %rd1957;
	}
	shf.r.wrap.b32 	%r1329, %r1328, %r1327, 28;
	shf.r.wrap.b32 	%r1330, %r1327, %r1328, 28;
	mov.b64 	%rd1971, {%r1330, %r1329};
	shf.l.wrap.b32 	%r1331, %r1327, %r1328, 30;
	shf.l.wrap.b32 	%r1332, %r1328, %r1327, 30;
	mov.b64 	%rd1972, {%r1332, %r1331};
	xor.b64  	%rd1973, %rd1972, %rd1971;
	shf.l.wrap.b32 	%r1333, %r1327, %r1328, 25;
	shf.l.wrap.b32 	%r1334, %r1328, %r1327, 25;
	mov.b64 	%rd1974, {%r1334, %r1333};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	xor.b64  	%rd1976, %rd1957, %rd1909;
	xor.b64  	%rd1977, %rd1957, %rd1933;
	and.b64  	%rd1978, %rd1977, %rd1976;
	xor.b64  	%rd1979, %rd1978, %rd1957;
	add.s64 	%rd1980, %rd1969, %rd1979;
	add.s64 	%rd1981, %rd1980, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1970;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 14;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 14;
	mov.b64 	%rd1982, {%r1338, %r1337};
	shf.r.wrap.b32 	%r1339, %r1336, %r1335, 18;
	shf.r.wrap.b32 	%r1340, %r1335, %r1336, 18;
	mov.b64 	%rd1983, {%r1340, %r1339};
	xor.b64  	%rd1984, %rd1983, %rd1982;
	shf.l.wrap.b32 	%r1341, %r1335, %r1336, 23;
	shf.l.wrap.b32 	%r1342, %r1336, %r1335, 23;
	mov.b64 	%rd1985, {%r1342, %r1341};
	xor.b64  	%rd1986, %rd1984, %rd1985;
	xor.b64  	%rd1987, %rd1946, %rd1922;
	and.b64  	%rd1988, %rd1970, %rd1987;
	xor.b64  	%rd1989, %rd1988, %rd1922;
	add.s64 	%rd1990, %rd1898, %rd1731;
	add.s64 	%rd1991, %rd1990, %rd72;
	add.s64 	%rd1992, %rd1991, %rd1989;
	add.s64 	%rd1993, %rd1992, %rd1986;
	add.s64 	%rd1994, %rd1993, %rd1909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1981;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 28;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 28;
	mov.b64 	%rd1995, {%r1346, %r1345};
	shf.l.wrap.b32 	%r1347, %r1343, %r1344, 30;
	shf.l.wrap.b32 	%r1348, %r1344, %r1343, 30;
	mov.b64 	%rd1996, {%r1348, %r1347};
	xor.b64  	%rd1997, %rd1996, %rd1995;
	shf.l.wrap.b32 	%r1349, %r1343, %r1344, 25;
	shf.l.wrap.b32 	%r1350, %r1344, %r1343, 25;
	mov.b64 	%rd1998, {%r1350, %r1349};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	xor.b64  	%rd2000, %rd1981, %rd1933;
	xor.b64  	%rd2001, %rd1981, %rd1957;
	and.b64  	%rd2002, %rd2001, %rd2000;
	xor.b64  	%rd2003, %rd2002, %rd1981;
	add.s64 	%rd2004, %rd1993, %rd2003;
	add.s64 	%rd2005, %rd2004, %rd1999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1994;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 14;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 14;
	mov.b64 	%rd2006, {%r1354, %r1353};
	shf.r.wrap.b32 	%r1355, %r1352, %r1351, 18;
	shf.r.wrap.b32 	%r1356, %r1351, %r1352, 18;
	mov.b64 	%rd2007, {%r1356, %r1355};
	xor.b64  	%rd2008, %rd2007, %rd2006;
	shf.l.wrap.b32 	%r1357, %r1351, %r1352, 23;
	shf.l.wrap.b32 	%r1358, %r1352, %r1351, 23;
	mov.b64 	%rd2009, {%r1358, %r1357};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	xor.b64  	%rd2011, %rd1970, %rd1946;
	and.b64  	%rd2012, %rd1994, %rd2011;
	xor.b64  	%rd2013, %rd2012, %rd1946;
	add.s64 	%rd2014, %rd1922, %rd1744;
	add.s64 	%rd2015, %rd2014, %rd73;
	add.s64 	%rd2016, %rd2015, %rd2013;
	add.s64 	%rd2017, %rd2016, %rd2010;
	add.s64 	%rd2018, %rd2017, %rd1933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd2005;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 28;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 28;
	mov.b64 	%rd2019, {%r1362, %r1361};
	shf.l.wrap.b32 	%r1363, %r1359, %r1360, 30;
	shf.l.wrap.b32 	%r1364, %r1360, %r1359, 30;
	mov.b64 	%rd2020, {%r1364, %r1363};
	xor.b64  	%rd2021, %rd2020, %rd2019;
	shf.l.wrap.b32 	%r1365, %r1359, %r1360, 25;
	shf.l.wrap.b32 	%r1366, %r1360, %r1359, 25;
	mov.b64 	%rd2022, {%r1366, %r1365};
	xor.b64  	%rd2023, %rd2021, %rd2022;
	xor.b64  	%rd2024, %rd2005, %rd1957;
	xor.b64  	%rd2025, %rd2005, %rd1981;
	and.b64  	%rd2026, %rd2025, %rd2024;
	xor.b64  	%rd2027, %rd2026, %rd2005;
	add.s64 	%rd2028, %rd2017, %rd2027;
	add.s64 	%rd2029, %rd2028, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd2018;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 14;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 14;
	mov.b64 	%rd2030, {%r1370, %r1369};
	shf.r.wrap.b32 	%r1371, %r1368, %r1367, 18;
	shf.r.wrap.b32 	%r1372, %r1367, %r1368, 18;
	mov.b64 	%rd2031, {%r1372, %r1371};
	xor.b64  	%rd2032, %rd2031, %rd2030;
	shf.l.wrap.b32 	%r1373, %r1367, %r1368, 23;
	shf.l.wrap.b32 	%r1374, %r1368, %r1367, 23;
	mov.b64 	%rd2033, {%r1374, %r1373};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	xor.b64  	%rd2035, %rd1994, %rd1970;
	and.b64  	%rd2036, %rd2018, %rd2035;
	xor.b64  	%rd2037, %rd2036, %rd1970;
	add.s64 	%rd2038, %rd1946, %rd1757;
	add.s64 	%rd2039, %rd2038, %rd74;
	add.s64 	%rd2040, %rd2039, %rd2037;
	add.s64 	%rd2041, %rd2040, %rd2034;
	add.s64 	%rd2042, %rd2041, %rd1957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd2029;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 28;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 28;
	mov.b64 	%rd2043, {%r1378, %r1377};
	shf.l.wrap.b32 	%r1379, %r1375, %r1376, 30;
	shf.l.wrap.b32 	%r1380, %r1376, %r1375, 30;
	mov.b64 	%rd2044, {%r1380, %r1379};
	xor.b64  	%rd2045, %rd2044, %rd2043;
	shf.l.wrap.b32 	%r1381, %r1375, %r1376, 25;
	shf.l.wrap.b32 	%r1382, %r1376, %r1375, 25;
	mov.b64 	%rd2046, {%r1382, %r1381};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	xor.b64  	%rd2048, %rd2029, %rd1981;
	xor.b64  	%rd2049, %rd2029, %rd2005;
	and.b64  	%rd2050, %rd2049, %rd2048;
	xor.b64  	%rd2051, %rd2050, %rd2029;
	add.s64 	%rd2052, %rd2041, %rd2051;
	add.s64 	%rd2053, %rd2052, %rd2047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1383,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd2042;
	}
	shf.r.wrap.b32 	%r1385, %r1384, %r1383, 14;
	shf.r.wrap.b32 	%r1386, %r1383, %r1384, 14;
	mov.b64 	%rd2054, {%r1386, %r1385};
	shf.r.wrap.b32 	%r1387, %r1384, %r1383, 18;
	shf.r.wrap.b32 	%r1388, %r1383, %r1384, 18;
	mov.b64 	%rd2055, {%r1388, %r1387};
	xor.b64  	%rd2056, %rd2055, %rd2054;
	shf.l.wrap.b32 	%r1389, %r1383, %r1384, 23;
	shf.l.wrap.b32 	%r1390, %r1384, %r1383, 23;
	mov.b64 	%rd2057, {%r1390, %r1389};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	xor.b64  	%rd2059, %rd2018, %rd1994;
	and.b64  	%rd2060, %rd2042, %rd2059;
	xor.b64  	%rd2061, %rd2060, %rd1994;
	add.s64 	%rd2062, %rd1970, %rd1770;
	add.s64 	%rd2063, %rd2062, %rd75;
	add.s64 	%rd2064, %rd2063, %rd2061;
	add.s64 	%rd2065, %rd2064, %rd2058;
	add.s64 	%rd2066, %rd2065, %rd1981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd2053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd2053;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 28;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 28;
	mov.b64 	%rd2067, {%r1394, %r1393};
	shf.l.wrap.b32 	%r1395, %r1391, %r1392, 30;
	shf.l.wrap.b32 	%r1396, %r1392, %r1391, 30;
	mov.b64 	%rd2068, {%r1396, %r1395};
	xor.b64  	%rd2069, %rd2068, %rd2067;
	shf.l.wrap.b32 	%r1397, %r1391, %r1392, 25;
	shf.l.wrap.b32 	%r1398, %r1392, %r1391, 25;
	mov.b64 	%rd2070, {%r1398, %r1397};
	xor.b64  	%rd2071, %rd2069, %rd2070;
	xor.b64  	%rd2072, %rd2053, %rd2005;
	xor.b64  	%rd2073, %rd2053, %rd2029;
	and.b64  	%rd2074, %rd2073, %rd2072;
	xor.b64  	%rd2075, %rd2074, %rd2053;
	add.s64 	%rd2076, %rd2065, %rd2075;
	add.s64 	%rd2077, %rd2076, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd2066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd2066;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 14;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 14;
	mov.b64 	%rd2078, {%r1402, %r1401};
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 18;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 18;
	mov.b64 	%rd2079, {%r1404, %r1403};
	xor.b64  	%rd2080, %rd2079, %rd2078;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 23;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 23;
	mov.b64 	%rd2081, {%r1406, %r1405};
	xor.b64  	%rd2082, %rd2080, %rd2081;
	xor.b64  	%rd2083, %rd2042, %rd2018;
	and.b64  	%rd2084, %rd2066, %rd2083;
	xor.b64  	%rd2085, %rd2084, %rd2018;
	add.s64 	%rd2086, %rd1994, %rd1783;
	add.s64 	%rd2087, %rd2086, %rd76;
	add.s64 	%rd2088, %rd2087, %rd2085;
	add.s64 	%rd2089, %rd2088, %rd2082;
	add.s64 	%rd2090, %rd2089, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2077;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 28;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 28;
	mov.b64 	%rd2091, {%r1410, %r1409};
	shf.l.wrap.b32 	%r1411, %r1407, %r1408, 30;
	shf.l.wrap.b32 	%r1412, %r1408, %r1407, 30;
	mov.b64 	%rd2092, {%r1412, %r1411};
	xor.b64  	%rd2093, %rd2092, %rd2091;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 25;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 25;
	mov.b64 	%rd2094, {%r1414, %r1413};
	xor.b64  	%rd2095, %rd2093, %rd2094;
	xor.b64  	%rd2096, %rd2077, %rd2029;
	xor.b64  	%rd2097, %rd2077, %rd2053;
	and.b64  	%rd2098, %rd2097, %rd2096;
	xor.b64  	%rd2099, %rd2098, %rd2077;
	add.s64 	%rd2100, %rd2089, %rd2099;
	add.s64 	%rd2101, %rd2100, %rd2095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2090;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 14;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 14;
	mov.b64 	%rd2102, {%r1418, %r1417};
	shf.r.wrap.b32 	%r1419, %r1416, %r1415, 18;
	shf.r.wrap.b32 	%r1420, %r1415, %r1416, 18;
	mov.b64 	%rd2103, {%r1420, %r1419};
	xor.b64  	%rd2104, %rd2103, %rd2102;
	shf.l.wrap.b32 	%r1421, %r1415, %r1416, 23;
	shf.l.wrap.b32 	%r1422, %r1416, %r1415, 23;
	mov.b64 	%rd2105, {%r1422, %r1421};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	xor.b64  	%rd2107, %rd2066, %rd2042;
	and.b64  	%rd2108, %rd2090, %rd2107;
	xor.b64  	%rd2109, %rd2108, %rd2042;
	add.s64 	%rd2110, %rd2018, %rd1796;
	add.s64 	%rd2111, %rd2110, %rd77;
	add.s64 	%rd2112, %rd2111, %rd2109;
	add.s64 	%rd2113, %rd2112, %rd2106;
	add.s64 	%rd2114, %rd2113, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2101;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 28;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 28;
	mov.b64 	%rd2115, {%r1426, %r1425};
	shf.l.wrap.b32 	%r1427, %r1423, %r1424, 30;
	shf.l.wrap.b32 	%r1428, %r1424, %r1423, 30;
	mov.b64 	%rd2116, {%r1428, %r1427};
	xor.b64  	%rd2117, %rd2116, %rd2115;
	shf.l.wrap.b32 	%r1429, %r1423, %r1424, 25;
	shf.l.wrap.b32 	%r1430, %r1424, %r1423, 25;
	mov.b64 	%rd2118, {%r1430, %r1429};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	xor.b64  	%rd2120, %rd2101, %rd2053;
	xor.b64  	%rd2121, %rd2101, %rd2077;
	and.b64  	%rd2122, %rd2121, %rd2120;
	xor.b64  	%rd2123, %rd2122, %rd2101;
	add.s64 	%rd2124, %rd2113, %rd2123;
	add.s64 	%rd2125, %rd2124, %rd2119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1431,%dummy}, %rd2114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1432}, %rd2114;
	}
	shf.r.wrap.b32 	%r1433, %r1432, %r1431, 14;
	shf.r.wrap.b32 	%r1434, %r1431, %r1432, 14;
	mov.b64 	%rd2126, {%r1434, %r1433};
	shf.r.wrap.b32 	%r1435, %r1432, %r1431, 18;
	shf.r.wrap.b32 	%r1436, %r1431, %r1432, 18;
	mov.b64 	%rd2127, {%r1436, %r1435};
	xor.b64  	%rd2128, %rd2127, %rd2126;
	shf.l.wrap.b32 	%r1437, %r1431, %r1432, 23;
	shf.l.wrap.b32 	%r1438, %r1432, %r1431, 23;
	mov.b64 	%rd2129, {%r1438, %r1437};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	xor.b64  	%rd2131, %rd2090, %rd2066;
	and.b64  	%rd2132, %rd2114, %rd2131;
	xor.b64  	%rd2133, %rd2132, %rd2066;
	add.s64 	%rd2134, %rd2042, %rd1809;
	add.s64 	%rd2135, %rd2134, %rd78;
	add.s64 	%rd2136, %rd2135, %rd2133;
	add.s64 	%rd2137, %rd2136, %rd2130;
	add.s64 	%rd2138, %rd2137, %rd2053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1439,%dummy}, %rd2125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1440}, %rd2125;
	}
	shf.r.wrap.b32 	%r1441, %r1440, %r1439, 28;
	shf.r.wrap.b32 	%r1442, %r1439, %r1440, 28;
	mov.b64 	%rd2139, {%r1442, %r1441};
	shf.l.wrap.b32 	%r1443, %r1439, %r1440, 30;
	shf.l.wrap.b32 	%r1444, %r1440, %r1439, 30;
	mov.b64 	%rd2140, {%r1444, %r1443};
	xor.b64  	%rd2141, %rd2140, %rd2139;
	shf.l.wrap.b32 	%r1445, %r1439, %r1440, 25;
	shf.l.wrap.b32 	%r1446, %r1440, %r1439, 25;
	mov.b64 	%rd2142, {%r1446, %r1445};
	xor.b64  	%rd2143, %rd2141, %rd2142;
	xor.b64  	%rd2144, %rd2125, %rd2077;
	xor.b64  	%rd2145, %rd2125, %rd2101;
	and.b64  	%rd2146, %rd2145, %rd2144;
	xor.b64  	%rd2147, %rd2146, %rd2125;
	add.s64 	%rd2148, %rd2137, %rd2147;
	add.s64 	%rd2149, %rd2148, %rd2143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd2138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd2138;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 14;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 14;
	mov.b64 	%rd2150, {%r1450, %r1449};
	shf.r.wrap.b32 	%r1451, %r1448, %r1447, 18;
	shf.r.wrap.b32 	%r1452, %r1447, %r1448, 18;
	mov.b64 	%rd2151, {%r1452, %r1451};
	xor.b64  	%rd2152, %rd2151, %rd2150;
	shf.l.wrap.b32 	%r1453, %r1447, %r1448, 23;
	shf.l.wrap.b32 	%r1454, %r1448, %r1447, 23;
	mov.b64 	%rd2153, {%r1454, %r1453};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	xor.b64  	%rd2155, %rd2114, %rd2090;
	and.b64  	%rd2156, %rd2138, %rd2155;
	xor.b64  	%rd2157, %rd2156, %rd2090;
	add.s64 	%rd2158, %rd2066, %rd1822;
	add.s64 	%rd2159, %rd2158, %rd79;
	add.s64 	%rd2160, %rd2159, %rd2157;
	add.s64 	%rd2161, %rd2160, %rd2154;
	add.s64 	%rd2162, %rd2161, %rd2077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd2149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd2149;
	}
	shf.r.wrap.b32 	%r1457, %r1456, %r1455, 28;
	shf.r.wrap.b32 	%r1458, %r1455, %r1456, 28;
	mov.b64 	%rd2163, {%r1458, %r1457};
	shf.l.wrap.b32 	%r1459, %r1455, %r1456, 30;
	shf.l.wrap.b32 	%r1460, %r1456, %r1455, 30;
	mov.b64 	%rd2164, {%r1460, %r1459};
	xor.b64  	%rd2165, %rd2164, %rd2163;
	shf.l.wrap.b32 	%r1461, %r1455, %r1456, 25;
	shf.l.wrap.b32 	%r1462, %r1456, %r1455, 25;
	mov.b64 	%rd2166, {%r1462, %r1461};
	xor.b64  	%rd2167, %rd2165, %rd2166;
	xor.b64  	%rd2168, %rd2149, %rd2101;
	xor.b64  	%rd2169, %rd2149, %rd2125;
	and.b64  	%rd2170, %rd2169, %rd2168;
	xor.b64  	%rd2171, %rd2170, %rd2149;
	add.s64 	%rd2172, %rd2161, %rd2171;
	add.s64 	%rd2173, %rd2172, %rd2167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1463,%dummy}, %rd2162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1464}, %rd2162;
	}
	shf.r.wrap.b32 	%r1465, %r1464, %r1463, 14;
	shf.r.wrap.b32 	%r1466, %r1463, %r1464, 14;
	mov.b64 	%rd2174, {%r1466, %r1465};
	shf.r.wrap.b32 	%r1467, %r1464, %r1463, 18;
	shf.r.wrap.b32 	%r1468, %r1463, %r1464, 18;
	mov.b64 	%rd2175, {%r1468, %r1467};
	xor.b64  	%rd2176, %rd2175, %rd2174;
	shf.l.wrap.b32 	%r1469, %r1463, %r1464, 23;
	shf.l.wrap.b32 	%r1470, %r1464, %r1463, 23;
	mov.b64 	%rd2177, {%r1470, %r1469};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	xor.b64  	%rd2179, %rd2138, %rd2114;
	and.b64  	%rd2180, %rd2162, %rd2179;
	xor.b64  	%rd2181, %rd2180, %rd2114;
	add.s64 	%rd2182, %rd2090, %rd1835;
	add.s64 	%rd2183, %rd2182, %rd80;
	add.s64 	%rd2184, %rd2183, %rd2181;
	add.s64 	%rd2185, %rd2184, %rd2178;
	add.s64 	%rd2186, %rd2185, %rd2101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd2173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd2173;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 28;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 28;
	mov.b64 	%rd2187, {%r1474, %r1473};
	shf.l.wrap.b32 	%r1475, %r1471, %r1472, 30;
	shf.l.wrap.b32 	%r1476, %r1472, %r1471, 30;
	mov.b64 	%rd2188, {%r1476, %r1475};
	xor.b64  	%rd2189, %rd2188, %rd2187;
	shf.l.wrap.b32 	%r1477, %r1471, %r1472, 25;
	shf.l.wrap.b32 	%r1478, %r1472, %r1471, 25;
	mov.b64 	%rd2190, {%r1478, %r1477};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	xor.b64  	%rd2192, %rd2173, %rd2125;
	xor.b64  	%rd2193, %rd2173, %rd2149;
	and.b64  	%rd2194, %rd2193, %rd2192;
	xor.b64  	%rd2195, %rd2194, %rd2173;
	add.s64 	%rd2196, %rd2185, %rd2195;
	add.s64 	%rd2197, %rd2196, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd2186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd2186;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 14;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 14;
	mov.b64 	%rd2198, {%r1482, %r1481};
	shf.r.wrap.b32 	%r1483, %r1480, %r1479, 18;
	shf.r.wrap.b32 	%r1484, %r1479, %r1480, 18;
	mov.b64 	%rd2199, {%r1484, %r1483};
	xor.b64  	%rd2200, %rd2199, %rd2198;
	shf.l.wrap.b32 	%r1485, %r1479, %r1480, 23;
	shf.l.wrap.b32 	%r1486, %r1480, %r1479, 23;
	mov.b64 	%rd2201, {%r1486, %r1485};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	xor.b64  	%rd2203, %rd2162, %rd2138;
	and.b64  	%rd2204, %rd2186, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2138;
	add.s64 	%rd2206, %rd2114, %rd1848;
	add.s64 	%rd2207, %rd2206, %rd81;
	add.s64 	%rd2208, %rd2207, %rd2205;
	add.s64 	%rd2209, %rd2208, %rd2202;
	add.s64 	%rd2210, %rd2209, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1487,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1488}, %rd2197;
	}
	shf.r.wrap.b32 	%r1489, %r1488, %r1487, 28;
	shf.r.wrap.b32 	%r1490, %r1487, %r1488, 28;
	mov.b64 	%rd2211, {%r1490, %r1489};
	shf.l.wrap.b32 	%r1491, %r1487, %r1488, 30;
	shf.l.wrap.b32 	%r1492, %r1488, %r1487, 30;
	mov.b64 	%rd2212, {%r1492, %r1491};
	xor.b64  	%rd2213, %rd2212, %rd2211;
	shf.l.wrap.b32 	%r1493, %r1487, %r1488, 25;
	shf.l.wrap.b32 	%r1494, %r1488, %r1487, 25;
	mov.b64 	%rd2214, {%r1494, %r1493};
	xor.b64  	%rd2215, %rd2213, %rd2214;
	xor.b64  	%rd2216, %rd2197, %rd2149;
	xor.b64  	%rd2217, %rd2197, %rd2173;
	and.b64  	%rd2218, %rd2217, %rd2216;
	xor.b64  	%rd2219, %rd2218, %rd2197;
	add.s64 	%rd2220, %rd2209, %rd2219;
	add.s64 	%rd2221, %rd2220, %rd2215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd2210;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 14;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 14;
	mov.b64 	%rd2222, {%r1498, %r1497};
	shf.r.wrap.b32 	%r1499, %r1496, %r1495, 18;
	shf.r.wrap.b32 	%r1500, %r1495, %r1496, 18;
	mov.b64 	%rd2223, {%r1500, %r1499};
	xor.b64  	%rd2224, %rd2223, %rd2222;
	shf.l.wrap.b32 	%r1501, %r1495, %r1496, 23;
	shf.l.wrap.b32 	%r1502, %r1496, %r1495, 23;
	mov.b64 	%rd2225, {%r1502, %r1501};
	xor.b64  	%rd2226, %rd2224, %rd2225;
	xor.b64  	%rd2227, %rd2186, %rd2162;
	and.b64  	%rd2228, %rd2210, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2162;
	add.s64 	%rd2230, %rd2138, %rd1861;
	add.s64 	%rd2231, %rd2230, %rd82;
	add.s64 	%rd2232, %rd2231, %rd2229;
	add.s64 	%rd2233, %rd2232, %rd2226;
	add.s64 	%rd2234, %rd2233, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd2221;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 28;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 28;
	mov.b64 	%rd2235, {%r1506, %r1505};
	shf.l.wrap.b32 	%r1507, %r1503, %r1504, 30;
	shf.l.wrap.b32 	%r1508, %r1504, %r1503, 30;
	mov.b64 	%rd2236, {%r1508, %r1507};
	xor.b64  	%rd2237, %rd2236, %rd2235;
	shf.l.wrap.b32 	%r1509, %r1503, %r1504, 25;
	shf.l.wrap.b32 	%r1510, %r1504, %r1503, 25;
	mov.b64 	%rd2238, {%r1510, %r1509};
	xor.b64  	%rd2239, %rd2237, %rd2238;
	xor.b64  	%rd2240, %rd2221, %rd2173;
	xor.b64  	%rd2241, %rd2221, %rd2197;
	and.b64  	%rd2242, %rd2241, %rd2240;
	xor.b64  	%rd2243, %rd2242, %rd2221;
	add.s64 	%rd2244, %rd2233, %rd2243;
	add.s64 	%rd2245, %rd2244, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd1848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd1848;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 19;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 19;
	mov.b64 	%rd2246, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 3;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 3;
	mov.b64 	%rd2247, {%r1516, %r1515};
	shr.u64 	%rd2248, %rd1848, 6;
	xor.b64  	%rd2249, %rd2246, %rd2248;
	xor.b64  	%rd2250, %rd2249, %rd2247;
	shf.r.wrap.b32 	%r1517, %r1126, %r1125, 1;
	shf.r.wrap.b32 	%r1518, %r1125, %r1126, 1;
	mov.b64 	%rd2251, {%r1518, %r1517};
	shf.r.wrap.b32 	%r1519, %r1126, %r1125, 8;
	shf.r.wrap.b32 	%r1520, %r1125, %r1126, 8;
	mov.b64 	%rd2252, {%r1520, %r1519};
	shr.u64 	%rd2253, %rd1679, 7;
	xor.b64  	%rd2254, %rd2251, %rd2253;
	xor.b64  	%rd2255, %rd2254, %rd2252;
	add.s64 	%rd2256, %rd1783, %rd1666;
	add.s64 	%rd2257, %rd2256, %rd2250;
	add.s64 	%rd2258, %rd2257, %rd2255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd1861;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 19;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 19;
	mov.b64 	%rd2259, {%r1524, %r1523};
	shf.l.wrap.b32 	%r1525, %r1521, %r1522, 3;
	shf.l.wrap.b32 	%r1526, %r1522, %r1521, 3;
	mov.b64 	%rd2260, {%r1526, %r1525};
	shr.u64 	%rd2261, %rd1861, 6;
	xor.b64  	%rd2262, %rd2259, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2260;
	shf.r.wrap.b32 	%r1527, %r1136, %r1135, 1;
	shf.r.wrap.b32 	%r1528, %r1135, %r1136, 1;
	mov.b64 	%rd2264, {%r1528, %r1527};
	shf.r.wrap.b32 	%r1529, %r1136, %r1135, 8;
	shf.r.wrap.b32 	%r1530, %r1135, %r1136, 8;
	mov.b64 	%rd2265, {%r1530, %r1529};
	shr.u64 	%rd2266, %rd1692, 7;
	xor.b64  	%rd2267, %rd2264, %rd2266;
	xor.b64  	%rd2268, %rd2267, %rd2265;
	add.s64 	%rd2269, %rd1796, %rd1679;
	add.s64 	%rd2270, %rd2269, %rd2263;
	add.s64 	%rd2271, %rd2270, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1531,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1532}, %rd2258;
	}
	shf.r.wrap.b32 	%r1533, %r1532, %r1531, 19;
	shf.r.wrap.b32 	%r1534, %r1531, %r1532, 19;
	mov.b64 	%rd2272, {%r1534, %r1533};
	shf.l.wrap.b32 	%r1535, %r1531, %r1532, 3;
	shf.l.wrap.b32 	%r1536, %r1532, %r1531, 3;
	mov.b64 	%rd2273, {%r1536, %r1535};
	shr.u64 	%rd2274, %rd2258, 6;
	xor.b64  	%rd2275, %rd2272, %rd2274;
	xor.b64  	%rd2276, %rd2275, %rd2273;
	shf.r.wrap.b32 	%r1537, %r1146, %r1145, 1;
	shf.r.wrap.b32 	%r1538, %r1145, %r1146, 1;
	mov.b64 	%rd2277, {%r1538, %r1537};
	shf.r.wrap.b32 	%r1539, %r1146, %r1145, 8;
	shf.r.wrap.b32 	%r1540, %r1145, %r1146, 8;
	mov.b64 	%rd2278, {%r1540, %r1539};
	shr.u64 	%rd2279, %rd1705, 7;
	xor.b64  	%rd2280, %rd2277, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2278;
	add.s64 	%rd2282, %rd1809, %rd1692;
	add.s64 	%rd2283, %rd2282, %rd2276;
	add.s64 	%rd2284, %rd2283, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1542}, %rd2271;
	}
	shf.r.wrap.b32 	%r1543, %r1542, %r1541, 19;
	shf.r.wrap.b32 	%r1544, %r1541, %r1542, 19;
	mov.b64 	%rd2285, {%r1544, %r1543};
	shf.l.wrap.b32 	%r1545, %r1541, %r1542, 3;
	shf.l.wrap.b32 	%r1546, %r1542, %r1541, 3;
	mov.b64 	%rd2286, {%r1546, %r1545};
	shr.u64 	%rd2287, %rd2271, 6;
	xor.b64  	%rd2288, %rd2285, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2286;
	shf.r.wrap.b32 	%r1547, %r1156, %r1155, 1;
	shf.r.wrap.b32 	%r1548, %r1155, %r1156, 1;
	mov.b64 	%rd2290, {%r1548, %r1547};
	shf.r.wrap.b32 	%r1549, %r1156, %r1155, 8;
	shf.r.wrap.b32 	%r1550, %r1155, %r1156, 8;
	mov.b64 	%rd2291, {%r1550, %r1549};
	shr.u64 	%rd2292, %rd1718, 7;
	xor.b64  	%rd2293, %rd2290, %rd2292;
	xor.b64  	%rd2294, %rd2293, %rd2291;
	add.s64 	%rd2295, %rd1822, %rd1705;
	add.s64 	%rd2296, %rd2295, %rd2289;
	add.s64 	%rd2297, %rd2296, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1551,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1552}, %rd2284;
	}
	shf.r.wrap.b32 	%r1553, %r1552, %r1551, 19;
	shf.r.wrap.b32 	%r1554, %r1551, %r1552, 19;
	mov.b64 	%rd2298, {%r1554, %r1553};
	shf.l.wrap.b32 	%r1555, %r1551, %r1552, 3;
	shf.l.wrap.b32 	%r1556, %r1552, %r1551, 3;
	mov.b64 	%rd2299, {%r1556, %r1555};
	shr.u64 	%rd2300, %rd2284, 6;
	xor.b64  	%rd2301, %rd2298, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2299;
	shf.r.wrap.b32 	%r1557, %r1166, %r1165, 1;
	shf.r.wrap.b32 	%r1558, %r1165, %r1166, 1;
	mov.b64 	%rd2303, {%r1558, %r1557};
	shf.r.wrap.b32 	%r1559, %r1166, %r1165, 8;
	shf.r.wrap.b32 	%r1560, %r1165, %r1166, 8;
	mov.b64 	%rd2304, {%r1560, %r1559};
	shr.u64 	%rd2305, %rd1731, 7;
	xor.b64  	%rd2306, %rd2303, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2304;
	add.s64 	%rd2308, %rd1835, %rd1718;
	add.s64 	%rd2309, %rd2308, %rd2302;
	add.s64 	%rd2310, %rd2309, %rd2307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1561,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1562}, %rd2297;
	}
	shf.r.wrap.b32 	%r1563, %r1562, %r1561, 19;
	shf.r.wrap.b32 	%r1564, %r1561, %r1562, 19;
	mov.b64 	%rd2311, {%r1564, %r1563};
	shf.l.wrap.b32 	%r1565, %r1561, %r1562, 3;
	shf.l.wrap.b32 	%r1566, %r1562, %r1561, 3;
	mov.b64 	%rd2312, {%r1566, %r1565};
	shr.u64 	%rd2313, %rd2297, 6;
	xor.b64  	%rd2314, %rd2311, %rd2313;
	xor.b64  	%rd2315, %rd2314, %rd2312;
	shf.r.wrap.b32 	%r1567, %r1176, %r1175, 1;
	shf.r.wrap.b32 	%r1568, %r1175, %r1176, 1;
	mov.b64 	%rd2316, {%r1568, %r1567};
	shf.r.wrap.b32 	%r1569, %r1176, %r1175, 8;
	shf.r.wrap.b32 	%r1570, %r1175, %r1176, 8;
	mov.b64 	%rd2317, {%r1570, %r1569};
	shr.u64 	%rd2318, %rd1744, 7;
	xor.b64  	%rd2319, %rd2316, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2317;
	add.s64 	%rd2321, %rd1848, %rd1731;
	add.s64 	%rd2322, %rd2321, %rd2315;
	add.s64 	%rd2323, %rd2322, %rd2320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1571,%dummy}, %rd2310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1572}, %rd2310;
	}
	shf.r.wrap.b32 	%r1573, %r1572, %r1571, 19;
	shf.r.wrap.b32 	%r1574, %r1571, %r1572, 19;
	mov.b64 	%rd2324, {%r1574, %r1573};
	shf.l.wrap.b32 	%r1575, %r1571, %r1572, 3;
	shf.l.wrap.b32 	%r1576, %r1572, %r1571, 3;
	mov.b64 	%rd2325, {%r1576, %r1575};
	shr.u64 	%rd2326, %rd2310, 6;
	xor.b64  	%rd2327, %rd2324, %rd2326;
	xor.b64  	%rd2328, %rd2327, %rd2325;
	shf.r.wrap.b32 	%r1577, %r1186, %r1185, 1;
	shf.r.wrap.b32 	%r1578, %r1185, %r1186, 1;
	mov.b64 	%rd2329, {%r1578, %r1577};
	shf.r.wrap.b32 	%r1579, %r1186, %r1185, 8;
	shf.r.wrap.b32 	%r1580, %r1185, %r1186, 8;
	mov.b64 	%rd2330, {%r1580, %r1579};
	shr.u64 	%rd2331, %rd1757, 7;
	xor.b64  	%rd2332, %rd2329, %rd2331;
	xor.b64  	%rd2333, %rd2332, %rd2330;
	add.s64 	%rd2334, %rd1861, %rd1744;
	add.s64 	%rd2335, %rd2334, %rd2328;
	add.s64 	%rd2336, %rd2335, %rd2333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd2323;
	}
	shf.r.wrap.b32 	%r1583, %r1582, %r1581, 19;
	shf.r.wrap.b32 	%r1584, %r1581, %r1582, 19;
	mov.b64 	%rd2337, {%r1584, %r1583};
	shf.l.wrap.b32 	%r1585, %r1581, %r1582, 3;
	shf.l.wrap.b32 	%r1586, %r1582, %r1581, 3;
	mov.b64 	%rd2338, {%r1586, %r1585};
	shr.u64 	%rd2339, %rd2323, 6;
	xor.b64  	%rd2340, %rd2337, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd2338;
	shf.r.wrap.b32 	%r1587, %r1196, %r1195, 1;
	shf.r.wrap.b32 	%r1588, %r1195, %r1196, 1;
	mov.b64 	%rd2342, {%r1588, %r1587};
	shf.r.wrap.b32 	%r1589, %r1196, %r1195, 8;
	shf.r.wrap.b32 	%r1590, %r1195, %r1196, 8;
	mov.b64 	%rd2343, {%r1590, %r1589};
	shr.u64 	%rd2344, %rd1770, 7;
	xor.b64  	%rd2345, %rd2342, %rd2344;
	xor.b64  	%rd2346, %rd2345, %rd2343;
	add.s64 	%rd2347, %rd2258, %rd1757;
	add.s64 	%rd2348, %rd2347, %rd2341;
	add.s64 	%rd2349, %rd2348, %rd2346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1591,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1592}, %rd2336;
	}
	shf.r.wrap.b32 	%r1593, %r1592, %r1591, 19;
	shf.r.wrap.b32 	%r1594, %r1591, %r1592, 19;
	mov.b64 	%rd2350, {%r1594, %r1593};
	shf.l.wrap.b32 	%r1595, %r1591, %r1592, 3;
	shf.l.wrap.b32 	%r1596, %r1592, %r1591, 3;
	mov.b64 	%rd2351, {%r1596, %r1595};
	shr.u64 	%rd2352, %rd2336, 6;
	xor.b64  	%rd2353, %rd2350, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2351;
	shf.r.wrap.b32 	%r1597, %r1206, %r1205, 1;
	shf.r.wrap.b32 	%r1598, %r1205, %r1206, 1;
	mov.b64 	%rd2355, {%r1598, %r1597};
	shf.r.wrap.b32 	%r1599, %r1206, %r1205, 8;
	shf.r.wrap.b32 	%r1600, %r1205, %r1206, 8;
	mov.b64 	%rd2356, {%r1600, %r1599};
	shr.u64 	%rd2357, %rd1783, 7;
	xor.b64  	%rd2358, %rd2355, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2356;
	add.s64 	%rd2360, %rd2271, %rd1770;
	add.s64 	%rd2361, %rd2360, %rd2354;
	add.s64 	%rd2362, %rd2361, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1601,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1602}, %rd2349;
	}
	shf.r.wrap.b32 	%r1603, %r1602, %r1601, 19;
	shf.r.wrap.b32 	%r1604, %r1601, %r1602, 19;
	mov.b64 	%rd2363, {%r1604, %r1603};
	shf.l.wrap.b32 	%r1605, %r1601, %r1602, 3;
	shf.l.wrap.b32 	%r1606, %r1602, %r1601, 3;
	mov.b64 	%rd2364, {%r1606, %r1605};
	shr.u64 	%rd2365, %rd2349, 6;
	xor.b64  	%rd2366, %rd2363, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2364;
	shf.r.wrap.b32 	%r1607, %r1216, %r1215, 1;
	shf.r.wrap.b32 	%r1608, %r1215, %r1216, 1;
	mov.b64 	%rd2368, {%r1608, %r1607};
	shf.r.wrap.b32 	%r1609, %r1216, %r1215, 8;
	shf.r.wrap.b32 	%r1610, %r1215, %r1216, 8;
	mov.b64 	%rd2369, {%r1610, %r1609};
	shr.u64 	%rd2370, %rd1796, 7;
	xor.b64  	%rd2371, %rd2368, %rd2370;
	xor.b64  	%rd2372, %rd2371, %rd2369;
	add.s64 	%rd2373, %rd2284, %rd1783;
	add.s64 	%rd2374, %rd2373, %rd2367;
	add.s64 	%rd2375, %rd2374, %rd2372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1611,%dummy}, %rd2362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1612}, %rd2362;
	}
	shf.r.wrap.b32 	%r1613, %r1612, %r1611, 19;
	shf.r.wrap.b32 	%r1614, %r1611, %r1612, 19;
	mov.b64 	%rd2376, {%r1614, %r1613};
	shf.l.wrap.b32 	%r1615, %r1611, %r1612, 3;
	shf.l.wrap.b32 	%r1616, %r1612, %r1611, 3;
	mov.b64 	%rd2377, {%r1616, %r1615};
	shr.u64 	%rd2378, %rd2362, 6;
	xor.b64  	%rd2379, %rd2376, %rd2378;
	xor.b64  	%rd2380, %rd2379, %rd2377;
	shf.r.wrap.b32 	%r1617, %r1226, %r1225, 1;
	shf.r.wrap.b32 	%r1618, %r1225, %r1226, 1;
	mov.b64 	%rd2381, {%r1618, %r1617};
	shf.r.wrap.b32 	%r1619, %r1226, %r1225, 8;
	shf.r.wrap.b32 	%r1620, %r1225, %r1226, 8;
	mov.b64 	%rd2382, {%r1620, %r1619};
	shr.u64 	%rd2383, %rd1809, 7;
	xor.b64  	%rd2384, %rd2381, %rd2383;
	xor.b64  	%rd2385, %rd2384, %rd2382;
	add.s64 	%rd2386, %rd2297, %rd1796;
	add.s64 	%rd2387, %rd2386, %rd2380;
	add.s64 	%rd2388, %rd2387, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1621,%dummy}, %rd2375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1622}, %rd2375;
	}
	shf.r.wrap.b32 	%r1623, %r1622, %r1621, 19;
	shf.r.wrap.b32 	%r1624, %r1621, %r1622, 19;
	mov.b64 	%rd2389, {%r1624, %r1623};
	shf.l.wrap.b32 	%r1625, %r1621, %r1622, 3;
	shf.l.wrap.b32 	%r1626, %r1622, %r1621, 3;
	mov.b64 	%rd2390, {%r1626, %r1625};
	shr.u64 	%rd2391, %rd2375, 6;
	xor.b64  	%rd2392, %rd2389, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2390;
	shf.r.wrap.b32 	%r1627, %r1236, %r1235, 1;
	shf.r.wrap.b32 	%r1628, %r1235, %r1236, 1;
	mov.b64 	%rd2394, {%r1628, %r1627};
	shf.r.wrap.b32 	%r1629, %r1236, %r1235, 8;
	shf.r.wrap.b32 	%r1630, %r1235, %r1236, 8;
	mov.b64 	%rd2395, {%r1630, %r1629};
	shr.u64 	%rd2396, %rd1822, 7;
	xor.b64  	%rd2397, %rd2394, %rd2396;
	xor.b64  	%rd2398, %rd2397, %rd2395;
	add.s64 	%rd2399, %rd2310, %rd1809;
	add.s64 	%rd2400, %rd2399, %rd2393;
	add.s64 	%rd2401, %rd2400, %rd2398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd2388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd2388;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 19;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 19;
	mov.b64 	%rd2402, {%r1634, %r1633};
	shf.l.wrap.b32 	%r1635, %r1631, %r1632, 3;
	shf.l.wrap.b32 	%r1636, %r1632, %r1631, 3;
	mov.b64 	%rd2403, {%r1636, %r1635};
	shr.u64 	%rd2404, %rd2388, 6;
	xor.b64  	%rd2405, %rd2402, %rd2404;
	xor.b64  	%rd2406, %rd2405, %rd2403;
	shf.r.wrap.b32 	%r1637, %r1246, %r1245, 1;
	shf.r.wrap.b32 	%r1638, %r1245, %r1246, 1;
	mov.b64 	%rd2407, {%r1638, %r1637};
	shf.r.wrap.b32 	%r1639, %r1246, %r1245, 8;
	shf.r.wrap.b32 	%r1640, %r1245, %r1246, 8;
	mov.b64 	%rd2408, {%r1640, %r1639};
	shr.u64 	%rd2409, %rd1835, 7;
	xor.b64  	%rd2410, %rd2407, %rd2409;
	xor.b64  	%rd2411, %rd2410, %rd2408;
	add.s64 	%rd2412, %rd2323, %rd1822;
	add.s64 	%rd2413, %rd2412, %rd2406;
	add.s64 	%rd2414, %rd2413, %rd2411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1641,%dummy}, %rd2401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1642}, %rd2401;
	}
	shf.r.wrap.b32 	%r1643, %r1642, %r1641, 19;
	shf.r.wrap.b32 	%r1644, %r1641, %r1642, 19;
	mov.b64 	%rd2415, {%r1644, %r1643};
	shf.l.wrap.b32 	%r1645, %r1641, %r1642, 3;
	shf.l.wrap.b32 	%r1646, %r1642, %r1641, 3;
	mov.b64 	%rd2416, {%r1646, %r1645};
	shr.u64 	%rd2417, %rd2401, 6;
	xor.b64  	%rd2418, %rd2415, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd2416;
	shf.r.wrap.b32 	%r1647, %r1512, %r1511, 1;
	shf.r.wrap.b32 	%r1648, %r1511, %r1512, 1;
	mov.b64 	%rd2420, {%r1648, %r1647};
	shf.r.wrap.b32 	%r1649, %r1512, %r1511, 8;
	shf.r.wrap.b32 	%r1650, %r1511, %r1512, 8;
	mov.b64 	%rd2421, {%r1650, %r1649};
	shr.u64 	%rd2422, %rd1848, 7;
	xor.b64  	%rd2423, %rd2420, %rd2422;
	xor.b64  	%rd2424, %rd2423, %rd2421;
	add.s64 	%rd2425, %rd2336, %rd1835;
	add.s64 	%rd2426, %rd2425, %rd2419;
	add.s64 	%rd2427, %rd2426, %rd2424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1651,%dummy}, %rd2414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1652}, %rd2414;
	}
	shf.r.wrap.b32 	%r1653, %r1652, %r1651, 19;
	shf.r.wrap.b32 	%r1654, %r1651, %r1652, 19;
	mov.b64 	%rd2428, {%r1654, %r1653};
	shf.l.wrap.b32 	%r1655, %r1651, %r1652, 3;
	shf.l.wrap.b32 	%r1656, %r1652, %r1651, 3;
	mov.b64 	%rd2429, {%r1656, %r1655};
	shr.u64 	%rd2430, %rd2414, 6;
	xor.b64  	%rd2431, %rd2428, %rd2430;
	xor.b64  	%rd2432, %rd2431, %rd2429;
	shf.r.wrap.b32 	%r1657, %r1522, %r1521, 1;
	shf.r.wrap.b32 	%r1658, %r1521, %r1522, 1;
	mov.b64 	%rd2433, {%r1658, %r1657};
	shf.r.wrap.b32 	%r1659, %r1522, %r1521, 8;
	shf.r.wrap.b32 	%r1660, %r1521, %r1522, 8;
	mov.b64 	%rd2434, {%r1660, %r1659};
	shr.u64 	%rd2435, %rd1861, 7;
	xor.b64  	%rd2436, %rd2433, %rd2435;
	xor.b64  	%rd2437, %rd2436, %rd2434;
	add.s64 	%rd2438, %rd2349, %rd1848;
	add.s64 	%rd2439, %rd2438, %rd2432;
	add.s64 	%rd2440, %rd2439, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1661,%dummy}, %rd2427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1662}, %rd2427;
	}
	shf.r.wrap.b32 	%r1663, %r1662, %r1661, 19;
	shf.r.wrap.b32 	%r1664, %r1661, %r1662, 19;
	mov.b64 	%rd2441, {%r1664, %r1663};
	shf.l.wrap.b32 	%r1665, %r1661, %r1662, 3;
	shf.l.wrap.b32 	%r1666, %r1662, %r1661, 3;
	mov.b64 	%rd2442, {%r1666, %r1665};
	shr.u64 	%rd2443, %rd2427, 6;
	xor.b64  	%rd2444, %rd2441, %rd2443;
	xor.b64  	%rd2445, %rd2444, %rd2442;
	shf.r.wrap.b32 	%r1667, %r1532, %r1531, 1;
	shf.r.wrap.b32 	%r1668, %r1531, %r1532, 1;
	mov.b64 	%rd2446, {%r1668, %r1667};
	shf.r.wrap.b32 	%r1669, %r1532, %r1531, 8;
	shf.r.wrap.b32 	%r1670, %r1531, %r1532, 8;
	mov.b64 	%rd2447, {%r1670, %r1669};
	shr.u64 	%rd2448, %rd2258, 7;
	xor.b64  	%rd2449, %rd2446, %rd2448;
	xor.b64  	%rd2450, %rd2449, %rd2447;
	add.s64 	%rd2451, %rd2362, %rd1861;
	add.s64 	%rd2452, %rd2451, %rd2445;
	add.s64 	%rd2453, %rd2452, %rd2450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd2234;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 14;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 14;
	mov.b64 	%rd2454, {%r1674, %r1673};
	shf.r.wrap.b32 	%r1675, %r1672, %r1671, 18;
	shf.r.wrap.b32 	%r1676, %r1671, %r1672, 18;
	mov.b64 	%rd2455, {%r1676, %r1675};
	xor.b64  	%rd2456, %rd2455, %rd2454;
	shf.l.wrap.b32 	%r1677, %r1671, %r1672, 23;
	shf.l.wrap.b32 	%r1678, %r1672, %r1671, 23;
	mov.b64 	%rd2457, {%r1678, %r1677};
	xor.b64  	%rd2458, %rd2456, %rd2457;
	xor.b64  	%rd2459, %rd2210, %rd2186;
	and.b64  	%rd2460, %rd2459, %rd2234;
	xor.b64  	%rd2461, %rd2460, %rd2186;
	add.s64 	%rd2462, %rd2461, %rd2162;
	add.s64 	%rd2463, %rd2462, %rd2258;
	add.s64 	%rd2464, %rd2463, %rd83;
	add.s64 	%rd2465, %rd2464, %rd2458;
	add.s64 	%rd2466, %rd2465, %rd2173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd2245;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 28;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 28;
	mov.b64 	%rd2467, {%r1682, %r1681};
	shf.l.wrap.b32 	%r1683, %r1679, %r1680, 30;
	shf.l.wrap.b32 	%r1684, %r1680, %r1679, 30;
	mov.b64 	%rd2468, {%r1684, %r1683};
	xor.b64  	%rd2469, %rd2468, %rd2467;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 25;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 25;
	mov.b64 	%rd2470, {%r1686, %r1685};
	xor.b64  	%rd2471, %rd2469, %rd2470;
	xor.b64  	%rd2472, %rd2245, %rd2197;
	xor.b64  	%rd2473, %rd2245, %rd2221;
	and.b64  	%rd2474, %rd2473, %rd2472;
	xor.b64  	%rd2475, %rd2474, %rd2245;
	add.s64 	%rd2476, %rd2465, %rd2475;
	add.s64 	%rd2477, %rd2476, %rd2471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd2466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd2466;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 14;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 14;
	mov.b64 	%rd2478, {%r1690, %r1689};
	shf.r.wrap.b32 	%r1691, %r1688, %r1687, 18;
	shf.r.wrap.b32 	%r1692, %r1687, %r1688, 18;
	mov.b64 	%rd2479, {%r1692, %r1691};
	xor.b64  	%rd2480, %rd2479, %rd2478;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 23;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 23;
	mov.b64 	%rd2481, {%r1694, %r1693};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	xor.b64  	%rd2483, %rd2234, %rd2210;
	and.b64  	%rd2484, %rd2466, %rd2483;
	xor.b64  	%rd2485, %rd2484, %rd2210;
	add.s64 	%rd2486, %rd2271, %rd2186;
	add.s64 	%rd2487, %rd2486, %rd84;
	add.s64 	%rd2488, %rd2487, %rd2485;
	add.s64 	%rd2489, %rd2488, %rd2482;
	add.s64 	%rd2490, %rd2489, %rd2197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd2477;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 28;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 28;
	mov.b64 	%rd2491, {%r1698, %r1697};
	shf.l.wrap.b32 	%r1699, %r1695, %r1696, 30;
	shf.l.wrap.b32 	%r1700, %r1696, %r1695, 30;
	mov.b64 	%rd2492, {%r1700, %r1699};
	xor.b64  	%rd2493, %rd2492, %rd2491;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 25;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 25;
	mov.b64 	%rd2494, {%r1702, %r1701};
	xor.b64  	%rd2495, %rd2493, %rd2494;
	xor.b64  	%rd2496, %rd2477, %rd2221;
	xor.b64  	%rd2497, %rd2477, %rd2245;
	and.b64  	%rd2498, %rd2497, %rd2496;
	xor.b64  	%rd2499, %rd2498, %rd2477;
	add.s64 	%rd2500, %rd2489, %rd2499;
	add.s64 	%rd2501, %rd2500, %rd2495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2490;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 14;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 14;
	mov.b64 	%rd2502, {%r1706, %r1705};
	shf.r.wrap.b32 	%r1707, %r1704, %r1703, 18;
	shf.r.wrap.b32 	%r1708, %r1703, %r1704, 18;
	mov.b64 	%rd2503, {%r1708, %r1707};
	xor.b64  	%rd2504, %rd2503, %rd2502;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 23;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 23;
	mov.b64 	%rd2505, {%r1710, %r1709};
	xor.b64  	%rd2506, %rd2504, %rd2505;
	xor.b64  	%rd2507, %rd2466, %rd2234;
	and.b64  	%rd2508, %rd2490, %rd2507;
	xor.b64  	%rd2509, %rd2508, %rd2234;
	add.s64 	%rd2510, %rd2284, %rd2210;
	add.s64 	%rd2511, %rd2510, %rd85;
	add.s64 	%rd2512, %rd2511, %rd2509;
	add.s64 	%rd2513, %rd2512, %rd2506;
	add.s64 	%rd2514, %rd2513, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2501;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 28;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 28;
	mov.b64 	%rd2515, {%r1714, %r1713};
	shf.l.wrap.b32 	%r1715, %r1711, %r1712, 30;
	shf.l.wrap.b32 	%r1716, %r1712, %r1711, 30;
	mov.b64 	%rd2516, {%r1716, %r1715};
	xor.b64  	%rd2517, %rd2516, %rd2515;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 25;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 25;
	mov.b64 	%rd2518, {%r1718, %r1717};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	xor.b64  	%rd2520, %rd2501, %rd2245;
	xor.b64  	%rd2521, %rd2501, %rd2477;
	and.b64  	%rd2522, %rd2521, %rd2520;
	xor.b64  	%rd2523, %rd2522, %rd2501;
	add.s64 	%rd2524, %rd2513, %rd2523;
	add.s64 	%rd2525, %rd2524, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2514;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 14;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 14;
	mov.b64 	%rd2526, {%r1722, %r1721};
	shf.r.wrap.b32 	%r1723, %r1720, %r1719, 18;
	shf.r.wrap.b32 	%r1724, %r1719, %r1720, 18;
	mov.b64 	%rd2527, {%r1724, %r1723};
	xor.b64  	%rd2528, %rd2527, %rd2526;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 23;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 23;
	mov.b64 	%rd2529, {%r1726, %r1725};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	xor.b64  	%rd2531, %rd2490, %rd2466;
	and.b64  	%rd2532, %rd2514, %rd2531;
	xor.b64  	%rd2533, %rd2532, %rd2466;
	add.s64 	%rd2534, %rd2297, %rd2234;
	add.s64 	%rd2535, %rd2534, %rd86;
	add.s64 	%rd2536, %rd2535, %rd2533;
	add.s64 	%rd2537, %rd2536, %rd2530;
	add.s64 	%rd2538, %rd2537, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2525;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 28;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 28;
	mov.b64 	%rd2539, {%r1730, %r1729};
	shf.l.wrap.b32 	%r1731, %r1727, %r1728, 30;
	shf.l.wrap.b32 	%r1732, %r1728, %r1727, 30;
	mov.b64 	%rd2540, {%r1732, %r1731};
	xor.b64  	%rd2541, %rd2540, %rd2539;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 25;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 25;
	mov.b64 	%rd2542, {%r1734, %r1733};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	xor.b64  	%rd2544, %rd2525, %rd2477;
	xor.b64  	%rd2545, %rd2525, %rd2501;
	and.b64  	%rd2546, %rd2545, %rd2544;
	xor.b64  	%rd2547, %rd2546, %rd2525;
	add.s64 	%rd2548, %rd2537, %rd2547;
	add.s64 	%rd2549, %rd2548, %rd2543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2538;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 14;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 14;
	mov.b64 	%rd2550, {%r1738, %r1737};
	shf.r.wrap.b32 	%r1739, %r1736, %r1735, 18;
	shf.r.wrap.b32 	%r1740, %r1735, %r1736, 18;
	mov.b64 	%rd2551, {%r1740, %r1739};
	xor.b64  	%rd2552, %rd2551, %rd2550;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 23;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 23;
	mov.b64 	%rd2553, {%r1742, %r1741};
	xor.b64  	%rd2554, %rd2552, %rd2553;
	xor.b64  	%rd2555, %rd2514, %rd2490;
	and.b64  	%rd2556, %rd2538, %rd2555;
	xor.b64  	%rd2557, %rd2556, %rd2490;
	add.s64 	%rd2558, %rd2466, %rd2310;
	add.s64 	%rd2559, %rd2558, %rd87;
	add.s64 	%rd2560, %rd2559, %rd2557;
	add.s64 	%rd2561, %rd2560, %rd2554;
	add.s64 	%rd2562, %rd2561, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2549;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 28;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 28;
	mov.b64 	%rd2563, {%r1746, %r1745};
	shf.l.wrap.b32 	%r1747, %r1743, %r1744, 30;
	shf.l.wrap.b32 	%r1748, %r1744, %r1743, 30;
	mov.b64 	%rd2564, {%r1748, %r1747};
	xor.b64  	%rd2565, %rd2564, %rd2563;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 25;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 25;
	mov.b64 	%rd2566, {%r1750, %r1749};
	xor.b64  	%rd2567, %rd2565, %rd2566;
	xor.b64  	%rd2568, %rd2549, %rd2501;
	xor.b64  	%rd2569, %rd2549, %rd2525;
	and.b64  	%rd2570, %rd2569, %rd2568;
	xor.b64  	%rd2571, %rd2570, %rd2549;
	add.s64 	%rd2572, %rd2561, %rd2571;
	add.s64 	%rd2573, %rd2572, %rd2567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2562;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 14;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 14;
	mov.b64 	%rd2574, {%r1754, %r1753};
	shf.r.wrap.b32 	%r1755, %r1752, %r1751, 18;
	shf.r.wrap.b32 	%r1756, %r1751, %r1752, 18;
	mov.b64 	%rd2575, {%r1756, %r1755};
	xor.b64  	%rd2576, %rd2575, %rd2574;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 23;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 23;
	mov.b64 	%rd2577, {%r1758, %r1757};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	xor.b64  	%rd2579, %rd2538, %rd2514;
	and.b64  	%rd2580, %rd2562, %rd2579;
	xor.b64  	%rd2581, %rd2580, %rd2514;
	add.s64 	%rd2582, %rd2490, %rd2323;
	add.s64 	%rd2583, %rd2582, %rd88;
	add.s64 	%rd2584, %rd2583, %rd2581;
	add.s64 	%rd2585, %rd2584, %rd2578;
	add.s64 	%rd2586, %rd2585, %rd2501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd2573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd2573;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 28;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 28;
	mov.b64 	%rd2587, {%r1762, %r1761};
	shf.l.wrap.b32 	%r1763, %r1759, %r1760, 30;
	shf.l.wrap.b32 	%r1764, %r1760, %r1759, 30;
	mov.b64 	%rd2588, {%r1764, %r1763};
	xor.b64  	%rd2589, %rd2588, %rd2587;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 25;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 25;
	mov.b64 	%rd2590, {%r1766, %r1765};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	xor.b64  	%rd2592, %rd2573, %rd2525;
	xor.b64  	%rd2593, %rd2573, %rd2549;
	and.b64  	%rd2594, %rd2593, %rd2592;
	xor.b64  	%rd2595, %rd2594, %rd2573;
	add.s64 	%rd2596, %rd2585, %rd2595;
	add.s64 	%rd2597, %rd2596, %rd2591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd2586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd2586;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 14;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 14;
	mov.b64 	%rd2598, {%r1770, %r1769};
	shf.r.wrap.b32 	%r1771, %r1768, %r1767, 18;
	shf.r.wrap.b32 	%r1772, %r1767, %r1768, 18;
	mov.b64 	%rd2599, {%r1772, %r1771};
	xor.b64  	%rd2600, %rd2599, %rd2598;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 23;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 23;
	mov.b64 	%rd2601, {%r1774, %r1773};
	xor.b64  	%rd2602, %rd2600, %rd2601;
	xor.b64  	%rd2603, %rd2562, %rd2538;
	and.b64  	%rd2604, %rd2586, %rd2603;
	xor.b64  	%rd2605, %rd2604, %rd2538;
	add.s64 	%rd2606, %rd2514, %rd2336;
	add.s64 	%rd2607, %rd2606, %rd89;
	add.s64 	%rd2608, %rd2607, %rd2605;
	add.s64 	%rd2609, %rd2608, %rd2602;
	add.s64 	%rd2610, %rd2609, %rd2525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd2597;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 28;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 28;
	mov.b64 	%rd2611, {%r1778, %r1777};
	shf.l.wrap.b32 	%r1779, %r1775, %r1776, 30;
	shf.l.wrap.b32 	%r1780, %r1776, %r1775, 30;
	mov.b64 	%rd2612, {%r1780, %r1779};
	xor.b64  	%rd2613, %rd2612, %rd2611;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 25;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 25;
	mov.b64 	%rd2614, {%r1782, %r1781};
	xor.b64  	%rd2615, %rd2613, %rd2614;
	xor.b64  	%rd2616, %rd2597, %rd2549;
	xor.b64  	%rd2617, %rd2597, %rd2573;
	and.b64  	%rd2618, %rd2617, %rd2616;
	xor.b64  	%rd2619, %rd2618, %rd2597;
	add.s64 	%rd2620, %rd2609, %rd2619;
	add.s64 	%rd2621, %rd2620, %rd2615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd2610;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 14;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 14;
	mov.b64 	%rd2622, {%r1786, %r1785};
	shf.r.wrap.b32 	%r1787, %r1784, %r1783, 18;
	shf.r.wrap.b32 	%r1788, %r1783, %r1784, 18;
	mov.b64 	%rd2623, {%r1788, %r1787};
	xor.b64  	%rd2624, %rd2623, %rd2622;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 23;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 23;
	mov.b64 	%rd2625, {%r1790, %r1789};
	xor.b64  	%rd2626, %rd2624, %rd2625;
	xor.b64  	%rd2627, %rd2586, %rd2562;
	and.b64  	%rd2628, %rd2610, %rd2627;
	xor.b64  	%rd2629, %rd2628, %rd2562;
	add.s64 	%rd2630, %rd2538, %rd2349;
	add.s64 	%rd2631, %rd2630, %rd90;
	add.s64 	%rd2632, %rd2631, %rd2629;
	add.s64 	%rd2633, %rd2632, %rd2626;
	add.s64 	%rd2634, %rd2633, %rd2549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd2621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd2621;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 28;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 28;
	mov.b64 	%rd2635, {%r1794, %r1793};
	shf.l.wrap.b32 	%r1795, %r1791, %r1792, 30;
	shf.l.wrap.b32 	%r1796, %r1792, %r1791, 30;
	mov.b64 	%rd2636, {%r1796, %r1795};
	xor.b64  	%rd2637, %rd2636, %rd2635;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 25;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 25;
	mov.b64 	%rd2638, {%r1798, %r1797};
	xor.b64  	%rd2639, %rd2637, %rd2638;
	xor.b64  	%rd2640, %rd2621, %rd2573;
	xor.b64  	%rd2641, %rd2621, %rd2597;
	and.b64  	%rd2642, %rd2641, %rd2640;
	xor.b64  	%rd2643, %rd2642, %rd2621;
	add.s64 	%rd2644, %rd2633, %rd2643;
	add.s64 	%rd2645, %rd2644, %rd2639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd2634;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 14;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 14;
	mov.b64 	%rd2646, {%r1802, %r1801};
	shf.r.wrap.b32 	%r1803, %r1800, %r1799, 18;
	shf.r.wrap.b32 	%r1804, %r1799, %r1800, 18;
	mov.b64 	%rd2647, {%r1804, %r1803};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r1805, %r1799, %r1800, 23;
	shf.l.wrap.b32 	%r1806, %r1800, %r1799, 23;
	mov.b64 	%rd2649, {%r1806, %r1805};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	xor.b64  	%rd2651, %rd2610, %rd2586;
	and.b64  	%rd2652, %rd2634, %rd2651;
	xor.b64  	%rd2653, %rd2652, %rd2586;
	add.s64 	%rd2654, %rd2562, %rd2362;
	add.s64 	%rd2655, %rd2654, %rd91;
	add.s64 	%rd2656, %rd2655, %rd2653;
	add.s64 	%rd2657, %rd2656, %rd2650;
	add.s64 	%rd2658, %rd2657, %rd2573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2645;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 28;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 28;
	mov.b64 	%rd2659, {%r1810, %r1809};
	shf.l.wrap.b32 	%r1811, %r1807, %r1808, 30;
	shf.l.wrap.b32 	%r1812, %r1808, %r1807, 30;
	mov.b64 	%rd2660, {%r1812, %r1811};
	xor.b64  	%rd2661, %rd2660, %rd2659;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 25;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 25;
	mov.b64 	%rd2662, {%r1814, %r1813};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	xor.b64  	%rd2664, %rd2645, %rd2597;
	xor.b64  	%rd2665, %rd2645, %rd2621;
	and.b64  	%rd2666, %rd2665, %rd2664;
	xor.b64  	%rd2667, %rd2666, %rd2645;
	add.s64 	%rd2668, %rd2657, %rd2667;
	add.s64 	%rd2669, %rd2668, %rd2663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2658;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 14;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 14;
	mov.b64 	%rd2670, {%r1818, %r1817};
	shf.r.wrap.b32 	%r1819, %r1816, %r1815, 18;
	shf.r.wrap.b32 	%r1820, %r1815, %r1816, 18;
	mov.b64 	%rd2671, {%r1820, %r1819};
	xor.b64  	%rd2672, %rd2671, %rd2670;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 23;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 23;
	mov.b64 	%rd2673, {%r1822, %r1821};
	xor.b64  	%rd2674, %rd2672, %rd2673;
	xor.b64  	%rd2675, %rd2634, %rd2610;
	and.b64  	%rd2676, %rd2658, %rd2675;
	xor.b64  	%rd2677, %rd2676, %rd2610;
	add.s64 	%rd2678, %rd2586, %rd2375;
	add.s64 	%rd2679, %rd2678, %rd92;
	add.s64 	%rd2680, %rd2679, %rd2677;
	add.s64 	%rd2681, %rd2680, %rd2674;
	add.s64 	%rd2682, %rd2681, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2669;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 28;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 28;
	mov.b64 	%rd2683, {%r1826, %r1825};
	shf.l.wrap.b32 	%r1827, %r1823, %r1824, 30;
	shf.l.wrap.b32 	%r1828, %r1824, %r1823, 30;
	mov.b64 	%rd2684, {%r1828, %r1827};
	xor.b64  	%rd2685, %rd2684, %rd2683;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 25;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 25;
	mov.b64 	%rd2686, {%r1830, %r1829};
	xor.b64  	%rd2687, %rd2685, %rd2686;
	xor.b64  	%rd2688, %rd2669, %rd2621;
	xor.b64  	%rd2689, %rd2669, %rd2645;
	and.b64  	%rd2690, %rd2689, %rd2688;
	xor.b64  	%rd2691, %rd2690, %rd2669;
	add.s64 	%rd2692, %rd2681, %rd2691;
	add.s64 	%rd2693, %rd2692, %rd2687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2682;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 14;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 14;
	mov.b64 	%rd2694, {%r1834, %r1833};
	shf.r.wrap.b32 	%r1835, %r1832, %r1831, 18;
	shf.r.wrap.b32 	%r1836, %r1831, %r1832, 18;
	mov.b64 	%rd2695, {%r1836, %r1835};
	xor.b64  	%rd2696, %rd2695, %rd2694;
	shf.l.wrap.b32 	%r1837, %r1831, %r1832, 23;
	shf.l.wrap.b32 	%r1838, %r1832, %r1831, 23;
	mov.b64 	%rd2697, {%r1838, %r1837};
	xor.b64  	%rd2698, %rd2696, %rd2697;
	xor.b64  	%rd2699, %rd2658, %rd2634;
	and.b64  	%rd2700, %rd2682, %rd2699;
	xor.b64  	%rd2701, %rd2700, %rd2634;
	add.s64 	%rd2702, %rd2610, %rd2388;
	add.s64 	%rd2703, %rd2702, %rd93;
	add.s64 	%rd2704, %rd2703, %rd2701;
	add.s64 	%rd2705, %rd2704, %rd2698;
	add.s64 	%rd2706, %rd2705, %rd2621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd2693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd2693;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 28;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 28;
	mov.b64 	%rd2707, {%r1842, %r1841};
	shf.l.wrap.b32 	%r1843, %r1839, %r1840, 30;
	shf.l.wrap.b32 	%r1844, %r1840, %r1839, 30;
	mov.b64 	%rd2708, {%r1844, %r1843};
	xor.b64  	%rd2709, %rd2708, %rd2707;
	shf.l.wrap.b32 	%r1845, %r1839, %r1840, 25;
	shf.l.wrap.b32 	%r1846, %r1840, %r1839, 25;
	mov.b64 	%rd2710, {%r1846, %r1845};
	xor.b64  	%rd2711, %rd2709, %rd2710;
	xor.b64  	%rd2712, %rd2693, %rd2645;
	xor.b64  	%rd2713, %rd2693, %rd2669;
	and.b64  	%rd2714, %rd2713, %rd2712;
	xor.b64  	%rd2715, %rd2714, %rd2693;
	add.s64 	%rd2716, %rd2705, %rd2715;
	add.s64 	%rd2717, %rd2716, %rd2711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1847,%dummy}, %rd2706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd2706;
	}
	shf.r.wrap.b32 	%r1849, %r1848, %r1847, 14;
	shf.r.wrap.b32 	%r1850, %r1847, %r1848, 14;
	mov.b64 	%rd2718, {%r1850, %r1849};
	shf.r.wrap.b32 	%r1851, %r1848, %r1847, 18;
	shf.r.wrap.b32 	%r1852, %r1847, %r1848, 18;
	mov.b64 	%rd2719, {%r1852, %r1851};
	xor.b64  	%rd2720, %rd2719, %rd2718;
	shf.l.wrap.b32 	%r1853, %r1847, %r1848, 23;
	shf.l.wrap.b32 	%r1854, %r1848, %r1847, 23;
	mov.b64 	%rd2721, {%r1854, %r1853};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	xor.b64  	%rd2723, %rd2682, %rd2658;
	and.b64  	%rd2724, %rd2706, %rd2723;
	xor.b64  	%rd2725, %rd2724, %rd2658;
	add.s64 	%rd2726, %rd2634, %rd2401;
	add.s64 	%rd2727, %rd2726, %rd94;
	add.s64 	%rd2728, %rd2727, %rd2725;
	add.s64 	%rd2729, %rd2728, %rd2722;
	add.s64 	%rd2730, %rd2729, %rd2645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1855,%dummy}, %rd2717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1856}, %rd2717;
	}
	shf.r.wrap.b32 	%r1857, %r1856, %r1855, 28;
	shf.r.wrap.b32 	%r1858, %r1855, %r1856, 28;
	mov.b64 	%rd2731, {%r1858, %r1857};
	shf.l.wrap.b32 	%r1859, %r1855, %r1856, 30;
	shf.l.wrap.b32 	%r1860, %r1856, %r1855, 30;
	mov.b64 	%rd2732, {%r1860, %r1859};
	xor.b64  	%rd2733, %rd2732, %rd2731;
	shf.l.wrap.b32 	%r1861, %r1855, %r1856, 25;
	shf.l.wrap.b32 	%r1862, %r1856, %r1855, 25;
	mov.b64 	%rd2734, {%r1862, %r1861};
	xor.b64  	%rd2735, %rd2733, %rd2734;
	xor.b64  	%rd2736, %rd2717, %rd2669;
	xor.b64  	%rd2737, %rd2717, %rd2693;
	and.b64  	%rd2738, %rd2737, %rd2736;
	xor.b64  	%rd2739, %rd2738, %rd2717;
	add.s64 	%rd2740, %rd2729, %rd2739;
	add.s64 	%rd2741, %rd2740, %rd2735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd2730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1864}, %rd2730;
	}
	shf.r.wrap.b32 	%r1865, %r1864, %r1863, 14;
	shf.r.wrap.b32 	%r1866, %r1863, %r1864, 14;
	mov.b64 	%rd2742, {%r1866, %r1865};
	shf.r.wrap.b32 	%r1867, %r1864, %r1863, 18;
	shf.r.wrap.b32 	%r1868, %r1863, %r1864, 18;
	mov.b64 	%rd2743, {%r1868, %r1867};
	xor.b64  	%rd2744, %rd2743, %rd2742;
	shf.l.wrap.b32 	%r1869, %r1863, %r1864, 23;
	shf.l.wrap.b32 	%r1870, %r1864, %r1863, 23;
	mov.b64 	%rd2745, {%r1870, %r1869};
	xor.b64  	%rd2746, %rd2744, %rd2745;
	xor.b64  	%rd2747, %rd2706, %rd2682;
	and.b64  	%rd2748, %rd2730, %rd2747;
	xor.b64  	%rd2749, %rd2748, %rd2682;
	add.s64 	%rd2750, %rd2658, %rd2414;
	add.s64 	%rd2751, %rd2750, %rd95;
	add.s64 	%rd2752, %rd2751, %rd2749;
	add.s64 	%rd2753, %rd2752, %rd2746;
	add.s64 	%rd2754, %rd2753, %rd2669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1871,%dummy}, %rd2741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1872}, %rd2741;
	}
	shf.r.wrap.b32 	%r1873, %r1872, %r1871, 28;
	shf.r.wrap.b32 	%r1874, %r1871, %r1872, 28;
	mov.b64 	%rd2755, {%r1874, %r1873};
	shf.l.wrap.b32 	%r1875, %r1871, %r1872, 30;
	shf.l.wrap.b32 	%r1876, %r1872, %r1871, 30;
	mov.b64 	%rd2756, {%r1876, %r1875};
	xor.b64  	%rd2757, %rd2756, %rd2755;
	shf.l.wrap.b32 	%r1877, %r1871, %r1872, 25;
	shf.l.wrap.b32 	%r1878, %r1872, %r1871, 25;
	mov.b64 	%rd2758, {%r1878, %r1877};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	xor.b64  	%rd2760, %rd2741, %rd2693;
	xor.b64  	%rd2761, %rd2741, %rd2717;
	and.b64  	%rd2762, %rd2761, %rd2760;
	xor.b64  	%rd2763, %rd2762, %rd2741;
	add.s64 	%rd2764, %rd2753, %rd2763;
	add.s64 	%rd2765, %rd2764, %rd2759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1879,%dummy}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1880}, %rd2754;
	}
	shf.r.wrap.b32 	%r1881, %r1880, %r1879, 14;
	shf.r.wrap.b32 	%r1882, %r1879, %r1880, 14;
	mov.b64 	%rd2766, {%r1882, %r1881};
	shf.r.wrap.b32 	%r1883, %r1880, %r1879, 18;
	shf.r.wrap.b32 	%r1884, %r1879, %r1880, 18;
	mov.b64 	%rd2767, {%r1884, %r1883};
	xor.b64  	%rd2768, %rd2767, %rd2766;
	shf.l.wrap.b32 	%r1885, %r1879, %r1880, 23;
	shf.l.wrap.b32 	%r1886, %r1880, %r1879, 23;
	mov.b64 	%rd2769, {%r1886, %r1885};
	xor.b64  	%rd2770, %rd2768, %rd2769;
	xor.b64  	%rd2771, %rd2730, %rd2706;
	and.b64  	%rd2772, %rd2754, %rd2771;
	xor.b64  	%rd2773, %rd2772, %rd2706;
	add.s64 	%rd2774, %rd2682, %rd2427;
	add.s64 	%rd2775, %rd2774, %rd96;
	add.s64 	%rd2776, %rd2775, %rd2773;
	add.s64 	%rd2777, %rd2776, %rd2770;
	add.s64 	%rd2778, %rd2777, %rd2693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1887,%dummy}, %rd2765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1888}, %rd2765;
	}
	shf.r.wrap.b32 	%r1889, %r1888, %r1887, 28;
	shf.r.wrap.b32 	%r1890, %r1887, %r1888, 28;
	mov.b64 	%rd2779, {%r1890, %r1889};
	shf.l.wrap.b32 	%r1891, %r1887, %r1888, 30;
	shf.l.wrap.b32 	%r1892, %r1888, %r1887, 30;
	mov.b64 	%rd2780, {%r1892, %r1891};
	xor.b64  	%rd2781, %rd2780, %rd2779;
	shf.l.wrap.b32 	%r1893, %r1887, %r1888, 25;
	shf.l.wrap.b32 	%r1894, %r1888, %r1887, 25;
	mov.b64 	%rd2782, {%r1894, %r1893};
	xor.b64  	%rd2783, %rd2781, %rd2782;
	xor.b64  	%rd2784, %rd2765, %rd2717;
	xor.b64  	%rd2785, %rd2765, %rd2741;
	and.b64  	%rd2786, %rd2785, %rd2784;
	xor.b64  	%rd2787, %rd2786, %rd2765;
	add.s64 	%rd2788, %rd2777, %rd2787;
	add.s64 	%rd2789, %rd2788, %rd2783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1895,%dummy}, %rd2778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1896}, %rd2778;
	}
	shf.r.wrap.b32 	%r1897, %r1896, %r1895, 14;
	shf.r.wrap.b32 	%r1898, %r1895, %r1896, 14;
	mov.b64 	%rd2790, {%r1898, %r1897};
	shf.r.wrap.b32 	%r1899, %r1896, %r1895, 18;
	shf.r.wrap.b32 	%r1900, %r1895, %r1896, 18;
	mov.b64 	%rd2791, {%r1900, %r1899};
	xor.b64  	%rd2792, %rd2791, %rd2790;
	shf.l.wrap.b32 	%r1901, %r1895, %r1896, 23;
	shf.l.wrap.b32 	%r1902, %r1896, %r1895, 23;
	mov.b64 	%rd2793, {%r1902, %r1901};
	xor.b64  	%rd2794, %rd2792, %rd2793;
	xor.b64  	%rd2795, %rd2754, %rd2730;
	and.b64  	%rd2796, %rd2778, %rd2795;
	xor.b64  	%rd2797, %rd2796, %rd2730;
	add.s64 	%rd2798, %rd2706, %rd2440;
	add.s64 	%rd2799, %rd2798, %rd97;
	add.s64 	%rd2800, %rd2799, %rd2797;
	add.s64 	%rd2801, %rd2800, %rd2794;
	add.s64 	%rd2802, %rd2801, %rd2717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1903,%dummy}, %rd2789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1904}, %rd2789;
	}
	shf.r.wrap.b32 	%r1905, %r1904, %r1903, 28;
	shf.r.wrap.b32 	%r1906, %r1903, %r1904, 28;
	mov.b64 	%rd2803, {%r1906, %r1905};
	shf.l.wrap.b32 	%r1907, %r1903, %r1904, 30;
	shf.l.wrap.b32 	%r1908, %r1904, %r1903, 30;
	mov.b64 	%rd2804, {%r1908, %r1907};
	xor.b64  	%rd2805, %rd2804, %rd2803;
	shf.l.wrap.b32 	%r1909, %r1903, %r1904, 25;
	shf.l.wrap.b32 	%r1910, %r1904, %r1903, 25;
	mov.b64 	%rd2806, {%r1910, %r1909};
	xor.b64  	%rd2807, %rd2805, %rd2806;
	xor.b64  	%rd2808, %rd2789, %rd2741;
	xor.b64  	%rd2809, %rd2789, %rd2765;
	and.b64  	%rd2810, %rd2809, %rd2808;
	xor.b64  	%rd2811, %rd2810, %rd2789;
	add.s64 	%rd2812, %rd2801, %rd2811;
	add.s64 	%rd2813, %rd2812, %rd2807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1911,%dummy}, %rd2802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1912}, %rd2802;
	}
	shf.r.wrap.b32 	%r1913, %r1912, %r1911, 14;
	shf.r.wrap.b32 	%r1914, %r1911, %r1912, 14;
	mov.b64 	%rd2814, {%r1914, %r1913};
	shf.r.wrap.b32 	%r1915, %r1912, %r1911, 18;
	shf.r.wrap.b32 	%r1916, %r1911, %r1912, 18;
	mov.b64 	%rd2815, {%r1916, %r1915};
	xor.b64  	%rd2816, %rd2815, %rd2814;
	shf.l.wrap.b32 	%r1917, %r1911, %r1912, 23;
	shf.l.wrap.b32 	%r1918, %r1912, %r1911, 23;
	mov.b64 	%rd2817, {%r1918, %r1917};
	xor.b64  	%rd2818, %rd2816, %rd2817;
	xor.b64  	%rd2819, %rd2778, %rd2754;
	and.b64  	%rd2820, %rd2802, %rd2819;
	xor.b64  	%rd2821, %rd2820, %rd2754;
	add.s64 	%rd2822, %rd2730, %rd2453;
	add.s64 	%rd2823, %rd2822, %rd98;
	add.s64 	%rd2824, %rd2823, %rd2821;
	add.s64 	%rd2825, %rd2824, %rd2818;
	add.s64 	%rd2826, %rd2825, %rd2741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1919,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd2813;
	}
	shf.r.wrap.b32 	%r1921, %r1920, %r1919, 28;
	shf.r.wrap.b32 	%r1922, %r1919, %r1920, 28;
	mov.b64 	%rd2827, {%r1922, %r1921};
	shf.l.wrap.b32 	%r1923, %r1919, %r1920, 30;
	shf.l.wrap.b32 	%r1924, %r1920, %r1919, 30;
	mov.b64 	%rd2828, {%r1924, %r1923};
	xor.b64  	%rd2829, %rd2828, %rd2827;
	shf.l.wrap.b32 	%r1925, %r1919, %r1920, 25;
	shf.l.wrap.b32 	%r1926, %r1920, %r1919, 25;
	mov.b64 	%rd2830, {%r1926, %r1925};
	xor.b64  	%rd2831, %rd2829, %rd2830;
	xor.b64  	%rd2832, %rd2813, %rd2765;
	xor.b64  	%rd2833, %rd2813, %rd2789;
	and.b64  	%rd2834, %rd2833, %rd2832;
	xor.b64  	%rd2835, %rd2834, %rd2813;
	add.s64 	%rd2836, %rd2825, %rd2835;
	add.s64 	%rd2837, %rd2836, %rd2831;
	add.s64 	%rd2853, %rd2754, 6620516959819538809;
	add.s64 	%rd2854, %rd2778, 2270897969802886507;
	add.s64 	%rd2855, %rd2802, -7276294671716946913;
	add.s64 	%rd2856, %rd2826, 5840696475078001361;
	add.s64 	%rd2857, %rd2765, -6534734903238641935;
	add.s64 	%rd2858, %rd2789, 4354685564936845355;
	add.s64 	%rd2859, %rd2813, -4942790177534073029;
	add.s64 	%rd2860, %rd2837, 7640891576956012808;
	add.s32 	%r1927, %r1927, 1;
	setp.lt.u32	%p3, %r1927, %r4;
	@%p3 bra 	BB4_3;

BB4_4:
	add.s64 	%rd2844, %rd1, 56;
	add.s64 	%rd2843, %rd1, 48;
	add.s64 	%rd2842, %rd1, 40;
	add.s64 	%rd2841, %rd1, 32;
	add.s64 	%rd2840, %rd1, 24;
	add.s64 	%rd2839, %rd1, 16;
	add.s64 	%rd2838, %rd1, 8;
	st.global.u64 	[%rd1], %rd2860;
	st.global.u64 	[%rd2838], %rd2859;
	st.global.u64 	[%rd2839], %rd2858;
	st.global.u64 	[%rd2840], %rd2857;
	st.global.u64 	[%rd2841], %rd2856;
	st.global.u64 	[%rd2842], %rd2855;
	st.global.u64 	[%rd2843], %rd2854;
	st.global.u64 	[%rd2844], %rd2853;

BB4_5:
	ret;
}

	// .globl	m11300_comp
.entry m11300_comp(
	.param .u64 .ptr .global .align 4 m11300_comp_param_0,
	.param .u64 .ptr .global .align 4 m11300_comp_param_1,
	.param .u64 .ptr .global .align 4 m11300_comp_param_2,
	.param .u64 .ptr .global .align 4 m11300_comp_param_3,
	.param .u64 .ptr .global .align 8 m11300_comp_param_4,
	.param .u64 .ptr .global .align 1 m11300_comp_param_5,
	.param .u64 .ptr .global .align 4 m11300_comp_param_6,
	.param .u64 .ptr .global .align 4 m11300_comp_param_7,
	.param .u64 .ptr .global .align 4 m11300_comp_param_8,
	.param .u64 .ptr .global .align 4 m11300_comp_param_9,
	.param .u64 .ptr .global .align 4 m11300_comp_param_10,
	.param .u64 .ptr .global .align 4 m11300_comp_param_11,
	.param .u64 .ptr .global .align 4 m11300_comp_param_12,
	.param .u64 .ptr .global .align 4 m11300_comp_param_13,
	.param .u64 .ptr .global .align 4 m11300_comp_param_14,
	.param .u64 .ptr .global .align 4 m11300_comp_param_15,
	.param .u64 .ptr .global .align 4 m11300_comp_param_16,
	.param .u64 .ptr .global .align 4 m11300_comp_param_17,
	.param .u64 .ptr .global .align 4 m11300_comp_param_18,
	.param .u64 .ptr .global .align 4 m11300_comp_param_19,
	.param .u64 .ptr .global .align 4 m11300_comp_param_20,
	.param .u64 .ptr .global .align 4 m11300_comp_param_21,
	.param .u64 .ptr .global .align 4 m11300_comp_param_22,
	.param .u64 .ptr .global .align 4 m11300_comp_param_23,
	.param .u32 m11300_comp_param_24,
	.param .u32 m11300_comp_param_25,
	.param .u32 m11300_comp_param_26,
	.param .u32 m11300_comp_param_27,
	.param .u32 m11300_comp_param_28,
	.param .u32 m11300_comp_param_29,
	.param .u32 m11300_comp_param_30,
	.param .u32 m11300_comp_param_31,
	.param .u32 m11300_comp_param_32,
	.param .u32 m11300_comp_param_33,
	.param .u64 m11300_comp_param_34
)
{
	.local .align 16 .b8 	__local_depot5[240];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<26>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<1401>;
	.reg .b64 	%rd<1188>;
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td0[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td1[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td2[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td3[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td4[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te0[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te1[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te2[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te3[1024];

	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd26, [m11300_comp_param_4];
	ld.param.u64 	%rd31, [m11300_comp_param_34];
	add.u64 	%rd32, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd32;
	mov.u32 	%r58, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.b32	%r59, %envreg3;
	mad.lo.s32 	%r60, %r58, %r1, %r59;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r60, %r2;
	cvt.s64.s32	%rd2, %r3;
	setp.gt.u32	%p9, %r2, 255;
	@%p9 bra 	BB5_3;

	cvt.s64.s32	%rd1186, %r2;
	cvt.s64.s32	%rd4, %r1;

BB5_2:
	and.b64  	%rd33, %rd1186, 4294967295;
	shl.b64 	%rd34, %rd33, 2;
	mov.u64 	%rd35, td0;
	add.s64 	%rd36, %rd35, %rd34;
	ld.const.u32 	%r61, [%rd36];
	mov.u64 	%rd37, m11300_comp$s_td0;
	add.s64 	%rd38, %rd37, %rd34;
	st.shared.u32 	[%rd38], %r61;
	mov.u64 	%rd39, td1;
	add.s64 	%rd40, %rd39, %rd34;
	ld.const.u32 	%r62, [%rd40];
	mov.u64 	%rd41, m11300_comp$s_td1;
	add.s64 	%rd42, %rd41, %rd34;
	st.shared.u32 	[%rd42], %r62;
	mov.u64 	%rd43, td2;
	add.s64 	%rd44, %rd43, %rd34;
	ld.const.u32 	%r63, [%rd44];
	mov.u64 	%rd45, m11300_comp$s_td2;
	add.s64 	%rd46, %rd45, %rd34;
	st.shared.u32 	[%rd46], %r63;
	mov.u64 	%rd47, td3;
	add.s64 	%rd48, %rd47, %rd34;
	ld.const.u32 	%r64, [%rd48];
	mov.u64 	%rd49, m11300_comp$s_td3;
	add.s64 	%rd50, %rd49, %rd34;
	st.shared.u32 	[%rd50], %r64;
	mov.u64 	%rd51, td4;
	add.s64 	%rd52, %rd51, %rd34;
	ld.const.u32 	%r65, [%rd52];
	mov.u64 	%rd53, m11300_comp$s_td4;
	add.s64 	%rd54, %rd53, %rd34;
	st.shared.u32 	[%rd54], %r65;
	mov.u64 	%rd55, te0;
	add.s64 	%rd56, %rd55, %rd34;
	ld.const.u32 	%r66, [%rd56];
	mov.u64 	%rd57, m11300_comp$s_te0;
	add.s64 	%rd58, %rd57, %rd34;
	st.shared.u32 	[%rd58], %r66;
	mov.u64 	%rd59, te1;
	add.s64 	%rd60, %rd59, %rd34;
	ld.const.u32 	%r67, [%rd60];
	mov.u64 	%rd61, m11300_comp$s_te1;
	add.s64 	%rd62, %rd61, %rd34;
	st.shared.u32 	[%rd62], %r67;
	mov.u64 	%rd63, te2;
	add.s64 	%rd64, %rd63, %rd34;
	ld.const.u32 	%r68, [%rd64];
	mov.u64 	%rd65, m11300_comp$s_te2;
	add.s64 	%rd66, %rd65, %rd34;
	st.shared.u32 	[%rd66], %r68;
	mov.u64 	%rd67, te3;
	add.s64 	%rd68, %rd67, %rd34;
	ld.const.u32 	%r69, [%rd68];
	mov.u64 	%rd69, m11300_comp$s_te3;
	add.s64 	%rd70, %rd69, %rd34;
	st.shared.u32 	[%rd70], %r69;
	add.s64 	%rd1186, %rd33, %rd4;
	cvt.u32.u64	%r70, %rd1186;
	setp.lt.u32	%p10, %r70, 256;
	@%p10 bra 	BB5_2;

BB5_3:
	bar.sync 	0;
	setp.ge.u64	%p11, %rd2, %rd31;
	@%p11 bra 	BB5_17;

	mul.wide.s32 	%rd71, %r3, 64;
	add.s64 	%rd72, %rd26, %rd71;
	ld.global.u64 	%rd73, [%rd72];
	shr.u64 	%rd74, %rd73, 32;
	cvt.u32.u64	%r72, %rd74;
	cvt.u32.u64	%r74, %rd73;
	ld.global.u64 	%rd75, [%rd72+8];
	shr.u64 	%rd76, %rd75, 32;
	cvt.u32.u64	%r76, %rd76;
	cvt.u32.u64	%r78, %rd75;
	ld.global.u64 	%rd77, [%rd72+16];
	shr.u64 	%rd78, %rd77, 32;
	cvt.u32.u64	%r80, %rd78;
	cvt.u32.u64	%r82, %rd77;
	ld.global.u64 	%rd79, [%rd72+24];
	shr.u64 	%rd80, %rd79, 32;
	cvt.u32.u64	%r84, %rd80;
	cvt.u32.u64	%r86, %rd79;
	ld.global.u64 	%rd81, [%rd72+32];
	shr.u64 	%rd82, %rd81, 32;
	cvt.u32.u64	%r1395, %rd82;
	ld.global.u64 	%rd83, [%rd72+40];
	// inline asm
	prmt.b32 %r71, %r72, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r73, %r74, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r75, %r76, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r77, %r78, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r79, %r80, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r81, %r82, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r83, %r84, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r85, %r86, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1388, %r71, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r89, %r73, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r91, %r75, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r93, %r77, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r95, %r79, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r97, %r81, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r99, %r83, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r101, %r85, 0, 0x0123;
	// inline asm
	st.local.v4.u32 	[%rd1], {%r1388, %r89, %r91, %r93};
	st.local.v4.u32 	[%rd1+16], {%r95, %r97, %r99, %r101};
	bfe.u32 	%r105, %r101, 16, 8;
	mul.wide.u32 	%rd85, %r105, 4;
	mov.u64 	%rd86, m11300_comp$s_te2;
	add.s64 	%rd87, %rd86, %rd85;
	ld.shared.u32 	%r106, [%rd87];
	and.b32  	%r107, %r106, -16777216;
	xor.b32  	%r108, %r107, %r1388;
	shr.u32 	%r109, %r101, 8;
	mul.wide.u32 	%rd88, %r109, 4;
	and.b64  	%rd89, %rd88, 1020;
	mov.u64 	%rd90, m11300_comp$s_te3;
	add.s64 	%rd91, %rd90, %rd89;
	ld.shared.u32 	%r110, [%rd91];
	and.b32  	%r111, %r110, 16711680;
	xor.b32  	%r112, %r108, %r111;
	mul.wide.u32 	%rd92, %r101, 4;
	and.b64  	%rd93, %rd92, 1020;
	mov.u64 	%rd94, m11300_comp$s_te0;
	add.s64 	%rd95, %rd94, %rd93;
	ld.shared.u32 	%r113, [%rd95];
	and.b32  	%r114, %r113, 65280;
	xor.b32  	%r115, %r112, %r114;
	shr.u32 	%r116, %r101, 24;
	mul.wide.u32 	%rd96, %r116, 4;
	mov.u64 	%rd97, m11300_comp$s_te1;
	add.s64 	%rd98, %rd97, %rd96;
	ld.shared.u8 	%r117, [%rd98];
	xor.b32  	%r118, %r115, %r117;
	ld.const.v2.u32 	{%r119, %r120}, [rcon];
	xor.b32  	%r122, %r118, %r119;
	xor.b32  	%r123, %r122, %r89;
	xor.b32  	%r124, %r123, %r91;
	xor.b32  	%r125, %r124, %r93;
	st.local.v4.u32 	[%rd1+32], {%r122, %r123, %r124, %r125};
	shr.u32 	%r126, %r125, 24;
	mul.wide.u32 	%rd99, %r126, 4;
	add.s64 	%rd100, %rd86, %rd99;
	ld.shared.u32 	%r127, [%rd100];
	and.b32  	%r128, %r127, -16777216;
	xor.b32  	%r129, %r128, %r95;
	shr.u32 	%r130, %r125, 16;
	mul.wide.u32 	%rd101, %r130, 4;
	and.b64  	%rd102, %rd101, 1020;
	add.s64 	%rd103, %rd90, %rd102;
	ld.shared.u32 	%r131, [%rd103];
	and.b32  	%r132, %r131, 16711680;
	xor.b32  	%r133, %r129, %r132;
	shr.u32 	%r134, %r125, 8;
	mul.wide.u32 	%rd104, %r134, 4;
	and.b64  	%rd105, %rd104, 1020;
	add.s64 	%rd106, %rd94, %rd105;
	ld.shared.u32 	%r135, [%rd106];
	and.b32  	%r136, %r135, 65280;
	xor.b32  	%r137, %r133, %r136;
	mul.wide.u32 	%rd107, %r125, 4;
	and.b64  	%rd108, %rd107, 1020;
	add.s64 	%rd109, %rd97, %rd108;
	ld.shared.u8 	%r138, [%rd109];
	xor.b32  	%r139, %r137, %r138;
	xor.b32  	%r140, %r139, %r97;
	xor.b32  	%r141, %r140, %r99;
	xor.b32  	%r142, %r141, %r101;
	st.local.v4.u32 	[%rd1+48], {%r139, %r140, %r141, %r142};
	bfe.u32 	%r143, %r142, 16, 8;
	mul.wide.u32 	%rd110, %r143, 4;
	add.s64 	%rd111, %rd86, %rd110;
	ld.shared.u32 	%r144, [%rd111];
	and.b32  	%r145, %r144, -16777216;
	xor.b32  	%r146, %r145, %r122;
	shr.u32 	%r147, %r142, 8;
	mul.wide.u32 	%rd112, %r147, 4;
	and.b64  	%rd113, %rd112, 1020;
	add.s64 	%rd114, %rd90, %rd113;
	ld.shared.u32 	%r148, [%rd114];
	and.b32  	%r149, %r148, 16711680;
	xor.b32  	%r150, %r146, %r149;
	mul.wide.u32 	%rd115, %r142, 4;
	and.b64  	%rd116, %rd115, 1020;
	add.s64 	%rd117, %rd94, %rd116;
	ld.shared.u32 	%r151, [%rd117];
	and.b32  	%r152, %r151, 65280;
	xor.b32  	%r153, %r150, %r152;
	shr.u32 	%r154, %r142, 24;
	mul.wide.u32 	%rd118, %r154, 4;
	add.s64 	%rd119, %rd97, %rd118;
	ld.shared.u8 	%r155, [%rd119];
	xor.b32  	%r156, %r153, %r155;
	xor.b32  	%r158, %r156, %r120;
	xor.b32  	%r159, %r158, %r123;
	xor.b32  	%r160, %r158, %r91;
	xor.b32  	%r161, %r160, %r125;
	st.local.v4.u32 	[%rd1+64], {%r158, %r159, %r160, %r161};
	shr.u32 	%r162, %r161, 24;
	mul.wide.u32 	%rd120, %r162, 4;
	add.s64 	%rd121, %rd86, %rd120;
	ld.shared.u32 	%r163, [%rd121];
	and.b32  	%r164, %r163, -16777216;
	xor.b32  	%r165, %r164, %r139;
	shr.u32 	%r166, %r161, 16;
	mul.wide.u32 	%rd122, %r166, 4;
	and.b64  	%rd123, %rd122, 1020;
	add.s64 	%rd124, %rd90, %rd123;
	ld.shared.u32 	%r167, [%rd124];
	and.b32  	%r168, %r167, 16711680;
	xor.b32  	%r169, %r165, %r168;
	shr.u32 	%r170, %r161, 8;
	mul.wide.u32 	%rd125, %r170, 4;
	and.b64  	%rd126, %rd125, 1020;
	add.s64 	%rd127, %rd94, %rd126;
	ld.shared.u32 	%r171, [%rd127];
	and.b32  	%r172, %r171, 65280;
	xor.b32  	%r173, %r169, %r172;
	mul.wide.u32 	%rd128, %r161, 4;
	and.b64  	%rd129, %rd128, 1020;
	add.s64 	%rd130, %rd97, %rd129;
	ld.shared.u8 	%r174, [%rd130];
	xor.b32  	%r175, %r173, %r174;
	xor.b32  	%r176, %r175, %r140;
	xor.b32  	%r177, %r175, %r99;
	xor.b32  	%r178, %r177, %r142;
	st.local.v4.u32 	[%rd1+80], {%r175, %r176, %r177, %r178};
	bfe.u32 	%r179, %r178, 16, 8;
	mul.wide.u32 	%rd131, %r179, 4;
	add.s64 	%rd132, %rd86, %rd131;
	ld.shared.u32 	%r180, [%rd132];
	and.b32  	%r181, %r180, -16777216;
	xor.b32  	%r182, %r181, %r158;
	shr.u32 	%r183, %r178, 8;
	mul.wide.u32 	%rd133, %r183, 4;
	and.b64  	%rd134, %rd133, 1020;
	add.s64 	%rd135, %rd90, %rd134;
	ld.shared.u32 	%r184, [%rd135];
	and.b32  	%r185, %r184, 16711680;
	xor.b32  	%r186, %r182, %r185;
	mul.wide.u32 	%rd136, %r178, 4;
	and.b64  	%rd137, %rd136, 1020;
	add.s64 	%rd138, %rd94, %rd137;
	ld.shared.u32 	%r187, [%rd138];
	and.b32  	%r188, %r187, 65280;
	xor.b32  	%r189, %r186, %r188;
	shr.u32 	%r190, %r178, 24;
	mul.wide.u32 	%rd139, %r190, 4;
	add.s64 	%rd140, %rd97, %rd139;
	ld.shared.u8 	%r191, [%rd140];
	xor.b32  	%r192, %r189, %r191;
	ld.const.v2.u32 	{%r193, %r194}, [rcon+8];
	xor.b32  	%r196, %r192, %r193;
	xor.b32  	%r197, %r196, %r159;
	xor.b32  	%r198, %r197, %r125;
	xor.b32  	%r199, %r197, %r160;
	st.local.v4.u32 	[%rd1+96], {%r196, %r197, %r199, %r198};
	shr.u32 	%r200, %r198, 24;
	mul.wide.u32 	%rd141, %r200, 4;
	add.s64 	%rd142, %rd86, %rd141;
	ld.shared.u32 	%r201, [%rd142];
	and.b32  	%r202, %r201, -16777216;
	xor.b32  	%r203, %r202, %r175;
	shr.u32 	%r204, %r198, 16;
	mul.wide.u32 	%rd143, %r204, 4;
	and.b64  	%rd144, %rd143, 1020;
	add.s64 	%rd145, %rd90, %rd144;
	ld.shared.u32 	%r205, [%rd145];
	and.b32  	%r206, %r205, 16711680;
	xor.b32  	%r207, %r203, %r206;
	shr.u32 	%r208, %r198, 8;
	mul.wide.u32 	%rd146, %r208, 4;
	and.b64  	%rd147, %rd146, 1020;
	add.s64 	%rd148, %rd94, %rd147;
	ld.shared.u32 	%r209, [%rd148];
	and.b32  	%r210, %r209, 65280;
	xor.b32  	%r211, %r207, %r210;
	mul.wide.u32 	%rd149, %r198, 4;
	and.b64  	%rd150, %rd149, 1020;
	add.s64 	%rd151, %rd97, %rd150;
	ld.shared.u8 	%r212, [%rd151];
	xor.b32  	%r213, %r211, %r212;
	xor.b32  	%r214, %r213, %r176;
	xor.b32  	%r215, %r214, %r142;
	xor.b32  	%r216, %r214, %r177;
	st.local.v4.u32 	[%rd1+112], {%r213, %r214, %r216, %r215};
	bfe.u32 	%r217, %r215, 16, 8;
	mul.wide.u32 	%rd152, %r217, 4;
	add.s64 	%rd153, %rd86, %rd152;
	ld.shared.u32 	%r218, [%rd153];
	and.b32  	%r219, %r218, -16777216;
	xor.b32  	%r220, %r219, %r196;
	shr.u32 	%r221, %r215, 8;
	mul.wide.u32 	%rd154, %r221, 4;
	and.b64  	%rd155, %rd154, 1020;
	add.s64 	%rd156, %rd90, %rd155;
	ld.shared.u32 	%r222, [%rd156];
	and.b32  	%r223, %r222, 16711680;
	xor.b32  	%r224, %r220, %r223;
	mul.wide.u32 	%rd157, %r215, 4;
	and.b64  	%rd158, %rd157, 1020;
	add.s64 	%rd159, %rd94, %rd158;
	ld.shared.u32 	%r225, [%rd159];
	and.b32  	%r226, %r225, 65280;
	xor.b32  	%r227, %r224, %r226;
	shr.u32 	%r228, %r215, 24;
	mul.wide.u32 	%rd160, %r228, 4;
	add.s64 	%rd161, %rd97, %rd160;
	ld.shared.u8 	%r229, [%rd161];
	xor.b32  	%r230, %r227, %r229;
	xor.b32  	%r232, %r230, %r194;
	xor.b32  	%r233, %r232, %r197;
	xor.b32  	%r234, %r232, %r160;
	xor.b32  	%r235, %r234, %r198;
	st.local.v4.u32 	[%rd1+128], {%r232, %r233, %r234, %r235};
	shr.u32 	%r236, %r235, 24;
	mul.wide.u32 	%rd162, %r236, 4;
	add.s64 	%rd163, %rd86, %rd162;
	ld.shared.u32 	%r237, [%rd163];
	and.b32  	%r238, %r237, -16777216;
	xor.b32  	%r239, %r238, %r213;
	shr.u32 	%r240, %r235, 16;
	mul.wide.u32 	%rd164, %r240, 4;
	and.b64  	%rd165, %rd164, 1020;
	add.s64 	%rd166, %rd90, %rd165;
	ld.shared.u32 	%r241, [%rd166];
	and.b32  	%r242, %r241, 16711680;
	xor.b32  	%r243, %r239, %r242;
	shr.u32 	%r244, %r235, 8;
	mul.wide.u32 	%rd167, %r244, 4;
	and.b64  	%rd168, %rd167, 1020;
	add.s64 	%rd169, %rd94, %rd168;
	ld.shared.u32 	%r245, [%rd169];
	and.b32  	%r246, %r245, 65280;
	xor.b32  	%r247, %r243, %r246;
	mul.wide.u32 	%rd170, %r235, 4;
	and.b64  	%rd171, %rd170, 1020;
	add.s64 	%rd172, %rd97, %rd171;
	ld.shared.u8 	%r248, [%rd172];
	xor.b32  	%r249, %r247, %r248;
	xor.b32  	%r250, %r249, %r214;
	xor.b32  	%r251, %r249, %r177;
	xor.b32  	%r252, %r251, %r215;
	st.local.v4.u32 	[%rd1+144], {%r249, %r250, %r251, %r252};
	bfe.u32 	%r253, %r252, 16, 8;
	mul.wide.u32 	%rd173, %r253, 4;
	add.s64 	%rd174, %rd86, %rd173;
	ld.shared.u32 	%r254, [%rd174];
	and.b32  	%r255, %r254, -16777216;
	xor.b32  	%r256, %r255, %r232;
	shr.u32 	%r257, %r252, 8;
	mul.wide.u32 	%rd175, %r257, 4;
	and.b64  	%rd176, %rd175, 1020;
	add.s64 	%rd177, %rd90, %rd176;
	ld.shared.u32 	%r258, [%rd177];
	and.b32  	%r259, %r258, 16711680;
	xor.b32  	%r260, %r256, %r259;
	mul.wide.u32 	%rd178, %r252, 4;
	and.b64  	%rd179, %rd178, 1020;
	add.s64 	%rd180, %rd94, %rd179;
	ld.shared.u32 	%r261, [%rd180];
	and.b32  	%r262, %r261, 65280;
	xor.b32  	%r263, %r260, %r262;
	shr.u32 	%r264, %r252, 24;
	mul.wide.u32 	%rd181, %r264, 4;
	add.s64 	%rd182, %rd97, %rd181;
	ld.shared.u8 	%r265, [%rd182];
	xor.b32  	%r266, %r263, %r265;
	ld.const.v2.u32 	{%r267, %r268}, [rcon+16];
	xor.b32  	%r270, %r266, %r267;
	xor.b32  	%r271, %r270, %r233;
	xor.b32  	%r272, %r271, %r198;
	xor.b32  	%r273, %r271, %r234;
	st.local.v4.u32 	[%rd1+160], {%r270, %r271, %r273, %r272};
	shr.u32 	%r274, %r272, 24;
	mul.wide.u32 	%rd183, %r274, 4;
	add.s64 	%rd184, %rd86, %rd183;
	ld.shared.u32 	%r275, [%rd184];
	and.b32  	%r276, %r275, -16777216;
	xor.b32  	%r277, %r276, %r249;
	shr.u32 	%r278, %r272, 16;
	mul.wide.u32 	%rd185, %r278, 4;
	and.b64  	%rd186, %rd185, 1020;
	add.s64 	%rd187, %rd90, %rd186;
	ld.shared.u32 	%r279, [%rd187];
	and.b32  	%r280, %r279, 16711680;
	xor.b32  	%r281, %r277, %r280;
	shr.u32 	%r282, %r272, 8;
	mul.wide.u32 	%rd188, %r282, 4;
	and.b64  	%rd189, %rd188, 1020;
	add.s64 	%rd190, %rd94, %rd189;
	ld.shared.u32 	%r283, [%rd190];
	and.b32  	%r284, %r283, 65280;
	xor.b32  	%r285, %r281, %r284;
	mul.wide.u32 	%rd191, %r272, 4;
	and.b64  	%rd192, %rd191, 1020;
	add.s64 	%rd193, %rd97, %rd192;
	ld.shared.u8 	%r286, [%rd193];
	xor.b32  	%r287, %r285, %r286;
	xor.b32  	%r288, %r287, %r250;
	xor.b32  	%r289, %r288, %r215;
	xor.b32  	%r290, %r288, %r251;
	st.local.v4.u32 	[%rd1+176], {%r287, %r288, %r290, %r289};
	bfe.u32 	%r291, %r289, 16, 8;
	mul.wide.u32 	%rd194, %r291, 4;
	add.s64 	%rd195, %rd86, %rd194;
	ld.shared.u32 	%r292, [%rd195];
	and.b32  	%r293, %r292, -16777216;
	xor.b32  	%r294, %r293, %r270;
	shr.u32 	%r295, %r289, 8;
	mul.wide.u32 	%rd196, %r295, 4;
	and.b64  	%rd197, %rd196, 1020;
	add.s64 	%rd198, %rd90, %rd197;
	ld.shared.u32 	%r296, [%rd198];
	and.b32  	%r297, %r296, 16711680;
	xor.b32  	%r298, %r294, %r297;
	mul.wide.u32 	%rd199, %r289, 4;
	and.b64  	%rd200, %rd199, 1020;
	add.s64 	%rd201, %rd94, %rd200;
	ld.shared.u32 	%r299, [%rd201];
	and.b32  	%r300, %r299, 65280;
	xor.b32  	%r301, %r298, %r300;
	shr.u32 	%r302, %r289, 24;
	mul.wide.u32 	%rd202, %r302, 4;
	add.s64 	%rd203, %rd97, %rd202;
	ld.shared.u8 	%r303, [%rd203];
	xor.b32  	%r304, %r301, %r303;
	xor.b32  	%r306, %r304, %r268;
	xor.b32  	%r307, %r306, %r271;
	xor.b32  	%r308, %r306, %r234;
	xor.b32  	%r309, %r308, %r272;
	st.local.v4.u32 	[%rd1+192], {%r306, %r307, %r308, %r309};
	shr.u32 	%r310, %r309, 24;
	mul.wide.u32 	%rd204, %r310, 4;
	add.s64 	%rd205, %rd86, %rd204;
	ld.shared.u32 	%r311, [%rd205];
	and.b32  	%r312, %r311, -16777216;
	xor.b32  	%r313, %r312, %r287;
	shr.u32 	%r314, %r309, 16;
	mul.wide.u32 	%rd206, %r314, 4;
	and.b64  	%rd207, %rd206, 1020;
	add.s64 	%rd208, %rd90, %rd207;
	ld.shared.u32 	%r315, [%rd208];
	and.b32  	%r316, %r315, 16711680;
	xor.b32  	%r317, %r313, %r316;
	shr.u32 	%r318, %r309, 8;
	mul.wide.u32 	%rd209, %r318, 4;
	and.b64  	%rd210, %rd209, 1020;
	add.s64 	%rd211, %rd94, %rd210;
	ld.shared.u32 	%r319, [%rd211];
	and.b32  	%r320, %r319, 65280;
	xor.b32  	%r321, %r317, %r320;
	mul.wide.u32 	%rd212, %r309, 4;
	and.b64  	%rd213, %rd212, 1020;
	add.s64 	%rd214, %rd97, %rd213;
	ld.shared.u8 	%r322, [%rd214];
	xor.b32  	%r323, %r321, %r322;
	xor.b32  	%r324, %r323, %r288;
	xor.b32  	%r325, %r323, %r251;
	xor.b32  	%r326, %r325, %r289;
	st.local.v4.u32 	[%rd1+208], {%r323, %r324, %r325, %r326};
	bfe.u32 	%r327, %r326, 16, 8;
	mul.wide.u32 	%rd215, %r327, 4;
	add.s64 	%rd216, %rd86, %rd215;
	ld.shared.u32 	%r328, [%rd216];
	and.b32  	%r329, %r328, -16777216;
	xor.b32  	%r330, %r329, %r306;
	shr.u32 	%r331, %r326, 8;
	mul.wide.u32 	%rd217, %r331, 4;
	and.b64  	%rd218, %rd217, 1020;
	add.s64 	%rd219, %rd90, %rd218;
	ld.shared.u32 	%r332, [%rd219];
	and.b32  	%r333, %r332, 16711680;
	xor.b32  	%r334, %r330, %r333;
	mul.wide.u32 	%rd220, %r326, 4;
	and.b64  	%rd221, %rd220, 1020;
	add.s64 	%rd222, %rd94, %rd221;
	ld.shared.u32 	%r335, [%rd222];
	and.b32  	%r336, %r335, 65280;
	xor.b32  	%r337, %r334, %r336;
	shr.u32 	%r338, %r326, 24;
	mul.wide.u32 	%rd223, %r338, 4;
	add.s64 	%rd224, %rd97, %rd223;
	ld.shared.u8 	%r339, [%rd224];
	xor.b32  	%r340, %r337, %r339;
	ld.const.u32 	%r341, [rcon+24];
	xor.b32  	%r1387, %r340, %r341;
	xor.b32  	%r342, %r1387, %r307;
	xor.b32  	%r343, %r342, %r272;
	xor.b32  	%r344, %r342, %r308;
	st.local.v4.u32 	[%rd1+224], {%r1387, %r342, %r344, %r343};
	mov.u32 	%r1390, 0;
	mov.u32 	%r1389, 56;
	bra.uni 	BB5_5;

BB5_18:
	mul.wide.u32 	%rd1173, %r1390, 4;
	add.s64 	%rd1174, %rd1, %rd1173;
	ld.local.u32 	%r1388, [%rd1174];
	mul.wide.u32 	%rd1175, %r1389, 4;
	add.s64 	%rd1176, %rd1, %rd1175;
	ld.local.u32 	%r1387, [%rd1176];

BB5_5:
	mul.wide.u32 	%rd225, %r1390, 4;
	add.s64 	%rd226, %rd1, %rd225;
	mul.wide.u32 	%rd227, %r1389, 4;
	add.s64 	%rd228, %rd1, %rd227;
	st.local.u32 	[%rd226], %r1387;
	st.local.u32 	[%rd228], %r1388;
	add.s32 	%r345, %r1390, 1;
	mul.wide.u32 	%rd229, %r345, 4;
	add.s64 	%rd230, %rd1, %rd229;
	ld.local.u32 	%r346, [%rd230];
	add.s32 	%r347, %r1389, 1;
	mul.wide.u32 	%rd231, %r347, 4;
	add.s64 	%rd232, %rd1, %rd231;
	ld.local.u32 	%r348, [%rd232];
	st.local.u32 	[%rd230], %r348;
	st.local.u32 	[%rd232], %r346;
	add.s32 	%r349, %r1390, 2;
	mul.wide.u32 	%rd233, %r349, 4;
	add.s64 	%rd234, %rd1, %rd233;
	ld.local.u32 	%r350, [%rd234];
	add.s32 	%r351, %r1389, 2;
	mul.wide.u32 	%rd235, %r351, 4;
	add.s64 	%rd236, %rd1, %rd235;
	ld.local.u32 	%r352, [%rd236];
	st.local.u32 	[%rd234], %r352;
	st.local.u32 	[%rd236], %r350;
	add.s32 	%r353, %r1390, 3;
	mul.wide.u32 	%rd237, %r353, 4;
	add.s64 	%rd238, %rd1, %rd237;
	ld.local.u32 	%r354, [%rd238];
	add.s32 	%r355, %r1389, 3;
	mul.wide.u32 	%rd239, %r355, 4;
	add.s64 	%rd240, %rd1, %rd239;
	ld.local.u32 	%r356, [%rd240];
	st.local.u32 	[%rd238], %r356;
	st.local.u32 	[%rd240], %r354;
	add.s32 	%r1389, %r1389, -4;
	add.s32 	%r1390, %r1390, 4;
	setp.lt.u32	%p12, %r1390, %r1389;
	@%p12 bra 	BB5_18;

	ld.param.u32 	%r1384, [m11300_comp_param_32];
	add.s64 	%rd1182, %rd1, 4;
	ld.param.u64 	%rd1178, [m11300_comp_param_18];
	mov.u64 	%rd1177, m11300_comp$s_te1;
	ld.local.v4.u32 	{%r357, %r358, %r359, %r360}, [%rd1182+12];
	shr.u32 	%r362, %r357, 24;
	mul.wide.u32 	%rd241, %r362, 4;
	add.s64 	%rd243, %rd1177, %rd241;
	ld.shared.u8 	%r363, [%rd243];
	mul.wide.u32 	%rd244, %r363, 4;
	mov.u64 	%rd245, m11300_comp$s_td0;
	add.s64 	%rd246, %rd245, %rd244;
	bfe.u32 	%r364, %r357, 16, 8;
	mul.wide.u32 	%rd247, %r364, 4;
	add.s64 	%rd248, %rd1177, %rd247;
	ld.shared.u8 	%r365, [%rd248];
	mul.wide.u32 	%rd249, %r365, 4;
	mov.u64 	%rd250, m11300_comp$s_td1;
	add.s64 	%rd251, %rd250, %rd249;
	ld.shared.u32 	%r366, [%rd251];
	ld.shared.u32 	%r367, [%rd246];
	xor.b32  	%r368, %r366, %r367;
	bfe.u32 	%r369, %r357, 8, 8;
	mul.wide.u32 	%rd252, %r369, 4;
	add.s64 	%rd253, %rd1177, %rd252;
	ld.shared.u8 	%r370, [%rd253];
	mul.wide.u32 	%rd254, %r370, 4;
	mov.u64 	%rd255, m11300_comp$s_td2;
	add.s64 	%rd256, %rd255, %rd254;
	ld.shared.u32 	%r371, [%rd256];
	xor.b32  	%r372, %r368, %r371;
	and.b32  	%r373, %r357, 255;
	mul.wide.u32 	%rd257, %r373, 4;
	add.s64 	%rd258, %rd1177, %rd257;
	ld.shared.u8 	%r374, [%rd258];
	mul.wide.u32 	%rd259, %r374, 4;
	mov.u64 	%rd260, m11300_comp$s_td3;
	add.s64 	%rd261, %rd260, %rd259;
	ld.shared.u32 	%r375, [%rd261];
	xor.b32  	%r376, %r372, %r375;
	ld.local.v4.u32 	{%r377, %r378, %r379, %r380}, [%rd1182+28];
	ld.local.v4.u32 	{%r381, %r382, %r383, %r384}, [%rd1182+44];
	ld.local.v4.u32 	{%r385, %r386, %r387, %r388}, [%rd1182+60];
	ld.local.v4.u32 	{%r389, %r390, %r391, %r392}, [%rd1182+76];
	ld.local.v4.u32 	{%r393, %r394, %r395, %r396}, [%rd1182+92];
	st.local.u32 	[%rd1182+12], %r376;
	shr.u32 	%r398, %r358, 24;
	mul.wide.u32 	%rd262, %r398, 4;
	add.s64 	%rd263, %rd1177, %rd262;
	ld.shared.u8 	%r399, [%rd263];
	mul.wide.u32 	%rd264, %r399, 4;
	add.s64 	%rd265, %rd245, %rd264;
	bfe.u32 	%r400, %r358, 16, 8;
	mul.wide.u32 	%rd266, %r400, 4;
	add.s64 	%rd267, %rd1177, %rd266;
	ld.shared.u8 	%r401, [%rd267];
	mul.wide.u32 	%rd268, %r401, 4;
	add.s64 	%rd269, %rd250, %rd268;
	ld.shared.u32 	%r402, [%rd269];
	ld.shared.u32 	%r403, [%rd265];
	xor.b32  	%r404, %r402, %r403;
	bfe.u32 	%r405, %r358, 8, 8;
	mul.wide.u32 	%rd270, %r405, 4;
	add.s64 	%rd271, %rd1177, %rd270;
	ld.shared.u8 	%r406, [%rd271];
	mul.wide.u32 	%rd272, %r406, 4;
	add.s64 	%rd273, %rd255, %rd272;
	ld.shared.u32 	%r407, [%rd273];
	xor.b32  	%r408, %r404, %r407;
	and.b32  	%r409, %r358, 255;
	mul.wide.u32 	%rd274, %r409, 4;
	add.s64 	%rd275, %rd1177, %rd274;
	ld.shared.u8 	%r410, [%rd275];
	mul.wide.u32 	%rd276, %r410, 4;
	add.s64 	%rd277, %rd260, %rd276;
	ld.shared.u32 	%r411, [%rd277];
	xor.b32  	%r412, %r408, %r411;
	st.local.u32 	[%rd1182+16], %r412;
	shr.u32 	%r414, %r359, 24;
	mul.wide.u32 	%rd278, %r414, 4;
	add.s64 	%rd279, %rd1177, %rd278;
	ld.shared.u8 	%r415, [%rd279];
	mul.wide.u32 	%rd280, %r415, 4;
	add.s64 	%rd281, %rd245, %rd280;
	bfe.u32 	%r416, %r359, 16, 8;
	mul.wide.u32 	%rd282, %r416, 4;
	add.s64 	%rd283, %rd1177, %rd282;
	ld.shared.u8 	%r417, [%rd283];
	mul.wide.u32 	%rd284, %r417, 4;
	add.s64 	%rd285, %rd250, %rd284;
	ld.shared.u32 	%r418, [%rd285];
	ld.shared.u32 	%r419, [%rd281];
	xor.b32  	%r420, %r418, %r419;
	bfe.u32 	%r421, %r359, 8, 8;
	mul.wide.u32 	%rd286, %r421, 4;
	add.s64 	%rd287, %rd1177, %rd286;
	ld.shared.u8 	%r422, [%rd287];
	mul.wide.u32 	%rd288, %r422, 4;
	add.s64 	%rd289, %rd255, %rd288;
	ld.shared.u32 	%r423, [%rd289];
	xor.b32  	%r424, %r420, %r423;
	and.b32  	%r425, %r359, 255;
	mul.wide.u32 	%rd290, %r425, 4;
	add.s64 	%rd291, %rd1177, %rd290;
	ld.shared.u8 	%r426, [%rd291];
	mul.wide.u32 	%rd292, %r426, 4;
	add.s64 	%rd293, %rd260, %rd292;
	ld.shared.u32 	%r427, [%rd293];
	xor.b32  	%r428, %r424, %r427;
	st.local.u32 	[%rd1182+20], %r428;
	shr.u32 	%r430, %r360, 24;
	mul.wide.u32 	%rd294, %r430, 4;
	add.s64 	%rd295, %rd1177, %rd294;
	ld.shared.u8 	%r431, [%rd295];
	mul.wide.u32 	%rd296, %r431, 4;
	add.s64 	%rd297, %rd245, %rd296;
	bfe.u32 	%r432, %r360, 16, 8;
	mul.wide.u32 	%rd298, %r432, 4;
	add.s64 	%rd299, %rd1177, %rd298;
	ld.shared.u8 	%r433, [%rd299];
	mul.wide.u32 	%rd300, %r433, 4;
	add.s64 	%rd301, %rd250, %rd300;
	ld.shared.u32 	%r434, [%rd301];
	ld.shared.u32 	%r435, [%rd297];
	xor.b32  	%r436, %r434, %r435;
	bfe.u32 	%r437, %r360, 8, 8;
	mul.wide.u32 	%rd302, %r437, 4;
	add.s64 	%rd303, %rd1177, %rd302;
	ld.shared.u8 	%r438, [%rd303];
	mul.wide.u32 	%rd304, %r438, 4;
	add.s64 	%rd305, %rd255, %rd304;
	ld.shared.u32 	%r439, [%rd305];
	xor.b32  	%r440, %r436, %r439;
	and.b32  	%r441, %r360, 255;
	mul.wide.u32 	%rd306, %r441, 4;
	add.s64 	%rd307, %rd1177, %rd306;
	ld.shared.u8 	%r442, [%rd307];
	mul.wide.u32 	%rd308, %r442, 4;
	add.s64 	%rd309, %rd260, %rd308;
	ld.shared.u32 	%r443, [%rd309];
	xor.b32  	%r444, %r440, %r443;
	st.local.u32 	[%rd1182+24], %r444;
	shr.u32 	%r446, %r377, 24;
	mul.wide.u32 	%rd310, %r446, 4;
	add.s64 	%rd311, %rd1177, %rd310;
	ld.shared.u8 	%r447, [%rd311];
	mul.wide.u32 	%rd312, %r447, 4;
	add.s64 	%rd313, %rd245, %rd312;
	bfe.u32 	%r448, %r377, 16, 8;
	mul.wide.u32 	%rd314, %r448, 4;
	add.s64 	%rd315, %rd1177, %rd314;
	ld.shared.u8 	%r449, [%rd315];
	mul.wide.u32 	%rd316, %r449, 4;
	add.s64 	%rd317, %rd250, %rd316;
	ld.shared.u32 	%r450, [%rd317];
	ld.shared.u32 	%r451, [%rd313];
	xor.b32  	%r452, %r450, %r451;
	bfe.u32 	%r453, %r377, 8, 8;
	mul.wide.u32 	%rd318, %r453, 4;
	add.s64 	%rd319, %rd1177, %rd318;
	ld.shared.u8 	%r454, [%rd319];
	mul.wide.u32 	%rd320, %r454, 4;
	add.s64 	%rd321, %rd255, %rd320;
	ld.shared.u32 	%r455, [%rd321];
	xor.b32  	%r456, %r452, %r455;
	and.b32  	%r457, %r377, 255;
	mul.wide.u32 	%rd322, %r457, 4;
	add.s64 	%rd323, %rd1177, %rd322;
	ld.shared.u8 	%r458, [%rd323];
	mul.wide.u32 	%rd324, %r458, 4;
	add.s64 	%rd325, %rd260, %rd324;
	ld.shared.u32 	%r459, [%rd325];
	xor.b32  	%r460, %r456, %r459;
	st.local.u32 	[%rd1182+28], %r460;
	shr.u32 	%r462, %r378, 24;
	mul.wide.u32 	%rd326, %r462, 4;
	add.s64 	%rd327, %rd1177, %rd326;
	ld.shared.u8 	%r463, [%rd327];
	mul.wide.u32 	%rd328, %r463, 4;
	add.s64 	%rd329, %rd245, %rd328;
	bfe.u32 	%r464, %r378, 16, 8;
	mul.wide.u32 	%rd330, %r464, 4;
	add.s64 	%rd331, %rd1177, %rd330;
	ld.shared.u8 	%r465, [%rd331];
	mul.wide.u32 	%rd332, %r465, 4;
	add.s64 	%rd333, %rd250, %rd332;
	ld.shared.u32 	%r466, [%rd333];
	ld.shared.u32 	%r467, [%rd329];
	xor.b32  	%r468, %r466, %r467;
	bfe.u32 	%r469, %r378, 8, 8;
	mul.wide.u32 	%rd334, %r469, 4;
	add.s64 	%rd335, %rd1177, %rd334;
	ld.shared.u8 	%r470, [%rd335];
	mul.wide.u32 	%rd336, %r470, 4;
	add.s64 	%rd337, %rd255, %rd336;
	ld.shared.u32 	%r471, [%rd337];
	xor.b32  	%r472, %r468, %r471;
	and.b32  	%r473, %r378, 255;
	mul.wide.u32 	%rd338, %r473, 4;
	add.s64 	%rd339, %rd1177, %rd338;
	ld.shared.u8 	%r474, [%rd339];
	mul.wide.u32 	%rd340, %r474, 4;
	add.s64 	%rd341, %rd260, %rd340;
	ld.shared.u32 	%r475, [%rd341];
	xor.b32  	%r476, %r472, %r475;
	st.local.u32 	[%rd1182+32], %r476;
	shr.u32 	%r478, %r379, 24;
	mul.wide.u32 	%rd342, %r478, 4;
	add.s64 	%rd343, %rd1177, %rd342;
	ld.shared.u8 	%r479, [%rd343];
	mul.wide.u32 	%rd344, %r479, 4;
	add.s64 	%rd345, %rd245, %rd344;
	bfe.u32 	%r480, %r379, 16, 8;
	mul.wide.u32 	%rd346, %r480, 4;
	add.s64 	%rd347, %rd1177, %rd346;
	ld.shared.u8 	%r481, [%rd347];
	mul.wide.u32 	%rd348, %r481, 4;
	add.s64 	%rd349, %rd250, %rd348;
	ld.shared.u32 	%r482, [%rd349];
	ld.shared.u32 	%r483, [%rd345];
	xor.b32  	%r484, %r482, %r483;
	bfe.u32 	%r485, %r379, 8, 8;
	mul.wide.u32 	%rd350, %r485, 4;
	add.s64 	%rd351, %rd1177, %rd350;
	ld.shared.u8 	%r486, [%rd351];
	mul.wide.u32 	%rd352, %r486, 4;
	add.s64 	%rd353, %rd255, %rd352;
	ld.shared.u32 	%r487, [%rd353];
	xor.b32  	%r488, %r484, %r487;
	and.b32  	%r489, %r379, 255;
	mul.wide.u32 	%rd354, %r489, 4;
	add.s64 	%rd355, %rd1177, %rd354;
	ld.shared.u8 	%r490, [%rd355];
	mul.wide.u32 	%rd356, %r490, 4;
	add.s64 	%rd357, %rd260, %rd356;
	ld.shared.u32 	%r491, [%rd357];
	xor.b32  	%r492, %r488, %r491;
	st.local.u32 	[%rd1182+36], %r492;
	shr.u32 	%r494, %r380, 24;
	mul.wide.u32 	%rd358, %r494, 4;
	add.s64 	%rd359, %rd1177, %rd358;
	ld.shared.u8 	%r495, [%rd359];
	mul.wide.u32 	%rd360, %r495, 4;
	add.s64 	%rd361, %rd245, %rd360;
	bfe.u32 	%r496, %r380, 16, 8;
	mul.wide.u32 	%rd362, %r496, 4;
	add.s64 	%rd363, %rd1177, %rd362;
	ld.shared.u8 	%r497, [%rd363];
	mul.wide.u32 	%rd364, %r497, 4;
	add.s64 	%rd365, %rd250, %rd364;
	ld.shared.u32 	%r498, [%rd365];
	ld.shared.u32 	%r499, [%rd361];
	xor.b32  	%r500, %r498, %r499;
	bfe.u32 	%r501, %r380, 8, 8;
	mul.wide.u32 	%rd366, %r501, 4;
	add.s64 	%rd367, %rd1177, %rd366;
	ld.shared.u8 	%r502, [%rd367];
	mul.wide.u32 	%rd368, %r502, 4;
	add.s64 	%rd369, %rd255, %rd368;
	ld.shared.u32 	%r503, [%rd369];
	xor.b32  	%r504, %r500, %r503;
	and.b32  	%r505, %r380, 255;
	mul.wide.u32 	%rd370, %r505, 4;
	add.s64 	%rd371, %rd1177, %rd370;
	ld.shared.u8 	%r506, [%rd371];
	mul.wide.u32 	%rd372, %r506, 4;
	add.s64 	%rd373, %rd260, %rd372;
	ld.shared.u32 	%r507, [%rd373];
	xor.b32  	%r508, %r504, %r507;
	st.local.u32 	[%rd1182+40], %r508;
	shr.u32 	%r510, %r381, 24;
	mul.wide.u32 	%rd374, %r510, 4;
	add.s64 	%rd375, %rd1177, %rd374;
	ld.shared.u8 	%r511, [%rd375];
	mul.wide.u32 	%rd376, %r511, 4;
	add.s64 	%rd377, %rd245, %rd376;
	bfe.u32 	%r512, %r381, 16, 8;
	mul.wide.u32 	%rd378, %r512, 4;
	add.s64 	%rd379, %rd1177, %rd378;
	ld.shared.u8 	%r513, [%rd379];
	mul.wide.u32 	%rd380, %r513, 4;
	add.s64 	%rd381, %rd250, %rd380;
	ld.shared.u32 	%r514, [%rd381];
	ld.shared.u32 	%r515, [%rd377];
	xor.b32  	%r516, %r514, %r515;
	bfe.u32 	%r517, %r381, 8, 8;
	mul.wide.u32 	%rd382, %r517, 4;
	add.s64 	%rd383, %rd1177, %rd382;
	ld.shared.u8 	%r518, [%rd383];
	mul.wide.u32 	%rd384, %r518, 4;
	add.s64 	%rd385, %rd255, %rd384;
	ld.shared.u32 	%r519, [%rd385];
	xor.b32  	%r520, %r516, %r519;
	and.b32  	%r521, %r381, 255;
	mul.wide.u32 	%rd386, %r521, 4;
	add.s64 	%rd387, %rd1177, %rd386;
	ld.shared.u8 	%r522, [%rd387];
	mul.wide.u32 	%rd388, %r522, 4;
	add.s64 	%rd389, %rd260, %rd388;
	ld.shared.u32 	%r523, [%rd389];
	xor.b32  	%r524, %r520, %r523;
	st.local.u32 	[%rd1182+44], %r524;
	shr.u32 	%r526, %r382, 24;
	mul.wide.u32 	%rd390, %r526, 4;
	add.s64 	%rd391, %rd1177, %rd390;
	ld.shared.u8 	%r527, [%rd391];
	mul.wide.u32 	%rd392, %r527, 4;
	add.s64 	%rd393, %rd245, %rd392;
	bfe.u32 	%r528, %r382, 16, 8;
	mul.wide.u32 	%rd394, %r528, 4;
	add.s64 	%rd395, %rd1177, %rd394;
	ld.shared.u8 	%r529, [%rd395];
	mul.wide.u32 	%rd396, %r529, 4;
	add.s64 	%rd397, %rd250, %rd396;
	ld.shared.u32 	%r530, [%rd397];
	ld.shared.u32 	%r531, [%rd393];
	xor.b32  	%r532, %r530, %r531;
	bfe.u32 	%r533, %r382, 8, 8;
	mul.wide.u32 	%rd398, %r533, 4;
	add.s64 	%rd399, %rd1177, %rd398;
	ld.shared.u8 	%r534, [%rd399];
	mul.wide.u32 	%rd400, %r534, 4;
	add.s64 	%rd401, %rd255, %rd400;
	ld.shared.u32 	%r535, [%rd401];
	xor.b32  	%r536, %r532, %r535;
	and.b32  	%r537, %r382, 255;
	mul.wide.u32 	%rd402, %r537, 4;
	add.s64 	%rd403, %rd1177, %rd402;
	ld.shared.u8 	%r538, [%rd403];
	mul.wide.u32 	%rd404, %r538, 4;
	add.s64 	%rd405, %rd260, %rd404;
	ld.shared.u32 	%r539, [%rd405];
	xor.b32  	%r540, %r536, %r539;
	st.local.u32 	[%rd1182+48], %r540;
	shr.u32 	%r542, %r383, 24;
	mul.wide.u32 	%rd406, %r542, 4;
	add.s64 	%rd407, %rd1177, %rd406;
	ld.shared.u8 	%r543, [%rd407];
	mul.wide.u32 	%rd408, %r543, 4;
	add.s64 	%rd409, %rd245, %rd408;
	bfe.u32 	%r544, %r383, 16, 8;
	mul.wide.u32 	%rd410, %r544, 4;
	add.s64 	%rd411, %rd1177, %rd410;
	ld.shared.u8 	%r545, [%rd411];
	mul.wide.u32 	%rd412, %r545, 4;
	add.s64 	%rd413, %rd250, %rd412;
	ld.shared.u32 	%r546, [%rd413];
	ld.shared.u32 	%r547, [%rd409];
	xor.b32  	%r548, %r546, %r547;
	bfe.u32 	%r549, %r383, 8, 8;
	mul.wide.u32 	%rd414, %r549, 4;
	add.s64 	%rd415, %rd1177, %rd414;
	ld.shared.u8 	%r550, [%rd415];
	mul.wide.u32 	%rd416, %r550, 4;
	add.s64 	%rd417, %rd255, %rd416;
	ld.shared.u32 	%r551, [%rd417];
	xor.b32  	%r552, %r548, %r551;
	and.b32  	%r553, %r383, 255;
	mul.wide.u32 	%rd418, %r553, 4;
	add.s64 	%rd419, %rd1177, %rd418;
	ld.shared.u8 	%r554, [%rd419];
	mul.wide.u32 	%rd420, %r554, 4;
	add.s64 	%rd421, %rd260, %rd420;
	ld.shared.u32 	%r555, [%rd421];
	xor.b32  	%r556, %r552, %r555;
	st.local.u32 	[%rd1182+52], %r556;
	shr.u32 	%r558, %r384, 24;
	mul.wide.u32 	%rd422, %r558, 4;
	add.s64 	%rd423, %rd1177, %rd422;
	ld.shared.u8 	%r559, [%rd423];
	mul.wide.u32 	%rd424, %r559, 4;
	add.s64 	%rd425, %rd245, %rd424;
	bfe.u32 	%r560, %r384, 16, 8;
	mul.wide.u32 	%rd426, %r560, 4;
	add.s64 	%rd427, %rd1177, %rd426;
	ld.shared.u8 	%r561, [%rd427];
	mul.wide.u32 	%rd428, %r561, 4;
	add.s64 	%rd429, %rd250, %rd428;
	ld.shared.u32 	%r562, [%rd429];
	ld.shared.u32 	%r563, [%rd425];
	xor.b32  	%r564, %r562, %r563;
	bfe.u32 	%r565, %r384, 8, 8;
	mul.wide.u32 	%rd430, %r565, 4;
	add.s64 	%rd431, %rd1177, %rd430;
	ld.shared.u8 	%r566, [%rd431];
	mul.wide.u32 	%rd432, %r566, 4;
	add.s64 	%rd433, %rd255, %rd432;
	ld.shared.u32 	%r567, [%rd433];
	xor.b32  	%r568, %r564, %r567;
	and.b32  	%r569, %r384, 255;
	mul.wide.u32 	%rd434, %r569, 4;
	add.s64 	%rd435, %rd1177, %rd434;
	ld.shared.u8 	%r570, [%rd435];
	mul.wide.u32 	%rd436, %r570, 4;
	add.s64 	%rd437, %rd260, %rd436;
	ld.shared.u32 	%r571, [%rd437];
	xor.b32  	%r572, %r568, %r571;
	st.local.u32 	[%rd1182+56], %r572;
	shr.u32 	%r574, %r385, 24;
	mul.wide.u32 	%rd438, %r574, 4;
	add.s64 	%rd439, %rd1177, %rd438;
	ld.shared.u8 	%r575, [%rd439];
	mul.wide.u32 	%rd440, %r575, 4;
	add.s64 	%rd441, %rd245, %rd440;
	bfe.u32 	%r576, %r385, 16, 8;
	mul.wide.u32 	%rd442, %r576, 4;
	add.s64 	%rd443, %rd1177, %rd442;
	ld.shared.u8 	%r577, [%rd443];
	mul.wide.u32 	%rd444, %r577, 4;
	add.s64 	%rd445, %rd250, %rd444;
	ld.shared.u32 	%r578, [%rd445];
	ld.shared.u32 	%r579, [%rd441];
	xor.b32  	%r580, %r578, %r579;
	bfe.u32 	%r581, %r385, 8, 8;
	mul.wide.u32 	%rd446, %r581, 4;
	add.s64 	%rd447, %rd1177, %rd446;
	ld.shared.u8 	%r582, [%rd447];
	mul.wide.u32 	%rd448, %r582, 4;
	add.s64 	%rd449, %rd255, %rd448;
	ld.shared.u32 	%r583, [%rd449];
	xor.b32  	%r584, %r580, %r583;
	and.b32  	%r585, %r385, 255;
	mul.wide.u32 	%rd450, %r585, 4;
	add.s64 	%rd451, %rd1177, %rd450;
	ld.shared.u8 	%r586, [%rd451];
	mul.wide.u32 	%rd452, %r586, 4;
	add.s64 	%rd453, %rd260, %rd452;
	ld.shared.u32 	%r587, [%rd453];
	xor.b32  	%r588, %r584, %r587;
	st.local.u32 	[%rd1182+60], %r588;
	shr.u32 	%r590, %r386, 24;
	mul.wide.u32 	%rd454, %r590, 4;
	add.s64 	%rd455, %rd1177, %rd454;
	ld.shared.u8 	%r591, [%rd455];
	mul.wide.u32 	%rd456, %r591, 4;
	add.s64 	%rd457, %rd245, %rd456;
	bfe.u32 	%r592, %r386, 16, 8;
	mul.wide.u32 	%rd458, %r592, 4;
	add.s64 	%rd459, %rd1177, %rd458;
	ld.shared.u8 	%r593, [%rd459];
	mul.wide.u32 	%rd460, %r593, 4;
	add.s64 	%rd461, %rd250, %rd460;
	ld.shared.u32 	%r594, [%rd461];
	ld.shared.u32 	%r595, [%rd457];
	xor.b32  	%r596, %r594, %r595;
	bfe.u32 	%r597, %r386, 8, 8;
	mul.wide.u32 	%rd462, %r597, 4;
	add.s64 	%rd463, %rd1177, %rd462;
	ld.shared.u8 	%r598, [%rd463];
	mul.wide.u32 	%rd464, %r598, 4;
	add.s64 	%rd465, %rd255, %rd464;
	ld.shared.u32 	%r599, [%rd465];
	xor.b32  	%r600, %r596, %r599;
	and.b32  	%r601, %r386, 255;
	mul.wide.u32 	%rd466, %r601, 4;
	add.s64 	%rd467, %rd1177, %rd466;
	ld.shared.u8 	%r602, [%rd467];
	mul.wide.u32 	%rd468, %r602, 4;
	add.s64 	%rd469, %rd260, %rd468;
	ld.shared.u32 	%r603, [%rd469];
	xor.b32  	%r604, %r600, %r603;
	st.local.u32 	[%rd1182+64], %r604;
	shr.u32 	%r606, %r387, 24;
	mul.wide.u32 	%rd470, %r606, 4;
	add.s64 	%rd471, %rd1177, %rd470;
	ld.shared.u8 	%r607, [%rd471];
	mul.wide.u32 	%rd472, %r607, 4;
	add.s64 	%rd473, %rd245, %rd472;
	bfe.u32 	%r608, %r387, 16, 8;
	mul.wide.u32 	%rd474, %r608, 4;
	add.s64 	%rd475, %rd1177, %rd474;
	ld.shared.u8 	%r609, [%rd475];
	mul.wide.u32 	%rd476, %r609, 4;
	add.s64 	%rd477, %rd250, %rd476;
	ld.shared.u32 	%r610, [%rd477];
	ld.shared.u32 	%r611, [%rd473];
	xor.b32  	%r612, %r610, %r611;
	bfe.u32 	%r613, %r387, 8, 8;
	mul.wide.u32 	%rd478, %r613, 4;
	add.s64 	%rd479, %rd1177, %rd478;
	ld.shared.u8 	%r614, [%rd479];
	mul.wide.u32 	%rd480, %r614, 4;
	add.s64 	%rd481, %rd255, %rd480;
	ld.shared.u32 	%r615, [%rd481];
	xor.b32  	%r616, %r612, %r615;
	and.b32  	%r617, %r387, 255;
	mul.wide.u32 	%rd482, %r617, 4;
	add.s64 	%rd483, %rd1177, %rd482;
	ld.shared.u8 	%r618, [%rd483];
	mul.wide.u32 	%rd484, %r618, 4;
	add.s64 	%rd485, %rd260, %rd484;
	ld.shared.u32 	%r619, [%rd485];
	xor.b32  	%r620, %r616, %r619;
	st.local.u32 	[%rd1182+68], %r620;
	shr.u32 	%r622, %r388, 24;
	mul.wide.u32 	%rd486, %r622, 4;
	add.s64 	%rd487, %rd1177, %rd486;
	ld.shared.u8 	%r623, [%rd487];
	mul.wide.u32 	%rd488, %r623, 4;
	add.s64 	%rd489, %rd245, %rd488;
	bfe.u32 	%r624, %r388, 16, 8;
	mul.wide.u32 	%rd490, %r624, 4;
	add.s64 	%rd491, %rd1177, %rd490;
	ld.shared.u8 	%r625, [%rd491];
	mul.wide.u32 	%rd492, %r625, 4;
	add.s64 	%rd493, %rd250, %rd492;
	ld.shared.u32 	%r626, [%rd493];
	ld.shared.u32 	%r627, [%rd489];
	xor.b32  	%r628, %r626, %r627;
	bfe.u32 	%r629, %r388, 8, 8;
	mul.wide.u32 	%rd494, %r629, 4;
	add.s64 	%rd495, %rd1177, %rd494;
	ld.shared.u8 	%r630, [%rd495];
	mul.wide.u32 	%rd496, %r630, 4;
	add.s64 	%rd497, %rd255, %rd496;
	ld.shared.u32 	%r631, [%rd497];
	xor.b32  	%r632, %r628, %r631;
	and.b32  	%r633, %r388, 255;
	mul.wide.u32 	%rd498, %r633, 4;
	add.s64 	%rd499, %rd1177, %rd498;
	ld.shared.u8 	%r634, [%rd499];
	mul.wide.u32 	%rd500, %r634, 4;
	add.s64 	%rd501, %rd260, %rd500;
	ld.shared.u32 	%r635, [%rd501];
	xor.b32  	%r636, %r632, %r635;
	st.local.u32 	[%rd1182+72], %r636;
	shr.u32 	%r638, %r389, 24;
	mul.wide.u32 	%rd502, %r638, 4;
	add.s64 	%rd503, %rd1177, %rd502;
	ld.shared.u8 	%r639, [%rd503];
	mul.wide.u32 	%rd504, %r639, 4;
	add.s64 	%rd505, %rd245, %rd504;
	bfe.u32 	%r640, %r389, 16, 8;
	mul.wide.u32 	%rd506, %r640, 4;
	add.s64 	%rd507, %rd1177, %rd506;
	ld.shared.u8 	%r641, [%rd507];
	mul.wide.u32 	%rd508, %r641, 4;
	add.s64 	%rd509, %rd250, %rd508;
	ld.shared.u32 	%r642, [%rd509];
	ld.shared.u32 	%r643, [%rd505];
	xor.b32  	%r644, %r642, %r643;
	bfe.u32 	%r645, %r389, 8, 8;
	mul.wide.u32 	%rd510, %r645, 4;
	add.s64 	%rd511, %rd1177, %rd510;
	ld.shared.u8 	%r646, [%rd511];
	mul.wide.u32 	%rd512, %r646, 4;
	add.s64 	%rd513, %rd255, %rd512;
	ld.shared.u32 	%r647, [%rd513];
	xor.b32  	%r648, %r644, %r647;
	and.b32  	%r649, %r389, 255;
	mul.wide.u32 	%rd514, %r649, 4;
	add.s64 	%rd515, %rd1177, %rd514;
	ld.shared.u8 	%r650, [%rd515];
	mul.wide.u32 	%rd516, %r650, 4;
	add.s64 	%rd517, %rd260, %rd516;
	ld.shared.u32 	%r651, [%rd517];
	xor.b32  	%r652, %r648, %r651;
	st.local.u32 	[%rd1182+76], %r652;
	shr.u32 	%r654, %r390, 24;
	mul.wide.u32 	%rd518, %r654, 4;
	add.s64 	%rd519, %rd1177, %rd518;
	ld.shared.u8 	%r655, [%rd519];
	mul.wide.u32 	%rd520, %r655, 4;
	add.s64 	%rd521, %rd245, %rd520;
	bfe.u32 	%r656, %r390, 16, 8;
	mul.wide.u32 	%rd522, %r656, 4;
	add.s64 	%rd523, %rd1177, %rd522;
	ld.shared.u8 	%r657, [%rd523];
	mul.wide.u32 	%rd524, %r657, 4;
	add.s64 	%rd525, %rd250, %rd524;
	ld.shared.u32 	%r658, [%rd525];
	ld.shared.u32 	%r659, [%rd521];
	xor.b32  	%r660, %r658, %r659;
	bfe.u32 	%r661, %r390, 8, 8;
	mul.wide.u32 	%rd526, %r661, 4;
	add.s64 	%rd527, %rd1177, %rd526;
	ld.shared.u8 	%r662, [%rd527];
	mul.wide.u32 	%rd528, %r662, 4;
	add.s64 	%rd529, %rd255, %rd528;
	ld.shared.u32 	%r663, [%rd529];
	xor.b32  	%r664, %r660, %r663;
	and.b32  	%r665, %r390, 255;
	mul.wide.u32 	%rd530, %r665, 4;
	add.s64 	%rd531, %rd1177, %rd530;
	ld.shared.u8 	%r666, [%rd531];
	mul.wide.u32 	%rd532, %r666, 4;
	add.s64 	%rd533, %rd260, %rd532;
	ld.shared.u32 	%r667, [%rd533];
	xor.b32  	%r668, %r664, %r667;
	st.local.u32 	[%rd1182+80], %r668;
	shr.u32 	%r670, %r391, 24;
	mul.wide.u32 	%rd534, %r670, 4;
	add.s64 	%rd535, %rd1177, %rd534;
	ld.shared.u8 	%r671, [%rd535];
	mul.wide.u32 	%rd536, %r671, 4;
	add.s64 	%rd537, %rd245, %rd536;
	bfe.u32 	%r672, %r391, 16, 8;
	mul.wide.u32 	%rd538, %r672, 4;
	add.s64 	%rd539, %rd1177, %rd538;
	ld.shared.u8 	%r673, [%rd539];
	mul.wide.u32 	%rd540, %r673, 4;
	add.s64 	%rd541, %rd250, %rd540;
	ld.shared.u32 	%r674, [%rd541];
	ld.shared.u32 	%r675, [%rd537];
	xor.b32  	%r676, %r674, %r675;
	bfe.u32 	%r677, %r391, 8, 8;
	mul.wide.u32 	%rd542, %r677, 4;
	add.s64 	%rd543, %rd1177, %rd542;
	ld.shared.u8 	%r678, [%rd543];
	mul.wide.u32 	%rd544, %r678, 4;
	add.s64 	%rd545, %rd255, %rd544;
	ld.shared.u32 	%r679, [%rd545];
	xor.b32  	%r680, %r676, %r679;
	and.b32  	%r681, %r391, 255;
	mul.wide.u32 	%rd546, %r681, 4;
	add.s64 	%rd547, %rd1177, %rd546;
	ld.shared.u8 	%r682, [%rd547];
	mul.wide.u32 	%rd548, %r682, 4;
	add.s64 	%rd549, %rd260, %rd548;
	ld.shared.u32 	%r683, [%rd549];
	xor.b32  	%r684, %r680, %r683;
	st.local.u32 	[%rd1182+84], %r684;
	shr.u32 	%r686, %r392, 24;
	mul.wide.u32 	%rd550, %r686, 4;
	add.s64 	%rd551, %rd1177, %rd550;
	ld.shared.u8 	%r687, [%rd551];
	mul.wide.u32 	%rd552, %r687, 4;
	add.s64 	%rd553, %rd245, %rd552;
	bfe.u32 	%r688, %r392, 16, 8;
	mul.wide.u32 	%rd554, %r688, 4;
	add.s64 	%rd555, %rd1177, %rd554;
	ld.shared.u8 	%r689, [%rd555];
	mul.wide.u32 	%rd556, %r689, 4;
	add.s64 	%rd557, %rd250, %rd556;
	ld.shared.u32 	%r690, [%rd557];
	ld.shared.u32 	%r691, [%rd553];
	xor.b32  	%r692, %r690, %r691;
	bfe.u32 	%r693, %r392, 8, 8;
	mul.wide.u32 	%rd558, %r693, 4;
	add.s64 	%rd559, %rd1177, %rd558;
	ld.shared.u8 	%r694, [%rd559];
	mul.wide.u32 	%rd560, %r694, 4;
	add.s64 	%rd561, %rd255, %rd560;
	ld.shared.u32 	%r695, [%rd561];
	xor.b32  	%r696, %r692, %r695;
	and.b32  	%r697, %r392, 255;
	mul.wide.u32 	%rd562, %r697, 4;
	add.s64 	%rd563, %rd1177, %rd562;
	ld.shared.u8 	%r698, [%rd563];
	mul.wide.u32 	%rd564, %r698, 4;
	add.s64 	%rd565, %rd260, %rd564;
	ld.shared.u32 	%r699, [%rd565];
	xor.b32  	%r700, %r696, %r699;
	st.local.u32 	[%rd1182+88], %r700;
	shr.u32 	%r702, %r393, 24;
	mul.wide.u32 	%rd566, %r702, 4;
	add.s64 	%rd567, %rd1177, %rd566;
	ld.shared.u8 	%r703, [%rd567];
	mul.wide.u32 	%rd568, %r703, 4;
	add.s64 	%rd569, %rd245, %rd568;
	bfe.u32 	%r704, %r393, 16, 8;
	mul.wide.u32 	%rd570, %r704, 4;
	add.s64 	%rd571, %rd1177, %rd570;
	ld.shared.u8 	%r705, [%rd571];
	mul.wide.u32 	%rd572, %r705, 4;
	add.s64 	%rd573, %rd250, %rd572;
	ld.shared.u32 	%r706, [%rd573];
	ld.shared.u32 	%r707, [%rd569];
	xor.b32  	%r708, %r706, %r707;
	bfe.u32 	%r709, %r393, 8, 8;
	mul.wide.u32 	%rd574, %r709, 4;
	add.s64 	%rd575, %rd1177, %rd574;
	ld.shared.u8 	%r710, [%rd575];
	mul.wide.u32 	%rd576, %r710, 4;
	add.s64 	%rd577, %rd255, %rd576;
	ld.shared.u32 	%r711, [%rd577];
	xor.b32  	%r712, %r708, %r711;
	and.b32  	%r713, %r393, 255;
	mul.wide.u32 	%rd578, %r713, 4;
	add.s64 	%rd579, %rd1177, %rd578;
	ld.shared.u8 	%r714, [%rd579];
	mul.wide.u32 	%rd580, %r714, 4;
	add.s64 	%rd581, %rd260, %rd580;
	ld.shared.u32 	%r715, [%rd581];
	xor.b32  	%r716, %r712, %r715;
	st.local.u32 	[%rd1182+92], %r716;
	shr.u32 	%r718, %r394, 24;
	mul.wide.u32 	%rd582, %r718, 4;
	add.s64 	%rd583, %rd1177, %rd582;
	ld.shared.u8 	%r719, [%rd583];
	mul.wide.u32 	%rd584, %r719, 4;
	add.s64 	%rd585, %rd245, %rd584;
	bfe.u32 	%r720, %r394, 16, 8;
	mul.wide.u32 	%rd586, %r720, 4;
	add.s64 	%rd587, %rd1177, %rd586;
	ld.shared.u8 	%r721, [%rd587];
	mul.wide.u32 	%rd588, %r721, 4;
	add.s64 	%rd589, %rd250, %rd588;
	ld.shared.u32 	%r722, [%rd589];
	ld.shared.u32 	%r723, [%rd585];
	xor.b32  	%r724, %r722, %r723;
	bfe.u32 	%r725, %r394, 8, 8;
	mul.wide.u32 	%rd590, %r725, 4;
	add.s64 	%rd591, %rd1177, %rd590;
	ld.shared.u8 	%r726, [%rd591];
	mul.wide.u32 	%rd592, %r726, 4;
	add.s64 	%rd593, %rd255, %rd592;
	ld.shared.u32 	%r727, [%rd593];
	xor.b32  	%r728, %r724, %r727;
	and.b32  	%r729, %r394, 255;
	mul.wide.u32 	%rd594, %r729, 4;
	add.s64 	%rd595, %rd1177, %rd594;
	ld.shared.u8 	%r730, [%rd595];
	mul.wide.u32 	%rd596, %r730, 4;
	add.s64 	%rd597, %rd260, %rd596;
	ld.shared.u32 	%r731, [%rd597];
	xor.b32  	%r732, %r728, %r731;
	st.local.u32 	[%rd1182+96], %r732;
	shr.u32 	%r734, %r395, 24;
	mul.wide.u32 	%rd598, %r734, 4;
	add.s64 	%rd599, %rd1177, %rd598;
	ld.shared.u8 	%r735, [%rd599];
	mul.wide.u32 	%rd600, %r735, 4;
	add.s64 	%rd601, %rd245, %rd600;
	bfe.u32 	%r736, %r395, 16, 8;
	mul.wide.u32 	%rd602, %r736, 4;
	add.s64 	%rd603, %rd1177, %rd602;
	ld.shared.u8 	%r737, [%rd603];
	mul.wide.u32 	%rd604, %r737, 4;
	add.s64 	%rd605, %rd250, %rd604;
	ld.shared.u32 	%r738, [%rd605];
	ld.shared.u32 	%r739, [%rd601];
	xor.b32  	%r740, %r738, %r739;
	bfe.u32 	%r741, %r395, 8, 8;
	mul.wide.u32 	%rd606, %r741, 4;
	add.s64 	%rd607, %rd1177, %rd606;
	ld.shared.u8 	%r742, [%rd607];
	mul.wide.u32 	%rd608, %r742, 4;
	add.s64 	%rd609, %rd255, %rd608;
	ld.shared.u32 	%r743, [%rd609];
	xor.b32  	%r744, %r740, %r743;
	and.b32  	%r745, %r395, 255;
	mul.wide.u32 	%rd610, %r745, 4;
	add.s64 	%rd611, %rd1177, %rd610;
	ld.shared.u8 	%r746, [%rd611];
	mul.wide.u32 	%rd612, %r746, 4;
	add.s64 	%rd613, %rd260, %rd612;
	ld.shared.u32 	%r747, [%rd613];
	xor.b32  	%r748, %r744, %r747;
	st.local.u32 	[%rd1182+100], %r748;
	ld.local.u32 	%r749, [%rd1182+104];
	shr.u32 	%r750, %r749, 24;
	mul.wide.u32 	%rd614, %r750, 4;
	add.s64 	%rd615, %rd1177, %rd614;
	ld.shared.u8 	%r751, [%rd615];
	mul.wide.u32 	%rd616, %r751, 4;
	add.s64 	%rd617, %rd245, %rd616;
	bfe.u32 	%r752, %r749, 16, 8;
	mul.wide.u32 	%rd618, %r752, 4;
	add.s64 	%rd619, %rd1177, %rd618;
	ld.shared.u8 	%r753, [%rd619];
	mul.wide.u32 	%rd620, %r753, 4;
	add.s64 	%rd621, %rd250, %rd620;
	ld.shared.u32 	%r754, [%rd621];
	ld.shared.u32 	%r755, [%rd617];
	xor.b32  	%r756, %r754, %r755;
	bfe.u32 	%r757, %r749, 8, 8;
	mul.wide.u32 	%rd622, %r757, 4;
	add.s64 	%rd623, %rd1177, %rd622;
	ld.shared.u8 	%r758, [%rd623];
	mul.wide.u32 	%rd624, %r758, 4;
	add.s64 	%rd625, %rd255, %rd624;
	ld.shared.u32 	%r759, [%rd625];
	xor.b32  	%r760, %r756, %r759;
	and.b32  	%r761, %r749, 255;
	mul.wide.u32 	%rd626, %r761, 4;
	add.s64 	%rd627, %rd1177, %rd626;
	ld.shared.u8 	%r762, [%rd627];
	mul.wide.u32 	%rd628, %r762, 4;
	add.s64 	%rd629, %rd260, %rd628;
	ld.shared.u32 	%r763, [%rd629];
	xor.b32  	%r764, %r760, %r763;
	ld.local.v4.u32 	{%r765, %r766, %r767, %r768}, [%rd1182+108];
	ld.local.v4.u32 	{%r769, %r770, %r771, %r772}, [%rd1182+124];
	ld.local.v4.u32 	{%r773, %r774, %r775, %r776}, [%rd1182+140];
	ld.local.v4.u32 	{%r777, %r778, %r779, %r780}, [%rd1182+156];
	ld.local.v4.u32 	{%r781, %r782, %r783, %r784}, [%rd1182+172];
	ld.local.v2.u32 	{%r785, %r786}, [%rd1182+188];
	st.local.u32 	[%rd1182+104], %r764;
	shr.u32 	%r788, %r765, 24;
	mul.wide.u32 	%rd630, %r788, 4;
	add.s64 	%rd631, %rd1177, %rd630;
	ld.shared.u8 	%r789, [%rd631];
	mul.wide.u32 	%rd632, %r789, 4;
	add.s64 	%rd633, %rd245, %rd632;
	bfe.u32 	%r790, %r765, 16, 8;
	mul.wide.u32 	%rd634, %r790, 4;
	add.s64 	%rd635, %rd1177, %rd634;
	ld.shared.u8 	%r791, [%rd635];
	mul.wide.u32 	%rd636, %r791, 4;
	add.s64 	%rd637, %rd250, %rd636;
	ld.shared.u32 	%r792, [%rd637];
	ld.shared.u32 	%r793, [%rd633];
	xor.b32  	%r794, %r792, %r793;
	bfe.u32 	%r795, %r765, 8, 8;
	mul.wide.u32 	%rd638, %r795, 4;
	add.s64 	%rd639, %rd1177, %rd638;
	ld.shared.u8 	%r796, [%rd639];
	mul.wide.u32 	%rd640, %r796, 4;
	add.s64 	%rd641, %rd255, %rd640;
	ld.shared.u32 	%r797, [%rd641];
	xor.b32  	%r798, %r794, %r797;
	and.b32  	%r799, %r765, 255;
	mul.wide.u32 	%rd642, %r799, 4;
	add.s64 	%rd643, %rd1177, %rd642;
	ld.shared.u8 	%r800, [%rd643];
	mul.wide.u32 	%rd644, %r800, 4;
	add.s64 	%rd645, %rd260, %rd644;
	ld.shared.u32 	%r801, [%rd645];
	xor.b32  	%r802, %r798, %r801;
	st.local.u32 	[%rd1182+108], %r802;
	shr.u32 	%r804, %r766, 24;
	mul.wide.u32 	%rd646, %r804, 4;
	add.s64 	%rd647, %rd1177, %rd646;
	ld.shared.u8 	%r805, [%rd647];
	mul.wide.u32 	%rd648, %r805, 4;
	add.s64 	%rd649, %rd245, %rd648;
	bfe.u32 	%r806, %r766, 16, 8;
	mul.wide.u32 	%rd650, %r806, 4;
	add.s64 	%rd651, %rd1177, %rd650;
	ld.shared.u8 	%r807, [%rd651];
	mul.wide.u32 	%rd652, %r807, 4;
	add.s64 	%rd653, %rd250, %rd652;
	ld.shared.u32 	%r808, [%rd653];
	ld.shared.u32 	%r809, [%rd649];
	xor.b32  	%r810, %r808, %r809;
	bfe.u32 	%r811, %r766, 8, 8;
	mul.wide.u32 	%rd654, %r811, 4;
	add.s64 	%rd655, %rd1177, %rd654;
	ld.shared.u8 	%r812, [%rd655];
	mul.wide.u32 	%rd656, %r812, 4;
	add.s64 	%rd657, %rd255, %rd656;
	ld.shared.u32 	%r813, [%rd657];
	xor.b32  	%r814, %r810, %r813;
	and.b32  	%r815, %r766, 255;
	mul.wide.u32 	%rd658, %r815, 4;
	add.s64 	%rd659, %rd1177, %rd658;
	ld.shared.u8 	%r816, [%rd659];
	mul.wide.u32 	%rd660, %r816, 4;
	add.s64 	%rd661, %rd260, %rd660;
	ld.shared.u32 	%r817, [%rd661];
	xor.b32  	%r818, %r814, %r817;
	st.local.u32 	[%rd1182+112], %r818;
	shr.u32 	%r820, %r767, 24;
	mul.wide.u32 	%rd662, %r820, 4;
	add.s64 	%rd663, %rd1177, %rd662;
	ld.shared.u8 	%r821, [%rd663];
	mul.wide.u32 	%rd664, %r821, 4;
	add.s64 	%rd665, %rd245, %rd664;
	bfe.u32 	%r822, %r767, 16, 8;
	mul.wide.u32 	%rd666, %r822, 4;
	add.s64 	%rd667, %rd1177, %rd666;
	ld.shared.u8 	%r823, [%rd667];
	mul.wide.u32 	%rd668, %r823, 4;
	add.s64 	%rd669, %rd250, %rd668;
	ld.shared.u32 	%r824, [%rd669];
	ld.shared.u32 	%r825, [%rd665];
	xor.b32  	%r826, %r824, %r825;
	bfe.u32 	%r827, %r767, 8, 8;
	mul.wide.u32 	%rd670, %r827, 4;
	add.s64 	%rd671, %rd1177, %rd670;
	ld.shared.u8 	%r828, [%rd671];
	mul.wide.u32 	%rd672, %r828, 4;
	add.s64 	%rd673, %rd255, %rd672;
	ld.shared.u32 	%r829, [%rd673];
	xor.b32  	%r830, %r826, %r829;
	and.b32  	%r831, %r767, 255;
	mul.wide.u32 	%rd674, %r831, 4;
	add.s64 	%rd675, %rd1177, %rd674;
	ld.shared.u8 	%r832, [%rd675];
	mul.wide.u32 	%rd676, %r832, 4;
	add.s64 	%rd677, %rd260, %rd676;
	ld.shared.u32 	%r833, [%rd677];
	xor.b32  	%r834, %r830, %r833;
	st.local.u32 	[%rd1182+116], %r834;
	shr.u32 	%r836, %r768, 24;
	mul.wide.u32 	%rd678, %r836, 4;
	add.s64 	%rd679, %rd1177, %rd678;
	ld.shared.u8 	%r837, [%rd679];
	mul.wide.u32 	%rd680, %r837, 4;
	add.s64 	%rd681, %rd245, %rd680;
	bfe.u32 	%r838, %r768, 16, 8;
	mul.wide.u32 	%rd682, %r838, 4;
	add.s64 	%rd683, %rd1177, %rd682;
	ld.shared.u8 	%r839, [%rd683];
	mul.wide.u32 	%rd684, %r839, 4;
	add.s64 	%rd685, %rd250, %rd684;
	ld.shared.u32 	%r840, [%rd685];
	ld.shared.u32 	%r841, [%rd681];
	xor.b32  	%r842, %r840, %r841;
	bfe.u32 	%r843, %r768, 8, 8;
	mul.wide.u32 	%rd686, %r843, 4;
	add.s64 	%rd687, %rd1177, %rd686;
	ld.shared.u8 	%r844, [%rd687];
	mul.wide.u32 	%rd688, %r844, 4;
	add.s64 	%rd689, %rd255, %rd688;
	ld.shared.u32 	%r845, [%rd689];
	xor.b32  	%r846, %r842, %r845;
	and.b32  	%r847, %r768, 255;
	mul.wide.u32 	%rd690, %r847, 4;
	add.s64 	%rd691, %rd1177, %rd690;
	ld.shared.u8 	%r848, [%rd691];
	mul.wide.u32 	%rd692, %r848, 4;
	add.s64 	%rd693, %rd260, %rd692;
	ld.shared.u32 	%r849, [%rd693];
	xor.b32  	%r850, %r846, %r849;
	st.local.u32 	[%rd1182+120], %r850;
	shr.u32 	%r852, %r769, 24;
	mul.wide.u32 	%rd694, %r852, 4;
	add.s64 	%rd695, %rd1177, %rd694;
	ld.shared.u8 	%r853, [%rd695];
	mul.wide.u32 	%rd696, %r853, 4;
	add.s64 	%rd697, %rd245, %rd696;
	bfe.u32 	%r854, %r769, 16, 8;
	mul.wide.u32 	%rd698, %r854, 4;
	add.s64 	%rd699, %rd1177, %rd698;
	ld.shared.u8 	%r855, [%rd699];
	mul.wide.u32 	%rd700, %r855, 4;
	add.s64 	%rd701, %rd250, %rd700;
	ld.shared.u32 	%r856, [%rd701];
	ld.shared.u32 	%r857, [%rd697];
	xor.b32  	%r858, %r856, %r857;
	bfe.u32 	%r859, %r769, 8, 8;
	mul.wide.u32 	%rd702, %r859, 4;
	add.s64 	%rd703, %rd1177, %rd702;
	ld.shared.u8 	%r860, [%rd703];
	mul.wide.u32 	%rd704, %r860, 4;
	add.s64 	%rd705, %rd255, %rd704;
	ld.shared.u32 	%r861, [%rd705];
	xor.b32  	%r862, %r858, %r861;
	and.b32  	%r863, %r769, 255;
	mul.wide.u32 	%rd706, %r863, 4;
	add.s64 	%rd707, %rd1177, %rd706;
	ld.shared.u8 	%r864, [%rd707];
	mul.wide.u32 	%rd708, %r864, 4;
	add.s64 	%rd709, %rd260, %rd708;
	ld.shared.u32 	%r865, [%rd709];
	xor.b32  	%r866, %r862, %r865;
	st.local.u32 	[%rd1182+124], %r866;
	shr.u32 	%r868, %r770, 24;
	mul.wide.u32 	%rd710, %r868, 4;
	add.s64 	%rd711, %rd1177, %rd710;
	ld.shared.u8 	%r869, [%rd711];
	mul.wide.u32 	%rd712, %r869, 4;
	add.s64 	%rd713, %rd245, %rd712;
	bfe.u32 	%r870, %r770, 16, 8;
	mul.wide.u32 	%rd714, %r870, 4;
	add.s64 	%rd715, %rd1177, %rd714;
	ld.shared.u8 	%r871, [%rd715];
	mul.wide.u32 	%rd716, %r871, 4;
	add.s64 	%rd717, %rd250, %rd716;
	ld.shared.u32 	%r872, [%rd717];
	ld.shared.u32 	%r873, [%rd713];
	xor.b32  	%r874, %r872, %r873;
	bfe.u32 	%r875, %r770, 8, 8;
	mul.wide.u32 	%rd718, %r875, 4;
	add.s64 	%rd719, %rd1177, %rd718;
	ld.shared.u8 	%r876, [%rd719];
	mul.wide.u32 	%rd720, %r876, 4;
	add.s64 	%rd721, %rd255, %rd720;
	ld.shared.u32 	%r877, [%rd721];
	xor.b32  	%r878, %r874, %r877;
	and.b32  	%r879, %r770, 255;
	mul.wide.u32 	%rd722, %r879, 4;
	add.s64 	%rd723, %rd1177, %rd722;
	ld.shared.u8 	%r880, [%rd723];
	mul.wide.u32 	%rd724, %r880, 4;
	add.s64 	%rd725, %rd260, %rd724;
	ld.shared.u32 	%r881, [%rd725];
	xor.b32  	%r882, %r878, %r881;
	st.local.u32 	[%rd1182+128], %r882;
	shr.u32 	%r884, %r771, 24;
	mul.wide.u32 	%rd726, %r884, 4;
	add.s64 	%rd727, %rd1177, %rd726;
	ld.shared.u8 	%r885, [%rd727];
	mul.wide.u32 	%rd728, %r885, 4;
	add.s64 	%rd729, %rd245, %rd728;
	bfe.u32 	%r886, %r771, 16, 8;
	mul.wide.u32 	%rd730, %r886, 4;
	add.s64 	%rd731, %rd1177, %rd730;
	ld.shared.u8 	%r887, [%rd731];
	mul.wide.u32 	%rd732, %r887, 4;
	add.s64 	%rd733, %rd250, %rd732;
	ld.shared.u32 	%r888, [%rd733];
	ld.shared.u32 	%r889, [%rd729];
	xor.b32  	%r890, %r888, %r889;
	bfe.u32 	%r891, %r771, 8, 8;
	mul.wide.u32 	%rd734, %r891, 4;
	add.s64 	%rd735, %rd1177, %rd734;
	ld.shared.u8 	%r892, [%rd735];
	mul.wide.u32 	%rd736, %r892, 4;
	add.s64 	%rd737, %rd255, %rd736;
	ld.shared.u32 	%r893, [%rd737];
	xor.b32  	%r894, %r890, %r893;
	and.b32  	%r895, %r771, 255;
	mul.wide.u32 	%rd738, %r895, 4;
	add.s64 	%rd739, %rd1177, %rd738;
	ld.shared.u8 	%r896, [%rd739];
	mul.wide.u32 	%rd740, %r896, 4;
	add.s64 	%rd741, %rd260, %rd740;
	ld.shared.u32 	%r897, [%rd741];
	xor.b32  	%r898, %r894, %r897;
	st.local.u32 	[%rd1182+132], %r898;
	shr.u32 	%r900, %r772, 24;
	mul.wide.u32 	%rd742, %r900, 4;
	add.s64 	%rd743, %rd1177, %rd742;
	ld.shared.u8 	%r901, [%rd743];
	mul.wide.u32 	%rd744, %r901, 4;
	add.s64 	%rd745, %rd245, %rd744;
	bfe.u32 	%r902, %r772, 16, 8;
	mul.wide.u32 	%rd746, %r902, 4;
	add.s64 	%rd747, %rd1177, %rd746;
	ld.shared.u8 	%r903, [%rd747];
	mul.wide.u32 	%rd748, %r903, 4;
	add.s64 	%rd749, %rd250, %rd748;
	ld.shared.u32 	%r904, [%rd749];
	ld.shared.u32 	%r905, [%rd745];
	xor.b32  	%r906, %r904, %r905;
	bfe.u32 	%r907, %r772, 8, 8;
	mul.wide.u32 	%rd750, %r907, 4;
	add.s64 	%rd751, %rd1177, %rd750;
	ld.shared.u8 	%r908, [%rd751];
	mul.wide.u32 	%rd752, %r908, 4;
	add.s64 	%rd753, %rd255, %rd752;
	ld.shared.u32 	%r909, [%rd753];
	xor.b32  	%r910, %r906, %r909;
	and.b32  	%r911, %r772, 255;
	mul.wide.u32 	%rd754, %r911, 4;
	add.s64 	%rd755, %rd1177, %rd754;
	ld.shared.u8 	%r912, [%rd755];
	mul.wide.u32 	%rd756, %r912, 4;
	add.s64 	%rd757, %rd260, %rd756;
	ld.shared.u32 	%r913, [%rd757];
	xor.b32  	%r914, %r910, %r913;
	st.local.u32 	[%rd1182+136], %r914;
	shr.u32 	%r916, %r773, 24;
	mul.wide.u32 	%rd758, %r916, 4;
	add.s64 	%rd759, %rd1177, %rd758;
	ld.shared.u8 	%r917, [%rd759];
	mul.wide.u32 	%rd760, %r917, 4;
	add.s64 	%rd761, %rd245, %rd760;
	bfe.u32 	%r918, %r773, 16, 8;
	mul.wide.u32 	%rd762, %r918, 4;
	add.s64 	%rd763, %rd1177, %rd762;
	ld.shared.u8 	%r919, [%rd763];
	mul.wide.u32 	%rd764, %r919, 4;
	add.s64 	%rd765, %rd250, %rd764;
	ld.shared.u32 	%r920, [%rd765];
	ld.shared.u32 	%r921, [%rd761];
	xor.b32  	%r922, %r920, %r921;
	bfe.u32 	%r923, %r773, 8, 8;
	mul.wide.u32 	%rd766, %r923, 4;
	add.s64 	%rd767, %rd1177, %rd766;
	ld.shared.u8 	%r924, [%rd767];
	mul.wide.u32 	%rd768, %r924, 4;
	add.s64 	%rd769, %rd255, %rd768;
	ld.shared.u32 	%r925, [%rd769];
	xor.b32  	%r926, %r922, %r925;
	and.b32  	%r927, %r773, 255;
	mul.wide.u32 	%rd770, %r927, 4;
	add.s64 	%rd771, %rd1177, %rd770;
	ld.shared.u8 	%r928, [%rd771];
	mul.wide.u32 	%rd772, %r928, 4;
	add.s64 	%rd773, %rd260, %rd772;
	ld.shared.u32 	%r929, [%rd773];
	xor.b32  	%r930, %r926, %r929;
	st.local.u32 	[%rd1182+140], %r930;
	shr.u32 	%r932, %r774, 24;
	mul.wide.u32 	%rd774, %r932, 4;
	add.s64 	%rd775, %rd1177, %rd774;
	ld.shared.u8 	%r933, [%rd775];
	mul.wide.u32 	%rd776, %r933, 4;
	add.s64 	%rd777, %rd245, %rd776;
	bfe.u32 	%r934, %r774, 16, 8;
	mul.wide.u32 	%rd778, %r934, 4;
	add.s64 	%rd779, %rd1177, %rd778;
	ld.shared.u8 	%r935, [%rd779];
	mul.wide.u32 	%rd780, %r935, 4;
	add.s64 	%rd781, %rd250, %rd780;
	ld.shared.u32 	%r936, [%rd781];
	ld.shared.u32 	%r937, [%rd777];
	xor.b32  	%r938, %r936, %r937;
	bfe.u32 	%r939, %r774, 8, 8;
	mul.wide.u32 	%rd782, %r939, 4;
	add.s64 	%rd783, %rd1177, %rd782;
	ld.shared.u8 	%r940, [%rd783];
	mul.wide.u32 	%rd784, %r940, 4;
	add.s64 	%rd785, %rd255, %rd784;
	ld.shared.u32 	%r941, [%rd785];
	xor.b32  	%r942, %r938, %r941;
	and.b32  	%r943, %r774, 255;
	mul.wide.u32 	%rd786, %r943, 4;
	add.s64 	%rd787, %rd1177, %rd786;
	ld.shared.u8 	%r944, [%rd787];
	mul.wide.u32 	%rd788, %r944, 4;
	add.s64 	%rd789, %rd260, %rd788;
	ld.shared.u32 	%r945, [%rd789];
	xor.b32  	%r946, %r942, %r945;
	st.local.u32 	[%rd1182+144], %r946;
	shr.u32 	%r948, %r775, 24;
	mul.wide.u32 	%rd790, %r948, 4;
	add.s64 	%rd791, %rd1177, %rd790;
	ld.shared.u8 	%r949, [%rd791];
	mul.wide.u32 	%rd792, %r949, 4;
	add.s64 	%rd793, %rd245, %rd792;
	bfe.u32 	%r950, %r775, 16, 8;
	mul.wide.u32 	%rd794, %r950, 4;
	add.s64 	%rd795, %rd1177, %rd794;
	ld.shared.u8 	%r951, [%rd795];
	mul.wide.u32 	%rd796, %r951, 4;
	add.s64 	%rd797, %rd250, %rd796;
	ld.shared.u32 	%r952, [%rd797];
	ld.shared.u32 	%r953, [%rd793];
	xor.b32  	%r954, %r952, %r953;
	bfe.u32 	%r955, %r775, 8, 8;
	mul.wide.u32 	%rd798, %r955, 4;
	add.s64 	%rd799, %rd1177, %rd798;
	ld.shared.u8 	%r956, [%rd799];
	mul.wide.u32 	%rd800, %r956, 4;
	add.s64 	%rd801, %rd255, %rd800;
	ld.shared.u32 	%r957, [%rd801];
	xor.b32  	%r958, %r954, %r957;
	and.b32  	%r959, %r775, 255;
	mul.wide.u32 	%rd802, %r959, 4;
	add.s64 	%rd803, %rd1177, %rd802;
	ld.shared.u8 	%r960, [%rd803];
	mul.wide.u32 	%rd804, %r960, 4;
	add.s64 	%rd805, %rd260, %rd804;
	ld.shared.u32 	%r961, [%rd805];
	xor.b32  	%r962, %r958, %r961;
	st.local.u32 	[%rd1182+148], %r962;
	shr.u32 	%r964, %r776, 24;
	mul.wide.u32 	%rd806, %r964, 4;
	add.s64 	%rd807, %rd1177, %rd806;
	ld.shared.u8 	%r965, [%rd807];
	mul.wide.u32 	%rd808, %r965, 4;
	add.s64 	%rd809, %rd245, %rd808;
	bfe.u32 	%r966, %r776, 16, 8;
	mul.wide.u32 	%rd810, %r966, 4;
	add.s64 	%rd811, %rd1177, %rd810;
	ld.shared.u8 	%r967, [%rd811];
	mul.wide.u32 	%rd812, %r967, 4;
	add.s64 	%rd813, %rd250, %rd812;
	ld.shared.u32 	%r968, [%rd813];
	ld.shared.u32 	%r969, [%rd809];
	xor.b32  	%r970, %r968, %r969;
	bfe.u32 	%r971, %r776, 8, 8;
	mul.wide.u32 	%rd814, %r971, 4;
	add.s64 	%rd815, %rd1177, %rd814;
	ld.shared.u8 	%r972, [%rd815];
	mul.wide.u32 	%rd816, %r972, 4;
	add.s64 	%rd817, %rd255, %rd816;
	ld.shared.u32 	%r973, [%rd817];
	xor.b32  	%r974, %r970, %r973;
	and.b32  	%r975, %r776, 255;
	mul.wide.u32 	%rd818, %r975, 4;
	add.s64 	%rd819, %rd1177, %rd818;
	ld.shared.u8 	%r976, [%rd819];
	mul.wide.u32 	%rd820, %r976, 4;
	add.s64 	%rd821, %rd260, %rd820;
	ld.shared.u32 	%r977, [%rd821];
	xor.b32  	%r978, %r974, %r977;
	st.local.u32 	[%rd1182+152], %r978;
	shr.u32 	%r980, %r777, 24;
	mul.wide.u32 	%rd822, %r980, 4;
	add.s64 	%rd823, %rd1177, %rd822;
	ld.shared.u8 	%r981, [%rd823];
	mul.wide.u32 	%rd824, %r981, 4;
	add.s64 	%rd825, %rd245, %rd824;
	bfe.u32 	%r982, %r777, 16, 8;
	mul.wide.u32 	%rd826, %r982, 4;
	add.s64 	%rd827, %rd1177, %rd826;
	ld.shared.u8 	%r983, [%rd827];
	mul.wide.u32 	%rd828, %r983, 4;
	add.s64 	%rd829, %rd250, %rd828;
	ld.shared.u32 	%r984, [%rd829];
	ld.shared.u32 	%r985, [%rd825];
	xor.b32  	%r986, %r984, %r985;
	bfe.u32 	%r987, %r777, 8, 8;
	mul.wide.u32 	%rd830, %r987, 4;
	add.s64 	%rd831, %rd1177, %rd830;
	ld.shared.u8 	%r988, [%rd831];
	mul.wide.u32 	%rd832, %r988, 4;
	add.s64 	%rd833, %rd255, %rd832;
	ld.shared.u32 	%r989, [%rd833];
	xor.b32  	%r990, %r986, %r989;
	and.b32  	%r991, %r777, 255;
	mul.wide.u32 	%rd834, %r991, 4;
	add.s64 	%rd835, %rd1177, %rd834;
	ld.shared.u8 	%r992, [%rd835];
	mul.wide.u32 	%rd836, %r992, 4;
	add.s64 	%rd837, %rd260, %rd836;
	ld.shared.u32 	%r993, [%rd837];
	xor.b32  	%r994, %r990, %r993;
	st.local.u32 	[%rd1182+156], %r994;
	shr.u32 	%r996, %r778, 24;
	mul.wide.u32 	%rd838, %r996, 4;
	add.s64 	%rd839, %rd1177, %rd838;
	ld.shared.u8 	%r997, [%rd839];
	mul.wide.u32 	%rd840, %r997, 4;
	add.s64 	%rd841, %rd245, %rd840;
	bfe.u32 	%r998, %r778, 16, 8;
	mul.wide.u32 	%rd842, %r998, 4;
	add.s64 	%rd843, %rd1177, %rd842;
	ld.shared.u8 	%r999, [%rd843];
	mul.wide.u32 	%rd844, %r999, 4;
	add.s64 	%rd845, %rd250, %rd844;
	ld.shared.u32 	%r1000, [%rd845];
	ld.shared.u32 	%r1001, [%rd841];
	xor.b32  	%r1002, %r1000, %r1001;
	bfe.u32 	%r1003, %r778, 8, 8;
	mul.wide.u32 	%rd846, %r1003, 4;
	add.s64 	%rd847, %rd1177, %rd846;
	ld.shared.u8 	%r1004, [%rd847];
	mul.wide.u32 	%rd848, %r1004, 4;
	add.s64 	%rd849, %rd255, %rd848;
	ld.shared.u32 	%r1005, [%rd849];
	xor.b32  	%r1006, %r1002, %r1005;
	and.b32  	%r1007, %r778, 255;
	mul.wide.u32 	%rd850, %r1007, 4;
	add.s64 	%rd851, %rd1177, %rd850;
	ld.shared.u8 	%r1008, [%rd851];
	mul.wide.u32 	%rd852, %r1008, 4;
	add.s64 	%rd853, %rd260, %rd852;
	ld.shared.u32 	%r1009, [%rd853];
	xor.b32  	%r1010, %r1006, %r1009;
	st.local.u32 	[%rd1182+160], %r1010;
	shr.u32 	%r1012, %r779, 24;
	mul.wide.u32 	%rd854, %r1012, 4;
	add.s64 	%rd855, %rd1177, %rd854;
	ld.shared.u8 	%r1013, [%rd855];
	mul.wide.u32 	%rd856, %r1013, 4;
	add.s64 	%rd857, %rd245, %rd856;
	bfe.u32 	%r1014, %r779, 16, 8;
	mul.wide.u32 	%rd858, %r1014, 4;
	add.s64 	%rd859, %rd1177, %rd858;
	ld.shared.u8 	%r1015, [%rd859];
	mul.wide.u32 	%rd860, %r1015, 4;
	add.s64 	%rd861, %rd250, %rd860;
	ld.shared.u32 	%r1016, [%rd861];
	ld.shared.u32 	%r1017, [%rd857];
	xor.b32  	%r1018, %r1016, %r1017;
	bfe.u32 	%r1019, %r779, 8, 8;
	mul.wide.u32 	%rd862, %r1019, 4;
	add.s64 	%rd863, %rd1177, %rd862;
	ld.shared.u8 	%r1020, [%rd863];
	mul.wide.u32 	%rd864, %r1020, 4;
	add.s64 	%rd865, %rd255, %rd864;
	ld.shared.u32 	%r1021, [%rd865];
	xor.b32  	%r1022, %r1018, %r1021;
	and.b32  	%r1023, %r779, 255;
	mul.wide.u32 	%rd866, %r1023, 4;
	add.s64 	%rd867, %rd1177, %rd866;
	ld.shared.u8 	%r1024, [%rd867];
	mul.wide.u32 	%rd868, %r1024, 4;
	add.s64 	%rd869, %rd260, %rd868;
	ld.shared.u32 	%r1025, [%rd869];
	xor.b32  	%r1026, %r1022, %r1025;
	st.local.u32 	[%rd1182+164], %r1026;
	shr.u32 	%r1028, %r780, 24;
	mul.wide.u32 	%rd870, %r1028, 4;
	add.s64 	%rd871, %rd1177, %rd870;
	ld.shared.u8 	%r1029, [%rd871];
	mul.wide.u32 	%rd872, %r1029, 4;
	add.s64 	%rd873, %rd245, %rd872;
	bfe.u32 	%r1030, %r780, 16, 8;
	mul.wide.u32 	%rd874, %r1030, 4;
	add.s64 	%rd875, %rd1177, %rd874;
	ld.shared.u8 	%r1031, [%rd875];
	mul.wide.u32 	%rd876, %r1031, 4;
	add.s64 	%rd877, %rd250, %rd876;
	ld.shared.u32 	%r1032, [%rd877];
	ld.shared.u32 	%r1033, [%rd873];
	xor.b32  	%r1034, %r1032, %r1033;
	bfe.u32 	%r1035, %r780, 8, 8;
	mul.wide.u32 	%rd878, %r1035, 4;
	add.s64 	%rd879, %rd1177, %rd878;
	ld.shared.u8 	%r1036, [%rd879];
	mul.wide.u32 	%rd880, %r1036, 4;
	add.s64 	%rd881, %rd255, %rd880;
	ld.shared.u32 	%r1037, [%rd881];
	xor.b32  	%r1038, %r1034, %r1037;
	and.b32  	%r1039, %r780, 255;
	mul.wide.u32 	%rd882, %r1039, 4;
	add.s64 	%rd883, %rd1177, %rd882;
	ld.shared.u8 	%r1040, [%rd883];
	mul.wide.u32 	%rd884, %r1040, 4;
	add.s64 	%rd885, %rd260, %rd884;
	ld.shared.u32 	%r1041, [%rd885];
	xor.b32  	%r1042, %r1038, %r1041;
	st.local.u32 	[%rd1182+168], %r1042;
	shr.u32 	%r1044, %r781, 24;
	mul.wide.u32 	%rd886, %r1044, 4;
	add.s64 	%rd887, %rd1177, %rd886;
	ld.shared.u8 	%r1045, [%rd887];
	mul.wide.u32 	%rd888, %r1045, 4;
	add.s64 	%rd889, %rd245, %rd888;
	bfe.u32 	%r1046, %r781, 16, 8;
	mul.wide.u32 	%rd890, %r1046, 4;
	add.s64 	%rd891, %rd1177, %rd890;
	ld.shared.u8 	%r1047, [%rd891];
	mul.wide.u32 	%rd892, %r1047, 4;
	add.s64 	%rd893, %rd250, %rd892;
	ld.shared.u32 	%r1048, [%rd893];
	ld.shared.u32 	%r1049, [%rd889];
	xor.b32  	%r1050, %r1048, %r1049;
	bfe.u32 	%r1051, %r781, 8, 8;
	mul.wide.u32 	%rd894, %r1051, 4;
	add.s64 	%rd895, %rd1177, %rd894;
	ld.shared.u8 	%r1052, [%rd895];
	mul.wide.u32 	%rd896, %r1052, 4;
	add.s64 	%rd897, %rd255, %rd896;
	ld.shared.u32 	%r1053, [%rd897];
	xor.b32  	%r1054, %r1050, %r1053;
	and.b32  	%r1055, %r781, 255;
	mul.wide.u32 	%rd898, %r1055, 4;
	add.s64 	%rd899, %rd1177, %rd898;
	ld.shared.u8 	%r1056, [%rd899];
	mul.wide.u32 	%rd900, %r1056, 4;
	add.s64 	%rd901, %rd260, %rd900;
	ld.shared.u32 	%r1057, [%rd901];
	xor.b32  	%r1058, %r1054, %r1057;
	st.local.u32 	[%rd1182+172], %r1058;
	shr.u32 	%r1060, %r782, 24;
	mul.wide.u32 	%rd902, %r1060, 4;
	add.s64 	%rd903, %rd1177, %rd902;
	ld.shared.u8 	%r1061, [%rd903];
	mul.wide.u32 	%rd904, %r1061, 4;
	add.s64 	%rd905, %rd245, %rd904;
	bfe.u32 	%r1062, %r782, 16, 8;
	mul.wide.u32 	%rd906, %r1062, 4;
	add.s64 	%rd907, %rd1177, %rd906;
	ld.shared.u8 	%r1063, [%rd907];
	mul.wide.u32 	%rd908, %r1063, 4;
	add.s64 	%rd909, %rd250, %rd908;
	ld.shared.u32 	%r1064, [%rd909];
	ld.shared.u32 	%r1065, [%rd905];
	xor.b32  	%r1066, %r1064, %r1065;
	bfe.u32 	%r1067, %r782, 8, 8;
	mul.wide.u32 	%rd910, %r1067, 4;
	add.s64 	%rd911, %rd1177, %rd910;
	ld.shared.u8 	%r1068, [%rd911];
	mul.wide.u32 	%rd912, %r1068, 4;
	add.s64 	%rd913, %rd255, %rd912;
	ld.shared.u32 	%r1069, [%rd913];
	xor.b32  	%r1070, %r1066, %r1069;
	and.b32  	%r1071, %r782, 255;
	mul.wide.u32 	%rd914, %r1071, 4;
	add.s64 	%rd915, %rd1177, %rd914;
	ld.shared.u8 	%r1072, [%rd915];
	mul.wide.u32 	%rd916, %r1072, 4;
	add.s64 	%rd917, %rd260, %rd916;
	ld.shared.u32 	%r1073, [%rd917];
	xor.b32  	%r1074, %r1070, %r1073;
	st.local.u32 	[%rd1182+176], %r1074;
	shr.u32 	%r1076, %r783, 24;
	mul.wide.u32 	%rd918, %r1076, 4;
	add.s64 	%rd919, %rd1177, %rd918;
	ld.shared.u8 	%r1077, [%rd919];
	mul.wide.u32 	%rd920, %r1077, 4;
	add.s64 	%rd921, %rd245, %rd920;
	bfe.u32 	%r1078, %r783, 16, 8;
	mul.wide.u32 	%rd922, %r1078, 4;
	add.s64 	%rd923, %rd1177, %rd922;
	ld.shared.u8 	%r1079, [%rd923];
	mul.wide.u32 	%rd924, %r1079, 4;
	add.s64 	%rd925, %rd250, %rd924;
	ld.shared.u32 	%r1080, [%rd925];
	ld.shared.u32 	%r1081, [%rd921];
	xor.b32  	%r1082, %r1080, %r1081;
	bfe.u32 	%r1083, %r783, 8, 8;
	mul.wide.u32 	%rd926, %r1083, 4;
	add.s64 	%rd927, %rd1177, %rd926;
	ld.shared.u8 	%r1084, [%rd927];
	mul.wide.u32 	%rd928, %r1084, 4;
	add.s64 	%rd929, %rd255, %rd928;
	ld.shared.u32 	%r1085, [%rd929];
	xor.b32  	%r1086, %r1082, %r1085;
	and.b32  	%r1087, %r783, 255;
	mul.wide.u32 	%rd930, %r1087, 4;
	add.s64 	%rd931, %rd1177, %rd930;
	ld.shared.u8 	%r1088, [%rd931];
	mul.wide.u32 	%rd932, %r1088, 4;
	add.s64 	%rd933, %rd260, %rd932;
	ld.shared.u32 	%r1089, [%rd933];
	xor.b32  	%r1090, %r1086, %r1089;
	st.local.u32 	[%rd1182+180], %r1090;
	shr.u32 	%r1092, %r784, 24;
	mul.wide.u32 	%rd934, %r1092, 4;
	add.s64 	%rd935, %rd1177, %rd934;
	ld.shared.u8 	%r1093, [%rd935];
	mul.wide.u32 	%rd936, %r1093, 4;
	add.s64 	%rd937, %rd245, %rd936;
	bfe.u32 	%r1094, %r784, 16, 8;
	mul.wide.u32 	%rd938, %r1094, 4;
	add.s64 	%rd939, %rd1177, %rd938;
	ld.shared.u8 	%r1095, [%rd939];
	mul.wide.u32 	%rd940, %r1095, 4;
	add.s64 	%rd941, %rd250, %rd940;
	ld.shared.u32 	%r1096, [%rd941];
	ld.shared.u32 	%r1097, [%rd937];
	xor.b32  	%r1098, %r1096, %r1097;
	bfe.u32 	%r1099, %r784, 8, 8;
	mul.wide.u32 	%rd942, %r1099, 4;
	add.s64 	%rd943, %rd1177, %rd942;
	ld.shared.u8 	%r1100, [%rd943];
	mul.wide.u32 	%rd944, %r1100, 4;
	add.s64 	%rd945, %rd255, %rd944;
	ld.shared.u32 	%r1101, [%rd945];
	xor.b32  	%r1102, %r1098, %r1101;
	and.b32  	%r1103, %r784, 255;
	mul.wide.u32 	%rd946, %r1103, 4;
	add.s64 	%rd947, %rd1177, %rd946;
	ld.shared.u8 	%r1104, [%rd947];
	mul.wide.u32 	%rd948, %r1104, 4;
	add.s64 	%rd949, %rd260, %rd948;
	ld.shared.u32 	%r1105, [%rd949];
	xor.b32  	%r1106, %r1102, %r1105;
	st.local.u32 	[%rd1182+184], %r1106;
	shr.u32 	%r1108, %r785, 24;
	mul.wide.u32 	%rd950, %r1108, 4;
	add.s64 	%rd951, %rd1177, %rd950;
	ld.shared.u8 	%r1109, [%rd951];
	mul.wide.u32 	%rd952, %r1109, 4;
	add.s64 	%rd953, %rd245, %rd952;
	bfe.u32 	%r1110, %r785, 16, 8;
	mul.wide.u32 	%rd954, %r1110, 4;
	add.s64 	%rd955, %rd1177, %rd954;
	ld.shared.u8 	%r1111, [%rd955];
	mul.wide.u32 	%rd956, %r1111, 4;
	add.s64 	%rd957, %rd250, %rd956;
	ld.shared.u32 	%r1112, [%rd957];
	ld.shared.u32 	%r1113, [%rd953];
	xor.b32  	%r1114, %r1112, %r1113;
	bfe.u32 	%r1115, %r785, 8, 8;
	mul.wide.u32 	%rd958, %r1115, 4;
	add.s64 	%rd959, %rd1177, %rd958;
	ld.shared.u8 	%r1116, [%rd959];
	mul.wide.u32 	%rd960, %r1116, 4;
	add.s64 	%rd961, %rd255, %rd960;
	ld.shared.u32 	%r1117, [%rd961];
	xor.b32  	%r1118, %r1114, %r1117;
	and.b32  	%r1119, %r785, 255;
	mul.wide.u32 	%rd962, %r1119, 4;
	add.s64 	%rd963, %rd1177, %rd962;
	ld.shared.u8 	%r1120, [%rd963];
	mul.wide.u32 	%rd964, %r1120, 4;
	add.s64 	%rd965, %rd260, %rd964;
	ld.shared.u32 	%r1121, [%rd965];
	xor.b32  	%r1122, %r1118, %r1121;
	st.local.u32 	[%rd1182+188], %r1122;
	shr.u32 	%r1124, %r786, 24;
	mul.wide.u32 	%rd966, %r1124, 4;
	add.s64 	%rd967, %rd1177, %rd966;
	ld.shared.u8 	%r1125, [%rd967];
	mul.wide.u32 	%rd968, %r1125, 4;
	add.s64 	%rd969, %rd245, %rd968;
	bfe.u32 	%r1126, %r786, 16, 8;
	mul.wide.u32 	%rd970, %r1126, 4;
	add.s64 	%rd971, %rd1177, %rd970;
	ld.shared.u8 	%r1127, [%rd971];
	mul.wide.u32 	%rd972, %r1127, 4;
	add.s64 	%rd973, %rd250, %rd972;
	ld.shared.u32 	%r1128, [%rd973];
	ld.shared.u32 	%r1129, [%rd969];
	xor.b32  	%r1130, %r1128, %r1129;
	bfe.u32 	%r1131, %r786, 8, 8;
	mul.wide.u32 	%rd974, %r1131, 4;
	add.s64 	%rd975, %rd1177, %rd974;
	ld.shared.u8 	%r1132, [%rd975];
	mul.wide.u32 	%rd976, %r1132, 4;
	add.s64 	%rd977, %rd255, %rd976;
	ld.shared.u32 	%r1133, [%rd977];
	xor.b32  	%r1134, %r1130, %r1133;
	and.b32  	%r1135, %r786, 255;
	mul.wide.u32 	%rd978, %r1135, 4;
	add.s64 	%rd979, %rd1177, %rd978;
	ld.shared.u8 	%r1136, [%rd979];
	mul.wide.u32 	%rd980, %r1136, 4;
	add.s64 	%rd981, %rd260, %rd980;
	ld.shared.u32 	%r1137, [%rd981];
	xor.b32  	%r1138, %r1134, %r1137;
	st.local.u32 	[%rd1182+192], %r1138;
	ld.local.v2.u32 	{%r1139, %r1140}, [%rd1182+196];
	shr.u32 	%r1142, %r1139, 24;
	mul.wide.u32 	%rd982, %r1142, 4;
	add.s64 	%rd983, %rd1177, %rd982;
	ld.shared.u8 	%r1143, [%rd983];
	mul.wide.u32 	%rd984, %r1143, 4;
	add.s64 	%rd985, %rd245, %rd984;
	bfe.u32 	%r1144, %r1139, 16, 8;
	mul.wide.u32 	%rd986, %r1144, 4;
	add.s64 	%rd987, %rd1177, %rd986;
	ld.shared.u8 	%r1145, [%rd987];
	mul.wide.u32 	%rd988, %r1145, 4;
	add.s64 	%rd989, %rd250, %rd988;
	ld.shared.u32 	%r1146, [%rd989];
	ld.shared.u32 	%r1147, [%rd985];
	xor.b32  	%r1148, %r1146, %r1147;
	bfe.u32 	%r1149, %r1139, 8, 8;
	mul.wide.u32 	%rd990, %r1149, 4;
	add.s64 	%rd991, %rd1177, %rd990;
	ld.shared.u8 	%r1150, [%rd991];
	mul.wide.u32 	%rd992, %r1150, 4;
	add.s64 	%rd993, %rd255, %rd992;
	ld.shared.u32 	%r1151, [%rd993];
	xor.b32  	%r1152, %r1148, %r1151;
	and.b32  	%r1153, %r1139, 255;
	mul.wide.u32 	%rd994, %r1153, 4;
	add.s64 	%rd995, %rd1177, %rd994;
	ld.shared.u8 	%r1154, [%rd995];
	mul.wide.u32 	%rd996, %r1154, 4;
	add.s64 	%rd997, %rd260, %rd996;
	ld.shared.u32 	%r1155, [%rd997];
	xor.b32  	%r1156, %r1152, %r1155;
	ld.local.v4.u32 	{%r1157, %r1158, %r1159, %r1160}, [%rd1182+204];
	st.local.u32 	[%rd1182+196], %r1156;
	shr.u32 	%r1162, %r1140, 24;
	mul.wide.u32 	%rd998, %r1162, 4;
	add.s64 	%rd999, %rd1177, %rd998;
	ld.shared.u8 	%r1163, [%rd999];
	mul.wide.u32 	%rd1000, %r1163, 4;
	add.s64 	%rd1001, %rd245, %rd1000;
	bfe.u32 	%r1164, %r1140, 16, 8;
	mul.wide.u32 	%rd1002, %r1164, 4;
	add.s64 	%rd1003, %rd1177, %rd1002;
	ld.shared.u8 	%r1165, [%rd1003];
	mul.wide.u32 	%rd1004, %r1165, 4;
	add.s64 	%rd1005, %rd250, %rd1004;
	ld.shared.u32 	%r1166, [%rd1005];
	ld.shared.u32 	%r1167, [%rd1001];
	xor.b32  	%r1168, %r1166, %r1167;
	bfe.u32 	%r1169, %r1140, 8, 8;
	mul.wide.u32 	%rd1006, %r1169, 4;
	add.s64 	%rd1007, %rd1177, %rd1006;
	ld.shared.u8 	%r1170, [%rd1007];
	mul.wide.u32 	%rd1008, %r1170, 4;
	add.s64 	%rd1009, %rd255, %rd1008;
	ld.shared.u32 	%r1171, [%rd1009];
	xor.b32  	%r1172, %r1168, %r1171;
	and.b32  	%r1173, %r1140, 255;
	mul.wide.u32 	%rd1010, %r1173, 4;
	add.s64 	%rd1011, %rd1177, %rd1010;
	ld.shared.u8 	%r1174, [%rd1011];
	mul.wide.u32 	%rd1012, %r1174, 4;
	add.s64 	%rd1013, %rd260, %rd1012;
	ld.shared.u32 	%r1175, [%rd1013];
	xor.b32  	%r1176, %r1172, %r1175;
	st.local.u32 	[%rd1182+200], %r1176;
	shr.u32 	%r1178, %r1157, 24;
	mul.wide.u32 	%rd1014, %r1178, 4;
	add.s64 	%rd1015, %rd1177, %rd1014;
	ld.shared.u8 	%r1179, [%rd1015];
	mul.wide.u32 	%rd1016, %r1179, 4;
	add.s64 	%rd1017, %rd245, %rd1016;
	bfe.u32 	%r1180, %r1157, 16, 8;
	mul.wide.u32 	%rd1018, %r1180, 4;
	add.s64 	%rd1019, %rd1177, %rd1018;
	ld.shared.u8 	%r1181, [%rd1019];
	mul.wide.u32 	%rd1020, %r1181, 4;
	add.s64 	%rd1021, %rd250, %rd1020;
	ld.shared.u32 	%r1182, [%rd1021];
	ld.shared.u32 	%r1183, [%rd1017];
	xor.b32  	%r1184, %r1182, %r1183;
	bfe.u32 	%r1185, %r1157, 8, 8;
	mul.wide.u32 	%rd1022, %r1185, 4;
	add.s64 	%rd1023, %rd1177, %rd1022;
	ld.shared.u8 	%r1186, [%rd1023];
	mul.wide.u32 	%rd1024, %r1186, 4;
	add.s64 	%rd1025, %rd255, %rd1024;
	ld.shared.u32 	%r1187, [%rd1025];
	xor.b32  	%r1188, %r1184, %r1187;
	and.b32  	%r1189, %r1157, 255;
	mul.wide.u32 	%rd1026, %r1189, 4;
	add.s64 	%rd1027, %rd1177, %rd1026;
	ld.shared.u8 	%r1190, [%rd1027];
	mul.wide.u32 	%rd1028, %r1190, 4;
	add.s64 	%rd1029, %rd260, %rd1028;
	ld.shared.u32 	%r1191, [%rd1029];
	xor.b32  	%r1192, %r1188, %r1191;
	st.local.u32 	[%rd1182+204], %r1192;
	shr.u32 	%r1194, %r1158, 24;
	mul.wide.u32 	%rd1030, %r1194, 4;
	add.s64 	%rd1031, %rd1177, %rd1030;
	ld.shared.u8 	%r1195, [%rd1031];
	mul.wide.u32 	%rd1032, %r1195, 4;
	add.s64 	%rd1033, %rd245, %rd1032;
	bfe.u32 	%r1196, %r1158, 16, 8;
	mul.wide.u32 	%rd1034, %r1196, 4;
	add.s64 	%rd1035, %rd1177, %rd1034;
	ld.shared.u8 	%r1197, [%rd1035];
	mul.wide.u32 	%rd1036, %r1197, 4;
	add.s64 	%rd1037, %rd250, %rd1036;
	ld.shared.u32 	%r1198, [%rd1037];
	ld.shared.u32 	%r1199, [%rd1033];
	xor.b32  	%r1200, %r1198, %r1199;
	bfe.u32 	%r1201, %r1158, 8, 8;
	mul.wide.u32 	%rd1038, %r1201, 4;
	add.s64 	%rd1039, %rd1177, %rd1038;
	ld.shared.u8 	%r1202, [%rd1039];
	mul.wide.u32 	%rd1040, %r1202, 4;
	add.s64 	%rd1041, %rd255, %rd1040;
	ld.shared.u32 	%r1203, [%rd1041];
	xor.b32  	%r1204, %r1200, %r1203;
	and.b32  	%r1205, %r1158, 255;
	mul.wide.u32 	%rd1042, %r1205, 4;
	add.s64 	%rd1043, %rd1177, %rd1042;
	ld.shared.u8 	%r1206, [%rd1043];
	mul.wide.u32 	%rd1044, %r1206, 4;
	add.s64 	%rd1045, %rd260, %rd1044;
	ld.shared.u32 	%r1207, [%rd1045];
	xor.b32  	%r1208, %r1204, %r1207;
	st.local.u32 	[%rd1182+208], %r1208;
	shr.u32 	%r1210, %r1159, 24;
	mul.wide.u32 	%rd1046, %r1210, 4;
	add.s64 	%rd1047, %rd1177, %rd1046;
	ld.shared.u8 	%r1211, [%rd1047];
	mul.wide.u32 	%rd1048, %r1211, 4;
	add.s64 	%rd1049, %rd245, %rd1048;
	bfe.u32 	%r1212, %r1159, 16, 8;
	mul.wide.u32 	%rd1050, %r1212, 4;
	add.s64 	%rd1051, %rd1177, %rd1050;
	ld.shared.u8 	%r1213, [%rd1051];
	mul.wide.u32 	%rd1052, %r1213, 4;
	add.s64 	%rd1053, %rd250, %rd1052;
	ld.shared.u32 	%r1214, [%rd1053];
	ld.shared.u32 	%r1215, [%rd1049];
	xor.b32  	%r1216, %r1214, %r1215;
	bfe.u32 	%r1217, %r1159, 8, 8;
	mul.wide.u32 	%rd1054, %r1217, 4;
	add.s64 	%rd1055, %rd1177, %rd1054;
	ld.shared.u8 	%r1218, [%rd1055];
	mul.wide.u32 	%rd1056, %r1218, 4;
	add.s64 	%rd1057, %rd255, %rd1056;
	ld.shared.u32 	%r1219, [%rd1057];
	xor.b32  	%r1220, %r1216, %r1219;
	and.b32  	%r1221, %r1159, 255;
	mul.wide.u32 	%rd1058, %r1221, 4;
	add.s64 	%rd1059, %rd1177, %rd1058;
	ld.shared.u8 	%r1222, [%rd1059];
	mul.wide.u32 	%rd1060, %r1222, 4;
	add.s64 	%rd1061, %rd260, %rd1060;
	ld.shared.u32 	%r1223, [%rd1061];
	xor.b32  	%r1224, %r1220, %r1223;
	st.local.u32 	[%rd1182+212], %r1224;
	shr.u32 	%r1226, %r1160, 24;
	mul.wide.u32 	%rd1062, %r1226, 4;
	add.s64 	%rd1063, %rd1177, %rd1062;
	ld.shared.u8 	%r1227, [%rd1063];
	mul.wide.u32 	%rd1064, %r1227, 4;
	add.s64 	%rd1065, %rd245, %rd1064;
	bfe.u32 	%r1228, %r1160, 16, 8;
	mul.wide.u32 	%rd1066, %r1228, 4;
	add.s64 	%rd1067, %rd1177, %rd1066;
	ld.shared.u8 	%r1229, [%rd1067];
	mul.wide.u32 	%rd1068, %r1229, 4;
	add.s64 	%rd1069, %rd250, %rd1068;
	ld.shared.u32 	%r1230, [%rd1069];
	ld.shared.u32 	%r1231, [%rd1065];
	xor.b32  	%r1232, %r1230, %r1231;
	bfe.u32 	%r1233, %r1160, 8, 8;
	mul.wide.u32 	%rd1070, %r1233, 4;
	add.s64 	%rd1071, %rd1177, %rd1070;
	ld.shared.u8 	%r1234, [%rd1071];
	mul.wide.u32 	%rd1072, %r1234, 4;
	add.s64 	%rd1073, %rd255, %rd1072;
	ld.shared.u32 	%r1235, [%rd1073];
	xor.b32  	%r1236, %r1232, %r1235;
	and.b32  	%r1237, %r1160, 255;
	mul.wide.u32 	%rd1074, %r1237, 4;
	add.s64 	%rd1075, %rd1177, %rd1074;
	ld.shared.u8 	%r1238, [%rd1075];
	mul.wide.u32 	%rd1076, %r1238, 4;
	add.s64 	%rd1077, %rd260, %rd1076;
	ld.shared.u32 	%r1239, [%rd1077];
	xor.b32  	%r1240, %r1236, %r1239;
	st.local.u32 	[%rd1182+216], %r1240;
	mul.wide.u32 	%rd1078, %r1384, 780;
	add.s64 	%rd1079, %rd1178, %rd1078;
	ld.global.u32 	%r1241, [%rd1079+768];
	setp.eq.s32	%p14, %r1241, 0;
	@%p14 bra 	BB5_12;

	add.s64 	%rd1183, %rd1, 4;
	cvt.u32.u64	%r1394, %rd81;
	shr.u64 	%rd1179, %rd83, 32;
	cvt.u32.u64	%r1393, %rd1179;
	cvt.u32.u64	%r1392, %rd83;
	ld.local.u32 	%r16, [%rd1];
	ld.local.u32 	%r17, [%rd1183];
	ld.local.v2.u32 	{%r1243, %r1244}, [%rd1183+4];
	ld.local.v4.u32 	{%r1245, %r1246, %r1247, %r1248}, [%rd1183+220];
	mov.u32 	%r1391, 0;

BB5_8:
	mov.u32 	%r28, %r1395;
	mov.u32 	%r27, %r1394;
	mov.u32 	%r26, %r1393;
	mov.u32 	%r25, %r1392;
	shr.u32 	%r1274, %r1391, 2;
	shl.b32 	%r1275, %r1274, 2;
	cvt.u64.u32	%rd1082, %r1275;
	add.s64 	%rd1083, %rd1079, %rd1082;
	ld.global.u32 	%r1250, [%rd1083];
	// inline asm
	prmt.b32 %r1395, %r1250, 0, 0x0123;
	// inline asm
	add.s32 	%r1276, %r1274, 1;
	mul.wide.u32 	%rd1084, %r1276, 4;
	add.s64 	%rd1085, %rd1079, %rd1084;
	ld.global.u32 	%r1252, [%rd1085];
	// inline asm
	prmt.b32 %r1394, %r1252, 0, 0x0123;
	// inline asm
	add.s32 	%r1277, %r1274, 2;
	mul.wide.u32 	%rd1086, %r1277, 4;
	add.s64 	%rd1087, %rd1079, %rd1086;
	ld.global.u32 	%r1254, [%rd1087];
	// inline asm
	prmt.b32 %r1393, %r1254, 0, 0x0123;
	// inline asm
	add.s32 	%r1278, %r1274, 3;
	mul.wide.u32 	%rd1088, %r1278, 4;
	add.s64 	%rd1089, %rd1079, %rd1088;
	ld.global.u32 	%r1256, [%rd1089];
	// inline asm
	prmt.b32 %r1392, %r1256, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1257, %r1395, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1259, %r1394, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1261, %r1393, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1263, %r1392, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1265, %r1257, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1267, %r1259, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1269, %r1261, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1271, %r1263, 0, 0x0123;
	// inline asm
	xor.b32  	%r1396, %r16, %r1265;
	xor.b32  	%r1397, %r17, %r1267;
	xor.b32  	%r1398, %r1243, %r1269;
	xor.b32  	%r1399, %r1244, %r1271;
	mov.u32 	%r1400, 4;
	mov.u64 	%rd1187, %rd1;
	bra.uni 	BB5_9;

BB5_19:
	shl.b64 	%rd1133, %rd9, 2;
	add.s64 	%rd1135, %rd245, %rd1133;
	shl.b64 	%rd1136, %rd10, 2;
	add.s64 	%rd1138, %rd250, %rd1136;
	ld.shared.u32 	%r1340, [%rd1138];
	ld.shared.u32 	%r1341, [%rd1135];
	xor.b32  	%r1342, %r1340, %r1341;
	shl.b64 	%rd1139, %rd11, 2;
	add.s64 	%rd1141, %rd255, %rd1139;
	ld.shared.u32 	%r1343, [%rd1141];
	xor.b32  	%r1344, %r1342, %r1343;
	shl.b64 	%rd1142, %rd12, 2;
	add.s64 	%rd1144, %rd260, %rd1142;
	ld.shared.u32 	%r1345, [%rd1144];
	xor.b32  	%r1346, %r1344, %r1345;
	add.s64 	%rd25, %rd1187, 16;
	ld.local.v4.u32 	{%r1347, %r1348, %r1349, %r1350}, [%rd1187+16];
	xor.b32  	%r1396, %r1346, %r1347;
	shl.b64 	%rd1145, %rd14, 2;
	add.s64 	%rd1146, %rd250, %rd1145;
	ld.shared.u32 	%r1352, [%rd1146];
	shl.b64 	%rd1147, %rd13, 2;
	add.s64 	%rd1148, %rd245, %rd1147;
	ld.shared.u32 	%r1353, [%rd1148];
	xor.b32  	%r1354, %r1352, %r1353;
	shl.b64 	%rd1149, %rd15, 2;
	add.s64 	%rd1150, %rd255, %rd1149;
	ld.shared.u32 	%r1355, [%rd1150];
	xor.b32  	%r1356, %r1354, %r1355;
	shl.b64 	%rd1151, %rd16, 2;
	add.s64 	%rd1152, %rd260, %rd1151;
	ld.shared.u32 	%r1357, [%rd1152];
	xor.b32  	%r1358, %r1356, %r1357;
	xor.b32  	%r1397, %r1358, %r1348;
	shl.b64 	%rd1153, %rd18, 2;
	add.s64 	%rd1154, %rd250, %rd1153;
	ld.shared.u32 	%r1360, [%rd1154];
	shl.b64 	%rd1155, %rd17, 2;
	add.s64 	%rd1156, %rd245, %rd1155;
	ld.shared.u32 	%r1361, [%rd1156];
	xor.b32  	%r1362, %r1360, %r1361;
	shl.b64 	%rd1157, %rd19, 2;
	add.s64 	%rd1158, %rd255, %rd1157;
	ld.shared.u32 	%r1363, [%rd1158];
	xor.b32  	%r1364, %r1362, %r1363;
	shl.b64 	%rd1159, %rd20, 2;
	add.s64 	%rd1160, %rd260, %rd1159;
	ld.shared.u32 	%r1365, [%rd1160];
	xor.b32  	%r1366, %r1364, %r1365;
	xor.b32  	%r1398, %r1366, %r1349;
	shl.b64 	%rd1161, %rd22, 2;
	add.s64 	%rd1162, %rd250, %rd1161;
	ld.shared.u32 	%r1368, [%rd1162];
	shl.b64 	%rd1163, %rd21, 2;
	add.s64 	%rd1164, %rd245, %rd1163;
	ld.shared.u32 	%r1369, [%rd1164];
	xor.b32  	%r1370, %r1368, %r1369;
	shl.b64 	%rd1165, %rd23, 2;
	add.s64 	%rd1166, %rd255, %rd1165;
	ld.shared.u32 	%r1371, [%rd1166];
	xor.b32  	%r1372, %r1370, %r1371;
	shl.b64 	%rd1167, %rd24, 2;
	add.s64 	%rd1168, %rd260, %rd1167;
	ld.shared.u32 	%r1373, [%rd1168];
	xor.b32  	%r1374, %r1372, %r1373;
	xor.b32  	%r1399, %r1374, %r1350;
	add.s32 	%r1400, %r1400, 4;
	mov.u64 	%rd1187, %rd25;

BB5_9:
	mov.b32	{%rs1, %rs2}, %r1396;
	shr.u16 	%rs3, %rs2, 8;
	cvt.u64.u16	%rd9, %rs3;
	mov.b32	{%rs4, %rs5}, %r1399;
	cvt.u64.u16	%rd1090, %rs5;
	and.b64  	%rd10, %rd1090, 255;
	mov.b32	{%rs6, %rs7}, %r1398;
	shr.u16 	%rs8, %rs6, 8;
	cvt.u64.u16	%rd11, %rs8;
	mov.b32	{%rs9, %rs10}, %r1397;
	cvt.u64.u16	%rd1091, %rs9;
	and.b64  	%rd12, %rd1091, 255;
	shr.u16 	%rs11, %rs10, 8;
	cvt.u64.u16	%rd13, %rs11;
	cvt.u64.u16	%rd1092, %rs2;
	and.b64  	%rd14, %rd1092, 255;
	shr.u16 	%rs12, %rs4, 8;
	cvt.u64.u16	%rd15, %rs12;
	cvt.u64.u16	%rd1093, %rs6;
	and.b64  	%rd16, %rd1093, 255;
	shr.u16 	%rs13, %rs7, 8;
	cvt.u64.u16	%rd17, %rs13;
	cvt.u64.u16	%rd1094, %rs10;
	and.b64  	%rd18, %rd1094, 255;
	shr.u16 	%rs14, %rs1, 8;
	cvt.u64.u16	%rd19, %rs14;
	cvt.u64.u16	%rd1095, %rs4;
	and.b64  	%rd20, %rd1095, 255;
	shr.u16 	%rs15, %rs5, 8;
	cvt.u64.u16	%rd21, %rs15;
	cvt.u64.u16	%rd1096, %rs7;
	and.b64  	%rd22, %rd1096, 255;
	shr.u16 	%rs16, %rs9, 8;
	cvt.u64.u16	%rd23, %rs16;
	cvt.u64.u16	%rd1097, %rs1;
	and.b64  	%rd24, %rd1097, 255;
	setp.lt.s32	%p15, %r1400, 56;
	@%p15 bra 	BB5_19;

	shl.b64 	%rd1098, %rd9, 2;
	mov.u64 	%rd1099, m11300_comp$s_td4;
	add.s64 	%rd1100, %rd1099, %rd1098;
	ld.shared.u32 	%r1295, [%rd1100];
	and.b32  	%r1296, %r1295, -16777216;
	shl.b64 	%rd1101, %rd10, 2;
	add.s64 	%rd1102, %rd1099, %rd1101;
	ld.shared.u32 	%r1297, [%rd1102];
	and.b32  	%r1298, %r1297, 16711680;
	or.b32  	%r1299, %r1298, %r1296;
	shl.b64 	%rd1103, %rd11, 2;
	add.s64 	%rd1104, %rd1099, %rd1103;
	ld.shared.u32 	%r1300, [%rd1104];
	and.b32  	%r1301, %r1300, 65280;
	or.b32  	%r1302, %r1299, %r1301;
	shl.b64 	%rd1105, %rd12, 2;
	add.s64 	%rd1106, %rd1099, %rd1105;
	ld.shared.u8 	%r1303, [%rd1106];
	or.b32  	%r1304, %r1302, %r1303;
	xor.b32  	%r1280, %r1304, %r1245;
	shl.b64 	%rd1107, %rd13, 2;
	add.s64 	%rd1108, %rd1099, %rd1107;
	ld.shared.u32 	%r1305, [%rd1108];
	and.b32  	%r1306, %r1305, -16777216;
	shl.b64 	%rd1109, %rd14, 2;
	add.s64 	%rd1110, %rd1099, %rd1109;
	ld.shared.u32 	%r1307, [%rd1110];
	and.b32  	%r1308, %r1307, 16711680;
	or.b32  	%r1309, %r1308, %r1306;
	shl.b64 	%rd1111, %rd15, 2;
	add.s64 	%rd1112, %rd1099, %rd1111;
	ld.shared.u32 	%r1310, [%rd1112];
	and.b32  	%r1311, %r1310, 65280;
	or.b32  	%r1312, %r1309, %r1311;
	shl.b64 	%rd1113, %rd16, 2;
	add.s64 	%rd1114, %rd1099, %rd1113;
	ld.shared.u8 	%r1313, [%rd1114];
	or.b32  	%r1314, %r1312, %r1313;
	xor.b32  	%r1282, %r1314, %r1246;
	shl.b64 	%rd1115, %rd17, 2;
	add.s64 	%rd1116, %rd1099, %rd1115;
	ld.shared.u32 	%r1315, [%rd1116];
	and.b32  	%r1316, %r1315, -16777216;
	shl.b64 	%rd1117, %rd18, 2;
	add.s64 	%rd1118, %rd1099, %rd1117;
	ld.shared.u32 	%r1317, [%rd1118];
	and.b32  	%r1318, %r1317, 16711680;
	or.b32  	%r1319, %r1318, %r1316;
	shl.b64 	%rd1119, %rd19, 2;
	add.s64 	%rd1120, %rd1099, %rd1119;
	ld.shared.u32 	%r1320, [%rd1120];
	and.b32  	%r1321, %r1320, 65280;
	or.b32  	%r1322, %r1319, %r1321;
	shl.b64 	%rd1121, %rd20, 2;
	add.s64 	%rd1122, %rd1099, %rd1121;
	ld.shared.u8 	%r1323, [%rd1122];
	or.b32  	%r1324, %r1322, %r1323;
	xor.b32  	%r1284, %r1324, %r1247;
	shl.b64 	%rd1123, %rd21, 2;
	add.s64 	%rd1124, %rd1099, %rd1123;
	ld.shared.u32 	%r1325, [%rd1124];
	and.b32  	%r1326, %r1325, -16777216;
	shl.b64 	%rd1125, %rd22, 2;
	add.s64 	%rd1126, %rd1099, %rd1125;
	ld.shared.u32 	%r1327, [%rd1126];
	and.b32  	%r1328, %r1327, 16711680;
	or.b32  	%r1329, %r1328, %r1326;
	shl.b64 	%rd1127, %rd23, 2;
	add.s64 	%rd1128, %rd1099, %rd1127;
	ld.shared.u32 	%r1330, [%rd1128];
	and.b32  	%r1331, %r1330, 65280;
	or.b32  	%r1332, %r1329, %r1331;
	shl.b64 	%rd1129, %rd24, 2;
	add.s64 	%rd1130, %rd1099, %rd1129;
	ld.shared.u8 	%r1333, [%rd1130];
	or.b32  	%r1334, %r1332, %r1333;
	xor.b32  	%r1286, %r1334, %r1248;
	// inline asm
	prmt.b32 %r1279, %r1280, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1281, %r1282, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1283, %r1284, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1285, %r1286, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1287, %r1279, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1289, %r1281, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1291, %r1283, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r1293, %r1285, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r1335, [%rd1079+768];
	add.s32 	%r1391, %r1391, 16;
	setp.lt.u32	%p16, %r1391, %r1335;
	@%p16 bra 	BB5_8;

	xor.b32  	%r1336, %r1287, %r28;
	setp.eq.s32	%p22, %r1336, 269488144;
	xor.b32  	%r1337, %r1289, %r27;
	setp.eq.s32	%p23, %r1337, 269488144;
	xor.b32  	%r1338, %r1291, %r26;
	setp.eq.s32	%p24, %r1338, 269488144;
	xor.b32  	%r1339, %r1293, %r25;
	setp.eq.s32	%p25, %r1339, 269488144;

BB5_12:
	and.pred  	%p17, %p22, %p23;
	and.pred  	%p18, %p17, %p24;
	and.pred  	%p19, %p18, %p25;
	@!%p19 bra 	BB5_17;
	bra.uni 	BB5_13;

BB5_13:
	ld.param.u32 	%r1385, [m11300_comp_param_32];
	ld.param.u64 	%rd1180, [m11300_comp_param_16];
	mul.wide.u32 	%rd1169, %r1385, 4;
	add.s64 	%rd1170, %rd1180, %rd1169;
	atom.global.add.u32 	%r1376, [%rd1170], 1;
	setp.ne.s32	%p20, %r1376, 0;
	@%p20 bra 	BB5_17;

	ld.param.u64 	%rd1184, [m11300_comp_param_19];
	ld.param.u32 	%r1382, [m11300_comp_param_31];
	atom.global.add.u32 	%r52, [%rd1184], 1;
	setp.lt.u32	%p21, %r52, %r1382;
	@%p21 bra 	BB5_16;
	bra.uni 	BB5_15;

BB5_16:
	ld.param.u32 	%r1386, [m11300_comp_param_32];
	ld.param.u32 	%r1383, [m11300_comp_param_27];
	ld.param.u64 	%rd1181, [m11300_comp_param_14];
	mul.wide.u32 	%rd1171, %r52, 20;
	add.s64 	%rd1172, %rd1181, %rd1171;
	st.global.u32 	[%rd1172], %r1383;
	mov.u32 	%r1378, 0;
	st.global.u32 	[%rd1172+4], %r1378;
	st.global.u32 	[%rd1172+8], %r1386;
	st.global.u32 	[%rd1172+12], %r3;
	st.global.u32 	[%rd1172+16], %r1378;
	bra.uni 	BB5_17;

BB5_15:
	ld.param.u64 	%rd1185, [m11300_comp_param_19];
	atom.global.add.u32 	%r1377, [%rd1185], -1;

BB5_17:
	ret;
}


  